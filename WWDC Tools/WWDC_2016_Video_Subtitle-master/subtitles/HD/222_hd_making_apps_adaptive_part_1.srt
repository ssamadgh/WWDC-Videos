1
00:00:07,516 --> 00:00:18,500
[ Music ]


2
00:00:21,016 --> 00:00:22,046
[ Applause ]


3
00:00:22,046 --> 00:00:24,416
>> Good morning guys, how's
your conference going so far?


4
00:00:24,526 --> 00:00:27,666
My name is Kevin, I'm one of
interface builder engineers


5
00:00:27,666 --> 00:00:30,616
and Brent is going to join
us a little bit later.


6
00:00:30,616 --> 00:00:33,636
And what we want talk to you
guys about today is adaptivity,


7
00:00:33,756 --> 00:00:38,316
which is how do I make one app
that doesn't just look passable


8
00:00:38,556 --> 00:00:41,076
on all our devices right,
but looks freaking awesome.


9
00:00:41,166 --> 00:00:43,826
And so that's what we're
going to talk about today.


10
00:00:44,656 --> 00:00:47,156
And I'm going to give away my
entire presentation right now.


11
00:00:47,586 --> 00:00:49,776
If there's one thing that
you take away it's this,


12
00:00:50,406 --> 00:00:54,286
when it comes to adaptivity
the system is going to do most


13
00:00:54,286 --> 00:00:57,336
of the work for you and so
we're going to unpack this.


14
00:00:57,956 --> 00:01:00,366
I'm going to tell you what the
system is actually doing for you


15
00:01:00,366 --> 00:01:01,336
that would be nice to know.


16
00:01:01,816 --> 00:01:05,325
But also how you guys as
developers will get to interact


17
00:01:05,325 --> 00:01:07,376
and plug into that system.


18
00:01:08,926 --> 00:01:11,306
But before I do I actually
want to step back and I want


19
00:01:11,306 --> 00:01:13,356
to give this a little bit of
motivation here and I want


20
00:01:13,356 --> 00:01:16,496
to tell you why this statement
is actually really good news.


21
00:01:17,286 --> 00:01:19,356
So Apple had a pretty big mouth


22
00:01:19,356 --> 00:01:22,486
on this last year we
sold our 1 billionth iOS.


23
00:01:22,526 --> 00:01:24,556
I don't know about you,
but this number is just


24
00:01:24,556 --> 00:01:26,586
like mind-boggling to me.


25
00:01:27,446 --> 00:01:29,286
Now you make a fair point,


26
00:01:29,686 --> 00:01:32,156
when it comes adaptivity
volume doesn't really matter.


27
00:01:32,846 --> 00:01:33,836
Fair, I'll give that to you.


28
00:01:34,256 --> 00:01:36,996
But we know that it's
not all the same device,


29
00:01:36,996 --> 00:01:39,176
it's not all 1 billion
original iPhones,


30
00:01:39,176 --> 00:01:40,346
so that would be
really cool wouldn't it.


31
00:01:41,196 --> 00:01:43,486
Over the years Apple has
introduced lots of devices


32
00:01:43,486 --> 00:01:46,296
of various form factors
and sizes


33
00:01:46,456 --> 00:01:48,766
and shapes, I mean even colors.


34
00:01:49,996 --> 00:01:53,176
And at Apple we also
believe that regardless


35
00:01:53,176 --> 00:01:56,276
of what device you have you can
hold it however you want whether


36
00:01:56,276 --> 00:01:58,076
that be in portrait
or landscape.


37
00:01:59,046 --> 00:02:01,716
But beyond the physical devices
themselves we also have software


38
00:02:01,716 --> 00:02:06,446
features like slide over and
these multitasking features


39
00:02:06,446 --> 00:02:09,515
as well that just increases
the number of combinations


40
00:02:09,515 --> 00:02:10,696
that your application can be in.


41
00:02:11,846 --> 00:02:13,636
Don't forget things
like dynamic type right,


42
00:02:13,636 --> 00:02:16,106
where the user can
set a font size


43
00:02:16,106 --> 00:02:18,696
and all your applications
are going to react and relay


44
00:02:18,696 --> 00:02:22,006
out right, you're
all doing that?


45
00:02:22,006 --> 00:02:23,326
And then we also have features


46
00:02:23,536 --> 00:02:27,266
like the language
direction whether it's left


47
00:02:27,266 --> 00:02:28,426
to right or right to left.


48
00:02:29,026 --> 00:02:31,846
We also have the display gamut
on those awesome new iPads


49
00:02:31,846 --> 00:02:32,856
that we released this year.


50
00:02:33,316 --> 00:02:35,186
And Apple TV we also
have features


51
00:02:35,186 --> 00:02:37,726
like the interface style
with its light and dark.


52
00:02:38,316 --> 00:02:40,606
So kind of a conservative
estimate for the number


53
00:02:40,606 --> 00:02:42,336
of combinations that your
application can be in,


54
00:02:42,336 --> 00:02:45,356
in iOS applications like
over 300 combinations.


55
00:02:46,316 --> 00:02:46,856
That's a lot.


56
00:02:47,846 --> 00:02:51,136
So that's why this statement
of the system doing work


57
00:02:51,136 --> 00:02:53,336
for you is really good news.


58
00:02:53,526 --> 00:02:56,616
Now the keyword here is most.


59
00:02:57,946 --> 00:03:01,976
There are a lot of ways that
you as developers can plug in


60
00:03:01,976 --> 00:03:03,426
and customize this experience


61
00:03:03,426 --> 00:03:05,106
because you want your
applications to look unique.


62
00:03:05,486 --> 00:03:07,536
And that's what we want
to talk to you guys about.


63
00:03:08,496 --> 00:03:12,456
So first we're going to talk
about the fundamental system


64
00:03:12,456 --> 00:03:14,546
of adaptivity, which we
call the trait system.


65
00:03:14,606 --> 00:03:17,246
And then Brent's going to come
up and give you guys a demo


66
00:03:17,246 --> 00:03:19,576
of how we've improved
the tools to work


67
00:03:19,576 --> 00:03:21,296
with building adaptive
applications.


68
00:03:21,296 --> 00:03:23,696
And that's what we're
going to cover in part 1,


69
00:03:24,066 --> 00:03:25,176
which is today's session.


70
00:03:25,176 --> 00:03:28,496
You're definitely going to want
to come back tomorrow for part 2


71
00:03:28,496 --> 00:03:30,736
because we're going to give
you this like utility knife


72
00:03:30,736 --> 00:03:33,606
of all these additional
technologies and techniques


73
00:03:33,606 --> 00:03:36,426
that you guys can use to make
your applications adaptive.


74
00:03:36,556 --> 00:03:39,166
And then we're going to put it
all together and we're going


75
00:03:39,166 --> 00:03:40,946
to give you guys some
really awesome demos


76
00:03:40,946 --> 00:03:42,396
and examples in code.


77
00:03:42,546 --> 00:03:44,326
All right, so let's
start by talking


78
00:03:44,326 --> 00:03:46,946
about the fundamental
system of adaptivity,


79
00:03:46,946 --> 00:03:48,186
which is called the trait system


80
00:03:48,186 --> 00:03:50,456
and there's three particular
things I want to mention


81
00:03:50,456 --> 00:03:51,756
to you guys about this.


82
00:03:51,756 --> 00:03:53,096
The first thing is I'm
just going to start


83
00:03:53,096 --> 00:03:55,226
by telling you what it is, it's
a pretty good place to start.


84
00:03:55,226 --> 00:03:58,386
And then we're going to laser
in on one particular part


85
00:03:58,386 --> 00:04:00,656
of the trait system, which
we call size classes.


86
00:04:00,656 --> 00:04:02,906
And I think it would be a
really good idea to kind


87
00:04:02,906 --> 00:04:04,036
of give you guys a
little background


88
00:04:04,036 --> 00:04:05,386
about how the system works


89
00:04:05,386 --> 00:04:07,446
because that will make it
really clear how you are going


90
00:04:07,446 --> 00:04:08,286
to interact with it.


91
00:04:10,386 --> 00:04:11,116
So what are traits?


92
00:04:11,756 --> 00:04:14,006
Traits describe the environment


93
00:04:14,376 --> 00:04:16,266
that your application
is running in.


94
00:04:17,516 --> 00:04:20,346
So here's an example of a
trait, the horizontalSizeClass.


95
00:04:20,495 --> 00:04:23,546
And this just describes what
the experience should be


96
00:04:23,546 --> 00:04:26,326
for the available space of your
application horizontally whether


97
00:04:26,326 --> 00:04:28,006
you have a little bit of
space or a lot of space.


98
00:04:28,296 --> 00:04:32,526
Now a trait by itself doesn't
really have any associated value


99
00:04:32,526 --> 00:04:35,746
with it and that's where trait
collections come into play.


100
00:04:35,746 --> 00:04:37,756
You can think of
a trait collection


101
00:04:37,756 --> 00:04:40,056
as pretty much a
dictionary mapping keys


102
00:04:40,056 --> 00:04:42,216
which are traits to values.


103
00:04:42,896 --> 00:04:45,536
Most of the traits have
kind of an enumeration


104
00:04:45,536 --> 00:04:48,666
of possible values, so you know
what you need to be thinking


105
00:04:48,666 --> 00:04:50,746
about as you're building
your applications.


106
00:04:51,866 --> 00:04:54,126
Now trait collections don't
usually have one thing in them


107
00:04:54,126 --> 00:04:56,266
that would be awesome, usually
they have many things in them.


108
00:04:56,266 --> 00:04:57,536
And even the three that you see


109
00:04:57,536 --> 00:05:00,646
on the screen here is even
a supplication of the size


110
00:05:00,646 --> 00:05:02,476
of the trait collections that
you guys will be interacting


111
00:05:02,476 --> 00:05:04,666
with and making your
applications adaptive for.


112
00:05:05,156 --> 00:05:07,736
Let me give you a
few more examples


113
00:05:07,736 --> 00:05:09,036
of what some of the traits are.


114
00:05:09,226 --> 00:05:11,056
So we'll talk more
about size classes.


115
00:05:11,136 --> 00:05:14,396
There's also dynamic type
size, which is new this year.


116
00:05:14,396 --> 00:05:16,106
There's also the
layout direction,


117
00:05:16,106 --> 00:05:17,846
so left to right, right to left.


118
00:05:18,106 --> 00:05:21,716
And the three up here are
examples of layout traits.


119
00:05:22,216 --> 00:05:24,256
Traits can also describe
appearance though.


120
00:05:24,596 --> 00:05:28,856
So what gamut is the display
that you're running on


121
00:05:29,246 --> 00:05:31,276
or for Apple TV what
is the interface style,


122
00:05:31,306 --> 00:05:33,026
is it light or dark.


123
00:05:34,116 --> 00:05:36,506
But traits can also
describe capabilities.


124
00:05:36,586 --> 00:05:38,966
So for example, whether
or not the device


125
00:05:39,036 --> 00:05:41,676
that you're using supports
three touch or not.


126
00:05:42,696 --> 00:05:44,966
If you want a full list
of all the possible traits


127
00:05:44,966 --> 00:05:47,726
that you can make your
applications adaptive over check


128
00:05:47,726 --> 00:05:49,496
out UITraitCollection's
interface.


129
00:05:49,986 --> 00:05:51,486
But now I want to
specifically focus


130
00:05:51,486 --> 00:05:53,646
in on talking about
size classes.


131
00:05:54,886 --> 00:05:59,446
Your application can be in
a lot of different sizes.


132
00:05:59,496 --> 00:06:01,316
This is humorously
a simplification


133
00:06:01,316 --> 00:06:02,456
of what some of those sizes are.


134
00:06:03,486 --> 00:06:06,746
And when you look at this
there's kind of three axes


135
00:06:06,746 --> 00:06:08,336
of customization that
kind of stick out.


136
00:06:08,806 --> 00:06:12,656
So first is the screen size,
second would be the orientation,


137
00:06:13,026 --> 00:06:15,066
and third would be something
that we call adaptation,


138
00:06:15,066 --> 00:06:17,216
this would be like which
multitasking mode you're in.


139
00:06:17,586 --> 00:06:20,196
So one way to do this without
any formal system would be


140
00:06:20,296 --> 00:06:23,016
to look for and respond
to changes in any one


141
00:06:23,016 --> 00:06:25,476
of these things, but
that's a lot of work.


142
00:06:25,906 --> 00:06:31,056
And so what will you do
instead is to base your layout


143
00:06:31,256 --> 00:06:34,776
on the available space for your
application and not on any one


144
00:06:34,776 --> 00:06:36,936
of those three axes
of customization.


145
00:06:37,566 --> 00:06:39,746
So what do I mean by
react to available space?


146
00:06:39,746 --> 00:06:41,176
There's kind of two
ways we react


147
00:06:41,176 --> 00:06:44,276
to available space given
the size of the change.


148
00:06:44,756 --> 00:06:47,486
So there's coarse grain changes
and these will be like changes


149
00:06:47,516 --> 00:06:50,886
from within iPhone to an
iPad, a large change in size.


150
00:06:51,476 --> 00:06:54,166
There's also fine grain
changes, which would be examples


151
00:06:54,166 --> 00:06:58,516
of like going from iPhone
6s to SE smaller changes.


152
00:06:59,056 --> 00:07:01,116
And for each one of
these changes fine


153
00:07:01,116 --> 00:07:03,076
or coarse you're going to
use different techniques,


154
00:07:03,076 --> 00:07:04,886
different technologies
to help you through.


155
00:07:05,646 --> 00:07:08,356
Let's start by talking
about coarse grain changes.


156
00:07:08,806 --> 00:07:11,466
I think we're pretty
familiar with this quote,


157
00:07:11,686 --> 00:07:12,866
it's of my favorite quotes.


158
00:07:13,346 --> 00:07:16,336
We as engineers love to
create layers of indirection


159
00:07:16,576 --> 00:07:17,756
to help us solve problems,


160
00:07:17,756 --> 00:07:20,226
to make things easier,
honestly to be lazy.


161
00:07:20,796 --> 00:07:23,746
So size classes is a
layer of indirection.


162
00:07:24,396 --> 00:07:26,836
Now layers of indirection
always describe some sort


163
00:07:26,836 --> 00:07:28,416
of higher order behavior.


164
00:07:28,886 --> 00:07:30,596
So what's the higher
order behavior


165
00:07:30,596 --> 00:07:34,536
that size class is describing
and that's experience.


166
00:07:35,416 --> 00:07:37,356
Let me give you two
examples here.


167
00:07:37,846 --> 00:07:40,766
So first will be the canonical
example we see this all the


168
00:07:40,766 --> 00:07:41,306
time right.


169
00:07:41,736 --> 00:07:43,326
On iPad we have a master detail


170
00:07:43,326 --> 00:07:45,936
where the information is
presented side-by-side.


171
00:07:46,246 --> 00:07:49,086
A change in the master
reflects in seeing the details


172
00:07:49,086 --> 00:07:50,056
on the right-hand side.


173
00:07:51,156 --> 00:07:53,216
However, on an iPhone where
there's not as much room


174
00:07:53,596 --> 00:07:56,196
that way that we present
information changes.


175
00:07:56,666 --> 00:07:59,196
We instead use a navigation
controller and use more


176
00:07:59,196 --> 00:08:01,946
of a drill in way of
presenting information.


177
00:08:02,856 --> 00:08:04,006
News would be another example.


178
00:08:04,246 --> 00:08:08,076
On the iPad we have this awesome
grid view, it's great to sit


179
00:08:08,076 --> 00:08:11,196
on your couch and just be able
to scroll through stories.


180
00:08:11,616 --> 00:08:13,456
But on my iPhone
it's a table view


181
00:08:13,456 --> 00:08:15,686
where I can just quickly
scroll through with my thumb.


182
00:08:16,496 --> 00:08:20,086
So experience comes down to how
we're presenting information


183
00:08:20,086 --> 00:08:22,116
and when you think about
coarse grain changes


184
00:08:22,116 --> 00:08:25,016
in your applications think
about the kinds of experiences,


185
00:08:25,016 --> 00:08:27,916
the ways you're presenting
information to decide whether


186
00:08:27,916 --> 00:08:30,656
or not or how you're going
to present that information.


187
00:08:31,806 --> 00:08:34,816
So let's get specific for a
second, I was going over kind


188
00:08:34,816 --> 00:08:36,086
of some higher-order things.


189
00:08:36,086 --> 00:08:38,416
What specifically
is size classes?


190
00:08:38,496 --> 00:08:40,676
And this is where we bring
the trait system back in.


191
00:08:41,025 --> 00:08:44,656
So size classes is two traits,
there's a horizontalSizeClass


192
00:08:44,656 --> 00:08:45,966
and there's verticalSizeClass


193
00:08:46,246 --> 00:08:49,516
and there's two possible
values, compact and regular.


194
00:08:50,006 --> 00:08:52,336
Compact just simply means
that you're space constrained.


195
00:08:52,336 --> 00:08:54,166
And so you're going to
want to present information


196
00:08:54,166 --> 00:08:55,866
in a more compact way.


197
00:08:56,716 --> 00:08:58,966
Regular means that you're
not as space constrained


198
00:08:58,966 --> 00:09:02,156
and you should totally feel
free to explore at least


199
00:09:02,156 --> 00:09:04,566
up to the edges of your
12.9 inch iPad Pro.


200
00:09:05,826 --> 00:09:07,996
Now this means that we
have four combinations


201
00:09:08,256 --> 00:09:11,146
of traits and possible values.


202
00:09:12,106 --> 00:09:13,676
Now I just want to point
out real quick here some


203
00:09:13,676 --> 00:09:15,236
of the notation that
I'm using on the slide


204
00:09:15,236 --> 00:09:16,706
because this is notation
that you're going to see


205
00:09:16,706 --> 00:09:18,326
in Interface Builder
and in documentation


206
00:09:18,326 --> 00:09:19,616
and elsewhere in the system.


207
00:09:19,786 --> 00:09:22,346
So this is describing a
size class combination


208
00:09:22,346 --> 00:09:23,686
and there's two things
to look here.


209
00:09:24,106 --> 00:09:27,216
First, it says there's a W
it stands for the width class


210
00:09:27,216 --> 00:09:29,856
and then the value C or
R, so compact or regular.


211
00:09:30,116 --> 00:09:32,616
And then H is for the height
class or the vertical class


212
00:09:32,696 --> 00:09:34,356
that again, has either C or R.


213
00:09:34,466 --> 00:09:35,976
So you're going to see
this in Interface Builder


214
00:09:35,976 --> 00:09:37,486
and you're going to see
this in documentation


215
00:09:37,486 --> 00:09:39,486
and I just want you guys
to be familiar with this.


216
00:09:40,266 --> 00:09:43,216
So how do some of the devices
fit into these combinations?


217
00:09:43,796 --> 00:09:47,636
Well, a compact with experience,
but regular height an example


218
00:09:47,636 --> 00:09:49,876
of that is going to be
our iPhones in portrait,


219
00:09:50,586 --> 00:09:53,646
iPad in contrast is going
to be regular regular


220
00:09:53,646 --> 00:09:55,976
in both orientations
for all orientations.


221
00:09:56,056 --> 00:09:59,696
You're going to see
compact compact with iPhones


222
00:09:59,906 --> 00:10:03,776
in landscape with the notable
exception of the 6s Plus,


223
00:10:03,776 --> 00:10:06,396
which is actually regular
horizontally when you're


224
00:10:06,396 --> 00:10:08,996
in landscape, which is why
you see a master detail


225
00:10:08,996 --> 00:10:11,806
in for example mail when
you're using a 6s Plus.


226
00:10:15,356 --> 00:10:17,526
How does this actually
help me though?


227
00:10:17,526 --> 00:10:18,786
How does this make
my life easier?


228
00:10:19,166 --> 00:10:21,146
Well, one obvious thing is
that instead of thinking


229
00:10:21,146 --> 00:10:24,436
of 300 combinations you
only have to think about 4,


230
00:10:25,046 --> 00:10:26,176
but wait it gets better.


231
00:10:26,756 --> 00:10:29,406
You really only have to
think about two and that's


232
00:10:29,406 --> 00:10:33,896
because the width class is
by far the most common class


233
00:10:33,896 --> 00:10:36,646
or trait that you're going
to have to interact with it.


234
00:10:36,646 --> 00:10:38,186
If we think about all the
traits that are possible,


235
00:10:38,446 --> 00:10:41,316
the layout traits are the
most common kind of category


236
00:10:41,486 --> 00:10:42,726
of traits that you're
going to work with.


237
00:10:43,216 --> 00:10:46,336
And within the layout traits
size classes is the most common


238
00:10:46,616 --> 00:10:48,086
layout trait that you're
going to interact with.


239
00:10:48,426 --> 00:10:52,006
And then specifically within
size classes the width class is


240
00:10:52,006 --> 00:10:53,526
by far the most common class


241
00:10:53,526 --> 00:10:54,716
that you're going
to interact with.


242
00:10:55,186 --> 00:10:57,176
Which means that as you're
designing your applications


243
00:10:57,176 --> 00:10:59,066
and thinking about how you
want them to be different


244
00:10:59,066 --> 00:11:02,616
between iPad and
iPhone think primarily


245
00:11:02,616 --> 00:11:04,486
about the differences
horizontally.


246
00:11:04,486 --> 00:11:06,006
Now certainly guys you're going


247
00:11:06,006 --> 00:11:07,196
to have custom applications
you're going


248
00:11:07,196 --> 00:11:09,206
to do special things,
we understand that.


249
00:11:09,206 --> 00:11:12,486
But certainly that's the most
common case is just thinking


250
00:11:12,486 --> 00:11:14,966
about the width class.


251
00:11:14,966 --> 00:11:19,566
Now the system gets to decide
how devices, orientations,


252
00:11:19,566 --> 00:11:22,026
and adaptations fit
into these combinations.


253
00:11:22,176 --> 00:11:24,266
And what's interesting
about this is


254
00:11:24,266 --> 00:11:27,886
that these combinations can
change on the same device


255
00:11:27,886 --> 00:11:30,086
as the users interacting
with your application right,


256
00:11:30,086 --> 00:11:32,576
I can bring over slide over,
I can go into multitasking,


257
00:11:32,846 --> 00:11:34,756
I can change the
orientation of my device.


258
00:11:35,306 --> 00:11:37,676
And so if you're
using size classes


259
00:11:37,676 --> 00:11:40,106
and you're expressing your
data more declaratively,


260
00:11:40,376 --> 00:11:43,426
the system can do a bunch of
work for you as it transitions


261
00:11:43,426 --> 00:11:45,906
through all these different
devices, orientations


262
00:11:45,906 --> 00:11:47,966
and adaptations past,
present and future.


263
00:11:48,436 --> 00:11:50,226
And that's really, really
helpful and that's going


264
00:11:50,226 --> 00:11:51,486
to make it much easier
for you guys


265
00:11:51,486 --> 00:11:53,386
to make your applications
adaptive.


266
00:11:54,456 --> 00:11:57,506
Let me give you two examples
of some of the dynamic kind


267
00:11:57,506 --> 00:11:59,766
of changes that can
happen on the system.


268
00:12:00,506 --> 00:12:01,486
So here again, we're going back


269
00:12:01,486 --> 00:12:03,106
to our split view
controller for a second here.


270
00:12:03,706 --> 00:12:06,166
And when I'm on an iPad
in landscape we're going


271
00:12:06,166 --> 00:12:08,256
to have those two view
controllers side-by-side,


272
00:12:08,256 --> 00:12:10,316
but when I go to an iPhone,
you know, we collapse it


273
00:12:10,636 --> 00:12:11,776
into a navigation controller.


274
00:12:12,186 --> 00:12:13,856
If you're using UI Split
View Controller you're going


275
00:12:13,856 --> 00:12:15,356
to get this behavior for free.


276
00:12:16,346 --> 00:12:19,096
Now besides just view controller
structure this also applies


277
00:12:19,096 --> 00:12:19,986
to presentations.


278
00:12:20,276 --> 00:12:22,596
So if I have an iPad and I
bring up a popover it's going


279
00:12:22,596 --> 00:12:23,886
to be this callout style.


280
00:12:24,396 --> 00:12:26,256
But if I move to an
iPhone it's going


281
00:12:26,256 --> 00:12:28,236
to be a modal presentation
instead.


282
00:12:28,856 --> 00:12:30,786
So again, if you're
using the kit controls


283
00:12:30,786 --> 00:12:32,116
and the kit presentations
you're going


284
00:12:32,116 --> 00:12:34,076
to get a lot of behavior
for you.


285
00:12:34,486 --> 00:12:35,996
The size classes
are going to change


286
00:12:35,996 --> 00:12:36,986
and your application is going


287
00:12:36,986 --> 00:12:38,606
to automatically adapt,
which is super neat.


288
00:12:38,766 --> 00:12:42,466
So let me talk to you a second
about fine grain changes.


289
00:12:42,466 --> 00:12:44,266
I just want to say one
note about this and that's


290
00:12:44,606 --> 00:12:47,476
within the same size
class you're going to want


291
00:12:47,476 --> 00:12:51,966
to use Auto Layout to react to
the available space changing.


292
00:12:52,316 --> 00:12:55,036
Withy Auto Layout you can
specify the layout relationships


293
00:12:55,036 --> 00:12:56,246
in a very declarative form


294
00:12:56,316 --> 00:12:58,326
and then the system will
automatically move things


295
00:12:58,326 --> 00:13:01,926
and resize things for you as
that available space is changing


296
00:13:02,046 --> 00:13:03,336
at a more fine grain level.


297
00:13:04,766 --> 00:13:08,706
Now there's one more type of
change besides coarse and fine


298
00:13:08,706 --> 00:13:11,036
and I call that medium
grain changes.


299
00:13:11,456 --> 00:13:13,256
I'm not going to tell you
what it is though I'm going


300
00:13:13,256 --> 00:13:15,186
to keep the suspense high
and you're going to come back


301
00:13:15,186 --> 00:13:16,486
for part 2 and they're
going to tell you all


302
00:13:16,486 --> 00:13:18,096
about medium grain changes.


303
00:13:19,196 --> 00:13:21,936
All right, so we've talked
about what size classes are,


304
00:13:21,936 --> 00:13:25,036
we have given you kind of an
overview of the trait system.


305
00:13:25,346 --> 00:13:26,976
What I want to do now is just
give you a little background


306
00:13:26,976 --> 00:13:28,886
about how the system
works and how


307
00:13:28,886 --> 00:13:32,006
as developers you're
going to plug into that.


308
00:13:32,796 --> 00:13:34,776
In a nutshell or in
a sentence rather,


309
00:13:35,026 --> 00:13:37,726
the way the trait system works
is it takes a trait collection


310
00:13:37,966 --> 00:13:38,926
and it propagates it


311
00:13:38,926 --> 00:13:42,836
down through your view hierarchy
giving each stop along the way a


312
00:13:42,836 --> 00:13:44,746
chance to react to
that trait collection.


313
00:13:45,366 --> 00:13:47,436
So it all starts at the screen
level and the screen's going


314
00:13:47,436 --> 00:13:48,476
to have a trait collection.


315
00:13:48,806 --> 00:13:52,166
What's important to note about
this is that the every device


316
00:13:52,166 --> 00:13:53,876
and orientation and
adaptation is going


317
00:13:53,876 --> 00:13:56,366
to have a fully specified
trait collection.


318
00:13:56,686 --> 00:13:57,496
And what I mean by that is


319
00:13:57,496 --> 00:14:00,046
that all the different traits
are going to have values.


320
00:14:00,096 --> 00:14:03,066
Then the screen is going to
pass it down to all the windows


321
00:14:03,066 --> 00:14:06,106
that are on that screen and then
the window is going to pass it


322
00:14:06,106 --> 00:14:08,426
to its root view
controller to its view,


323
00:14:08,426 --> 00:14:10,146
then down to its
subview controllers


324
00:14:10,146 --> 00:14:11,806
and subviews and so on.


325
00:14:12,856 --> 00:14:16,596
Now each stop along the way
here is a class that conforms


326
00:14:16,596 --> 00:14:20,076
to UITraitEnvironment and the
UITraitEnvironment has a key


327
00:14:20,076 --> 00:14:22,816
method called
traitCollectionDidChange.


328
00:14:23,416 --> 00:14:24,826
So at each stop along the way


329
00:14:24,826 --> 00:14:26,326
as this trait collection
is getting propagated


330
00:14:26,326 --> 00:14:28,716
down it's going to call
traitCollectionDidChange.


331
00:14:29,106 --> 00:14:31,966
This is where you as
developers are going to override


332
00:14:32,176 --> 00:14:34,066
and make your applications
adaptive.


333
00:14:34,446 --> 00:14:36,526
So traitCollectionDidChange
is the key method here.


334
00:14:37,696 --> 00:14:40,416
And you're almost exclusively
going to override this


335
00:14:40,536 --> 00:14:42,676
at the view controller
and the view level.


336
00:14:43,676 --> 00:14:46,446
Now that was a pretty simple
linear example what's a little


337
00:14:46,446 --> 00:14:47,736
bit more complicated example?


338
00:14:48,136 --> 00:14:50,456
So let's go to an iPad
here in landscape.


339
00:14:50,496 --> 00:14:52,336
We have our screen, just going
to go to the window and down


340
00:14:52,336 --> 00:14:53,686
to the view split view
controller and so on.


341
00:14:54,156 --> 00:14:56,726
Now here is where we see a
little bit of a change here


342
00:14:57,076 --> 00:14:59,296
and that's as the trait
collection is getting propagated


343
00:14:59,296 --> 00:15:02,156
down you can actually
change the trait collection


344
00:15:02,156 --> 00:15:04,446
as it gets propagated to
child view controllers.


345
00:15:04,856 --> 00:15:06,666
So the split view controller
is going to do this for you.


346
00:15:06,986 --> 00:15:07,986
So what it's going
to do is it's going


347
00:15:07,986 --> 00:15:10,236
to change the trait
collection that it passes off


348
00:15:10,236 --> 00:15:11,706
to the master view controller.


349
00:15:11,706 --> 00:15:14,716
It's going to change
that horizontalSizeClass


350
00:15:15,006 --> 00:15:17,516
to a compact size
class and it's going


351
00:15:17,516 --> 00:15:19,276
to pass the regular
one off to the detail.


352
00:15:19,936 --> 00:15:21,086
You guys can do this too


353
00:15:21,086 --> 00:15:24,256
as you build your own custom
container view controllers,


354
00:15:24,626 --> 00:15:28,416
but most commonly you
won't need to do that.


355
00:15:28,666 --> 00:15:30,886
Here's an example of what
traitCollectionDidChange might


356
00:15:30,886 --> 00:15:31,276
look like.


357
00:15:31,306 --> 00:15:33,746
I'm going to walk you
through a few key things here.


358
00:15:34,046 --> 00:15:36,046
First, in order for the system
to do a lot of the work for you,


359
00:15:36,046 --> 00:15:37,196
you want to make
sure you call super.


360
00:15:38,056 --> 00:15:41,036
Next, you want to only
do work if the traits


361
00:15:41,036 --> 00:15:42,906
that you're interested
in are actually changing.


362
00:15:43,526 --> 00:15:45,726
Now I hear you questioning
Kevin,


363
00:15:45,726 --> 00:15:47,836
traitCollectionDidChange
getting called doesn't that mean


364
00:15:47,836 --> 00:15:48,656
that traits are changing?


365
00:15:48,816 --> 00:15:49,746
That is absolutely true.


366
00:15:50,156 --> 00:15:53,666
Trait collection gets called
though for any trait changing.


367
00:15:54,196 --> 00:15:56,356
Typically, your application
is only going to be interested


368
00:15:56,356 --> 00:15:59,916
in a few traits and most
commonly just the horizontal


369
00:16:00,356 --> 00:16:01,066
size class.


370
00:16:01,406 --> 00:16:02,266
And so you want to make sure


371
00:16:02,266 --> 00:16:05,246
that you're not doing any extra
work if that particular trait


372
00:16:05,246 --> 00:16:07,086
that you're interested
in is not changing.


373
00:16:08,046 --> 00:16:11,336
Next, I'm going to switch
over the possible values


374
00:16:11,336 --> 00:16:13,346
for the horizontalSizeClass.


375
00:16:13,396 --> 00:16:14,656
As just a side note here,


376
00:16:15,056 --> 00:16:18,246
I really prefer using switch
statements when I'm working


377
00:16:18,246 --> 00:16:21,706
with enumerations in both Swift
and Objective-C because it means


378
00:16:21,706 --> 00:16:24,596
that if the definition
that enumeration changes


379
00:16:24,596 --> 00:16:28,006
if a new case comes in I'm
going to get build time warnings


380
00:16:28,366 --> 00:16:30,146
if I'm using an exhaustive
switch statement.


381
00:16:30,486 --> 00:16:32,636
So I would just really encourage
you guys to do that as well,


382
00:16:32,636 --> 00:16:34,206
that's really saved
me a lot of times.


383
00:16:35,096 --> 00:16:37,356
So then for example if
this value is compact,


384
00:16:37,356 --> 00:16:39,406
then I would go off
and set my constraints.


385
00:16:39,806 --> 00:16:42,766
So for any view, for any
view controller that I want


386
00:16:42,766 --> 00:16:44,386
to be adaptive I would need


387
00:16:44,386 --> 00:16:47,006
to override
traitCollectionDidChange.


388
00:16:47,176 --> 00:16:49,586
So again, this is going
to get called for anything


389
00:16:49,586 --> 00:16:51,356
that conforms to
UITraitEnvironment.


390
00:16:51,966 --> 00:16:54,536
And this is where you're
going to do your adaptivity.


391
00:16:55,376 --> 00:16:57,426
Now it might seem like
a lot of work to have


392
00:16:57,426 --> 00:16:59,426
to implement
traitCollectionDidChange


393
00:16:59,426 --> 00:17:01,576
for every single view
controller and every single view


394
00:17:01,576 --> 00:17:03,626
for all the possible
changes in your application.


395
00:17:04,215 --> 00:17:05,526
A lot of things can change.


396
00:17:05,986 --> 00:17:09,126
So that's why there's a number
of systems that will react


397
00:17:09,126 --> 00:17:11,126
to traitCollectionDidChange
for you.


398
00:17:12,096 --> 00:17:14,726
So for example, one system
would be Interface Builder.


399
00:17:14,816 --> 00:17:17,486
If you're using Interface
Builder to build your interface


400
00:17:17,806 --> 00:17:19,746
and you're using
adaptivity and size class


401
00:17:20,056 --> 00:17:22,226
within Interface Builder
the system knows how


402
00:17:22,226 --> 00:17:25,256
to automatically apply that as
the trait collection changes.


403
00:17:26,056 --> 00:17:27,806
Another example would
be asset catalogs.


404
00:17:28,116 --> 00:17:30,256
You can specify images
for different gamuts,


405
00:17:30,256 --> 00:17:32,576
for different size classes,
different scale factors


406
00:17:32,746 --> 00:17:34,726
and those will automatically
be applied again


407
00:17:34,726 --> 00:17:36,126
in traitCollectionDidChange.


408
00:17:36,926 --> 00:17:40,676
And then finally, UIAppearance
can also be customized


409
00:17:40,916 --> 00:17:41,886
for trait collection.


410
00:17:41,886 --> 00:17:44,616
So you could for example set
up different color schemes


411
00:17:44,616 --> 00:17:48,036
for light and dark mode in Apple
TV and those changes will again,


412
00:17:48,036 --> 00:17:49,366
automatically be applied


413
00:17:49,666 --> 00:17:51,266
in traitCollectionDidChange
for you.


414
00:17:51,266 --> 00:17:53,446
So you really want to take
advantage of these systems


415
00:17:53,446 --> 00:17:55,406
that respond to this for
you because it allows you


416
00:17:55,406 --> 00:17:58,596
to be very declarative about
how you want your interface


417
00:17:58,596 --> 00:17:59,866
to react and to adapt.


418
00:17:59,946 --> 00:18:02,276
And it makes it really easy
to follow and maintain.


419
00:18:03,656 --> 00:18:06,436
So just to recap
a couple takeaways


420
00:18:06,436 --> 00:18:07,386
that we've seen so far.


421
00:18:07,806 --> 00:18:11,436
Traits describe the environment
that your application is running


422
00:18:11,436 --> 00:18:14,646
in and a trait collection is
going to be a bunch of traits


423
00:18:14,646 --> 00:18:16,106
with their associated values.


424
00:18:16,296 --> 00:18:20,606
These could be layout traits,
they could be appearance traits,


425
00:18:20,606 --> 00:18:21,936
they could be capabilities
traits.


426
00:18:23,066 --> 00:18:24,936
You want to override
traitCollectionDidChange


427
00:18:24,936 --> 00:18:26,856
to make your application
adaptive


428
00:18:27,016 --> 00:18:29,106
and you want take advantage
of those systems that respond


429
00:18:29,106 --> 00:18:30,646
to traitCollectionDidChange
for you.


430
00:18:31,756 --> 00:18:34,976
The size classes describe the
experience of your application,


431
00:18:35,276 --> 00:18:37,206
how is your information
laid out.


432
00:18:38,036 --> 00:18:40,666
And then just to drive it home
again, the system is going


433
00:18:40,666 --> 00:18:42,466
to be able to do so
much work for you


434
00:18:42,466 --> 00:18:44,166
if you're taking
advantage of these tools


435
00:18:44,166 --> 00:18:44,786
that we're giving you.


436
00:18:46,526 --> 00:18:49,396
Now I could draw on
for another 20 minutes


437
00:18:49,396 --> 00:18:51,326
about how awesome aptivity is,


438
00:18:51,836 --> 00:18:53,676
but really to see how
cool it is you really want


439
00:18:53,676 --> 00:18:54,646
to see it in action.


440
00:18:55,026 --> 00:18:57,536
And so I want to bring up
Brent to give you guys a demo


441
00:18:57,826 --> 00:18:59,746
of the changes that we have
been making to the tools


442
00:18:59,876 --> 00:19:01,476
to improve our workflows
with adaptivity.


443
00:19:01,716 --> 00:19:02,976
So the one and only Brent Shank.


444
00:19:03,516 --> 00:19:08,836
[ Applause ]


445
00:19:09,336 --> 00:19:09,956
>> Thank you Kevin.


446
00:19:10,356 --> 00:19:12,516
So now that you understand
the basic building blocks


447
00:19:12,516 --> 00:19:14,596
of adding adaptivity
to your applications.


448
00:19:14,776 --> 00:19:16,696
So that's traits,
trait collections


449
00:19:16,696 --> 00:19:19,546
and size classes I'm going
to show you how Xcode


450
00:19:19,546 --> 00:19:22,306
and the Interface Builder editor
make it really easy to do this.


451
00:19:22,456 --> 00:19:23,736
So let's go over to
the demo machine.


452
00:19:24,406 --> 00:19:27,000
It's a long way over here man.


453
00:19:32,046 --> 00:19:33,636
Okay, so I thought
it would be useful


454
00:19:33,636 --> 00:19:38,416
to build a really simple view to
really focus on the fundamentals


455
00:19:38,416 --> 00:19:40,106
of using the trait
collection system


456
00:19:40,536 --> 00:19:41,946
to add a little bit
of adaptivity.


457
00:19:42,496 --> 00:19:44,096
So here's what we're
going to build.


458
00:19:44,096 --> 00:19:47,676
This is simple, this describes
a location I chose Tenaya Lake,


459
00:19:47,676 --> 00:19:48,376
you should definitely put it


460
00:19:48,376 --> 00:19:49,786
on your bucket list
it's a great place


461
00:19:49,786 --> 00:19:50,956
in Yosemite to see one day.


462
00:19:51,396 --> 00:19:53,466
So this view shows
us a label at the top


463
00:19:53,466 --> 00:19:55,656
and at the bottom is
an image of the place.


464
00:19:56,076 --> 00:19:58,096
And notice that on
iPad there are a couple


465
00:19:58,096 --> 00:19:59,536
of different changes,
a couple of things


466
00:19:59,536 --> 00:20:00,846
that aren't present on iPhone.


467
00:20:01,816 --> 00:20:04,626
You see at the top the label
looks a little bit different


468
00:20:04,886 --> 00:20:06,186
and in fact, there's
a whole another view


469
00:20:06,266 --> 00:20:07,726
that appears just on iPad.


470
00:20:07,726 --> 00:20:09,676
So we're going to build
all this right now


471
00:20:10,006 --> 00:20:13,116
and you'll see how easy it is
to do with the tools in Xcode 8.


472
00:20:13,926 --> 00:20:15,816
So I've already created
this project and I'll switch


473
00:20:15,816 --> 00:20:20,036
over to this other tab where
I have the storyboard loaded.


474
00:20:20,626 --> 00:20:22,676
So there are couple
of things to look


475
00:20:22,676 --> 00:20:26,236
at in the Interface
Builder canvas in Xcode 8.


476
00:20:26,766 --> 00:20:28,456
First off, is look how
this view is rendered.


477
00:20:29,336 --> 00:20:31,736
It looks like an iPhone
6s in portrait and that's


478
00:20:31,736 --> 00:20:33,006
because it actually is.


479
00:20:33,006 --> 00:20:34,476
We're actually using
the simulator


480
00:20:34,736 --> 00:20:35,756
to render this content,


481
00:20:35,756 --> 00:20:38,376
so you now get pixel
perfect rendering right


482
00:20:38,376 --> 00:20:39,376
in the design canvas.


483
00:20:39,476 --> 00:20:42,256
We think this is going to be a
huge benefit to your workflow


484
00:20:42,476 --> 00:20:44,126
as you try to take
these beautiful designs


485
00:20:44,126 --> 00:20:46,886
from a designer and translate
it into your application.


486
00:20:47,556 --> 00:20:50,556
The other thing to point out
is that [applause], thank you.


487
00:20:54,286 --> 00:20:56,916
The other big changes
is that now scenes


488
00:20:56,916 --> 00:20:59,196
in Interface Builder canvas
are always being rendered


489
00:20:59,196 --> 00:21:02,036
in the dimensions of actual
ethical devices or one


490
00:21:02,036 --> 00:21:04,366
of their configurations
and that's a big change


491
00:21:04,366 --> 00:21:05,576
from previous versions of Xcode.


492
00:21:06,366 --> 00:21:09,136
Let's take another look at
something else that's new.


493
00:21:09,216 --> 00:21:11,806
I'm going to zoom in
here at the bottom bar,


494
00:21:11,806 --> 00:21:13,646
so you can see everything here.


495
00:21:13,916 --> 00:21:16,376
So this is the bottom button bar
in the Interface Builder canvas,


496
00:21:16,626 --> 00:21:17,786
it's been around
for a long time.


497
00:21:18,096 --> 00:21:20,586
Over on the right-hand side
you can see the controls


498
00:21:20,586 --> 00:21:21,866
for adding all the
layout constraints,


499
00:21:22,136 --> 00:21:23,206
I hope you're familiar
with those.


500
00:21:23,646 --> 00:21:26,916
And in the middle are the new
zoom in controls in Xcode 8.


501
00:21:27,196 --> 00:21:29,776
And if you haven't yet installed
the betas and played with this,


502
00:21:29,776 --> 00:21:31,676
it's amazing to be able
to edit your scenes


503
00:21:31,966 --> 00:21:33,686
at any magnification
level you want.


504
00:21:33,686 --> 00:21:34,976
So definitely check
that out it's awesome.


505
00:21:35,516 --> 00:21:39,876
[ Applause ]


506
00:21:40,376 --> 00:21:42,866
But today I'm going to talk
about this button over here.


507
00:21:43,736 --> 00:21:45,816
So it says View As
iPhone 6s and then


508
00:21:45,816 --> 00:21:47,716
in parenthesis it's got
this notation it says,


509
00:21:48,146 --> 00:21:51,656
if you can't read it back
there, it says wC hR.


510
00:21:51,916 --> 00:21:53,536
So this is telling
me the size class


511
00:21:53,616 --> 00:21:55,266
of the current device
configuration


512
00:21:55,266 --> 00:21:55,906
that I'm looking at.


513
00:21:56,376 --> 00:21:57,816
It's an iPhone 6s in portrait,


514
00:21:58,046 --> 00:22:01,046
which means that it's a compact
width regular height device.


515
00:22:01,046 --> 00:22:03,236
So it's a little bit of
terminology Kevin's talked about


516
00:22:03,386 --> 00:22:06,446
and I'll show you how you can
apply that to add adaptations.


517
00:22:07,246 --> 00:22:10,336
So the scene is currently
being rendered as an iPhone 6s


518
00:22:10,336 --> 00:22:12,156
in portrait what if I
want to change this?


519
00:22:12,516 --> 00:22:15,476
Well, all you need to do
is click the View As button


520
00:22:15,476 --> 00:22:17,426
and it opens the new
Device Configuration bar.


521
00:22:17,826 --> 00:22:19,856
This is brand new in Xcode
8 and it's really cool.


522
00:22:25,096 --> 00:22:27,516
So I zoomed in here so you can
see exactly what's going on.


523
00:22:27,516 --> 00:22:29,716
So there are a couple
of stacks of icons here


524
00:22:29,946 --> 00:22:32,366
and the leftmost stack
represents all the different


525
00:22:32,416 --> 00:22:34,896
device sizes that
Apple currently ships.


526
00:22:34,896 --> 00:22:37,066
So we have the largest
iPad on the left


527
00:22:37,356 --> 00:22:39,496
and the smallest
iPhone on the right.


528
00:22:39,876 --> 00:22:42,186
And next to that is
a stack of buttons


529
00:22:42,186 --> 00:22:44,126
that lets you select the
orientation that you want


530
00:22:44,126 --> 00:22:44,896
to view the scenes in.


531
00:22:45,236 --> 00:22:46,196
So I'm going to do
that right now.


532
00:22:46,196 --> 00:22:48,276
I'm going to switch
to landscape.


533
00:22:48,276 --> 00:22:50,506
So right in the design canvas
you can cycle through all


534
00:22:50,506 --> 00:22:52,826
of these devices
and all orientations


535
00:22:52,826 --> 00:22:55,506
and see how your content
is going to be laid out


536
00:22:55,506 --> 00:22:56,636
and rendered, which
is really cool.


537
00:22:57,906 --> 00:22:58,226
Thank you.


538
00:23:00,436 --> 00:23:04,006
So iPhones are interesting
of course,


539
00:23:04,006 --> 00:23:06,216
but iPads are even
more interesting.


540
00:23:06,216 --> 00:23:07,306
I'm going to select
one right now


541
00:23:07,766 --> 00:23:09,876
and you can see what happened
is there's actually another set


542
00:23:09,876 --> 00:23:12,626
of icons that appeared and
this represents adaptation.


543
00:23:12,766 --> 00:23:14,746
So for iPhone there's
just one adaptation


544
00:23:14,846 --> 00:23:16,756
for each orientation,
that's full screen.


545
00:23:17,396 --> 00:23:20,096
For iPad it's more
interesting because your app --


546
00:23:20,506 --> 00:23:22,176
your users can choose
to run your app


547
00:23:22,176 --> 00:23:23,666
in slide over or split view.


548
00:23:24,126 --> 00:23:25,586
So that's what these
adaptations are here.


549
00:23:25,726 --> 00:23:29,446
So if I select this one you can
see that the scene now renders


550
00:23:29,496 --> 00:23:32,216
as the app would if
your user was running it


551
00:23:32,216 --> 00:23:33,526
in slide over on iPad.


552
00:23:34,036 --> 00:23:36,526
So think about this right in
the design canvas you can cycle


553
00:23:36,526 --> 00:23:38,406
through all of these
configurations,


554
00:23:38,706 --> 00:23:40,596
all these orientations,
all these devices


555
00:23:40,876 --> 00:23:42,866
and see how your content
is going to get laid out.


556
00:23:42,866 --> 00:23:44,696
I mean, this is a really
powerful new workflow,


557
00:23:44,696 --> 00:23:46,976
it's going to save
you a lot of time.


558
00:23:47,516 --> 00:23:51,876
[ Applause ]


559
00:23:52,376 --> 00:23:53,706
Okay, so those are some
of the new features


560
00:23:53,706 --> 00:23:55,076
in Interface Builder in Xcode 8.


561
00:23:55,326 --> 00:23:57,976
Now let's get down to the task
of actually building this view.


562
00:23:58,536 --> 00:24:00,036
So here's what we're
going to do first.


563
00:24:00,116 --> 00:24:02,006
We're going to add this label
and we're going to add it


564
00:24:02,006 --> 00:24:05,206
in such a way that it applies
to all device configurations.


565
00:24:05,306 --> 00:24:07,426
This is probably
something you do most


566
00:24:07,426 --> 00:24:08,706
of the time in Interface
Builder.


567
00:24:09,236 --> 00:24:11,236
You're usually not making
customizations based


568
00:24:11,236 --> 00:24:13,106
on size classes a lot.


569
00:24:13,376 --> 00:24:14,826
So let's do this right now.


570
00:24:15,376 --> 00:24:19,276
So I have the Device
Configuration bar


571
00:24:19,386 --> 00:24:20,566
and iPads selected there,


572
00:24:20,566 --> 00:24:23,146
it doesn't really matter what's
selected because what I'm going


573
00:24:23,146 --> 00:24:25,336
to do is going to
apply to everything.


574
00:24:26,096 --> 00:24:27,456
So I found a label


575
00:24:27,456 --> 00:24:30,236
in the Interface Builder
library, I will drag it out.


576
00:24:30,386 --> 00:24:32,106
And now what I'm
going to do I'm going


577
00:24:32,106 --> 00:24:33,516
to add some Auto
Layout constraints.


578
00:24:33,896 --> 00:24:38,156
And as Kevin said, this is one
of the systems that we provide


579
00:24:38,596 --> 00:24:41,736
that actually makes
your UIs adapt


580
00:24:41,806 --> 00:24:43,366
to all different
device configurations.


581
00:24:43,366 --> 00:24:45,136
So I'm going to add
some constraints.


582
00:24:45,716 --> 00:24:50,186
I'm going to pin this to
the top as vertical spacing.


583
00:24:50,606 --> 00:24:53,046
I'm going to center it
horizontally in the container


584
00:24:53,446 --> 00:24:55,776
and I'm going to add a vertical
spacing constraint between it


585
00:24:56,206 --> 00:24:58,766
and the image view
below vertical spacing.


586
00:24:59,476 --> 00:25:01,646
And I've got some
content I will paste in


587
00:25:01,646 --> 00:25:03,686
and it looks like that's right.


588
00:25:03,686 --> 00:25:07,106
And I had a constraint
between this image view


589
00:25:07,106 --> 00:25:09,056
and the top layout guide,
which I don't need any more


590
00:25:09,136 --> 00:25:12,326
because I've added a label,
so I'll delete that now.


591
00:25:13,076 --> 00:25:14,816
So how do I know that
I did everything right


592
00:25:14,816 --> 00:25:15,856
and added the right constraints?


593
00:25:15,856 --> 00:25:17,706
Well this is where the Device
Configuration bar comes


594
00:25:17,706 --> 00:25:19,156
in because it's really easy


595
00:25:19,516 --> 00:25:21,096
to see what it looks
like on iPhone.


596
00:25:21,336 --> 00:25:23,156
And you can see that it's
staying in the right place


597
00:25:23,156 --> 00:25:26,226
as I cycle through all
these devices and even


598
00:25:26,226 --> 00:25:28,006
through different
orientations okay.


599
00:25:28,436 --> 00:25:30,956
So that's an operation
you do very commonly


600
00:25:31,226 --> 00:25:34,376
in Interface Builder
every day, very easy.


601
00:25:34,816 --> 00:25:37,266
So now let's start
adding some adaptivity,


602
00:25:37,266 --> 00:25:39,976
some customizations using
the free collection system.


603
00:25:40,696 --> 00:25:41,526
So what are we going to do now?


604
00:25:42,346 --> 00:25:43,606
We're going to change the label,


605
00:25:43,716 --> 00:25:45,636
the font of this
top label up here.


606
00:25:46,006 --> 00:25:47,776
And you see my designer
really wants it


607
00:25:47,776 --> 00:25:50,706
to be System Semibold
36 just for iPads.


608
00:25:51,676 --> 00:25:53,046
So let's go back
to the storyboard.


609
00:25:54,156 --> 00:25:56,986
So when you think about
adding customizations


610
00:25:57,106 --> 00:25:58,836
for a device you
really want to think


611
00:25:58,836 --> 00:26:02,576
about adding a customization for
a particular trait collection


612
00:26:02,576 --> 00:26:04,086
or in this case a size class.


613
00:26:04,576 --> 00:26:08,166
So we're all given designs for
devices for iPads and iPhones,


614
00:26:08,586 --> 00:26:11,286
but as developers you need
to be able to translate


615
00:26:11,286 --> 00:26:13,916
that into size class that
you're meaning to target.


616
00:26:14,236 --> 00:26:15,266
We make that really
easy for you.


617
00:26:15,466 --> 00:26:19,536
So for example, I have an iPad
selected in the Device bar


618
00:26:19,536 --> 00:26:22,806
and the size class and I'll zoom
in here so you can see that,


619
00:26:23,606 --> 00:26:26,016
it now says regular
width, regular height.


620
00:26:26,246 --> 00:26:27,266
Okay, so you don't need to guess


621
00:26:27,266 --> 00:26:29,686
about what size class a
particular device configuration


622
00:26:29,686 --> 00:26:32,386
is you just select that
configuration in the Device bar


623
00:26:32,386 --> 00:26:34,206
and Interface Builder
will tell you what it is.


624
00:26:34,206 --> 00:26:35,886
And that's another great
improvement we think.


625
00:26:36,336 --> 00:26:39,956
So now let's introduce,


626
00:26:40,176 --> 00:26:43,756
let's vary how this label
looks just for that size class.


627
00:26:44,576 --> 00:26:47,556
So I'll select it in
the canvas and let's go


628
00:26:47,626 --> 00:26:48,836
over to the Attributes
Inspector,


629
00:26:48,836 --> 00:26:50,256
which I actually have
selected already.


630
00:26:50,326 --> 00:26:52,026
And I'm going to
zoom in here again


631
00:26:52,066 --> 00:26:54,406
so you can get a closer
look at the inspector.


632
00:26:55,896 --> 00:26:59,646
So you might see out there that
a couple of these attributes,


633
00:26:59,796 --> 00:27:02,396
that is a big cursor, have
a + button next to them.


634
00:27:02,816 --> 00:27:04,336
And so the + button means


635
00:27:04,336 --> 00:27:07,576
that particular attribute can
be customized using the trait


636
00:27:07,576 --> 00:27:08,446
collection system.


637
00:27:09,306 --> 00:27:10,156
So let's do that right now.


638
00:27:10,726 --> 00:27:12,196
I want to change the
font so I click it.


639
00:27:12,196 --> 00:27:14,516
And the menu comes up
here is offering me


640
00:27:14,516 --> 00:27:15,706
to add a customization


641
00:27:15,836 --> 00:27:17,616
for regular width
and regular height.


642
00:27:17,616 --> 00:27:19,066
Well why is it doing that?


643
00:27:19,386 --> 00:27:21,626
Well it's because I
have a regular width,


644
00:27:21,796 --> 00:27:23,936
regular height device
configuration selected,


645
00:27:24,036 --> 00:27:24,726
so that makes sense.


646
00:27:25,906 --> 00:27:28,556
So we'll do that
and what happens is


647
00:27:28,556 --> 00:27:31,196
that the Attributes Inspector
now shows me another row


648
00:27:31,196 --> 00:27:31,656
for font.


649
00:27:32,116 --> 00:27:33,656
And again, it has
that same notation


650
00:27:34,066 --> 00:27:37,416
in the Attributes Inspector
as I see in the Device bar.


651
00:27:37,566 --> 00:27:39,316
Okay, so that's why
it's so important


652
00:27:39,406 --> 00:27:41,356
that what's here is you
understand what's going on.


653
00:27:45,586 --> 00:27:47,806
Okay, so let's make the change,
I'll bring up the Font Editor,


654
00:27:48,016 --> 00:27:51,276
I'll select Semibold and since I
always do what my designers want


655
00:27:51,276 --> 00:27:52,546
me to do 36.


656
00:27:53,096 --> 00:27:55,096
There we go and I'll click Done.


657
00:27:55,096 --> 00:27:58,216
And you can see it rendered
and updated on the canvas.


658
00:27:58,216 --> 00:28:02,416
If I select an iPhone what I
would expect to happen happened,


659
00:28:02,596 --> 00:28:04,586
the font remains what
it was before the change


660
00:28:04,676 --> 00:28:07,836
because I only targeted regular
width, regular height devices


661
00:28:08,006 --> 00:28:09,136
for that particular edit.


662
00:28:09,846 --> 00:28:12,866
Okay, so that's an example of
using the Attributes Inspector


663
00:28:12,866 --> 00:28:15,756
to add a customization
based on size class.


664
00:28:16,216 --> 00:28:17,456
So that's the first
customization.


665
00:28:18,116 --> 00:28:22,696
Let's add another one and this
time I want to add this label


666
00:28:22,696 --> 00:28:24,776
and I want to do it
again just for iPad.


667
00:28:25,276 --> 00:28:28,136
So I'll go back to the
storyboard and because I want


668
00:28:28,136 --> 00:28:28,966
to add this customization


669
00:28:28,966 --> 00:28:30,766
for iPad I should select
it in the Device bar.


670
00:28:31,486 --> 00:28:35,086
And let me draw your attention
to this button in the Device bar


671
00:28:35,086 --> 00:28:36,626
that says Vary for
Traits down here.


672
00:28:37,446 --> 00:28:40,146
So when you click this button
it's going to present a popover


673
00:28:40,146 --> 00:28:43,536
and ask you how we want
to introduce the traits,


674
00:28:43,536 --> 00:28:46,346
what kind of traits, the trait
collection you want to target.


675
00:28:47,206 --> 00:28:48,126
So what does this mean?


676
00:28:48,456 --> 00:28:49,556
Well I have a regular width,


677
00:28:49,776 --> 00:28:54,966
regular height size class device
configuration and I can choose


678
00:28:54,966 --> 00:28:56,746
to customize for regular
width, regular height


679
00:28:56,746 --> 00:28:58,716
if I hit click both
of these checkboxes.


680
00:28:59,246 --> 00:29:02,356
But I also can choose to
customize just for regular width


681
00:29:02,496 --> 00:29:06,096
and any height or for any
height and regular width okay.


682
00:29:06,696 --> 00:29:10,316
So I think what I want is to
customize just for regular width


683
00:29:10,786 --> 00:29:13,316
and when I do that the bar
turns this lovely shade of blue


684
00:29:13,316 --> 00:29:14,256
to tell me that I'm going


685
00:29:14,546 --> 00:29:17,496
to be making customizations
based on size class.


686
00:29:18,016 --> 00:29:21,116
Let's take a closer look
at the contents of the bar.


687
00:29:22,086 --> 00:29:22,736
I'll zoom in here.


688
00:29:23,836 --> 00:29:27,356
So you can see it says I'm
varying eight regular width


689
00:29:27,646 --> 00:29:29,446
devices, the device
configurations.


690
00:29:29,886 --> 00:29:33,296
I see iPads both in portrait
and in landscape and in a couple


691
00:29:33,926 --> 00:29:37,136
of the slide over configurations
and that makes sense.


692
00:29:37,266 --> 00:29:39,916
But I also see an iPhone here,
so what's that all about?


693
00:29:40,356 --> 00:29:41,546
Well if I put the mouse cursor


694
00:29:41,546 --> 00:29:45,046
over this I see this is an
iPhone 6s Plus in landscape


695
00:29:45,046 --> 00:29:46,476
and as Kevin said,
because this device is


696
00:29:46,476 --> 00:29:49,616
so big it actually uses the
regular width size class


697
00:29:49,666 --> 00:29:50,296
in landscape.


698
00:29:50,706 --> 00:29:53,186
And this is great and you'll
frequently want to make


699
00:29:53,526 --> 00:29:56,586
and provide a different
experience for that device


700
00:29:56,586 --> 00:29:57,466
in that configuration,


701
00:29:57,636 --> 00:29:58,976
but in this case I
don't want to do that.


702
00:29:58,976 --> 00:30:01,486
I only want to make the
customization for iPad.


703
00:30:02,096 --> 00:30:02,776
So what do I do?


704
00:30:02,896 --> 00:30:04,676
Well I can go back into
the Vary for Traits


705
00:30:04,796 --> 00:30:06,866
and this time I'm going to
vary for both regular width


706
00:30:07,156 --> 00:30:09,846
and regular height and
when I do that notice


707
00:30:09,896 --> 00:30:12,176
that the iPhone disappears
from the bar.


708
00:30:12,876 --> 00:30:15,106
So the edits I'm about
to make will only apply


709
00:30:15,336 --> 00:30:17,736
to these particular
configurations okay.


710
00:30:18,096 --> 00:30:20,336
So let's do that now.


711
00:30:20,336 --> 00:30:23,996
I'm going to drag out a label,
I'm going to put it right there


712
00:30:24,916 --> 00:30:27,366
and I'll add just a
few constraints here


713
00:30:27,366 --> 00:30:30,926
to make sure it stays in the
right place, there we go.


714
00:30:30,926 --> 00:30:32,506
Now I'll click Done Varying.


715
00:30:33,396 --> 00:30:34,846
So let's go back to the
Attributes Inspector


716
00:30:34,846 --> 00:30:37,586
because I want to focus
on a couple of checkboxes


717
00:30:37,586 --> 00:30:38,856
that you've maybe seen before,


718
00:30:39,186 --> 00:30:41,216
I want to make sure you
understand what this is


719
00:30:41,216 --> 00:30:41,606
all about.


720
00:30:42,726 --> 00:30:45,966
So I varied for traits, I
selected width and height,


721
00:30:46,646 --> 00:30:49,076
which means I configured the
bar to make a customization


722
00:30:49,076 --> 00:30:50,326
for regular width,
regular height.


723
00:30:50,776 --> 00:30:53,406
And so when I did that
I dragged out a view,


724
00:30:53,586 --> 00:30:56,566
I added it to a view hierarchy,
but it only installed it


725
00:30:56,806 --> 00:30:59,256
for regular width
and regular height.


726
00:30:59,536 --> 00:31:01,416
So that's what this
checkbox shows me right here.


727
00:31:01,886 --> 00:31:03,906
Most of the time
when you add views


728
00:31:04,026 --> 00:31:06,376
to your scene they'll be
installed for everything,


729
00:31:06,456 --> 00:31:08,766
so they'll appear on all device
configurations regardless


730
00:31:08,766 --> 00:31:09,596
of the size class.


731
00:31:10,336 --> 00:31:13,456
But when I'm in this mode when
the bar is blue when I add views


732
00:31:13,456 --> 00:31:15,816
or when I add Auto Layout
constraints they will get


733
00:31:15,816 --> 00:31:18,256
installed only for the
particular size class


734
00:31:18,256 --> 00:31:20,046
that I'm targeting
for the edit okay.


735
00:31:20,046 --> 00:31:21,896
So that's important
to understand.


736
00:31:22,986 --> 00:31:25,316
So again, to prove
this it can cycle


737
00:31:25,316 --> 00:31:27,696
through iPhones using the
Device Configuration bar


738
00:31:27,766 --> 00:31:28,746
and the label isn't there.


739
00:31:29,166 --> 00:31:31,896
So I did the right thing I added
this view and it only appears


740
00:31:31,896 --> 00:31:35,106
for regular width, regular
height devices okay.


741
00:31:36,436 --> 00:31:39,346
So the next thing we're
going to do is we're going


742
00:31:39,346 --> 00:31:42,346
to make a more surgical
edit using the Device bar.


743
00:31:43,066 --> 00:31:45,396
And as you can see when I cycle


744
00:31:45,396 --> 00:31:48,586
through to an iPhone
there's too much space


745
00:31:48,586 --> 00:31:50,956
between the top label here
and the imagine view below.


746
00:31:50,956 --> 00:31:52,416
Now in fact if I go back


747
00:31:52,416 --> 00:31:54,626
to the design my designer
wants them to be pretty tight.


748
00:31:55,506 --> 00:31:56,526
So how do I do that?


749
00:31:56,646 --> 00:31:58,746
Well what's really cool is


750
00:31:58,746 --> 00:32:01,796
that you can actually customize
an Auto Layout constraint


751
00:32:01,936 --> 00:32:05,806
constant using a variation
like we've been doing


752
00:32:06,096 --> 00:32:07,706
by targeting a size class.


753
00:32:08,466 --> 00:32:09,426
So let's do that right now.


754
00:32:09,426 --> 00:32:11,216
So you can see if I
select the image view,


755
00:32:11,496 --> 00:32:14,686
remember I added this
vertical spacing constraint


756
00:32:14,686 --> 00:32:19,726
between it and there we go.


757
00:32:20,186 --> 00:32:23,186
Okay, so I've clicked
this constraint


758
00:32:23,186 --> 00:32:25,576
and I see this Auto Layout
constraint and I see a bunch


759
00:32:25,576 --> 00:32:26,426
of its attributes here.


760
00:32:27,046 --> 00:32:29,226
You can see the constant
value is 61.


761
00:32:29,226 --> 00:32:31,176
So this is the problem
this value is too big.


762
00:32:31,726 --> 00:32:34,116
Well I can actually edit
this and I can edit it only


763
00:32:34,116 --> 00:32:35,756
for iPhones for compact


764
00:32:35,756 --> 00:32:37,406
with regular height
devices in portrait.


765
00:32:37,926 --> 00:32:40,866
Again, I can click Vary for
Traits, I'll customize on width


766
00:32:41,236 --> 00:32:43,766
and on height and you
can see the contents


767
00:32:43,766 --> 00:32:47,226
of the bar show me iPhones.


768
00:32:48,816 --> 00:32:51,036
But what are all these iPad
configurations in here?


769
00:32:51,286 --> 00:32:54,926
Well remember when your user
is using the iPad in slide over


770
00:32:54,926 --> 00:32:57,256
or split view there's
not that much space.


771
00:32:57,256 --> 00:32:58,946
Your app will be
spaced constrained.


772
00:32:58,946 --> 00:33:01,236
So you really want to
provide an iPhone experience


773
00:33:01,236 --> 00:33:02,396
on iPad in that case.


774
00:33:02,796 --> 00:33:05,496
So this actually makes sense
all of these iPad configurations


775
00:33:05,496 --> 00:33:08,346
that you see here
are also compact


776
00:33:08,346 --> 00:33:09,816
with regular height
configurations.


777
00:33:09,816 --> 00:33:11,356
So this is good, this
is what I want to do.


778
00:33:12,186 --> 00:33:15,186
Okay, so I've gone into Vary
for Traits, the bar is blue


779
00:33:15,186 --> 00:33:18,000
and now I can select
this constraint again.


780
00:33:23,056 --> 00:33:23,556
There we go.


781
00:33:23,556 --> 00:33:27,956
Now notice I'm going to
change this value to say 45


782
00:33:27,956 --> 00:33:29,366
and I'm going to draw
your attention back


783
00:33:29,456 --> 00:33:30,806
to the Attributes Inspector.


784
00:33:31,106 --> 00:33:33,596
So what happens when I
commit this edit just


785
00:33:33,596 --> 00:33:34,936
like what happened
when we customize


786
00:33:34,936 --> 00:33:38,736
for font Interface Builder added
another row for constant right.


787
00:33:39,066 --> 00:33:41,726
And you can see this is
using the same size class


788
00:33:41,756 --> 00:33:43,026
that I configured in the bar.


789
00:33:43,516 --> 00:33:45,586
So I've changed this --


790
00:33:45,586 --> 00:33:48,376
I've added a customization
for this constraint constant


791
00:33:48,376 --> 00:33:53,166
by starting an editing
session with the Device bar,


792
00:33:53,166 --> 00:33:55,366
but I'm making the edit
directly in the canvas okay.


793
00:33:55,766 --> 00:33:56,926
So that's really cool.


794
00:33:57,436 --> 00:34:00,076
And as I cycle through these
devices it looks pretty good,


795
00:34:00,076 --> 00:34:02,266
but it's still not
quite close enough.


796
00:34:02,856 --> 00:34:03,836
So how do I fix this?


797
00:34:04,296 --> 00:34:08,045
Well you might think that I need
to go back and make the bar blue


798
00:34:08,045 --> 00:34:09,406
and try to make the
edit that way.


799
00:34:09,876 --> 00:34:11,386
And that's not quite
the right thing to do.


800
00:34:11,766 --> 00:34:13,356
So what's important
to understand is


801
00:34:13,356 --> 00:34:16,196
when you're varying for traits
you're introducing variations


802
00:34:16,346 --> 00:34:17,366
based on size class.


803
00:34:17,856 --> 00:34:19,795
But you don't use this
workflow for editing them.


804
00:34:20,295 --> 00:34:23,146
Instead, wouldn't it be nice
if you could just directly edit


805
00:34:23,416 --> 00:34:25,856
that customization in
the canvas, well you can.


806
00:34:26,346 --> 00:34:30,186
So I have an iPhone selected
Interface Builder knows that,


807
00:34:30,186 --> 00:34:33,516
it also knows that I have
a customization for that.


808
00:34:34,795 --> 00:34:37,176
So now when I go to edit
this it's going to figure


809
00:34:37,176 --> 00:34:38,266
out where I want the data to go.


810
00:34:38,416 --> 00:34:41,866
So if I changed 45 to 30
again, notice what happens


811
00:34:41,866 --> 00:34:44,456
in the Attributes Inspector
it's going to update it


812
00:34:44,585 --> 00:34:47,036
for the size class because it
knows I have a customization


813
00:34:47,196 --> 00:34:47,786
based on that.


814
00:34:48,306 --> 00:34:50,485
So we think this is a really
powerful new workflow.


815
00:34:50,485 --> 00:34:52,846
It lets you introduce
variations using the Device bar,


816
00:34:53,436 --> 00:34:54,806
but then you can
continue to edit those


817
00:34:54,806 --> 00:34:56,156
in the design canvas directly.


818
00:34:56,156 --> 00:34:59,136
And with that I want to
bring it back to Kevin.


819
00:35:01,516 --> 00:35:04,500
[ Applause ]


820
00:35:07,136 --> 00:35:07,736
>> Thank you Brent.


821
00:35:07,876 --> 00:35:08,236
>> Thanks.


822
00:35:09,606 --> 00:35:11,836
>> So I just wanted to
recap a few of the things


823
00:35:11,946 --> 00:35:14,716
that Brent had talked
about in his demo.


824
00:35:14,916 --> 00:35:17,606
So first we introduced the
new Device Configuration bar


825
00:35:17,606 --> 00:35:19,926
where you can see
these concrete devices


826
00:35:20,316 --> 00:35:22,856
and you can see your application
in them and move through them.


827
00:35:23,346 --> 00:35:26,126
We also have a new workflow
for introducing customizations


828
00:35:26,126 --> 00:35:27,706
between the different traits.


829
00:35:28,226 --> 00:35:31,146
So you can do very surgical
fine grain edits using the


830
00:35:31,146 --> 00:35:32,136
Attitudes Inspector.


831
00:35:32,566 --> 00:35:34,196
And the Attributes
Inspector is also the


832
00:35:34,196 --> 00:35:36,756
where you can see all the
changes that you've made.


833
00:35:36,756 --> 00:35:39,486
So if you're ever questioning
I wonder how I set this up,


834
00:35:39,486 --> 00:35:40,626
you can always go
to the inspector


835
00:35:40,626 --> 00:35:42,816
to see what the customizations
you made are.


836
00:35:43,526 --> 00:35:45,236
But there's also this
Vary for Traits mode


837
00:35:45,236 --> 00:35:47,686
where you can do kind of
larger broad paint stroke


838
00:35:47,686 --> 00:35:48,656
style changes.


839
00:35:49,226 --> 00:35:51,266
And as Brett mentioned,
it's really important


840
00:35:51,266 --> 00:35:52,416
to note this mode is important


841
00:35:52,416 --> 00:35:54,806
for introducing new
customizations.


842
00:35:55,436 --> 00:35:58,206
Once you've exited this mode
Interface Builder will still


843
00:35:58,206 --> 00:36:00,696
know how to update
those customizations


844
00:36:00,696 --> 00:36:03,236
that you've made
based on the device


845
00:36:03,236 --> 00:36:04,646
that you're currently looking at


846
00:36:04,646 --> 00:36:06,196
and it works really
well, it's awesome.


847
00:36:07,266 --> 00:36:09,506
Now these changes
work not only for iOS,


848
00:36:09,826 --> 00:36:14,096
but these workflow changes
also apply to tvOS and watchOS


849
00:36:14,096 --> 00:36:15,286
as well in Interface Builder.


850
00:36:17,096 --> 00:36:19,496
So just in summary
one more time.


851
00:36:19,836 --> 00:36:21,466
So I talked about
the fundamentals


852
00:36:21,466 --> 00:36:22,156
of the trait system.


853
00:36:22,156 --> 00:36:24,526
We talked about how traits
describe the environment,


854
00:36:24,866 --> 00:36:27,226
how you're going to override
traitCollectionDidChange


855
00:36:27,226 --> 00:36:29,306
to do all your adaptivity
taking advantage


856
00:36:29,306 --> 00:36:30,806
of the systems that
do it for you.


857
00:36:31,366 --> 00:36:32,546
And that size classes


858
00:36:32,546 --> 00:36:36,466
that describe the experience how
you're displaying information.


859
00:36:37,466 --> 00:36:39,886
Brett gave you a demo of the
new workflows and the tools


860
00:36:39,886 --> 00:36:41,496
and how Interface
Builder now allows you


861
00:36:41,496 --> 00:36:44,296
to both see your interface


862
00:36:44,886 --> 00:36:48,486
in concrete devices while
simultaneously being able


863
00:36:48,486 --> 00:36:50,986
to edit all the underlying
data for the trait collections


864
00:36:50,986 --> 00:36:52,436
and the traits that you want


865
00:36:52,436 --> 00:36:53,796
to make your application
adapt over.


866
00:36:54,876 --> 00:36:59,336
So this was part 1 and again,
the big takeaway with part 1 is


867
00:36:59,336 --> 00:37:02,216
that the system is going to
do most of the work for you.


868
00:37:02,646 --> 00:37:04,676
There's lots of ways that
you can plug into that


869
00:37:04,676 --> 00:37:07,966
as developers take advantage
of those and we're excited


870
00:37:07,966 --> 00:37:10,056
to see what you guys come up
with with adaptive applications.


871
00:37:10,736 --> 00:37:13,076
Now come back tomorrow
because we're going


872
00:37:13,076 --> 00:37:13,956
to give you even more.


873
00:37:13,956 --> 00:37:17,026
We're going to give you more
technologies and techniques


874
00:37:17,026 --> 00:37:19,386
for making applications
adaptive and then we're going


875
00:37:19,386 --> 00:37:21,666
to put it altogether
with some awesome demos.


876
00:37:22,296 --> 00:37:24,796
Besides the session tomorrow
there's also a session


877
00:37:25,046 --> 00:37:27,906
on Auto Layout that you're going
to want check out to see some


878
00:37:27,906 --> 00:37:30,146
of the improvements we've made
to Auto Layout to help you


879
00:37:30,146 --> 00:37:31,796
with some of those
finer grain changes.


880
00:37:32,006 --> 00:37:33,876
And with that have a great
session, a great rest


881
00:37:33,876 --> 00:37:34,976
of your week and a great lunch.

