1
00:00:11,026 --> 00:00:14,506
>> In this session, my colleague
Mark Malone and I are going


2
00:00:14,506 --> 00:00:17,476
to show you how you can take
your content to your next level


3
00:00:17,586 --> 00:00:20,506
by adding your own
customization while maintaining


4
00:00:20,506 --> 00:00:21,306
great performance.


5
00:00:23,426 --> 00:00:26,116
So first, let me give
you a quick refresher


6
00:00:26,116 --> 00:00:30,446
of what iBook Widget and
iAd are that are rich


7
00:00:30,446 --> 00:00:34,016
in application running
on iOS device.


8
00:00:34,776 --> 00:00:36,366
You can do a lot
interesting things.


9
00:00:37,216 --> 00:00:38,326
Browse a gallery.


10
00:00:38,876 --> 00:00:39,786
Play a game.


11
00:00:41,946 --> 00:00:43,136
Amazing performance.


12
00:00:43,346 --> 00:00:46,676
You may think this is
a native application.


13
00:00:48,146 --> 00:00:50,266
However, if we look
under a cover,


14
00:00:51,256 --> 00:00:52,806
there's this mini
website working


15
00:00:52,806 --> 00:00:54,846
in HTML, CSS and JavaScript.


16
00:00:54,846 --> 00:00:58,706
So there isn't any rocket
science involved here.


17
00:01:00,206 --> 00:01:03,006
So if you're a web
developer, it's good news


18
00:01:03,006 --> 00:01:05,506
because you're experience
and knowledge is going


19
00:01:05,506 --> 00:01:07,676
to be really valuable here.


20
00:01:08,936 --> 00:01:10,746
Even if you're not
a web developer,


21
00:01:10,896 --> 00:01:14,216
don't worry because iAd
Producer make it super easy


22
00:01:14,216 --> 00:01:14,956
for everybody.


23
00:01:15,546 --> 00:01:19,596
So here is what we
will learn today.


24
00:01:20,176 --> 00:01:22,576
First, we're going to look
at content customization


25
00:01:23,176 --> 00:01:24,616
and then we'll you
look at testing


26
00:01:24,616 --> 00:01:25,686
and debugging techniques.


27
00:01:26,446 --> 00:01:29,176
Lastly, we're going to cover
performance optimization.


28
00:01:29,766 --> 00:01:37,306
So content customization,
how are we going to do that?


29
00:01:38,356 --> 00:01:41,746
Under a cover, iAd Producer
create your content using


30
00:01:41,746 --> 00:01:42,616
web technology.


31
00:01:43,396 --> 00:01:47,586
And we can use the same exact
technology to do customization.


32
00:01:49,096 --> 00:01:52,516
First, I'm going to show you
how we can do some custom style


33
00:01:52,876 --> 00:01:54,006
using CSS.


34
00:01:56,516 --> 00:01:59,476
In iAd Producer, I have
this project in development.


35
00:02:00,216 --> 00:02:02,916
This is image in
the center I would


36
00:02:02,916 --> 00:02:05,396
like to apply some
custom style on.


37
00:02:07,796 --> 00:02:10,166
First, normally, my
first approach is


38
00:02:10,205 --> 00:02:11,806
to use the auto-inspector.


39
00:02:12,566 --> 00:02:14,476
I can do a lot interesting
things there.


40
00:02:14,566 --> 00:02:17,746
I can [inaudible],
apply a filter.


41
00:02:20,266 --> 00:02:24,166
Behind the scene, like those
auto-inspector are applying


42
00:02:24,166 --> 00:02:25,206
CSS property.


43
00:02:25,686 --> 00:02:27,086
So you're already
writing custom CSS


44
00:02:27,086 --> 00:02:29,926
if you are using this inspector.


45
00:02:30,546 --> 00:02:33,486
It's just that iAd Producer is
doing it for you automatically.


46
00:02:34,816 --> 00:02:37,256
But what if you--
what if you want


47
00:02:37,256 --> 00:02:40,316
to use some CSS property not
backed by this inspector?


48
00:02:40,826 --> 00:02:42,726
There are two ways
to go about it.


49
00:02:45,766 --> 00:02:48,896
The first approach is
to import a CSS file.


50
00:02:49,576 --> 00:02:52,966
In iAd Producer, you can
import CSS JavaScript file


51
00:02:52,966 --> 00:02:55,286
like you could for
image and video.


52
00:02:56,416 --> 00:02:59,566
And the CSS JavaScript
file will get bundled


53
00:02:59,566 --> 00:03:02,096
with your content
automatically on export.


54
00:03:02,636 --> 00:03:05,286
In this particular example,


55
00:03:05,286 --> 00:03:08,806
I imported a file
called custom.css.


56
00:03:08,886 --> 00:03:12,616
Let's take a look.


57
00:03:13,596 --> 00:03:17,896
Inside that file, there's
a custom style setting skew


58
00:03:17,896 --> 00:03:20,606
transform and it's
targeting object


59
00:03:20,666 --> 00:03:23,586
with custom-transform
as a class name.


60
00:03:24,096 --> 00:03:26,886
If I go back to my
project, at this point,


61
00:03:27,406 --> 00:03:29,646
the image is not getting
the skew transform


62
00:03:30,006 --> 00:03:31,366
because it's not having--


63
00:03:31,626 --> 00:03:34,506
it doesn't have to right
custom CSS name applied.


64
00:03:35,436 --> 00:03:37,846
To fix that, we can go to
the property inspector.


65
00:03:38,416 --> 00:03:42,656
And there's a CSS class field


66
00:03:44,076 --> 00:03:46,056
and I can type in
custom-transform.


67
00:03:46,656 --> 00:03:50,656
At this point, if I do
export or assimilation,


68
00:03:51,396 --> 00:03:54,036
I will find that the
skew transform is applied


69
00:03:54,066 --> 00:03:55,506
to the image in the center.


70
00:03:56,476 --> 00:04:01,276
So that's one way to apply
custom CSS in iAd Producer.


71
00:04:02,146 --> 00:04:04,066
Now, we go and look
at another approach.


72
00:04:06,986 --> 00:04:09,536
The second approach is
to use a Code Editor.


73
00:04:10,216 --> 00:04:14,286
We can open the Code Editor
by clicking on the Code button


74
00:04:15,056 --> 00:04:16,656
on the bottom toolbar.


75
00:04:17,266 --> 00:04:20,926
Here is what the Code
Editor looks like.


76
00:04:21,776 --> 00:04:23,596
You will see a list
of file on beside.


77
00:04:24,186 --> 00:04:28,586
Global.css is a file that you
can add you custom CSS style


78
00:04:28,656 --> 00:04:30,546
and make it available
to your content.


79
00:04:31,836 --> 00:04:35,416
Global.js is the same idea
except uses the JavaScript file.


80
00:04:36,726 --> 00:04:40,386
So previously, we applied a
class name to our image object


81
00:04:40,536 --> 00:04:42,466
and we can use it right
here in Global.css.


82
00:04:42,466 --> 00:04:44,966
And here's an example.


83
00:04:46,246 --> 00:04:50,056
Here's an example of pocketing
an object by its class name.


84
00:04:51,756 --> 00:04:54,776
We can also target the same
object by its unique ID.


85
00:04:54,936 --> 00:04:56,276
Let me show you how that works.


86
00:04:56,646 --> 00:04:59,916
So back to our project.


87
00:05:01,046 --> 00:05:04,796
iAd Producer automatically
generate a unique ID


88
00:05:04,826 --> 00:05:08,226
for every single object
by combining the page name


89
00:05:08,226 --> 00:05:10,156
and the object outlet
name with a dash.


90
00:05:10,666 --> 00:05:13,606
Let's take a look
at this example.


91
00:05:14,256 --> 00:05:18,446
In this project, we have
a page called Introduction


92
00:05:19,126 --> 00:05:21,456
and the object outlet
name is "curiosity".


93
00:05:22,606 --> 00:05:25,396
Therefore, the unique ID
for their image is going


94
00:05:25,396 --> 00:05:27,746
to be Introduction-curiosity.


95
00:05:29,026 --> 00:05:34,196
And here's an example how I
can reference it in Global.css.


96
00:05:34,526 --> 00:05:35,276
Super simple.


97
00:05:35,816 --> 00:05:39,196
So that was CSS customization.


98
00:05:40,506 --> 00:05:43,246
We're going to shift focus
and talk about JavaScript.


99
00:05:46,176 --> 00:05:49,346
So at this point, I have
a really beautiful page.


100
00:05:50,006 --> 00:05:52,056
But at the same time,
it's not that interesting


101
00:05:52,056 --> 00:05:54,486
because this is only
showing a static image.


102
00:05:55,086 --> 00:05:59,236
I want it to be dynamic and
always look fresh to our user.


103
00:06:00,546 --> 00:06:04,546
To do that, I'm going to
write some JavaScript code


104
00:06:04,726 --> 00:06:08,846
to point the latest satellite
image from NASA and display it


105
00:06:08,966 --> 00:06:10,246
in a multi-cell object.


106
00:06:11,536 --> 00:06:14,526
To start, I'm going to show
you how we can get that data


107
00:06:14,526 --> 00:06:17,816
from NASA and-- on page load.


108
00:06:18,366 --> 00:06:24,846
So in iAd Producer, we can
Object and Page by event


109
00:06:25,006 --> 00:06:27,416
and we can add customization


110
00:06:27,476 --> 00:06:30,966
by implementing JavaScript
callback for those events.


111
00:06:31,956 --> 00:06:36,226
And we can see the event by
going to the Code menu item.


112
00:06:37,246 --> 00:06:39,826
And for example, we're going
to look at the Page Event.


113
00:06:40,306 --> 00:06:44,166
And there we can see a list
of event, the Page Flyer.


114
00:06:45,456 --> 00:06:47,386
View Did Load is
particularly interesting


115
00:06:47,386 --> 00:06:49,126
because it's the
event that got fired


116
00:06:49,126 --> 00:06:50,856
when the page finished loading.


117
00:06:51,226 --> 00:06:53,636
We going to choose that
and we'll see a list


118
00:06:53,636 --> 00:06:57,166
of action base available for
the event, and we're going


119
00:06:57,166 --> 00:06:58,866
to pick Execute JavaScript.


120
00:06:59,266 --> 00:07:03,286
When we choose that option,
we will see the Code Editor.


121
00:07:03,646 --> 00:07:07,026
And there we can add the code
to connect to the NASA server.


122
00:07:08,476 --> 00:07:10,636
So how do we do the
server connection?


123
00:07:11,216 --> 00:07:13,866
If you talk to a web developer,


124
00:07:14,186 --> 00:07:16,496
he or she will probably
recommend something called


125
00:07:16,496 --> 00:07:19,736
XMLHTTPRequest, it works.


126
00:07:19,736 --> 00:07:21,816
But in iAd Producer,
we have something nicer


127
00:07:21,816 --> 00:07:22,716
for you to work with.


128
00:07:24,056 --> 00:07:25,866
It's called iAd.XHRLoader.


129
00:07:26,086 --> 00:07:28,026
It's a really nice
and simple API,


130
00:07:28,026 --> 00:07:30,266
and let me show you
how that works.


131
00:07:32,296 --> 00:07:33,786
You can create an object


132
00:07:33,786 --> 00:07:36,856
of iAd.XHRLoader by
passing in a URL.


133
00:07:37,696 --> 00:07:42,226
Imagine the blue box you
see here is an object of it.


134
00:07:43,146 --> 00:07:47,116
Every iAd.XHRLoader has
an interesting property


135
00:07:47,116 --> 00:07:47,916
called delegate.


136
00:07:49,186 --> 00:07:53,196
The delegate letter
iAd.XHRLoader know who notify


137
00:07:53,436 --> 00:07:55,016
when the loading status change.


138
00:07:55,826 --> 00:07:57,906
And it could be any
JavaScript object.


139
00:07:58,566 --> 00:08:00,146
In this diagram, I'm
going to assign it


140
00:08:00,146 --> 00:08:03,226
to an object represented
by the green box here.


141
00:08:05,376 --> 00:08:06,306
And I did-- with
this [inaudible],


142
00:08:06,306 --> 00:08:10,256
I can ask the iAd.XHRLoader
to start loading and one


143
00:08:10,256 --> 00:08:11,406
or two thing would happen.


144
00:08:12,186 --> 00:08:17,626
If the loading is successful,
the iAd.XHRLoader is going


145
00:08:17,626 --> 00:08:20,716
to fire a loaderDidComplete
notification


146
00:08:21,246 --> 00:08:23,306
and the green object
will receive it


147
00:08:23,306 --> 00:08:25,956
and do some interesting
manipulation


148
00:08:25,956 --> 00:08:27,056
with the return data.


149
00:08:27,636 --> 00:08:30,636
However, if their loading
turned out to be unsuccessful,


150
00:08:30,636 --> 00:08:32,645
it will get different
notification called


151
00:08:32,645 --> 00:08:35,556
loaderDidFail and the
green object will get


152
00:08:35,556 --> 00:08:38,316
that notification
and it could choose


153
00:08:38,316 --> 00:08:40,486
to do some error
handling from there.


154
00:08:41,426 --> 00:08:44,616
So this gives you-- this
diagram gives you our view how


155
00:08:44,616 --> 00:08:47,926
iAd.XHRLoader works and
here's how it looks in code.


156
00:08:49,406 --> 00:08:50,436
It's supper simple.


157
00:08:50,496 --> 00:08:52,626
It doesn't take that
many lines of code.


158
00:08:53,406 --> 00:08:56,386
We are going to look at this
in detail in a demo shortly.


159
00:08:56,906 --> 00:08:59,636
Now, let's look at-- let's
move on to the next task.


160
00:08:59,946 --> 00:09:03,456
I'm going to show you how we
can use the data from the server


161
00:09:03,456 --> 00:09:06,056
and populate it in
a multi-cell object.


162
00:09:06,566 --> 00:09:09,936
So back to iAd Producer.


163
00:09:10,686 --> 00:09:12,616
I have replaced a single image


164
00:09:12,666 --> 00:09:15,076
with a gallery, a
multi-cell object.


165
00:09:15,076 --> 00:09:17,346
And this form, we
have a data from NASA.


166
00:09:17,346 --> 00:09:19,396
I'm going to show
you how we can plot


167
00:09:19,446 --> 00:09:22,136
that into this multi-cell
object we see on screen.


168
00:09:22,686 --> 00:09:29,126
So imagine the gallery we
saw earlier represented


169
00:09:29,126 --> 00:09:33,226
by this purple box
you see on screen.


170
00:09:33,226 --> 00:09:35,906
Every multi-cell object
have an interesting property


171
00:09:35,906 --> 00:09:37,016
called dataSource.


172
00:09:38,416 --> 00:09:40,936
The concept of dataSource
is really similar


173
00:09:40,936 --> 00:09:43,186
to delegate property
you saw earlier.


174
00:09:43,776 --> 00:09:49,716
The dataSource property let
the multi-cell object know


175
00:09:50,006 --> 00:09:51,406
where its data is coming from.


176
00:09:53,106 --> 00:09:56,076
Imagine the dataSource
is represented


177
00:09:56,076 --> 00:09:57,766
by the green box you see here.


178
00:09:58,476 --> 00:10:01,346
In order for the green
object to supply data


179
00:10:01,346 --> 00:10:04,526
to the multi-cell object, you
need to implement two methods.


180
00:10:04,716 --> 00:10:07,306
The first method is
numberOfCellsInContainer.


181
00:10:08,266 --> 00:10:11,516
It lets the multi-cell object
know how many cell there's going


182
00:10:11,516 --> 00:10:11,956
to be.


183
00:10:12,616 --> 00:10:16,236
The second method is called
cellAtIndexInContainer.


184
00:10:16,386 --> 00:10:19,116
It just returns the cell
object at a different index.


185
00:10:19,456 --> 00:10:23,736
So this gives you an overview
how to load a dynamic content


186
00:10:24,086 --> 00:10:25,396
in a multi-cell object.


187
00:10:26,476 --> 00:10:27,876
And here's how it looks in code.


188
00:10:28,486 --> 00:10:29,986
It's also super simple.


189
00:10:29,986 --> 00:10:31,696
It doesn't take that
many lines of code.


190
00:10:32,946 --> 00:10:35,316
To give you a concrete
idea how these all work,


191
00:10:35,316 --> 00:10:37,436
I'm going to ask Mark
to give you a demo.


192
00:10:38,176 --> 00:10:38,536
>> Great.


193
00:10:39,386 --> 00:10:41,386
[ Applause ]


194
00:10:41,756 --> 00:10:42,836
Thank you very much Chi Wai.


195
00:10:43,216 --> 00:10:46,296
Great. So I've got here on
my canvas, we're building--


196
00:10:46,296 --> 00:10:48,896
this particular example is
an iBook widget and I've got


197
00:10:48,896 --> 00:10:51,936
on the canvas one of
these multi-cell items.


198
00:10:52,306 --> 00:10:54,026
And you can see, if
you double-click on it,


199
00:10:54,026 --> 00:10:56,186
I can look at each one
of the cells in here.


200
00:10:56,186 --> 00:10:59,136
And the sort of the standard
behavior for laying this out is


201
00:10:59,136 --> 00:11:02,086
to jump in here and maybe I've
got three event associated


202
00:11:02,086 --> 00:11:05,086
with Mars curiosity and I want
go and add a new one, well,


203
00:11:05,086 --> 00:11:06,656
I can drop in a new cell here.


204
00:11:07,046 --> 00:11:08,686
I can lay it out to
look like the other one


205
00:11:08,686 --> 00:11:10,726
or maybe I can have a sort
of arbitrary content in there


206
00:11:10,726 --> 00:11:13,336
and it's a really
nice easy way to go


207
00:11:13,336 --> 00:11:15,306
and layout quite
a bit of content.


208
00:11:15,306 --> 00:11:17,066
But if you go in
and you preview it,


209
00:11:17,066 --> 00:11:21,286
you'll see that it will
preview it in a way that,


210
00:11:21,286 --> 00:11:23,096
except for that cell,
actually looks really nice.


211
00:11:23,096 --> 00:11:25,606
There's this nice fluid
motion back and forth


212
00:11:25,606 --> 00:11:29,516
and it looks a lot like
a cover flow experience.


213
00:11:29,516 --> 00:11:31,736
It's all tied up for
tap and ready for people


214
00:11:31,736 --> 00:11:33,746
to attend, interact with it.


215
00:11:34,096 --> 00:11:36,986
So if I close my preview
here and go back to my cells,


216
00:11:36,986 --> 00:11:38,416
you'll see that I
can double-click in


217
00:11:38,416 --> 00:11:41,016
and I can actually delete
cells as well, right?


218
00:11:41,016 --> 00:11:44,036
So this is how you can go and
edit this if you want to go


219
00:11:44,036 --> 00:11:46,396
and add more cells
when they're static.


220
00:11:46,896 --> 00:11:50,256
Now, this is a gallery view
and if I select the Inspector,


221
00:11:50,256 --> 00:11:52,516
you'll see that I got one
of the cells selected.


222
00:11:52,516 --> 00:11:55,476
But if I just click out, you'll
see that it's a gallery view.


223
00:11:55,476 --> 00:11:56,736
It's got a name here.


224
00:11:57,166 --> 00:12:00,236
And it's a good example of
one of our multi-cell objects


225
00:12:00,236 --> 00:12:02,026
that has some great properties.


226
00:12:02,026 --> 00:12:05,796
But we actually have quite a
few of those multi-cell objects.


227
00:12:05,796 --> 00:12:08,456
We've got this wizzy
carousel that will spin


228
00:12:08,456 --> 00:12:11,546
and it has multi-cells that
you can go and pop content in,


229
00:12:11,546 --> 00:12:13,306
and a true cover flow view.


230
00:12:13,566 --> 00:12:16,156
This is an example of a gallery
here that I've got on the canvas


231
00:12:16,156 --> 00:12:18,246
and then a series of
other kinds of examples,


232
00:12:18,246 --> 00:12:21,526
and they're all going to have a
different visual representation.


233
00:12:21,526 --> 00:12:24,706
But from a sort of dynamic
and interactive capability,


234
00:12:24,706 --> 00:12:26,556
they're going to have
a great experience


235
00:12:26,556 --> 00:12:27,956
and that's what you're
going to want.


236
00:12:28,126 --> 00:12:30,766
So, this is a rather
static implementation


237
00:12:30,766 --> 00:12:33,616
and I think the whole point
to this particular example is


238
00:12:33,616 --> 00:12:36,376
to take this cover flow or
this flow view that's up here


239
00:12:36,826 --> 00:12:39,176
and convert it to something
that's much more dynamic.


240
00:12:39,176 --> 00:12:40,146
We're going to call
to the server.


241
00:12:40,146 --> 00:12:42,976
We're going to get these
milestones that you see in here,


242
00:12:43,216 --> 00:12:46,556
bring them back, and
populate this thing based


243
00:12:46,556 --> 00:12:48,046
on just calls to web server.


244
00:12:48,046 --> 00:12:51,236
So the reality is I don't
need any of these cells.


245
00:12:51,486 --> 00:12:54,416
And if there's any content in
here, I certainly don't need any


246
00:12:54,416 --> 00:12:57,606
of the content associated
with it as well.


247
00:12:57,606 --> 00:13:00,316
And it's going to bring it down
to basically a prototype cell,


248
00:13:00,316 --> 00:13:02,336
one cell that's going
to represent sort


249
00:13:02,336 --> 00:13:04,786
of the cookie cutter that
I'm going to use for each one


250
00:13:04,786 --> 00:13:08,076
of the calls that I make to
the network or for each one


251
00:13:08,076 --> 00:13:09,886
of the records that I get
back from the network.


252
00:13:09,886 --> 00:13:12,016
And so maybe I'll go and
just make it real clear


253
00:13:12,016 --> 00:13:14,076
that this is generic
information I can put in.


254
00:13:14,126 --> 00:13:17,776
This is a date, placeholder
and title that goes here.


255
00:13:18,436 --> 00:13:22,946
Get a little more room here
and the description goes here.


256
00:13:22,946 --> 00:13:23,856
You sort of get the picture.


257
00:13:23,856 --> 00:13:26,166
This is just sort of a
cookie cutter that I'm going


258
00:13:26,166 --> 00:13:29,156
to use repeatedly after
I call to the server.


259
00:13:29,596 --> 00:13:31,706
So let's get into
some of the code.


260
00:13:31,786 --> 00:13:34,446
I want to make a call to
my web service and I want


261
00:13:34,446 --> 00:13:36,586
to pull back all of
those events on the fly.


262
00:13:36,586 --> 00:13:39,376
Maybe there's a new step in
the Mars curiosity landing


263
00:13:39,376 --> 00:13:41,916
and I want to have that
show up within my iBook.


264
00:13:42,246 --> 00:13:44,436
Well I've got some
really cool interaction


265
00:13:44,436 --> 00:13:47,406
with the social media and I
want to pull that content back


266
00:13:47,406 --> 00:13:49,316
into my iAd on the fly as well.


267
00:13:49,556 --> 00:13:51,736
Well it's these technologies
that will make this work.


268
00:13:52,476 --> 00:13:53,696
So, what am I going to do?


269
00:13:53,696 --> 00:13:55,726
I'm going to click the
Code button, bring it up.


270
00:13:55,946 --> 00:13:57,706
Hopefully, it's large
enough so that you can see.


271
00:13:58,036 --> 00:14:00,986
I have nothing selected on the
page when press the Code button.


272
00:14:00,986 --> 00:14:03,526
And so, what it did was
it opened the Code Viewer


273
00:14:03,526 --> 00:14:05,606
in the context of the page.


274
00:14:06,076 --> 00:14:08,496
If I had a button selected,
it would open the Text Editor


275
00:14:08,496 --> 00:14:10,476
and the context of the
button and you sort


276
00:14:10,476 --> 00:14:11,696
of get the way that it works.


277
00:14:12,306 --> 00:14:13,196
And so, what have
you got in here?


278
00:14:13,196 --> 00:14:14,926
Well you got the name of
the page here on the left.


279
00:14:14,926 --> 00:14:17,916
It will be unique JS file
for each one of those objects


280
00:14:17,916 --> 00:14:20,716
that I'm going to go
and add some code to it.


281
00:14:20,936 --> 00:14:23,656
Drop down for all of
the events associated


282
00:14:23,656 --> 00:14:27,436
with this particular object so
I can hook into the viewDidLoad,


283
00:14:27,436 --> 00:14:29,676
will appear after it's
actually appeared,


284
00:14:29,676 --> 00:14:30,946
or I can have code fire


285
00:14:30,946 --> 00:14:33,116
as the page is going
away, going to hide.


286
00:14:33,206 --> 00:14:35,186
So, this is the little
function that I'm going to go


287
00:14:35,186 --> 00:14:36,846
and override when this
function is called.


288
00:14:36,926 --> 00:14:41,666
I'm going to have my code that
calls back to the server kickoff


289
00:14:41,666 --> 00:14:42,856
and this is what
it's going to call.


290
00:14:42,856 --> 00:14:44,186
It's going to call
a local web service


291
00:14:44,186 --> 00:14:45,166
that I've got running here.


292
00:14:45,166 --> 00:14:47,196
I've got a little JSON feed.


293
00:14:47,586 --> 00:14:50,836
It's a parent is a timeline and
it's got a series of milestones


294
00:14:50,836 --> 00:14:54,826
for each one of the Mars
curiosity landing milestones.


295
00:14:54,826 --> 00:14:57,736
And as, you know, something
new happens with the curiosity,


296
00:14:57,736 --> 00:14:59,066
I'll go and add a
new record to here.


297
00:14:59,066 --> 00:15:02,586
And whenever this particular
add or this widget is opened,


298
00:15:02,586 --> 00:15:04,026
it's going to call
to this feed and pull


299
00:15:04,026 --> 00:15:05,266
in the appropriate
content there.


300
00:15:05,266 --> 00:15:06,766
So that's what it looks like.


301
00:15:07,396 --> 00:15:09,896
And the way that I'll go and
implement this is using one


302
00:15:09,896 --> 00:15:14,086
of those great classes that
we've got within iAd Producer.


303
00:15:14,446 --> 00:15:16,466
And so, I'll just drag it
in here, cheat a little bit.


304
00:15:16,876 --> 00:15:17,726
Drop the code in.


305
00:15:18,316 --> 00:15:20,616
And just to explain what I'm
doing here is I'm going to go


306
00:15:20,616 --> 00:15:22,726
and get a reference to that
gallery view that's sitting


307
00:15:22,726 --> 00:15:23,216
on the page.


308
00:15:23,216 --> 00:15:25,636
You saw that it had a name
of Timeline Gallery View


309
00:15:26,066 --> 00:15:28,656
and I access it through this
outlets which is an array


310
00:15:28,656 --> 00:15:30,346
of all the items sitting
on a page, and I'm going


311
00:15:30,406 --> 00:15:31,936
to store that in a variable.


312
00:15:32,576 --> 00:15:35,596
And then the next class that's
really cool here is this iAd


313
00:15:35,596 --> 00:15:36,906
Archiver class.


314
00:15:37,316 --> 00:15:39,116
What I'm going to do
is I'm going to go


315
00:15:39,116 --> 00:15:41,166
into that gallery view
that's sitting on the page,


316
00:15:41,516 --> 00:15:44,676
take that one cell that I
created as my prototype cell


317
00:15:45,286 --> 00:15:47,556
and basically create
a serialized version


318
00:15:47,556 --> 00:15:48,366
of that storage.


319
00:15:48,366 --> 00:15:50,426
Sort of freeze dry it and save


320
00:15:50,426 --> 00:15:53,066
in this property sitting
here on this page.


321
00:15:53,106 --> 00:15:54,266
Pretty straightforward behavior.


322
00:15:54,906 --> 00:15:58,476
The next step is I'm going
to go and call a web or set a


323
00:15:58,476 --> 00:16:00,516
of web service variable
to the path


324
00:16:00,516 --> 00:16:01,856
to that JSON file that you saw.


325
00:16:02,716 --> 00:16:05,236
I'm going to hold the results
of the call to the server


326
00:16:05,236 --> 00:16:07,236
in this variable called
Milestones and I'm going


327
00:16:07,236 --> 00:16:09,166
to initialize it so I
don't get in trouble later.


328
00:16:09,866 --> 00:16:12,766
And then here is the
magical XHRLoader class


329
00:16:12,766 --> 00:16:13,446
that I'm going to call.


330
00:16:13,446 --> 00:16:17,426
And again, this just is a
wrapper for XMLHTTPRequest


331
00:16:17,426 --> 00:16:20,556
but it's super simple to go and
implement and you don't have


332
00:16:20,586 --> 00:16:22,586
to look at ready states
and the other properties


333
00:16:22,586 --> 00:16:25,186
that typically you're looking
at, at that particular level.


334
00:16:25,466 --> 00:16:28,856
So here I'm instantiating
my object.


335
00:16:29,286 --> 00:16:31,706
And if there's any confusion
about, well, what is this class,


336
00:16:31,706 --> 00:16:34,676
you'll notice that I've got
documentation that's built right


337
00:16:34,676 --> 00:16:37,676
in and I can show
the documentation


338
00:16:37,676 --> 00:16:40,276
or I can find the text
that I had selected.


339
00:16:40,276 --> 00:16:42,606
And if I want to get a
little bit more information


340
00:16:42,606 --> 00:16:47,256
on this class, I could just
type it in and you'll see


341
00:16:47,256 --> 00:16:50,926
that it will filter the list--
oops-- XHRLoader, there it is,


342
00:16:51,586 --> 00:16:52,996
and get the various details.


343
00:16:52,996 --> 00:16:54,206
But I pretty much
know what I'm doing


344
00:16:54,206 --> 00:16:56,326
for this particular example so
I don't need to bring this up.


345
00:16:56,326 --> 00:16:58,906
But it's really nice to have
the DOCs right there for you.


346
00:16:59,356 --> 00:17:02,236
All right, so I'm instantiating
one of these objects.


347
00:17:02,986 --> 00:17:05,945
I'm setting its delegate
property this page,


348
00:17:05,945 --> 00:17:08,126
meaning this particular page
is going to want to listen


349
00:17:08,126 --> 00:17:11,836
for all the callbacks associated
with the success or failure


350
00:17:12,006 --> 00:17:13,656
of calling my particular
website.


351
00:17:13,656 --> 00:17:16,715
And then I'm going to tell that
bad boy, that loader object


352
00:17:16,715 --> 00:17:19,116
to go and fetch the
content, load the content


353
00:17:19,116 --> 00:17:20,526
that you're pointing to
here, and that's what


354
00:17:21,046 --> 00:17:22,435
that load call does there.


355
00:17:23,665 --> 00:17:26,016
So as I said, when I call
Load, it's going to call one


356
00:17:26,016 --> 00:17:27,776
of two methods, we
saw them in the slide.


357
00:17:27,776 --> 00:17:29,906
Let me just go ahead
and drag them


358
00:17:29,906 --> 00:17:31,236
in from my little
cheater over here.


359
00:17:32,516 --> 00:17:33,186
Drop it in.


360
00:17:33,546 --> 00:17:35,006
It's loaderDidFail.


361
00:17:35,096 --> 00:17:38,086
We pass in the loader,
so it will be a reference


362
00:17:38,086 --> 00:17:39,586
to this instance
that I created here.


363
00:17:39,906 --> 00:17:41,696
There'll be an error
code as well.


364
00:17:42,256 --> 00:17:43,906
And here I'm just
throwing up a silly alert.


365
00:17:43,906 --> 00:17:44,406
You know, you need


366
00:17:44,406 --> 00:17:45,996
to do something a little
bit more important here,


367
00:17:45,996 --> 00:17:48,266
especially if you know that
there's no network connection,


368
00:17:48,746 --> 00:17:50,406
you might want to
load some resources


369
00:17:50,406 --> 00:17:52,216
from the local file itself.


370
00:17:52,216 --> 00:17:55,896
Maybe put placeholder images
there and some placeholder text


371
00:17:55,896 --> 00:17:57,596
in case there isn't an
internet connection.


372
00:17:58,336 --> 00:18:00,626
And this is the
loaderDidComplete call.


373
00:18:00,626 --> 00:18:02,996
And this is, if I successfully
called back to my server,


374
00:18:03,386 --> 00:18:07,556
pull back all that JSON text,
I'll be passed back that loader


375
00:18:07,556 --> 00:18:09,726
and I can inspect it,
pull the content out of it


376
00:18:10,006 --> 00:18:11,446
and do some interesting
things with it.


377
00:18:11,926 --> 00:18:16,886
So rather than having this alert
pop up, I'm going to go and drop


378
00:18:16,886 --> 00:18:18,366
in some more code in here.


379
00:18:19,576 --> 00:18:21,386
Boom. And what does this do?


380
00:18:21,386 --> 00:18:23,306
Well, here I am getting
a reference


381
00:18:23,306 --> 00:18:25,536
to that gallery view that's
sitting on the page again


382
00:18:25,536 --> 00:18:28,446
because I'm going to want to
go and poke some data into it.


383
00:18:29,616 --> 00:18:32,016
Saving it as a local
variable called Gallery View


384
00:18:32,016 --> 00:18:33,256
and then I'm going to go and set


385
00:18:33,346 --> 00:18:36,446
that dataSource delegate
property that Chi Wai mentioned.


386
00:18:36,446 --> 00:18:38,836
And by setting that
property to this,


387
00:18:38,836 --> 00:18:40,936
I'm saying this page
is interested


388
00:18:41,286 --> 00:18:42,856
in all the callbacks associated


389
00:18:42,856 --> 00:18:45,636
with how this gallery view
is going to get populated.


390
00:18:46,956 --> 00:18:50,006
All right, the next step is to
grab this loader that came in.


391
00:18:50,316 --> 00:18:52,606
Ask it for its context, what's
going to be that raw text


392
00:18:52,606 --> 00:18:54,506
that you saw in the JSON feed.


393
00:18:55,046 --> 00:18:58,136
I'm going to convert it to a
JSON object by calling Parse.


394
00:18:58,756 --> 00:19:01,476
And then I'm going to pull out
those milestones that you saw


395
00:19:01,476 --> 00:19:02,606
in there which is going to go


396
00:19:02,606 --> 00:19:06,306
and basically set this local
property array to have all


397
00:19:06,306 --> 00:19:07,206
of those values in it.


398
00:19:07,206 --> 00:19:10,026
So now I've got an
array full of objects


399
00:19:10,026 --> 00:19:11,626
for each one of my cells.


400
00:19:11,856 --> 00:19:14,366
And the last step in the
entire process here is to go


401
00:19:14,746 --> 00:19:16,666
and tell the gallery
view that's sitting


402
00:19:16,666 --> 00:19:18,396
on the page to reload its data.


403
00:19:18,956 --> 00:19:20,056
And when it does that,


404
00:19:20,056 --> 00:19:22,466
it's going to call its
dataSource delegate and say,


405
00:19:22,466 --> 00:19:23,466
"OK, what you got for me?"


406
00:19:23,466 --> 00:19:28,176
And the way it does it, as you
saw on the slides, are these--


407
00:19:28,706 --> 00:19:34,286
boom-- these two particular
calls, numberOfCellsInContainer


408
00:19:35,116 --> 00:19:37,126
and cellAtIndexInContainer.


409
00:19:37,126 --> 00:19:40,736
This first one says, "OK,
I'm this multi-cell view.


410
00:19:41,226 --> 00:19:43,226
I'm supposed to show a
whole bunch of content.


411
00:19:43,226 --> 00:19:45,756
Well how many of this little
view should I display?"


412
00:19:46,236 --> 00:19:48,726
And so, this should return a
number and I'm going to try


413
00:19:48,726 --> 00:19:51,456
to type it with one hand here
which is basically I'm going


414
00:19:51,456 --> 00:19:53,066
to go to my milestones variable.


415
00:19:53,736 --> 00:19:57,716
It's an array, so all I
care about really here


416
00:19:57,716 --> 00:19:58,976
for this is the length.


417
00:20:02,466 --> 00:20:03,896
Perfect. So it's going
to say, "OK, yeah.


418
00:20:03,896 --> 00:20:07,636
Gallery view, I got this number
of milestones in my JSON feed


419
00:20:07,636 --> 00:20:09,456
that came back, so
this is how many cells


420
00:20:09,506 --> 00:20:11,256
that you need to
go and fill out."


421
00:20:11,926 --> 00:20:15,996
This particular function here
is cellAtIndexInContainer


422
00:20:15,996 --> 00:20:19,806
and it passes in that gallery
view there and it also passes


423
00:20:19,806 --> 00:20:23,296
in the index, which one of the
cells doesn't need to display


424
00:20:23,296 --> 00:20:25,686
at the particular time,
and what I'm supposed


425
00:20:25,686 --> 00:20:27,936
to do is create a view,
instantiate a view


426
00:20:28,256 --> 00:20:30,876
and just return it a result
of this particular function.


427
00:20:31,226 --> 00:20:34,466
And the multi-cell container
will go and drop it into one


428
00:20:34,466 --> 00:20:35,836
of those cells as a subview.


429
00:20:35,836 --> 00:20:37,926
So it's super easy
to go and implement.


430
00:20:37,926 --> 00:20:39,886
So rather than return Null,


431
00:20:39,886 --> 00:20:42,256
let's return something
interesting here


432
00:20:42,936 --> 00:20:45,896
and here is the actual
code for that.


433
00:20:46,596 --> 00:20:48,686
Drop it in, there we go.


434
00:20:48,686 --> 00:20:50,176
All right, so let me
go through this again.


435
00:20:50,176 --> 00:20:54,566
I'm creating a new view and
I'm using that archived one,


436
00:20:54,566 --> 00:20:57,446
that freeze dried one
that I saved early


437
00:20:57,446 --> 00:20:59,436
when these ad first launched.


438
00:20:59,776 --> 00:21:01,996
And I just say restore
from Archive


439
00:21:01,996 --> 00:21:05,086
and what it does is it
instantiates one of those views


440
00:21:05,086 --> 00:21:07,576
with the image placeholder,
the title and the date


441
00:21:07,576 --> 00:21:09,116
and the description
field at the bottom.


442
00:21:09,476 --> 00:21:11,096
It gives me a new
instance of that.


443
00:21:11,096 --> 00:21:14,626
I'm going to go and grab
the particular instance


444
00:21:14,696 --> 00:21:18,266
or the particular milestone that
was returned from my JSON call


445
00:21:18,266 --> 00:21:19,956
and that's passed in
as the index here.


446
00:21:19,956 --> 00:21:20,766
I've got this array.


447
00:21:20,766 --> 00:21:22,516
I'm going to pull out
the one that I care about


448
00:21:22,516 --> 00:21:23,576
and put it in this variable.


449
00:21:23,576 --> 00:21:26,416
And then the rest of
this content is going


450
00:21:26,416 --> 00:21:31,046
to create an image based on the
URL that's being passed in for


451
00:21:31,046 --> 00:21:34,186
that particular image and
then set the various date,


452
00:21:34,456 --> 00:21:36,236
title and description properties


453
00:21:36,536 --> 00:21:38,606
on that particular
freeze dried version.


454
00:21:38,716 --> 00:21:41,516
And then the last step
is, OK, return that back


455
00:21:41,516 --> 00:21:43,936
to the multi-cell container
so it can plunk it in


456
00:21:43,936 --> 00:21:45,126
and drop it in the right spot.


457
00:21:45,796 --> 00:21:47,736
So that's all the
code that I need.


458
00:21:49,926 --> 00:21:51,036
Just move that over.


459
00:21:52,056 --> 00:21:53,886
Go back to my view,
nothing at my sleeve,


460
00:21:53,886 --> 00:21:55,486
no assets in here, no.


461
00:21:56,126 --> 00:22:00,546
If I hit Preview here, it made
the call to the local server


462
00:22:01,036 --> 00:22:03,356
and there are all the
items sitting in it


463
00:22:03,356 --> 00:22:04,536
and even some additional ones,


464
00:22:04,536 --> 00:22:05,776
just so you know
I wasn't cheating.


465
00:22:06,266 --> 00:22:08,616
So all of this content was
being pulled on the fly.


466
00:22:08,616 --> 00:22:11,796
And like I said, you could
go and add another item


467
00:22:11,796 --> 00:22:14,206
on your server the next
time this is launched.


468
00:22:14,446 --> 00:22:17,126
It would go and pull down
the appropriate content.


469
00:22:17,906 --> 00:22:20,476
So that's a bit of an overview
of pulling content on the fly.


470
00:22:20,476 --> 00:22:22,626
I think one other thing,
just to mention really quick,


471
00:22:22,626 --> 00:22:25,326
is these multi-cell
views, if you look at them,


472
00:22:25,666 --> 00:22:28,066
you'll see that you can
add more and more and more.


473
00:22:28,066 --> 00:22:29,836
And if you're worried
about memory consumption


474
00:22:29,836 --> 00:22:32,086
when you're building this
out, just keep in mind


475
00:22:32,086 --> 00:22:33,396
that we take care of doing a lot


476
00:22:33,396 --> 00:22:35,786
of efficient memory
management with these.


477
00:22:35,786 --> 00:22:39,666
I could, say, insert cell,
insert cell and create 50


478
00:22:39,756 --> 00:22:43,226
of these, but from a DOM
perspective, what's in memory,


479
00:22:43,226 --> 00:22:46,246
we make sure to set
display none on those items


480
00:22:46,246 --> 00:22:47,976
that aren't visible
at any given time.


481
00:22:47,976 --> 00:22:50,446
So that's something that we take
care of so that you don't get


482
00:22:50,446 --> 00:22:52,876
in trouble in case you
pull down 300 cells


483
00:22:53,256 --> 00:22:54,456
and want to go and populate.


484
00:22:54,456 --> 00:22:56,126
We're pretty good with
the memory management


485
00:22:56,126 --> 00:22:57,816
and that's actually a
really good best practice


486
00:22:57,816 --> 00:22:58,826
for you folks as well.


487
00:22:59,576 --> 00:23:03,286
So that's the demo and I'll
pass it back to Chi Wai


488
00:23:03,286 --> 00:23:05,756
to take it to the next step.


489
00:23:06,366 --> 00:23:08,716
>> So that was JavaScript
customization.


490
00:23:08,846 --> 00:23:11,096
We're going to shift
focus and talk about HTML.


491
00:23:11,686 --> 00:23:17,466
So if you look into--
in iAd Producer,


492
00:23:17,466 --> 00:23:19,086
if you look into
your Object Library,


493
00:23:19,416 --> 00:23:23,216
there's an awesome object called
HTML Under Dynamic Content.


494
00:23:24,216 --> 00:23:25,536
We can add that to canvas.


495
00:23:26,766 --> 00:23:28,656
And double-clicking
on the object,


496
00:23:28,656 --> 00:23:30,246
it will give us the Code Editor.


497
00:23:31,566 --> 00:23:34,046
And there we can
add our custom HTML.


498
00:23:35,086 --> 00:23:37,836
The HTML object is
super flexible.


499
00:23:37,836 --> 00:23:41,366
We can literally put any
kind of HTML code inside.


500
00:23:41,926 --> 00:23:44,986
One great use case
is format of text.


501
00:23:47,076 --> 00:23:49,566
With the HTML object,
we can do all kind


502
00:23:49,566 --> 00:23:50,866
of interesting things with text.


503
00:23:51,376 --> 00:23:54,876
We can set the font,
color, create hyperlinks.


504
00:23:55,906 --> 00:23:57,436
The sky is really
the limit here.


505
00:23:59,386 --> 00:24:03,946
Another great use case of
the HMTL object is MathML.


506
00:24:05,176 --> 00:24:06,336
Back to your Code Editor,


507
00:24:06,456 --> 00:24:09,956
I can define my mathematical
equation in MathML.


508
00:24:10,656 --> 00:24:13,816
If I go back to canvas and
look at my HTML object,


509
00:24:14,166 --> 00:24:16,646
now it becomes a
mathematical equation.


510
00:24:17,176 --> 00:24:19,686
It's super beautiful and
also really straightforward.


511
00:24:20,936 --> 00:24:23,156
So now if we go back
to our project


512
00:24:23,156 --> 00:24:24,256
that we've been working on,


513
00:24:24,846 --> 00:24:27,866
at this point we have
a beautiful gallery.


514
00:24:28,496 --> 00:24:29,376
It's dynamic.


515
00:24:29,776 --> 00:24:31,276
Always look fresh to our user.


516
00:24:32,336 --> 00:24:34,416
But we're going to take
it to the next level.


517
00:24:34,826 --> 00:24:37,846
We're going to add a video.


518
00:24:37,846 --> 00:24:40,696
NASA have an interesting
site, like you have all kind


519
00:24:40,696 --> 00:24:42,706
of video content in it.


520
00:24:42,806 --> 00:24:46,916
However, it doesn't provide
direct link to the video file


521
00:24:47,406 --> 00:24:51,236
so we cannot really use a
video player object built in,


522
00:24:51,236 --> 00:24:52,286
in iAd Producer.


523
00:24:53,976 --> 00:24:56,406
Fortunately, like a lot
of video sharing site,


524
00:24:56,406 --> 00:25:00,466
it does provide an
embeddable HTML object.


525
00:25:01,786 --> 00:25:03,916
And we can use it for our--


526
00:25:04,446 --> 00:25:06,166
I mean we can use
it in iAd Producer


527
00:25:06,166 --> 00:25:07,146
and let me show you how.


528
00:25:07,746 --> 00:25:11,116
And now if we go
back to our canvas,


529
00:25:11,116 --> 00:25:12,676
we can add our HTML object.


530
00:25:13,426 --> 00:25:15,366
We can go to Code
Editor and paste


531
00:25:15,366 --> 00:25:19,986
in the HTML snippet provided by
NASA and we save and close that,


532
00:25:20,496 --> 00:25:22,686
we get our beautiful
video from NASA.


533
00:25:23,496 --> 00:25:24,226
Super simple.


534
00:25:25,456 --> 00:25:26,716
So that was HTML.


535
00:25:28,136 --> 00:25:29,676
And I'll show you
a number of ways


536
00:25:29,676 --> 00:25:32,116
to do customization
using web technologies.


537
00:25:32,936 --> 00:25:35,506
I'm going to change subject
and talk about performance.


538
00:25:37,226 --> 00:25:40,346
So performance and user
experience go hand in hand.


539
00:25:40,846 --> 00:25:43,496
You cannot possibly provide
a great user experience


540
00:25:43,546 --> 00:25:45,286
without having great
performance.


541
00:25:46,156 --> 00:25:49,756
To help you accomplish the
best possible performance


542
00:25:49,756 --> 00:25:52,976
on your content, I'm going
to talk about some testing


543
00:25:52,976 --> 00:25:55,956
and debugging tools and then
I'm going to give some tips


544
00:25:55,956 --> 00:25:57,386
and tricks for optimization.


545
00:26:00,766 --> 00:26:04,386
First, let's look at an iAd
project I have been doing


546
00:26:04,916 --> 00:26:05,576
in the weekend.


547
00:26:05,806 --> 00:26:08,516
It's a particle assimilation
model.


548
00:26:08,646 --> 00:26:10,176
I figured out the
physics and math


549
00:26:10,176 --> 00:26:11,886
and I think it's ready to go.


550
00:26:12,326 --> 00:26:15,136
Here's the assimilation
I have on a Mac.


551
00:26:16,176 --> 00:26:18,666
The particle is doing
exactly what I wanted to


552
00:26:19,076 --> 00:26:20,696
and also the frame
rate is pretty good.


553
00:26:20,696 --> 00:26:22,886
It's 50, 60 frame per second.


554
00:26:23,426 --> 00:26:27,946
But if I run it on
my iOS device,


555
00:26:28,586 --> 00:26:31,006
though I'm getting
their correct behavior


556
00:26:31,266 --> 00:26:33,386
but I'm not getting
good frame rate.


557
00:26:33,386 --> 00:26:35,366
I'm only seeing 20
frame per second.


558
00:26:36,306 --> 00:26:39,206
So obviously, I'm not-- I mean
I'm not ready to ship this yet.


559
00:26:39,786 --> 00:26:44,286
To help you identify issue--


560
00:26:44,286 --> 00:26:46,146
performance issue
like this on device,


561
00:26:46,146 --> 00:26:49,096
there are two tools you can
use for testing and debugging.


562
00:26:50,006 --> 00:26:52,886
The first one is Remote
Web Inspector from Safari.


563
00:26:53,776 --> 00:26:56,686
The second one is the Instrument
app that come with Xcode.


564
00:26:57,056 --> 00:26:59,436
First, let's talk about
the Web Inspector.


565
00:26:59,976 --> 00:27:05,446
The Web Inspector is a debugging
tool that comes with Safari.


566
00:27:06,786 --> 00:27:09,816
In iAd Producer, you can
attach a Web Inspector along


567
00:27:09,816 --> 00:27:11,496
with your content on export.


568
00:27:12,866 --> 00:27:14,246
And let me show you
how that works.


569
00:27:17,276 --> 00:27:20,916
First, you want to make sure
you have Web Inspector enabled


570
00:27:20,916 --> 00:27:22,786
on your iOS simulator
and device.


571
00:27:23,386 --> 00:27:25,086
To do that, simply
go to Settings.


572
00:27:25,086 --> 00:27:28,716
And if you go to Safari,
there's an Advanced option


573
00:27:28,896 --> 00:27:32,046
and you can turn on
Web Inspector there.


574
00:27:32,156 --> 00:27:34,286
And after that, we can go
back to the iAd Producer.


575
00:27:35,066 --> 00:27:37,946
There's a Preview
menu item and we want


576
00:27:37,946 --> 00:27:42,316
to make sure show Web Inspector
when Previewing is enabled.


577
00:27:42,886 --> 00:27:47,016
So what that does is that next
time when you do a preview


578
00:27:47,336 --> 00:27:51,566
where there is an iOS
device or iOS simulator,


579
00:27:51,566 --> 00:27:54,376
the Web Inspector will show
up along with the content.


580
00:27:54,866 --> 00:27:56,866
And let me give you an example.


581
00:27:58,276 --> 00:28:00,896
So I do a preview and
will see my content


582
00:28:00,896 --> 00:28:03,356
in the background a Web
Inspector out front.


583
00:28:03,846 --> 00:28:06,276
With the Web Inspector,


584
00:28:06,616 --> 00:28:09,196
we can do powerful
performance analysis.


585
00:28:09,856 --> 00:28:13,286
One thing we could do is
to identify CPU hotspot.


586
00:28:14,666 --> 00:28:18,716
To get started, we need to
go a tab called Instrument


587
00:28:19,606 --> 00:28:21,326
on the Web Inspector.


588
00:28:22,396 --> 00:28:25,906
And we can start the
JavaScript Profiler


589
00:28:26,206 --> 00:28:28,696
and we can run some
interesting report.


590
00:28:29,216 --> 00:28:32,876
We can do a-- we can
run a report like this.


591
00:28:33,376 --> 00:28:36,246
We can see the number
of call per function.


592
00:28:36,796 --> 00:28:41,766
It's really easy to identify CPU
hotspot by singling out function


593
00:28:41,766 --> 00:28:43,476
with a normal amount of calls.


594
00:28:45,596 --> 00:28:48,286
Another thing we can do
with the Web Inspector is


595
00:28:48,286 --> 00:28:50,196
to monitor network traffic.


596
00:28:50,636 --> 00:28:55,736
On the same view, we can capture
a live network report like this.


597
00:28:55,976 --> 00:28:59,756
If we take a closer look,
for every single file,


598
00:28:59,816 --> 00:29:04,776
we can see the file size,
latency and duration.


599
00:29:05,256 --> 00:29:06,826
So it's really easy for us


600
00:29:06,826 --> 00:29:11,326
to identify network
inefficiency or bottleneck.


601
00:29:13,236 --> 00:29:16,756
For memory related issue, we're
going to use a different tool.


602
00:29:19,286 --> 00:29:21,486
Instrument is the
application we want to use


603
00:29:21,486 --> 00:29:24,766
to identify memory
issue on device.


604
00:29:25,786 --> 00:29:28,906
To set it up, first we
need to download Xcode.


605
00:29:29,806 --> 00:29:31,836
Xcode is free on
the Mac App Store


606
00:29:32,866 --> 00:29:35,086
and Instrument will
come along with it.


607
00:29:37,026 --> 00:29:38,866
To give Instrument
the permission


608
00:29:38,866 --> 00:29:41,796
to profile your iOS
device, first we need


609
00:29:41,796 --> 00:29:43,486
to do some setup on Xcode.


610
00:29:44,056 --> 00:29:48,466
So we want to launch Xcode and
go to the Window menu item.


611
00:29:49,266 --> 00:29:53,016
In there, we want choose
the Organizer option.


612
00:29:53,556 --> 00:29:56,566
Here's the Organizer window.


613
00:29:56,636 --> 00:30:00,276
If your iOS device is
connected to your computer,


614
00:30:00,486 --> 00:30:01,816
you will see on the side bar.


615
00:30:02,786 --> 00:30:04,266
To give Instrument
the permission,


616
00:30:04,266 --> 00:30:05,996
you want to choose the device


617
00:30:05,996 --> 00:30:08,226
and then click Use
for Development.


618
00:30:08,996 --> 00:30:10,306
At this point, you're all set.


619
00:30:10,306 --> 00:30:12,756
You can quit Xcode
and launch Instrument.


620
00:30:13,296 --> 00:30:17,516
And this is a screen you will
see when you launch Instrument.


621
00:30:18,376 --> 00:30:21,256
And you want to choose
Activity Monitor for iOS.


622
00:30:21,706 --> 00:30:25,966
And you can get a memory
usage report like this.


623
00:30:26,316 --> 00:30:28,136
Let's take a closer look.


624
00:30:29,066 --> 00:30:30,636
With this kind of information,


625
00:30:30,876 --> 00:30:34,486
you can see how much memory
your content is consuming


626
00:30:34,486 --> 00:30:38,336
at a given point of time and
you can also see a breakdown


627
00:30:38,336 --> 00:30:39,436
of the memory footprint.


628
00:30:40,066 --> 00:30:41,016
Super powerful.


629
00:30:41,646 --> 00:30:45,776
To show you Instrument and
Web Inspector in action,


630
00:30:46,186 --> 00:30:50,136
I'm going to ask Mark to come
back and give you another demo.


631
00:30:51,006 --> 00:30:52,716
>> All right, so here
is the actual project


632
00:30:52,716 --> 00:30:53,806
that you saw on the slides.


633
00:30:54,056 --> 00:30:55,696
And just to let you
know that it's real,


634
00:30:55,696 --> 00:30:58,096
I'll hit the Preview button and
you can see it's running here


635
00:30:58,096 --> 00:31:00,566
on the Mac and it looks great.


636
00:31:00,566 --> 00:31:03,416
And that's, as you would
expect, it's running on a Mac.


637
00:31:04,016 --> 00:31:07,096
The reality is we know that
if we write applications


638
00:31:07,096 --> 00:31:10,486
or if we write websites that
have all sorts of complications


639
00:31:10,486 --> 00:31:13,126
with them there-- within them,
they might perform differently


640
00:31:13,126 --> 00:31:14,796
on the-- some of
the mobile devices.


641
00:31:14,796 --> 00:31:17,636
I mean it doesn't have the
same fat pipe necessarily,


642
00:31:17,636 --> 00:31:18,406
the same chipset.


643
00:31:18,406 --> 00:31:22,646
And so, the reality is it's all
about testing on the device.


644
00:31:22,646 --> 00:31:25,986
And we've got some great tools
to go and test on the device.


645
00:31:26,586 --> 00:31:30,096
Now if you download and
install the Xcode toolset,


646
00:31:30,096 --> 00:31:32,466
you'll get the iOS simulator.


647
00:31:33,016 --> 00:31:36,906
And it does a pretty close
job of going and simulating


648
00:31:36,906 --> 00:31:38,386
that have something
would run on the device.


649
00:31:38,386 --> 00:31:40,316
You can choose Preview
and Simulator


650
00:31:40,316 --> 00:31:43,356
and export the widget
rule, export the ad,


651
00:31:43,356 --> 00:31:45,436
we'll launch the
appropriate tester application


652
00:31:45,436 --> 00:31:47,436
on the platform and
you can bring it up.


653
00:31:47,436 --> 00:31:49,766
Let me shrink it down a little
bit so you can actually see it.


654
00:31:50,306 --> 00:31:54,856
And there it is running
simulated on the device.


655
00:31:54,936 --> 00:31:57,516
Still pretty good of course
because it's not running


656
00:31:57,516 --> 00:31:58,996
on the actual chipset.


657
00:31:58,996 --> 00:32:00,436
It's not using the
same networking,


658
00:32:00,436 --> 00:32:01,126
those types of things.


659
00:32:01,126 --> 00:32:03,086
But it's certainly
something that's capable


660
00:32:03,436 --> 00:32:05,796
and gives you a really good feel
for, you know, how far you are,


661
00:32:05,796 --> 00:32:08,566
how close you are to
doing the real project


662
00:32:08,566 --> 00:32:09,646
or completing your project.


663
00:32:09,646 --> 00:32:13,416
So, I'm just going to go and
close that, come back up here.


664
00:32:13,816 --> 00:32:16,616
Another option is actually you
can go and Preview in Safari.


665
00:32:17,046 --> 00:32:19,906
This application
generates great web content.


666
00:32:19,906 --> 00:32:22,676
So, the reality is a lot of
this content will actually run


667
00:32:22,676 --> 00:32:23,496
in Safari as well.


668
00:32:23,496 --> 00:32:25,836
And so, a lot of folks will
just choose Preview in Safari


669
00:32:25,836 --> 00:32:29,126
for just doing that quick look
of how their ad experience


670
00:32:29,126 --> 00:32:32,376
or how their widget
experience is coming along.


671
00:32:32,726 --> 00:32:35,286
And then the final one of course
is the one that you always want


672
00:32:35,286 --> 00:32:36,846
to use, certainly
before you ship.


673
00:32:36,846 --> 00:32:40,246
But also as you're working
in your design efforts,


674
00:32:40,246 --> 00:32:40,786
you want to make sure


675
00:32:40,786 --> 00:32:42,246
that you're building
something that's really going


676
00:32:42,246 --> 00:32:43,896
to perform well on the device.


677
00:32:43,896 --> 00:32:47,156
And of course, we've got built
in preview on device there


678
00:32:47,156 --> 00:32:49,396
as well and that
will not be there


679
00:32:49,396 --> 00:32:51,076
if you don't have
a device connected.


680
00:32:51,076 --> 00:32:54,266
So if you launch iAd Producer
and you want to go demo


681
00:32:54,266 --> 00:32:57,036
on device, if it's not actually
tethered, then you're not going


682
00:32:57,136 --> 00:32:58,646
to see this particular menu.


683
00:32:58,646 --> 00:33:00,926
But once you tether with
an iPad or an iPhone,


684
00:33:00,926 --> 00:33:01,866
this will become enabled


685
00:33:01,866 --> 00:33:03,596
and it'll do the
right thing for you.


686
00:33:03,596 --> 00:33:05,636
So previewing on a device is
definitely what you want to do


687
00:33:05,636 --> 00:33:08,826
and we're all about trying to
figure out, "OK, what's going


688
00:33:08,826 --> 00:33:10,176
on with this particular
examples?"


689
00:33:10,176 --> 00:33:13,556
so I'm going to check Show
Web Inspector when Previewing.


690
00:33:13,556 --> 00:33:16,756
And of course, the Web Inspector
will show in all of these.


691
00:33:16,756 --> 00:33:19,466
It'll show on Safari, the
simulator and on device as well.


692
00:33:19,466 --> 00:33:21,456
And now just to preview
on device,


693
00:33:21,456 --> 00:33:22,786
I'm going to choose
Preview on Device.


694
00:33:22,786 --> 00:33:25,916
It talks to you about what
you need to do on your device.


695
00:33:25,916 --> 00:33:27,906
I've got an iPad that's
plugged in over here


696
00:33:27,906 --> 00:33:29,646
and I'm just going to unlock it.


697
00:33:30,096 --> 00:33:32,206
It's not very interesting
to see but it'll walk you


698
00:33:32,206 --> 00:33:33,806
through the process
of maybe you need


699
00:33:33,806 --> 00:33:36,466
to load the Tester
app on your device.


700
00:33:36,466 --> 00:33:37,956
It'll go and install
that for you


701
00:33:37,956 --> 00:33:40,286
and might ask you some
permissions in order


702
00:33:40,356 --> 00:33:42,686
to get the debugger
hooked up to the device.


703
00:33:42,686 --> 00:33:44,406
But I'm just going
to press OK here.


704
00:33:45,156 --> 00:33:47,426
It's going to export whatever
I've got on the screen,


705
00:33:47,426 --> 00:33:49,146
bundle it up, ship
it over the cable,


706
00:33:49,616 --> 00:33:51,896
and move it over to the device.


707
00:33:51,896 --> 00:33:54,676
And so, there's a little Widget
Tester application over here.


708
00:33:55,306 --> 00:33:57,186
And if I'll go and I launch it,


709
00:33:59,286 --> 00:34:03,246
you'll see when I do
this particular example.


710
00:34:03,246 --> 00:34:04,386
I just launched it.


711
00:34:04,386 --> 00:34:05,716
Now it's running on the device.


712
00:34:05,716 --> 00:34:07,056
It's running here
on the desktop.


713
00:34:07,396 --> 00:34:09,496
And you'll see that the
Web Inspector launched.


714
00:34:09,985 --> 00:34:11,275
A bunch of detail over--


715
00:34:11,326 --> 00:34:12,996
information over
here, I can hide that.


716
00:34:12,996 --> 00:34:15,166
But you can see the
DOM that's generated,


717
00:34:15,166 --> 00:34:17,966
the markup that's generated
when this was exported.


718
00:34:18,356 --> 00:34:20,246
Lots of HTML goodness.


719
00:34:20,295 --> 00:34:22,306
How everything is
categorized here.


720
00:34:22,306 --> 00:34:24,485
All the scripts are put
together within the inspector.


721
00:34:24,485 --> 00:34:26,286
And just to level set here.


722
00:34:26,286 --> 00:34:29,226
We've had two incredible
sessions on the Web Inspector.


723
00:34:29,226 --> 00:34:31,606
So I'm going to touch this
thing fairly light today.


724
00:34:32,045 --> 00:34:34,576
But if you go back and
look at the videos we had


725
00:34:34,576 --> 00:34:36,766
in Introduction to the
Web Inspector as well


726
00:34:37,056 --> 00:34:41,186
as an advanced version of
that session and they're great


727
00:34:41,186 --> 00:34:43,045
if you really want to get
in to the nuts and bolts.


728
00:34:43,045 --> 00:34:45,656
But, you know, the idea of this
particular demo is to figure


729
00:34:45,656 --> 00:34:47,926
out what was going on with
the sample and I'm going


730
00:34:47,926 --> 00:34:49,356
to focus the bulk of my time


731
00:34:49,356 --> 00:34:52,116
in this little Instruments
icon that's right up here.


732
00:34:52,116 --> 00:34:54,136
So it looks like a
little stopwatch.


733
00:34:54,136 --> 00:34:57,296
So I've got my sample
running here on the iPad.


734
00:34:57,296 --> 00:34:59,526
The balls are bouncing
around as I would expect.


735
00:34:59,526 --> 00:35:01,316
And the first thing
that I want to look


736
00:35:01,316 --> 00:35:03,986
at are the network requests.


737
00:35:03,986 --> 00:35:06,776
If you're building in iAd, you
know that you're pulling content


738
00:35:06,776 --> 00:35:08,376
down from the network.


739
00:35:08,376 --> 00:35:10,546
You're typically using
cellular data as well


740
00:35:10,546 --> 00:35:12,846
and we know there's all
sorts of efficiencies


741
00:35:12,846 --> 00:35:16,096
and inefficiencies associated
with cellular network


742
00:35:16,096 --> 00:35:18,626
when it comes to latency
and those types of things.


743
00:35:18,626 --> 00:35:20,846
You could be pulling
from a Wi-Fi network


744
00:35:20,846 --> 00:35:22,356
or maybe you're just
pulling locally.


745
00:35:22,616 --> 00:35:25,096
It's always good to get a feel
for sort of what, you know,


746
00:35:25,096 --> 00:35:27,296
the-- what's the network
profile associated


747
00:35:27,296 --> 00:35:30,656
with your Widget
or iAd gesundheit.


748
00:35:30,986 --> 00:35:33,686
So, I've got network requests
setting here, so I'm going


749
00:35:33,686 --> 00:35:35,616
to hit Start Recording,
this little button.


750
00:35:35,946 --> 00:35:38,846
And then I'm going to
tell my widget to reload


751
00:35:38,916 --> 00:35:39,826
to fetch all the assets.


752
00:35:39,826 --> 00:35:41,336
So I'm going to do a Command-R


753
00:35:41,476 --> 00:35:44,236
and then I'll see it
update here on my iPad.


754
00:35:45,616 --> 00:35:46,696
And it's loaded.


755
00:35:47,276 --> 00:35:47,936
It's done.


756
00:35:48,226 --> 00:35:50,636
I'm going to press
Stop Recording.


757
00:35:51,016 --> 00:35:52,136
And you can see all sorts


758
00:35:52,136 --> 00:35:55,046
of very numeric specific
information associated


759
00:35:55,046 --> 00:35:56,486
with the latency of these items.


760
00:35:56,486 --> 00:35:59,406
But the nicest screen to
look at is basically this one


761
00:35:59,406 --> 00:36:01,176
without all of the
numbers there.


762
00:36:01,176 --> 00:36:04,606
And it gives you a really good
feel for the loading aspect


763
00:36:04,606 --> 00:36:07,396
of your particular widget or ad.


764
00:36:07,866 --> 00:36:09,686
You'll see a timeline
across the top.


765
00:36:09,686 --> 00:36:13,606
And this purple bar is when
the load event was called


766
00:36:13,606 --> 00:36:14,996
for this particular item.


767
00:36:14,996 --> 00:36:17,796
And that's when it's presented
on the screen, and let's assume


768
00:36:17,796 --> 00:36:19,066
that all the assets are present.


769
00:36:19,066 --> 00:36:20,796
And that's the thing
that you want


770
00:36:20,796 --> 00:36:22,576
to get as short as possible.


771
00:36:22,576 --> 00:36:25,186
You want that load to be
called as quickly as possible


772
00:36:25,186 --> 00:36:26,066
so people aren't waiting


773
00:36:26,066 --> 00:36:28,136
around wondering why they're
looking at a blank screen.


774
00:36:28,706 --> 00:36:30,856
And so if I look at this,
it says, "Oh, it's about"--


775
00:36:30,856 --> 00:36:32,836
I don't know, 2.71, let's say.


776
00:36:33,416 --> 00:36:35,786
And just to get a feel for
the rest of the content here,


777
00:36:35,786 --> 00:36:39,196
you'll see the times associated
with downloading each one


778
00:36:39,196 --> 00:36:42,086
of the assets as well
as how long it takes


779
00:36:42,086 --> 00:36:44,776
to actually process
some of these as well.


780
00:36:44,776 --> 00:36:47,776
And if you look at this
last file, this particle.js


781
00:36:47,916 --> 00:36:50,406
which is the nuts and
bolts of all the animation


782
00:36:50,406 --> 00:36:54,456
that you see spinning around
in that example was gadded


783
00:36:54,456 --> 00:36:56,726
by this particular file
here, and this is a bit


784
00:36:56,726 --> 00:36:58,066
of a contrived example.


785
00:36:58,066 --> 00:37:01,286
If I look at it, I can see that
the thing is called lorem.js


786
00:37:02,336 --> 00:37:04,686
which is, you know,
suspect to begin with.


787
00:37:05,136 --> 00:37:07,896
And going up, there's this
other one called ipsum.css.


788
00:37:08,016 --> 00:37:10,116
So that sounds pretty
suspect as well.


789
00:37:10,116 --> 00:37:13,686
I mean it's kind of a silly
example but I think the point


790
00:37:13,686 --> 00:37:17,166
to make with this is this
particular project has a bunch


791
00:37:17,166 --> 00:37:20,776
of files better compressed,
thrown down to the device.


792
00:37:21,256 --> 00:37:23,586
But there's a good chance
that you're still shipping


793
00:37:23,586 --> 00:37:25,386
down to the device
extraneous files.


794
00:37:25,386 --> 00:37:26,826
Maybe it's part of your
development effort,


795
00:37:27,146 --> 00:37:28,906
you're using third
party libraries


796
00:37:28,906 --> 00:37:31,446
or maybe you had other source
code trees that you were pulling


797
00:37:31,446 --> 00:37:33,576
in and then you decided,
"I don't need those."


798
00:37:33,576 --> 00:37:35,276
You're doing your
testing on the Mac.


799
00:37:35,276 --> 00:37:37,476
You didn't see any sort
of performance issues.


800
00:37:37,836 --> 00:37:39,476
But then when you go and
you look at the device,


801
00:37:39,476 --> 00:37:41,886
it's taking forever for this
particular page to load.


802
00:37:41,886 --> 00:37:44,616
So, always go and take at look
at the files that are here


803
00:37:44,616 --> 00:37:47,696
and make sure that they're
what you actually want


804
00:37:47,696 --> 00:37:51,706
because they all impact this
bar here to impact the load time


805
00:37:51,706 --> 00:37:54,676
and you want to keep it as
short as possible as I said.


806
00:37:55,206 --> 00:37:57,516
So clearly, I've got a
couple extraneous silly named


807
00:37:57,516 --> 00:37:58,146
files here.


808
00:37:58,576 --> 00:38:00,896
Another good example of
a best practice here,


809
00:38:01,196 --> 00:38:03,586
certainly in a cellular
network and in sort


810
00:38:03,586 --> 00:38:05,686
of low bandwidth
areas is pulling


811
00:38:05,686 --> 00:38:07,686
in a series of particles.


812
00:38:08,186 --> 00:38:11,306
Each one of these are
the little molecules


813
00:38:11,306 --> 00:38:13,096
that you see bouncing
around in that demo.


814
00:38:13,396 --> 00:38:15,916
There is a separate file
for each one of these.


815
00:38:15,916 --> 00:38:17,436
And one of our best practice is


816
00:38:17,436 --> 00:38:19,846
when we're doing mobile
development is to take all


817
00:38:19,846 --> 00:38:22,036
of those and combine
them into a single image


818
00:38:22,036 --> 00:38:25,366
so that you're only waiting for
that one file, a certain amount


819
00:38:25,366 --> 00:38:27,046
of time, but when
it comes you get all


820
00:38:27,046 --> 00:38:28,446
of the images associated
with it.


821
00:38:28,446 --> 00:38:30,226
So another good best practice is


822
00:38:30,226 --> 00:38:33,216
to not only remove this
extraneous content here


823
00:38:33,216 --> 00:38:35,326
but also take all
of those images


824
00:38:35,406 --> 00:38:37,396
and combine them into one.


825
00:38:38,256 --> 00:38:41,876
And I've got one of those
that's sort of pre-baked


826
00:38:41,876 --> 00:38:43,096
as well which I can show you.


827
00:38:43,096 --> 00:38:49,206
Let me go ahead and close this
and I'll pull up this one.


828
00:38:51,006 --> 00:38:53,296
And so I've gone back,
I've optimized my project.


829
00:38:53,296 --> 00:38:54,676
If I go and look
at the assets here,


830
00:38:54,676 --> 00:38:57,906
it just has the one JS file
that's required for this.


831
00:38:57,906 --> 00:38:59,516
This is where all
my code logic is.


832
00:38:59,936 --> 00:39:00,936
Here's my particles.


833
00:39:01,556 --> 00:39:03,566
All put together
within one image.


834
00:39:04,106 --> 00:39:06,656
And then if I zoom in a
little bit closer here,


835
00:39:06,656 --> 00:39:09,346
you'll see that iAd
Producer allows you


836
00:39:09,346 --> 00:39:12,466
to do this image spriting
technique with the single image.


837
00:39:12,466 --> 00:39:14,036
So there I've selected
one of the beads.


838
00:39:14,486 --> 00:39:16,066
If I go and look
at my Inspector,


839
00:39:17,586 --> 00:39:20,436
you'll see that it's using the
same image for every single one


840
00:39:20,436 --> 00:39:22,196
of these and it's just
computing an offset


841
00:39:22,196 --> 00:39:24,896
or it's using an offset
within that particular image.


842
00:39:24,896 --> 00:39:27,346
And you can actually see
it if I double-click in it.


843
00:39:27,346 --> 00:39:28,766
All of these other
images are here


844
00:39:28,766 --> 00:39:30,896
but we're just showing
a real slice of it.


845
00:39:30,896 --> 00:39:33,536
So it's making one
request, pulling it down


846
00:39:33,536 --> 00:39:35,116
and then just showing
a little portion of it.


847
00:39:35,376 --> 00:39:36,516
It's great best practice.


848
00:39:37,036 --> 00:39:40,446
All right, so let me go
back out to my overview.


849
00:39:40,446 --> 00:39:42,286
And so, what's-- what
am I going to do next?


850
00:39:42,286 --> 00:39:44,356
Well let's do a little
bit more sleuthing here.


851
00:39:44,356 --> 00:39:47,966
Let me go back and preview
it on the device and see


852
00:39:47,966 --> 00:39:51,246
if I have any gains,
and I bet I will.


853
00:39:53,366 --> 00:39:55,806
Launches, comes back up.


854
00:39:57,926 --> 00:39:58,306
It's running.


855
00:39:58,306 --> 00:40:00,706
I'm going to hit Start
Recording, do a Command-R


856
00:40:00,706 --> 00:40:04,706
to relaunch, and Stop Recording
'cause it's completely loaded.


857
00:40:04,706 --> 00:40:05,906
Now, look at the times here.


858
00:40:06,126 --> 00:40:08,016
I mean it brought it
down significantly.


859
00:40:08,016 --> 00:40:09,436
And although it was
a bit contrived,


860
00:40:09,896 --> 00:40:11,196
it's still fairly significant.


861
00:40:11,196 --> 00:40:12,756
Some of these files
that you'll use


862
00:40:12,756 --> 00:40:15,386
or may use physics libraries,
those types of things,


863
00:40:15,386 --> 00:40:17,516
in your ads or in your widgets


864
00:40:17,516 --> 00:40:20,886
when you're building them
can take up a huge amount


865
00:40:20,886 --> 00:40:23,756
of real estate in a
significant amount of time.


866
00:40:23,756 --> 00:40:26,206
And there is just the one
image being pulled back


867
00:40:26,206 --> 00:40:28,146
and then we're doing all the
right thing about spriting it.


868
00:40:28,176 --> 00:40:30,356
So, I don't remember what
the number was before,


869
00:40:30,356 --> 00:40:33,456
but this is probably a quarter
of the time that it was to load.


870
00:40:33,836 --> 00:40:36,346
So the faster that you can get
content on the page, the better,


871
00:40:36,346 --> 00:40:37,546
and that's what you want.


872
00:40:37,546 --> 00:40:39,866
You want this bar to be
further and further down,


873
00:40:40,336 --> 00:40:41,476
this number to be smaller.


874
00:40:41,746 --> 00:40:43,846
All right, another thing
that we can take a look


875
00:40:43,846 --> 00:40:46,856
at in this particular project
is sort of performance.


876
00:40:46,856 --> 00:40:47,916
We can look for hotspots.


877
00:40:47,916 --> 00:40:52,036
Where is this particular item
spending the bulk of its time?


878
00:40:52,086 --> 00:40:54,466
Maybe it's getting a
little sluggish and, OK,


879
00:40:54,466 --> 00:40:55,926
clearly something is going on.


880
00:40:56,236 --> 00:40:59,176
Well, I can hook in
to the profiler here


881
00:40:59,596 --> 00:41:01,006
and hit Start Profile.


882
00:41:01,006 --> 00:41:03,446
And you'll see we have two
different options for profiling.


883
00:41:03,446 --> 00:41:06,436
We can watch the JavaScript
as it's actually running.


884
00:41:06,786 --> 00:41:08,306
See all the calls it makes.


885
00:41:08,306 --> 00:41:11,716
We can do that for CSS selectors
as well and try to find


886
00:41:11,716 --> 00:41:15,646
out what's going on, where is
something spending the bulk


887
00:41:15,646 --> 00:41:16,306
of its time.


888
00:41:16,836 --> 00:41:18,786
So I want to do a
JavaScript profile


889
00:41:18,786 --> 00:41:19,816
in this particular example.


890
00:41:20,696 --> 00:41:21,566
Hit Profile.


891
00:41:21,636 --> 00:41:23,006
Now, it's going to run.


892
00:41:23,006 --> 00:41:25,496
The balls are bouncing
around here on my device.


893
00:41:25,496 --> 00:41:28,636
If this was a multi-page
add or multi-page widget,


894
00:41:28,686 --> 00:41:30,896
then you'd want to start
doing some navigation just


895
00:41:30,896 --> 00:41:32,026
so you got a good, you know,


896
00:41:32,076 --> 00:41:34,376
coverage of the app while
you're doing your profiling.


897
00:41:34,786 --> 00:41:36,156
But this is just
bouncing around.


898
00:41:36,156 --> 00:41:37,026
It's a single page.


899
00:41:37,026 --> 00:41:41,116
I'm going to hit Stop Profiling
and then select my profile.


900
00:41:41,116 --> 00:41:43,686
And here is where-- I'll zoom in
a little bit so you can see it.


901
00:41:44,176 --> 00:41:47,946
You'll see this little
disclosure item


902
00:41:47,946 --> 00:41:50,376
where it'll show me
all the function calls


903
00:41:50,486 --> 00:41:54,226
and how much time it's spending
within each one of them.


904
00:41:54,646 --> 00:41:57,196
Right, so there's-- 100 percent
of the calls are being made


905
00:41:57,196 --> 00:41:59,096
in this particular
program but I can also see


906
00:41:59,096 --> 00:42:02,616
that there is this particle
simulation move particle that's


907
00:42:02,616 --> 00:42:04,996
got the bulk of the
calls actually happening


908
00:42:04,996 --> 00:42:07,606
and all the other numbers
there are relatively small,


909
00:42:07,606 --> 00:42:08,586
and that sort of makes sense.


910
00:42:08,586 --> 00:42:10,936
The bulk of the code being
executed right now should be


911
00:42:10,936 --> 00:42:13,626
to move the little balls around,
so that makes total sense.


912
00:42:13,626 --> 00:42:17,236
And if I drill in a little bit
more, you'll see that something


913
00:42:17,236 --> 00:42:18,736
that doesn't make
sense is actually--


914
00:42:18,736 --> 00:42:22,886
it looks like the collision
detection is being called a lot


915
00:42:22,886 --> 00:42:25,416
more than actually the rest
of the code that's there.


916
00:42:25,416 --> 00:42:28,246
It's all about calculating
how close it is to something.


917
00:42:28,246 --> 00:42:30,556
And this is a real life
example that we run


918
00:42:30,556 --> 00:42:32,096
into when we were trying to--


919
00:42:32,196 --> 00:42:33,826
when the team was trying
to debug something.


920
00:42:34,136 --> 00:42:37,376
It was doing all sorts of
inappropriate calculations,


921
00:42:37,376 --> 00:42:39,716
spending way too much time
in this particular function.


922
00:42:39,986 --> 00:42:41,466
And the way they found
it was they found


923
00:42:41,466 --> 00:42:43,576
that it was spending the bulk
of its time in this call.


924
00:42:43,996 --> 00:42:46,476
And if you go over and you
click on the line there,


925
00:42:46,726 --> 00:42:49,476
it'll take you directly to that
call and you can review the code


926
00:42:49,476 --> 00:42:50,886
and you can say, "I see it.


927
00:42:50,886 --> 00:42:51,566
I was brain-dead.


928
00:42:51,566 --> 00:42:53,466
I put the wrong, you
know, item in here


929
00:42:53,466 --> 00:42:55,686
and this is why this
is misbehaving."


930
00:42:56,516 --> 00:42:58,526
So that's what JavaScript
profiling looks like.


931
00:42:59,076 --> 00:43:02,636
And taking a look
at network requests.


932
00:43:03,306 --> 00:43:06,996
The next thing that I'll do
is I'll show you some items


933
00:43:06,996 --> 00:43:08,216
on Instruments.


934
00:43:08,626 --> 00:43:11,186
So Instruments, as Chi
Wai said, it comes--


935
00:43:11,186 --> 00:43:14,126
it gets downloaded along
with the Xcode toolset.


936
00:43:14,126 --> 00:43:16,766
So I've got Xcode
on this device.


937
00:43:16,816 --> 00:43:18,646
But what's a little bit
frustrating if you're not used


938
00:43:18,646 --> 00:43:21,646
to it is the fact that if you
go looking for Instruments--


939
00:43:22,046 --> 00:43:23,446
I'll go into my launch pad here


940
00:43:24,256 --> 00:43:26,926
and just type INS,
it's not found.


941
00:43:26,926 --> 00:43:27,996
OK, I've downloaded Xcode.


942
00:43:27,996 --> 00:43:29,136
Where is this silly tool?


943
00:43:29,136 --> 00:43:33,696
Well it's actually embedded
within the Xcode bundle.


944
00:43:33,696 --> 00:43:35,826
So the best way to find it,
certainly the first time,


945
00:43:36,226 --> 00:43:40,376
is to go and use your
[inaudible] spotlight, type in,


946
00:43:40,956 --> 00:43:43,876
launch it, and now you've
got Instruments launched.


947
00:43:43,876 --> 00:43:46,826
And then you can do the
trick of saving it in the DOC


948
00:43:46,826 --> 00:43:49,046
and then you can go and access
it multiple times whenever you


949
00:43:49,046 --> 00:43:50,416
want to go and get access to it.


950
00:43:50,976 --> 00:43:52,676
So this is Instruments launched.


951
00:43:53,666 --> 00:43:56,306
And what we want to
do is take a look


952
00:43:56,306 --> 00:43:58,766
at the memory profile associated


953
00:43:58,766 --> 00:44:00,766
with this particular
demonstration.


954
00:44:01,216 --> 00:44:04,146
And so, what I'm going to use is
this Activity Monitor instrument


955
00:44:04,146 --> 00:44:04,606
that's here.


956
00:44:05,016 --> 00:44:08,016
Always make sure that you're
targeting the OS here 'cause I'm


957
00:44:08,016 --> 00:44:10,316
going to go and do the
profiling of the memory


958
00:44:10,316 --> 00:44:11,816
as it's actually on the device.


959
00:44:11,856 --> 00:44:14,396
Not a lot of need to
profile it while it's running


960
00:44:14,396 --> 00:44:15,806
on the MAC or in the simulator.


961
00:44:15,906 --> 00:44:17,806
So I'm going to choose
the Activity Monitor.


962
00:44:19,316 --> 00:44:19,896
Place it there.


963
00:44:20,836 --> 00:44:21,956
Now I've got in on the left.


964
00:44:21,956 --> 00:44:24,406
And now all I need to do is
say, "OK, Activity Monitor,


965
00:44:24,406 --> 00:44:27,866
I want you to monitor a
process that's running currently


966
00:44:27,866 --> 00:44:29,106
on this type of device."


967
00:44:29,646 --> 00:44:31,296
So under the process' dropdown,


968
00:44:31,296 --> 00:44:32,916
you'll see there's
my iPad connected,


969
00:44:33,266 --> 00:44:34,666
here's this machine as well.


970
00:44:34,666 --> 00:44:35,696
I don't care about that.


971
00:44:36,276 --> 00:44:38,936
With that iPad selected, I'm
going to go and choose a target.


972
00:44:39,456 --> 00:44:41,936
So this is the process that's
on this particular device


973
00:44:41,936 --> 00:44:42,846
that I want to connect to.


974
00:44:42,846 --> 00:44:46,026
So I can go and I can look at
the memory profile associated


975
00:44:46,026 --> 00:44:49,446
with my iAd or I can look at
the memory profile associated


976
00:44:49,446 --> 00:44:52,976
with my iBooks widget, the
tool will perform the same.


977
00:44:53,746 --> 00:44:55,646
So I'm going to choose
iBook's widget tester


978
00:44:55,646 --> 00:44:58,066
because Chi Wai's
example is a widget.


979
00:44:59,166 --> 00:45:02,346
Now I connect to that process
and what I want to do is come


980
00:45:02,346 --> 00:45:05,736
into my pad and press Record.


981
00:45:06,456 --> 00:45:12,826
It will go and launch
the widget tester.


982
00:45:12,916 --> 00:45:15,796
And if you can see, it's got
some pretty sweet graphs here,


983
00:45:17,016 --> 00:45:17,146
right.


984
00:45:17,146 --> 00:45:18,996
And you can see some
traces about how much


985
00:45:18,996 --> 00:45:21,766
of the memory is consumed and
that's fairly interesting.


986
00:45:21,766 --> 00:45:24,986
But what's really interesting
is testing the memory profile


987
00:45:24,986 --> 00:45:27,036
associated with my
particular widget or ad.


988
00:45:27,036 --> 00:45:28,546
So now I'm going to
go and launch that


989
00:45:29,456 --> 00:45:31,206
and you should see a
spike in memory here.


990
00:45:32,716 --> 00:45:34,006
And that's expected, right?


991
00:45:34,006 --> 00:45:36,036
There's a lot objects
being allocated.


992
00:45:36,096 --> 00:45:39,416
And if I look at this
chart, it looks pretty good.


993
00:45:39,416 --> 00:45:40,686
It looks fairly flat.


994
00:45:40,686 --> 00:45:41,906
And that's actually what I want.


995
00:45:41,906 --> 00:45:43,376
Once things settle
down a little bit,


996
00:45:43,696 --> 00:45:45,496
I should see memory allocated.


997
00:45:45,696 --> 00:45:48,986
It sort of gets free and then
it finds this sort of flat line


998
00:45:49,386 --> 00:45:51,196
of coexistence on the platform.


999
00:45:51,196 --> 00:45:53,996
And that's what you want to see,
maybe little bump here and then.


1000
00:45:53,996 --> 00:45:56,246
But if you see some
sort of incline,


1001
00:45:56,246 --> 00:45:57,986
that means you're
leaking memory associated


1002
00:45:57,986 --> 00:45:59,026
with your particular project.


1003
00:45:59,026 --> 00:46:01,406
Maybe things aren't getting
freed or you're just building


1004
00:46:01,406 --> 00:46:03,236
up arrays until they explode.


1005
00:46:03,646 --> 00:46:06,476
So this data down here,
it's a lot of data


1006
00:46:06,476 --> 00:46:10,116
and all we really care about
is our iBook widget tester


1007
00:46:10,116 --> 00:46:11,496
that we're taking a look at.


1008
00:46:11,496 --> 00:46:13,956
So if I spell it, i-B-o-o--


1009
00:46:13,956 --> 00:46:15,536
you'll see here,
I've zeroed down.


1010
00:46:15,536 --> 00:46:16,906
And now I've got
actually the raw data.


1011
00:46:16,906 --> 00:46:19,396
Instead of just looking
at a pretty chart up here,


1012
00:46:19,396 --> 00:46:22,106
you'll see that I can look
at the real memory as well


1013
00:46:22,106 --> 00:46:23,096
as the virtual memory.


1014
00:46:23,366 --> 00:46:25,336
And you just want to make
sure that these numbers,


1015
00:46:25,336 --> 00:46:27,356
even though they'll
bounce around a little bit,


1016
00:46:27,356 --> 00:46:30,216
they always hover within
a particular range.


1017
00:46:30,536 --> 00:46:32,586
And that range will vary
based on the content


1018
00:46:32,586 --> 00:46:33,666
that you've got on a page.


1019
00:46:33,666 --> 00:46:36,076
So, this is a great
best practice especially


1020
00:46:36,076 --> 00:46:38,446
if you're using WebGL
with a lot of vertices.


1021
00:46:38,866 --> 00:46:42,216
Depending on what you're
doing, you may have constraints


1022
00:46:42,216 --> 00:46:44,106
in memory if you're
building an ad.


1023
00:46:44,106 --> 00:46:45,956
There might be a cap
'cause you're running


1024
00:46:45,956 --> 00:46:47,086
in a shared memory space


1025
00:46:47,086 --> 00:46:49,186
with the application
that's displaying your ad.


1026
00:46:49,666 --> 00:46:51,056
You might have other
constraints.


1027
00:46:51,376 --> 00:46:54,656
Again, this tool is a great way
to look at the visual aspects


1028
00:46:54,656 --> 00:46:56,676
of how your memory is
being consumed as well


1029
00:46:56,676 --> 00:46:59,216
as the raw data associated
with it.


1030
00:46:59,616 --> 00:47:02,326
So that's it for Instruments
and the Web Inspector.


1031
00:47:02,326 --> 00:47:04,066
Let me turn it back
over to Chi Wai.


1032
00:47:05,516 --> 00:47:09,426
[ Applause ]


1033
00:47:09,926 --> 00:47:10,496
>> Thank you Mark.


1034
00:47:11,476 --> 00:47:13,526
With Instruments
and Web Inspector,


1035
00:47:13,686 --> 00:47:15,916
we know that we're not flying
in the dark when we run


1036
00:47:15,916 --> 00:47:17,166
into performance issue.


1037
00:47:18,296 --> 00:47:19,646
Now, let me give you a summary.


1038
00:47:20,886 --> 00:47:23,816
Very first thing,
always test on device.


1039
00:47:25,166 --> 00:47:27,826
Second item, always
test on device.


1040
00:47:29,376 --> 00:47:31,476
As I showed you earlier,
what you see


1041
00:47:31,476 --> 00:47:33,846
on a MAC simulation could
be with [inaudible] thing.


1042
00:47:33,916 --> 00:47:36,016
So, I'm going to say
it one more time.


1043
00:47:36,366 --> 00:47:37,146
Test on device.


1044
00:47:37,616 --> 00:47:43,206
So, with Web Inspector
it's really easy


1045
00:47:43,206 --> 00:47:46,666
to identify CPU hotspot
and we can also look


1046
00:47:46,666 --> 00:47:48,426
at the network traffic life.


1047
00:47:49,596 --> 00:47:51,766
And we can help by
doing image spriting


1048
00:47:52,636 --> 00:47:54,426
and also removing unused asset.


1049
00:47:55,026 --> 00:48:01,396
With Instrument, we can memory
the memory footprint on device


1050
00:48:02,176 --> 00:48:05,786
and we can save some memory
by removing hidden element


1051
00:48:05,836 --> 00:48:07,136
by applying display:none.


1052
00:48:07,696 --> 00:48:10,796
So what we have learned today.


1053
00:48:11,956 --> 00:48:15,846
We learned that iBook widget
and iAd are just mini website


1054
00:48:15,846 --> 00:48:18,496
within an HTML, CSS
and JavaScript.


1055
00:48:19,776 --> 00:48:22,236
And we learned that we
can do customization


1056
00:48:22,236 --> 00:48:23,866
with the same exact technology.


1057
00:48:24,466 --> 00:48:28,856
I showed you how we can put
data from a remote server


1058
00:48:29,086 --> 00:48:31,616
and show the data in
a multi-cell object.


1059
00:48:32,826 --> 00:48:36,766
And lastly, we looked at Web
Inspector and Instruments.


1060
00:48:37,646 --> 00:48:39,976
You can do some powerful
performance analysis


1061
00:48:39,976 --> 00:48:40,896
with these tools.


1062
00:48:41,366 --> 00:48:45,626
With what you learned,
go download iAd Producer.


1063
00:48:46,406 --> 00:48:47,246
It's free.


1064
00:48:47,246 --> 00:48:50,806
It's fun. It's super easy
to create amazing content


1065
00:48:50,806 --> 00:48:51,856
with great performance.


1066
00:48:52,356 --> 00:48:56,866
For more information,
contact Mark Malone.


1067
00:48:57,216 --> 00:48:59,386
He's our iAd Technology
Evangelist,


1068
00:48:59,576 --> 00:49:02,116
also our awesome demo
person of the day.


1069
00:49:02,116 --> 00:49:07,316
There is documentation
online and developer forum


1070
00:49:07,316 --> 00:49:08,376
in case you need help.


1071
00:49:08,946 --> 00:49:12,076
Here are some related sessions.


1072
00:49:12,766 --> 00:49:15,166
I mentioned earlier,
there is an Introduction


1073
00:49:15,166 --> 00:49:17,186
to iAd Producer happened
this morning.


1074
00:49:17,236 --> 00:49:19,376
The video should be
available shortly online.


1075
00:49:20,406 --> 00:49:24,626
There will be iAd Integration
session happening tomorrow.


1076
00:49:25,816 --> 00:49:27,836
There're two Web
Inspector sessions


1077
00:49:27,836 --> 00:49:28,846
that happened yesterday.


1078
00:49:28,986 --> 00:49:31,036
The videos should be
available online by now.


1079
00:49:32,376 --> 00:49:34,996
And if you are interested
and want to learn more


1080
00:49:34,996 --> 00:49:37,296
about Instrument, there's a
session tomorrow you should


1081
00:49:37,296 --> 00:49:38,296
definitely check it out.


1082
00:49:39,426 --> 00:49:40,766
Thank you for attending
this session.


1083
00:49:40,806 --> 00:49:41,556
I will see you around.


1084
00:49:42,016 --> 00:49:43,000
[ Applause ]

