1
00:00:07,516 --> 00:00:16,500
[ Music ]


2
00:00:22,046 --> 00:00:23,106
>> My name is David Duncan.


3
00:00:23,506 --> 00:00:25,126
I'll be joined on stage by my


4
00:00:25,126 --> 00:00:26,886
colleague Tyler Fox and Russell


5
00:00:26,886 --> 00:00:27,266
Ladd.


6
00:00:27,826 --> 00:00:29,136
And we're here to talk to you


7
00:00:29,666 --> 00:00:31,586
about building apps for every


8
00:00:31,656 --> 00:00:32,586
size and shape.


9
00:00:33,116 --> 00:00:36,826
So I don't know how many of you


10
00:00:36,886 --> 00:00:38,186
were here back when we released


11
00:00:38,186 --> 00:00:39,826
iOS2 on the original iPhone.


12
00:00:40,306 --> 00:00:41,776
But you had one screen size to


13
00:00:41,776 --> 00:00:42,446
work with then.


14
00:00:43,396 --> 00:00:46,446
But today, we've got iPhones.


15
00:00:46,536 --> 00:00:47,436
We've got iPads.


16
00:00:47,986 --> 00:00:49,006
Multiple sizes.


17
00:00:49,526 --> 00:00:51,066
We've got the iPhone 10, the


18
00:00:51,066 --> 00:00:52,776
brilliant new screen, and a new


19
00:00:52,776 --> 00:00:54,166
shape for you to build your apps


20
00:00:54,216 --> 00:00:54,366
to.


21
00:00:54,876 --> 00:00:57,256
For this talk we're going to be


22
00:00:57,256 --> 00:00:59,076
using our Bagel Times app as an


23
00:00:59,076 --> 00:01:01,196
example of a design that adapts


24
00:01:01,316 --> 00:01:03,886
beautifully to iPhone 10 and


25
00:01:03,886 --> 00:01:04,495
iPhone 8.


26
00:01:06,236 --> 00:01:08,266
And so these are the three


27
00:01:08,266 --> 00:01:09,396
things we're going to be talking


28
00:01:09,396 --> 00:01:10,216
to you about today.


29
00:01:11,186 --> 00:01:12,726
I'll be speaking about safe area


30
00:01:12,726 --> 00:01:13,716
and layout margins.


31
00:01:13,876 --> 00:01:14,906
How you can use them in your


32
00:01:14,906 --> 00:01:16,756
application to adapt to various


33
00:01:16,756 --> 00:01:17,916
screen sizes and shapes.


34
00:01:19,116 --> 00:01:21,546
Then Tyler will come up and talk


35
00:01:21,546 --> 00:01:22,576
to you about scroll views.


36
00:01:22,726 --> 00:01:24,406
How they interact with safe


37
00:01:24,406 --> 00:01:25,686
area, layout margins, and other


38
00:01:25,686 --> 00:01:26,926
UIKit technologies.


39
00:01:27,346 --> 00:01:30,856
And finally, Russell will get up


40
00:01:30,856 --> 00:01:32,236
and talk to you about using all


41
00:01:32,236 --> 00:01:34,096
UIKit tools to build adaptive


42
00:01:34,096 --> 00:01:34,936
applications.


43
00:01:36,086 --> 00:01:38,156
And so with that, let's get to


44
00:01:38,156 --> 00:01:39,686
talking about safe area and


45
00:01:39,686 --> 00:01:40,456
layout margins.


46
00:01:42,016 --> 00:01:44,646
So what is a safe area, and what


47
00:01:44,646 --> 00:01:46,166
does it look like on the devices


48
00:01:46,166 --> 00:01:47,026
that you've come to know and


49
00:01:47,026 --> 00:01:47,576
love?


50
00:01:48,406 --> 00:01:50,336
Well, on an iPhone 8 with a


51
00:01:50,336 --> 00:01:52,536
rectangular screen, the entire


52
00:01:52,536 --> 00:01:53,666
screen is a safe area.


53
00:01:54,236 --> 00:01:56,356
All of it's there, no overlaps


54
00:01:56,356 --> 00:01:58,986
on your content.


55
00:01:58,986 --> 00:02:01,286
On iPhone 10, there's a little


56
00:02:01,286 --> 00:02:02,856
extra space that's taken up on


57
00:02:02,856 --> 00:02:03,976
the top and bottom by the


58
00:02:03,976 --> 00:02:07,226
hardware that will be taken away


59
00:02:07,226 --> 00:02:08,936
from the safe area for your


60
00:02:08,936 --> 00:02:09,545
application.


61
00:02:10,606 --> 00:02:12,196
And in landscape, you've got


62
00:02:12,196 --> 00:02:13,216
something kind of similar where


63
00:02:13,726 --> 00:02:14,866
we've given you a symmetric


64
00:02:14,866 --> 00:02:16,606
layout with space on the bottom


65
00:02:16,606 --> 00:02:18,326
for the home indicator for you


66
00:02:18,326 --> 00:02:19,986
to lay your content in safely.


67
00:02:19,986 --> 00:02:22,766
But what other devices might


68
00:02:22,766 --> 00:02:24,286
have a safe area that's not the


69
00:02:24,286 --> 00:02:24,986
entire screen?


70
00:02:26,696 --> 00:02:29,156
Well, Apple TV actually might


71
00:02:29,156 --> 00:02:30,996
give you the situation because


72
00:02:30,996 --> 00:02:33,866
certain TVs will have a screen


73
00:02:33,966 --> 00:02:35,436
that actually extends past


74
00:02:35,436 --> 00:02:36,656
what's visible to the user.


75
00:02:37,346 --> 00:02:38,746
And those will represent their


76
00:02:38,746 --> 00:02:40,096
information based on something


77
00:02:40,096 --> 00:02:41,736
called overscan compensation.


78
00:02:42,516 --> 00:02:43,506
And that overscan will be


79
00:02:43,506 --> 00:02:45,156
represented as a safe area in


80
00:02:45,196 --> 00:02:46,606
any apps that you build for


81
00:02:46,606 --> 00:02:47,156
Apple TV.


82
00:02:48,516 --> 00:02:50,246
So now that we've seen a few


83
00:02:50,246 --> 00:02:51,836
examples of what the safe area


84
00:02:51,836 --> 00:02:53,146
looks like at the screen of a


85
00:02:53,146 --> 00:02:55,226
device, how does that get to


86
00:02:55,226 --> 00:02:56,076
your views?


87
00:02:56,636 --> 00:02:58,286
And how do you use that in your


88
00:02:58,286 --> 00:02:59,816
own applications to build


89
00:02:59,816 --> 00:03:00,866
adaptive applications?


90
00:03:03,236 --> 00:03:05,296
So let's just pick up an


91
00:03:05,296 --> 00:03:06,106
arbitrary view.


92
00:03:06,676 --> 00:03:07,316
Whole thing.


93
00:03:08,166 --> 00:03:09,876
There are four insets on the


94
00:03:09,876 --> 00:03:11,926
top, bottom, and left and right


95
00:03:12,596 --> 00:03:15,236
that represent areas that might


96
00:03:15,236 --> 00:03:17,456
have some kind of overlay or


97
00:03:17,456 --> 00:03:18,936
other thing that might occlude


98
00:03:18,936 --> 00:03:20,456
your content if you placed it


99
00:03:20,456 --> 00:03:20,626
there.


100
00:03:21,826 --> 00:03:23,466
You can access this on your UI


101
00:03:23,466 --> 00:03:25,966
views using the safe area insets


102
00:03:25,966 --> 00:03:26,426
property.


103
00:03:26,916 --> 00:03:28,966
A UI edge inset that has those


104
00:03:28,966 --> 00:03:29,696
four values.


105
00:03:31,116 --> 00:03:32,286
Now if you're doing layout with


106
00:03:32,286 --> 00:03:33,726
Auto Layout, you actually might


107
00:03:33,726 --> 00:03:35,906
want to just see the entire rec


108
00:03:36,066 --> 00:03:36,686
that's safe.


109
00:03:37,306 --> 00:03:39,336
And you can get that by looking


110
00:03:39,336 --> 00:03:41,236
at the safe area layout guide.


111
00:03:41,586 --> 00:03:43,966
Which is a UI layout guide that


112
00:03:44,326 --> 00:03:45,916
represents that information.


113
00:03:46,036 --> 00:03:47,286
It has layout anchors for you to


114
00:03:47,286 --> 00:03:48,166
do Auto Layout with.


115
00:03:48,306 --> 00:03:49,606
And a layout frame if you just


116
00:03:49,606 --> 00:03:50,416
want to see the actual


117
00:03:50,416 --> 00:03:50,876
rectangle.


118
00:03:52,896 --> 00:03:54,966
So now that we've seen how


119
00:03:54,966 --> 00:03:56,166
that's represented on our view,


120
00:03:56,166 --> 00:03:58,676
let's take a look at how it gets


121
00:03:58,676 --> 00:04:00,846
from one view to the next.


122
00:04:01,456 --> 00:04:03,846
So we'll just take away the text


123
00:04:04,226 --> 00:04:05,296
and add a subview.


124
00:04:05,446 --> 00:04:07,136
And this is going to cover most


125
00:04:07,136 --> 00:04:10,336
of the bottom edge of that view.


126
00:04:10,556 --> 00:04:12,836
Now, how does the safe area get


127
00:04:12,836 --> 00:04:13,946
calculated for this?


128
00:04:14,406 --> 00:04:17,146
Well, as we saw, that subview


129
00:04:17,146 --> 00:04:19,435
that we just added, it intrudes


130
00:04:19,505 --> 00:04:21,116
on the unsafe parts of the view


131
00:04:21,276 --> 00:04:24,816
on the left, right, and bottom


132
00:04:24,816 --> 00:04:25,576
of its superview.


133
00:04:25,836 --> 00:04:27,816
And so those are the values that


134
00:04:27,816 --> 00:04:29,596
you will see in the UI edge


135
00:04:29,596 --> 00:04:31,226
insets represented by the safe


136
00:04:31,226 --> 00:04:32,626
area insets property on that


137
00:04:32,676 --> 00:04:33,056
subview.


138
00:04:33,856 --> 00:04:35,736
And similarly, you'll see a safe


139
00:04:35,736 --> 00:04:37,526
area layout guide whose layout


140
00:04:37,526 --> 00:04:40,356
frame looks kind of like this.


141
00:04:40,556 --> 00:04:43,786
Now once you've seen this, and


142
00:04:43,786 --> 00:04:45,656
you've got a view, you might


143
00:04:45,656 --> 00:04:46,896
want to actually add additional


144
00:04:46,896 --> 00:04:48,696
insets for your UI.


145
00:04:48,786 --> 00:04:49,816
You might decide that you want


146
00:04:49,816 --> 00:04:51,746
to add controls through your


147
00:04:51,746 --> 00:04:53,456
view controllers that will then


148
00:04:53,456 --> 00:04:55,096
add to the safe area or subtract


149
00:04:55,096 --> 00:04:56,736
from the safe area for your


150
00:04:56,736 --> 00:04:57,346
subviews.


151
00:04:58,076 --> 00:04:58,856
So we'll go ahead and add


152
00:04:58,856 --> 00:05:01,386
another subview here.


153
00:05:01,906 --> 00:05:03,726
And along with that, it will


154
00:05:03,726 --> 00:05:05,516
have a view controller because a


155
00:05:05,516 --> 00:05:06,456
view controller is where we


156
00:05:06,456 --> 00:05:07,526
actually have the property that


157
00:05:07,526 --> 00:05:09,006
allows you to add additional


158
00:05:09,006 --> 00:05:09,606
insets.


159
00:05:10,106 --> 00:05:11,346
And that property is called


160
00:05:12,826 --> 00:05:14,616
additional safe area insets.


161
00:05:15,496 --> 00:05:16,336
We're going to go ahead and


162
00:05:16,336 --> 00:05:17,906
inherit the insets we got from


163
00:05:17,906 --> 00:05:18,316
our parent.


164
00:05:19,446 --> 00:05:21,116
Add those additional safe area


165
00:05:21,116 --> 00:05:22,366
insets to this view.


166
00:05:23,026 --> 00:05:24,616
And finally construct the final


167
00:05:24,616 --> 00:05:26,736
safe area that let-- , layout


168
00:05:27,226 --> 00:05:27,326
guide.


169
00:05:28,196 --> 00:05:29,506
What other things might you want


170
00:05:29,506 --> 00:05:30,646
to know about how safe area


171
00:05:30,646 --> 00:05:31,816
behaves in your application?


172
00:05:32,636 --> 00:05:33,796
Well, let's take a look at


173
00:05:33,796 --> 00:05:34,576
another example.


174
00:05:35,136 --> 00:05:37,086
Here we've got one view safely


175
00:05:37,086 --> 00:05:38,366
inside of the safe area of its


176
00:05:38,476 --> 00:05:38,776
parent.


177
00:05:39,356 --> 00:05:40,676
So that view safe area, of


178
00:05:40,726 --> 00:05:42,276
course, encapsulates the entire


179
00:05:42,276 --> 00:05:43,066
region of that view.


180
00:05:43,856 --> 00:05:45,186
And we'll move it closer to one


181
00:05:45,186 --> 00:05:46,766
edge and as you might expect,


182
00:05:46,766 --> 00:05:47,756
we're not going to gain a safe


183
00:05:47,756 --> 00:05:49,406
area because we haven't left the


184
00:05:49,406 --> 00:05:50,706
safe area of our parent yet.


185
00:05:51,096 --> 00:05:53,196
We'll move a little bit further


186
00:05:53,196 --> 00:05:55,236
out, and you'll see that the


187
00:05:55,236 --> 00:05:56,996
bottom inset on that safe area


188
00:05:56,996 --> 00:05:57,966
now grows a little bit.


189
00:05:58,236 --> 00:05:59,486
It takes up a part where it


190
00:05:59,486 --> 00:06:01,716
overlaps, where it extends


191
00:06:01,716 --> 00:06:03,146
outside of the safe area of its


192
00:06:03,206 --> 00:06:03,566
parent.


193
00:06:04,276 --> 00:06:05,366
And as we move closer to the


194
00:06:05,366 --> 00:06:07,036
edge there, it continues to


195
00:06:07,036 --> 00:06:07,446
extend.


196
00:06:08,666 --> 00:06:09,556
Now what might you expect to


197
00:06:09,556 --> 00:06:10,816
happen if we move this view


198
00:06:10,816 --> 00:06:12,186
further off the bottom edge of


199
00:06:12,186 --> 00:06:12,676
its parent?


200
00:06:14,636 --> 00:06:16,506
Well, how about that?


201
00:06:16,506 --> 00:06:18,246
The safe area did not grow any


202
00:06:18,246 --> 00:06:19,796
further as the view moved


203
00:06:19,796 --> 00:06:20,776
outside of its parent.


204
00:06:21,676 --> 00:06:23,426
No matter how far outside of the


205
00:06:23,426 --> 00:06:24,986
parent that view might go.


206
00:06:24,986 --> 00:06:26,506
And you might be asking


207
00:06:26,506 --> 00:06:28,066
yourself, "Why would that, why


208
00:06:28,066 --> 00:06:28,746
would we do that?


209
00:06:29,006 --> 00:06:29,946
What's the purpose here?"


210
00:06:30,906 --> 00:06:32,526
And the answer is animation.


211
00:06:33,266 --> 00:06:34,546
In this particular case, we're


212
00:06:34,546 --> 00:06:35,836
moving this subview out of its


213
00:06:35,886 --> 00:06:36,306
parent.


214
00:06:36,886 --> 00:06:38,156
We wouldn't want the content to


215
00:06:38,156 --> 00:06:39,516
stay inside of the safe area


216
00:06:39,786 --> 00:06:40,746
because then it wouldn't move


217
00:06:40,846 --> 00:06:41,706
with its own parent.


218
00:06:42,466 --> 00:06:44,036
And as an example, we can see


219
00:06:44,036 --> 00:06:44,496
this app.


220
00:06:45,156 --> 00:06:47,286
Where we're going to pull up a


221
00:06:47,286 --> 00:06:48,256
view on the bottom.


222
00:06:49,596 --> 00:06:50,986
If that view had been laid out


223
00:06:50,986 --> 00:06:51,956
against the safe area of the


224
00:06:51,956 --> 00:06:54,046
parent, or its parent, and that


225
00:06:54,046 --> 00:06:56,156
parent's safe area would extend


226
00:06:56,386 --> 00:06:57,366
the farther it grew off the


227
00:06:57,366 --> 00:06:59,576
bottom of the screen, then this


228
00:06:59,576 --> 00:07:02,516
area would have stayed on screen


229
00:07:02,736 --> 00:07:04,236
during the entire transition,


230
00:07:05,066 --> 00:07:06,156
which would have meant that you


231
00:07:06,156 --> 00:07:07,286
would have not seen the


232
00:07:07,286 --> 00:07:08,406
background come up with it.


233
00:07:09,156 --> 00:07:10,936
And so that's why the safe area


234
00:07:10,936 --> 00:07:12,486
never grows larger on any


235
00:07:12,486 --> 00:07:14,136
dimension than what its parent


236
00:07:14,136 --> 00:07:14,506
provides.


237
00:07:15,996 --> 00:07:18,466
So to summarize that safe area


238
00:07:18,466 --> 00:07:19,936
part, let's took a look at how


239
00:07:19,936 --> 00:07:21,606
you can interact with it.


240
00:07:22,296 --> 00:07:23,646
Again, we've already mentioned


241
00:07:23,646 --> 00:07:25,236
the safe area insets property


242
00:07:25,586 --> 00:07:26,726
and the safe area layout guide


243
00:07:26,726 --> 00:07:27,146
property.


244
00:07:28,126 --> 00:07:29,986
But if your view needs to react


245
00:07:30,066 --> 00:07:31,936
to when safe area insets change,


246
00:07:32,286 --> 00:07:33,906
then you can override the safe


247
00:07:33,906 --> 00:07:36,506
area insets did change method.


248
00:07:37,316 --> 00:07:38,846
Typical thing you might do is


249
00:07:38,846 --> 00:07:39,966
just call set needs layout.


250
00:07:39,966 --> 00:07:40,866
But if there's any additional


251
00:07:40,866 --> 00:07:41,926
logic you need to run, that's


252
00:07:41,926 --> 00:07:42,486
okay too.


253
00:07:43,796 --> 00:07:45,116
If your view controller needs to


254
00:07:45,116 --> 00:07:46,716
respond to its view safe area


255
00:07:46,766 --> 00:07:48,716
layout changing, then you can


256
00:07:48,716 --> 00:07:50,766
override view safe area insets


257
00:07:50,766 --> 00:07:52,086
did change on your view


258
00:07:52,086 --> 00:07:52,616
controller.


259
00:07:53,626 --> 00:07:55,126
And finally, if you're doing


260
00:07:55,126 --> 00:07:56,756
your interface in IB, you can


261
00:07:57,056 --> 00:07:59,106
use that safe area property


262
00:07:59,546 --> 00:08:01,666
that's shown in the view list to


263
00:08:02,376 --> 00:08:03,966
build your constraints against


264
00:08:03,966 --> 00:08:04,596
the safe area.


265
00:08:04,916 --> 00:08:07,956
And so a safe area is explained.


266
00:08:08,346 --> 00:08:09,506
Let's talk a little bit about


267
00:08:09,506 --> 00:08:10,000
layout margins.


268
00:08:13,356 --> 00:08:17,356
So layout margins are padding.


269
00:08:18,026 --> 00:08:19,036
They're a property that, in


270
00:08:19,036 --> 00:08:20,556
general, you have full control


271
00:08:20,556 --> 00:08:24,056
over and allows you to specify a


272
00:08:24,056 --> 00:08:25,306
space from the edges of the


273
00:08:25,306 --> 00:08:25,536
view.


274
00:08:26,826 --> 00:08:28,116
Just like with safe areas,


275
00:08:28,376 --> 00:08:30,196
they're represented by a UI edge


276
00:08:30,196 --> 00:08:31,686
insets property, this time


277
00:08:31,686 --> 00:08:32,866
called layout margins.


278
00:08:33,996 --> 00:08:36,596
Now last year, we also added


279
00:08:37,256 --> 00:08:38,486
directional layout margins.


280
00:08:39,216 --> 00:08:40,866
These differ from layout margins


281
00:08:41,126 --> 00:08:42,885
in that layout margins use a UI


282
00:08:42,946 --> 00:08:45,496
Edge Insets value while


283
00:08:45,496 --> 00:08:47,116
directional layout margins uses


284
00:08:47,116 --> 00:08:48,626
an NS directional edge insets.


285
00:08:48,626 --> 00:08:50,376
And the primary difference


286
00:08:50,376 --> 00:08:52,016
between those two structures is


287
00:08:52,016 --> 00:08:53,576
that directional insets use


288
00:08:53,576 --> 00:08:54,986
leading and trailing instead of


289
00:08:54,986 --> 00:08:56,846
left and right, which makes it


290
00:08:56,846 --> 00:08:58,316
really easy for you to create


291
00:08:58,476 --> 00:09:01,316
layout margins that adapt to RTL


292
00:09:01,316 --> 00:09:01,816
layouts.


293
00:09:02,036 --> 00:09:02,866
So you don't have to do the


294
00:09:02,866 --> 00:09:04,116
swapping between left and right


295
00:09:04,116 --> 00:09:05,356
when you use directional layout


296
00:09:05,356 --> 00:09:05,806
margins.


297
00:09:07,186 --> 00:09:09,606
Now, just as with safe area, we


298
00:09:09,606 --> 00:09:11,226
provide a margins guide as well


299
00:09:11,226 --> 00:09:12,596
called a layout margins guide


300
00:09:13,586 --> 00:09:14,446
that you can use with Auto


301
00:09:14,446 --> 00:09:16,456
Layout to layout content against


302
00:09:16,876 --> 00:09:17,556
that margin.


303
00:09:18,406 --> 00:09:20,516
And then we go ahead and put our


304
00:09:20,516 --> 00:09:22,276
content inside of that view.


305
00:09:22,856 --> 00:09:25,696
Now the next question you might


306
00:09:25,696 --> 00:09:27,226
be asking since we're talking


307
00:09:27,226 --> 00:09:28,536
about layout margins and safe


308
00:09:28,536 --> 00:09:32,296
areas together is how do the two


309
00:09:32,296 --> 00:09:32,986
interact?


310
00:09:34,286 --> 00:09:35,466
Well let's go ahead and bring


311
00:09:35,466 --> 00:09:36,246
those markers back.


312
00:09:37,216 --> 00:09:38,646
Oh yeah, I meant to talk about


313
00:09:38,696 --> 00:09:40,206
how you can change those


314
00:09:42,026 --> 00:09:42,646
[inaudible] layout.


315
00:09:42,716 --> 00:09:46,266
So with safe area, by default,


316
00:09:46,926 --> 00:09:49,076
we build the safe area, and then


317
00:09:49,076 --> 00:09:50,866
we build the layout margins with


318
00:09:50,866 --> 00:09:52,166
respect to the safe area.


319
00:09:52,736 --> 00:09:54,796
And we do this for the perfectly


320
00:09:54,796 --> 00:09:57,276
obvious answer that by default,


321
00:09:57,276 --> 00:09:58,666
you probably actually want this.


322
00:09:58,666 --> 00:09:59,816
You want your layout margins


323
00:09:59,876 --> 00:10:01,596
inside of the safe area because


324
00:10:01,596 --> 00:10:02,556
they represent additional


325
00:10:02,556 --> 00:10:04,076
padding against the layout that


326
00:10:04,076 --> 00:10:04,616
you want to do.


327
00:10:05,996 --> 00:10:08,566
But we thought to ourselves,


328
00:10:09,006 --> 00:10:10,036
"Hey, some people may not


329
00:10:10,036 --> 00:10:10,856
actually want this."


330
00:10:11,436 --> 00:10:12,696
And so we made it very easy for


331
00:10:12,696 --> 00:10:13,746
you to flip this default.


332
00:10:14,276 --> 00:10:15,616
And so if you just change the


333
00:10:15,616 --> 00:10:17,386
insets layout margins from safe


334
00:10:17,386 --> 00:10:19,536
area property from true to


335
00:10:19,536 --> 00:10:22,056
false, then we'll go ahead and


336
00:10:22,056 --> 00:10:23,386
move layout margins back to the


337
00:10:23,386 --> 00:10:24,136
bounds of the view.


338
00:10:24,606 --> 00:10:26,216
As a [inaudible] instead of


339
00:10:26,216 --> 00:10:27,656
being encapsulated inside.


340
00:10:28,626 --> 00:10:29,366
So what else can you do with


341
00:10:29,366 --> 00:10:29,926
layout margins?


342
00:10:30,976 --> 00:10:33,006
Well, we already saw that by


343
00:10:33,006 --> 00:10:34,936
default, safe area margins


344
00:10:35,006 --> 00:10:36,276
propagate down the hierarchy.


345
00:10:36,806 --> 00:10:39,346
But with layout margins, they go


346
00:10:39,346 --> 00:10:39,926
by default.


347
00:10:40,326 --> 00:10:41,626
Because by default, your layout


348
00:10:41,626 --> 00:10:42,716
probably wants to be fairly


349
00:10:42,716 --> 00:10:43,966
independent with margins as


350
00:10:43,966 --> 00:10:45,136
opposed to safe area, which


351
00:10:45,136 --> 00:10:47,286
represents a concept that really


352
00:10:47,286 --> 00:10:48,086
is for the entire view


353
00:10:48,086 --> 00:10:48,616
hierarchy.


354
00:10:50,076 --> 00:10:51,416
But if you want to have


355
00:10:51,416 --> 00:10:52,786
propagation, you can flip this


356
00:10:52,786 --> 00:10:55,136
on view by view by changing


357
00:10:55,136 --> 00:10:56,336
preserve super view layout


358
00:10:56,336 --> 00:10:59,086
margins from false to true.


359
00:10:59,326 --> 00:11:01,466
And we'll go ahead and line up


360
00:11:01,516 --> 00:11:03,196
those margins that are smaller


361
00:11:03,696 --> 00:11:05,356
than the parents in order to


362
00:11:05,356 --> 00:11:06,556
make sure that everything lines


363
00:11:06,556 --> 00:11:08,336
up naturally between a child and


364
00:11:08,336 --> 00:11:08,986
its parent view.


365
00:11:11,056 --> 00:11:12,996
Now in years past, you've


366
00:11:12,996 --> 00:11:15,026
probably also tried to change


367
00:11:15,026 --> 00:11:16,456
layout margins of your view


368
00:11:16,456 --> 00:11:17,346
controller views.


369
00:11:18,196 --> 00:11:19,926
And if you look at what we do by


370
00:11:19,926 --> 00:11:20,506
default.


371
00:11:21,326 --> 00:11:23,366
That this margin that you'll see


372
00:11:23,416 --> 00:11:24,186
against that view.


373
00:11:25,166 --> 00:11:27,376
Now we additionally added a


374
00:11:27,376 --> 00:11:29,976
property last year called system


375
00:11:29,976 --> 00:11:32,276
minimum layout margins and these


376
00:11:32,276 --> 00:11:33,986
margins are the minimum margins


377
00:11:34,026 --> 00:11:36,336
that we've combined against any


378
00:11:36,336 --> 00:11:38,596
margins you provide now to


379
00:11:38,596 --> 00:11:39,676
create the final margin.


380
00:11:40,226 --> 00:11:41,296
So if you wanted to add to the


381
00:11:41,296 --> 00:11:42,796
top and bottom of this, you can


382
00:11:42,796 --> 00:11:44,516
do that without disturbing the


383
00:11:44,516 --> 00:11:45,776
left and right margins that


384
00:11:45,776 --> 00:11:46,546
UIKit provides.


385
00:11:47,536 --> 00:11:48,836
But again, you might want a


386
00:11:48,836 --> 00:11:49,776
little bit more control.


387
00:11:49,826 --> 00:11:51,606
And so there's another property


388
00:11:52,786 --> 00:11:54,766
called view respects system


389
00:11:54,766 --> 00:11:55,876
minimum layout margins.


390
00:11:56,786 --> 00:11:58,776
If you want your margins to be


391
00:11:58,776 --> 00:11:59,786
completely underneath your


392
00:11:59,786 --> 00:12:02,756
control, flip this to false, and


393
00:12:02,756 --> 00:12:04,386
we'll use your margins as you


394
00:12:04,386 --> 00:12:06,106
describe them, no questions


395
00:12:06,806 --> 00:12:07,006
asked.


396
00:12:07,776 --> 00:12:09,566
And so to wrap up with layout


397
00:12:09,566 --> 00:12:12,616
margins, the properties you have


398
00:12:12,616 --> 00:12:13,956
on UI View are the layout


399
00:12:13,956 --> 00:12:15,906
margins property, edge insets,


400
00:12:16,486 --> 00:12:17,566
left, right, top, bottom.


401
00:12:18,416 --> 00:12:19,776
Directional layout margins.


402
00:12:20,026 --> 00:12:21,646
Great for your RTL layouts.


403
00:12:21,896 --> 00:12:23,006
Top, bottom, leading, and


404
00:12:23,006 --> 00:12:23,456
trailing.


405
00:12:24,006 --> 00:12:26,366
The Layout Margins Guide that


406
00:12:26,366 --> 00:12:27,856
you can use with Auto Layout to


407
00:12:27,856 --> 00:12:28,726
do all this there.


408
00:12:28,726 --> 00:12:31,416
And finally, if you have logic


409
00:12:31,416 --> 00:12:32,586
for when the layout margins


410
00:12:32,586 --> 00:12:34,286
change in your view, you can


411
00:12:34,286 --> 00:12:35,716
override layout margins did


412
00:12:35,716 --> 00:12:37,596
change and do whatever logic you


413
00:12:37,596 --> 00:12:38,176
need to do there.


414
00:12:39,386 --> 00:12:41,076
In Interface Builder to create a


415
00:12:41,076 --> 00:12:42,526
constraint that ties against the


416
00:12:42,526 --> 00:12:44,166
margin, just check that


417
00:12:44,166 --> 00:12:45,656
constraints to margins box.


418
00:12:46,426 --> 00:12:48,086
And so with that, I'll bring up


419
00:12:48,086 --> 00:12:49,666
Tyler Fox to talk to you about


420
00:12:49,666 --> 00:12:49,976
scroll views.


421
00:12:50,516 --> 00:12:57,336
[ Applause ]


422
00:12:57,836 --> 00:12:59,426
>> Thanks, David.


423
00:13:00,186 --> 00:13:00,826
Good afternoon.


424
00:13:01,506 --> 00:13:03,606
And as David mentioned I'd like


425
00:13:03,606 --> 00:13:04,526
to talk a little bit about


426
00:13:04,526 --> 00:13:05,306
scroll views today.


427
00:13:05,816 --> 00:13:07,606
So scroll views are a really key


428
00:13:07,606 --> 00:13:09,156
part of the iOS experience.


429
00:13:09,536 --> 00:13:10,856
And they show up all across the


430
00:13:10,856 --> 00:13:11,296
system.


431
00:13:11,296 --> 00:13:12,646
You have them in table views,


432
00:13:12,686 --> 00:13:14,896
collection views, UI text view,


433
00:13:14,896 --> 00:13:16,006
and of course in all of the


434
00:13:16,006 --> 00:13:17,546
custom application in all of


435
00:13:17,546 --> 00:13:18,156
your apps.


436
00:13:19,026 --> 00:13:20,796
And so in our app, Bagel Times


437
00:13:20,796 --> 00:13:21,876
that we've been working really


438
00:13:21,876 --> 00:13:25,246
hard on as you can tell, this is


439
00:13:25,246 --> 00:13:26,336
our news article screen.


440
00:13:26,376 --> 00:13:28,076
And everything as you can see is


441
00:13:28,076 --> 00:13:29,636
sort of centered around a scroll


442
00:13:29,636 --> 00:13:30,486
view with the article.


443
00:13:30,576 --> 00:13:31,486
And this is we want to you know


444
00:13:31,556 --> 00:13:33,196
really showcase the high-quality


445
00:13:33,196 --> 00:13:34,456
content our writers are putting


446
00:13:34,456 --> 00:13:34,846
together.


447
00:13:34,846 --> 00:13:36,606
Like, you know, exploring the


448
00:13:36,606 --> 00:13:38,356
true inspiration for, you know,


449
00:13:38,356 --> 00:13:38,946
Apple Park.


450
00:13:39,836 --> 00:13:41,536
And we want to review some of


451
00:13:41,536 --> 00:13:43,296
the basics about how you can use


452
00:13:43,296 --> 00:13:45,126
scroll views in your apps to


453
00:13:45,126 --> 00:13:46,996
understand how they can help you


454
00:13:47,066 --> 00:13:49,206
adapt your content to devices of


455
00:13:49,236 --> 00:13:50,506
different shapes and sizes.


456
00:13:51,536 --> 00:13:53,486
So to do that, we're going to


457
00:13:53,486 --> 00:13:54,806
walk through an example here,


458
00:13:54,996 --> 00:13:56,116
and we'll start with a


459
00:13:56,116 --> 00:13:57,156
full-screen scroll view.


460
00:13:57,706 --> 00:13:58,636
And on the left I'm going to


461
00:13:58,636 --> 00:13:59,846
show you what things look like


462
00:13:59,846 --> 00:14:01,406
on more or less a real device.


463
00:14:01,796 --> 00:14:02,686
And on the right, we're going to


464
00:14:02,686 --> 00:14:04,026
look at kind of things behind


465
00:14:04,026 --> 00:14:04,486
the scenes.


466
00:14:04,956 --> 00:14:06,396
Understanding what's happening


467
00:14:06,396 --> 00:14:07,106
in a diagram.


468
00:14:08,086 --> 00:14:09,466
So everything that we talk about


469
00:14:09,466 --> 00:14:11,046
today is going to apply in--


470
00:14:11,046 --> 00:14:12,456
we're going to talk about the y


471
00:14:12,456 --> 00:14:13,856
axis of everything vertically.


472
00:14:13,856 --> 00:14:15,136
But everything also applies


473
00:14:15,136 --> 00:14:16,446
equally to the x axis.


474
00:14:16,996 --> 00:14:18,726
And we're also going to use some


475
00:14:18,726 --> 00:14:20,306
simple values for illustration.


476
00:14:20,566 --> 00:14:21,826
So in this case we'll say that


477
00:14:21,826 --> 00:14:23,146
our scroll view has a height of


478
00:14:23,146 --> 00:14:25,596
400 points.


479
00:14:25,756 --> 00:14:27,076
Now inside of your scroll view,


480
00:14:28,126 --> 00:14:28,946
you'll have some content.


481
00:14:29,926 --> 00:14:31,056
And you can think of the scroll


482
00:14:31,056 --> 00:14:32,726
view a lot like a metaphorical


483
00:14:32,726 --> 00:14:33,306
picture frame.


484
00:14:33,896 --> 00:14:35,686
The scroll view size represents


485
00:14:35,836 --> 00:14:37,196
kind of the fixed frame of the


486
00:14:37,196 --> 00:14:37,806
picture frame.


487
00:14:37,806 --> 00:14:39,586
And then inside of that, the


488
00:14:39,586 --> 00:14:40,886
picture is your content.


489
00:14:40,886 --> 00:14:41,876
And the content can kind of


490
00:14:41,876 --> 00:14:43,836
slide around as if it's on ball


491
00:14:43,836 --> 00:14:44,266
bearings.


492
00:14:45,126 --> 00:14:46,996
Now in this case, our content is


493
00:14:46,996 --> 00:14:47,936
vertically scrollable.


494
00:14:48,326 --> 00:14:50,196
And that happens because our


495
00:14:50,196 --> 00:14:52,276
content has a taller height via


496
00:14:52,506 --> 00:14:54,486
the content size than the scroll


497
00:14:54,486 --> 00:14:54,966
view's height.


498
00:14:56,126 --> 00:14:56,906
And here I've turned off


499
00:14:57,006 --> 00:14:58,366
clipping on this diagram on the


500
00:14:58,366 --> 00:14:59,506
right so we can kind of peek


501
00:14:59,506 --> 00:15:00,426
behind the scenes at what's


502
00:15:00,426 --> 00:15:00,966
going on.


503
00:15:02,296 --> 00:15:04,536
So scroll views use content


504
00:15:04,536 --> 00:15:06,446
offset as a way to represent the


505
00:15:06,446 --> 00:15:07,626
current scroll position of the


506
00:15:07,626 --> 00:15:08,086
scroll view.


507
00:15:09,356 --> 00:15:10,286
Right now, we're scrolled to the


508
00:15:10,286 --> 00:15:10,776
very top.


509
00:15:11,066 --> 00:15:12,626
So our content offset is at


510
00:15:12,626 --> 00:15:14,496
zero, meaning our top edge of


511
00:15:14,496 --> 00:15:16,326
the content is aligned with the


512
00:15:16,326 --> 00:15:17,476
top edge of the scroll view.


513
00:15:18,916 --> 00:15:20,366
Now, if we go ahead and scroll


514
00:15:20,366 --> 00:15:21,676
the scroll view down, that will


515
00:15:21,836 --> 00:15:23,146
slide our content up.


516
00:15:23,296 --> 00:15:24,576
So let's scroll to the bottom


517
00:15:24,576 --> 00:15:25,466
and watch that happens here.


518
00:15:26,346 --> 00:15:27,616
And as you can see, the content


519
00:15:27,616 --> 00:15:29,866
offset increases and goes all


520
00:15:29,866 --> 00:15:31,766
the way to 100 in our example


521
00:15:31,766 --> 00:15:32,676
when we reach the bottom.


522
00:15:33,186 --> 00:15:34,376
That's because the top edge of


523
00:15:34,376 --> 00:15:36,626
the sc-- the scroll view is now


524
00:15:36,626 --> 00:15:38,446
100 points below the top edge of


525
00:15:38,446 --> 00:15:39,296
that content area.


526
00:15:40,546 --> 00:15:42,166
If we set a content offset of


527
00:15:42,276 --> 00:15:43,936
zero on the scroll view, that


528
00:15:43,936 --> 00:15:45,166
will put us all the way back up


529
00:15:45,166 --> 00:15:45,636
to the top.


530
00:15:45,636 --> 00:15:47,256
And we're back where we started.


531
00:15:48,146 --> 00:15:49,616
So that's pretty much just the


532
00:15:49,616 --> 00:15:50,966
basics of scrolling a simple


533
00:15:50,966 --> 00:15:51,776
scroll view around.


534
00:15:52,376 --> 00:15:53,436
Now let's talk about a very


535
00:15:53,436 --> 00:15:54,946
important concept about


536
00:15:55,186 --> 00:15:57,666
extending the scrollable area of


537
00:15:57,666 --> 00:15:58,216
the scroll view.


538
00:15:58,416 --> 00:15:59,716
And we do that through a


539
00:15:59,716 --> 00:16:01,196
property called content inset.


540
00:16:01,746 --> 00:16:04,936
So content inset is a mechanism


541
00:16:04,936 --> 00:16:06,316
for you to provide insets that


542
00:16:06,316 --> 00:16:08,236
you can specify from the edges


543
00:16:08,236 --> 00:16:09,456
of the scrollable area of the


544
00:16:09,456 --> 00:16:11,066
scroll view to the content


545
00:16:11,066 --> 00:16:11,486
inside.


546
00:16:12,406 --> 00:16:13,866
So adding content inset


547
00:16:13,946 --> 00:16:15,696
increases the scrollable area


548
00:16:15,696 --> 00:16:17,466
and makes the scroll view able


549
00:16:17,466 --> 00:16:18,976
to scroll to a larger area.


550
00:16:19,546 --> 00:16:20,966
So let's set a content inset on


551
00:16:20,966 --> 00:16:22,706
the top edge here and see what


552
00:16:22,706 --> 00:16:23,016
happens.


553
00:16:24,416 --> 00:16:25,546
So here we've set a content


554
00:16:25,546 --> 00:16:26,326
inset of 20.


555
00:16:27,126 --> 00:16:28,816
And as you can see, that extends


556
00:16:28,816 --> 00:16:30,336
that top edge of the scroll view


557
00:16:30,336 --> 00:16:31,476
so that the scrollable area is


558
00:16:31,476 --> 00:16:32,076
now larger.


559
00:16:33,176 --> 00:16:35,416
Now when our content offset is


560
00:16:35,416 --> 00:16:37,536
sitting at zero, our content is


561
00:16:37,536 --> 00:16:38,636
still aligned with the top of


562
00:16:38,636 --> 00:16:39,266
the scroll view.


563
00:16:39,846 --> 00:16:40,876
But the scroll view could


564
00:16:40,876 --> 00:16:42,196
actually scroll even farther


565
00:16:42,596 --> 00:16:43,406
towards the top now.


566
00:16:44,096 --> 00:16:45,786
So let's scroll around like we


567
00:16:45,786 --> 00:16:47,196
did before and watch how things


568
00:16:47,196 --> 00:16:47,906
have changed.


569
00:16:48,866 --> 00:16:50,756
We'll scroll to the bottom and


570
00:16:50,786 --> 00:16:51,976
just like before, we're still


571
00:16:51,976 --> 00:16:54,056
here at a content offset of 100.


572
00:16:54,936 --> 00:16:55,986
That's because we didn't change


573
00:16:55,986 --> 00:16:57,296
anything on the bottom edge.


574
00:16:57,536 --> 00:16:58,506
And we still have a bottom


575
00:16:58,506 --> 00:16:59,886
content inset of zero.


576
00:17:00,986 --> 00:17:02,936
But if we now go ahead and


577
00:17:02,936 --> 00:17:04,376
scroll back all the way to the


578
00:17:04,376 --> 00:17:06,226
very top, we end up with a


579
00:17:06,226 --> 00:17:07,616
content offset that actually


580
00:17:07,616 --> 00:17:08,296
goes negative.


581
00:17:09,736 --> 00:17:10,955
That's because we are now able


582
00:17:10,955 --> 00:17:13,256
to scroll beyond the top edge of


583
00:17:13,256 --> 00:17:13,876
our content.


584
00:17:14,296 --> 00:17:15,976
And so we can scroll as far as


585
00:17:15,976 --> 00:17:18,165
the negative content inset on


586
00:17:18,165 --> 00:17:20,156
the top edge.


587
00:17:20,406 --> 00:17:22,856
Now starting in iOS 7, this


588
00:17:22,935 --> 00:17:24,415
content inset technique became


589
00:17:24,415 --> 00:17:25,396
really important and that's


590
00:17:25,396 --> 00:17:27,476
because with iOS 7, translucent


591
00:17:27,476 --> 00:17:29,466
bars became really common across


592
00:17:29,466 --> 00:17:29,986
the system.


593
00:17:30,336 --> 00:17:31,576
And the idea was that you would


594
00:17:31,576 --> 00:17:33,026
display your content edge to


595
00:17:33,026 --> 00:17:33,466
edge.


596
00:17:33,856 --> 00:17:35,756
And it would underlap the bars


597
00:17:35,756 --> 00:17:36,726
so that you could get these nice


598
00:17:36,726 --> 00:17:38,626
colorful blurs with your content


599
00:17:38,626 --> 00:17:39,426
through the bars, right?


600
00:17:39,806 --> 00:17:41,216
Tool bars, navigation bars, and


601
00:17:41,406 --> 00:17:41,796
so forth.


602
00:17:42,096 --> 00:17:43,876
So because this was so common,


603
00:17:44,366 --> 00:17:45,396
we wanted a way to help


604
00:17:45,506 --> 00:17:47,016
automatically set the content


605
00:17:47,016 --> 00:17:48,506
inset on your scroll views to


606
00:17:48,506 --> 00:17:49,976
make this easier in your apps.


607
00:17:50,296 --> 00:17:51,946
And to do this, we had a


608
00:17:51,946 --> 00:17:53,326
property on UI View Controller.


609
00:17:53,696 --> 00:17:54,946
And this was called


610
00:17:54,946 --> 00:17:56,706
automatically adjust scroll view


611
00:17:56,706 --> 00:17:57,316
insets.


612
00:17:57,796 --> 00:17:59,876
And the intent, intent again was


613
00:17:59,876 --> 00:18:01,556
to automatically set the content


614
00:18:01,556 --> 00:18:02,856
inset on your scroll view


615
00:18:03,466 --> 00:18:05,426
whenever it had overlapping bars


616
00:18:05,426 --> 00:18:07,276
coming from a navigation bar or


617
00:18:07,276 --> 00:18:07,896
a tool bar.


618
00:18:08,006 --> 00:18:09,476
And that was whenever your


619
00:18:09,476 --> 00:18:10,726
scroll view was inside of a view


620
00:18:10,726 --> 00:18:11,246
controller.


621
00:18:11,606 --> 00:18:12,846
Which itself was contained


622
00:18:12,906 --> 00:18:13,816
inside of a navigation


623
00:18:13,816 --> 00:18:14,136
controller.


624
00:18:14,726 --> 00:18:16,656
Now this worked pretty well for


625
00:18:16,656 --> 00:18:17,646
some common cases.


626
00:18:18,026 --> 00:18:19,566
But if your app had a more


627
00:18:19,566 --> 00:18:21,876
custom or advanced usage of UI


628
00:18:21,876 --> 00:18:24,196
scroll view, sometimes having


629
00:18:24,236 --> 00:18:26,016
your code setting content inset


630
00:18:26,016 --> 00:18:28,156
and also UIKit setting that same


631
00:18:28,156 --> 00:18:29,846
content inset property could


632
00:18:29,846 --> 00:18:30,626
create some challenges.


633
00:18:31,676 --> 00:18:33,726
And so starting in iOS 11, we


634
00:18:33,956 --> 00:18:35,526
have a much more explicit and


635
00:18:35,526 --> 00:18:37,346
powerful way for you to get the


636
00:18:37,346 --> 00:18:38,946
same automatic behavior.


637
00:18:39,716 --> 00:18:41,336
And the mechanism for doing this


638
00:18:41,556 --> 00:18:42,976
is a new property on UI scroll


639
00:18:42,976 --> 00:18:44,786
view which we'll talk about now


640
00:18:44,886 --> 00:18:46,586
called adjusted content inset.


641
00:18:47,996 --> 00:18:50,356
So starting in iOS 11, we


642
00:18:50,356 --> 00:18:51,546
introduced a new property on UI


643
00:18:51,546 --> 00:18:52,036
scroll view.


644
00:18:52,036 --> 00:18:52,766
It's read only.


645
00:18:52,806 --> 00:18:54,066
It's adjust content inset.


646
00:18:54,406 --> 00:18:56,506
And this basically describes how


647
00:18:56,506 --> 00:18:57,776
the scroll view is actually


648
00:18:57,776 --> 00:18:58,606
going to behave.


649
00:18:59,716 --> 00:19:00,696
Well you're probably asking


650
00:19:00,696 --> 00:19:01,666
what's the difference between


651
00:19:01,666 --> 00:19:03,726
this adjusted content inset and


652
00:19:03,726 --> 00:19:04,796
the content inset that we just


653
00:19:04,796 --> 00:19:05,356
talked about?


654
00:19:05,886 --> 00:19:06,456
Great question.


655
00:19:07,236 --> 00:19:08,066
Here's how it breaks down.


656
00:19:09,286 --> 00:19:11,616
Adjusted content inset is equal


657
00:19:11,616 --> 00:19:13,626
to the content inset that your


658
00:19:13,626 --> 00:19:16,276
app provides plus any automatic


659
00:19:16,276 --> 00:19:18,096
insets coming from the system or


660
00:19:18,096 --> 00:19:18,506
UIKit.


661
00:19:19,686 --> 00:19:21,156
And so because we now separate


662
00:19:21,156 --> 00:19:23,276
these two, it's a lot easier to


663
00:19:23,276 --> 00:19:24,326
reason about what's happening.


664
00:19:25,446 --> 00:19:26,526
Of course you might be wondering


665
00:19:26,556 --> 00:19:28,106
where and when would I get a


666
00:19:28,206 --> 00:19:29,696
system inset on my scroll view.


667
00:19:31,096 --> 00:19:32,726
Well, one most common case will


668
00:19:32,726 --> 00:19:34,426
be safe area insets.


669
00:19:35,126 --> 00:19:36,326
Let's look at how this works.


670
00:19:36,736 --> 00:19:37,946
So we're back to our basic


671
00:19:37,946 --> 00:19:38,696
diagram here.


672
00:19:38,696 --> 00:19:39,726
But we're going to bring some


673
00:19:39,726 --> 00:19:41,436
safe area insets into the mix.


674
00:19:42,746 --> 00:19:44,466
So if we go ahead and start out


675
00:19:44,466 --> 00:19:45,856
right now we have no safe area


676
00:19:45,856 --> 00:19:46,986
insets on any edge.


677
00:19:47,016 --> 00:19:48,526
But we'll go ahead and add some


678
00:19:48,526 --> 00:19:50,346
safe area insets to the top edge


679
00:19:50,346 --> 00:19:51,036
of our scroll view.


680
00:19:51,976 --> 00:19:54,026
And what you'll see is that by


681
00:19:54,026 --> 00:19:55,806
default, the scroll view is


682
00:19:55,806 --> 00:19:57,886
automatically absorbing those


683
00:19:57,886 --> 00:20:00,046
safe area insets on its top edge


684
00:20:00,526 --> 00:20:02,076
into its adjusted content


685
00:20:02,076 --> 00:20:02,486
insets.


686
00:20:02,926 --> 00:20:03,886
And that's because our scroll


687
00:20:03,886 --> 00:20:05,146
view's vertically scrollable.


688
00:20:05,766 --> 00:20:07,496
And so what this does is this


689
00:20:07,546 --> 00:20:08,866
automatically increases the


690
00:20:08,866 --> 00:20:10,746
scrollable area and makes it so


691
00:20:10,746 --> 00:20:12,416
content can scroll out from


692
00:20:12,466 --> 00:20:14,116
underneath anything covering up


693
00:20:14,416 --> 00:20:16,266
the top edge like a bar or even


694
00:20:16,266 --> 00:20:17,146
the edge of the display.


695
00:20:19,176 --> 00:20:20,856
So take a look at an example


696
00:20:20,856 --> 00:20:22,246
here where we have the same


697
00:20:22,246 --> 00:20:23,596
scroll view on two different


698
00:20:23,596 --> 00:20:23,976
devices.


699
00:20:23,976 --> 00:20:26,186
iPhone 10 on the left, iPhone 8


700
00:20:26,186 --> 00:20:26,676
on the right.


701
00:20:27,116 --> 00:20:29,286
And you can see this is a real


702
00:20:29,286 --> 00:20:31,066
example, the top safe area inset


703
00:20:31,066 --> 00:20:32,436
is larger on the iPhone 10


704
00:20:32,856 --> 00:20:34,736
because of the larger status bar


705
00:20:34,736 --> 00:20:36,036
height and the sensor housing.


706
00:20:36,636 --> 00:20:37,966
And as a result, the scroll view


707
00:20:37,966 --> 00:20:39,476
has a larger top inset-- that's


708
00:20:39,476 --> 00:20:40,846
the gray region that's shaded at


709
00:20:40,846 --> 00:20:41,366
the top here.


710
00:20:42,296 --> 00:20:43,816
So this is one way that scroll


711
00:20:43,816 --> 00:20:45,586
view helps automatically adapt


712
00:20:45,976 --> 00:20:47,206
to any device that it's running


713
00:20:47,206 --> 00:20:47,436
on.


714
00:20:47,996 --> 00:20:49,726
Now let's go back to our diagram


715
00:20:49,726 --> 00:20:51,566
and talk about something else.


716
00:20:52,876 --> 00:20:54,016
When we have a scroll view like


717
00:20:54,016 --> 00:20:55,986
this where we have top safe area


718
00:20:55,986 --> 00:20:58,206
insets, let's go ahead and add a


719
00:20:58,206 --> 00:20:59,286
subview to our scroll view.


720
00:20:59,286 --> 00:21:01,216
And we'll put this right in the


721
00:21:01,216 --> 00:21:01,836
content area.


722
00:21:01,836 --> 00:21:03,426
And so right now this-- this


723
00:21:03,426 --> 00:21:05,296
subview is sitting fully inside


724
00:21:05,296 --> 00:21:06,566
of the safe area in the scroll


725
00:21:06,566 --> 00:21:06,756
view.


726
00:21:07,726 --> 00:21:09,446
But what if we start to scroll


727
00:21:09,446 --> 00:21:11,036
the scroll view down which will


728
00:21:11,036 --> 00:21:12,026
move that content up?


729
00:21:12,736 --> 00:21:14,936
Just like this so that part of


730
00:21:14,936 --> 00:21:16,206
that subview is now sitting


731
00:21:16,286 --> 00:21:18,206
outside of the scroll view safe


732
00:21:18,206 --> 00:21:18,476
area?


733
00:21:19,636 --> 00:21:21,106
Based on the safe area inset


734
00:21:21,106 --> 00:21:22,546
propagation that David just


735
00:21:22,546 --> 00:21:24,106
talked to you about, you might


736
00:21:24,106 --> 00:21:25,456
be thinking, okay, that means


737
00:21:25,456 --> 00:21:26,576
the subview is going to start


738
00:21:26,616 --> 00:21:28,726
seeing its own top edge safe


739
00:21:28,726 --> 00:21:29,356
area inset.


740
00:21:30,496 --> 00:21:31,276
That's actually not what


741
00:21:31,276 --> 00:21:31,676
happens.


742
00:21:32,726 --> 00:21:34,386
The reason why is because when a


743
00:21:34,386 --> 00:21:36,746
scroll view absorbs safe area


744
00:21:36,746 --> 00:21:38,966
insets into its adjusted content


745
00:21:38,966 --> 00:21:40,966
inset, it will no longer


746
00:21:41,156 --> 00:21:43,316
propagate those same insets down


747
00:21:43,316 --> 00:21:44,646
to its subviews on that same


748
00:21:44,646 --> 00:21:45,016
edge.


749
00:21:46,336 --> 00:21:47,236
This is really important.


750
00:21:48,276 --> 00:21:50,316
Scroll views use scrolling to


751
00:21:50,316 --> 00:21:52,306
move content around and move it


752
00:21:52,306 --> 00:21:53,496
out into the safe area.


753
00:21:54,516 --> 00:21:56,636
And if a scroll view were to


754
00:21:56,986 --> 00:21:59,046
also propagate safe area insets


755
00:21:59,046 --> 00:22:00,366
that it was using to extend its


756
00:22:00,366 --> 00:22:02,176
scrollable area, it would almost


757
00:22:02,176 --> 00:22:03,626
be like double accounting for


758
00:22:03,626 --> 00:22:05,316
those same insets in two


759
00:22:05,316 --> 00:22:06,006
different places.


760
00:22:06,646 --> 00:22:08,576
And so as a result, the subviews


761
00:22:08,576 --> 00:22:10,036
on the scrollable axis are kind


762
00:22:10,036 --> 00:22:12,256
of completely unaware that there


763
00:22:12,256 --> 00:22:13,896
are safe area insets on the


764
00:22:13,896 --> 00:22:15,066
edges that the scroll view is


765
00:22:15,066 --> 00:22:16,276
absorbing them into its adjusted


766
00:22:16,276 --> 00:22:16,906
content inset.


767
00:22:18,026 --> 00:22:19,356
So now that we understand how


768
00:22:19,356 --> 00:22:20,616
scroll views work together with


769
00:22:20,616 --> 00:22:22,356
safe areas, let's cover the


770
00:22:22,356 --> 00:22:23,686
options that we've exposed to


771
00:22:23,686 --> 00:22:24,836
let you control this behavior.


772
00:22:26,636 --> 00:22:27,846
The mechanism that you have to


773
00:22:27,846 --> 00:22:29,216
do this is a property on UI


774
00:22:29,216 --> 00:22:30,786
scroll view called content inset


775
00:22:30,786 --> 00:22:31,596
adjusted behavior.


776
00:22:32,096 --> 00:22:33,886
And it also is available on


777
00:22:33,886 --> 00:22:35,426
interface builder as you can see


778
00:22:35,426 --> 00:22:35,616
here.


779
00:22:36,656 --> 00:22:38,106
Now the default value for this


780
00:22:38,106 --> 00:22:38,826
is automatic.


781
00:22:39,326 --> 00:22:41,356
And most of the time, if not all


782
00:22:41,356 --> 00:22:42,676
the time, you're really going to


783
00:22:42,676 --> 00:22:43,886
want to leave this at its


784
00:22:43,886 --> 00:22:44,526
default value.


785
00:22:45,246 --> 00:22:46,256
But we want to walk through the


786
00:22:46,256 --> 00:22:47,786
options so that you understand


787
00:22:48,236 --> 00:22:49,736
what they do and know that


788
00:22:49,736 --> 00:22:50,306
they're available.


789
00:22:50,636 --> 00:22:51,596
And so you can make the right


790
00:22:51,596 --> 00:22:52,616
choice in your apps.


791
00:22:53,456 --> 00:22:54,356
So we'll start with the first


792
00:22:55,576 --> 00:22:55,666
one.


793
00:22:56,046 --> 00:22:57,806
The first one is the always


794
00:22:57,856 --> 00:22:58,276
behavior.


795
00:22:58,516 --> 00:22:59,666
This is pretty straightforward


796
00:22:59,666 --> 00:23:00,446
as you might expect.


797
00:23:00,866 --> 00:23:02,506
Scroll view is going to always


798
00:23:02,506 --> 00:23:04,846
incorporate any system inset


799
00:23:04,846 --> 00:23:06,546
like safe area insets into its


800
00:23:06,546 --> 00:23:08,596
adjusted content inset on any


801
00:23:08,596 --> 00:23:08,926
edge.


802
00:23:09,236 --> 00:23:10,396
And this works fine in our


803
00:23:10,396 --> 00:23:11,656
particular example here.


804
00:23:11,656 --> 00:23:13,026
We only have a top and bottom


805
00:23:13,026 --> 00:23:14,336
safe area inset on our scroll


806
00:23:14,336 --> 00:23:14,606
view.


807
00:23:14,906 --> 00:23:16,816
And so it will incorporate those


808
00:23:16,816 --> 00:23:17,966
and the content gets to move out


809
00:23:17,966 --> 00:23:18,996
from underneath the bars.


810
00:23:19,216 --> 00:23:20,306
We don't have any horizontal


811
00:23:20,306 --> 00:23:21,596
insets on the left or right.


812
00:23:21,956 --> 00:23:22,726
So no problems.


813
00:23:23,176 --> 00:23:24,686
But be careful with this one


814
00:23:24,686 --> 00:23:25,836
because if you have something


815
00:23:25,836 --> 00:23:27,676
like let's say a table view on


816
00:23:27,676 --> 00:23:29,196
the iPhone 10 in landscape,


817
00:23:29,646 --> 00:23:30,746
there are left and right safe


818
00:23:30,746 --> 00:23:31,546
area insets.


819
00:23:31,896 --> 00:23:33,626
Using this behavior the table


820
00:23:33,626 --> 00:23:34,786
view is going to incorporate


821
00:23:34,786 --> 00:23:36,186
those into its adjusted content


822
00:23:36,186 --> 00:23:37,616
inset, which increases the


823
00:23:37,616 --> 00:23:39,146
scrollable area, which is going


824
00:23:39,146 --> 00:23:39,836
to make a table view


825
00:23:39,836 --> 00:23:40,846
horizontally scrollable.


826
00:23:40,846 --> 00:23:42,206
You're not going to want that


827
00:23:42,206 --> 00:23:42,536
behavior.


828
00:23:43,876 --> 00:23:45,106
That's why we have the next


829
00:23:45,106 --> 00:23:46,466
behavior which is scrollable


830
00:23:46,466 --> 00:23:46,736
axes.


831
00:23:47,766 --> 00:23:49,536
For this one, the scroll view is


832
00:23:49,536 --> 00:23:50,796
going to independently consider


833
00:23:50,796 --> 00:23:52,426
things on the vertical axis and


834
00:23:52,426 --> 00:23:53,506
the horizontal axis.


835
00:23:53,926 --> 00:23:55,516
For each of those, if the


836
00:23:55,516 --> 00:23:57,606
content size exceeds the width


837
00:23:57,606 --> 00:23:59,716
or the height as appropriate, or


838
00:24:00,026 --> 00:24:01,476
if you set the always bounce


839
00:24:01,476 --> 00:24:02,876
horizontal or always bounce


840
00:24:02,876 --> 00:24:04,176
vertical properties to true,


841
00:24:04,856 --> 00:24:06,286
then the scroll view considers


842
00:24:06,286 --> 00:24:07,396
that axis scrollable.


843
00:24:07,696 --> 00:24:08,656
And it will go ahead and


844
00:24:08,656 --> 00:24:10,146
incorporate in the system inset


845
00:24:10,146 --> 00:24:11,556
into its adjusted content inset.


846
00:24:12,006 --> 00:24:13,246
So in this example right behind


847
00:24:13,246 --> 00:24:14,936
me we have a long article that's


848
00:24:14,936 --> 00:24:15,506
scrollable.


849
00:24:15,576 --> 00:24:16,516
And so we're getting those


850
00:24:16,516 --> 00:24:17,956
automatic insets incorporated.


851
00:24:18,476 --> 00:24:19,376
But what if we had a shorter


852
00:24:19,376 --> 00:24:19,706
article?


853
00:24:19,906 --> 00:24:20,386
Let's take a look.


854
00:24:21,416 --> 00:24:21,716
Okay.


855
00:24:21,816 --> 00:24:22,766
Here's a shorter article.


856
00:24:23,456 --> 00:24:24,546
What's going on here?


857
00:24:24,596 --> 00:24:25,586
Let's take a look under the nav


858
00:24:25,586 --> 00:24:26,806
bar and see what's going on.


859
00:24:26,936 --> 00:24:27,126
Ah.


860
00:24:28,066 --> 00:24:29,286
Looks like we've lost our system


861
00:24:29,286 --> 00:24:30,186
inset because it's not


862
00:24:30,186 --> 00:24:31,086
scrollable anymore.


863
00:24:31,186 --> 00:24:32,506
So our title's stuck all the way


864
00:24:32,506 --> 00:24:33,676
up underneath the status bar.


865
00:24:34,366 --> 00:24:35,476
So let's put back the nav bar


866
00:24:36,306 --> 00:24:37,696
and talk about how we fix this.


867
00:24:37,966 --> 00:24:39,296
Well, one way could be you could


868
00:24:39,296 --> 00:24:40,826
set always bounce vertical on


869
00:24:40,826 --> 00:24:41,666
this scroll view if that's the


870
00:24:41,666 --> 00:24:42,456
behavior you want.


871
00:24:42,696 --> 00:24:43,916
That will make the scroll view


872
00:24:43,916 --> 00:24:45,036
always vertically scrollable.


873
00:24:45,836 --> 00:24:47,376
Or we'll get to our next


874
00:24:47,376 --> 00:24:48,716
behavior, which is automatic.


875
00:24:49,626 --> 00:24:51,286
And so automatic works basically


876
00:24:51,286 --> 00:24:53,026
the same as scrollable axes,


877
00:24:53,026 --> 00:24:53,956
which we just talked about.


878
00:24:54,456 --> 00:24:55,766
But it has one additional


879
00:24:55,836 --> 00:24:58,046
behavior as part of it that is


880
00:24:58,386 --> 00:24:59,716
when the scroll view is inside


881
00:24:59,716 --> 00:25:01,706
of a navigation controller, the


882
00:25:01,706 --> 00:25:02,816
scroll view will go ahead and


883
00:25:02,816 --> 00:25:04,606
adjust its top and bottom


884
00:25:04,746 --> 00:25:06,986
content inset even if it's not


885
00:25:06,986 --> 00:25:08,746
vertically scrollable to account


886
00:25:08,746 --> 00:25:09,946
for top and bottom bars.


887
00:25:10,406 --> 00:25:11,516
So, even in this case where we


888
00:25:11,516 --> 00:25:13,326
have a very short article, it


889
00:25:13,326 --> 00:25:14,286
still means that we're getting


890
00:25:14,286 --> 00:25:15,146
the right insets.


891
00:25:15,416 --> 00:25:16,406
And this is generally the


892
00:25:16,406 --> 00:25:17,396
behavior you're going to want.


893
00:25:17,396 --> 00:25:18,496
And that's why we have it as the


894
00:25:18,496 --> 00:25:18,936
default.


895
00:25:19,466 --> 00:25:20,706
Just one quick heads up though.


896
00:25:20,706 --> 00:25:21,656
If you are setting the


897
00:25:21,656 --> 00:25:23,386
deprecated automatically adjust


898
00:25:23,386 --> 00:25:24,666
scroll view inset property to


899
00:25:24,666 --> 00:25:27,196
false, that will disable this


900
00:25:27,196 --> 00:25:27,586
behavior.


901
00:25:27,586 --> 00:25:28,626
And so it's going to behave


902
00:25:28,626 --> 00:25:30,936
basically like scrollable axes.


903
00:25:31,216 --> 00:25:32,526
Alright, that brings us to our


904
00:25:32,526 --> 00:25:33,506
last behavior.


905
00:25:33,896 --> 00:25:34,276
Never.


906
00:25:35,536 --> 00:25:37,506
Now with this one, as you


907
00:25:37,506 --> 00:25:38,576
expect, that means the scroll


908
00:25:38,576 --> 00:25:39,956
view is never going to adjust


909
00:25:39,956 --> 00:25:40,946
its content inset.


910
00:25:42,116 --> 00:25:44,116
However, that has some side


911
00:25:44,116 --> 00:25:44,606
effects.


912
00:25:44,986 --> 00:25:47,016
For one, that means that the


913
00:25:47,016 --> 00:25:47,936
scroll view will end up


914
00:25:48,086 --> 00:25:50,206
propagating safe area insets on


915
00:25:50,336 --> 00:25:51,936
all of its edges just like a


916
00:25:51,936 --> 00:25:52,616
regular view.


917
00:25:53,026 --> 00:25:54,376
And as we talked about before,


918
00:25:54,686 --> 00:25:55,906
that might end up giving you


919
00:25:55,906 --> 00:25:57,016
some behavior you don't really


920
00:25:57,016 --> 00:25:57,396
want.


921
00:25:57,916 --> 00:25:59,486
For example, if you recall your


922
00:25:59,486 --> 00:26:00,826
layout margins are relative to


923
00:26:00,826 --> 00:26:02,196
the safe area, which means your


924
00:26:02,196 --> 00:26:03,116
layout margins might end up


925
00:26:03,116 --> 00:26:04,486
increasing or changing as a


926
00:26:04,486 --> 00:26:05,286
result of this.


927
00:26:06,006 --> 00:26:07,576
This is also going to disable


928
00:26:07,576 --> 00:26:08,886
some very helpful automatic


929
00:26:08,936 --> 00:26:09,976
behaviors that scroll view


930
00:26:09,976 --> 00:26:11,876
provides like automatic scroll


931
00:26:11,876 --> 00:26:12,966
indicator insets.


932
00:26:13,726 --> 00:26:16,046
And so if you do a search online


933
00:26:16,046 --> 00:26:17,406
and you see a favorite, you


934
00:26:17,406 --> 00:26:18,556
know, question and answer


935
00:26:18,556 --> 00:26:19,766
website suggesting that you set


936
00:26:19,766 --> 00:26:21,256
your scroll view's content inset


937
00:26:21,256 --> 00:26:22,306
adjustment behavior to never,


938
00:26:23,016 --> 00:26:24,766
consider instead using


939
00:26:24,766 --> 00:26:26,546
additional safe area insets to


940
00:26:26,596 --> 00:26:28,126
increase the safe area insets.


941
00:26:28,126 --> 00:26:29,206
If your goal is to try to


942
00:26:29,576 --> 00:26:30,746
express to the system that


943
00:26:30,746 --> 00:26:31,966
you've added let's say a toolbar


944
00:26:31,966 --> 00:26:33,436
or some sort of other overlay.


945
00:26:33,976 --> 00:26:36,186
Or you could consider just


946
00:26:36,226 --> 00:26:37,716
modifying the content inset


947
00:26:37,716 --> 00:26:38,776
directly, the property that we


948
00:26:38,776 --> 00:26:39,516
talked about in the very


949
00:26:39,516 --> 00:26:39,956
beginning.


950
00:26:39,996 --> 00:26:41,166
That's for you to control.


951
00:26:41,166 --> 00:26:42,446
And you can use that to add or


952
00:26:42,446 --> 00:26:44,196
subtract from the effective


953
00:26:44,296 --> 00:26:45,736
adjusted content inset that the


954
00:26:45,736 --> 00:26:46,736
scroll view will see.


955
00:26:47,116 --> 00:26:48,566
So with that, I'd like to hand


956
00:26:48,566 --> 00:26:50,096
it over to Russell to tell you


957
00:26:50,096 --> 00:26:51,646
all about how to put this


958
00:26:51,646 --> 00:26:51,976
altogether.


959
00:26:52,516 --> 00:26:57,516
[ Applause ]


960
00:26:58,016 --> 00:26:58,916
>> Thanks, Tyler.


961
00:27:00,516 --> 00:27:02,326
Now we've introduced many


962
00:27:02,326 --> 00:27:03,536
adaptive APIs to help your apps


963
00:27:03,616 --> 00:27:05,416
over the years adapt to


964
00:27:05,416 --> 00:27:06,156
different environments.


965
00:27:06,656 --> 00:27:08,216
And safe area is really just the


966
00:27:08,216 --> 00:27:09,006
newest of these.


967
00:27:09,006 --> 00:27:10,656
So I'm going to review some of


968
00:27:10,656 --> 00:27:12,196
these concepts and also talk


969
00:27:12,196 --> 00:27:13,576
about how they work with safe


970
00:27:13,576 --> 00:27:13,836
area.


971
00:27:15,456 --> 00:27:16,866
So let's go to the first screen


972
00:27:16,866 --> 00:27:17,676
of our application.


973
00:27:18,406 --> 00:27:20,276
And we've got a pretty standard


974
00:27:20,276 --> 00:27:21,546
setup here with a tab bar


975
00:27:21,546 --> 00:27:22,596
controller, continuing


976
00:27:22,596 --> 00:27:23,596
navigation controller,


977
00:27:23,906 --> 00:27:25,756
containing our content view


978
00:27:25,786 --> 00:27:26,166
controller.


979
00:27:27,516 --> 00:27:29,226
Now note that the views of all


980
00:27:29,286 --> 00:27:30,406
three of these view controllers


981
00:27:30,656 --> 00:27:31,466
are full screen.


982
00:27:32,196 --> 00:27:33,836
This is what enables the tab bar


983
00:27:33,836 --> 00:27:35,236
to extend underneath the home


984
00:27:35,236 --> 00:27:37,146
indicator, the navigation bar to


985
00:27:37,146 --> 00:27:38,126
extend underneath the status


986
00:27:38,126 --> 00:27:40,246
bar, and the content to extend


987
00:27:40,246 --> 00:27:42,426
and scroll underneath all of it.


988
00:27:43,416 --> 00:27:44,516
But we need to prevent these


989
00:27:44,516 --> 00:27:45,626
elements from overlapping.


990
00:27:45,806 --> 00:27:47,146
So let's see how safe area


991
00:27:47,206 --> 00:27:49,316
allows these components to do


992
00:27:50,016 --> 00:27:50,196
that.


993
00:27:50,356 --> 00:27:51,866
So the safe area insets start by


994
00:27:51,866 --> 00:27:52,856
flowing through the tab bar


995
00:27:52,856 --> 00:27:54,836
controller, which only receives


996
00:27:54,836 --> 00:27:57,076
insets on the home indicator and


997
00:27:57,076 --> 00:27:58,786
status bar because that's all


998
00:27:58,786 --> 00:27:59,136
that it sees.


999
00:28:00,776 --> 00:28:01,906
Since the navigation controller


1000
00:28:01,906 --> 00:28:03,996
is inside of that, it also


1001
00:28:04,036 --> 00:28:05,256
receives a safe area inside in


1002
00:28:05,256 --> 00:28:06,966
the bottom that accounts for the


1003
00:28:06,966 --> 00:28:07,406
tab bar.


1004
00:28:08,456 --> 00:28:09,596
And the content view controller


1005
00:28:09,596 --> 00:28:11,166
inside of both received safe


1006
00:28:11,166 --> 00:28:12,286
area insets that account for


1007
00:28:12,286 --> 00:28:12,926
both bars.


1008
00:28:12,926 --> 00:28:15,726
Now what does the story look


1009
00:28:15,726 --> 00:28:16,466
like in landscape?


1010
00:28:17,536 --> 00:28:18,086
Similar.


1011
00:28:18,086 --> 00:28:19,426
There are safe area insets in


1012
00:28:19,426 --> 00:28:20,206
the top and bottom.


1013
00:28:20,696 --> 00:28:22,106
But there are also insets on the


1014
00:28:22,106 --> 00:28:24,676
left and right that account for


1015
00:28:25,286 --> 00:28:26,486
the size of the screen.


1016
00:28:26,486 --> 00:28:27,886
And those are propagated all the


1017
00:28:27,886 --> 00:28:29,546
way down from the screen through


1018
00:28:29,546 --> 00:28:30,576
the view controller hierarchy.


1019
00:28:32,226 --> 00:28:33,696
Now I want to stop here and use


1020
00:28:33,696 --> 00:28:35,566
this example to make a point


1021
00:28:35,686 --> 00:28:37,516
about how you should think about


1022
00:28:37,516 --> 00:28:38,636
using safe area when you


1023
00:28:38,636 --> 00:28:39,856
implement your own views.


1024
00:28:40,806 --> 00:28:43,156
So this custom view shouldn't


1025
00:28:43,156 --> 00:28:44,516
know that it's running on an


1026
00:28:44,516 --> 00:28:45,156
iPhone 10.


1027
00:28:45,586 --> 00:28:46,886
It shouldn't even know that it's


1028
00:28:46,886 --> 00:28:48,626
contained inside of container


1029
00:28:48,626 --> 00:28:49,326
view controllers.


1030
00:28:50,286 --> 00:28:51,776
This is the idea of


1031
00:28:51,776 --> 00:28:52,726
encapsulation.


1032
00:28:53,236 --> 00:28:55,456
If your views only read the safe


1033
00:28:55,456 --> 00:28:57,036
area insets that are provided to


1034
00:28:57,036 --> 00:28:59,436
them on all four sides, and are


1035
00:28:59,436 --> 00:29:02,876
able to adapt to different, to


1036
00:29:02,876 --> 00:29:04,626
arbitrary safe area insets, that


1037
00:29:04,926 --> 00:29:06,976
will ensure that your views will


1038
00:29:06,976 --> 00:29:08,866
be able to, will be modular, can


1039
00:29:08,866 --> 00:29:09,576
be moved throughout your


1040
00:29:09,576 --> 00:29:10,796
application and run in


1041
00:29:10,796 --> 00:29:12,266
different, different


1042
00:29:12,266 --> 00:29:13,376
environments and still not be


1043
00:29:13,376 --> 00:29:13,776
occluded.


1044
00:29:16,266 --> 00:29:18,796
Now let's jump to an article and


1045
00:29:18,886 --> 00:29:21,086
talk about hiding the status


1046
00:29:21,896 --> 00:29:21,996
bar.


1047
00:29:22,226 --> 00:29:23,736
So hiding the status bar is a


1048
00:29:23,736 --> 00:29:25,596
technique that would reclaim 20


1049
00:29:25,596 --> 00:29:27,446
points of vertical screen real


1050
00:29:27,446 --> 00:29:28,966
estate on rectangular screen


1051
00:29:28,966 --> 00:29:29,396
phones.


1052
00:29:30,856 --> 00:29:32,686
And we're just doing this by


1053
00:29:32,686 --> 00:29:34,806
overriding preferred status bar


1054
00:29:34,806 --> 00:29:35,956
hidden in our content view


1055
00:29:35,956 --> 00:29:36,816
controller and we're turning


1056
00:29:36,816 --> 00:29:37,076
true.


1057
00:29:37,526 --> 00:29:38,486
And this preference is then


1058
00:29:38,486 --> 00:29:39,936
propagating up through our


1059
00:29:39,936 --> 00:29:40,906
contained view controller


1060
00:29:40,906 --> 00:29:43,576
hierarchy and respected by the


1061
00:29:43,576 --> 00:29:46,526
root-- the root of the system.


1062
00:29:46,666 --> 00:29:48,756
Now unfortunately on iPhone 10,


1063
00:29:49,296 --> 00:29:50,536
preferring the status bar hidden


1064
00:29:50,696 --> 00:29:52,196
does not also hide the sensor


1065
00:29:52,196 --> 00:29:52,476
housing.


1066
00:29:53,256 --> 00:29:55,186
So we can't slide content


1067
00:29:55,186 --> 00:29:56,676
underneath it.


1068
00:29:57,996 --> 00:29:59,106
[Laughs] So UIKit will protect


1069
00:29:59,106 --> 00:30:00,816
you and will not allow you to


1070
00:30:00,816 --> 00:30:01,466
create this UI.


1071
00:30:01,976 --> 00:30:03,656
Instead, the behavior of


1072
00:30:03,656 --> 00:30:05,156
navigation controller on iPhone


1073
00:30:05,156 --> 00:30:06,716
10 is that it will always


1074
00:30:06,746 --> 00:30:08,846
display the status bar when the


1075
00:30:08,846 --> 00:30:10,286
navigation bar is visible.


1076
00:30:10,806 --> 00:30:13,426
So if you want to hide the


1077
00:30:13,426 --> 00:30:14,746
status bar and reclaim vertical


1078
00:30:14,746 --> 00:30:16,566
real estate, our recommendation


1079
00:30:16,666 --> 00:30:18,836
is to hide the navigation bar


1080
00:30:18,836 --> 00:30:20,026
and status bar together.


1081
00:30:20,726 --> 00:30:23,266
And, in general, when you want


1082
00:30:23,266 --> 00:30:24,536
to go-- when you want to create


1083
00:30:24,536 --> 00:30:26,556
an immersive experience, go


1084
00:30:26,556 --> 00:30:28,426
immersive and just hide all of


1085
00:30:28,426 --> 00:30:29,576
your overlays and controls


1086
00:30:29,576 --> 00:30:29,956
together.


1087
00:30:30,916 --> 00:30:32,596
Not only does this look good and


1088
00:30:32,656 --> 00:30:33,886
help your users focus on their


1089
00:30:33,886 --> 00:30:36,126
content, it's also a design


1090
00:30:36,126 --> 00:30:37,826
technique that will adapt well


1091
00:30:37,976 --> 00:30:40,736
to all of our devices.


1092
00:30:41,716 --> 00:30:43,306
Now, speaking of immersive


1093
00:30:43,306 --> 00:30:44,076
experiences.


1094
00:30:44,926 --> 00:30:46,726
Let's switch to the iPad and


1095
00:30:46,726 --> 00:30:48,276
talk about rendering text in a


1096
00:30:48,276 --> 00:30:49,416
very wide environment.


1097
00:30:51,426 --> 00:30:53,396
So here you can see we have


1098
00:30:53,516 --> 00:30:55,256
text, and it's not extending all


1099
00:30:55,256 --> 00:30:56,816
the way to the edges of our


1100
00:30:56,816 --> 00:30:57,056
view.


1101
00:30:58,546 --> 00:31:00,106
The problem with doing that, if


1102
00:31:00,106 --> 00:31:01,146
we had rendered the text all the


1103
00:31:01,146 --> 00:31:03,446
way to the edge, is that it can


1104
00:31:03,736 --> 00:31:05,606
become difficult to read, for


1105
00:31:05,606 --> 00:31:07,246
your eye to track from one line


1106
00:31:07,246 --> 00:31:10,156
of text to the next at a given


1107
00:31:10,156 --> 00:31:10,576
font size.


1108
00:31:11,716 --> 00:31:14,396
And so the solution is to always


1109
00:31:14,396 --> 00:31:16,806
render text inside of a readable


1110
00:31:16,806 --> 00:31:18,636
width, a recommended readable


1111
00:31:18,636 --> 00:31:20,036
width provided by the system


1112
00:31:20,476 --> 00:31:22,256
based on the user's currently


1113
00:31:22,346 --> 00:31:24,626
selected dynamic type font size.


1114
00:31:25,106 --> 00:31:26,676
Dynamic type being another


1115
00:31:26,876 --> 00:31:30,246
adaptive element of our iOS.


1116
00:31:30,986 --> 00:31:32,616
Now you can get the readable


1117
00:31:32,616 --> 00:31:35,676
width with this API on UIView


1118
00:31:35,976 --> 00:31:37,136
called the readable content


1119
00:31:37,136 --> 00:31:37,416
guide.


1120
00:31:37,866 --> 00:31:39,176
So this is another layout guide


1121
00:31:39,336 --> 00:31:40,656
just like the layout guide for


1122
00:31:40,656 --> 00:31:42,106
margins and safe area.


1123
00:31:42,976 --> 00:31:44,086
And it works just the same.


1124
00:31:44,646 --> 00:31:47,646
And I mentioned that this


1125
00:31:48,066 --> 00:31:49,536
readable width depends on the


1126
00:31:49,536 --> 00:31:50,756
user's currently selected


1127
00:31:50,756 --> 00:31:52,656
dynamic type size, which means


1128
00:31:52,656 --> 00:31:53,916
if the user changes their


1129
00:31:53,916 --> 00:31:55,486
dynamic type size in Control


1130
00:31:55,486 --> 00:31:57,666
Center or the setting app, the


1131
00:31:57,666 --> 00:31:58,976
readable width will get smaller


1132
00:31:58,976 --> 00:32:00,000
or larger to compensate.


1133
00:32:03,296 --> 00:32:05,246
Now let's switch to portrait and


1134
00:32:05,246 --> 00:32:07,096
bring in our sidebar with our


1135
00:32:07,096 --> 00:32:09,746
article list to make the context


1136
00:32:09,746 --> 00:32:11,156
for our article display much


1137
00:32:11,156 --> 00:32:11,636
narrower.


1138
00:32:12,116 --> 00:32:14,106
So here the maximum recommended


1139
00:32:14,106 --> 00:32:16,136
readable-- readable width is


1140
00:32:16,136 --> 00:32:18,056
much wider than the space we


1141
00:32:18,056 --> 00:32:19,226
have to display the article.


1142
00:32:20,236 --> 00:32:21,676
And the thing to note is that


1143
00:32:21,676 --> 00:32:23,496
the readable content guide will


1144
00:32:23,626 --> 00:32:26,246
still not report the maximum


1145
00:32:26,246 --> 00:32:27,366
readable width necessarily.


1146
00:32:27,366 --> 00:32:28,456
It'll be clamped to the layout


1147
00:32:28,456 --> 00:32:29,976
margins, which means you can be


1148
00:32:30,086 --> 00:32:31,616
confident in laying out your


1149
00:32:31,616 --> 00:32:33,366
views against the readable


1150
00:32:33,366 --> 00:32:34,046
content guide.


1151
00:32:34,046 --> 00:32:35,106
And not worry that they're going


1152
00:32:35,106 --> 00:32:36,616
to spill outside your margins.


1153
00:32:39,306 --> 00:32:41,206
Now let's see how this works on


1154
00:32:41,206 --> 00:32:42,776
a context for a safe area


1155
00:32:42,776 --> 00:32:43,116
exists.


1156
00:32:43,796 --> 00:32:44,886
The readable content guide


1157
00:32:44,886 --> 00:32:46,576
functions just like-- just like


1158
00:32:46,576 --> 00:32:48,616
layout margins where its insets


1159
00:32:48,716 --> 00:32:50,606
add to those provided by the


1160
00:32:50,606 --> 00:32:52,116
safe area insets.


1161
00:32:53,256 --> 00:32:56,376
Now normally at the regular--


1162
00:32:56,376 --> 00:32:58,176
the default dynamic type font


1163
00:32:58,176 --> 00:32:59,656
size of the system, the readable


1164
00:32:59,656 --> 00:33:01,846
width is going to be wider than


1165
00:33:01,846 --> 00:33:03,366
the width of a device of an


1166
00:33:03,456 --> 00:33:05,546
iPhone in any orientation which


1167
00:33:05,546 --> 00:33:06,926
means it won't come into play.


1168
00:33:07,636 --> 00:33:09,326
However, even iPhones, if the


1169
00:33:09,326 --> 00:33:11,836
user selects a smaller dynamic


1170
00:33:11,836 --> 00:33:13,066
type font size than the default,


1171
00:33:13,386 --> 00:33:14,576
it can come into play, so it's


1172
00:33:14,576 --> 00:33:15,856
still nice for your application


1173
00:33:15,906 --> 00:33:16,886
to adopt.


1174
00:33:18,636 --> 00:33:20,976
Now let's jump back out to our


1175
00:33:21,326 --> 00:33:22,926
article list table view and see


1176
00:33:22,926 --> 00:33:23,966
how readable width can work


1177
00:33:24,056 --> 00:33:24,256
here.


1178
00:33:24,376 --> 00:33:26,286
Now the thing to know about


1179
00:33:26,286 --> 00:33:28,316
table views is that they use


1180
00:33:28,316 --> 00:33:30,566
their layout margins, I'm


1181
00:33:30,566 --> 00:33:32,386
talking about the margins, to


1182
00:33:32,386 --> 00:33:34,386
layout a lot of their UI


1183
00:33:34,386 --> 00:33:34,936
elements.


1184
00:33:35,266 --> 00:33:38,006
So that means the separators,


1185
00:33:38,326 --> 00:33:40,966
the system accessories as well


1186
00:33:40,966 --> 00:33:42,916
as the labels in the system cell


1187
00:33:42,916 --> 00:33:43,386
styles.


1188
00:33:43,976 --> 00:33:45,846
And any views you lay out inside


1189
00:33:45,846 --> 00:33:47,376
of your own custom table view


1190
00:33:47,376 --> 00:33:48,266
cells, if you laid them out


1191
00:33:48,266 --> 00:33:49,416
against the margins, will play


1192
00:33:49,416 --> 00:33:50,016
along as well.


1193
00:33:50,126 --> 00:33:52,756
So that means if you adjust the


1194
00:33:52,756 --> 00:33:55,496
margins of a table view, you can


1195
00:33:55,496 --> 00:33:57,346
move all of these elements


1196
00:33:57,416 --> 00:33:57,746
together.


1197
00:33:58,816 --> 00:34:00,106
So if you have a table view with


1198
00:34:00,106 --> 00:34:01,606
a lot of multiline text in it,


1199
00:34:01,956 --> 00:34:03,306
it makes sense that you would


1200
00:34:03,306 --> 00:34:04,546
want to adjust the margins of


1201
00:34:04,546 --> 00:34:07,466
the table view to bring all


1202
00:34:07,466 --> 00:34:08,636
these elements into alignment


1203
00:34:08,636 --> 00:34:09,755
and still respect the readable


1204
00:34:09,755 --> 00:34:09,926
width.


1205
00:34:10,735 --> 00:34:12,226
So to do this, table view


1206
00:34:12,226 --> 00:34:12,916
provides an API.


1207
00:34:12,916 --> 00:34:15,246
Called cell layout margins


1208
00:34:15,436 --> 00:34:16,366
follow readable width.


1209
00:34:16,866 --> 00:34:18,255
Now when it's false, table view


1210
00:34:18,255 --> 00:34:19,795
will use its normal system


1211
00:34:19,795 --> 00:34:20,306
margins.


1212
00:34:20,806 --> 00:34:22,545
And if it's true, all the


1213
00:34:22,545 --> 00:34:23,815
content will inset.


1214
00:34:25,056 --> 00:34:27,505
Now, something to note is that


1215
00:34:27,505 --> 00:34:28,686
the default value of this


1216
00:34:28,746 --> 00:34:30,976
property has changed in iOS 12.


1217
00:34:31,886 --> 00:34:35,295
It is now false by default.


1218
00:34:35,576 --> 00:34:36,755
It was previously true.


1219
00:34:37,806 --> 00:34:38,746
This shouldn't affect the


1220
00:34:38,746 --> 00:34:39,926
behavior of your appl-- of your


1221
00:34:39,926 --> 00:34:41,036
applications too much,


1222
00:34:41,036 --> 00:34:42,065
especially on phones.


1223
00:34:42,596 --> 00:34:44,556
Our general recommendation is to


1224
00:34:44,556 --> 00:34:47,016
leave the default alone and set


1225
00:34:47,016 --> 00:34:48,976
it to true when you know that


1226
00:34:48,976 --> 00:34:50,136
you have a table view that's


1227
00:34:50,136 --> 00:34:51,156
going to contain a lot of


1228
00:34:51,156 --> 00:34:52,626
multiline text where it would


1229
00:34:53,306 --> 00:34:54,426
make sense.


1230
00:34:54,606 --> 00:34:55,886
And this property's also


1231
00:34:55,886 --> 00:34:56,856
adjustable from Interface


1232
00:34:56,856 --> 00:34:58,796
Builder with the follow readable


1233
00:34:58,796 --> 00:35:00,000
width checkbox.


1234
00:35:03,066 --> 00:35:05,336
Now keeping with table views but


1235
00:35:05,336 --> 00:35:07,066
moving on from readable width,


1236
00:35:08,266 --> 00:35:11,006
there is something else to know


1237
00:35:11,006 --> 00:35:11,966
how they work with safe area,


1238
00:35:12,496 --> 00:35:14,826
which is that the content views


1239
00:35:14,886 --> 00:35:17,186
of your table view cells will


1240
00:35:17,186 --> 00:35:20,156
not extend beyond the safe area.


1241
00:35:21,656 --> 00:35:23,476
However, by default, the


1242
00:35:23,636 --> 00:35:25,066
background and selected


1243
00:35:25,066 --> 00:35:27,176
background views do-- of UI


1244
00:35:27,176 --> 00:35:29,206
table view cell do extend beyond


1245
00:35:29,206 --> 00:35:29,736
the safe area.


1246
00:35:31,136 --> 00:35:32,556
So if you have some content you


1247
00:35:32,556 --> 00:35:33,946
want to place in custom table


1248
00:35:33,946 --> 00:35:35,836
view cells that you want to


1249
00:35:35,836 --> 00:35:37,526
overflow outside the safe area


1250
00:35:37,526 --> 00:35:38,646
and bleed to the edges of the


1251
00:35:38,646 --> 00:35:40,666
screen, you can either place it


1252
00:35:40,706 --> 00:35:42,126
in the background or selected


1253
00:35:42,126 --> 00:35:43,196
background views if the


1254
00:35:43,196 --> 00:35:44,426
semantics of those views make


1255
00:35:44,466 --> 00:35:44,836
sense.


1256
00:35:45,446 --> 00:35:47,416
Or there's a property on UI


1257
00:35:47,416 --> 00:35:50,156
table view called insets content


1258
00:35:50,156 --> 00:35:52,706
views to safe area, which by


1259
00:35:52,706 --> 00:35:55,026
default is true, but you can


1260
00:35:55,026 --> 00:35:56,486
change to false to get your


1261
00:35:56,486 --> 00:35:58,206
content views to also extend to


1262
00:35:58,206 --> 00:35:58,576
the edges.


1263
00:35:59,136 --> 00:36:01,986
And this property is also


1264
00:36:02,246 --> 00:36:03,426
configurable from Interface


1265
00:36:04,056 --> 00:36:04,216
Builder.


1266
00:36:06,486 --> 00:36:07,826
Now let's rotate back to


1267
00:36:07,826 --> 00:36:08,246
portrait.


1268
00:36:08,666 --> 00:36:09,836
And in the main screen of our


1269
00:36:09,836 --> 00:36:11,566
application, we mentioned this


1270
00:36:11,566 --> 00:36:12,676
sheet that slides up from the


1271
00:36:12,676 --> 00:36:13,986
bottom before containing a


1272
00:36:13,986 --> 00:36:14,476
picker view.


1273
00:36:15,606 --> 00:36:19,536
Now the safe area of the screen


1274
00:36:19,536 --> 00:36:23,026
here means that we have to


1275
00:36:23,256 --> 00:36:25,066
adjust the layout of the picker


1276
00:36:25,066 --> 00:36:28,706
view to be inside this safe


1277
00:36:28,706 --> 00:36:28,946
area.


1278
00:36:31,036 --> 00:36:33,426
And most of the system controls,


1279
00:36:33,486 --> 00:36:34,966
like UI picker view and other


1280
00:36:34,966 --> 00:36:36,016
controls, and probably controls


1281
00:36:36,016 --> 00:36:37,426
of your own many views don't


1282
00:36:37,426 --> 00:36:39,976
make sense to have to know


1283
00:36:39,976 --> 00:36:40,986
anything about the safe area.


1284
00:36:40,986 --> 00:36:42,586
Because it's not clear how they


1285
00:36:42,586 --> 00:36:44,446
would respond or like re-lay out


1286
00:36:44,446 --> 00:36:45,446
themselves internally.


1287
00:36:46,496 --> 00:36:47,556
So we have a recommended


1288
00:36:47,606 --> 00:36:49,126
technique for handling the


1289
00:36:49,126 --> 00:36:50,216
layout of these kinds of views,


1290
00:36:50,636 --> 00:36:53,146
which is to place them inside of


1291
00:36:53,146 --> 00:36:53,766
the container view.


1292
00:36:53,766 --> 00:36:56,016
And the responsibility of this


1293
00:36:56,046 --> 00:36:57,966
container view is simply to


1294
00:36:58,266 --> 00:37:00,466
position its safe area unaware


1295
00:37:00,466 --> 00:37:03,796
content inside the safe area by


1296
00:37:04,416 --> 00:37:05,986
analyzing the safe area insets.


1297
00:37:06,406 --> 00:37:08,596
And it can also provide the


1298
00:37:08,596 --> 00:37:11,966
background, which extends beyond


1299
00:37:11,966 --> 00:37:13,036
the safe area and makes your


1300
00:37:13,036 --> 00:37:14,396
control feel connected to the


1301
00:37:14,726 --> 00:37:16,506
edge of the screen in this case.


1302
00:37:17,376 --> 00:37:19,736
The-- another technique we want


1303
00:37:19,736 --> 00:37:20,816
to talk about related to safe


1304
00:37:20,816 --> 00:37:22,096
area and positioning elements


1305
00:37:22,166 --> 00:37:23,296
close to the edge of the screen


1306
00:37:23,796 --> 00:37:25,656
is when you have a control or


1307
00:37:25,656 --> 00:37:29,876
button that on one device you


1308
00:37:29,876 --> 00:37:31,356
may want to place directly


1309
00:37:31,356 --> 00:37:33,106
against the safe area and on


1310
00:37:33,106 --> 00:37:34,746
another device where the safe


1311
00:37:34,746 --> 00:37:36,376
area insets are zero you may


1312
00:37:36,376 --> 00:37:37,056
want some padding.


1313
00:37:37,616 --> 00:37:38,806
And the reason for doing this in


1314
00:37:38,806 --> 00:37:40,426
design is that the safe area


1315
00:37:40,426 --> 00:37:42,326
insets can sometimes incorporate


1316
00:37:42,396 --> 00:37:43,456
some implicit padding.


1317
00:37:44,106 --> 00:37:45,556
So let me bring-- I want to


1318
00:37:45,596 --> 00:37:47,756
provide you a single solution


1319
00:37:47,986 --> 00:37:49,706
that will work for both of these


1320
00:37:49,706 --> 00:37:50,436
situations.


1321
00:37:51,246 --> 00:37:54,036
So let's bring in a diagram, and


1322
00:37:54,036 --> 00:37:55,286
I'm going to give you two auto


1323
00:37:55,286 --> 00:37:56,836
layout constraints that will


1324
00:37:56,836 --> 00:37:58,246
produce this result in these two


1325
00:37:58,246 --> 00:37:59,146
different situations.


1326
00:37:59,946 --> 00:38:02,626
So the first constraint we need


1327
00:38:02,896 --> 00:38:04,586
represents the padding that we


1328
00:38:04,586 --> 00:38:05,996
would other-- we would normally


1329
00:38:06,226 --> 00:38:06,316
add.


1330
00:38:06,886 --> 00:38:07,956
So this is just a constant


1331
00:38:07,956 --> 00:38:09,066
constraint from the bottom of


1332
00:38:09,066 --> 00:38:11,236
the super view to the bottom of


1333
00:38:11,236 --> 00:38:11,756
our control.


1334
00:38:12,366 --> 00:38:13,386
But in this case, we're going to


1335
00:38:13,386 --> 00:38:15,126
make it not required so that we


1336
00:38:15,126 --> 00:38:16,906
can break it when the safe, when


1337
00:38:16,906 --> 00:38:17,776
the safe area insets are


1338
00:38:17,776 --> 00:38:18,336
non-zero.


1339
00:38:19,936 --> 00:38:21,806
The second constraint is an


1340
00:38:21,806 --> 00:38:23,666
inequality constraint from the


1341
00:38:23,666 --> 00:38:25,406
bottom of our control to the


1342
00:38:25,406 --> 00:38:26,346
bottom of the safe area.


1343
00:38:27,186 --> 00:38:29,886
This ensures that our control is


1344
00:38:29,886 --> 00:38:31,326
always inside the safe area.


1345
00:38:32,006 --> 00:38:34,546
So if I change the safe area


1346
00:38:34,546 --> 00:38:36,036
insets to make them non-zero,


1347
00:38:36,666 --> 00:38:38,496
you can see that the inequality


1348
00:38:38,496 --> 00:38:40,656
constraint ensures our content


1349
00:38:40,656 --> 00:38:42,946
is not clipped while still


1350
00:38:42,946 --> 00:38:43,786
maintaining some minimum


1351
00:38:43,786 --> 00:38:44,000
padding.


1352
00:38:48,096 --> 00:38:50,956
Now we've talked about many


1353
00:38:50,956 --> 00:38:53,186
different adaptive APIs in this


1354
00:38:53,266 --> 00:38:54,806
talk and in previous talks.


1355
00:38:55,226 --> 00:38:56,996
Layout margins help keep lots of


1356
00:38:56,996 --> 00:38:57,996
your elements aligned.


1357
00:38:58,886 --> 00:39:00,466
Safe area insets protect your


1358
00:39:00,466 --> 00:39:02,056
views from being clipped or


1359
00:39:02,096 --> 00:39:02,466
occluded.


1360
00:39:03,466 --> 00:39:04,966
Readable width keeps columns of


1361
00:39:04,966 --> 00:39:05,876
text comfortable to--


1362
00:39:06,096 --> 00:39:07,046
comfortable to read.


1363
00:39:07,756 --> 00:39:10,056
Size classes inform when you


1364
00:39:10,056 --> 00:39:11,416
should make large structur--


1365
00:39:11,696 --> 00:39:12,746
structural changes to your


1366
00:39:12,746 --> 00:39:13,426
applications.


1367
00:39:15,226 --> 00:39:18,846
And these APIs we use to


1368
00:39:18,846 --> 00:39:20,126
implement higher-level


1369
00:39:20,126 --> 00:39:21,696
components in our frameworks.


1370
00:39:22,286 --> 00:39:24,496
So scroll views, tab view--


1371
00:39:24,706 --> 00:39:26,236
table views, container view


1372
00:39:26,236 --> 00:39:26,856
controllers.


1373
00:39:27,196 --> 00:39:27,956
The other kinds of things we


1374
00:39:27,956 --> 00:39:29,286
talked about today reuse these


1375
00:39:29,286 --> 00:39:31,756
things to ensure that our


1376
00:39:31,756 --> 00:39:33,576
high-level components can adapt


1377
00:39:34,056 --> 00:39:35,816
to all of our devices in the


1378
00:39:35,816 --> 00:39:36,866
simplest way possible.


1379
00:39:37,776 --> 00:39:40,006
So the takeaway is for you to


1380
00:39:40,006 --> 00:39:42,266
design your applications in


1381
00:39:42,266 --> 00:39:43,696
terms of these adaptive


1382
00:39:43,806 --> 00:39:44,816
primitives as well.


1383
00:39:45,886 --> 00:39:47,576
The advantage is that-- instead


1384
00:39:47,576 --> 00:39:49,926
of coding for a specific device.


1385
00:39:50,826 --> 00:39:52,196
Your code will be simple,


1386
00:39:52,566 --> 00:39:54,286
flexible, and it'll guarantee


1387
00:39:54,286 --> 00:39:55,486
that your applications are as


1388
00:39:55,616 --> 00:39:57,776
future-proof as possible for all


1389
00:39:57,776 --> 00:39:59,436
of our different environments.


1390
00:40:00,196 --> 00:40:02,156
For more information, these


1391
00:40:02,336 --> 00:40:03,376
slides and recording will be


1392
00:40:03,376 --> 00:40:04,246
available online.


1393
00:40:05,386 --> 00:40:06,716
Thank you all for coming, and I


1394
00:40:06,716 --> 00:40:07,596
really hope you've enjoyed the


1395
00:40:07,596 --> 00:40:08,126
conference.


1396
00:40:09,516 --> 00:40:12,500
[ Applause ]

