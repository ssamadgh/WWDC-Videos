1
00:00:07,516 --> 00:00:15,500
[ Music ]


2
00:00:24,516 --> 00:00:28,126
[ Applause ]


3
00:00:28,626 --> 00:00:32,686
>> Hello. Good afternoon and


4
00:00:32,686 --> 00:00:34,086
thank you for coming to What's


5
00:00:34,086 --> 00:00:34,806
New in WatchOS.


6
00:00:35,936 --> 00:00:37,336
In this session, we're going to


7
00:00:37,336 --> 00:00:38,896
give you a high-level overview


8
00:00:38,896 --> 00:00:40,796
of the new features you as


9
00:00:40,796 --> 00:00:42,316
developers, designers and


10
00:00:42,316 --> 00:00:43,496
product leaders can take


11
00:00:43,496 --> 00:00:45,386
advantage of to create great


12
00:00:45,386 --> 00:00:46,446
Watch experiences.


13
00:00:46,866 --> 00:00:48,146
And we're also going to dip into


14
00:00:48,146 --> 00:00:50,036
the details of the new APIs and


15
00:00:50,036 --> 00:00:51,196
interface builder options.


16
00:00:52,056 --> 00:00:53,966
My name is Lori Hylan-Cho, I


17
00:00:53,966 --> 00:00:55,086
work on the Watch frameworks


18
00:00:55,086 --> 00:00:56,676
team, and I am beyond thrilled


19
00:00:56,676 --> 00:00:58,146
to be here, to share with you


20
00:00:58,446 --> 00:00:59,786
the awesome new options for


21
00:00:59,786 --> 00:01:01,556
creating great Watch experiences


22
00:01:01,556 --> 00:01:02,446
in WatchOS 5.


23
00:01:04,916 --> 00:01:06,246
We've come a long way since our


24
00:01:06,246 --> 00:01:08,346
humble beginnings in 2015.


25
00:01:09,006 --> 00:01:10,746
And a great Watch experience now


26
00:01:10,746 --> 00:01:12,366
consists of several components,


27
00:01:12,456 --> 00:01:13,846
of which a Watch app is likely


28
00:01:13,846 --> 00:01:14,766
to be only one.


29
00:01:15,806 --> 00:01:18,436
Notifications, complications and


30
00:01:18,436 --> 00:01:20,846
Siri shortcuts work together to


31
00:01:20,846 --> 00:01:22,126
create a Watch experience that


32
00:01:22,126 --> 00:01:23,846
allows for brief and meaningful


33
00:01:23,846 --> 00:01:25,156
interactions with the right


34
00:01:25,156 --> 00:01:26,906
information at exactly the right


35
00:01:26,906 --> 00:01:27,176
time.


36
00:01:27,716 --> 00:01:30,426
And of course, with Series 3


37
00:01:30,426 --> 00:01:31,956
Watches that support cellular,


38
00:01:31,956 --> 00:01:33,876
and the new Wi-Fi options that


39
00:01:33,876 --> 00:01:35,206
let you join networks directly


40
00:01:35,206 --> 00:01:36,766
from the Watch, more and more


41
00:01:36,766 --> 00:01:38,226
Watch wearers are venturing out


42
00:01:38,226 --> 00:01:39,196
without their phones.


43
00:01:39,716 --> 00:01:40,846
So, it's important to create a


44
00:01:40,846 --> 00:01:42,146
Watch experience that feels


45
00:01:42,146 --> 00:01:42,666
complete.


46
00:01:44,046 --> 00:01:44,816
Let's take a look at the


47
00:01:44,816 --> 00:01:46,636
features we've added to WatchOS


48
00:01:46,636 --> 00:01:48,316
5 to help you deliver this kind


49
00:01:48,316 --> 00:01:49,746
of a great experience on the


50
00:01:50,516 --> 00:01:50,646
wrist.


51
00:01:52,856 --> 00:01:54,666
Ask any Apple Watch user what


52
00:01:54,666 --> 00:01:55,806
they like most about their


53
00:01:55,806 --> 00:01:57,006
Watch, and one of the first


54
00:01:57,006 --> 00:01:57,976
things they'll say is


55
00:01:57,976 --> 00:01:58,966
notifications.


56
00:01:59,706 --> 00:02:01,246
We're making notifications even


57
00:02:01,246 --> 00:02:02,776
richer this year with a few key


58
00:02:02,776 --> 00:02:03,496
improvements.


59
00:02:05,596 --> 00:02:07,476
Creating dynamic notifications


60
00:02:07,476 --> 00:02:08,916
with images and text has been an


61
00:02:08,916 --> 00:02:10,536
option since WatchOS 1.


62
00:02:10,795 --> 00:02:11,916
But if the user missed the


63
00:02:11,916 --> 00:02:13,416
notification when it arrived,


64
00:02:14,376 --> 00:02:15,666
chances were they'd never see it


65
00:02:15,666 --> 00:02:17,246
at all, as the Notification


66
00:02:17,246 --> 00:02:18,756
Center would display the static


67
00:02:18,816 --> 00:02:19,246
version.


68
00:02:20,056 --> 00:02:22,086
This was intentional, as we have


69
00:02:22,086 --> 00:02:23,136
more time to display the


70
00:02:23,136 --> 00:02:24,546
notification when it arrives


71
00:02:24,576 --> 00:02:25,676
than we do when displaying it


72
00:02:25,676 --> 00:02:26,926
from Notification Center.


73
00:02:28,676 --> 00:02:30,856
In WatchOS 5, we'll do our best


74
00:02:30,856 --> 00:02:32,276
to show that beautiful dynamic


75
00:02:32,276 --> 00:02:34,686
notification with no code


76
00:02:34,686 --> 00:02:36,136
changes or recompilation


77
00:02:36,136 --> 00:02:37,136
required on your part.


78
00:02:38,346 --> 00:02:39,426
We worked hard to make this


79
00:02:39,426 --> 00:02:41,446
possible for its own sake but


80
00:02:41,446 --> 00:02:42,706
being able to show dynamic


81
00:02:42,706 --> 00:02:44,176
notifications from Notification


82
00:02:44,176 --> 00:02:46,086
Center also makes possible the


83
00:02:46,086 --> 00:02:47,456
next two features I'm going to


84
00:02:47,456 --> 00:02:48,076
tell you about.


85
00:02:50,016 --> 00:02:51,676
The first of these is grouped


86
00:02:51,676 --> 00:02:52,576
notifications.


87
00:02:53,446 --> 00:02:55,036
You probably already know that


88
00:02:55,036 --> 00:02:56,656
you can have multiple categories


89
00:02:56,816 --> 00:02:58,016
and different notification


90
00:02:58,016 --> 00:02:59,536
interfaces for each one.


91
00:02:59,536 --> 00:03:01,116
And you might already be


92
00:03:01,116 --> 00:03:02,816
specifying a thread ID and the


93
00:03:02,816 --> 00:03:04,116
push notifications that get


94
00:03:04,116 --> 00:03:05,806
forwarded from iOS to the Watch.


95
00:03:07,576 --> 00:03:09,856
In WatchOS 5, this will cause


96
00:03:09,856 --> 00:03:11,166
notifications to be grouped


97
00:03:11,166 --> 00:03:12,666
automatically in Notification


98
00:03:12,666 --> 00:03:13,806
Center as you saw in the


99
00:03:13,806 --> 00:03:14,456
previous slide.


100
00:03:15,706 --> 00:03:17,906
Specifying a category and thread


101
00:03:17,906 --> 00:03:19,356
ID also opens up another


102
00:03:19,356 --> 00:03:20,086
possibility.


103
00:03:20,606 --> 00:03:23,406
Getting the same behavior as the


104
00:03:23,406 --> 00:03:25,306
built-in messages app, where new


105
00:03:25,306 --> 00:03:26,726
notifications with the same


106
00:03:26,726 --> 00:03:28,046
thread ID that come in when the


107
00:03:28,046 --> 00:03:29,706
original one is still on screen


108
00:03:30,146 --> 00:03:31,586
are appended to the existing


109
00:03:31,586 --> 00:03:32,036
interface.


110
00:03:33,406 --> 00:03:34,776
We made this kind of grouping


111
00:03:34,776 --> 00:03:36,646
behavior optional to give you a


112
00:03:36,646 --> 00:03:37,986
chance to handle being called


113
00:03:37,986 --> 00:03:39,446
multiple times for the same


114
00:03:39,446 --> 00:03:40,556
notification interface


115
00:03:40,556 --> 00:03:40,976
controller.


116
00:03:43,736 --> 00:03:45,466
To opt into this behavior,


117
00:03:45,606 --> 00:03:46,896
select your notifications


118
00:03:46,976 --> 00:03:48,666
category in the interface


119
00:03:48,666 --> 00:03:51,116
storyboard for your Watch app.


120
00:03:51,206 --> 00:03:52,446
And check the handle's grouping


121
00:03:52,446 --> 00:03:54,316
box in the attributes inspector.


122
00:03:55,586 --> 00:03:57,186
If the original notification is


123
00:03:57,186 --> 00:03:58,566
on screen when additional


124
00:03:58,566 --> 00:04:00,306
notifications that have a


125
00:04:00,306 --> 00:04:01,816
matching category and thread ID


126
00:04:01,816 --> 00:04:03,986
arrive, did receive notification


127
00:04:03,986 --> 00:04:05,296
will be called again on the


128
00:04:05,296 --> 00:04:06,856
existing notification interface


129
00:04:06,856 --> 00:04:07,386
controller.


130
00:04:07,916 --> 00:04:10,066
So, you should be prepared to


131
00:04:10,066 --> 00:04:11,686
append content to the existing


132
00:04:11,686 --> 00:04:12,856
notification interface.


133
00:04:13,236 --> 00:04:14,936
Perhaps by adding a blank line


134
00:04:15,346 --> 00:04:16,696
and the new body content to an


135
00:04:16,696 --> 00:04:17,505
existing label.


136
00:04:17,856 --> 00:04:19,076
Or by adding a new row to a


137
00:04:19,076 --> 00:04:20,245
table, as you saw on the


138
00:04:20,245 --> 00:04:21,125
previous example.


139
00:04:24,486 --> 00:04:25,566
And speaking of did receive


140
00:04:25,566 --> 00:04:27,216
notification, its signature has


141
00:04:27,246 --> 00:04:28,556
changed in WatchOS 5.


142
00:04:29,536 --> 00:04:30,556
This version, with the


143
00:04:30,556 --> 00:04:31,896
completion handler has been


144
00:04:31,896 --> 00:04:35,196
deprecated, in favor of this


145
00:04:35,256 --> 00:04:36,286
simplified version.


146
00:04:37,166 --> 00:04:38,356
We did this, so we'd have a


147
00:04:38,356 --> 00:04:39,616
clear boundary for when you're


148
00:04:39,616 --> 00:04:40,686
done processing your


149
00:04:40,686 --> 00:04:41,676
notification data.


150
00:04:41,676 --> 00:04:43,116
And we'd know that everything is


151
00:04:43,116 --> 00:04:44,326
ready to be shown on screen.


152
00:04:45,366 --> 00:04:47,166
We encourage you to do only the


153
00:04:47,166 --> 00:04:49,126
work necessary to display the


154
00:04:49,126 --> 00:04:51,176
notification and to do it as


155
00:04:51,176 --> 00:04:52,196
quickly as possible.


156
00:04:54,536 --> 00:04:56,516
By the way, it's not necessary


157
00:04:56,516 --> 00:04:57,896
for the user to keep their wrist


158
00:04:57,896 --> 00:04:59,636
up to see all the notifications


159
00:04:59,636 --> 00:05:01,026
with the same thread ID as they


160
00:05:01,026 --> 00:05:01,556
come in.


161
00:05:02,376 --> 00:05:03,736
If you're handling grouping and


162
00:05:03,736 --> 00:05:04,926
the dynamic interface for your


163
00:05:04,926 --> 00:05:06,596
notification category, all the


164
00:05:06,596 --> 00:05:08,116
messages with the same thread ID


165
00:05:08,116 --> 00:05:09,996
will expand to a single platter


166
00:05:10,146 --> 00:05:11,466
when the user taps on the group


167
00:05:11,466 --> 00:05:12,686
and Notification Center.


168
00:05:12,686 --> 00:05:15,216
And if additional messages on


169
00:05:15,216 --> 00:05:16,646
that thread come in, they'll be


170
00:05:16,646 --> 00:05:18,306
appended live is when the long


171
00:05:18,306 --> 00:05:19,476
look was first on screen.


172
00:05:24,256 --> 00:05:25,366
So, here's a big one.


173
00:05:26,466 --> 00:05:28,406
In WatchOS 5, you can now bring


174
00:05:28,406 --> 00:05:29,776
some of your apps' functionality


175
00:05:29,846 --> 00:05:31,446
directly into the notifications


176
00:05:31,446 --> 00:05:33,356
you send by including elements


177
00:05:33,496 --> 00:05:34,756
that let the user interact with


178
00:05:34,816 --> 00:05:36,306
content in the notification


179
00:05:36,306 --> 00:05:36,746
itself.


180
00:05:38,716 --> 00:05:40,546
For example, you could let a


181
00:05:40,546 --> 00:05:42,136
user pay for their ride and rate


182
00:05:42,136 --> 00:05:44,096
their driver, notify a user that


183
00:05:44,096 --> 00:05:45,566
their meter is about to expire,


184
00:05:45,566 --> 00:05:46,456
and let them extend their


185
00:05:46,456 --> 00:05:48,616
parking time, or give a diner an


186
00:05:48,616 --> 00:05:50,516
opportunity to not only confirm


187
00:05:50,516 --> 00:05:52,086
their dinner reservation, but to


188
00:05:52,086 --> 00:05:53,206
let you know they'll be a party


189
00:05:53,206 --> 00:05:54,356
of three instead of four.


190
00:05:56,456 --> 00:05:57,676
So, let's see how all this


191
00:05:57,676 --> 00:05:58,026
works.


192
00:05:59,116 --> 00:06:00,146
If you're creating a new


193
00:06:00,146 --> 00:06:01,186
notification interface


194
00:06:01,186 --> 00:06:02,676
controller, a dynamic


195
00:06:02,676 --> 00:06:04,036
interactive interface will be


196
00:06:04,036 --> 00:06:05,606
created for you automatically.


197
00:06:06,276 --> 00:06:09,326
If you already have a dynamic


198
00:06:09,326 --> 00:06:10,566
interface for your notification


199
00:06:10,566 --> 00:06:12,846
category, select the category in


200
00:06:12,846 --> 00:06:13,876
your Watch App's interface


201
00:06:13,876 --> 00:06:15,536
storyboard and check that has


202
00:06:15,536 --> 00:06:17,446
interactive interface box.


203
00:06:21,656 --> 00:06:23,666
In both cases, you'll notice


204
00:06:23,666 --> 00:06:25,136
that the old dynamic interface


205
00:06:25,136 --> 00:06:26,596
is still there, in addition to


206
00:06:26,596 --> 00:06:27,976
the dynamic interactive one.


207
00:06:28,726 --> 00:06:30,206
The dynamic interface will be


208
00:06:30,206 --> 00:06:31,606
shown in WatchOS 5 when the


209
00:06:31,606 --> 00:06:33,256
notification first arrives, and


210
00:06:33,256 --> 00:06:34,946
now in Notification Center as


211
00:06:34,946 --> 00:06:36,206
well, as I mentioned before.


212
00:06:36,976 --> 00:06:38,906
The dynamic interface will be


213
00:06:38,906 --> 00:06:40,216
shown in earlier versions of


214
00:06:40,216 --> 00:06:41,786
WatchOS so, you'll want to keep


215
00:06:41,786 --> 00:06:42,956
that one around for backwards


216
00:06:42,956 --> 00:06:43,686
compatibility.


217
00:06:44,206 --> 00:06:47,846
Once you have a dynamic


218
00:06:47,846 --> 00:06:49,236
interactive interface controller


219
00:06:49,326 --> 00:06:51,316
you can add buttons, switches


220
00:06:51,316 --> 00:06:52,566
and other interactive elements


221
00:06:52,566 --> 00:06:53,936
in the object library, which is


222
00:06:53,936 --> 00:06:55,286
now available at the top of the


223
00:06:55,286 --> 00:06:56,816
screen as a popover menu.


224
00:06:57,406 --> 00:07:02,006
You can even add gesture


225
00:07:02,006 --> 00:07:02,946
recognizers with your


226
00:07:02,946 --> 00:07:04,526
notification, though you should


227
00:07:04,526 --> 00:07:05,666
be aware that the system


228
00:07:05,666 --> 00:07:07,596
gestures will take precedence


229
00:07:07,596 --> 00:07:09,286
over any gestures you add in the


230
00:07:09,286 --> 00:07:09,976
same areas.


231
00:07:16,466 --> 00:07:17,526
Once you've designed your


232
00:07:17,526 --> 00:07:19,326
notification interface wire up


233
00:07:19,326 --> 00:07:20,666
the interactive elements to your


234
00:07:20,666 --> 00:07:21,786
code, the way you would any


235
00:07:21,786 --> 00:07:23,306
other interactive element in


236
00:07:23,306 --> 00:07:24,226
your app.


237
00:07:25,306 --> 00:07:26,426
As you can see here, I'm


238
00:07:26,426 --> 00:07:28,576
dragging my IB action for up


239
00:07:28,576 --> 00:07:30,456
button tapped to the button in


240
00:07:30,456 --> 00:07:31,546
my dynamic interactive


241
00:07:31,546 --> 00:07:32,096
interface.


242
00:07:32,206 --> 00:07:33,346
So, the amount of time will


243
00:07:33,346 --> 00:07:35,136
increase by 15 minutes every


244
00:07:35,136 --> 00:07:39,106
time the button is tapped.


245
00:07:39,106 --> 00:07:40,626
And with all this button tapping


246
00:07:40,856 --> 00:07:42,186
you may have already forgotten


247
00:07:42,186 --> 00:07:43,706
that notifications have always


248
00:07:43,706 --> 00:07:45,036
launched your app when tapped.


249
00:07:46,246 --> 00:07:49,026
This is still true for a regular


250
00:07:49,026 --> 00:07:50,086
dynamic and static


251
00:07:50,376 --> 00:07:51,146
notifications.


252
00:07:51,596 --> 00:07:53,066
But, we obviously had to disable


253
00:07:53,066 --> 00:07:54,476
this behavior for dynamic


254
00:07:54,476 --> 00:07:56,176
interactive notifications.


255
00:07:56,286 --> 00:07:57,236
Because we have interactive


256
00:07:57,236 --> 00:07:57,966
elements in them now.


257
00:07:59,136 --> 00:08:00,316
You can still launch your app


258
00:08:00,556 --> 00:08:01,256
from an interactive


259
00:08:01,256 --> 00:08:02,826
notification, if you need to.


260
00:08:02,926 --> 00:08:03,906
You just have to do it


261
00:08:03,906 --> 00:08:05,376
explicitly by calling a new


262
00:08:05,596 --> 00:08:07,546
method, performed notification


263
00:08:07,546 --> 00:08:09,206
default action.


264
00:08:11,416 --> 00:08:13,216
Similarly, if you include a


265
00:08:13,216 --> 00:08:14,646
button in your notification


266
00:08:14,646 --> 00:08:16,126
interface that should dismiss


267
00:08:16,126 --> 00:08:17,356
the notification after taking


268
00:08:17,406 --> 00:08:19,536
action, as in this case where


269
00:08:19,536 --> 00:08:20,836
tapping the extend button should


270
00:08:20,836 --> 00:08:22,216
both commit the changes to my


271
00:08:22,216 --> 00:08:23,716
rental time and dismiss the


272
00:08:23,716 --> 00:08:25,736
notification, you do this by


273
00:08:25,816 --> 00:08:27,576
calling perform dismiss action


274
00:08:27,826 --> 00:08:29,216
at the end of the IB action


275
00:08:29,216 --> 00:08:31,466
function associated with the


276
00:08:33,736 --> 00:08:33,905
button.


277
00:08:34,046 --> 00:08:35,366
You could also process the


278
00:08:35,366 --> 00:08:36,736
changes made in the body of the


279
00:08:36,736 --> 00:08:38,186
notification using a standard


280
00:08:38,186 --> 00:08:38,916
action button.


281
00:08:39,106 --> 00:08:40,535
Since action buttons always


282
00:08:40,576 --> 00:08:41,676
dismiss the notification.


283
00:08:42,246 --> 00:08:44,966
Wait, you're probably thinking,


284
00:08:45,446 --> 00:08:46,616
action buttons are shared


285
00:08:46,616 --> 00:08:47,846
between all the notification


286
00:08:47,846 --> 00:08:48,656
interfaces.


287
00:08:48,656 --> 00:08:49,816
And some of those buttons


288
00:08:49,816 --> 00:08:51,076
wouldn't make sense if the


289
00:08:51,076 --> 00:08:52,196
interactive elements weren't


290
00:08:52,196 --> 00:08:52,526
there.


291
00:08:53,526 --> 00:08:55,916
Well, new in WatchOS 5, you can


292
00:08:55,916 --> 00:08:57,426
now adjust the action buttons


293
00:08:57,426 --> 00:08:58,756
that are shown at runtime.


294
00:08:59,276 --> 00:09:02,316
There's a new notification


295
00:09:02,436 --> 00:09:03,516
actions property on the


296
00:09:03,516 --> 00:09:04,556
notification interface


297
00:09:04,556 --> 00:09:06,066
controller that returns the


298
00:09:06,066 --> 00:09:07,106
array of actions that will be


299
00:09:07,106 --> 00:09:08,526
displayed for the notification.


300
00:09:09,256 --> 00:09:10,646
You can set this property to a


301
00:09:10,646 --> 00:09:12,756
new array of UN notification


302
00:09:12,866 --> 00:09:14,286
action objects in your did


303
00:09:14,286 --> 00:09:15,636
receive notification call back.


304
00:09:16,436 --> 00:09:17,816
which gives you the flexibility


305
00:09:17,816 --> 00:09:19,606
to add or remove buttons to suit


306
00:09:19,606 --> 00:09:20,836
your interactive interface.


307
00:09:21,526 --> 00:09:25,266
And in an upcoming seed, we're


308
00:09:25,266 --> 00:09:26,426
going to allow changes to


309
00:09:26,426 --> 00:09:28,236
actions any time after did


310
00:09:28,236 --> 00:09:29,676
receive notification is called.


311
00:09:30,326 --> 00:09:30,936
Which will give you the


312
00:09:30,936 --> 00:09:32,646
flexibility to change the action


313
00:09:32,646 --> 00:09:34,376
buttons based on how the user


314
00:09:34,376 --> 00:09:35,776
interacts with the elements in


315
00:09:35,776 --> 00:09:36,916
the interactive notification


316
00:09:36,916 --> 00:09:37,386
interface.


317
00:09:37,986 --> 00:09:42,276
So, that's a lot of information


318
00:09:42,276 --> 00:09:43,986
about notifications and the


319
00:09:43,986 --> 00:09:45,156
options for creating them so


320
00:09:45,156 --> 00:09:45,496
far.


321
00:09:46,106 --> 00:09:48,246
But I have two more things to


322
00:09:48,246 --> 00:09:49,446
tell you about before we move


323
00:09:50,296 --> 00:09:50,366
on.


324
00:09:52,096 --> 00:09:54,336
Critical alerts are a new kind


325
00:09:54,336 --> 00:09:55,606
of notification that will cause


326
00:09:55,606 --> 00:09:57,476
a prominent haptic and a sound


327
00:09:57,476 --> 00:09:59,166
to play even when your Watch is


328
00:09:59,166 --> 00:10:00,596
silenced or in do not disturb


329
00:10:00,596 --> 00:10:00,866
mode.


330
00:10:01,606 --> 00:10:02,646
And thus, they can be used to


331
00:10:02,646 --> 00:10:03,896
deliver extra urgent


332
00:10:03,896 --> 00:10:04,606
information.


333
00:10:05,686 --> 00:10:07,336
If your Watch app integrates


334
00:10:07,336 --> 00:10:09,186
with a medical device or is used


335
00:10:09,186 --> 00:10:10,986
by emergency responders, this


336
00:10:11,076 --> 00:10:12,446
kind of alert might be for you.


337
00:10:13,886 --> 00:10:15,716
Critical alerts require an app


338
00:10:15,716 --> 00:10:18,116
entitlements and explicit


339
00:10:18,116 --> 00:10:19,466
permission to be granted by the


340
00:10:19,466 --> 00:10:20,806
user separate from regular


341
00:10:20,806 --> 00:10:21,536
notification.


342
00:10:21,536 --> 00:10:26,166
The opposite of a critical alert


343
00:10:26,166 --> 00:10:27,386
is one that can be delivered


344
00:10:27,446 --> 00:10:27,996
quietly.


345
00:10:28,716 --> 00:10:29,856
That is, rather than


346
00:10:29,856 --> 00:10:31,576
interrupting the user with an in


347
00:10:31,576 --> 00:10:32,776
the moment notification that


348
00:10:32,776 --> 00:10:34,796
takes over the screen, you can


349
00:10:34,796 --> 00:10:36,486
now choose to send notifications


350
00:10:36,586 --> 00:10:38,376
directly to Notification Center.


351
00:10:39,256 --> 00:10:40,656
You'll notice that no indicator


352
00:10:40,656 --> 00:10:42,816
will appear unless a prominently


353
00:10:42,816 --> 00:10:44,386
delivered notification is also


354
00:10:44,386 --> 00:10:45,476
in Notification Center.


355
00:10:45,986 --> 00:10:47,936
But the swipe from the top of


356
00:10:47,936 --> 00:10:49,316
the screen will still reveal the


357
00:10:49,316 --> 00:10:50,866
quietly delivered notification.


358
00:10:56,336 --> 00:10:57,316
If you choose to deliver


359
00:10:57,316 --> 00:10:59,296
notifications quietly in your


360
00:10:59,296 --> 00:11:01,636
app, you don't have to prompt


361
00:11:01,636 --> 00:11:03,506
the user to allow notifications


362
00:11:03,626 --> 00:11:05,016
when the app is first launched.


363
00:11:05,976 --> 00:11:07,286
Instead, you can request


364
00:11:07,426 --> 00:11:08,516
provisional permission.


365
00:11:09,386 --> 00:11:10,856
This gives the user a chance to


366
00:11:10,856 --> 00:11:12,556
see what kinds of notifications


367
00:11:12,556 --> 00:11:14,306
your app sends before having to


368
00:11:14,306 --> 00:11:15,826
decide whether they want to see


369
00:11:15,976 --> 00:11:19,426
them as they arrive.


370
00:11:19,426 --> 00:11:21,156
Whichever option you choose as a


371
00:11:21,156 --> 00:11:23,146
developer, the user still has


372
00:11:23,146 --> 00:11:24,656
ultimate control over how they


373
00:11:24,656 --> 00:11:26,106
receive your notifications.


374
00:11:26,866 --> 00:11:28,026
They can choose to deliver


375
00:11:28,026 --> 00:11:30,256
notifications quietly by swiping


376
00:11:30,256 --> 00:11:31,716
left from a notification in


377
00:11:31,716 --> 00:11:33,546
Notification Center or change


378
00:11:33,546 --> 00:11:36,156
their notification preferences


379
00:11:36,376 --> 00:11:36,976
in settings.


380
00:11:41,116 --> 00:11:43,906
To sum up, notifications are now


381
00:11:43,906 --> 00:11:44,616
more dynamic.


382
00:11:45,246 --> 00:11:46,516
Users will see your dynamic


383
00:11:46,516 --> 00:11:48,276
interface from Notification


384
00:11:48,276 --> 00:11:50,076
Center in addition to when the


385
00:11:50,076 --> 00:11:51,276
notification first arrives.


386
00:11:52,366 --> 00:11:53,726
We're also offering grouping by


387
00:11:53,726 --> 00:11:55,656
thread ID for the first time on


388
00:11:55,656 --> 00:11:56,046
the Watch.


389
00:11:56,046 --> 00:11:58,796
So, you can design notifications


390
00:11:58,796 --> 00:12:00,066
that behave like the ones like


391
00:12:00,066 --> 00:12:01,786
the built-in messages app.


392
00:12:02,556 --> 00:12:04,086
You can now bring more of your


393
00:12:04,176 --> 00:12:05,946
app experience directly into the


394
00:12:05,946 --> 00:12:07,746
notification your app delivers


395
00:12:07,956 --> 00:12:09,606
with interactive controls and


396
00:12:09,686 --> 00:12:10,646
action buttons that can be


397
00:12:10,646 --> 00:12:11,566
defined at runtime.


398
00:12:12,796 --> 00:12:14,356
And you can also choose to


399
00:12:14,356 --> 00:12:15,746
deliver notifications with the


400
00:12:15,746 --> 00:12:17,346
appropriate level of urgency.


401
00:12:18,636 --> 00:12:19,426
To learn more about


402
00:12:19,426 --> 00:12:23,256
notifications you can attend one


403
00:12:23,256 --> 00:12:24,546
of these sessions.


404
00:12:24,986 --> 00:12:26,906
I highly recommend Designing


405
00:12:26,906 --> 00:12:28,566
Notifications, that will give


406
00:12:28,566 --> 00:12:29,746
you some great tips for how to


407
00:12:30,306 --> 00:12:32,546
design effective interactive


408
00:12:32,646 --> 00:12:33,406
notifications.


409
00:12:36,586 --> 00:12:38,766
Okay, now that we have your


410
00:12:38,766 --> 00:12:40,286
user's attention with


411
00:12:40,286 --> 00:12:42,326
notifications, let's turn our


412
00:12:42,326 --> 00:12:44,086
attention to the features we're


413
00:12:44,086 --> 00:12:45,546
adding to make your Watch apps


414
00:12:45,546 --> 00:12:46,136
more awesome.


415
00:12:47,326 --> 00:12:48,996
The first has to do with local


416
00:12:48,996 --> 00:12:49,756
audio playback.


417
00:12:51,716 --> 00:12:53,346
Some of you have already made


418
00:12:53,346 --> 00:12:55,116
forays into audio playback on


419
00:12:55,116 --> 00:12:56,726
the Watch by taking advantage of


420
00:12:56,726 --> 00:12:58,216
URL session for downloading


421
00:12:58,216 --> 00:12:59,116
files to the Watch.


422
00:12:59,576 --> 00:13:01,526
And WK audio file queue player


423
00:13:01,526 --> 00:13:02,076
to play them.


424
00:13:03,416 --> 00:13:05,216
With WatchOS 5, we're going to


425
00:13:05,216 --> 00:13:06,776
make developing audio apps for


426
00:13:06,776 --> 00:13:08,626
the Watch even easier, and the


427
00:13:08,626 --> 00:13:10,196
resulting experiences more


428
00:13:10,196 --> 00:13:10,706
delightful.


429
00:13:13,036 --> 00:13:15,046
In WatchOS 5, we're offering a


430
00:13:15,046 --> 00:13:16,866
new background mode for playing


431
00:13:16,866 --> 00:13:17,906
local audio files.


432
00:13:17,906 --> 00:13:20,106
So, you can now focus on your


433
00:13:20,196 --> 00:13:22,396
app's main purpose, audio,


434
00:13:22,906 --> 00:13:24,326
rather than trying to figure out


435
00:13:24,326 --> 00:13:26,206
how to build something else like


436
00:13:26,206 --> 00:13:28,236
a workout app just to be able to


437
00:13:28,286 --> 00:13:28,836
play audio.


438
00:13:30,516 --> 00:13:34,876
[ Applause ]


439
00:13:35,376 --> 00:13:37,396
We also exposed AVAudio player


440
00:13:37,396 --> 00:13:39,276
and AVAudioEngine directly,


441
00:13:39,586 --> 00:13:40,966
which means you can use the same


442
00:13:40,966 --> 00:13:42,126
methods and properties you're


443
00:13:42,186 --> 00:13:43,716
already familiar with if you've


444
00:13:43,716 --> 00:13:45,556
been building iOS apps that play


445
00:13:45,556 --> 00:13:45,956
audio.


446
00:13:46,896 --> 00:13:48,536
In fact, you can share your code


447
00:13:48,536 --> 00:13:50,216
between your iOS app and your


448
00:13:50,216 --> 00:13:51,536
Watch app by moving your


449
00:13:51,606 --> 00:13:52,796
playback related code to a


450
00:13:52,796 --> 00:13:53,286
framework.


451
00:13:53,946 --> 00:13:56,256
One thing that's different from


452
00:13:56,356 --> 00:13:59,446
iOS, is that playing longform


453
00:13:59,446 --> 00:14:00,996
audio on the Watch requires


454
00:14:01,046 --> 00:14:02,796
headphones or an external


455
00:14:02,796 --> 00:14:05,276
speaker to be connected just as


456
00:14:05,276 --> 00:14:06,336
when playing from the built-in


457
00:14:06,336 --> 00:14:06,746
music app.


458
00:14:08,256 --> 00:14:09,646
For this reason, Bluetooth


459
00:14:09,646 --> 00:14:11,106
routing is part of the session


460
00:14:11,186 --> 00:14:12,316
activation process.


461
00:14:12,526 --> 00:14:13,686
If you set your route sharing


462
00:14:13,686 --> 00:14:15,486
policy to longform, as you


463
00:14:16,236 --> 00:14:18,136
should, will automatically


464
00:14:18,136 --> 00:14:19,796
connect to the headphones with


465
00:14:19,796 --> 00:14:21,536
Apple wireless chip, like


466
00:14:21,536 --> 00:14:24,296
AirPods or Beats Studio3, if


467
00:14:24,296 --> 00:14:25,086
they're already in use.


468
00:14:25,706 --> 00:14:27,336
Or, will show a route picker to


469
00:14:27,336 --> 00:14:28,776
let the user choose other


470
00:14:28,776 --> 00:14:30,376
headphones or Bluetooth speakers


471
00:14:30,776 --> 00:14:32,346
when you call the activate with


472
00:14:32,346 --> 00:14:33,846
options completion API in a


473
00:14:33,846 --> 00:14:34,916
session that's new.


474
00:14:38,266 --> 00:14:39,886
You could also use the MP now


475
00:14:39,886 --> 00:14:41,496
playing info center API to


476
00:14:41,566 --> 00:14:42,996
populate the now playing app


477
00:14:43,596 --> 00:14:44,846
with information about what your


478
00:14:44,846 --> 00:14:45,636
app is playing.


479
00:14:46,036 --> 00:14:47,846
Which means your apps info will


480
00:14:47,846 --> 00:14:49,136
show in the now playing


481
00:14:49,306 --> 00:14:49,986
complication.


482
00:14:53,326 --> 00:14:54,476
And you can handle the media


483
00:14:54,476 --> 00:14:55,746
remote commands that make sense


484
00:14:55,746 --> 00:14:57,496
for your app; from play and


485
00:14:57,496 --> 00:15:00,366
pause, to next and previous, to


486
00:15:00,366 --> 00:15:01,966
even like and dislike.


487
00:15:05,106 --> 00:15:06,716
And last, but not least, it's


488
00:15:06,716 --> 00:15:08,136
now possible to control the


489
00:15:08,136 --> 00:15:10,006
volume from your custom playback


490
00:15:10,006 --> 00:15:12,226
UI with the new volume control


491
00:15:12,226 --> 00:15:12,436
view.


492
00:15:13,166 --> 00:15:14,846
Available in the object library


493
00:15:14,846 --> 00:15:15,706
and interface builder.


494
00:15:16,516 --> 00:15:19,226
[ Applause ]


495
00:15:19,726 --> 00:15:21,216
The control automatically takes


496
00:15:21,216 --> 00:15:22,656
on the tint color of your app


497
00:15:22,656 --> 00:15:24,626
when at rest and responds with


498
00:15:24,626 --> 00:15:26,016
the color changes you're used to


499
00:15:26,186 --> 00:15:27,656
from the system volume control


500
00:15:27,806 --> 00:15:29,166
when turning the digital crown.


501
00:15:29,716 --> 00:15:34,086
There's a whole session devoted


502
00:15:34,086 --> 00:15:35,546
to creating audio apps for


503
00:15:35,546 --> 00:15:38,066
WatchOS which I highly encourage


504
00:15:38,066 --> 00:15:39,816
you to attend to get more


505
00:15:39,816 --> 00:15:41,746
details about the new APIs and


506
00:15:41,746 --> 00:15:43,286
best practices for working with


507
00:15:43,286 --> 00:15:43,676
audio.


508
00:15:43,816 --> 00:15:45,586
And we'll also be prepared to


509
00:15:45,586 --> 00:15:47,056
talk about background audio at


510
00:15:47,056 --> 00:15:48,356
the WatchOS runtime and


511
00:15:48,406 --> 00:15:49,836
conductivity lab on Thursday.


512
00:15:50,506 --> 00:15:54,166
If the primary function of your


513
00:15:54,416 --> 00:15:55,976
app isn't playing audio, but


514
00:15:55,976 --> 00:15:57,226
your app would benefit from


515
00:15:57,226 --> 00:15:58,736
being able to control audio


516
00:15:58,736 --> 00:16:00,186
playing elsewhere on a system,


517
00:16:00,586 --> 00:16:01,836
whether it's on a Watch or on


518
00:16:01,836 --> 00:16:04,476
phone, as in the workout app,


519
00:16:04,786 --> 00:16:06,236
where you can swipe left during


520
00:16:06,236 --> 00:16:07,466
a workout to see now playing


521
00:16:07,466 --> 00:16:07,946
controls.


522
00:16:08,746 --> 00:16:09,936
You'll be happy to hear that


523
00:16:09,936 --> 00:16:12,196
were exposing a now playing view


524
00:16:12,196 --> 00:16:14,956
that you can embed in your apps.


525
00:16:16,376 --> 00:16:17,886
You can find the now playing


526
00:16:17,886 --> 00:16:19,186
view in the object library in


527
00:16:19,186 --> 00:16:20,066
interface builder.


528
00:16:20,926 --> 00:16:22,086
It's designed to fill the


529
00:16:22,086 --> 00:16:22,786
screen.


530
00:16:23,146 --> 00:16:24,496
So, it works best in apps with


531
00:16:24,576 --> 00:16:25,356
page layouts.


532
00:16:26,686 --> 00:16:27,856
Note that the now playing view


533
00:16:27,856 --> 00:16:29,376
is a systemwide control that's


534
00:16:29,376 --> 00:16:31,076
meant to control audio coming


535
00:16:31,076 --> 00:16:31,966
from other apps.


536
00:16:31,966 --> 00:16:33,356
So, it will show whatever the


537
00:16:33,356 --> 00:16:34,736
user is currently listening to,


538
00:16:34,826 --> 00:16:36,186
whether it's on Apple Watch or


539
00:16:37,096 --> 00:16:37,216
iPhone.


540
00:16:39,576 --> 00:16:41,396
While we're here, I want to


541
00:16:41,396 --> 00:16:42,476
point out a couple of other new


542
00:16:42,476 --> 00:16:43,796
options and one change in


543
00:16:43,796 --> 00:16:44,446
behavior.


544
00:16:45,306 --> 00:16:47,236
In previous versions of WatchOS,


545
00:16:47,296 --> 00:16:48,976
if you added a 38-millimeter


546
00:16:49,236 --> 00:16:50,826
asset but forgot to add the same


547
00:16:50,946 --> 00:16:52,346
asset for a 42-millimeter


548
00:16:52,346 --> 00:16:54,186
device, the asset would be


549
00:16:54,186 --> 00:16:55,936
missing on the larger device.


550
00:16:56,686 --> 00:16:58,236
Now it will automatically fall


551
00:16:58,236 --> 00:16:59,946
back to the 38 millimeter size


552
00:17:00,076 --> 00:17:01,726
if the 42 millimeter size is


553
00:17:01,726 --> 00:17:02,136
missing.


554
00:17:02,736 --> 00:17:05,915
But you can skip worrying about


555
00:17:05,915 --> 00:17:07,336
providing assets of different


556
00:17:07,336 --> 00:17:09,486
sizes altogether by instead


557
00:17:09,486 --> 00:17:12,046
adding a PDF in the universal


558
00:17:12,046 --> 00:17:13,935
selection of your asset catalog


559
00:17:14,486 --> 00:17:16,086
and setting the new auto scaling


560
00:17:16,086 --> 00:17:17,695
option to automatic.


561
00:17:24,046 --> 00:17:25,246
This will cause the right sized


562
00:17:25,476 --> 00:17:26,606
asset to show up at the right


563
00:17:26,656 --> 00:17:30,466
place at the right time.


564
00:17:30,666 --> 00:17:32,186
We've also exposed the title


565
00:17:32,186 --> 00:17:34,106
textiles in the font menu to


566
00:17:34,106 --> 00:17:35,206
give you more options for


567
00:17:35,206 --> 00:17:37,566
differentiating your text within


568
00:17:37,566 --> 00:17:38,306
your interfaces.


569
00:17:39,326 --> 00:17:40,926
These textiles are compatible


570
00:17:40,926 --> 00:17:43,006
with dynamic type, so they'll


571
00:17:43,346 --> 00:17:44,436
increase or decrease.


572
00:17:44,436 --> 00:17:45,896
They'll scale up and down, as


573
00:17:45,896 --> 00:17:47,336
the user changes their font size


574
00:17:47,336 --> 00:17:47,866
in settings.


575
00:17:48,356 --> 00:17:51,786
And the large title style is


576
00:17:51,786 --> 00:17:53,196
available in both interface


577
00:17:53,196 --> 00:17:54,386
builder and as an API.


578
00:17:58,456 --> 00:17:59,906
Since I'm in the process of


579
00:17:59,906 --> 00:18:01,116
building an app for skating


580
00:18:01,116 --> 00:18:02,676
workouts, now would be a good


581
00:18:02,726 --> 00:18:03,596
time to talk about the


582
00:18:03,596 --> 00:18:04,866
improvements we're making to


583
00:18:04,866 --> 00:18:06,306
workouts in WatchOS 5.


584
00:18:07,506 --> 00:18:08,726
We completely rewrote the


585
00:18:08,726 --> 00:18:10,636
workout API in this release to


586
00:18:10,636 --> 00:18:12,816
make it simpler, more reliable,


587
00:18:12,816 --> 00:18:13,776
and more resilient.


588
00:18:14,466 --> 00:18:16,096
And we've moved the built-in


589
00:18:16,096 --> 00:18:17,386
workout app to use it.


590
00:18:18,676 --> 00:18:19,676
We're hoping you'll move your


591
00:18:19,676 --> 00:18:23,246
fitness apps to it to.


592
00:18:23,386 --> 00:18:24,956
It's now easier than ever to


593
00:18:24,956 --> 00:18:26,526
start a workout and collect the


594
00:18:26,556 --> 00:18:28,116
right data with a new


595
00:18:28,116 --> 00:18:30,116
initializer from HK workout


596
00:18:30,336 --> 00:18:33,556
session and the new workout


597
00:18:33,556 --> 00:18:34,076
builder API.


598
00:18:34,926 --> 00:18:37,536
You create the workout session,


599
00:18:38,256 --> 00:18:39,586
get the builder from the session


600
00:18:40,016 --> 00:18:41,326
and start collecting data.


601
00:18:42,096 --> 00:18:42,846
It's that simple.


602
00:18:44,416 --> 00:18:46,476
This is what it looks like in


603
00:18:47,236 --> 00:18:47,346
code.


604
00:18:47,556 --> 00:18:48,776
You create and configure the


605
00:18:48,776 --> 00:18:50,326
session with a health store and


606
00:18:50,326 --> 00:18:52,186
a workout configuration, which


607
00:18:52,186 --> 00:18:54,046
includes the activity type.


608
00:18:54,656 --> 00:18:56,926
Grab the HK live workout builder


609
00:18:56,926 --> 00:18:57,876
that's associated with the


610
00:18:57,876 --> 00:19:00,606
session and begin collection.


611
00:19:02,076 --> 00:19:03,106
The relevant data for the


612
00:19:03,106 --> 00:19:04,566
workout type will be collected


613
00:19:04,676 --> 00:19:06,536
automatically, even across


614
00:19:06,676 --> 00:19:08,756
pauses and resumes, to give you


615
00:19:08,756 --> 00:19:10,956
a correct and consistent HK


616
00:19:10,956 --> 00:19:12,926
workout artifact with a correct


617
00:19:12,926 --> 00:19:13,746
elapsed time.


618
00:19:14,306 --> 00:19:18,066
And because no app is perfect,


619
00:19:18,676 --> 00:19:20,256
if your fitness app crashes


620
00:19:20,256 --> 00:19:21,766
during an active workout session


621
00:19:21,936 --> 00:19:22,966
it will automatically be


622
00:19:22,966 --> 00:19:23,626
relaunched.


623
00:19:24,516 --> 00:19:27,776
[ Applause ]


624
00:19:28,276 --> 00:19:30,176
Just use the HK health store


625
00:19:30,176 --> 00:19:31,886
recover active workout session


626
00:19:32,116 --> 00:19:35,216
API and the session and builder


627
00:19:35,216 --> 00:19:36,416
will be restored in their


628
00:19:36,416 --> 00:19:37,136
previous state.


629
00:19:40,076 --> 00:19:42,066
To learn even more about the new


630
00:19:42,066 --> 00:19:44,106
workout APIs, as well as options


631
00:19:44,106 --> 00:19:44,976
for collecting health and


632
00:19:44,976 --> 00:19:46,896
fitness data check out New Ways


633
00:19:46,926 --> 00:19:48,926
to Work With Workouts or visit


634
00:19:48,926 --> 00:19:49,686
the health and fitness


635
00:19:49,686 --> 00:19:51,226
technology lab tomorrow


636
00:19:51,226 --> 00:19:51,706
afternoon.


637
00:19:52,226 --> 00:19:57,396
Next up, your apps now have a


638
00:19:57,396 --> 00:19:59,106
place on the Siri Watch face


639
00:19:59,276 --> 00:20:00,186
with Siri Shortcuts.


640
00:20:01,526 --> 00:20:03,486
As you saw on the keynote, Siri


641
00:20:03,486 --> 00:20:04,756
Shortcuts are meant to help


642
00:20:04,756 --> 00:20:06,286
users accomplish tasks that they


643
00:20:06,286 --> 00:20:08,156
perform frequently with more


644
00:20:08,156 --> 00:20:09,356
ease than ever before.


645
00:20:10,946 --> 00:20:12,976
And the Siri Watch face surfaces


646
00:20:12,976 --> 00:20:14,376
these, the common tasks, at the


647
00:20:14,376 --> 00:20:16,176
right place and time with a


648
00:20:16,176 --> 00:20:17,846
little input from you as app


649
00:20:17,846 --> 00:20:18,466
developers.


650
00:20:19,806 --> 00:20:20,986
I want to focus on how to use


651
00:20:20,986 --> 00:20:22,566
shortcuts to make a great Watch


652
00:20:22,566 --> 00:20:23,826
experience and how that


653
00:20:23,826 --> 00:20:25,506
experience differs depending on


654
00:20:25,506 --> 00:20:26,406
whether your Watch app is


655
00:20:26,406 --> 00:20:26,896
installed.


656
00:20:29,236 --> 00:20:30,996
First, a few words about what


657
00:20:30,996 --> 00:20:31,866
makes a good shortcut.


658
00:20:33,156 --> 00:20:35,006
As the name implies, shortcuts


659
00:20:35,006 --> 00:20:36,396
are about helping Watch users


660
00:20:36,496 --> 00:20:38,476
see useful information and


661
00:20:38,476 --> 00:20:40,006
perform common tasks quickly.


662
00:20:40,666 --> 00:20:41,916
Whether it's launching your app


663
00:20:41,916 --> 00:20:43,096
to a specific screen with


664
00:20:43,096 --> 00:20:45,326
options preselected, or getting


665
00:20:45,326 --> 00:20:47,116
to the awesome outcome your app


666
00:20:47,116 --> 00:20:48,716
enables, such as ordering your


667
00:20:48,716 --> 00:20:50,576
morning coffee, booking a fine


668
00:20:50,576 --> 00:20:52,496
dining reservation, or re-upping


669
00:20:52,496 --> 00:20:53,466
your chocolate supply.


670
00:20:54,716 --> 00:20:55,826
Think about glanceable


671
00:20:55,826 --> 00:20:57,496
information and one or two tap


672
00:20:57,496 --> 00:20:58,206
interactions.


673
00:20:58,746 --> 00:21:02,716
Shortcuts can be user activity


674
00:21:02,716 --> 00:21:04,376
based, or intent based.


675
00:21:05,066 --> 00:21:06,406
User activity based shortcuts


676
00:21:06,406 --> 00:21:07,676
are great for when the goal is


677
00:21:07,676 --> 00:21:08,666
to launch your app with a


678
00:21:08,666 --> 00:21:10,976
specific context, such as


679
00:21:10,976 --> 00:21:12,376
navigating straight to a screen


680
00:21:12,376 --> 00:21:13,716
where the user can log a meal


681
00:21:13,716 --> 00:21:15,116
they've eaten, or in this case,


682
00:21:15,256 --> 00:21:15,666
delivered.


683
00:21:16,236 --> 00:21:20,126
Intent based shortcuts make more


684
00:21:20,186 --> 00:21:21,446
sense for tasks that don't


685
00:21:21,446 --> 00:21:22,916
necessarily require your app to


686
00:21:22,916 --> 00:21:23,476
be launched.


687
00:21:23,876 --> 00:21:25,006
Such as placing your regular


688
00:21:25,006 --> 00:21:25,716
coffee order.


689
00:21:26,896 --> 00:21:27,816
If your shortcut is


690
00:21:27,816 --> 00:21:29,776
intent-based, when the user taps


691
00:21:29,776 --> 00:21:30,836
your shortcut platter on the


692
00:21:30,836 --> 00:21:32,516
Siri face, they'll receive a


693
00:21:32,516 --> 00:21:33,766
quick confirmation screen.


694
00:21:34,796 --> 00:21:35,836
Did you mean to order that


695
00:21:35,836 --> 00:21:36,166
coffee?


696
00:21:37,186 --> 00:21:38,236
If the intent supports


697
00:21:38,236 --> 00:21:40,026
background execution, it will


698
00:21:40,026 --> 00:21:41,166
run without launching the app,


699
00:21:41,666 --> 00:21:42,696
when the user confirms.


700
00:21:43,436 --> 00:21:44,936
Otherwise, the confirmation will


701
00:21:44,936 --> 00:21:46,486
launch or restore the app and


702
00:21:46,486 --> 00:21:48,126
hand it your intent.


703
00:21:49,736 --> 00:21:51,636
How the user has interacted with


704
00:21:51,636 --> 00:21:52,976
your app in the past is taken


705
00:21:52,976 --> 00:21:54,396
into account when predicting


706
00:21:54,396 --> 00:21:55,566
what shortcuts to show.


707
00:21:56,306 --> 00:21:57,966
You should donate intense or


708
00:21:57,966 --> 00:21:59,336
user activities as the user


709
00:21:59,336 --> 00:22:00,756
performs the main functions of


710
00:22:00,756 --> 00:22:02,186
your app.


711
00:22:02,186 --> 00:22:03,966
For example, an audio app like


712
00:22:03,966 --> 00:22:05,876
Audible would donate an IN


713
00:22:05,876 --> 00:22:07,646
media, play media intent when


714
00:22:08,026 --> 00:22:09,466
the user starts or resumes


715
00:22:09,526 --> 00:22:13,836
playing an audiobook.


716
00:22:13,946 --> 00:22:15,576
Shortcut surface on the Siri


717
00:22:15,576 --> 00:22:17,256
Watch face based on relevance


718
00:22:17,606 --> 00:22:19,136
with the most relevant items


719
00:22:19,136 --> 00:22:20,426
appearing at the top of the up


720
00:22:20,426 --> 00:22:22,486
next section and less relevant


721
00:22:22,486 --> 00:22:24,886
ones at the bottom.


722
00:22:24,886 --> 00:22:26,386
Previous user interactions


723
00:22:26,476 --> 00:22:28,736
intense performed or donated and


724
00:22:28,736 --> 00:22:29,856
user activities that have been


725
00:22:29,856 --> 00:22:32,216
marked both eligible for search


726
00:22:32,326 --> 00:22:33,846
and eligible for prediction


727
00:22:34,496 --> 00:22:35,556
inform relevance.


728
00:22:36,176 --> 00:22:37,506
But to appear on the Siri Watch


729
00:22:37,506 --> 00:22:38,956
face, you must also give the


730
00:22:38,956 --> 00:22:41,246
system explicit hints about when


731
00:22:41,246 --> 00:22:42,726
or where a shortcut is relevant


732
00:22:43,006 --> 00:22:44,486
by creating a relevant shortcut.


733
00:22:46,776 --> 00:22:48,726
A relevant shortcut consists of


734
00:22:48,726 --> 00:22:50,236
a user activity or intent-based


735
00:22:50,236 --> 00:22:52,806
Siri shortcut, an optional Watch


736
00:22:52,806 --> 00:22:54,326
template that defines the title,


737
00:22:54,496 --> 00:22:56,116
subtitle, and image that should


738
00:22:56,116 --> 00:22:57,546
appear in the shortcut platter,


739
00:22:57,546 --> 00:22:59,266
and an array of relevance


740
00:22:59,266 --> 00:23:00,906
providers that define the time,


741
00:23:01,146 --> 00:23:03,426
location or situation in which


742
00:23:03,426 --> 00:23:04,576
your shortcut would be most


743
00:23:04,576 --> 00:23:05,076
relevant.


744
00:23:05,656 --> 00:23:08,896
We've already talked about user


745
00:23:08,896 --> 00:23:10,146
activity and intent-based


746
00:23:10,146 --> 00:23:11,736
shortcuts, so let's talk about


747
00:23:11,736 --> 00:23:12,956
the other two components of a


748
00:23:12,956 --> 00:23:13,846
relevant shortcut.


749
00:23:16,056 --> 00:23:18,276
A Watch template is an optional


750
00:23:18,346 --> 00:23:20,256
IN default card template, that


751
00:23:20,256 --> 00:23:22,276
consists of a title, an optional


752
00:23:22,376 --> 00:23:24,146
title, and an optional image.


753
00:23:24,906 --> 00:23:26,856
If you don't provide a Watch


754
00:23:26,856 --> 00:23:27,926
template, we'll pull the


755
00:23:27,926 --> 00:23:29,446
necessary information from the


756
00:23:29,446 --> 00:23:31,416
IN shortcut, but you should take


757
00:23:31,416 --> 00:23:32,956
the opportunity to provide


758
00:23:32,956 --> 00:23:34,996
informative strings so the user


759
00:23:34,996 --> 00:23:36,696
understands what they get when


760
00:23:36,696 --> 00:23:37,826
they tap your platter.


761
00:23:38,466 --> 00:23:42,606
A relevance provider focuses on


762
00:23:42,606 --> 00:23:44,656
the date, location or situation


763
00:23:44,656 --> 00:23:45,686
in which the shortcut would be


764
00:23:45,686 --> 00:23:46,556
most valuable.


765
00:23:47,586 --> 00:23:49,506
Think about when and where your


766
00:23:49,506 --> 00:23:50,576
shortcut would be relevant.


767
00:23:51,146 --> 00:23:52,396
Is it something the user might


768
00:23:52,396 --> 00:23:54,506
glance at or tap on at any time


769
00:23:54,506 --> 00:23:55,106
during the day?


770
00:23:55,986 --> 00:23:57,436
Is it relevant at a specific


771
00:23:57,436 --> 00:24:00,316
date and time, or is it based on


772
00:24:00,316 --> 00:24:00,886
location?


773
00:24:01,456 --> 00:24:04,356
Since a relevant shortcut takes


774
00:24:04,356 --> 00:24:05,856
an array of relevance providers


775
00:24:06,226 --> 00:24:07,836
it's possible to specify more


776
00:24:07,836 --> 00:24:08,576
than one kind.


777
00:24:09,016 --> 00:24:10,636
For example, if your shortcut


778
00:24:10,636 --> 00:24:12,196
would be relevant at both a time


779
00:24:12,306 --> 00:24:15,536
and a place.


780
00:24:15,706 --> 00:24:17,696
Again, these relevant providers


781
00:24:17,696 --> 00:24:19,176
act as hints to the system.


782
00:24:19,656 --> 00:24:21,086
As the user interacts with your


783
00:24:21,086 --> 00:24:23,136
content, actual usage will


784
00:24:23,136 --> 00:24:24,136
inform its placement.


785
00:24:24,796 --> 00:24:26,426
If the user fails to interact


786
00:24:26,426 --> 00:24:27,426
with shortcuts that appear on


787
00:24:27,426 --> 00:24:30,526
the Siri face, they'll drop in


788
00:24:32,596 --> 00:24:32,846
relevance.


789
00:24:32,916 --> 00:24:34,016
Once you have relevant


790
00:24:34,016 --> 00:24:35,686
shortcuts, the next step is to


791
00:24:35,686 --> 00:24:36,896
supply them to the relevant


792
00:24:36,896 --> 00:24:38,526
shortcut store so they can be


793
00:24:38,526 --> 00:24:39,876
considered for the Siri Watch


794
00:24:39,876 --> 00:24:40,216
face.


795
00:24:41,426 --> 00:24:42,596
Relevant shortcuts can be


796
00:24:42,596 --> 00:24:44,776
supplied by both your iOS app


797
00:24:44,776 --> 00:24:47,036
and your Watch app.


798
00:24:47,036 --> 00:24:48,476
iOS relevant shortcuts are


799
00:24:48,476 --> 00:24:50,136
synced periodically from iPhone


800
00:24:50,136 --> 00:24:51,966
Apple Watch and they're merged


801
00:24:51,966 --> 00:24:53,546
into consideration with the


802
00:24:53,546 --> 00:24:54,646
Watch relevant shortcuts.


803
00:24:56,016 --> 00:24:57,536
If your Watch app supports the


804
00:24:57,636 --> 00:24:59,366
iOS shortcut, the Watch app


805
00:24:59,366 --> 00:25:00,516
handles execution.


806
00:25:01,246 --> 00:25:02,876
If it doesn't, or if the Watch


807
00:25:02,876 --> 00:25:05,346
app is not installed, the


808
00:25:05,706 --> 00:25:07,536
shortcut executes on the phone,


809
00:25:07,726 --> 00:25:08,426
over Internet.


810
00:25:09,126 --> 00:25:13,146
A subset of relevant shortcuts


811
00:25:13,146 --> 00:25:14,516
can surface on the Siri Watch


812
00:25:14,516 --> 00:25:16,736
face, without Watch OS support.


813
00:25:17,716 --> 00:25:19,606
If they are intent-based


814
00:25:19,676 --> 00:25:21,566
shortcuts that support running


815
00:25:21,566 --> 00:25:23,516
in the background and can run


816
00:25:23,516 --> 00:25:24,796
without accessing encrypted


817
00:25:24,796 --> 00:25:26,326
data, which is separate from


818
00:25:26,326 --> 00:25:26,576
off.


819
00:25:27,926 --> 00:25:29,446
Again, these shortcuts are going


820
00:25:29,446 --> 00:25:31,436
to execute on iPhone over


821
00:25:31,436 --> 00:25:31,716
Internet.


822
00:25:32,736 --> 00:25:34,396
The richest experience for users


823
00:25:34,396 --> 00:25:35,686
will always be with a Watch app


824
00:25:35,686 --> 00:25:36,916
that can handle the shortcut


825
00:25:36,916 --> 00:25:39,386
locally, either by launching the


826
00:25:39,546 --> 00:25:41,076
app or by executing the intent


827
00:25:41,076 --> 00:25:44,256
in the background.


828
00:25:44,326 --> 00:25:45,496
You'll want to update your


829
00:25:45,496 --> 00:25:47,106
relevant shortcuts periodically.


830
00:25:47,696 --> 00:25:49,026
If the user launches your app,


831
00:25:49,766 --> 00:25:51,066
for example, by tapping one of


832
00:25:51,066 --> 00:25:52,446
your shortcuts on the Siri face,


833
00:25:53,086 --> 00:25:54,396
you'll have the run time to


834
00:25:54,396 --> 00:25:55,426
accomplish the update.


835
00:25:56,456 --> 00:25:57,606
But shortcuts that provide


836
00:25:57,606 --> 00:25:59,146
glanceable data are useful to


837
00:25:59,146 --> 00:26:00,446
the user without launching the


838
00:26:00,446 --> 00:26:00,566
app.


839
00:26:01,216 --> 00:26:02,706
Think about the carrot whether


840
00:26:02,706 --> 00:26:03,986
example from a couple slides


841
00:26:03,986 --> 00:26:05,496
ago, were you could tell that it


842
00:26:05,496 --> 00:26:07,666
was 72 degrees and cloudy just


843
00:26:07,666 --> 00:26:08,676
by looking at the platter.


844
00:26:08,916 --> 00:26:09,626
You didn't have to tap.


845
00:26:11,246 --> 00:26:13,586
To help with this case, we added


846
00:26:13,586 --> 00:26:15,366
a background refresh task called


847
00:26:15,366 --> 00:26:16,666
WKRelevantShortcut


848
00:26:16,736 --> 00:26:18,056
RefreshBackgroundTask.


849
00:26:19,176 --> 00:26:20,986
When you get this task before


850
00:26:21,076 --> 00:26:22,836
sure to check if your data needs


851
00:26:22,836 --> 00:26:24,956
to be updated and then supply


852
00:26:24,956 --> 00:26:25,956
new relevant shortcuts.


853
00:26:27,416 --> 00:26:29,486
We factor in user engagement


854
00:26:29,486 --> 00:26:30,986
when scheduling these background


855
00:26:31,036 --> 00:26:34,256
tasks and glances count as


856
00:26:34,256 --> 00:26:34,736
engagement.


857
00:26:38,456 --> 00:26:40,086
If you have an intent-based


858
00:26:40,086 --> 00:26:41,696
shortcut, your intent might


859
00:26:41,696 --> 00:26:43,676
update applications when it


860
00:26:43,676 --> 00:26:45,066
executes in the background.


861
00:26:46,556 --> 00:26:48,516
Since the intents extension is


862
00:26:48,646 --> 00:26:50,026
in a separate process from your


863
00:26:50,026 --> 00:26:51,906
Watch Kit extension, we're now


864
00:26:51,906 --> 00:26:53,346
supplying a new refresh


865
00:26:53,376 --> 00:26:54,756
background task called


866
00:26:54,816 --> 00:26:56,616
WKIntentDidRun


867
00:26:56,696 --> 00:26:58,856
RefreshBackgroundTask to let


868
00:26:58,856 --> 00:27:01,386
your main extension run and


869
00:27:01,476 --> 00:27:02,886
update any snapshots or


870
00:27:02,886 --> 00:27:04,466
complications that may be stale


871
00:27:04,466 --> 00:27:06,086
after your intent executed.


872
00:27:06,586 --> 00:27:10,356
Now that you have your shortcuts


873
00:27:10,356 --> 00:27:11,606
available at the turn of the


874
00:27:11,606 --> 00:27:14,436
wrist and a tap, you should know


875
00:27:14,436 --> 00:27:15,816
that users can set up shortcut


876
00:27:15,816 --> 00:27:17,226
phrases on the phone and use


877
00:27:17,226 --> 00:27:18,546
them to execute your shortcuts


878
00:27:18,546 --> 00:27:19,236
at any time.


879
00:27:20,496 --> 00:27:21,666
These shortcut phrases are


880
00:27:21,666 --> 00:27:22,856
synced to Apple Watch.


881
00:27:22,856 --> 00:27:25,286
So, you can use raise to speak


882
00:27:25,466 --> 00:27:27,936
to say, for example, mint me up


883
00:27:28,896 --> 00:27:30,356
and kick of an order of a mint


884
00:27:30,356 --> 00:27:31,626
mojito from Phil's Coffee.


885
00:27:33,206 --> 00:27:34,556
Your shortcut platter does not


886
00:27:34,556 --> 00:27:35,906
need to be showing on the Siri


887
00:27:35,906 --> 00:27:37,756
Watch face for your shortcuts to


888
00:27:37,756 --> 00:27:39,126
be invoked with a shortcut


889
00:27:39,126 --> 00:27:39,446
phrase.


890
00:27:41,676 --> 00:27:44,176
So, in summary, use Siri


891
00:27:44,176 --> 00:27:45,556
shortcuts to provide relevant


892
00:27:45,556 --> 00:27:46,836
information and quick


893
00:27:46,836 --> 00:27:48,246
interactions to your users.


894
00:27:49,236 --> 00:27:51,056
Create relevant shortcuts on


895
00:27:51,056 --> 00:27:53,376
both iPhone and Apple Watch and


896
00:27:53,426 --> 00:27:54,576
add them to the shortcut store


897
00:27:54,576 --> 00:27:55,796
so they can be considered for


898
00:27:55,796 --> 00:27:56,776
the Siri Watch face.


899
00:27:57,646 --> 00:27:59,536
And finally, your users will


900
00:27:59,536 --> 00:28:01,146
have the best experience with a


901
00:28:01,146 --> 00:28:03,016
WatchOS app where they'll be


902
00:28:03,016 --> 00:28:04,176
able to do more with your


903
00:28:04,176 --> 00:28:05,716
shortcuts directly on the Watch.


904
00:28:07,536 --> 00:28:10,466
For more on Siri shortcuts, I


905
00:28:10,896 --> 00:28:11,846
recommend checking out one of


906
00:28:11,846 --> 00:28:13,506
these sessions or labs,


907
00:28:14,356 --> 00:28:16,336
especially the one about Siri


908
00:28:16,336 --> 00:28:18,016
shortcuts on the Siri Watch


909
00:28:18,016 --> 00:28:19,286
face, which will go into much


910
00:28:19,286 --> 00:28:20,696
more detail about the APIs I


911
00:28:20,696 --> 00:28:24,916
covered today.


912
00:28:25,076 --> 00:28:26,396
So, we covered a lot of ground


913
00:28:26,396 --> 00:28:26,736
today.


914
00:28:27,636 --> 00:28:28,566
Here's what we talked about.


915
00:28:29,336 --> 00:28:30,206
We want you to make your


916
00:28:30,206 --> 00:28:31,946
notifications more engaging and


917
00:28:32,096 --> 00:28:34,256
actionable by creating dynamic


918
00:28:34,316 --> 00:28:36,626
interactive interfaces for your


919
00:28:36,626 --> 00:28:37,366
notifications.


920
00:28:38,596 --> 00:28:40,436
You can now bring audio into the


921
00:28:40,436 --> 00:28:42,396
background with AV foundation


922
00:28:42,396 --> 00:28:44,656
APIs, media remote commands and


923
00:28:44,736 --> 00:28:46,106
access to now playing info.


924
00:28:47,466 --> 00:28:48,746
You can make your fitness apps


925
00:28:48,746 --> 00:28:50,256
more robust and reliable with


926
00:28:50,256 --> 00:28:51,576
the new workout builder API.


927
00:28:52,966 --> 00:28:54,506
And you can provide value on the


928
00:28:54,506 --> 00:28:56,306
Siri Watch face by creating


929
00:28:56,306 --> 00:28:57,276
relevant shortcuts.


930
00:28:57,996 --> 00:29:01,556
If you have any questions about


931
00:29:01,556 --> 00:29:03,426
what you've heard today what you


932
00:29:03,426 --> 00:29:05,526
built for Watch OS so far, or


933
00:29:05,526 --> 00:29:06,706
what you're going to build next


934
00:29:07,196 --> 00:29:08,246
come visit us in the labs.


935
00:29:08,726 --> 00:29:09,836
We'd love to see what you're


936
00:29:09,836 --> 00:29:10,376
working on.


937
00:29:11,056 --> 00:29:12,666
Thank you for coming and have a


938
00:29:12,666 --> 00:29:13,826
great WWDC.


939
00:29:14,516 --> 00:29:17,500
[ Applause ]

