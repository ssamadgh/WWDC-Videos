1
00:00:07,516 --> 00:00:19,500
[ Music ]


2
00:00:23,876 --> 00:00:24,956
>> Okay.


3
00:00:25,056 --> 00:00:27,000
Hello.


4
00:00:30,046 --> 00:00:30,356
Hello.


5
00:00:32,516 --> 00:00:40,566
[ Foreign Language Spoken ]


6
00:00:41,066 --> 00:00:44,806
So hello and welcome
everyone to WWDC.


7
00:00:44,806 --> 00:00:46,276
Looks like it's your first
session this morning.


8
00:00:46,406 --> 00:00:49,236
If you didn't understand
what I said at the beginning


9
00:00:49,326 --> 00:00:51,296
of the talk, you're
at the right talk.


10
00:00:52,116 --> 00:00:56,196
So let's talk a little bit
about internationalization.


11
00:00:56,496 --> 00:00:58,816
So as you might know,


12
00:00:59,526 --> 00:01:03,576
Apple ships its products
all over the world.


13
00:01:03,636 --> 00:01:07,696
And two-thirds of Apple's
users are outside the U.S.


14
00:01:08,636 --> 00:01:11,146
Which is why it's really
important to make sure


15
00:01:11,146 --> 00:01:13,696
that the linguistic experience
is right in your apps.


16
00:01:14,246 --> 00:01:17,386
So we have users all over
the place from San Francisco


17
00:01:17,386 --> 00:01:20,266
to Milan and Dubai and from
New Delhi to Hong Kong.


18
00:01:20,696 --> 00:01:24,986
And of course these
users are most likely


19
00:01:24,986 --> 00:01:27,656
to be using your
apps and Apple's apps


20
00:01:28,086 --> 00:01:29,326
in their native languages.


21
00:01:31,616 --> 00:01:34,466
They're also likely
to be using these apps


22
00:01:34,466 --> 00:01:36,096
in languages you didn't expect


23
00:01:36,096 --> 00:01:37,486
that aren't related
to that region.


24
00:01:37,486 --> 00:01:40,466
For example, English, you
might be surprised is a fairly


25
00:01:40,466 --> 00:01:41,256
global language.


26
00:01:42,736 --> 00:01:48,246
So today I'd like to talk
to you about what's new,


27
00:01:48,416 --> 00:01:51,396
what we've been up to for
the last year in the space


28
00:01:51,396 --> 00:01:52,426
of internationalization.


29
00:01:53,816 --> 00:01:57,016
Some fundamentals about getting
started with localization


30
00:01:57,936 --> 00:02:00,866
and internationalizing your app.


31
00:02:01,436 --> 00:02:05,106
Then some quick fixes that
you can make in your code


32
00:02:05,106 --> 00:02:07,496
to make it a great app
for a worldwide audience.


33
00:02:08,696 --> 00:02:12,096
And lastly, some things to
keep in mind from a design


34
00:02:12,606 --> 00:02:17,116
and mentality standpoint when
you go about making your app.


35
00:02:18,136 --> 00:02:19,416
So let's get started
with what's new.


36
00:02:21,356 --> 00:02:25,596
I'm really excited to talk
about the multilingual keyboards


37
00:02:25,596 --> 00:02:27,706
that we've added in iOS 10.


38
00:02:28,776 --> 00:02:31,416
Now if you look around you,
just to your left or right,


39
00:02:31,746 --> 00:02:35,086
you're probably sitting
next to or are a person


40
00:02:35,086 --> 00:02:36,476
who speaks more than
one language.


41
00:02:37,116 --> 00:02:39,946
The U.S. is an extremely
multilingual place


42
00:02:39,946 --> 00:02:41,666
and California especially so.


43
00:02:42,706 --> 00:02:44,766
And with iOS 10 we embraced this


44
00:02:44,766 --> 00:02:47,116
by offering you multilingual
keyboards.


45
00:02:47,386 --> 00:02:51,976
So you can choose from a mix
of any of the two languages.


46
00:02:52,696 --> 00:02:56,416
Or any two of the languages here
on screen, and you can type them


47
00:02:56,416 --> 00:02:58,896
on the same layout without
having to switch the globe key


48
00:02:59,056 --> 00:03:01,806
and you'll get autocorrections
and predictions


49
00:03:01,806 --> 00:03:02,926
for both those languages.


50
00:03:06,776 --> 00:03:09,546
Another enhancement we've
made is the addition


51
00:03:09,546 --> 00:03:11,126
of Latin American Spanish.


52
00:03:11,716 --> 00:03:15,176
And this comes to iOS,
watchOS, and tvOS.


53
00:03:15,676 --> 00:03:16,916
And this is the first time


54
00:03:17,176 --> 00:03:21,386
that your app might
encounter a language variant


55
00:03:21,636 --> 00:03:25,596
that is not for specific
country.


56
00:03:25,596 --> 00:03:27,546
And I'll talk about
how that's important


57
00:03:27,546 --> 00:03:30,986
at the code level in a bit.


58
00:03:31,186 --> 00:03:34,316
Another great enhancement is
the new measurement formatter


59
00:03:34,516 --> 00:03:36,326
that is added in foundation.


60
00:03:36,826 --> 00:03:40,266
And this will take care of
unit conversions in a language


61
00:03:40,266 --> 00:03:43,366
and region aware manner
for you all under the hood,


62
00:03:43,786 --> 00:03:46,126
and it already supports
more than 20 different units


63
00:03:46,526 --> 00:03:51,066
like temperature, energy,
pressure, you name it.


64
00:03:51,436 --> 00:03:55,906
Now, I won't be going into
depth about this here,


65
00:03:55,906 --> 00:03:59,356
but there's a whole session
dedicated to this on Friday.


66
00:03:59,356 --> 00:04:00,946
So please check that out.


67
00:04:02,916 --> 00:04:06,896
We've also localized the
keyboard number pads this year.


68
00:04:07,276 --> 00:04:10,976
And so when you request the
number pad keyboard type,


69
00:04:11,076 --> 00:04:13,166
you're automatically
going to get a keyboard


70
00:04:13,166 --> 00:04:14,936
that supports different
numbering systems,


71
00:04:15,336 --> 00:04:16,976
such as those used
in Arabic and Hindi.


72
00:04:17,476 --> 00:04:22,256
And when you're in this state,
you're going to see a 123 key


73
00:04:22,256 --> 00:04:24,506
in the bottom left of the
keyboard to let you switch


74
00:04:24,506 --> 00:04:26,036
between these different
numbering systems.


75
00:04:26,306 --> 00:04:30,856
Now in some cases,
you might want


76
00:04:30,856 --> 00:04:35,136
to specify ASCII capable number
pad instead when you're sure


77
00:04:35,366 --> 00:04:37,976
that the input that
you have needs


78
00:04:37,976 --> 00:04:39,606
to be restricted
to ASCII digits.


79
00:04:39,956 --> 00:04:44,086
Some examples of this are credit
card numbers and IP addresses.


80
00:04:44,116 --> 00:04:46,386
They're edge cases, but things
that you should be aware of.


81
00:04:47,036 --> 00:04:52,716
One of the huge new features


82
00:04:52,826 --> 00:04:57,476
in macOS Sierra is native
right-to-left support


83
00:04:57,476 --> 00:04:59,726
for languages like
Arabic and Hebrew.


84
00:05:00,036 --> 00:05:01,646
And macOS has been redesigned


85
00:05:01,776 --> 00:05:03,226
with right-to-left
languages in mind.


86
00:05:03,496 --> 00:05:09,316
And of course, macOS joins our
existing family of products


87
00:05:09,316 --> 00:05:10,926
like iOS and watchOS


88
00:05:10,926 --> 00:05:12,856
which already support
right-to-left


89
00:05:12,856 --> 00:05:13,666
languages natively.


90
00:05:15,126 --> 00:05:18,156
Again, this is a huge topic, and
I won't go into this in detail.


91
00:05:18,566 --> 00:05:20,286
And again, there's
a dedicated talk,


92
00:05:20,346 --> 00:05:24,346
What's New in International User
Interfaces on Friday at 9 a.m.


93
00:05:24,346 --> 00:05:26,946
that you should definitely
check out.


94
00:05:27,486 --> 00:05:30,636
So let's get started with
some of the fundamentals


95
00:05:31,446 --> 00:05:33,666
that you need to know
about internationalization.


96
00:05:34,176 --> 00:05:38,726
Let's take a look at an app that
comes with iOS, the Clock app.


97
00:05:38,906 --> 00:05:39,706
It's been re-themed,


98
00:05:39,706 --> 00:05:42,496
but probably still
looks familiar to you.


99
00:05:42,846 --> 00:05:45,436
So what are the various
aspects that you would need


100
00:05:45,486 --> 00:05:47,776
to internationalize here
for this app to work


101
00:05:47,776 --> 00:05:49,036
in different languages
and countries?


102
00:05:51,126 --> 00:05:53,876
First of all, you need
to localize the strings.


103
00:05:53,876 --> 00:05:59,576
So this is basically any button
or tab or view that has a string


104
00:05:59,576 --> 00:06:01,646
in it, you need to make
sure that it's translated


105
00:06:01,646 --> 00:06:03,656
into all the different languages
you're going to be supporting.


106
00:06:04,166 --> 00:06:08,646
Then there's another
category of string that needs


107
00:06:08,646 --> 00:06:11,956
to be localized but it
is formatted content


108
00:06:11,956 --> 00:06:15,806
and so you should use
formatters to achieve that.


109
00:06:16,096 --> 00:06:17,456
And this will save
you a lot of work.


110
00:06:18,036 --> 00:06:22,926
And lastly, you need to
internationalize the layout


111
00:06:23,186 --> 00:06:25,586
so that it will work well
for right-to-left languages.


112
00:06:26,736 --> 00:06:29,526
And for languages that have
longer or shorter translations


113
00:06:29,526 --> 00:06:31,346
than the language
you're starting with.


114
00:06:32,016 --> 00:06:36,036
So if we do all this right,
then we take this English app


115
00:06:36,536 --> 00:06:38,266
and we translate it
into a Chinese app,


116
00:06:38,266 --> 00:06:39,626
and it looks fantastic.


117
00:06:40,346 --> 00:06:42,656
Notice how in Chinese the a.m.


118
00:06:42,656 --> 00:06:45,616
/p.m. marker goes before
the numbers instead of after


119
00:06:45,616 --> 00:06:46,546
like it does in English.


120
00:06:48,006 --> 00:06:49,416
It'll also work well


121
00:06:49,416 --> 00:06:51,406
for right-to-left
languages like Arabic.


122
00:06:51,606 --> 00:06:52,716
Notice how the layout


123
00:06:52,716 --> 00:06:54,826
of the entire app is
flowing from right-to-left.


124
00:06:55,756 --> 00:07:00,526
And in this case, see how
Arabic is using the Arabic-Indic


125
00:07:00,526 --> 00:07:02,996
numbers which are different
from those used in English.


126
00:07:03,196 --> 00:07:05,316
Again, if you use formatters,
you get this for free.


127
00:07:06,246 --> 00:07:11,306
So those are some fundamentals
for the development side.


128
00:07:11,306 --> 00:07:12,956
Let's take a look
at the fundamentals


129
00:07:12,956 --> 00:07:14,186
from the user side as well.


130
00:07:14,186 --> 00:07:18,216
What does a user do when they
get a brand new Apple device


131
00:07:18,216 --> 00:07:19,206
like an iPhone?


132
00:07:20,466 --> 00:07:22,616
Well, every Apple
device that you open


133
00:07:22,616 --> 00:07:25,146
up will first ask you
to choose a language.


134
00:07:26,326 --> 00:07:29,246
And what's going on
under the covers is


135
00:07:29,246 --> 00:07:32,946
that every language has a
code associated with it,


136
00:07:32,996 --> 00:07:36,086
and of course, every region has
a code associated with it also.


137
00:07:36,736 --> 00:07:40,546
So let's say a user chooses
Spanish, United States.


138
00:07:41,086 --> 00:07:43,946
What that becomes at the end


139
00:07:43,946 --> 00:07:49,066
of the day is a language
code like es-US.


140
00:07:49,206 --> 00:07:50,386
What you may not know is


141
00:07:50,386 --> 00:07:53,296
that language codes are
part of hierarchies.


142
00:07:53,676 --> 00:07:56,916
So for example, Spanish,
United States actually inherits


143
00:07:56,916 --> 00:07:58,296
from Latin American Spanish


144
00:07:58,296 --> 00:08:00,106
which then inherits
from base Spanish.


145
00:08:00,906 --> 00:08:04,186
This is really important
because not every app is going


146
00:08:04,186 --> 00:08:07,606
to be localized into
Spanish, United States.


147
00:08:07,696 --> 00:08:10,666
So we want to know, okay,
what is the next best language


148
00:08:10,666 --> 00:08:11,846
that the user would prefer


149
00:08:11,846 --> 00:08:14,696
if we don't have their most
preferred language available


150
00:08:14,786 --> 00:08:17,826
on the system.


151
00:08:17,956 --> 00:08:21,856
Also, this hierarchy is not just
for Spanish but even languages


152
00:08:21,856 --> 00:08:23,356
like English have a hierarchy.


153
00:08:23,356 --> 00:08:27,346
For example, Indian
English has spelling systems


154
00:08:27,346 --> 00:08:30,616
that are more close
to British English


155
00:08:30,616 --> 00:08:33,916
than to American English, and
so it is part of the hierarchy


156
00:08:33,916 --> 00:08:36,256
in which it inherits
from British English.


157
00:08:36,966 --> 00:08:39,736
And English and Spanish are
far from the only two languages


158
00:08:39,736 --> 00:08:41,086
that have such a hierarchy.


159
00:08:41,556 --> 00:08:44,436
We also have other languages
like Chinese, French,


160
00:08:44,496 --> 00:08:47,076
and Portuguese that have
similar hierarchies.


161
00:08:47,316 --> 00:08:50,036
So I hope you all are taking
notes on this, you know,


162
00:08:50,076 --> 00:08:52,296
on these aspects because
no, of course not.


163
00:08:52,836 --> 00:08:55,486
The reason I'm mentioning this
at all is because we're going


164
00:08:55,486 --> 00:08:57,196
to help you solve this
problem, and you don't need


165
00:08:57,196 --> 00:08:58,346
to know anything about this.


166
00:08:58,786 --> 00:09:00,116
So I'm going to show
you how to do


167
00:09:00,116 --> 00:09:02,786
that in the next
section with quick fixes.


168
00:09:04,326 --> 00:09:06,596
So what's the first
thing we need to do?


169
00:09:06,596 --> 00:09:07,906
We need to localize the strings.


170
00:09:08,416 --> 00:09:09,776
Now there is a little
bit of setup.


171
00:09:10,076 --> 00:09:10,706
It's simple.


172
00:09:10,896 --> 00:09:14,856
But there's some setup
involved, and I won't be talking


173
00:09:14,856 --> 00:09:17,106
about that in detail
because there's a whole --


174
00:09:17,706 --> 00:09:20,176
there's a lot of documentation,
and there's another talk


175
00:09:20,176 --> 00:09:22,376
that goes into detail about
how to set up your app.


176
00:09:23,036 --> 00:09:25,976
So let's assume that you've got
your setup for localization,


177
00:09:25,976 --> 00:09:29,246
so you've got some
localized strings in your app.


178
00:09:30,306 --> 00:09:32,276
If you're using storyboards


179
00:09:32,556 --> 00:09:35,006
with Base Internationalization,
you're done.


180
00:09:35,586 --> 00:09:36,746
There's nothing you need to do.


181
00:09:36,746 --> 00:09:37,446
You launch your app.


182
00:09:37,506 --> 00:09:38,346
The strings get loaded.


183
00:09:38,916 --> 00:09:39,506
You're golden.


184
00:09:41,856 --> 00:09:46,056
If you are creating or loading
strings in code, then you need


185
00:09:46,056 --> 00:09:47,396
to call NSLocalizedString.


186
00:09:47,926 --> 00:09:51,786
NSLocalizedString will use the
fantastic logic that I mentioned


187
00:09:51,786 --> 00:09:52,636
with all the fallback,


188
00:09:53,026 --> 00:09:55,146
and it will load the most
appropriate string for you.


189
00:09:55,576 --> 00:09:58,156
Now, note that it's
important to provide a comment


190
00:09:58,156 --> 00:10:00,616
to your translator because
oftentimes words are


191
00:10:00,616 --> 00:10:03,716
distinguished by which
context they're in


192
00:10:03,716 --> 00:10:05,746
and the comment helps
clarify that.


193
00:10:06,366 --> 00:10:10,766
Let's move on to slightly
more complex scenario.


194
00:10:10,796 --> 00:10:13,046
Let's say you're getting
strings from a remote service


195
00:10:13,316 --> 00:10:16,156
like a server or
another process.


196
00:10:16,456 --> 00:10:19,216
Well, in that case you
probably want to let the server


197
00:10:19,216 --> 00:10:20,476
or the other process know,


198
00:10:20,476 --> 00:10:22,876
hey this is the language
my app is launched in,


199
00:10:22,946 --> 00:10:24,786
please give me strings
that match this.


200
00:10:25,186 --> 00:10:28,756
And in order to do that, you
can call preferredLocalizations


201
00:10:28,826 --> 00:10:30,616
on the Bundle that
you're launched from


202
00:10:30,946 --> 00:10:32,856
and get the first
language and give


203
00:10:32,856 --> 00:10:34,626
that to your remote service.


204
00:10:37,996 --> 00:10:41,726
If you have an even
more involved setup


205
00:10:41,726 --> 00:10:44,736
and for some reason you have
a list of available languages,


206
00:10:44,736 --> 00:10:47,596
say, on the server that
don't match exactly the list


207
00:10:47,596 --> 00:10:48,906
of languages you
have on the client.


208
00:10:48,906 --> 00:10:51,146
Let's say you have a
larger set on the server,


209
00:10:51,436 --> 00:10:56,136
then you can call the class
method preferredLocalizations


210
00:10:56,436 --> 00:10:58,106
and give it the available
set that you have.


211
00:10:58,106 --> 00:11:00,156
And again, it will match
you to the right language.


212
00:11:01,716 --> 00:11:06,656
So I mentioned this Bundle's
language matching logic multiple


213
00:11:06,656 --> 00:11:08,246
times during the
last few slides.


214
00:11:08,526 --> 00:11:09,646
So what is all this about?


215
00:11:09,646 --> 00:11:11,536
And what is Bundle doing
for you under the hood?


216
00:11:12,556 --> 00:11:16,386
So what Bundle does for you is
that it figures out things like,


217
00:11:16,456 --> 00:11:21,666
okay user prefers English
U.S. We don't have an English


218
00:11:21,666 --> 00:11:23,446
U.S. localization.


219
00:11:23,446 --> 00:11:24,356
We do have an English.


220
00:11:24,466 --> 00:11:26,916
So okay, in this case it
will give you English.


221
00:11:27,206 --> 00:11:29,666
It figures out things like
you want Indian English,


222
00:11:29,706 --> 00:11:33,566
but we have British but not
Indian, we'll give you that.


223
00:11:33,936 --> 00:11:37,206
And again, with the Spanish
Latin America example,


224
00:11:37,506 --> 00:11:40,996
if you say I prefer Mexican
Spanish, it will figure


225
00:11:40,996 --> 00:11:43,326
out that oh the best
match for you


226
00:11:43,326 --> 00:11:45,846
in the list shown here is
Latin American Spanish.


227
00:11:46,276 --> 00:11:49,216
And similarly, for Chinese
and many other languages.


228
00:11:49,216 --> 00:11:52,216
This is a lot of
complicated locale aware logic


229
00:11:52,216 --> 00:11:55,076
that you do not want to be
implementing in your apps.


230
00:11:55,136 --> 00:11:57,086
And definitely if you have
code that does something


231
00:11:57,086 --> 00:12:00,676
like take the language
identifier and split it


232
00:12:00,676 --> 00:12:02,796
on hyphens or something like
that, please go and delete


233
00:12:02,796 --> 00:12:04,826
that code because you
should not be doing that.


234
00:12:06,976 --> 00:12:10,466
So now you've localized all your
strings and used the right APIs.


235
00:12:11,156 --> 00:12:12,046
You want to double check


236
00:12:12,046 --> 00:12:14,446
that everything you have
done is actually localized.


237
00:12:14,746 --> 00:12:18,256
To do that, you can use the
new static analyzer in Xcode 8,


238
00:12:18,536 --> 00:12:21,576
which will actually find
any issues that you have


239
00:12:21,616 --> 00:12:22,606
with localizability,


240
00:12:22,606 --> 00:12:25,096
where you're feeding
non-localized strings


241
00:12:25,196 --> 00:12:25,726
into the UI.


242
00:12:25,936 --> 00:12:30,946
And that's all there is to
localized strings, really.


243
00:12:31,076 --> 00:12:32,216
Next let's talk about
formatters.


244
00:12:32,966 --> 00:12:37,326
This is a common kind of
app that you see these days


245
00:12:37,326 --> 00:12:39,406
with all the delivery services.


246
00:12:39,806 --> 00:12:43,976
And this, however, is not a good
thing that you're seeing here.


247
00:12:44,326 --> 00:12:48,736
So it says AM9:41, which to an
English user will definitely


248
00:12:48,736 --> 00:12:49,746
look like nonsense.


249
00:12:50,186 --> 00:12:54,666
But believe me, I've
seen this in a real app.


250
00:12:54,666 --> 00:12:57,456
And similarly, you might see
something that is the opposite


251
00:12:57,456 --> 00:12:59,646
in Chinese where
it puts the a.m.


252
00:12:59,646 --> 00:13:01,196
/p.m. marker after the numbers,


253
00:13:01,196 --> 00:13:02,996
which is completely
wrong for Chinese.


254
00:13:03,746 --> 00:13:06,986
So how do we avoid
bugs like these?


255
00:13:09,116 --> 00:13:13,566
The problem is actually
that we're using this method


256
00:13:13,566 --> 00:13:17,136
which is formatter.dateFormat
setting a fixed format on it.


257
00:13:17,656 --> 00:13:19,266
It seems like the
right thing to do.


258
00:13:19,696 --> 00:13:21,256
It looks pretty nice in code,


259
00:13:21,646 --> 00:13:23,246
but it's actually
the wrong approach.


260
00:13:24,406 --> 00:13:27,156
And although it yields the
right result when you try it


261
00:13:27,156 --> 00:13:30,656
out for English, so it'll give
you 9:41 a.m. you try the same


262
00:13:30,656 --> 00:13:33,016
thing out in Chinese, and it
gives you the wrong result.


263
00:13:33,106 --> 00:13:36,466
Why? Because it's applying
a fixed format to no matter


264
00:13:36,466 --> 00:13:38,776
which language you're
running in.


265
00:13:40,076 --> 00:13:41,626
The correct approach for this is


266
00:13:41,626 --> 00:13:45,536
to just use the predefined short
style on the date formatter.


267
00:13:45,596 --> 00:13:47,916
And it's going to give you
the right result for English,


268
00:13:48,966 --> 00:13:51,696
for Chinese, and for any other
language your app might be


269
00:13:51,696 --> 00:13:52,286
localized in.


270
00:13:53,326 --> 00:13:55,696
And of course, there
are more styles.


271
00:13:55,846 --> 00:13:58,406
So we have the short style
that I just showed you.


272
00:13:58,746 --> 00:14:00,996
You can also get a
slightly longer style,


273
00:14:00,996 --> 00:14:01,836
which has the seconds.


274
00:14:01,956 --> 00:14:04,176
You can have a style
which has the time zone


275
00:14:04,636 --> 00:14:05,826
or the full time zone name.


276
00:14:05,946 --> 00:14:08,056
There are variety of different
styles for different needs.


277
00:14:08,706 --> 00:14:11,476
And of course, not
just for times.


278
00:14:11,706 --> 00:14:14,246
For dates, also, we
have the whole range


279
00:14:14,246 --> 00:14:16,226
of styles going from
short to long.


280
00:14:17,396 --> 00:14:20,276
Now you might come back to me
and say, "okay, sure but none


281
00:14:20,276 --> 00:14:21,976
of those styles is
what my designer wants.


282
00:14:21,976 --> 00:14:24,796
They want, you know,
just the full year


283
00:14:24,796 --> 00:14:25,936
or just this or just that."


284
00:14:26,406 --> 00:14:26,906
That's fine.


285
00:14:27,346 --> 00:14:30,106
So you can use a format.


286
00:14:30,676 --> 00:14:32,756
The important thing is to use it


287
00:14:32,886 --> 00:14:36,886
with the setLocalizedDate
FormatFrom Template method,


288
00:14:37,146 --> 00:14:41,566
which will make sure that it
takes your format, interprets it


289
00:14:41,626 --> 00:14:43,356
for the current language
in question


290
00:14:43,596 --> 00:14:46,236
and gives you the
correct localized format


291
00:14:46,236 --> 00:14:47,196
for that language.


292
00:14:49,756 --> 00:14:53,946
There are also two classes
that you might not have used.


293
00:14:54,166 --> 00:14:57,226
They're fairly new, although not
new this year, date components,


294
00:14:57,226 --> 00:15:00,106
which will let you format, say,


295
00:15:00,326 --> 00:15:02,486
a duration like 4
hours and 25 minutes.


296
00:15:03,536 --> 00:15:07,786
Or a date interval like
the duration of this talk,


297
00:15:07,956 --> 00:15:11,886
9 to 9:40 a.m. So the
advantage to these, again,


298
00:15:11,936 --> 00:15:14,026
is that if you use
these classes,


299
00:15:14,466 --> 00:15:17,066
all the localization is going
to get taken care of for you.


300
00:15:17,596 --> 00:15:23,746
Next let's talk about
another kind of data type


301
00:15:23,746 --> 00:15:25,286
that you can format, names.


302
00:15:27,616 --> 00:15:32,236
Now, if this is how you're
going to show the user's name


303
00:15:32,236 --> 00:15:36,166
or their friend's name to
them when they open your app,


304
00:15:36,166 --> 00:15:38,646
they're going to get a really
bad impression of your app.


305
00:15:39,076 --> 00:15:41,346
So let's not do that.


306
00:15:41,996 --> 00:15:46,336
Instead, you should show the
names in the way that is correct


307
00:15:47,416 --> 00:15:49,126
for that given language
and script.


308
00:15:50,466 --> 00:15:51,256
So how do we do that?


309
00:15:52,736 --> 00:15:54,526
It's actually really simple.


310
00:15:56,076 --> 00:15:58,986
You create a
PersonNameComponents object.


311
00:15:59,116 --> 00:16:01,906
Fill it with some name
components, and then just


312
00:16:01,906 --> 00:16:05,206
like any other formatter,
you just ask for the string


313
00:16:05,376 --> 00:16:08,536
from the components for any
given style that you want.


314
00:16:08,536 --> 00:16:11,096
And again, we have a variety
of styles going from long,


315
00:16:11,446 --> 00:16:14,036
which is the full name
all the way to abbreviated


316
00:16:14,036 --> 00:16:15,276
which you can use for initials.


317
00:16:16,696 --> 00:16:20,056
And of course, it supports
multiple languages.


318
00:16:20,586 --> 00:16:26,056
New this year, though,
is name parsing support.


319
00:16:26,426 --> 00:16:30,186
So now you can go from a full
name to a set of components.


320
00:16:31,196 --> 00:16:34,806
And it's as easy as creating a
formatter, giving it a string,


321
00:16:35,256 --> 00:16:36,816
and then looking
at the components.


322
00:16:37,336 --> 00:16:39,186
If it returns nil, it
means it wasn't able


323
00:16:39,186 --> 00:16:42,816
to successfully construct
components out of it.


324
00:16:43,756 --> 00:16:45,206
The really cool thing, though,


325
00:16:45,206 --> 00:16:48,416
is that this is not a
static API that's looking


326
00:16:48,416 --> 00:16:50,286
at some set of static rules.


327
00:16:50,516 --> 00:16:55,026
It's actually a statistical
model so that even if you pass


328
00:16:55,026 --> 00:16:56,716
in the name in the
opposite order,


329
00:16:56,946 --> 00:17:01,666
it knows that in John Appleseed,
John is much more likely


330
00:17:01,666 --> 00:17:04,695
to be the given name and
Appleseed the family name.


331
00:17:04,695 --> 00:17:06,266
And it's still going
to parse it correctly.


332
00:17:06,896 --> 00:17:11,806
And of course, it supports
multiple languages as well.


333
00:17:14,175 --> 00:17:16,616
So there are a lot
of formatters.


334
00:17:17,036 --> 00:17:19,536
I talked about Date


335
00:17:19,906 --> 00:17:23,786
and
PersonNameComponentsFormatters


336
00:17:23,786 --> 00:17:24,425
in detail.


337
00:17:25,195 --> 00:17:29,626
The components and interval
formatters for dates, briefly.


338
00:17:30,046 --> 00:17:32,646
And there are some formatters
I didn't even mention


339
00:17:32,646 --> 00:17:36,026
which are existing formatters
that we have in the system.


340
00:17:37,186 --> 00:17:41,686
And there's the brand new
measurement formatter that's new


341
00:17:41,686 --> 00:17:43,406
in this set of releases.


342
00:17:43,646 --> 00:17:47,436
So be sure to use these
formatters wherever you can


343
00:17:47,436 --> 00:17:49,576
in your code because they
will do the right thing,


344
00:17:49,576 --> 00:17:51,756
and you will also save
localized strings.


345
00:17:53,136 --> 00:17:54,726
Which you shouldn't be
using for these cases.


346
00:17:56,216 --> 00:18:02,396
So that's all about at this
point your whole UI is localized


347
00:18:02,396 --> 00:18:03,116
in terms of strings.


348
00:18:03,316 --> 00:18:05,646
Now let's take a look at
what you need to do in terms


349
00:18:05,646 --> 00:18:07,316
of the layout to make sure


350
00:18:07,316 --> 00:18:10,256
that the UI actually works
well with those strings.


351
00:18:12,086 --> 00:18:16,256
So the key word here
is Auto Layout.


352
00:18:16,616 --> 00:18:20,876
It does what it's intended --
what its name tells you it does,


353
00:18:20,876 --> 00:18:22,646
which is it automatically
lays things out.


354
00:18:23,246 --> 00:18:25,436
And so whether you're
in a left-to-right app,


355
00:18:26,746 --> 00:18:30,706
if you use Auto Layout you
will get automatically a user


356
00:18:30,706 --> 00:18:33,026
interface for a right-to-left
language.


357
00:18:34,196 --> 00:18:38,276
And again, Auto Layout is a big
topic, and I'm not going to go


358
00:18:38,276 --> 00:18:41,386
into detail into how you
should use Auto Layout


359
00:18:41,386 --> 00:18:44,246
because there are sessions
for that both this year


360
00:18:44,246 --> 00:18:48,326
and from previous years that go
into a fair amount of detail.


361
00:18:49,756 --> 00:18:53,166
What I will tell you is that
you should use UIStackView


362
00:18:53,166 --> 00:18:58,706
and NSStackView as much as you
can because these are very easy


363
00:18:58,706 --> 00:19:01,466
to use APIs that leverage
Auto Layout and make sure


364
00:19:01,786 --> 00:19:05,616
that your views will
flip in the right way


365
00:19:05,616 --> 00:19:07,996
for right-to-left languages
and adjust appropriately


366
00:19:07,996 --> 00:19:09,966
when they get long
and shorter strings.


367
00:19:11,056 --> 00:19:14,546
So we will have sample code
for you that shows you how


368
00:19:14,546 --> 00:19:21,196
to implement a version of the
Clock app using Stack Views.


369
00:19:23,046 --> 00:19:25,726
Now one thing that you
might want to keep in mind


370
00:19:25,726 --> 00:19:29,096
for layout is that sometimes
you need to get creative.


371
00:19:29,696 --> 00:19:31,446
Now you see this
screen in English.


372
00:19:31,656 --> 00:19:33,526
Are you sure you don't
want to use an Apple ID?


373
00:19:34,226 --> 00:19:37,846
And you have two options there,
Use Apple ID or Don't Use.


374
00:19:37,846 --> 00:19:40,976
Now in some languages you can
imagine the translations might


375
00:19:41,016 --> 00:19:43,616
be longer than can fit in
two side-by-side buttons.


376
00:19:44,626 --> 00:19:45,756
So what do you do?


377
00:19:46,146 --> 00:19:50,146
Well, in this case, you see
that the whole view switches


378
00:19:50,146 --> 00:19:52,236
to a top-bottom orientation
instead


379
00:19:52,236 --> 00:19:53,586
of a left-right orientation.


380
00:19:54,196 --> 00:19:58,106
And these kind of creative
UI elements are things


381
00:19:58,106 --> 00:20:02,596
that you should keep in mind for
your apps before you ask a --


382
00:20:03,066 --> 00:20:07,726
you ask a translator to
shorten a string to the point


383
00:20:07,726 --> 00:20:10,396
where it might not even be
intelligible in that language.


384
00:20:14,176 --> 00:20:16,286
The next thing is
vertical flexibility.


385
00:20:16,286 --> 00:20:21,076
And a lot of you may not
have realized this before


386
00:20:21,076 --> 00:20:21,906
for your apps.


387
00:20:22,936 --> 00:20:28,136
So we have a lot of scripts
in the OS for languages


388
00:20:28,136 --> 00:20:32,776
like Vietnamese, Thai, Arabic,
and Hindi that go much higher


389
00:20:32,876 --> 00:20:37,026
or lower or both than the basic
Latin alphabet that's used


390
00:20:37,076 --> 00:20:37,936
to write English.


391
00:20:39,336 --> 00:20:43,196
And so what happens
often is we see this bug,


392
00:20:43,526 --> 00:20:46,366
which is that somebody
might set clipsToBounds


393
00:20:46,366 --> 00:20:48,246
to true on the label.


394
00:20:48,746 --> 00:20:52,126
And what that does is it clips
the text often on both side


395
00:20:52,786 --> 00:20:59,156
and besides being very ugly and,
you know, just looking terrible


396
00:20:59,156 --> 00:21:04,336
in that language, you often lose
important semantic information


397
00:21:04,336 --> 00:21:05,756
like a diacritic mark.


398
00:21:06,376 --> 00:21:09,726
In this case the pronunciation
of all of the words


399
00:21:09,726 --> 00:21:13,386
on the right is changing
when you clip them like this.


400
00:21:14,566 --> 00:21:16,716
So to fix this it's
pretty simple.


401
00:21:16,716 --> 00:21:20,106
Don't set clipsToBounds to
true if you have a label.


402
00:21:20,716 --> 00:21:23,316
And that should be enough
to solve this problem.


403
00:21:26,076 --> 00:21:29,706
More interestingly, though,
when you have multi-line labels,


404
00:21:29,836 --> 00:21:32,846
you also need to consider
interline spacing.


405
00:21:33,686 --> 00:21:36,856
So let's take a look here
which has Hindi on the left


406
00:21:36,916 --> 00:21:38,736
and English on the right.


407
00:21:39,896 --> 00:21:41,846
And here it's English
on the left and Hindi


408
00:21:41,846 --> 00:21:43,246
on the right, sorry about that.


409
00:21:43,906 --> 00:21:48,756
But see what happens when
we try to squeeze Hindi


410
00:21:48,756 --> 00:21:51,796
into the same amount of
vertical space as English?


411
00:21:52,506 --> 00:21:55,126
It looks really cramped.


412
00:21:55,126 --> 00:22:00,546
And any Hindi reader will tell
you this is really hard to read,


413
00:22:01,056 --> 00:22:02,536
and it doesn't look nice.


414
00:22:04,026 --> 00:22:05,816
So what you really need to do is


415
00:22:05,846 --> 00:22:08,866
to give each script the
room it needs to breathe


416
00:22:08,866 --> 00:22:12,096
and to look good on screen
and to be easy to read.


417
00:22:12,376 --> 00:22:14,656
The good news is that
this is really easy to do.


418
00:22:15,946 --> 00:22:18,556
Any time you have a
multi-line label, again,


419
00:22:18,696 --> 00:22:21,186
a lot of this is done by default
but you just need to be sure


420
00:22:21,186 --> 00:22:23,416
when you set a custom font
that you do the right thing


421
00:22:23,856 --> 00:22:27,256
that you get a preferred
font using the UI font API.


422
00:22:28,626 --> 00:22:32,936
Now, you might say, okay
I have a custom font


423
00:22:32,936 --> 00:22:34,636
and I can't use this.


424
00:22:34,926 --> 00:22:39,056
Well, there is a solution
for you, and you should check


425
00:22:39,476 --> 00:22:43,446
out the fonts and typography
talk on Wednesday that goes


426
00:22:43,446 --> 00:22:45,776
into more detail about
how you can make sure


427
00:22:45,776 --> 00:22:52,966
that a custom font will
also adhere to dynamic type.


428
00:22:54,156 --> 00:22:58,966
Next, for table views, we
do something really neat,


429
00:22:58,966 --> 00:23:01,716
which is that if you have a
language with a taller script,


430
00:23:02,076 --> 00:23:07,536
we will actually make the table
row height larger than it is


431
00:23:07,586 --> 00:23:09,136
in other languages like English.


432
00:23:09,776 --> 00:23:12,596
Again, this gives the script
the room it needs to breathe,


433
00:23:12,596 --> 00:23:15,936
and it just overall looks more
natural for those languages.


434
00:23:17,196 --> 00:23:20,226
The way you can take
advantage of this code is


435
00:23:20,226 --> 00:23:23,556
by using the standard
UITableViewCell styles.


436
00:23:24,086 --> 00:23:26,976
And now you might say, okay,
sure but I have a custom cell,


437
00:23:26,976 --> 00:23:28,706
you know, it's not
going to work with this.


438
00:23:28,706 --> 00:23:30,776
I mean, I don't just have
a label and you know,


439
00:23:30,776 --> 00:23:32,086
it's not as simple
as you think it is.


440
00:23:32,086 --> 00:23:33,126
And I'll be like, okay sure.


441
00:23:33,696 --> 00:23:37,466
I agree. But what
I found at least


442
00:23:37,466 --> 00:23:42,546
in using UITableViewCell is
that it is highly customizable.


443
00:23:42,856 --> 00:23:45,066
It has a bunch of
overrides that you can use,


444
00:23:45,196 --> 00:23:47,436
usually to get exactly
the appearance you want.


445
00:23:47,686 --> 00:23:51,406
So try that first before you're
implementing a completely


446
00:23:51,976 --> 00:23:53,346
custom UITableViewCell.


447
00:23:56,876 --> 00:24:01,326
So that's mostly what I have
in terms of small code fixes


448
00:24:01,326 --> 00:24:04,516
that will make your app great
for an international audience.


449
00:24:05,046 --> 00:24:07,676
Let's talk about some things
that are more abstract


450
00:24:07,676 --> 00:24:09,166
that are more design based.


451
00:24:10,256 --> 00:24:12,826
And also the mentality
you need to keep in mind


452
00:24:13,396 --> 00:24:15,406
for making great apps.


453
00:24:16,736 --> 00:24:18,856
First of all, it's
the iconography.


454
00:24:19,716 --> 00:24:23,296
Now you know that when you go to
the App Store and you're looking


455
00:24:23,296 --> 00:24:25,166
for an app one of the
first things you're going


456
00:24:25,166 --> 00:24:26,456
to notice is that icon.


457
00:24:27,006 --> 00:24:29,036
And oftentimes, at
least I've done this,


458
00:24:29,036 --> 00:24:31,086
if the icon doesn't look
good I don't buy the app


459
00:24:31,136 --> 00:24:32,596
because that's going to
go on my Home Screen.


460
00:24:32,596 --> 00:24:35,736
And I don't want to have an app
there that doesn't look good.


461
00:24:36,446 --> 00:24:39,546
So icons are really important,
and it's also important


462
00:24:39,546 --> 00:24:42,816
that the icon that
you choose works well


463
00:24:43,186 --> 00:24:45,676
for different languages
and also languages that go


464
00:24:45,676 --> 00:24:48,586
in different layout directions


465
00:24:48,586 --> 00:24:49,976
like left-to-right
or right-to-left.


466
00:24:50,576 --> 00:24:53,346
So photos has a great icon here.


467
00:24:53,346 --> 00:24:58,036
This is a great example of an
icon that doesn't have any words


468
00:24:58,036 --> 00:25:02,056
or numbers that would tie
it to a specific language.


469
00:25:02,646 --> 00:25:04,406
It also doesn't have
a directionality


470
00:25:04,406 --> 00:25:05,916
like left-to-right
or right-to-left.


471
00:25:06,286 --> 00:25:08,966
So it really works well,
you know, in Japanese,


472
00:25:08,966 --> 00:25:10,426
in English, and in Arabic.


473
00:25:11,166 --> 00:25:15,886
Now if you are making a
right-to-left localization,


474
00:25:16,326 --> 00:25:19,566
and you want to make sure
your UI is really good


475
00:25:19,566 --> 00:25:20,706
for right-to-left languages.


476
00:25:21,676 --> 00:25:23,856
You should take a look at some
of the artwork you're using.


477
00:25:24,186 --> 00:25:27,146
And if you are using artwork
that has a directionality to it


478
00:25:27,326 --> 00:25:29,686
that would need to change
for a right-to-left language,


479
00:25:30,046 --> 00:25:33,916
then you would probably need to
flip or create dedicated artwork


480
00:25:33,916 --> 00:25:35,106
for right-to-left languages.


481
00:25:35,466 --> 00:25:38,116
Now here you see an
example of artwork


482
00:25:38,116 --> 00:25:39,976
that you can't just
flip horizontally.


483
00:25:39,976 --> 00:25:42,306
You need to create
dedicated artwork if you're


484
00:25:42,436 --> 00:25:43,656
in a right-to-left language.


485
00:25:44,976 --> 00:25:47,776
But if you do have images
that just need to be flipped,


486
00:25:47,846 --> 00:25:49,796
there is actually API for
that and you don't need


487
00:25:49,796 --> 00:25:50,886
to create separate artwork.


488
00:25:51,826 --> 00:25:54,376
There's more information about
that, again, in the What's New


489
00:25:54,376 --> 00:25:57,246
in International
Interfaces session on Friday.


490
00:25:58,466 --> 00:26:03,056
But the key is asset catalogues.


491
00:26:03,876 --> 00:26:06,866
Another thing that you might
or might not have thought


492
00:26:06,866 --> 00:26:08,476
about is your app's name.


493
00:26:09,776 --> 00:26:12,896
Now, when looking at various
App Stores around the world,


494
00:26:13,166 --> 00:26:16,036
one consistent theme we've
seen that doesn't surprise us


495
00:26:16,036 --> 00:26:19,506
in the least is that users
are more likely to buy apps


496
00:26:19,846 --> 00:26:21,656
that work for them
in their language.


497
00:26:21,936 --> 00:26:24,356
And that applies to
the apps' name as well.


498
00:26:24,916 --> 00:26:27,986
Because if they can -- if they
can understand easily what your


499
00:26:27,986 --> 00:26:31,516
app does by looking at the
one line name and description,


500
00:26:31,826 --> 00:26:33,776
then they're much more likely


501
00:26:34,046 --> 00:26:40,426
to tap inside the
app to take a look.


502
00:26:40,426 --> 00:26:42,966
And of course, the world is --


503
00:26:43,516 --> 00:26:47,046
users all over the world are
more and more multilingual


504
00:26:47,246 --> 00:26:48,866
or at least they're bilingual.


505
00:26:49,426 --> 00:26:52,926
So your app should
not make assumptions


506
00:26:53,016 --> 00:26:58,586
about the UI language and
how it relates to the content


507
00:26:58,786 --> 00:26:59,776
that the user will type.


508
00:27:00,256 --> 00:27:04,766
For example, a very common theme
you will see all over countries


509
00:27:04,806 --> 00:27:08,196
in Asia like India
and Southeast Asia is


510
00:27:08,196 --> 00:27:10,906
that people will run
their phones in English,


511
00:27:11,326 --> 00:27:14,556
but they'll have content
in their local languages


512
00:27:14,556 --> 00:27:15,786
like Hindi in this case.


513
00:27:16,806 --> 00:27:20,996
So when you have an app and you
run in English, don't assume


514
00:27:20,996 --> 00:27:22,706
that the user's going
to type English text,


515
00:27:22,786 --> 00:27:25,896
especially make sure to
test your app with Chinese


516
00:27:25,896 --> 00:27:27,416
and Japanese keyboards
to make sure


517
00:27:27,416 --> 00:27:29,036
that the experience works well.


518
00:27:32,916 --> 00:27:37,266
And here's an example that I
wanted to show you of an app


519
00:27:37,726 --> 00:27:40,886
that in our opinion
does a really great job


520
00:27:40,886 --> 00:27:42,186
at the things I just
talked about.


521
00:27:43,616 --> 00:27:44,516
So this is Evernote.


522
00:27:45,286 --> 00:27:47,826
And first of all,
you'll see the app icon.


523
00:27:48,546 --> 00:27:50,466
It doesn't have any words
or symbols or anything


524
00:27:50,466 --> 00:27:53,446
that would associate it
with a single language.


525
00:27:54,596 --> 00:27:55,826
So that's great.


526
00:27:58,036 --> 00:27:59,976
However, they have also gone


527
00:28:00,176 --> 00:28:03,496
and localized their
app name into Chinese.


528
00:28:03,546 --> 00:28:05,536
And this is actually if
you're a Chinese speaker,


529
00:28:05,536 --> 00:28:10,006
you'll see that they have
a great visual pun in there


530
00:28:10,106 --> 00:28:12,066
because the Chinese word


531
00:28:12,066 --> 00:28:15,336
that they've chosen also
contains the character


532
00:28:15,336 --> 00:28:20,616
for elephant, which is their
icons, which is kind of cool.


533
00:28:20,836 --> 00:28:23,336
You'll also notice that they
have localized screenshots.


534
00:28:24,246 --> 00:28:29,366
And there's a lot of attention
to detail in those screenshots.


535
00:28:29,366 --> 00:28:32,016
You'll see, for example, that
in the localized screenshot


536
00:28:32,276 --> 00:28:34,726
in which they're
creating a note,


537
00:28:35,516 --> 00:28:37,586
you actually have the
Chinese keyboard on screen.


538
00:28:37,586 --> 00:28:39,116
So the user is seeing


539
00:28:39,586 --> 00:28:42,336
in the screenshots exactly the
experience that they're going


540
00:28:42,336 --> 00:28:43,756
to get when they
download this app.


541
00:28:43,996 --> 00:28:45,806
This is exactly what
users expect to see.


542
00:28:46,206 --> 00:28:47,416
So take advantage of the fact


543
00:28:47,416 --> 00:28:50,506
that you can upload
localized names, descriptions,


544
00:28:50,506 --> 00:28:54,516
and screenshots to
the App Store.


545
00:28:55,026 --> 00:28:59,156
And lastly, I wanted to talk
about surprise and delight.


546
00:28:59,296 --> 00:29:03,166
What you can do to go above and
beyond to make a great product


547
00:29:03,166 --> 00:29:07,396
for people in the --
using a specific language


548
00:29:07,396 --> 00:29:08,446
or in a specific country.


549
00:29:09,856 --> 00:29:10,946
I'll give a couple of examples.


550
00:29:11,376 --> 00:29:15,786
One is if you have any
kind of predefined content


551
00:29:15,786 --> 00:29:18,966
such as templates and pages.


552
00:29:20,196 --> 00:29:24,576
You could create
different customized content


553
00:29:24,576 --> 00:29:25,616
for different languages.


554
00:29:26,076 --> 00:29:30,316
And so for example, in Pages
you have custom templates


555
00:29:30,316 --> 00:29:32,026
for cards for some languages.


556
00:29:33,966 --> 00:29:37,456
And just one more
example I'll give is


557
00:29:37,496 --> 00:29:40,746
for more advanced feature,
let's say you're supporting --


558
00:29:41,146 --> 00:29:44,266
you're a calendar app, and you
want to have a really great app


559
00:29:44,366 --> 00:29:48,456
for the Middle East and also
for a lot of Asian countries


560
00:29:48,716 --> 00:29:51,806
like China where they
use a lunar calendar.


561
00:29:51,986 --> 00:29:54,146
Well, you could support
the lunar calendar


562
00:29:54,196 --> 00:29:58,236
in your calendar app just like
iOS does and iOS and OS X do


563
00:29:59,006 --> 00:30:02,856
because this is going to
deliver a much richer experience


564
00:30:03,006 --> 00:30:04,006
for those users.


565
00:30:05,156 --> 00:30:07,186
Now what your app
does is really --


566
00:30:07,186 --> 00:30:09,236
depends on what your app does.


567
00:30:09,706 --> 00:30:12,276
And so you need to take a
look at your own app and see


568
00:30:12,276 --> 00:30:16,476
if there's an area where you can
deliver a surprise to the user.


569
00:30:17,676 --> 00:30:21,086
That's really all I
wanted to talk about today.


570
00:30:21,196 --> 00:30:27,326
So in summary, localize
your app.


571
00:30:27,916 --> 00:30:31,346
Use standard system APIs
like Formatter and Bundle.


572
00:30:31,936 --> 00:30:37,596
Make sure that the apps' layout
is flexible and works well


573
00:30:37,596 --> 00:30:39,366
for languages with
shorter translations,


574
00:30:39,706 --> 00:30:44,086
longer translations, which have
normal -- not normal-sized,


575
00:30:44,126 --> 00:30:47,336
English-sized scripts
or taller scripts.


576
00:30:50,576 --> 00:30:53,676
When designing the
iconography for your app,


577
00:30:54,416 --> 00:30:56,826
make sure that it is
a world-ready design


578
00:30:56,826 --> 00:31:03,446
and doesn't tailor to a
specific language too much.


579
00:31:04,206 --> 00:31:08,406
And finally, at the end
localize your app's name,


580
00:31:08,406 --> 00:31:10,436
if appropriate, and screenshots.


581
00:31:11,676 --> 00:31:16,276
Now for more information,
you can follow this link


582
00:31:16,596 --> 00:31:18,626
to get some other useful links


583
00:31:19,156 --> 00:31:21,246
about internationalization
and localization.


584
00:31:21,776 --> 00:31:25,906
There are also some
really cool other talks


585
00:31:25,906 --> 00:31:30,816
that I mentioned
during my presentation.


586
00:31:31,066 --> 00:31:32,306
So for example, there's
What's New


587
00:31:32,306 --> 00:31:33,836
in International
User Interfaces.


588
00:31:34,296 --> 00:31:37,086
And there's also a
What's New in Auto Layout.


589
00:31:37,716 --> 00:31:41,256
One talk that I wanted to call


590
00:31:41,256 --> 00:31:43,896
out specifically is
Inclusive App Design.


591
00:31:44,026 --> 00:31:47,776
It kind of will talk more about
some of the things I mentioned


592
00:31:47,776 --> 00:31:53,226
at the end about how you can
keep an inclusive design in mind


593
00:31:53,566 --> 00:31:56,196
for both internationalization
and for users


594
00:31:56,476 --> 00:31:59,266
that need accessibility support.


595
00:32:00,306 --> 00:32:00,786
And that's all.


596
00:32:01,506 --> 00:32:02,206
Thank you very much.


597
00:32:03,516 --> 00:32:06,500
[ Applause ]

