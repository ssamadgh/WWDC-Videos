1
00:00:07,516 --> 00:00:16,500
[ Music ]


2
00:00:21,186 --> 00:00:22,136
>> Hi, everyone.


3
00:00:23,516 --> 00:00:28,146
[ Applause ]


4
00:00:28,646 --> 00:00:30,106
>> I'm Vicki Murley and I'm the


5
00:00:30,106 --> 00:00:31,306
Engineering Manager for the


6
00:00:31,306 --> 00:00:32,476
MapKit JS Team.


7
00:00:32,695 --> 00:00:34,876
This is Session 212, Introducing


8
00:00:34,876 --> 00:00:36,896
MapKit JS.


9
00:00:37,026 --> 00:00:39,536
So, when iPhone came out more


10
00:00:39,536 --> 00:00:41,136
than ten years ago, it really


11
00:00:41,136 --> 00:00:42,646
changed the game, and it


12
00:00:42,646 --> 00:00:44,666
introduced us all to what we now


13
00:00:44,666 --> 00:00:45,566
kind of know as this app


14
00:00:45,826 --> 00:00:46,706
ecosystem.


15
00:00:46,846 --> 00:00:48,576
And it's funny to think about,


16
00:00:48,576 --> 00:00:50,196
because for so many of us, apps


17
00:00:50,196 --> 00:00:51,866
are such an integral part of our


18
00:00:51,866 --> 00:00:54,016
daily lives, but before there


19
00:00:54,096 --> 00:00:56,296
were apps, there were websites.


20
00:00:57,126 --> 00:00:58,806
If your company was founded


21
00:00:59,076 --> 00:01:00,336
before iPhone, your whole


22
00:01:00,336 --> 00:01:01,576
company may have started as a


23
00:01:01,576 --> 00:01:03,546
website, and even today, if you


24
00:01:03,546 --> 00:01:05,536
have an app, you might be using


25
00:01:05,536 --> 00:01:07,216
a website to reach a larger


26
00:01:07,216 --> 00:01:08,246
audience or even just a


27
00:01:08,246 --> 00:01:09,546
different audience of people.


28
00:01:09,996 --> 00:01:12,326
So, lots of developers out


29
00:01:12,326 --> 00:01:13,616
there, just like you, have a


30
00:01:13,616 --> 00:01:15,506
website and an app.


31
00:01:15,506 --> 00:01:18,776
And the WWDC site is a great


32
00:01:18,776 --> 00:01:19,806
example.


33
00:01:20,156 --> 00:01:21,876
We have this site and there's an


34
00:01:21,876 --> 00:01:23,326
accompanying app, which you're


35
00:01:23,326 --> 00:01:25,236
probably using to find your way


36
00:01:25,236 --> 00:01:26,806
around the conference center, as


37
00:01:26,806 --> 00:01:28,466
you're on the go, here this


38
00:01:28,466 --> 00:01:28,706
week.


39
00:01:29,706 --> 00:01:32,036
So, at Apple, we've been really


40
00:01:32,036 --> 00:01:34,736
lucky that we have been able to


41
00:01:34,736 --> 00:01:36,326
show Apple Maps on our own


42
00:01:36,326 --> 00:01:38,506
websites for a little while now.


43
00:01:38,876 --> 00:01:41,506
This is a page on the WWDC site,


44
00:01:41,506 --> 00:01:42,976
which is showing you other


45
00:01:42,976 --> 00:01:44,436
events around the convention


46
00:01:44,436 --> 00:01:44,946
center.


47
00:01:46,256 --> 00:01:47,796
If you've ever used Find My


48
00:01:47,796 --> 00:01:49,766
iPhone of iCloud.com, you've


49
00:01:49,766 --> 00:01:51,466
seen Apple Maps on a website.


50
00:01:52,696 --> 00:01:54,266
And if you've ever searched for


51
00:01:54,266 --> 00:01:55,896
a retail store, again, an


52
00:01:56,006 --> 00:01:57,616
example of Apple Maps on a


53
00:01:57,616 --> 00:01:58,136
website.


54
00:01:59,616 --> 00:02:00,646
So, most of you out there are


55
00:02:00,646 --> 00:02:02,346
probably used to using MapKit


56
00:02:02,346 --> 00:02:05,166
inside your apps, and today,


57
00:02:05,396 --> 00:02:07,086
we're making MapKit JS available


58
00:02:07,086 --> 00:02:09,946
to you for your websites.


59
00:02:10,515 --> 00:02:14,566
[ Applause ]


60
00:02:15,066 --> 00:02:17,296
So, this week at WWDC, we're


61
00:02:17,296 --> 00:02:18,656
making a MapKit JS Beta


62
00:02:18,746 --> 00:02:20,516
available, and this is the same


63
00:02:20,516 --> 00:02:22,156
library that we have been using


64
00:02:22,156 --> 00:02:23,906
on our production websites.


65
00:02:24,926 --> 00:02:27,016
Every web mapping library out


66
00:02:27,016 --> 00:02:30,616
there, has a free tier of usage.


67
00:02:30,616 --> 00:02:31,976
Like some number of requests


68
00:02:31,976 --> 00:02:33,686
that you get for free, and


69
00:02:33,686 --> 00:02:35,586
MapKit JS Beta is no different.


70
00:02:36,256 --> 00:02:38,126
So, you -- as part of the MapKit


71
00:02:38,126 --> 00:02:40,656
JS Beta, you're getting 250,000


72
00:02:40,976 --> 00:02:45,226
map initializations, and 25,000


73
00:02:45,226 --> 00:02:46,246
service requests.


74
00:02:46,536 --> 00:02:48,796
That includes geocoding, search,


75
00:02:49,086 --> 00:02:50,606
search auto-complete, and


76
00:02:50,606 --> 00:02:51,376
directions.


77
00:02:51,866 --> 00:02:54,106
And often these free usage tiers


78
00:02:54,106 --> 00:02:55,596
are specified over some period


79
00:02:55,596 --> 00:02:58,336
of time, like per year, per


80
00:02:58,336 --> 00:02:59,836
month, per week.


81
00:03:00,186 --> 00:03:01,926
For the MapKit JS Beta, we're


82
00:03:01,926 --> 00:03:03,646
making this amount of free usage


83
00:03:03,646 --> 00:03:05,626
available to you per day.


84
00:03:06,516 --> 00:03:11,266
[ Applause ]


85
00:03:11,766 --> 00:03:12,936
So, that's a good amount.


86
00:03:13,586 --> 00:03:15,386
And -- but if you need more for


87
00:03:15,386 --> 00:03:17,126
your particular use case or your


88
00:03:17,126 --> 00:03:18,996
business, you can contact us.


89
00:03:18,996 --> 00:03:20,116
There's a form online.


90
00:03:20,246 --> 00:03:21,826
Just fill it out and submit it,


91
00:03:21,826 --> 00:03:23,086
and we will receive that


92
00:03:23,086 --> 00:03:23,736
request.


93
00:03:24,256 --> 00:03:27,146
To use MapKit JS, you need a


94
00:03:27,146 --> 00:03:28,816
key, and you can get that by


95
00:03:28,816 --> 00:03:30,086
signing into your developer


96
00:03:30,086 --> 00:03:31,736
account, and go to the


97
00:03:31,736 --> 00:03:33,526
Certificates, ID's, and Profiles


98
00:03:33,526 --> 00:03:34,016
Panel.


99
00:03:34,216 --> 00:03:35,716
And you can get a key there,


100
00:03:35,716 --> 00:03:36,606
just like you would for any


101
00:03:36,606 --> 00:03:39,286
other service in your developer


102
00:03:39,286 --> 00:03:39,706
account.


103
00:03:40,686 --> 00:03:42,346
There's a limited number of keys


104
00:03:42,346 --> 00:03:44,256
available for the MapKit JS


105
00:03:44,256 --> 00:03:46,336
Beta, so I suggest you go and


106
00:03:46,336 --> 00:03:47,796
get one as soon as possible.


107
00:03:50,516 --> 00:03:52,826
Once you get a key and start


108
00:03:52,826 --> 00:03:54,636
using MapKit JS, I mean, I'm


109
00:03:54,636 --> 00:03:56,896
biased because I work on it, but


110
00:03:56,896 --> 00:03:58,096
I think there's a lot of things


111
00:03:58,096 --> 00:03:59,156
that you're going to really like


112
00:03:59,156 --> 00:04:00,196
about it.


113
00:04:00,426 --> 00:04:02,596
The first thing is, it lets you


114
00:04:02,596 --> 00:04:04,796
unify on one map provider, for


115
00:04:04,796 --> 00:04:06,686
both your app and your website.


116
00:04:06,906 --> 00:04:08,206
So, we've noticed lots of you


117
00:04:08,206 --> 00:04:09,806
are using Apple Maps inside your


118
00:04:10,566 --> 00:04:10,776
apps.


119
00:04:10,776 --> 00:04:12,066
Now, you'll be able to use Apple


120
00:04:12,066 --> 00:04:12,976
Maps everywhere.


121
00:04:14,416 --> 00:04:18,196
The MapKit JS APIs, are really


122
00:04:18,245 --> 00:04:20,125
inspired by the APIs that you're


123
00:04:20,125 --> 00:04:21,495
already using inside native


124
00:04:21,495 --> 00:04:22,936
MapKit, but they're using


125
00:04:22,936 --> 00:04:24,316
conventions that are familiar to


126
00:04:24,316 --> 00:04:25,106
web developers.


127
00:04:25,106 --> 00:04:28,046
So, they should be easy for you


128
00:04:29,436 --> 00:04:29,776
to adapt.


129
00:04:29,776 --> 00:04:32,256
Also, MapKit JS really brings


130
00:04:32,306 --> 00:04:36,016
the Apple Maps experience to web


131
00:04:36,016 --> 00:04:36,576
pages.


132
00:04:36,946 --> 00:04:38,266
It's localized and in 32


133
00:04:38,266 --> 00:04:39,886
languages with full right to


134
00:04:39,886 --> 00:04:40,786
left support.


135
00:04:41,046 --> 00:04:42,776
It's accessible via keyboard


136
00:04:42,776 --> 00:04:44,576
access and with voiceover.


137
00:04:45,396 --> 00:04:47,556
It has the beautiful cartography


138
00:04:47,556 --> 00:04:48,686
that we all know and love in


139
00:04:48,686 --> 00:04:49,446
Apple Maps.


140
00:04:49,796 --> 00:04:51,006
And it has support for native


141
00:04:51,006 --> 00:04:52,646
gestures like Pinch to Zoom,


142
00:04:52,976 --> 00:04:55,236
Two-Finger Rotation, and also


143
00:04:55,236 --> 00:04:56,886
Shift, and Two Finger Scroll to


144
00:04:56,886 --> 00:04:57,476
zoom in.


145
00:04:58,466 --> 00:05:00,416
It also uses something that's


146
00:05:00,416 --> 00:05:02,306
called Adaptive Rendering Modes.


147
00:05:02,696 --> 00:05:04,586
So, what that means is, there's


148
00:05:04,586 --> 00:05:05,926
a couple different modes in


149
00:05:05,926 --> 00:05:07,166
which the map can be rendered.


150
00:05:07,846 --> 00:05:09,526
The first is Client-Side


151
00:05:09,526 --> 00:05:11,306
Rendering, and this is a full


152
00:05:11,306 --> 00:05:13,926
WebGL engine that is rendering


153
00:05:13,926 --> 00:05:15,236
the map on the client.


154
00:05:15,386 --> 00:05:17,096
And this allows us to do lots of


155
00:05:17,096 --> 00:05:19,166
things, like these very, smooth


156
00:05:19,166 --> 00:05:21,386
transitions as users pinch to


157
00:05:21,386 --> 00:05:23,556
zoom or shift two-finger scroll


158
00:05:23,556 --> 00:05:24,296
to zoom in.


159
00:05:24,596 --> 00:05:25,976
You'll see the labels fading in


160
00:05:25,976 --> 00:05:27,836
and out as we transition between


161
00:05:27,836 --> 00:05:28,926
zoom levels, just like on


162
00:05:28,926 --> 00:05:29,316
native.


163
00:05:32,116 --> 00:05:33,986
Also, Client-Side Rendering


164
00:05:33,986 --> 00:05:35,486
gives us full control over the


165
00:05:35,486 --> 00:05:36,306
labels on the map.


166
00:05:36,856 --> 00:05:38,446
So, we can enable features such


167
00:05:38,446 --> 00:05:41,046
as Rotation, where I'm rotating


168
00:05:41,046 --> 00:05:42,976
the map with two-fingers, but


169
00:05:42,976 --> 00:05:43,916
the labels are staying


170
00:05:43,916 --> 00:05:45,606
horizontal as I rotate.


171
00:05:47,156 --> 00:05:50,616
Finally, with CSR, we have the


172
00:05:50,616 --> 00:05:52,876
marker style annotations that


173
00:05:52,876 --> 00:05:54,406
you're used to seeing on iOS.


174
00:05:54,756 --> 00:05:57,206
And the title of this annotation


175
00:05:57,206 --> 00:05:58,066
is My Marker.


176
00:05:58,326 --> 00:05:59,856
If I select this annotation, the


177
00:05:59,856 --> 00:06:01,676
subtitle will appear, but it


178
00:06:01,676 --> 00:06:03,566
would overlap that label that is


179
00:06:03,566 --> 00:06:04,166
beneath it.


180
00:06:04,886 --> 00:06:06,636
So, with Client-Side Rendering,


181
00:06:06,686 --> 00:06:08,086
and full control over the


182
00:06:08,086 --> 00:06:09,996
labels, we can just collide that


183
00:06:09,996 --> 00:06:11,976
label out and remove it so that


184
00:06:11,976 --> 00:06:14,056
the labels on the map never


185
00:06:14,056 --> 00:06:15,736
overlap the text for your


186
00:06:15,736 --> 00:06:16,546
annotations.


187
00:06:17,516 --> 00:06:20,276
And even as users are zooming in


188
00:06:20,276 --> 00:06:22,106
and out, and the map labels are


189
00:06:22,106 --> 00:06:24,016
changing all over the place, the


190
00:06:24,016 --> 00:06:25,666
map labels are never going to


191
00:06:25,666 --> 00:06:27,406
overlap your annotation labels.


192
00:06:28,156 --> 00:06:29,936
In fact, if you have a draggable


193
00:06:29,936 --> 00:06:31,286
annotation and the user is


194
00:06:31,286 --> 00:06:33,036
picking it up and moving it all


195
00:06:33,036 --> 00:06:35,716
over the map, labels are never


196
00:06:35,716 --> 00:06:37,726
going to overlap your annotation


197
00:06:37,726 --> 00:06:38,216
labels.


198
00:06:38,896 --> 00:06:41,166
So, this is one of the rendering


199
00:06:41,166 --> 00:06:42,596
modes, Client-Side Rendering.


200
00:06:43,096 --> 00:06:45,026
But web code can run anywhere,


201
00:06:45,506 --> 00:06:47,066
and not all devices are created


202
00:06:47,066 --> 00:06:47,546
equal.


203
00:06:48,466 --> 00:06:51,616
So, for those times when your


204
00:06:51,616 --> 00:06:53,046
users may be running on a low


205
00:06:53,046 --> 00:06:54,646
performance configuration, maybe


206
00:06:54,646 --> 00:06:56,856
an old device, we have a


207
00:06:56,856 --> 00:06:58,076
different mode that we call


208
00:06:58,076 --> 00:06:59,276
Labels Only Client-Side


209
00:06:59,276 --> 00:06:59,766
Rendering.


210
00:07:00,476 --> 00:07:03,296
And what this is, it's a grid of


211
00:07:03,296 --> 00:07:05,106
image tiles that show the base


212
00:07:05,106 --> 00:07:09,006
map, with a layer of WebGL


213
00:07:09,006 --> 00:07:10,466
labels over the top of it.


214
00:07:10,866 --> 00:07:13,166
So, we can still give as many


215
00:07:13,166 --> 00:07:14,786
users as possible these great


216
00:07:14,786 --> 00:07:16,986
features like rotation and label


217
00:07:16,986 --> 00:07:18,536
collisions, in a


218
00:07:18,676 --> 00:07:19,846
high-performance way.


219
00:07:22,086 --> 00:07:23,976
In your users' configuration


220
00:07:23,976 --> 00:07:25,516
does not support WebGL at all,


221
00:07:25,676 --> 00:07:26,706
they get something that we call


222
00:07:26,706 --> 00:07:28,476
Server-Side Rendering, which is


223
00:07:28,476 --> 00:07:31,286
a grid of tiles, tile images,


224
00:07:31,636 --> 00:07:32,996
and in this case, the labels are


225
00:07:32,996 --> 00:07:34,346
actually part of the image.


226
00:07:35,606 --> 00:07:38,026
So, adaptive rendering modes are


227
00:07:38,026 --> 00:07:39,886
pretty cool because there is an


228
00:07:39,886 --> 00:07:41,486
ideal mode for every client


229
00:07:41,486 --> 00:07:42,656
configuration out there.


230
00:07:43,576 --> 00:07:45,396
And we choose the best mode for


231
00:07:45,396 --> 00:07:46,866
your user automatically.


232
00:07:46,866 --> 00:07:48,096
So, you don't have to decide


233
00:07:48,386 --> 00:07:49,496
whether to use the WebGL


234
00:07:49,496 --> 00:07:52,006
version, or the tile version, or


235
00:07:52,006 --> 00:07:52,456
whatever.


236
00:07:52,566 --> 00:07:54,416
We run a quick test and give


237
00:07:54,416 --> 00:07:56,156
that user the best mode for


238
00:07:56,156 --> 00:07:57,206
their configuration.


239
00:07:57,756 --> 00:08:00,956
In our experience so far, most


240
00:08:00,956 --> 00:08:02,406
users are getting Client-Side


241
00:08:02,406 --> 00:08:03,706
Rendering or Labels Only


242
00:08:03,706 --> 00:08:04,726
Client-Side Rendering.


243
00:08:05,296 --> 00:08:07,686
So, that's a quick introduction


244
00:08:07,686 --> 00:08:08,696
to MapKit JS.


245
00:08:08,696 --> 00:08:10,706
And now, to tell you more about


246
00:08:10,706 --> 00:08:12,176
using the API, I'm going to hand


247
00:08:12,176 --> 00:08:13,706
it off to Julien Quint.


248
00:08:15,516 --> 00:08:18,500
[ Applause ]


249
00:08:21,376 --> 00:08:22,086
>> Thank you, Vicki.


250
00:08:24,486 --> 00:08:26,106
Let's get down to the technical


251
00:08:26,106 --> 00:08:27,896
details of using MapKit JS for


252
00:08:27,896 --> 00:08:28,456
your website.


253
00:08:29,256 --> 00:08:31,386
We will see how to set up a map.


254
00:08:32,236 --> 00:08:33,726
We will see how to navigate an


255
00:08:33,726 --> 00:08:34,916
annotate this map so that you


256
00:08:34,916 --> 00:08:36,155
can show your own data.


257
00:08:37,556 --> 00:08:38,626
And finally, we'll see how to


258
00:08:38,626 --> 00:08:40,816
enable rich interactions with


259
00:08:40,816 --> 00:08:41,806
additional services.


260
00:08:43,966 --> 00:08:45,686
To set up your map, you need to


261
00:08:45,686 --> 00:08:46,846
go through these four steps.


262
00:08:47,516 --> 00:08:49,466
First step is to import MapKit


263
00:08:50,236 --> 00:08:50,326
JS.


264
00:08:50,326 --> 00:08:51,726
Here you see a script tag that


265
00:08:51,726 --> 00:08:53,026
you can add somewhere on your


266
00:08:53,026 --> 00:08:53,436
page.


267
00:08:53,886 --> 00:08:57,356
And the URL of the MapKit JS


268
00:08:57,736 --> 00:08:59,736
script includes a version


269
00:08:59,736 --> 00:09:00,046
number.


270
00:09:00,906 --> 00:09:03,006
We follow the semantic


271
00:09:03,006 --> 00:09:05,016
versioning system where the


272
00:09:05,016 --> 00:09:06,276
first number is the major


273
00:09:06,456 --> 00:09:08,716
version number, which is updated


274
00:09:08,716 --> 00:09:09,746
if breaking changes are


275
00:09:09,746 --> 00:09:10,336
introduced.


276
00:09:10,676 --> 00:09:12,026
The second number is a minor


277
00:09:12,346 --> 00:09:15,036
version number, so when bugs are


278
00:09:15,036 --> 00:09:16,946
fixed, when new features are


279
00:09:16,946 --> 00:09:18,756
added or when performance


280
00:09:18,756 --> 00:09:20,186
improvements take place, we


281
00:09:20,186 --> 00:09:20,996
update this number.


282
00:09:21,266 --> 00:09:23,336
And finally, for urgent patches,


283
00:09:23,336 --> 00:09:24,946
we update the patch number.


284
00:09:24,946 --> 00:09:26,806
You can specify and X instead of


285
00:09:26,806 --> 00:09:28,666
a specific number for the minor


286
00:09:28,666 --> 00:09:29,966
or the patch version, and we


287
00:09:30,596 --> 00:09:32,176
recommend that you use this


288
00:09:32,176 --> 00:09:34,156
Version 5.0.X to get started so


289
00:09:34,156 --> 00:09:35,996
that you will get urgent bug


290
00:09:35,996 --> 00:09:37,476
fixes on our first public


291
00:09:37,476 --> 00:09:37,826
release.


292
00:09:38,036 --> 00:09:41,406
In order to be able to show a


293
00:09:41,406 --> 00:09:43,806
map on your website, you will


294
00:09:43,806 --> 00:09:46,186
need to tell your page -- to


295
00:09:46,186 --> 00:09:47,606
tell MapKit where to show that


296
00:09:47,606 --> 00:09:47,776
map.


297
00:09:47,776 --> 00:09:50,916
So, in order to do that, you can


298
00:09:51,166 --> 00:09:53,646
use an HTML element that will be


299
00:09:53,796 --> 00:09:55,156
the container for your map.


300
00:09:55,556 --> 00:09:56,646
So, in this case, I'm using a


301
00:09:56,646 --> 00:09:58,446
development which is usually a


302
00:09:58,446 --> 00:10:01,436
very good candidate for that.


303
00:10:01,436 --> 00:10:02,936
I give it an ID so that I can


304
00:10:02,936 --> 00:10:03,976
refer back to it easily.


305
00:10:04,066 --> 00:10:06,546
And one thing that is very


306
00:10:06,546 --> 00:10:08,946
important is to set its size,


307
00:10:09,306 --> 00:10:10,516
because the map doesn't have a


308
00:10:10,516 --> 00:10:12,716
size of its own, so it will just


309
00:10:12,716 --> 00:10:14,736
use the size of the elements


310
00:10:14,736 --> 00:10:15,676
that it is part of.


311
00:10:16,296 --> 00:10:17,916
So, if you have a development


312
00:10:18,346 --> 00:10:20,276
that I represented here with a


313
00:10:20,276 --> 00:10:22,066
gray background, a map will be


314
00:10:22,066 --> 00:10:24,156
shown inside that element.


315
00:10:24,156 --> 00:10:26,086
If your element size changes,


316
00:10:26,086 --> 00:10:27,426
then your map size will change


317
00:10:27,426 --> 00:10:27,736
as well.


318
00:10:28,326 --> 00:10:31,776
So, I have set up an element for


319
00:10:31,776 --> 00:10:32,256
my map.


320
00:10:32,696 --> 00:10:34,686
The next step is to initialize


321
00:10:34,686 --> 00:10:35,606
MapKit JS.


322
00:10:35,606 --> 00:10:37,576
So, we just saw that you need a


323
00:10:37,576 --> 00:10:39,806
key to be able to use MapKit JS,


324
00:10:39,976 --> 00:10:42,136
and in initializing MapKit, you


325
00:10:43,216 --> 00:10:46,746
get your authorization callback


326
00:10:46,746 --> 00:10:49,646
so that you will be able to use


327
00:10:49,646 --> 00:10:51,546
the services that MapKit JS


328
00:10:51,546 --> 00:10:52,006
provides.


329
00:10:52,006 --> 00:10:54,346
And most importantly, to show


330
00:10:54,346 --> 00:10:56,696
the actual map on your websites.


331
00:10:57,356 --> 00:10:59,546
And the last point is to create


332
00:10:59,546 --> 00:11:02,386
a map object, here using the Map


333
00:11:02,386 --> 00:11:03,716
Constructor from MapKit.


334
00:11:04,046 --> 00:11:05,326
I give it the idea of the


335
00:11:05,326 --> 00:11:06,476
container where the map will


336
00:11:06,476 --> 00:11:06,856
show.


337
00:11:07,236 --> 00:11:08,466
And this is what happens.


338
00:11:08,796 --> 00:11:10,426
We have a map showing on our


339
00:11:10,426 --> 00:11:10,886
sites.


340
00:11:11,946 --> 00:11:13,716
This is the different map.


341
00:11:13,836 --> 00:11:15,486
We didn't pass any other


342
00:11:15,486 --> 00:11:16,866
parameters, so it will show a


343
00:11:16,866 --> 00:11:17,966
different region and the


344
00:11:17,966 --> 00:11:18,726
different control.


345
00:11:18,726 --> 00:11:21,286
You can see the controls in the


346
00:11:21,286 --> 00:11:21,836
corners.


347
00:11:21,836 --> 00:11:23,396
You can see the Compass for


348
00:11:23,396 --> 00:11:23,986
rotation.


349
00:11:24,256 --> 00:11:25,516
The Zoom control.


350
00:11:26,426 --> 00:11:29,486
The Map Type Control on the top,


351
00:11:30,296 --> 00:11:31,056
etcetera.


352
00:11:31,056 --> 00:11:33,216
This was a pretty large area,


353
00:11:33,596 --> 00:11:37,346
but if you're on a page where


354
00:11:37,346 --> 00:11:38,816
you want to show only a very


355
00:11:38,816 --> 00:11:40,376
small map, these controls can


356
00:11:40,376 --> 00:11:42,916
use a lot of valuable space, so


357
00:11:42,916 --> 00:11:44,616
by default, when your map size


358
00:11:44,896 --> 00:11:46,406
is below a certain width or


359
00:11:46,406 --> 00:11:48,646
height, we will toggle these


360
00:11:48,646 --> 00:11:49,926
controls off automatically.


361
00:11:50,806 --> 00:11:52,946
On touch devices, the situation


362
00:11:52,946 --> 00:11:54,236
is a little bit different.


363
00:11:54,236 --> 00:11:55,906
We don't really need to show the


364
00:11:55,906 --> 00:11:57,096
-- some of the controls like the


365
00:11:57,096 --> 00:12:00,156
Zoom or the Compass, because we


366
00:12:00,156 --> 00:12:03,346
have gestures to change the


367
00:12:03,346 --> 00:12:04,686
rotation of the map or to zoom


368
00:12:04,686 --> 00:12:04,856
in.


369
00:12:05,306 --> 00:12:07,316
So again, we don't really need


370
00:12:07,316 --> 00:12:09,186
to use up that space by showing


371
00:12:09,186 --> 00:12:10,496
these controls, and we turn them


372
00:12:10,496 --> 00:12:11,146
off by default.


373
00:12:11,646 --> 00:12:14,496
Note that the Apple logo and the


374
00:12:14,496 --> 00:12:15,946
legal text are always present.


375
00:12:16,956 --> 00:12:18,146
These are the difference for the


376
00:12:18,146 --> 00:12:20,086
controls, but you can also set


377
00:12:20,086 --> 00:12:21,896
these control visibilities


378
00:12:21,896 --> 00:12:22,646
yourself.


379
00:12:22,676 --> 00:12:23,846
Some controls are so-called


380
00:12:23,846 --> 00:12:24,806
Adaptive Controls.


381
00:12:24,806 --> 00:12:25,976
This includes the Compass and


382
00:12:25,976 --> 00:12:26,386
the Scale.


383
00:12:26,906 --> 00:12:28,416
This means that depending on the


384
00:12:28,416 --> 00:12:30,116
platform, they will behave in a


385
00:12:30,116 --> 00:12:31,166
slightly different manner.


386
00:12:31,446 --> 00:12:34,696
So, on iOS, the Compass control


387
00:12:34,696 --> 00:12:36,196
is not shown by default, but if


388
00:12:36,196 --> 00:12:37,876
the map rotates, then we will


389
00:12:37,876 --> 00:12:39,666
show it indicate where North is


390
00:12:39,666 --> 00:12:40,136
pointing.


391
00:12:40,506 --> 00:12:42,256
And the Scale is an indicator of


392
00:12:42,306 --> 00:12:44,566
the units of distance on your


393
00:12:44,566 --> 00:12:44,846
map.


394
00:12:44,846 --> 00:12:47,226
And we show it only when the


395
00:12:47,226 --> 00:12:48,506
user is zooming in and out.


396
00:12:49,066 --> 00:12:52,016
So, here, we can see the -- when


397
00:12:52,016 --> 00:12:54,076
we have zooming and rotation, we


398
00:12:54,076 --> 00:12:55,666
can see the Compass appear and


399
00:12:55,666 --> 00:12:56,826
disappear in the bottom right


400
00:12:56,826 --> 00:12:57,226
corner.


401
00:12:57,606 --> 00:12:58,636
And the Scale appear and


402
00:12:58,636 --> 00:12:59,916
disappear in the top left


403
00:12:59,916 --> 00:13:00,166
corner.


404
00:13:00,556 --> 00:13:01,896
Of course, we can also select


405
00:13:01,896 --> 00:13:03,096
these controls to be always


406
00:13:03,096 --> 00:13:04,496
visible or always hidden.


407
00:13:05,156 --> 00:13:07,466
The rest of the controls have a


408
00:13:07,466 --> 00:13:09,326
binary state, so they can be


409
00:13:09,326 --> 00:13:11,936
hidden or set to be visible by


410
00:13:11,936 --> 00:13:14,146
setting a Boolean property.


411
00:13:14,666 --> 00:13:18,286
In this example, we show the


412
00:13:18,286 --> 00:13:19,496
controls that do not show by


413
00:13:19,496 --> 00:13:21,556
default on desktop, such as the


414
00:13:21,556 --> 00:13:23,056
User Location Control which


415
00:13:23,056 --> 00:13:25,206
appears in the bottom right of


416
00:13:25,206 --> 00:13:26,086
the window.


417
00:13:26,626 --> 00:13:28,036
Here, I've selected it.


418
00:13:28,036 --> 00:13:29,756
So now, the user location is


419
00:13:29,756 --> 00:13:30,736
tracked, and you can see the


420
00:13:30,736 --> 00:13:32,126
user location in the center of


421
00:13:32,126 --> 00:13:32,386
the map.


422
00:13:33,336 --> 00:13:34,586
And the Scale is shown at the


423
00:13:34,586 --> 00:13:36,466
top let, because I marked it to


424
00:13:36,466 --> 00:13:37,376
Always Visible.


425
00:13:38,756 --> 00:13:40,246
We can go further in configuring


426
00:13:40,246 --> 00:13:40,936
these controls.


427
00:13:41,286 --> 00:13:44,186
In order to match better the


428
00:13:44,186 --> 00:13:45,666
color scheme of your page, you


429
00:13:45,666 --> 00:13:47,566
can set the tint of the map.


430
00:13:47,936 --> 00:13:49,536
And this changes the color of


431
00:13:49,536 --> 00:13:51,456
the user controls.


432
00:13:51,456 --> 00:13:53,606
So, you can see, for instance,


433
00:13:53,606 --> 00:13:54,836
the -- all of the controls of


434
00:13:54,836 --> 00:13:55,086
the map.


435
00:13:55,346 --> 00:13:56,786
You can see the user control is


436
00:13:56,786 --> 00:13:58,116
now highlighted in red because I


437
00:13:58,116 --> 00:14:00,076
set this tint color to a red


438
00:14:00,076 --> 00:14:00,406
color.


439
00:14:00,406 --> 00:14:02,236
You can use any CSS color value


440
00:14:02,236 --> 00:14:02,486
here.


441
00:14:03,796 --> 00:14:06,896
The MapKit will use your


442
00:14:06,896 --> 00:14:07,686
[inaudible] language


443
00:14:07,686 --> 00:14:11,206
configuration, so that it will


444
00:14:11,806 --> 00:14:13,806
adapt itself to the language


445
00:14:13,806 --> 00:14:14,886
that your user expects.


446
00:14:15,066 --> 00:14:16,426
You can also set that language


447
00:14:16,426 --> 00:14:18,266
into the initialization code or


448
00:14:18,266 --> 00:14:19,596
you can even set it on the fly


449
00:14:19,596 --> 00:14:20,836
using the language property.


450
00:14:21,216 --> 00:14:22,746
So here, I've set it to Japanese


451
00:14:22,746 --> 00:14:24,216
so that I'm sure -- so that I


452
00:14:24,216 --> 00:14:26,836
can show the map, as well as the


453
00:14:26,836 --> 00:14:27,846
controls in Japanese.


454
00:14:27,996 --> 00:14:29,826
So, you can see the North


455
00:14:29,826 --> 00:14:31,076
indicator for instance in the


456
00:14:31,076 --> 00:14:32,816
Compass has been replaced, and


457
00:14:32,816 --> 00:14:34,846
the units are not in -- using


458
00:14:34,846 --> 00:14:36,526
the metric system which is more


459
00:14:36,526 --> 00:14:38,406
traditional in Japan, than using


460
00:14:38,406 --> 00:14:40,176
miles or years.


461
00:14:41,516 --> 00:14:44,476
If you set your language to a


462
00:14:44,476 --> 00:14:46,216
right to left language, such as


463
00:14:46,216 --> 00:14:47,376
Hebrew in this example, or


464
00:14:47,376 --> 00:14:49,076
Arabic, the controls are also


465
00:14:49,076 --> 00:14:51,376
mirrored to match your users'


466
00:14:51,376 --> 00:14:52,066
expectations.


467
00:14:52,656 --> 00:14:55,376
So, the controls are the way --


468
00:14:55,376 --> 00:14:57,196
are some of the ways that your


469
00:14:57,196 --> 00:14:58,946
users can interact with the map,


470
00:14:58,946 --> 00:15:00,046
but again, also in turn


471
00:15:00,046 --> 00:15:00,536
directly.


472
00:15:00,536 --> 00:15:02,486
As I said, we can use touch


473
00:15:02,486 --> 00:15:04,956
events on touch enabled device.


474
00:15:05,036 --> 00:15:06,166
On this stuff, you can use the


475
00:15:06,166 --> 00:15:07,516
Track Pad for some of the


476
00:15:07,516 --> 00:15:08,986
gestures, and you can also use


477
00:15:08,986 --> 00:15:10,816
the mouse to click and pan the


478
00:15:10,816 --> 00:15:12,466
map, or double-tap for instance,


479
00:15:12,466 --> 00:15:14,156
to zoom in on the map.


480
00:15:14,526 --> 00:15:16,306
You can also disable these


481
00:15:16,306 --> 00:15:18,316
interactions directly, by


482
00:15:18,316 --> 00:15:19,996
setting the Zoom Enabled, Scroll


483
00:15:19,996 --> 00:15:22,096
Enabled, or Rotate Enabled


484
00:15:22,096 --> 00:15:23,166
property to be false.


485
00:15:23,166 --> 00:15:24,646
So, for instance, in the case


486
00:15:24,646 --> 00:15:25,636
where you have this very small


487
00:15:25,636 --> 00:15:27,946
map as I showed earlier, you


488
00:15:27,946 --> 00:15:28,966
might want to make sure that the


489
00:15:28,966 --> 00:15:30,866
user doesn't accidentally move


490
00:15:30,866 --> 00:15:32,156
the map around to be sure that


491
00:15:32,156 --> 00:15:33,666
it always shows the right area.


492
00:15:33,666 --> 00:15:35,006
And you would set these


493
00:15:35,006 --> 00:15:36,606
properties to false, which would


494
00:15:36,606 --> 00:15:40,276
make the map static.


495
00:15:40,276 --> 00:15:42,626
Now, that we know how to set up


496
00:15:42,626 --> 00:15:44,336
the map on our page, we want to


497
00:15:44,336 --> 00:15:45,716
make sure that we show some


498
00:15:45,716 --> 00:15:46,576
interesting content.


499
00:15:47,656 --> 00:15:49,706
So, we can do that by navigating


500
00:15:49,706 --> 00:15:51,306
around the world to show a


501
00:15:51,306 --> 00:15:53,156
specific area, but also to


502
00:15:53,156 --> 00:15:54,286
annotate the map to call


503
00:15:54,286 --> 00:15:57,976
attention to the region that we


504
00:15:58,046 --> 00:16:01,016
are showing.


505
00:16:01,016 --> 00:16:02,486
We'll see how to set the center


506
00:16:02,486 --> 00:16:03,806
in the region, how to add


507
00:16:03,806 --> 00:16:05,466
annotations to the map to mark


508
00:16:05,466 --> 00:16:07,066
locations, and how to cover the


509
00:16:07,066 --> 00:16:08,276
-- some areas of the map with


510
00:16:08,276 --> 00:16:08,806
overlays.


511
00:16:08,966 --> 00:16:10,696
So, starting with the center and


512
00:16:10,696 --> 00:16:13,696
the region of the map, again,


513
00:16:13,696 --> 00:16:15,226
this is the default map.


514
00:16:15,226 --> 00:16:18,166
And it shows the default region,


515
00:16:18,166 --> 00:16:20,646
which is zooming out at the


516
00:16:20,646 --> 00:16:22,126
minimum possible level.


517
00:16:22,606 --> 00:16:24,496
And centering the map on, zero,


518
00:16:24,496 --> 00:16:26,056
zero, latitude and longitude.


519
00:16:26,266 --> 00:16:28,546
You probably want to show a more


520
00:16:28,546 --> 00:16:29,836
specific area of the world.


521
00:16:29,836 --> 00:16:32,046
So, for this example, I want to


522
00:16:32,046 --> 00:16:34,006
focus on Rio de Janeiro in


523
00:16:34,006 --> 00:16:34,396
Brazil.


524
00:16:35,266 --> 00:16:36,466
And to do that, I will set the


525
00:16:36,466 --> 00:16:37,976
center of my map to the


526
00:16:37,976 --> 00:16:39,426
coordinate of Rio de Janeiro.


527
00:16:39,426 --> 00:16:40,446
So, you can see on the right,


528
00:16:40,796 --> 00:16:43,466
that the map center has moved to


529
00:16:43,466 --> 00:16:45,006
show Rio at is center.


530
00:16:45,906 --> 00:16:47,216
But setting the center of the


531
00:16:47,216 --> 00:16:48,636
map does not change the scale.


532
00:16:48,636 --> 00:16:49,966
So, at this scale, we are always


533
00:16:50,026 --> 00:16:51,256
still not very much in focus


534
00:16:51,256 --> 00:16:52,546
because we can see all of South


535
00:16:52,546 --> 00:16:53,356
America, for instance.


536
00:16:53,356 --> 00:16:55,166
So, let's zoom in a little bit.


537
00:16:56,236 --> 00:16:57,966
And in order to do that, I will


538
00:16:57,966 --> 00:16:59,086
set a region.


539
00:16:59,376 --> 00:17:01,286
So, a coordinate region is made


540
00:17:01,286 --> 00:17:02,756
up of a center, which is


541
00:17:02,756 --> 00:17:04,465
represented by these dots at the


542
00:17:04,465 --> 00:17:06,506
center of the map, as well as a


543
00:17:06,506 --> 00:17:07,876
latitude and longitude span.


544
00:17:07,876 --> 00:17:09,226
So here, I have represented the


545
00:17:09,226 --> 00:17:12,076
region as this dotted box.


546
00:17:12,986 --> 00:17:14,896
But we will not that the map --


547
00:17:15,016 --> 00:17:16,076
the region that is set


548
00:17:16,076 --> 00:17:18,246
ultimately on your map, will be


549
00:17:18,246 --> 00:17:19,626
bigger than the region that you


550
00:17:19,626 --> 00:17:21,006
asked for because we need to


551
00:17:21,006 --> 00:17:22,846
make sure that it fits entirely


552
00:17:22,846 --> 00:17:25,006
within the bounds that you have


553
00:17:25,006 --> 00:17:25,786
set for your map.


554
00:17:26,076 --> 00:17:27,496
So, in this case, I need to add


555
00:17:27,496 --> 00:17:29,926
some padding, north and south of


556
00:17:29,926 --> 00:17:31,666
the region to be able to show


557
00:17:31,666 --> 00:17:33,456
the -- all of the region that


558
00:17:33,456 --> 00:17:34,496
was specified.


559
00:17:34,806 --> 00:17:37,606
So, in terms of putting the


560
00:17:37,796 --> 00:17:39,856
MapKit JS framework -- the


561
00:17:40,186 --> 00:17:42,346
center is set to a MapKit


562
00:17:42,346 --> 00:17:43,746
coordinator object which is a


563
00:17:43,746 --> 00:17:45,126
latitude and longitude pair.


564
00:17:45,916 --> 00:17:47,966
In the Coordinate Region, to set


565
00:17:47,966 --> 00:17:50,156
the region of the map, is an


566
00:17:50,156 --> 00:17:52,006
object that contains two member,


567
00:17:52,126 --> 00:17:53,376
a center which is also a


568
00:17:53,376 --> 00:17:55,486
coordinate and a coordinate span


569
00:17:55,486 --> 00:17:57,076
which is a latitude delta and a


570
00:17:57,076 --> 00:18:01,496
longitude delta there.


571
00:18:01,736 --> 00:18:03,236
How did I come up with the


572
00:18:03,236 --> 00:18:04,776
region or with the coordinates


573
00:18:04,776 --> 00:18:05,886
that I showed you in these


574
00:18:05,886 --> 00:18:06,416
screen shots?


575
00:18:06,416 --> 00:18:09,046
There are many ways to decide on


576
00:18:09,046 --> 00:18:12,196
regions and coordinates.


577
00:18:12,196 --> 00:18:14,006
You can look them up on


578
00:18:14,006 --> 00:18:15,556
Wikipedia and help put them in


579
00:18:15,556 --> 00:18:16,096
your code.


580
00:18:16,276 --> 00:18:17,746
You could get them from some


581
00:18:17,746 --> 00:18:20,276
database that has some


582
00:18:20,276 --> 00:18:21,486
geographical information.


583
00:18:21,986 --> 00:18:23,706
But one way that you can also


584
00:18:23,706 --> 00:18:26,226
get this information, is to use


585
00:18:26,226 --> 00:18:29,366
MapKit Services that includes


586
00:18:29,366 --> 00:18:30,866
Geocoding and Search.


587
00:18:31,096 --> 00:18:33,256
So, Geocoding lets you look at a


588
00:18:33,256 --> 00:18:35,796
place and will return your


589
00:18:35,796 --> 00:18:36,966
coordinate in a region.


590
00:18:36,966 --> 00:18:38,776
So, in these previous examples,


591
00:18:38,776 --> 00:18:41,116
I used the geocoding from MapKit


592
00:18:41,116 --> 00:18:43,046
JS to look at the coordinate in


593
00:18:43,046 --> 00:18:44,486
the region for Rio de Janeiro


594
00:18:44,486 --> 00:18:45,866
and this is what I set on my


595
00:18:46,666 --> 00:18:46,846
map.


596
00:18:46,846 --> 00:18:48,016
You can also use search to


597
00:18:48,016 --> 00:18:50,026
search for places.


598
00:18:50,306 --> 00:18:52,876
And it will return not only the


599
00:18:52,876 --> 00:18:54,326
coordinates of these places, but


600
00:18:54,326 --> 00:18:55,696
also bounding region that you


601
00:18:55,696 --> 00:18:57,166
can set on your map, to make


602
00:18:57,166 --> 00:18:59,146
sure that it encloses all of the


603
00:19:00,416 --> 00:19:01,156
results.


604
00:19:01,246 --> 00:19:02,956
Another way to quickly set a


605
00:19:02,956 --> 00:19:04,566
region on your map that is very


606
00:19:04,566 --> 00:19:05,976
convenient, is a method called


607
00:19:05,976 --> 00:19:06,736
Show Items.


608
00:19:07,106 --> 00:19:08,836
We will see now how to add


609
00:19:08,836 --> 00:19:10,266
annotations and overlays on your


610
00:19:10,266 --> 00:19:11,916
map, and by calling Show Items,


611
00:19:11,916 --> 00:19:13,706
we will make sure that we have a


612
00:19:13,706 --> 00:19:15,646
region that encloses these items


613
00:19:15,646 --> 00:19:17,076
so that they are all visible to


614
00:19:17,076 --> 00:19:17,536
your user.


615
00:19:18,796 --> 00:19:21,066
I will note that region changes


616
00:19:21,066 --> 00:19:23,226
may be animated, so that you can


617
00:19:23,336 --> 00:19:24,646
provide a nice animation.


618
00:19:24,896 --> 00:19:26,236
Or you can set the region


619
00:19:26,236 --> 00:19:26,776
instantly.


620
00:19:28,256 --> 00:19:31,666
Because these things, changing


621
00:19:31,666 --> 00:19:33,676
the regions, changing the


622
00:19:33,676 --> 00:19:35,296
center, etcetera, can be done


623
00:19:35,296 --> 00:19:37,206
from your code but can also be


624
00:19:37,206 --> 00:19:38,776
done by the user as a result of


625
00:19:38,776 --> 00:19:40,686
interactions you want to be able


626
00:19:40,686 --> 00:19:42,636
to react to these interactions.


627
00:19:43,086 --> 00:19:44,586
And we -- and the Map Object


628
00:19:45,706 --> 00:19:48,496
allows you to listen to user


629
00:19:48,496 --> 00:19:50,616
events such as region changes,


630
00:19:50,616 --> 00:19:51,856
when they begin, when they end,


631
00:19:52,326 --> 00:19:53,886
since they can be animated.


632
00:19:54,186 --> 00:19:55,926
And also, when gestures such as


633
00:19:55,926 --> 00:19:57,676
coding, zooming, rotations begin


634
00:19:57,676 --> 00:19:58,116
and end.


635
00:19:58,526 --> 00:20:00,986
We follow the model of DOM Event


636
00:20:00,986 --> 00:20:02,556
Handling, so you will have the


637
00:20:02,556 --> 00:20:04,216
familiar method such as Add


638
00:20:04,216 --> 00:20:05,396
Event Listener and Remove Event


639
00:20:05,396 --> 00:20:07,536
Listener, the name of the event,


640
00:20:07,536 --> 00:20:09,256
and you get past an event object


641
00:20:09,256 --> 00:20:10,516
with the parameters of the


642
00:20:10,516 --> 00:20:10,826
event.


643
00:20:11,146 --> 00:20:13,006
So, for instance, if I wanted to


644
00:20:13,006 --> 00:20:15,376
refresh my map with some new


645
00:20:15,376 --> 00:20:16,856
information every time the user


646
00:20:16,856 --> 00:20:18,166
has mapped to a different area,


647
00:20:18,456 --> 00:20:20,076
I can listen to region change


648
00:20:20,076 --> 00:20:22,106
and events, and that will let me


649
00:20:22,106 --> 00:20:23,836
know that the map has settled to


650
00:20:23,836 --> 00:20:25,616
a new place, and I can now use


651
00:20:25,616 --> 00:20:27,866
the region of that map to


652
00:20:28,216 --> 00:20:30,876
compute which information I


653
00:20:30,876 --> 00:20:34,586
wanted to show at this stage.


654
00:20:34,796 --> 00:20:36,816
Now, that we know how to set up


655
00:20:36,816 --> 00:20:38,416
a map, let's add some our own


656
00:20:38,416 --> 00:20:39,346
information on it.


657
00:20:39,766 --> 00:20:40,606
And we can do that with


658
00:20:40,606 --> 00:20:41,686
annotations and overlay.


659
00:20:41,686 --> 00:20:43,046
We'll start with annotations.


660
00:20:43,126 --> 00:20:44,506
And MapKit JS provides three


661
00:20:44,506 --> 00:20:45,496
kinds of annotations.


662
00:20:45,496 --> 00:20:46,576
The first one, you've had a


663
00:20:46,576 --> 00:20:48,276
quick peek at it, which is the


664
00:20:48,276 --> 00:20:49,236
Marker Annotation.


665
00:20:50,546 --> 00:20:52,036
You can customize annotations


666
00:20:52,036 --> 00:20:53,606
further than the -- what the


667
00:20:53,606 --> 00:20:54,986
marker annotation provides by


668
00:20:54,986 --> 00:20:57,406
using images, or even DOM


669
00:20:57,406 --> 00:20:58,566
Elements that will have


670
00:20:58,566 --> 00:21:00,166
completely customizable


671
00:21:00,166 --> 00:21:01,196
appearance.


672
00:21:02,336 --> 00:21:04,096
The marker annotations are the


673
00:21:04,096 --> 00:21:06,136
most useful annotations that


674
00:21:06,136 --> 00:21:08,786
MapKit JS provide as they also


675
00:21:08,786 --> 00:21:11,316
have lots of rich interaction


676
00:21:11,316 --> 00:21:11,806
built-in.


677
00:21:12,706 --> 00:21:13,766
And there's lots of styling


678
00:21:13,766 --> 00:21:14,136
options.


679
00:21:14,136 --> 00:21:15,416
So, they are analogous to the


680
00:21:15,416 --> 00:21:16,616
marker annotations that that you


681
00:21:16,616 --> 00:21:18,106
may have seen already on iOS.


682
00:21:18,716 --> 00:21:20,386
They have a built-in animation


683
00:21:20,386 --> 00:21:22,116
for selection and deselection.


684
00:21:22,396 --> 00:21:23,796
And they automatically collide


685
00:21:23,796 --> 00:21:26,116
out the underlying map labels as


686
00:21:26,116 --> 00:21:26,826
we've seen before.


687
00:21:26,826 --> 00:21:27,986
So here, when I select my


688
00:21:27,986 --> 00:21:30,436
annotation, the label for the


689
00:21:30,436 --> 00:21:32,836
exit of the station is hidden to


690
00:21:32,836 --> 00:21:34,186
make room for the subtitle.


691
00:21:35,766 --> 00:21:38,376
Marker annotations -- the


692
00:21:39,016 --> 00:21:40,946
appearance of marker annotation


693
00:21:40,946 --> 00:21:43,156
also adapts itself automatically


694
00:21:43,436 --> 00:21:44,686
to the rendering mode that has


695
00:21:44,686 --> 00:21:46,176
been selected by MapKit JS for


696
00:21:46,176 --> 00:21:46,466
your map.


697
00:21:46,966 --> 00:21:48,236
So, we've seen that if we have


698
00:21:48,236 --> 00:21:49,666
Client-Side Rendering Mode or


699
00:21:49,666 --> 00:21:51,616
Label Only Client-Side Rendering


700
00:21:51,616 --> 00:21:53,186
Mode, we are able to hide


701
00:21:53,186 --> 00:21:54,926
labels, so we can display the


702
00:21:54,926 --> 00:21:56,296
title and the subtitle of your


703
00:21:56,296 --> 00:21:57,226
annotations on the map.


704
00:21:57,566 --> 00:21:59,166
And this is what is shown on the


705
00:21:59,166 --> 00:21:59,816
left-hand side.


706
00:22:00,576 --> 00:22:02,196
If you have Server-Side


707
00:22:02,196 --> 00:22:03,926
Rendering, the labels are built


708
00:22:03,926 --> 00:22:05,766
into tiles and we cannot hide


709
00:22:05,766 --> 00:22:05,966
them.


710
00:22:05,966 --> 00:22:07,506
So, if you see the map on the


711
00:22:07,506 --> 00:22:08,636
right-hand side, we see that we


712
00:22:08,636 --> 00:22:10,006
have many more labels because


713
00:22:10,006 --> 00:22:11,366
none of them have been hidden.


714
00:22:11,846 --> 00:22:13,166
So, in order to be able to show


715
00:22:13,166 --> 00:22:16,336
our annotations legibly, we only


716
00:22:16,336 --> 00:22:17,836
show the annotation balloon and


717
00:22:17,836 --> 00:22:19,236
the labels are not shown on the


718
00:22:19,236 --> 00:22:19,466
map.


719
00:22:19,906 --> 00:22:21,426
We can still see the title and


720
00:22:21,426 --> 00:22:22,806
the subtitle of these


721
00:22:22,806 --> 00:22:24,976
annotations when we select them


722
00:22:24,976 --> 00:22:26,866
by using a callout bubble as in


723
00:22:26,866 --> 00:22:27,446
this example.


724
00:22:27,796 --> 00:22:29,066
And custom annotations, will


725
00:22:29,066 --> 00:22:31,156
also make use of these callout


726
00:22:31,306 --> 00:22:33,966
bubble to show the title and


727
00:22:34,756 --> 00:22:35,626
subtitle.


728
00:22:35,626 --> 00:22:37,016
Finally, the market annotations


729
00:22:37,016 --> 00:22:38,616
provide a lot of standing


730
00:22:38,616 --> 00:22:39,066
options.


731
00:22:39,626 --> 00:22:41,016
So, this is the default for


732
00:22:41,016 --> 00:22:41,816
market annotation.


733
00:22:41,816 --> 00:22:43,596
You create an annotation with a


734
00:22:43,596 --> 00:22:45,776
coordinate and some properties


735
00:22:45,776 --> 00:22:47,176
such as title and subtitle, and


736
00:22:47,176 --> 00:22:49,736
this is the basic default


737
00:22:49,736 --> 00:22:50,346
rendering.


738
00:22:50,576 --> 00:22:52,346
You have glyph image which is a


739
00:22:52,346 --> 00:22:54,296
pin shown in the balloon, and it


740
00:22:54,386 --> 00:22:55,686
comes up with a red color.


741
00:22:57,036 --> 00:22:59,216
You can change that color to any


742
00:22:59,216 --> 00:23:00,256
CSS color value.


743
00:23:00,256 --> 00:23:02,176
So, here, I've used a green


744
00:23:02,176 --> 00:23:03,406
color for my balloon.


745
00:23:03,836 --> 00:23:05,316
You can also change the color of


746
00:23:05,316 --> 00:23:06,136
the glyph.


747
00:23:06,136 --> 00:23:07,506
So, the glyph can only have one


748
00:23:07,506 --> 00:23:07,846
color.


749
00:23:08,156 --> 00:23:10,056
So, in this case, I switched


750
00:23:10,056 --> 00:23:11,716
from the default white to a


751
00:23:11,716 --> 00:23:13,816
yellow color.


752
00:23:13,986 --> 00:23:15,256
You can change the image of the


753
00:23:15,256 --> 00:23:15,556
glyph.


754
00:23:15,556 --> 00:23:16,946
So, from the default pin that is


755
00:23:16,946 --> 00:23:19,166
provided by MapKit JS, to any


756
00:23:19,166 --> 00:23:20,756
raster image that you can


757
00:23:20,756 --> 00:23:21,166
provide.


758
00:23:21,216 --> 00:23:22,866
So, in this case, I've provided


759
00:23:22,866 --> 00:23:23,966
this image.


760
00:23:23,966 --> 00:23:25,526
You can give several sources for


761
00:23:25,526 --> 00:23:27,336
your images for different pixel


762
00:23:27,336 --> 00:23:27,796
ratios.


763
00:23:29,176 --> 00:23:31,396
When the annotation is selected,


764
00:23:31,536 --> 00:23:33,106
it becomes bigger, so you have


765
00:23:33,106 --> 00:23:34,646
more room to show more details


766
00:23:34,646 --> 00:23:35,656
in your glyph.


767
00:23:35,706 --> 00:23:37,136
So, in this case, we can also


768
00:23:37,136 --> 00:23:39,476
specify a selected glyph image,


769
00:23:39,476 --> 00:23:40,896
which is different from the


770
00:23:40,896 --> 00:23:41,596
original one.


771
00:23:43,076 --> 00:23:44,766
Finally, instead of an image,


772
00:23:44,766 --> 00:23:46,026
you can change the glyph by


773
00:23:46,026 --> 00:23:47,486
using some text.


774
00:23:47,486 --> 00:23:49,756
We recommend that you stick to


775
00:23:49,756 --> 00:23:51,886
very, short strings such as one


776
00:23:51,886 --> 00:23:53,856
to three characters, and in this


777
00:23:53,856 --> 00:23:55,206
case, I'm just using the Letter


778
00:23:55,206 --> 00:23:55,436
M.


779
00:23:55,996 --> 00:23:57,166
When the glyph text and the


780
00:23:57,166 --> 00:23:58,776
glyph image are both specified,


781
00:23:58,776 --> 00:24:00,796
then the glyph text is shown.


782
00:24:01,556 --> 00:24:03,006
So, now that we know how to


783
00:24:03,006 --> 00:24:04,746
display marker annotations, we


784
00:24:04,746 --> 00:24:06,376
can go crazy and put a lot of


785
00:24:06,376 --> 00:24:07,236
annotations on our map.


786
00:24:07,686 --> 00:24:08,896
So, this is the result of doing


787
00:24:08,896 --> 00:24:11,246
searches for cafes and bars in


788
00:24:11,246 --> 00:24:11,676
Paris.


789
00:24:11,676 --> 00:24:12,716
And I've styled them slightly


790
00:24:12,716 --> 00:24:14,416
differently to distinguish them


791
00:24:14,416 --> 00:24:15,096
from one another.


792
00:24:15,586 --> 00:24:16,996
But the problem is that there is


793
00:24:16,996 --> 00:24:19,176
a very dense number of


794
00:24:19,176 --> 00:24:20,916
annotations in the same area.


795
00:24:21,486 --> 00:24:23,576
Fortunately, we have two ways in


796
00:24:23,576 --> 00:24:25,336
MapKit JS to deal with this sort


797
00:24:25,336 --> 00:24:25,856
of clutter.


798
00:24:26,466 --> 00:24:27,676
The first one is to set a


799
00:24:27,676 --> 00:24:29,406
display priority property on


800
00:24:29,406 --> 00:24:30,096
annotations.


801
00:24:30,776 --> 00:24:32,226
What this means is that when two


802
00:24:32,226 --> 00:24:33,466
annotations collide, the


803
00:24:33,466 --> 00:24:34,596
annotation with the highest


804
00:24:34,596 --> 00:24:35,866
display property, which is a


805
00:24:35,866 --> 00:24:39,466
number, will collide out the


806
00:24:39,466 --> 00:24:40,666
annotation with the lowest


807
00:24:40,726 --> 00:24:41,596
display priority.


808
00:24:42,236 --> 00:24:43,936
So, in this case, we can see


809
00:24:43,936 --> 00:24:45,176
that many annotations have been


810
00:24:45,176 --> 00:24:45,816
collided out.


811
00:24:46,006 --> 00:24:47,726
When you zoom in and out, these


812
00:24:47,726 --> 00:24:49,266
collisions run again, so that


813
00:24:49,266 --> 00:24:51,066
zooming in for instance, will


814
00:24:51,156 --> 00:24:52,506
let you discover more


815
00:24:52,506 --> 00:24:53,046
annotations.


816
00:24:53,496 --> 00:24:54,376
And when they have the same


817
00:24:54,376 --> 00:24:56,356
display priority, we will use


818
00:24:56,356 --> 00:24:57,466
the one that appears at the


819
00:24:57,466 --> 00:24:59,336
bottom of the screen as the more


820
00:24:59,636 --> 00:25:01,756
-- as the one with the highest


821
00:25:02,876 --> 00:25:03,286
priority.


822
00:25:03,286 --> 00:25:04,236
Another way to deal with


823
00:25:04,236 --> 00:25:05,746
clutter, is to use clustering


824
00:25:05,746 --> 00:25:06,676
instead of these display


825
00:25:06,676 --> 00:25:07,266
priorities.


826
00:25:07,696 --> 00:25:08,686
So, in this case, when two


827
00:25:08,686 --> 00:25:10,256
annotations that have the same


828
00:25:10,256 --> 00:25:11,706
clustering identifier, which is


829
00:25:11,706 --> 00:25:13,036
a property that can be set on


830
00:25:13,036 --> 00:25:14,736
marker annotations, and is a


831
00:25:14,736 --> 00:25:16,406
simple string, when two


832
00:25:16,406 --> 00:25:17,896
annotations that collide and


833
00:25:17,896 --> 00:25:18,966
have the same clustering


834
00:25:18,966 --> 00:25:20,956
identifier, they are replaced by


835
00:25:20,956 --> 00:25:22,396
a single annotation that will


836
00:25:22,396 --> 00:25:23,856
represent both of them, or more


837
00:25:23,856 --> 00:25:25,316
than two of them of course if


838
00:25:25,316 --> 00:25:26,506
more than two annotations


839
00:25:26,506 --> 00:25:26,866
collide.


840
00:25:26,996 --> 00:25:28,906
So, in this case, we see that


841
00:25:28,906 --> 00:25:30,436
some of the annotations can be


842
00:25:30,436 --> 00:25:32,456
shown by themselves because they


843
00:25:32,456 --> 00:25:35,176
have no neighbor, but in the


844
00:25:35,176 --> 00:25:37,196
dense areas in the center, we


845
00:25:37,196 --> 00:25:39,186
have clustered several


846
00:25:39,186 --> 00:25:40,086
annotations together.


847
00:25:40,546 --> 00:25:42,306
When a cluster is created, we


848
00:25:42,306 --> 00:25:43,446
use a marker annotation to


849
00:25:43,446 --> 00:25:44,676
represent it and we use the


850
00:25:44,676 --> 00:25:45,856
glyph to show how many


851
00:25:45,856 --> 00:25:47,366
annotations are in the cluster.


852
00:25:47,876 --> 00:25:50,066
You can also change the behavior


853
00:25:50,066 --> 00:25:51,006
-- not the behavior, the


854
00:25:51,006 --> 00:25:53,226
appearance of your clusters, by


855
00:25:53,226 --> 00:25:56,176
specifying a new style or a new


856
00:25:56,176 --> 00:25:57,076
kind of annotation.


857
00:25:57,756 --> 00:25:59,526
And now, we'll do a small demo


858
00:25:59,826 --> 00:26:01,466
to show these annotations in


859
00:26:01,466 --> 00:26:01,826
action.


860
00:26:06,276 --> 00:26:08,856
So, in this demo, which should


861
00:26:10,456 --> 00:26:12,886
appear here -- in this demo, we


862
00:26:12,886 --> 00:26:15,656
will use a map and the data that


863
00:26:15,656 --> 00:26:18,306
we will display is Bigfoot


864
00:26:18,306 --> 00:26:19,866
Sightings that Have Occurred in


865
00:26:19,866 --> 00:26:20,386
this Area.


866
00:26:20,796 --> 00:26:23,166
So, after this session, or maybe


867
00:26:23,166 --> 00:26:25,146
this weekend when you are done


868
00:26:25,146 --> 00:26:26,926
with the conference, you can


869
00:26:26,926 --> 00:26:29,066
maybe go explore the woods of


870
00:26:29,066 --> 00:26:30,396
Northern California and see if


871
00:26:30,396 --> 00:26:33,776
you can find Bigfoot.


872
00:26:33,776 --> 00:26:37,086
I have created a map which I


873
00:26:37,086 --> 00:26:38,446
have initialized in the manner


874
00:26:38,446 --> 00:26:40,966
that I've displayed in the


875
00:26:40,966 --> 00:26:41,786
previous slides.


876
00:26:42,746 --> 00:26:46,086
And what I have done, is I have


877
00:26:46,086 --> 00:26:47,646
gathered a list of Bigfoot


878
00:26:47,646 --> 00:26:49,246
annotations -- of Bigfoot


879
00:26:49,246 --> 00:26:51,716
sightings, sorry, including the


880
00:26:51,716 --> 00:26:53,466
location, the year in which they


881
00:26:53,466 --> 00:26:56,206
occurred, and some other


882
00:26:56,206 --> 00:26:56,896
information.


883
00:26:57,446 --> 00:26:58,696
So, what I will want to do is I


884
00:26:58,696 --> 00:26:59,476
will want to use these


885
00:26:59,476 --> 00:27:00,716
annotations, show them on the


886
00:27:00,716 --> 00:27:02,416
map, with marker annotation.


887
00:27:02,416 --> 00:27:04,296
So, let me start by creating a


888
00:27:04,296 --> 00:27:06,896
function to translate a sighting


889
00:27:06,896 --> 00:27:08,136
object which has all these


890
00:27:08,136 --> 00:27:09,986
properties, into a marker


891
00:27:09,986 --> 00:27:10,616
annotation.


892
00:27:11,796 --> 00:27:13,486
So, when I get a sighting, I


893
00:27:13,486 --> 00:27:14,966
want the coordinate of the


894
00:27:14,966 --> 00:27:16,126
sighting to be used as the


895
00:27:16,126 --> 00:27:17,186
coordinate of my marker


896
00:27:17,186 --> 00:27:17,776
annotation.


897
00:27:18,536 --> 00:27:20,156
And these sightings have several


898
00:27:20,156 --> 00:27:21,286
other properties, such as the


899
00:27:21,286 --> 00:27:22,376
year of the sighting, which I


900
00:27:22,376 --> 00:27:24,336
will display in the title.


901
00:27:24,646 --> 00:27:26,806
This comes from a database put


902
00:27:26,806 --> 00:27:28,446
together by the Bigfoot Field


903
00:27:28,446 --> 00:27:30,426
Researchers Organization.


904
00:27:30,756 --> 00:27:32,706
So, I will show the idea so that


905
00:27:32,706 --> 00:27:33,936
if you are interested in more


906
00:27:33,936 --> 00:27:35,106
details about that sighting, you


907
00:27:35,106 --> 00:27:37,596
can go look at that database and


908
00:27:37,596 --> 00:27:39,486
find even more information.


909
00:27:39,956 --> 00:27:41,986
And finally, I'm ready to create


910
00:27:41,986 --> 00:27:43,216
a marker annotation with that


911
00:27:43,216 --> 00:27:44,706
coordinate and these options


912
00:27:44,706 --> 00:27:45,406
that I've created.


913
00:27:46,306 --> 00:27:47,766
So, now that I know how to set


914
00:27:47,766 --> 00:27:49,646
up a marker annotation for a


915
00:27:49,646 --> 00:27:52,616
sighting, I will get the


916
00:27:52,616 --> 00:27:54,756
sightings that I've prepared.


917
00:27:56,076 --> 00:27:58,426
And with this list of sightings,


918
00:27:58,816 --> 00:28:00,566
I will create an annotation for


919
00:28:00,566 --> 00:28:03,526
each of them.


920
00:28:03,576 --> 00:28:05,746
I will then make sure that my


921
00:28:05,746 --> 00:28:07,366
sightings are shown on the map.


922
00:28:07,796 --> 00:28:09,066
My annotations are shown on the


923
00:28:09,066 --> 00:28:09,256
map.


924
00:28:09,516 --> 00:28:10,726
And I will use the Show Items


925
00:28:10,726 --> 00:28:12,366
method, which is very convenient


926
00:28:12,366 --> 00:28:14,316
because not only it ensures that


927
00:28:14,316 --> 00:28:16,086
the items are visible, but also


928
00:28:16,086 --> 00:28:17,986
that they are added to the map.


929
00:28:18,626 --> 00:28:20,396
And since I'm doing a webpage, I


930
00:28:20,396 --> 00:28:21,856
can also add some extra


931
00:28:21,856 --> 00:28:23,376
information on my page such as


932
00:28:23,376 --> 00:28:24,656
how many sightings there were in


933
00:28:24,656 --> 00:28:25,126
this area.


934
00:28:26,536 --> 00:28:29,316
So, let me make sure that I save


935
00:28:30,666 --> 00:28:33,926
and by reloading, I now see a


936
00:28:33,926 --> 00:28:36,236
map with 60 sightings on it.


937
00:28:36,696 --> 00:28:38,166
So, all of these annotations are


938
00:28:38,166 --> 00:28:39,816
sightings and we run into the


939
00:28:39,816 --> 00:28:40,686
problem that I've just


940
00:28:40,686 --> 00:28:42,196
highlighted which is that in


941
00:28:42,196 --> 00:28:44,086
this park area, I can see lots


942
00:28:44,086 --> 00:28:45,726
of sightings happening, and they


943
00:28:45,726 --> 00:28:46,836
all overlap each other.


944
00:28:47,196 --> 00:28:48,936
And even as I zoom in, I can see


945
00:28:48,936 --> 00:28:50,416
that there's still lots of


946
00:28:50,716 --> 00:28:52,236
clutter, so I will clean that up


947
00:28:52,616 --> 00:28:54,066
using the Display Priority


948
00:28:54,506 --> 00:28:56,506
Property on Annotations.


949
00:28:57,886 --> 00:28:59,916
So, in order to choose a display


950
00:28:59,916 --> 00:29:01,416
priority, what I will use is I


951
00:29:01,416 --> 00:29:04,016
will use a very important


952
00:29:04,016 --> 00:29:06,306
property of the sightings which


953
00:29:06,306 --> 00:29:07,306
is whether they were clear


954
00:29:07,306 --> 00:29:07,786
sightings.


955
00:29:07,786 --> 00:29:09,106
So, if someone really, really


956
00:29:09,106 --> 00:29:11,056
saw bigfoot, or maybe they just


957
00:29:11,056 --> 00:29:13,536
heard it or saw some traces of


958
00:29:13,536 --> 00:29:13,756
it.


959
00:29:14,126 --> 00:29:15,806
So, I have this clear flag which


960
00:29:15,806 --> 00:29:17,296
I will use to set my display


961
00:29:17,296 --> 00:29:17,826
priority.


962
00:29:18,346 --> 00:29:20,116
Display priorities a number and


963
00:29:20,116 --> 00:29:21,346
these priorities can be pretty


964
00:29:21,346 --> 00:29:22,016
arbitrary.


965
00:29:22,306 --> 00:29:24,416
So, we provide predefined


966
00:29:24,526 --> 00:29:26,186
values, such as required,


967
00:29:26,186 --> 00:29:27,376
meaning that your annotation


968
00:29:27,376 --> 00:29:29,026
must always be shown on the map,


969
00:29:29,266 --> 00:29:30,966
but also, high and low display


970
00:29:30,966 --> 00:29:31,546
priority.


971
00:29:31,896 --> 00:29:33,176
So, when the sighting is clear,


972
00:29:33,176 --> 00:29:34,466
I will set a high display


973
00:29:34,466 --> 00:29:35,036
priority.


974
00:29:35,356 --> 00:29:36,916
When it's not, I will set a low


975
00:29:36,916 --> 00:29:37,736
display priority.


976
00:29:38,766 --> 00:29:40,296
And finally, I will also encode


977
00:29:40,296 --> 00:29:41,746
that information as the color of


978
00:29:41,746 --> 00:29:43,306
my annotation so that the users


979
00:29:43,306 --> 00:29:45,636
can understand better why an


980
00:29:45,636 --> 00:29:47,416
annotation was shown or now.


981
00:29:47,836 --> 00:29:49,846
So, when it's brown, it's a


982
00:29:49,846 --> 00:29:51,226
clear annotation and when it's


983
00:29:51,226 --> 00:29:52,526
great, it was not so clear.


984
00:29:53,276 --> 00:29:54,236
So, let's see the difference


985
00:29:54,236 --> 00:29:55,036
that this makes.


986
00:29:56,856 --> 00:29:58,316
So, now you can see that the map


987
00:29:58,316 --> 00:30:00,316
is much cleaner because all of


988
00:30:00,316 --> 00:30:01,696
the collisions have been a


989
00:30:01,696 --> 00:30:02,876
result.


990
00:30:02,876 --> 00:30:04,376
You can see that some of the


991
00:30:04,376 --> 00:30:05,296
annotations are brown.


992
00:30:05,296 --> 00:30:06,046
So, these are the clear


993
00:30:06,046 --> 00:30:06,526
sightings.


994
00:30:06,526 --> 00:30:07,976
These are probably the ones that


995
00:30:07,976 --> 00:30:10,246
are the most interesting ones to


996
00:30:10,246 --> 00:30:11,376
visit first.


997
00:30:11,666 --> 00:30:13,476
But you can also see that if I


998
00:30:13,476 --> 00:30:15,536
zoom in on the map, then new


999
00:30:15,536 --> 00:30:17,426
sightings are being revealed.


1000
00:30:17,736 --> 00:30:19,476
So, your users can explore the


1001
00:30:19,476 --> 00:30:21,716
map and find out about where


1002
00:30:21,716 --> 00:30:24,356
they can hope to see Bigfoot.


1003
00:30:24,476 --> 00:30:27,436
I will conclude by this demo, by


1004
00:30:27,436 --> 00:30:29,776
adding, another piece of


1005
00:30:29,776 --> 00:30:31,026
information to my map.


1006
00:30:31,026 --> 00:30:33,776
I will change the glyph to be


1007
00:30:33,846 --> 00:30:37,436
either an icon of Bigfoot which


1008
00:30:37,436 --> 00:30:37,956
I've prepared.


1009
00:30:37,956 --> 00:30:40,986
So, this is a simple PNG image


1010
00:30:41,946 --> 00:30:43,286
which I will use for the clear


1011
00:30:43,286 --> 00:30:45,916
sightings, and in case the


1012
00:30:45,916 --> 00:30:47,406
sighting is not so clear, I will


1013
00:30:47,406 --> 00:30:49,876
make that more explicit by


1014
00:30:49,876 --> 00:30:52,676
setting the glyph text to be a


1015
00:30:52,676 --> 00:30:53,356
question mark.


1016
00:30:54,876 --> 00:30:57,906
And now, what I can see, is that


1017
00:30:58,666 --> 00:31:00,966
these questionable sightings are


1018
00:31:01,006 --> 00:31:01,836
a question mark.


1019
00:31:02,346 --> 00:31:03,936
And the Bigfoot sightings that


1020
00:31:03,936 --> 00:31:05,556
are really clear, have the


1021
00:31:05,556 --> 00:31:06,316
Bigfoot icon.


1022
00:31:06,826 --> 00:31:10,736
So, this includes the first


1023
00:31:10,736 --> 00:31:11,156
demo.


1024
00:31:11,596 --> 00:31:12,666
Thank you.


1025
00:31:13,516 --> 00:31:15,786
[ Applause ]


1026
00:31:16,286 --> 00:31:20,036
So, in this demo, we show how to


1027
00:31:20,156 --> 00:31:21,996
create marker annotations from


1028
00:31:21,996 --> 00:31:24,336
JavaScript objects, how to set


1029
00:31:24,336 --> 00:31:25,476
the display priority of


1030
00:31:25,476 --> 00:31:27,166
annotations to unclutter our


1031
00:31:27,166 --> 00:31:29,226
map, and how to style these


1032
00:31:29,226 --> 00:31:30,666
annotations with colored glyph


1033
00:31:30,666 --> 00:31:31,916
image, glyph text, so that we


1034
00:31:31,916 --> 00:31:33,626
can translate the information


1035
00:31:33,626 --> 00:31:36,996
that we have onto the map.


1036
00:31:37,506 --> 00:31:39,666
Sometimes, market annotation is


1037
00:31:39,666 --> 00:31:41,326
very convenient, but may not be


1038
00:31:41,326 --> 00:31:43,476
exactly what you want to use on


1039
00:31:43,476 --> 00:31:43,926
your map.


1040
00:31:44,076 --> 00:31:45,516
For instance, if you want to use


1041
00:31:45,516 --> 00:31:47,186
the logo of your company and it


1042
00:31:47,186 --> 00:31:48,906
has more than one color, then


1043
00:31:48,906 --> 00:31:50,246
you cannot choose a glyph image


1044
00:31:50,246 --> 00:31:52,666
because it's restricted to just


1045
00:31:52,666 --> 00:31:53,716
one color.


1046
00:31:53,716 --> 00:31:54,896
Sometimes the shape of the


1047
00:31:54,896 --> 00:31:56,326
annotation is not really the one


1048
00:31:56,326 --> 00:31:57,936
that you are going for, so in


1049
00:31:57,936 --> 00:31:59,326
this case, you may provide


1050
00:31:59,326 --> 00:32:01,056
images to represent your


1051
00:32:01,056 --> 00:32:02,026
annotations instead.


1052
00:32:02,306 --> 00:32:03,266
So, in this case, I have the


1053
00:32:03,266 --> 00:32:05,666
small sticker look to mark


1054
00:32:05,666 --> 00:32:06,986
places where -- which I have


1055
00:32:06,986 --> 00:32:07,946
visited recently.


1056
00:32:09,066 --> 00:32:11,206
So, I can use a raster image for


1057
00:32:11,206 --> 00:32:12,056
these annotations.


1058
00:32:12,346 --> 00:32:13,946
The title and subtitle are shown


1059
00:32:13,946 --> 00:32:15,306
in a callout bubble, just like


1060
00:32:15,306 --> 00:32:16,616
in Server-Side Rendering for


1061
00:32:16,616 --> 00:32:17,536
marker annotations.


1062
00:32:17,846 --> 00:32:18,886
And to create an image


1063
00:32:18,886 --> 00:32:20,706
annotation, this is very similar


1064
00:32:20,706 --> 00:32:23,096
to a marker annotation, but with


1065
00:32:23,096 --> 00:32:24,466
the additional property that


1066
00:32:24,466 --> 00:32:25,706
much be provided which is the


1067
00:32:25,706 --> 00:32:26,986
URL for the images.


1068
00:32:27,316 --> 00:32:28,246
And here, you can see two


1069
00:32:28,246 --> 00:32:29,826
different URLs for two different


1070
00:32:29,826 --> 00:32:30,556
pixel ratios.


1071
00:32:32,466 --> 00:32:34,836
Another way that I could


1072
00:32:34,836 --> 00:32:36,236
represent a notation is using


1073
00:32:36,236 --> 00:32:37,726
the classic pin example.


1074
00:32:38,226 --> 00:32:40,786
And pins usually come up in many


1075
00:32:40,786 --> 00:32:41,486
different colors.


1076
00:32:41,696 --> 00:32:42,776
And the problem is that if I


1077
00:32:42,776 --> 00:32:44,416
want to provide a lot of


1078
00:32:44,416 --> 00:32:45,646
different colors, I will need to


1079
00:32:45,646 --> 00:32:46,706
provide a lot of different


1080
00:32:46,706 --> 00:32:47,206
images.


1081
00:32:47,666 --> 00:32:49,006
And this can quickly become


1082
00:32:49,046 --> 00:32:49,686
unmanageable.


1083
00:32:49,686 --> 00:32:51,696
So instead, what I can do is I


1084
00:32:51,696 --> 00:32:53,096
can use a custom annotation.


1085
00:32:53,096 --> 00:32:54,386
And in this case, instead of an


1086
00:32:54,386 --> 00:32:56,366
image, I will use any DOM


1087
00:32:56,366 --> 00:32:57,666
Element to represent my


1088
00:32:57,666 --> 00:32:58,266
annotation.


1089
00:32:59,666 --> 00:33:01,416
And these elements are created


1090
00:33:01,416 --> 00:33:03,626
on demand for your annotations.


1091
00:33:03,866 --> 00:33:04,986
So, let's see an example.


1092
00:33:04,986 --> 00:33:07,906
Here, if I wanted to do just


1093
00:33:07,906 --> 00:33:09,876
some color for any pin that


1094
00:33:09,876 --> 00:33:12,746
shows up on my map, then I will


1095
00:33:12,746 --> 00:33:13,906
create an annotation with a


1096
00:33:13,906 --> 00:33:14,786
coordinate [inaudible].


1097
00:33:14,786 --> 00:33:16,496
And a third parameter which is a


1098
00:33:16,496 --> 00:33:18,086
function that we will return a


1099
00:33:18,086 --> 00:33:19,536
DOM Element for that annotation.


1100
00:33:19,966 --> 00:33:21,016
So, in this case, I will use a


1101
00:33:21,016 --> 00:33:21,856
Canvas Element.


1102
00:33:22,356 --> 00:33:23,636
I create a Canvas Element.


1103
00:33:23,636 --> 00:33:24,906
I get .Context.


1104
00:33:24,906 --> 00:33:26,156
I drew a pin image in that


1105
00:33:26,156 --> 00:33:26,656
Canvas.


1106
00:33:27,056 --> 00:33:28,936
I changed the head of the pin to


1107
00:33:28,936 --> 00:33:30,366
the color that I want, and I


1108
00:33:30,366 --> 00:33:31,256
returned to Canvas.


1109
00:33:31,256 --> 00:33:32,966
And this is the Canvas that is


1110
00:33:32,966 --> 00:33:34,376
shown on the map for this


1111
00:33:34,376 --> 00:33:35,116
annotation.


1112
00:33:37,366 --> 00:33:38,826
So, these were the three kinds


1113
00:33:38,826 --> 00:33:39,936
of annotations that you could


1114
00:33:39,936 --> 00:33:40,306
use.


1115
00:33:40,736 --> 00:33:42,336
But sometimes you want to show


1116
00:33:42,336 --> 00:33:44,716
more than just a single location


1117
00:33:44,716 --> 00:33:47,026
or a set of single locations.


1118
00:33:47,156 --> 00:33:48,796
Sometimes you want to call -- to


1119
00:33:48,796 --> 00:33:50,826
show complete areas on your map.


1120
00:33:51,906 --> 00:33:53,616
And to do that, we have overlays


1121
00:33:53,616 --> 00:33:54,976
and we have -- we provide three


1122
00:33:54,976 --> 00:33:56,206
different kinds of overlays.


1123
00:33:56,716 --> 00:33:58,466
And here are some examples of


1124
00:33:58,466 --> 00:33:59,366
how you could use them.


1125
00:34:00,116 --> 00:34:02,306
With a circle overlay, you can


1126
00:34:02,306 --> 00:34:03,926
show all of the distances -- or


1127
00:34:03,926 --> 00:34:05,176
the distances from a point.


1128
00:34:05,356 --> 00:34:06,836
With a polyline overlay, we can


1129
00:34:06,836 --> 00:34:08,315
show a route between two points.


1130
00:34:08,775 --> 00:34:10,106
And you can highlight


1131
00:34:10,326 --> 00:34:12,585
geographical areas such as a


1132
00:34:12,585 --> 00:34:14,826
state, the boundaries of a


1133
00:34:14,826 --> 00:34:16,335
country or a city, etcetera,


1134
00:34:16,576 --> 00:34:17,706
using a polygon overlay.


1135
00:34:18,936 --> 00:34:21,156
So, here is an example of a


1136
00:34:21,156 --> 00:34:21,916
circle overlay.


1137
00:34:22,356 --> 00:34:25,246
So, now I'm in Brussels and I've


1138
00:34:25,246 --> 00:34:26,646
centered my map on the Manneken


1139
00:34:26,646 --> 00:34:26,976
Pis.


1140
00:34:27,806 --> 00:34:30,406
And this is right in the center


1141
00:34:30,406 --> 00:34:31,996
of the city and this is a very


1142
00:34:31,996 --> 00:34:33,025
nice place to walk around.


1143
00:34:33,536 --> 00:34:35,496
So, by using concentric circles


1144
00:34:35,496 --> 00:34:38,716
around my location of increasing


1145
00:34:38,716 --> 00:34:40,386
radius, I can see walking


1146
00:34:40,386 --> 00:34:41,025
distances.


1147
00:34:41,416 --> 00:34:43,795
So, here I've created overlays


1148
00:34:43,795 --> 00:34:44,996
with their coordinates, and the


1149
00:34:44,996 --> 00:34:46,255
second parameter that you need


1150
00:34:46,255 --> 00:34:48,426
to give to a circle overlay, is


1151
00:34:48,426 --> 00:34:49,876
a radius expressed in meter.


1152
00:34:50,156 --> 00:34:52,136
So here, every overlay has a


1153
00:34:52,136 --> 00:34:54,106
radius starting from 400 meters,


1154
00:34:54,106 --> 00:34:55,436
increasing by 400 meters.


1155
00:34:55,436 --> 00:34:56,815
So, 400, 800, etcetera.


1156
00:34:57,726 --> 00:35:00,376
So, I can see in the right, that


1157
00:35:00,376 --> 00:35:02,776
there is a museum for comic


1158
00:35:02,776 --> 00:35:03,316
strip art.


1159
00:35:03,316 --> 00:35:04,316
That sounds interesting.


1160
00:35:04,316 --> 00:35:05,666
And it looks like it could be


1161
00:35:05,666 --> 00:35:08,706
between 1200 and then 1600


1162
00:35:08,706 --> 00:35:09,046
meters.


1163
00:35:09,046 --> 00:35:10,276
So, about 10 to 15 minutes'


1164
00:35:10,276 --> 00:35:11,046
walk.


1165
00:35:11,346 --> 00:35:13,366
One important thing that I can


1166
00:35:13,366 --> 00:35:14,676
do with overlays, is I can also


1167
00:35:14,676 --> 00:35:15,226
style them.


1168
00:35:16,156 --> 00:35:18,706
So here, to represent this style


1169
00:35:18,706 --> 00:35:20,826
of overlay, I can use a MapKit


1170
00:35:20,826 --> 00:35:23,776
Style Object, which has several


1171
00:35:23,776 --> 00:35:25,356
properties such as the line


1172
00:35:25,356 --> 00:35:26,486
width, the line depth, the


1173
00:35:26,486 --> 00:35:28,566
stroke color which again, can be


1174
00:35:28,566 --> 00:35:29,516
any CSS color.


1175
00:35:29,956 --> 00:35:32,576
By default, circle overlays are


1176
00:35:32,656 --> 00:35:35,606
filled with blue color, but in


1177
00:35:35,606 --> 00:35:36,686
this case, I want them to be


1178
00:35:36,686 --> 00:35:37,226
transparent.


1179
00:35:37,226 --> 00:35:39,246
So, I set the field color to be


1180
00:35:39,246 --> 00:35:39,476
null.


1181
00:35:39,716 --> 00:35:42,846
I have decided that I want to go


1182
00:35:42,846 --> 00:35:45,086
visit this comic strip museum,


1183
00:35:45,656 --> 00:35:47,516
and MapKit JS as we will show,


1184
00:35:47,516 --> 00:35:49,956
has services that can give you


1185
00:35:50,036 --> 00:35:51,616
walking and driving directions


1186
00:35:51,616 --> 00:35:52,396
between two points.


1187
00:35:52,816 --> 00:35:54,186
So, in this case, I've asked for


1188
00:35:54,186 --> 00:35:56,766
directions from where I was, the


1189
00:35:56,766 --> 00:35:58,036
Manneken Pis, to where I want to


1190
00:35:58,036 --> 00:35:58,356
go.


1191
00:35:58,776 --> 00:36:01,006
I receive as a result, a route


1192
00:36:01,006 --> 00:36:02,286
which I represent on this map


1193
00:36:02,286 --> 00:36:03,436
using a polyline overlay.


1194
00:36:03,746 --> 00:36:05,356
And a polyline overlay is a list


1195
00:36:05,356 --> 00:36:05,776
of points.


1196
00:36:05,776 --> 00:36:07,556
So, these are all coordinates


1197
00:36:07,936 --> 00:36:09,046
linked to each other.


1198
00:36:09,046 --> 00:36:11,716
I can style them by setting the


1199
00:36:11,716 --> 00:36:13,506
Stroke Opacity for instance, or


1200
00:36:13,506 --> 00:36:14,816
a thick line width to make sure


1201
00:36:14,816 --> 00:36:16,516
that it shows up on my map.


1202
00:36:18,166 --> 00:36:19,506
And the last example is a


1203
00:36:19,506 --> 00:36:20,366
polygon overlay.


1204
00:36:20,636 --> 00:36:21,826
This is very useful to do for


1205
00:36:21,826 --> 00:36:23,456
instance data visualization.


1206
00:36:23,456 --> 00:36:24,546
And here I have a map of the


1207
00:36:24,546 --> 00:36:26,726
United States where every state


1208
00:36:26,996 --> 00:36:28,216
is an overlay of its own.


1209
00:36:28,216 --> 00:36:30,346
A polygon overlay is defined


1210
00:36:30,346 --> 00:36:32,436
again by a list of points, but


1211
00:36:32,436 --> 00:36:35,406
this -- in this case, the shape


1212
00:36:35,406 --> 00:36:36,436
is closed and filled.


1213
00:36:37,536 --> 00:36:40,056
You can even specify lists of


1214
00:36:40,056 --> 00:36:41,666
lists of points to -- for more


1215
00:36:41,666 --> 00:36:42,486
complex scenarios.


1216
00:36:42,486 --> 00:36:43,416
So, for instance, if you have


1217
00:36:43,416 --> 00:36:45,216
enclaves and exclaves, which is


1218
00:36:45,216 --> 00:36:46,746
often the case with real


1219
00:36:46,746 --> 00:36:47,876
geographical areas.


1220
00:36:48,956 --> 00:36:50,776
Annotations and overlays can


1221
00:36:50,776 --> 00:36:53,366
also have an extra piece of


1222
00:36:53,366 --> 00:36:54,676
information added to them, which


1223
00:36:54,676 --> 00:36:56,046
is this data property.


1224
00:36:56,496 --> 00:36:57,746
So, in this example, I want to


1225
00:36:57,746 --> 00:37:00,096
show the population of every


1226
00:37:00,096 --> 00:37:01,606
state of the United States.


1227
00:37:01,726 --> 00:37:04,266
I can show it as a color, which


1228
00:37:04,266 --> 00:37:05,656
gives me a rough idea of the


1229
00:37:05,656 --> 00:37:06,356
population.


1230
00:37:06,706 --> 00:37:08,356
But I can also add some


1231
00:37:08,356 --> 00:37:09,816
additional data so that if the


1232
00:37:09,816 --> 00:37:11,766
user selects one of the


1233
00:37:11,766 --> 00:37:13,646
overlays, so in this case, the


1234
00:37:13,646 --> 00:37:15,926
State of Texas, I can show that


1235
00:37:15,926 --> 00:37:18,246
the actual population is over 20


1236
00:37:18,246 --> 00:37:18,866
million people.


1237
00:37:19,896 --> 00:37:21,736
And overlays are selectable just


1238
00:37:21,736 --> 00:37:22,596
like annotations.


1239
00:37:25,156 --> 00:37:27,976
To show overlays such as the


1240
00:37:27,976 --> 00:37:29,776
route that I showed you or to


1241
00:37:29,776 --> 00:37:31,966
show all of the states, we need


1242
00:37:31,966 --> 00:37:33,326
a lot of data, we need a lot of


1243
00:37:33,326 --> 00:37:34,866
points, so for the states, we


1244
00:37:34,866 --> 00:37:36,516
had thousands and thousands of


1245
00:37:36,516 --> 00:37:36,886
points.


1246
00:37:37,866 --> 00:37:39,496
So, a convenient way to get that


1247
00:37:39,496 --> 00:37:41,396
data into your program, is to


1248
00:37:41,396 --> 00:37:42,356
use GeoJSON Import.


1249
00:37:42,356 --> 00:37:43,826
So, if you have a GeoJSON data


1250
00:37:43,826 --> 00:37:45,296
file, then you can import it


1251
00:37:45,296 --> 00:37:47,336
automatically using MapKit JS.


1252
00:37:47,336 --> 00:37:49,036
Annotations and overlays are


1253
00:37:49,036 --> 00:37:49,536
created.


1254
00:37:49,536 --> 00:37:51,376
So, in this example, this was a


1255
00:37:51,376 --> 00:37:53,056
different data file, which


1256
00:37:53,056 --> 00:37:55,246
contained a lot of UFO


1257
00:37:55,246 --> 00:37:55,836
sightings.


1258
00:37:56,196 --> 00:37:58,286
And this is just a detail of the


1259
00:37:58,286 --> 00:37:58,476
map.


1260
00:37:58,476 --> 00:37:59,796
So, you can see there are lots


1261
00:37:59,796 --> 00:38:01,566
of these sightings.


1262
00:38:02,396 --> 00:38:04,336
And all of these annotations and


1263
00:38:04,336 --> 00:38:05,176
overlays are created


1264
00:38:05,176 --> 00:38:06,596
automatically and can of course


1265
00:38:06,596 --> 00:38:08,456
be customized using some


1266
00:38:08,456 --> 00:38:09,366
delegate methods.


1267
00:38:10,996 --> 00:38:13,946
Finally, these -- since these


1268
00:38:13,946 --> 00:38:15,866
annotations and these overlays


1269
00:38:15,866 --> 00:38:18,036
can be selected by users, you


1270
00:38:18,036 --> 00:38:19,646
want to listen to events from


1271
00:38:19,646 --> 00:38:20,906
them, as well as you could from


1272
00:38:20,906 --> 00:38:21,176
the map.


1273
00:38:21,826 --> 00:38:23,126
So, you can listen to selection


1274
00:38:23,126 --> 00:38:24,346
and the selection events.


1275
00:38:24,346 --> 00:38:26,096
And we've also seen earlier that


1276
00:38:26,096 --> 00:38:27,766
annotations could be dragged, so


1277
00:38:27,766 --> 00:38:29,016
you can listen to dragging


1278
00:38:29,016 --> 00:38:29,396
events.


1279
00:38:29,396 --> 00:38:30,966
And again, this uses the Add


1280
00:38:30,966 --> 00:38:32,576
Event Listener Method.


1281
00:38:32,576 --> 00:38:34,266
So, for instance, you can use


1282
00:38:34,266 --> 00:38:36,716
Add Event Listener to listen to


1283
00:38:36,716 --> 00:38:38,046
select events from the map,


1284
00:38:38,116 --> 00:38:39,736
which will tell you when an


1285
00:38:39,736 --> 00:38:41,486
annotation or an overlay has


1286
00:38:41,486 --> 00:38:42,146
been selected.


1287
00:38:42,146 --> 00:38:43,236
And we will see an example of


1288
00:38:43,236 --> 00:38:44,216
that in the demo.


1289
00:38:46,096 --> 00:38:48,116
The next section is Enabling


1290
00:38:48,116 --> 00:38:49,716
Rich Interactions with Services,


1291
00:38:49,716 --> 00:38:50,936
and for this section, I will


1292
00:38:50,936 --> 00:38:52,356
give the mic to Melody.


1293
00:38:53,516 --> 00:38:58,500
[ Applause ]


1294
00:39:05,666 --> 00:39:07,216
>> MapKit JS provides you with


1295
00:39:07,216 --> 00:39:08,776
access to three services,


1296
00:39:09,176 --> 00:39:10,816
Geocoding, Search, and


1297
00:39:10,886 --> 00:39:11,536
Directions.


1298
00:39:12,346 --> 00:39:14,126
I'll step through examples of


1299
00:39:14,126 --> 00:39:15,476
each of those, but before that,


1300
00:39:15,476 --> 00:39:16,386
I'll tell you what they have in


1301
00:39:16,386 --> 00:39:16,756
common.


1302
00:39:17,296 --> 00:39:19,876
You can use the services in a


1303
00:39:19,876 --> 00:39:21,546
similar way, with four easy


1304
00:39:21,546 --> 00:39:21,916
steps.


1305
00:39:22,536 --> 00:39:23,806
You first create the service


1306
00:39:23,806 --> 00:39:25,996
object, then you specify the


1307
00:39:25,996 --> 00:39:27,666
request parameters and options,


1308
00:39:28,376 --> 00:39:30,366
then you make the request, and


1309
00:39:30,366 --> 00:39:31,926
finally, handle the asynchronous


1310
00:39:31,926 --> 00:39:33,286
response via a callback


1311
00:39:33,286 --> 00:39:33,676
function.


1312
00:39:34,186 --> 00:39:35,766
So first, let's talk about the


1313
00:39:35,766 --> 00:39:36,326
Geocoder.


1314
00:39:37,916 --> 00:39:39,816
Here's an example of how you can


1315
00:39:39,816 --> 00:39:41,756
use the Geocoder, and it has two


1316
00:39:41,896 --> 00:39:43,716
methods: Lookup and Reverse


1317
00:39:43,716 --> 00:39:44,126
Lookup.


1318
00:39:44,636 --> 00:39:45,986
So, this is if have you an


1319
00:39:46,066 --> 00:39:47,636
address or a place, and you want


1320
00:39:47,636 --> 00:39:49,236
to find the coordinate, or if


1321
00:39:49,236 --> 00:39:50,026
you have the opposite.


1322
00:39:50,026 --> 00:39:51,046
You have a coordinate and you


1323
00:39:51,046 --> 00:39:53,826
want to find the address.


1324
00:39:54,046 --> 00:39:55,386
So, the first step is to create


1325
00:39:55,386 --> 00:39:58,106
your object, which you can


1326
00:39:58,106 --> 00:40:00,056
optionally provide at Gets User


1327
00:40:00,056 --> 00:40:01,086
Location parameter.


1328
00:40:01,696 --> 00:40:02,946
This will allow you to provide


1329
00:40:02,946 --> 00:40:04,886
more context to the geocoder.


1330
00:40:05,376 --> 00:40:06,776
This is useful in the case where


1331
00:40:06,776 --> 00:40:08,346
there are places with the same


1332
00:40:08,346 --> 00:40:09,876
name in multiple locations.


1333
00:40:10,476 --> 00:40:12,206
For example, if you're using the


1334
00:40:12,206 --> 00:40:14,236
geocoder here, you'll be most


1335
00:40:14,316 --> 00:40:15,916
likely to return Brisbane,


1336
00:40:15,916 --> 00:40:17,446
California instead of Brisbane,


1337
00:40:17,446 --> 00:40:17,926
Australia.


1338
00:40:19,456 --> 00:40:21,446
Next, you build the requests.


1339
00:40:21,756 --> 00:40:22,576
Here, we're using this


1340
00:40:22,576 --> 00:40:23,426
convention center.


1341
00:40:23,976 --> 00:40:26,236
And then you can handle the


1342
00:40:26,236 --> 00:40:26,866
response.


1343
00:40:27,596 --> 00:40:28,976
As we mentioned before, the


1344
00:40:28,976 --> 00:40:30,816
geocoder can easily be used to


1345
00:40:30,816 --> 00:40:32,416
place marker annotations.


1346
00:40:32,646 --> 00:40:33,986
So, here we're adding a marker


1347
00:40:33,986 --> 00:40:34,826
annotation to the map.


1348
00:40:35,496 --> 00:40:39,376
And then here we have an example


1349
00:40:39,376 --> 00:40:41,066
of the reverse lookup where we


1350
00:40:41,066 --> 00:40:42,446
have a coordinate, and we want


1351
00:40:42,446 --> 00:40:43,436
to find the address for the


1352
00:40:43,436 --> 00:40:43,856
place.


1353
00:40:44,276 --> 00:40:47,226
So, that's the geocoder.


1354
00:40:47,856 --> 00:40:50,856
Next up we have service context.


1355
00:40:51,256 --> 00:40:52,426
So, as I mentioned before, you


1356
00:40:52,426 --> 00:40:54,326
can provide a Gets User Location


1357
00:40:54,326 --> 00:40:55,816
parameter, but you can also


1358
00:40:55,816 --> 00:40:57,716
provide coordinate and region to


1359
00:40:57,716 --> 00:40:58,186
search.


1360
00:40:58,876 --> 00:41:00,196
This is useful to provide the


1361
00:41:00,196 --> 00:41:01,606
most relevant results to your


1362
00:41:01,606 --> 00:41:02,086
user.


1363
00:41:03,166 --> 00:41:06,036
So, that's where places are in


1364
00:41:06,036 --> 00:41:07,436
multiple locations with the same


1365
00:41:07,436 --> 00:41:08,966
name, or you can provide your


1366
00:41:08,966 --> 00:41:10,156
search results, closer to the


1367
00:41:10,156 --> 00:41:10,486
user.


1368
00:41:12,576 --> 00:41:14,616
Here's an example of how you can


1369
00:41:14,616 --> 00:41:15,776
use the Search Service.


1370
00:41:16,666 --> 00:41:18,066
It's an example for finding


1371
00:41:18,066 --> 00:41:19,316
coffee nearby the user.


1372
00:41:20,536 --> 00:41:22,026
So first, you create your


1373
00:41:22,166 --> 00:41:22,846
service object.


1374
00:41:24,446 --> 00:41:26,226
Then you build your request


1375
00:41:26,346 --> 00:41:28,916
using query like coffee.


1376
00:41:28,946 --> 00:41:30,126
You can also do something more


1377
00:41:30,126 --> 00:41:31,926
specific like a specific name of


1378
00:41:31,926 --> 00:41:33,256
a coffee shop that you have.


1379
00:41:33,826 --> 00:41:36,856
And then you can handle the


1380
00:41:36,856 --> 00:41:39,856
results, which can easily be


1381
00:41:39,856 --> 00:41:41,776
displayed using annotation since


1382
00:41:41,776 --> 00:41:43,396
sometimes you return multiple


1383
00:41:43,696 --> 00:41:44,286
results.


1384
00:41:44,286 --> 00:41:45,646
And you can use the coordinate


1385
00:41:45,646 --> 00:41:47,896
as well as the title to populate


1386
00:41:47,926 --> 00:41:49,196
the fields of annotation.


1387
00:41:49,736 --> 00:41:51,936
And then finally, we


1388
00:41:51,936 --> 00:41:53,596
simultaneously add and display


1389
00:41:53,596 --> 00:41:55,006
the annotations using the Map


1390
00:41:55,006 --> 00:41:56,066
Show Items method.


1391
00:41:57,776 --> 00:41:59,716
So, this is useful if you have


1392
00:41:59,716 --> 00:42:01,306
your full query that you want to


1393
00:42:01,476 --> 00:42:03,066
send in the request, but if you


1394
00:42:03,066 --> 00:42:04,326
have a Search Bar that you want


1395
00:42:04,326 --> 00:42:06,356
to respond to user input, you


1396
00:42:06,356 --> 00:42:07,846
can use the Search Autocomplete


1397
00:42:07,966 --> 00:42:08,246
Method.


1398
00:42:09,636 --> 00:42:10,936
With Search Autocomplete, you


1399
00:42:10,936 --> 00:42:12,506
can provide a partial query to


1400
00:42:12,506 --> 00:42:15,476
the user - to the service, and


1401
00:42:15,576 --> 00:42:16,496
then save your user some


1402
00:42:16,496 --> 00:42:17,756
keystrokes by providing


1403
00:42:17,756 --> 00:42:19,326
suggestions which you can then


1404
00:42:19,326 --> 00:42:20,606
use to complete a search.


1405
00:42:21,016 --> 00:42:25,036
And the last service is


1406
00:42:26,616 --> 00:42:27,216
directions.


1407
00:42:27,376 --> 00:42:28,616
Similarly, to the other


1408
00:42:28,616 --> 00:42:29,846
services, you create your


1409
00:42:29,936 --> 00:42:30,776
directions object.


1410
00:42:32,116 --> 00:42:33,356
You can choose to provide a


1411
00:42:33,356 --> 00:42:34,816
language which will then return


1412
00:42:34,816 --> 00:42:36,826
the route steps in that provided


1413
00:42:36,826 --> 00:42:37,356
language.


1414
00:42:38,556 --> 00:42:40,446
If you don't provide a language,


1415
00:42:40,706 --> 00:42:41,766
the language provided to the


1416
00:42:41,766 --> 00:42:43,356
MapKit initialization function


1417
00:42:43,356 --> 00:42:43,996
will be used.


1418
00:42:44,286 --> 00:42:46,086
And if that's not provided, the


1419
00:42:46,086 --> 00:42:47,276
browser's preferred language


1420
00:42:47,276 --> 00:42:47,776
will be used.


1421
00:42:49,456 --> 00:42:51,256
Then you build your request


1422
00:42:51,256 --> 00:42:53,126
using two required fields: the


1423
00:42:53,126 --> 00:42:54,666
origin and the destination.


1424
00:42:55,056 --> 00:42:56,636
These can be coordinates,


1425
00:42:56,636 --> 00:42:58,016
addresses, or places.


1426
00:42:59,916 --> 00:43:01,646
By default, the transportation


1427
00:43:01,646 --> 00:43:02,946
type is by automobile.


1428
00:43:03,236 --> 00:43:04,306
You can switch this using the


1429
00:43:04,306 --> 00:43:06,326
transport enum to walking


1430
00:43:06,326 --> 00:43:06,856
directions.


1431
00:43:07,306 --> 00:43:08,176
We won't keep that, because


1432
00:43:08,176 --> 00:43:09,436
that's a really far way to walk,


1433
00:43:10,246 --> 00:43:11,376
but we will use Request


1434
00:43:11,376 --> 00:43:12,126
Alternate Routes.


1435
00:43:12,746 --> 00:43:13,796
You can use this to provide


1436
00:43:13,796 --> 00:43:15,416
multiple options to your users.


1437
00:43:15,786 --> 00:43:16,996
This way we can display


1438
00:43:17,266 --> 00:43:19,006
different routes instead of the


1439
00:43:19,006 --> 00:43:21,236
default of one optimal route.


1440
00:43:22,536 --> 00:43:23,916
And then finally, you can


1441
00:43:23,916 --> 00:43:26,496
display your results on the map.


1442
00:43:26,496 --> 00:43:28,146
Here we have polyline overlays


1443
00:43:28,146 --> 00:43:29,236
as you've seen earlier.


1444
00:43:29,546 --> 00:43:31,026
And you also get a set of route


1445
00:43:31,026 --> 00:43:32,986
steps as well as the distance


1446
00:43:32,986 --> 00:43:33,926
and the travel time.


1447
00:43:34,226 --> 00:43:35,386
So, those are the services.


1448
00:43:35,386 --> 00:43:36,356
Now, that you're more familiar


1449
00:43:36,356 --> 00:43:37,856
with them, Julien will come back


1450
00:43:37,856 --> 00:43:39,976
up for a demo.


1451
00:43:40,516 --> 00:43:45,056
[ Applause ]


1452
00:43:45,556 --> 00:43:46,416
>> Thank you, Melody.


1453
00:43:46,826 --> 00:43:48,316
So, we will pick up where we


1454
00:43:48,316 --> 00:43:50,716
left off and we will continue


1455
00:43:50,716 --> 00:43:52,246
building our Bigfoot Finder.


1456
00:43:53,906 --> 00:43:54,926
And there's one things that's


1457
00:43:54,926 --> 00:43:58,116
really missing from this finder,


1458
00:43:58,476 --> 00:44:00,386
is that even though it can tell


1459
00:44:00,386 --> 00:44:02,916
us where we are, and it can tell


1460
00:44:02,916 --> 00:44:05,236
us where Bigfoot is, it doesn't


1461
00:44:05,236 --> 00:44:06,416
yet tell us how to get there.


1462
00:44:07,536 --> 00:44:08,986
So, I'm going to add some


1463
00:44:08,986 --> 00:44:11,876
directions from All Current


1464
00:44:11,876 --> 00:44:13,086
Location, which is the McEnery


1465
00:44:13,086 --> 00:44:15,686
Convention Center, to these


1466
00:44:15,686 --> 00:44:17,366
Bigfoot locations.


1467
00:44:17,596 --> 00:44:19,276
I will use the MapKit JS


1468
00:44:19,276 --> 00:44:20,956
direction services to do that.


1469
00:44:21,396 --> 00:44:22,816
I will use polyline overlays to


1470
00:44:22,816 --> 00:44:23,296
draw them.


1471
00:44:24,206 --> 00:44:25,666
But the first thing I need to do


1472
00:44:25,666 --> 00:44:28,206
is I need to make sure that the


1473
00:44:28,206 --> 00:44:30,816
user - I need to find a way so


1474
00:44:30,816 --> 00:44:32,116
that the user can tell me which


1475
00:44:32,116 --> 00:44:33,306
one of these sightings they want


1476
00:44:33,456 --> 00:44:33,886
to see.


1477
00:44:34,296 --> 00:44:37,326
So, well, this one is selected,


1478
00:44:37,326 --> 00:44:38,676
so that's probably the one that


1479
00:44:38,676 --> 00:44:40,056
the user wants to see, right?


1480
00:44:40,426 --> 00:44:42,156
So, this is what we will do.


1481
00:44:42,516 --> 00:44:44,446
We will use the Select Event


1482
00:44:44,446 --> 00:44:46,826
Listener from the map to listen


1483
00:44:46,826 --> 00:44:48,496
to annotation selections from


1484
00:44:48,496 --> 00:44:49,256
the user.


1485
00:44:49,786 --> 00:44:50,816
And when an annotation is


1486
00:44:50,816 --> 00:44:52,326
selected, that means they might


1487
00:44:52,326 --> 00:44:54,036
be interested in knowing how to


1488
00:44:54,036 --> 00:44:56,226
see that specific location.


1489
00:44:56,556 --> 00:44:59,326
So, we will request a route and


1490
00:44:59,326 --> 00:45:01,226
draw it so that they can see how


1491
00:45:01,226 --> 00:45:01,806
to get there.


1492
00:45:01,806 --> 00:45:02,976
And then finally, we will let


1493
00:45:02,976 --> 00:45:04,626
them also select one of the


1494
00:45:04,626 --> 00:45:07,546
routes from the options that are


1495
00:45:07,546 --> 00:45:09,306
returned by Direction Services


1496
00:45:09,806 --> 00:45:11,456
and display more information


1497
00:45:11,456 --> 00:45:12,696
about each of these routes.


1498
00:45:13,436 --> 00:45:14,756
So, let's start by setting up


1499
00:45:14,756 --> 00:45:15,606
our Event Listener.


1500
00:45:17,666 --> 00:45:19,166
So, we listen to the select


1501
00:45:19,166 --> 00:45:21,236
events from the map, which tells


1502
00:45:21,236 --> 00:45:23,166
us when an annotation or an


1503
00:45:23,166 --> 00:45:24,306
overlay is selected.


1504
00:45:24,886 --> 00:45:26,196
So, this is the property of the


1505
00:45:26,196 --> 00:45:27,976
event, object that I received.


1506
00:45:28,236 --> 00:45:30,216
And if annotation has a value,


1507
00:45:30,216 --> 00:45:31,276
then that means that this


1508
00:45:31,276 --> 00:45:32,656
annotation was just selected.


1509
00:45:32,656 --> 00:45:34,126
So, there is only one annotation


1510
00:45:34,126 --> 00:45:37,016
overlay selected at a time, in


1511
00:45:37,016 --> 00:45:37,456
MapKit.


1512
00:45:37,456 --> 00:45:38,956
So, there is no ambiguity here.


1513
00:45:39,236 --> 00:45:40,476
This is the one that we want to


1514
00:45:40,476 --> 00:45:40,886
go to.


1515
00:45:41,256 --> 00:45:43,236
So, I will show routes to that


1516
00:45:43,236 --> 00:45:43,846
annotation.


1517
00:45:46,506 --> 00:45:48,426
Showing our route means drawing


1518
00:45:48,426 --> 00:45:49,106
it on the map.


1519
00:45:49,596 --> 00:45:51,516
So, let's set up a polyline


1520
00:45:51,516 --> 00:45:54,176
overlay to draw a route on the


1521
00:45:54,176 --> 00:45:54,396
map.


1522
00:45:55,016 --> 00:45:56,576
So, first off, I will start by


1523
00:45:56,576 --> 00:45:58,206
defining a style that I will use


1524
00:45:58,206 --> 00:45:59,976
for all my routes, setting some


1525
00:45:59,976 --> 00:46:01,566
opacity and some line width to


1526
00:46:01,566 --> 00:46:02,756
make sure that the route stands


1527
00:46:02,756 --> 00:46:03,036
out.


1528
00:46:03,436 --> 00:46:05,026
The default color is blue, which


1529
00:46:05,026 --> 00:46:06,736
is fine for the moment, so


1530
00:46:06,736 --> 00:46:07,816
that's what we will use.


1531
00:46:08,556 --> 00:46:10,636
And just like we did a function


1532
00:46:10,636 --> 00:46:12,546
that created annotations on


1533
00:46:12,546 --> 00:46:14,346
demand for citing objects, here


1534
00:46:14,346 --> 00:46:15,936
we'll create overlays on demand


1535
00:46:15,936 --> 00:46:16,546
for routes.


1536
00:46:17,216 --> 00:46:19,126
So, a route that is returned by


1537
00:46:19,126 --> 00:46:22,066
the MapKit JS Direction Service,


1538
00:46:22,546 --> 00:46:24,526
contains a lot of information


1539
00:46:24,526 --> 00:46:27,596
including a path which is a list


1540
00:46:27,596 --> 00:46:29,616
of steps that you can take to go


1541
00:46:29,616 --> 00:46:30,416
from A to B.


1542
00:46:31,016 --> 00:46:32,966
And each list of steps, itself


1543
00:46:32,966 --> 00:46:34,436
contains a list of points.


1544
00:46:35,406 --> 00:46:37,316
And if you remember to create a


1545
00:46:37,316 --> 00:46:38,736
polyline overlay, I want a list


1546
00:46:38,736 --> 00:46:39,156
of points.


1547
00:46:39,516 --> 00:46:40,716
So, now that I have a list of -


1548
00:46:40,716 --> 00:46:42,356
list of points, I will reduce it


1549
00:46:42,356 --> 00:46:44,356
to a single list so that I will


1550
00:46:44,356 --> 00:46:46,546
put all of - the path steps one


1551
00:46:46,546 --> 00:46:47,216
after the other.


1552
00:46:48,046 --> 00:46:49,386
This is the list of points that


1553
00:46:49,386 --> 00:46:51,056
I want to create my polyline


1554
00:46:51,056 --> 00:46:51,546
overlay.


1555
00:46:51,846 --> 00:46:53,416
This is the style that I just


1556
00:46:53,416 --> 00:46:55,616
defined above, that I want my


1557
00:46:55,616 --> 00:46:56,926
overlay to show up as.


1558
00:46:57,616 --> 00:47:00,036
And later, I will let the user


1559
00:47:00,036 --> 00:47:01,846
select this overlay to see more


1560
00:47:01,846 --> 00:47:02,336
information.


1561
00:47:02,336 --> 00:47:04,156
So, I will keep around all of


1562
00:47:04,156 --> 00:47:05,976
the route object, in the Data


1563
00:47:05,976 --> 00:47:07,646
Properties so that I can display


1564
00:47:07,896 --> 00:47:09,546
the distance of the estimated


1565
00:47:09,546 --> 00:47:10,146
travel time.


1566
00:47:11,906 --> 00:47:12,956
I know how to draw these


1567
00:47:12,956 --> 00:47:14,836
overlays, so now I know - I need


1568
00:47:14,836 --> 00:47:16,646
to request them from the


1569
00:47:16,646 --> 00:47:17,206
service.


1570
00:47:17,956 --> 00:47:19,456
So, here we go.


1571
00:47:21,376 --> 00:47:23,006
This is a little bit longer but


1572
00:47:23,006 --> 00:47:23,646
not so bad.


1573
00:47:24,126 --> 00:47:25,386
I first need to create a


1574
00:47:25,386 --> 00:47:26,846
directions object.


1575
00:47:26,846 --> 00:47:28,796
I will just use the current


1576
00:47:28,796 --> 00:47:30,566
language for the directions.


1577
00:47:30,566 --> 00:47:31,606
So, the default is fine.


1578
00:47:32,786 --> 00:47:34,576
So now, when I'm requesting a


1579
00:47:34,576 --> 00:47:36,836
route to a specific annotation


1580
00:47:36,836 --> 00:47:38,736
or rather, routes to a specific


1581
00:47:38,736 --> 00:47:40,956
annotation, I will clean up my


1582
00:47:40,956 --> 00:47:42,446
map first because maybe I've


1583
00:47:42,636 --> 00:47:44,386
shown routes to a different


1584
00:47:44,386 --> 00:47:45,496
place before.


1585
00:47:45,496 --> 00:47:47,356
So, if I query the other list


1586
00:47:47,356 --> 00:47:49,416
property of my map, it tells me


1587
00:47:49,416 --> 00:47:51,306
which overlays are currently


1588
00:47:51,446 --> 00:47:52,796
added to the map, and I can


1589
00:47:52,796 --> 00:47:54,316
remove them by using the Remove


1590
00:47:54,316 --> 00:47:55,206
Overlays Method.


1591
00:47:55,206 --> 00:47:57,266
So, now I have a clean map, and


1592
00:47:57,266 --> 00:47:59,206
I can display new routes.


1593
00:47:59,956 --> 00:48:01,796
I'm building my request for the


1594
00:48:01,796 --> 00:48:02,156
origin.


1595
00:48:02,156 --> 00:48:03,926
I will hot code this place, the


1596
00:48:03,926 --> 00:48:05,256
McEnery Convention Center.


1597
00:48:05,546 --> 00:48:09,046
Again, I could put coordinates


1598
00:48:09,176 --> 00:48:10,956
for instance, instead, but this


1599
00:48:10,956 --> 00:48:12,166
is much more convenience.


1600
00:48:12,266 --> 00:48:14,236
For the destination, I will use


1601
00:48:14,236 --> 00:48:15,626
coordinate because I have them.


1602
00:48:15,626 --> 00:48:16,636
They are the coordinate of the


1603
00:48:16,636 --> 00:48:18,256
annotation that was given as a


1604
00:48:18,256 --> 00:48:18,756
parameter.


1605
00:48:19,966 --> 00:48:21,196
And I want to show all of the


1606
00:48:21,196 --> 00:48:22,936
possible - not all of the


1607
00:48:22,936 --> 00:48:25,226
possible but the several


1608
00:48:25,226 --> 00:48:27,166
possible routes to this point.


1609
00:48:27,166 --> 00:48:28,916
So, I make sure that My Request


1610
00:48:29,076 --> 00:48:30,536
Alternate Routes Property's set


1611
00:48:30,536 --> 00:48:32,496
to true.


1612
00:48:32,496 --> 00:48:33,646
Now, that my request has been


1613
00:48:33,646 --> 00:48:36,846
created, I can execute it on the


1614
00:48:36,846 --> 00:48:38,466
Direction Services using the


1615
00:48:38,466 --> 00:48:39,126
Route Method.


1616
00:48:42,566 --> 00:48:44,476
Things can go wrong when you do


1617
00:48:44,476 --> 00:48:45,366
these kind of queries.


1618
00:48:45,366 --> 00:48:46,886
So, we must make sure that we


1619
00:48:46,886 --> 00:48:48,536
have a way to handle errors when


1620
00:48:48,536 --> 00:48:49,116
they occur.


1621
00:48:49,536 --> 00:48:51,466
So, in this case, I will fall


1622
00:48:51,466 --> 00:48:53,546
back to show a default route


1623
00:48:53,546 --> 00:48:54,966
that I've created and it's just


1624
00:48:54,966 --> 00:48:55,526
a straight line.


1625
00:48:55,526 --> 00:48:56,586
So, if we see a straight line,


1626
00:48:56,586 --> 00:48:57,476
then we know we're in trouble.


1627
00:48:59,836 --> 00:49:01,606
But let's focus, let's be


1628
00:49:01,606 --> 00:49:03,326
positive and focus on the cases


1629
00:49:03,326 --> 00:49:05,716
where the request succeeds, and


1630
00:49:05,716 --> 00:49:07,836
in this case, I will have a list


1631
00:49:07,836 --> 00:49:09,836
of routes and I will create a


1632
00:49:09,836 --> 00:49:11,376
new polyline overlay for every


1633
00:49:11,376 --> 00:49:11,926
one of them.


1634
00:49:12,816 --> 00:49:14,836
I will use my trusty Show Items


1635
00:49:14,836 --> 00:49:17,226
Method on the map to add these


1636
00:49:17,226 --> 00:49:18,486
routes and make sure that they


1637
00:49:18,486 --> 00:49:19,656
are being shown by setting the


1638
00:49:19,656 --> 00:49:21,276
region to enclose the routes.


1639
00:49:21,896 --> 00:49:24,366
And let me introduce a couple


1640
00:49:24,366 --> 00:49:26,236
more options in that method.


1641
00:49:26,666 --> 00:49:27,756
The first one is Animate,


1642
00:49:28,166 --> 00:49:29,286
because I wanted to make sure


1643
00:49:29,286 --> 00:49:31,296
that there is a smooth animation


1644
00:49:31,296 --> 00:49:32,976
from the current region of the


1645
00:49:32,976 --> 00:49:36,466
map to the one where the routes


1646
00:49:36,466 --> 00:49:37,036
are shown.


1647
00:49:38,616 --> 00:49:39,796
And finally, I will also add


1648
00:49:39,796 --> 00:49:41,246
some padding so that I can keep


1649
00:49:41,246 --> 00:49:42,826
some of the context and not


1650
00:49:42,826 --> 00:49:44,336
constrict the region too much


1651
00:49:44,336 --> 00:49:45,486
around the routes.


1652
00:49:46,716 --> 00:49:50,436
So, I'm now ready to request


1653
00:49:50,436 --> 00:49:52,876
routes from the - this


1654
00:49:52,876 --> 00:49:54,476
convention center to an


1655
00:49:54,476 --> 00:49:54,996
annotation.


1656
00:49:54,996 --> 00:49:56,466
So, let's select this one again.


1657
00:49:57,436 --> 00:49:59,406
And now that my annotation has


1658
00:49:59,406 --> 00:50:01,506
been selected, the request has


1659
00:50:01,506 --> 00:50:01,946
been made.


1660
00:50:02,026 --> 00:50:04,516
I see that I have three


1661
00:50:04,516 --> 00:50:05,236
different results.


1662
00:50:05,236 --> 00:50:06,976
So, they share a part of the


1663
00:50:06,976 --> 00:50:08,266
route, but then they diverge in


1664
00:50:08,266 --> 00:50:08,636
the end.


1665
00:50:09,336 --> 00:50:11,586
And they start from our current


1666
00:50:11,586 --> 00:50:13,166
location, the convention center.


1667
00:50:13,616 --> 00:50:14,726
So, I think this is right.


1668
00:50:14,926 --> 00:50:17,376
Yes, that looks right.


1669
00:50:17,376 --> 00:50:19,636
I have got three results.


1670
00:50:19,966 --> 00:50:21,566
So now, I might be interested in


1671
00:50:21,566 --> 00:50:23,886
knowing more about what's the


1672
00:50:23,886 --> 00:50:25,166
difference in travel time or


1673
00:50:25,166 --> 00:50:25,626
distance.


1674
00:50:25,996 --> 00:50:27,096
So, I can use selection to do


1675
00:50:27,096 --> 00:50:27,356
that.


1676
00:50:27,356 --> 00:50:28,936
But if I select a route, the


1677
00:50:28,936 --> 00:50:31,106
only thing that happens is that


1678
00:50:31,106 --> 00:50:32,416
my annotation has been


1679
00:50:32,416 --> 00:50:34,216
deselected because there is only


1680
00:50:34,216 --> 00:50:35,276
one selection at a time.


1681
00:50:35,666 --> 00:50:37,006
The problem here is that there


1682
00:50:37,006 --> 00:50:40,436
is no default behavior for


1683
00:50:40,436 --> 00:50:41,526
overlays being selected.


1684
00:50:41,926 --> 00:50:43,546
So, let's implement our own.


1685
00:50:43,876 --> 00:50:44,976
What we will do is we will


1686
00:50:44,976 --> 00:50:46,326
highlight these overlays and


1687
00:50:46,326 --> 00:50:47,746
then display their information


1688
00:50:47,796 --> 00:50:48,626
on the side bar.


1689
00:50:49,726 --> 00:50:51,186
So, in order to highlight these


1690
00:50:51,186 --> 00:50:53,656
overlays, I will create a new


1691
00:50:53,656 --> 00:50:56,816
style for highlighting overlays.


1692
00:50:56,816 --> 00:50:59,026
So, let's put it here, along


1693
00:50:59,026 --> 00:51:00,036
with my old style.


1694
00:51:00,656 --> 00:51:01,836
So, this style will keep the


1695
00:51:01,836 --> 00:51:02,666
same opacity.


1696
00:51:02,666 --> 00:51:04,756
We will make the line figure and


1697
00:51:04,756 --> 00:51:06,126
we will make it purple so that


1698
00:51:06,126 --> 00:51:07,406
it stands out from the other


1699
00:51:07,406 --> 00:51:07,866
ones.


1700
00:51:09,816 --> 00:51:11,506
But now, we need to apply this


1701
00:51:11,506 --> 00:51:13,216
style to my overlay once it's


1702
00:51:13,216 --> 00:51:13,746
selected.


1703
00:51:14,106 --> 00:51:15,826
Fortunately, I already have an


1704
00:51:15,826 --> 00:51:19,206
event handler for selections.


1705
00:51:19,326 --> 00:51:22,236
And up to that point, we were


1706
00:51:22,236 --> 00:51:24,376
only interested in listening to


1707
00:51:24,376 --> 00:51:26,346
annotation being selected.


1708
00:51:26,576 --> 00:51:28,906
But now we will just add a new


1709
00:51:28,906 --> 00:51:30,166
-- we will add plans to this


1710
00:51:30,166 --> 00:51:31,096
function.


1711
00:51:31,746 --> 00:51:33,786
Oops.


1712
00:51:36,606 --> 00:51:38,196
So now, if annotation is


1713
00:51:38,196 --> 00:51:39,686
selected, I still do the same


1714
00:51:39,686 --> 00:51:40,746
thing that I was doing, but if


1715
00:51:40,746 --> 00:51:42,466
an overlay's selected, I will


1716
00:51:42,466 --> 00:51:44,046
change its style to be the


1717
00:51:44,046 --> 00:51:45,726
selected route style that I've


1718
00:51:45,726 --> 00:51:47,896
just defined, so that it is


1719
00:51:48,066 --> 00:51:48,696
highlighted.


1720
00:51:49,866 --> 00:51:51,226
So, let's see this in action.


1721
00:51:54,606 --> 00:51:56,776
We can use a different one.


1722
00:51:56,776 --> 00:51:58,596
I'm feeling lucky.


1723
00:52:00,446 --> 00:52:02,656
And now, we can see that we can


1724
00:52:02,656 --> 00:52:05,666
select the routes to - from the


1725
00:52:05,666 --> 00:52:08,336
list of routes that have - that


1726
00:52:08,336 --> 00:52:09,686
has been provided.


1727
00:52:09,686 --> 00:52:10,926
I haven't implemented showing


1728
00:52:10,926 --> 00:52:11,546
the data yet.


1729
00:52:12,196 --> 00:52:13,786
Let's see if I select another


1730
00:52:13,786 --> 00:52:14,126
route.


1731
00:52:14,716 --> 00:52:16,336
What happens is that there is


1732
00:52:16,336 --> 00:52:18,246
nothing happening by default


1733
00:52:18,246 --> 00:52:19,416
when an overlay's selected, but


1734
00:52:19,416 --> 00:52:20,496
there is nothing happening by


1735
00:52:20,496 --> 00:52:21,566
default when an overlay is


1736
00:52:21,566 --> 00:52:22,216
deselected.


1737
00:52:22,216 --> 00:52:23,276
So, I have to implement that


1738
00:52:23,376 --> 00:52:25,336
part of the behavior as well.


1739
00:52:25,896 --> 00:52:29,826
So, in this case, I will add a


1740
00:52:29,826 --> 00:52:33,266
new event listener for deselect


1741
00:52:33,266 --> 00:52:33,646
events.


1742
00:52:34,206 --> 00:52:35,316
So, when an overlay is


1743
00:52:35,316 --> 00:52:37,616
deselected, then I will switch


1744
00:52:37,616 --> 00:52:39,286
its style to the default one.


1745
00:52:41,076 --> 00:52:44,456
So, this should fix my issue.


1746
00:52:45,686 --> 00:52:46,686
So, let's try again.


1747
00:52:47,426 --> 00:52:48,796
I have a route here.


1748
00:52:49,466 --> 00:52:51,626
And if I select again, I do the


1749
00:52:51,626 --> 00:52:52,786
same place because here we have


1750
00:52:52,786 --> 00:52:53,966
two overlays on top of each


1751
00:52:53,966 --> 00:52:54,256
other.


1752
00:52:54,486 --> 00:52:55,656
This will select the other


1753
00:52:55,656 --> 00:52:56,106
overlay.


1754
00:52:56,956 --> 00:52:58,456
And the deselection event


1755
00:52:58,456 --> 00:53:00,026
handler is working, so, my


1756
00:53:00,026 --> 00:53:02,076
previous highlighting has


1757
00:53:02,076 --> 00:53:04,536
disappeared, and now, the new


1758
00:53:04,606 --> 00:53:06,536
selection is shown correctly.


1759
00:53:07,026 --> 00:53:08,346
So, this seems to be working


1760
00:53:08,346 --> 00:53:08,866
pretty well.


1761
00:53:09,546 --> 00:53:11,516
Here is another example.


1762
00:53:12,876 --> 00:53:14,766
So again, I can select these


1763
00:53:14,766 --> 00:53:15,236
routes.


1764
00:53:15,666 --> 00:53:18,266
But now I want to know more


1765
00:53:18,266 --> 00:53:18,706
about them.


1766
00:53:18,706 --> 00:53:19,666
I want to know what are the


1767
00:53:19,666 --> 00:53:21,076
driving directions, how long it


1768
00:53:21,076 --> 00:53:23,246
takes to use one of the routes


1769
00:53:23,246 --> 00:53:27,296
versus another, etc. So, this is


1770
00:53:27,296 --> 00:53:29,246
very simple to do because all of


1771
00:53:29,446 --> 00:53:31,446
the - everything that I need is


1772
00:53:31,446 --> 00:53:32,276
already in place.


1773
00:53:32,626 --> 00:53:35,646
I have saved data on my


1774
00:53:35,646 --> 00:53:38,226
overlays, and I have Event List


1775
00:53:38,226 --> 00:53:39,166
now for Selection and


1776
00:53:39,166 --> 00:53:39,716
Deselection.


1777
00:53:39,716 --> 00:53:41,266
So, when the overlay's selected,


1778
00:53:41,636 --> 00:53:46,046
I will show the data in the


1779
00:53:46,136 --> 00:53:47,106
sidebar.


1780
00:53:48,636 --> 00:53:50,336
So, this is just classic.


1781
00:53:50,336 --> 00:53:51,856
Now, we are really into web


1782
00:53:51,856 --> 00:53:54,986
development land where we have a


1783
00:53:54,986 --> 00:53:56,516
bunch of the time we went to --


1784
00:53:56,696 --> 00:53:58,396
format it into some HTML, so I


1785
00:53:58,396 --> 00:53:59,356
won't go over the details.


1786
00:53:59,876 --> 00:54:01,806
But the detail that we have is


1787
00:54:01,806 --> 00:54:03,366
the one that is associated with


1788
00:54:03,366 --> 00:54:03,876
the overlay.


1789
00:54:04,456 --> 00:54:05,836
And it gets shown when the


1790
00:54:05,836 --> 00:54:06,736
overlay's selected.


1791
00:54:07,596 --> 00:54:08,866
And I will not make the same


1792
00:54:08,866 --> 00:54:09,666
mistake about this this


1793
00:54:09,666 --> 00:54:11,126
selection, so I will directly


1794
00:54:11,556 --> 00:54:13,156
hide the data when the overlay's


1795
00:54:13,156 --> 00:54:14,406
deselected so that I don't have


1796
00:54:14,406 --> 00:54:16,236
several routes appearing at


1797
00:54:16,236 --> 00:54:16,616
once.


1798
00:54:18,176 --> 00:54:19,366
So, let's try again.


1799
00:54:20,596 --> 00:54:21,536
Let's go back.


1800
00:54:21,536 --> 00:54:22,476
I like this example.


1801
00:54:23,856 --> 00:54:26,116
So again, I will select this


1802
00:54:26,116 --> 00:54:26,426
route.


1803
00:54:26,696 --> 00:54:27,696
And now that the route is


1804
00:54:27,696 --> 00:54:29,666
selected, we can see on the


1805
00:54:29,666 --> 00:54:31,586
right-hand side that we have


1806
00:54:31,586 --> 00:54:32,906
some additional information.


1807
00:54:33,396 --> 00:54:34,656
This is a quick name for the


1808
00:54:34,656 --> 00:54:34,906
route.


1809
00:54:34,906 --> 00:54:36,026
So, this is the route that goes


1810
00:54:36,026 --> 00:54:38,596
from Mount Hamilton Road.


1811
00:54:38,596 --> 00:54:40,126
It's 70 kilometers long and


1812
00:54:40,126 --> 00:54:41,626
under ideal driving conditions,


1813
00:54:41,626 --> 00:54:43,316
it should take me an hour and 32


1814
00:54:43,316 --> 00:54:44,706
minutes to reach there.


1815
00:54:44,706 --> 00:54:46,446
And here are all the steps that


1816
00:54:46,446 --> 00:54:48,276
I can follow to get to my


1817
00:54:48,276 --> 00:54:48,966
destination.


1818
00:54:49,906 --> 00:54:51,196
I could see what this one looks


1819
00:54:51,196 --> 00:54:51,516
like.


1820
00:54:52,146 --> 00:54:54,136
It's actually longer in distance


1821
00:54:54,136 --> 00:54:56,056
but it should get me there


1822
00:54:56,056 --> 00:54:56,496
faster.


1823
00:54:57,246 --> 00:54:59,826
So, there we are.


1824
00:54:59,826 --> 00:55:02,836
We have built a Bigfoot Finder


1825
00:55:03,356 --> 00:55:07,136
and -- that lets us select where


1826
00:55:07,136 --> 00:55:08,806
we want to go and tells us where


1827
00:55:08,806 --> 00:55:09,946
we are going to go.


1828
00:55:11,016 --> 00:55:12,106
[ Applause ]


1829
00:55:12,106 --> 00:55:13,126
Thank you.


1830
00:55:16,896 --> 00:55:17,496
Quick recap.


1831
00:55:17,936 --> 00:55:19,536
We've seen how to react to user


1832
00:55:19,536 --> 00:55:20,106
events.


1833
00:55:20,106 --> 00:55:23,256
So, in this case, selection and


1834
00:55:23,256 --> 00:55:24,276
deselection.


1835
00:55:24,306 --> 00:55:25,826
We've got driving directions


1836
00:55:25,826 --> 00:55:27,146
from the MapKit JS Service.


1837
00:55:27,486 --> 00:55:29,196
We've used polyline overlays to


1838
00:55:29,196 --> 00:55:30,716
render these driving directions.


1839
00:55:31,326 --> 00:55:33,766
And we've added our own behavior


1840
00:55:33,766 --> 00:55:35,116
for the selection of overlays


1841
00:55:35,116 --> 00:55:36,976
since there is no specific


1842
00:55:36,976 --> 00:55:38,626
behavior provided by default.


1843
00:55:40,416 --> 00:55:42,286
So, there is plenty more to talk


1844
00:55:42,286 --> 00:55:45,076
about MapKit JS, but we only


1845
00:55:45,076 --> 00:55:45,706
have one hour.


1846
00:55:45,826 --> 00:55:47,706
So, I will stop here.


1847
00:55:49,426 --> 00:55:52,316
But I hope that we have made a


1848
00:55:52,636 --> 00:55:53,796
good case for MapKit JS,


1849
00:55:53,796 --> 00:55:55,446
delivering a top-notch map


1850
00:55:55,536 --> 00:55:56,816
experience for the web.


1851
00:55:58,036 --> 00:56:00,406
That it lets you unify on a


1852
00:56:00,406 --> 00:56:02,036
single map provider with a


1853
00:56:02,036 --> 00:56:03,456
familiar and flexible API.


1854
00:56:03,456 --> 00:56:04,736
So, if you have on your team


1855
00:56:04,736 --> 00:56:06,496
people who have used the native


1856
00:56:06,496 --> 00:56:07,976
MapKit API, this would feel


1857
00:56:07,976 --> 00:56:09,656
right at home, because the same


1858
00:56:09,656 --> 00:56:10,426
concepts apply.


1859
00:56:10,766 --> 00:56:12,416
And web developers will be happy


1860
00:56:12,416 --> 00:56:14,846
to see that the APIs are also


1861
00:56:14,846 --> 00:56:16,936
tailored to match JavaScript.


1862
00:56:18,796 --> 00:56:20,516
So, I will remind you that you


1863
00:56:20,516 --> 00:56:22,276
need the MapKit JS Key to be


1864
00:56:22,276 --> 00:56:23,716
able to use MapKit JS.


1865
00:56:23,716 --> 00:56:25,326
So, please go to the developer


1866
00:56:25,326 --> 00:56:26,986
portal, get your key, and try it


1867
00:56:26,986 --> 00:56:27,526
out today.


1868
00:56:28,976 --> 00:56:30,346
If you want to know more about


1869
00:56:30,346 --> 00:56:32,026
MapKit JS, you can find the


1870
00:56:32,026 --> 00:56:34,726
documentation and sample code at


1871
00:56:34,726 --> 00:56:35,386
this URL.


1872
00:56:36,066 --> 00:56:38,946
And if you want to know more


1873
00:56:38,946 --> 00:56:40,596
about this session, you have


1874
00:56:40,596 --> 00:56:42,836
this URL for the session itself.


1875
00:56:42,906 --> 00:56:45,606
We have accompanying video that


1876
00:56:45,606 --> 00:56:47,106
will take you step-by-step


1877
00:56:47,106 --> 00:56:48,536
through getting and using a


1878
00:56:48,536 --> 00:56:51,246
MapKit JS Key.


1879
00:56:51,246 --> 00:56:52,656
And finally, we have labs


1880
00:56:52,656 --> 00:56:55,046
happening on Wednesday morning


1881
00:56:55,046 --> 00:56:56,486
and Friday morning, so you can


1882
00:56:56,486 --> 00:56:58,466
come to talk to the whole MapKit


1883
00:56:58,466 --> 00:57:00,526
JS team to ask us questions


1884
00:57:00,526 --> 00:57:02,156
about MapKit JS.


1885
00:57:02,506 --> 00:57:03,306
Thank you very much.


1886
00:57:04,516 --> 00:57:07,500
[ Applause ]

