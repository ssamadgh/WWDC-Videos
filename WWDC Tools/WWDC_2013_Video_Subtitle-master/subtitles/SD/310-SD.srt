1
00:00:00,506 --> 00:00:09,466
[ Applause ]


2
00:00:09,966 --> 00:00:11,926
>> Good morning and welcome.


3
00:00:12,066 --> 00:00:13,016
My name is Filip.


4
00:00:13,016 --> 00:00:15,566
I'm the opening act for
Bill Nye the Science Guy.


5
00:00:15,566 --> 00:00:16,315
[ Laughter ]


6
00:00:16,315 --> 00:00:17,466
Just kidding.


7
00:00:17,706 --> 00:00:19,916
I lead the mobile apps
engineering team at Apple


8
00:00:19,916 --> 00:00:22,286
and we build iOS apps
just like you guys.


9
00:00:22,836 --> 00:00:25,686
Our apps get built and
submitted to the App Store.


10
00:00:26,066 --> 00:00:28,286
They get approved and they
get downloaded by users


11
00:00:28,496 --> 00:00:29,646
and they can get deleted too.


12
00:00:29,936 --> 00:00:33,516
Of all the teams at Apple
and of all the teams


13
00:00:33,556 --> 00:00:36,036
that have presented to
you at WWDC this week,


14
00:00:36,386 --> 00:00:37,656
we're the most like you guys.


15
00:00:38,666 --> 00:00:41,806
What we'd like to share with you
today is some situations we come


16
00:00:41,956 --> 00:00:43,656
across in developing our apps.


17
00:00:44,346 --> 00:00:46,526
These situations have
given rise to opportunities


18
00:00:46,856 --> 00:00:49,016
where we could harness
some key iOS technologies


19
00:00:49,376 --> 00:00:50,356
and create truly unique


20
00:00:50,556 --> 00:00:52,696
and compelling experiences
for our users.


21
00:00:53,266 --> 00:00:55,216
I'm going to show you the
features that we built


22
00:00:55,556 --> 00:00:57,186
and the technologies
behind them.


23
00:00:57,596 --> 00:00:59,476
As I talk about our apps,
I want you guys to think


24
00:00:59,476 --> 00:01:02,836
about your own apps and
find some parallels.


25
00:01:02,836 --> 00:01:04,275
And I know you can
identify with a lot


26
00:01:04,275 --> 00:01:06,206
of the opportunities
we'll see today


27
00:01:06,206 --> 00:01:08,306
and use these technologies
in your own apps.


28
00:01:08,976 --> 00:01:11,666
We'll talk also about tips,
tricks, and best practices.


29
00:01:12,066 --> 00:01:14,366
And finally, we'll end
with a demo on iBeacons.


30
00:01:14,366 --> 00:01:15,996
So let's get started.


31
00:01:17,266 --> 00:01:19,296
First, I'd like to
introduce the Apple Store app.


32
00:01:19,536 --> 00:01:21,806
It's going to be the reference
app for this presentation.


33
00:01:22,246 --> 00:01:24,566
This is an app my team builds
and you can download it


34
00:01:24,566 --> 00:01:28,566
from the App Store anytime,
maybe even right now.


35
00:01:28,566 --> 00:01:30,466
Let me see, who has
the app on their phone?


36
00:01:30,566 --> 00:01:32,586
Oh wow, good.


37
00:01:32,746 --> 00:01:33,776
Who doesn't have it?


38
00:01:33,776 --> 00:01:36,266
Who is downloading right now?


39
00:01:36,266 --> 00:01:36,826
[ Laughter ]


40
00:01:36,826 --> 00:01:39,726
A lot of you don't
put up your hand.


41
00:01:39,726 --> 00:01:40,896
Maybe you're shy.


42
00:01:40,896 --> 00:01:43,466
If you're shy, you can come
on the stage with me in front


43
00:01:43,466 --> 00:01:46,286
of all of you, you'll lose
your shyness very fast.


44
00:01:46,756 --> 00:01:49,296
OK. So, Apple Store app
is a great way to learn


45
00:01:49,296 --> 00:01:51,536
about Apple products, to
browse Apple products.


46
00:01:51,716 --> 00:01:52,886
You can customize and buy.


47
00:01:53,226 --> 00:01:55,946
You can also find out
about Apple retail stores,


48
00:01:56,266 --> 00:01:58,276
what events are going on,
maybe book an appointment


49
00:01:58,276 --> 00:02:00,376
like Genius Bar or pick
up an order you made


50
00:02:00,376 --> 00:02:01,946
on the Apple Store
app at the store.


51
00:02:01,946 --> 00:02:05,776
And it's this key characteristic
of the Apple Store app,


52
00:02:05,776 --> 00:02:07,826
this integration with the
physical Apple Stores,


53
00:02:08,175 --> 00:02:10,666
and this by the way is the Upper
West Side Store in New York.


54
00:02:10,666 --> 00:02:14,196
It's going to be our
reference store for the talk.


55
00:02:14,396 --> 00:02:17,196
This intersection between the
online with the Apple Store app


56
00:02:17,646 --> 00:02:20,426
and the physical with the Apple
retail store gives rise to a lot


57
00:02:20,426 --> 00:02:22,476
of the opportunities
we'll talk about today.


58
00:02:22,996 --> 00:02:25,956
When I talk about our app in
the store, I'd like you to think


59
00:02:25,956 --> 00:02:27,356
about your own situations.


60
00:02:27,356 --> 00:02:29,176
So, maybe you have a
Movie app and you want


61
00:02:29,176 --> 00:02:30,596
to think about movie theaters.


62
00:02:31,006 --> 00:02:33,586
Maybe you have Dinner
Reservation app and you want


63
00:02:33,586 --> 00:02:35,806
to think about restaurants.


64
00:02:36,216 --> 00:02:39,036
Maybe you have a Travel app, you
want to think about airports.


65
00:02:39,286 --> 00:02:42,206
Amusement Park app, you want--
or Museum app, you want to think


66
00:02:42,206 --> 00:02:43,786
about museums and
amusement parks


67
00:02:43,786 --> 00:02:46,706
or maybe your own Retail app
and your own retail stores.


68
00:02:48,136 --> 00:02:50,276
For those of you who don't
have locations of interest


69
00:02:50,326 --> 00:02:51,416
in your app, don't worry,


70
00:02:51,726 --> 00:02:54,186
a lot of the technology we'll
talk today will still be


71
00:02:54,186 --> 00:02:55,236
applicable for you guys.


72
00:02:56,636 --> 00:02:59,566
So, this is my agenda
slide, it's a timeline.


73
00:03:00,176 --> 00:03:01,996
And it all centers around--


74
00:03:02,176 --> 00:03:03,906
and we're going to use this
timeline through the talk.


75
00:03:04,286 --> 00:03:06,246
It all centers around the
fact that there's an event.


76
00:03:06,936 --> 00:03:07,966
OK, it can be anything.


77
00:03:07,966 --> 00:03:08,916
Dinner is on tonight.


78
00:03:09,226 --> 00:03:10,626
There's a movie playing.


79
00:03:10,626 --> 00:03:13,856
You're traveling
tomorrow to go on a trip.


80
00:03:13,996 --> 00:03:15,006
You can even be in a game


81
00:03:15,006 --> 00:03:17,776
like all the players are getting
together to play a game online.


82
00:03:18,226 --> 00:03:20,956
Or it could be a sale or
a new product is launched.


83
00:03:21,716 --> 00:03:23,916
So, there's this time
before the event,


84
00:03:23,916 --> 00:03:25,126
what can we do in that time?


85
00:03:25,836 --> 00:03:28,076
There's the event itself
when people are arriving


86
00:03:28,076 --> 00:03:29,956
at your event, what
opportunities are there?


87
00:03:30,556 --> 00:03:32,436
And finally, when
people are at your event


88
00:03:32,736 --> 00:03:33,676
and they're spending time,


89
00:03:34,146 --> 00:03:35,876
how can we enrich
the experience there?


90
00:03:37,206 --> 00:03:39,046
Before we get fully started,


91
00:03:39,046 --> 00:03:41,236
I want to mention the
technologies we're going to use.


92
00:03:41,236 --> 00:03:42,736
We're going to start
pretty basic


93
00:03:42,736 --> 00:03:44,186
and get a little more complex.


94
00:03:45,246 --> 00:03:46,766
First of is Calendar Events.


95
00:03:47,666 --> 00:03:49,396
Then we've got Push
Notifications,


96
00:03:50,416 --> 00:03:51,536
then Core Location.


97
00:03:51,596 --> 00:03:53,356
And a specific feature
of Core Location,


98
00:03:53,356 --> 00:03:54,446
we call Region Monitoring.


99
00:03:54,756 --> 00:03:56,346
This is also known
as Geofencing.


100
00:03:56,476 --> 00:03:57,366
You might know it like that.


101
00:03:57,906 --> 00:04:00,836
And finally, we're going to talk
about a new technology on iOS 7,


102
00:04:00,936 --> 00:04:03,096
iBeacons and that's the
demo we'll show you.


103
00:04:04,496 --> 00:04:06,676
OK. So, it's the time
before the event,


104
00:04:06,886 --> 00:04:08,826
the event is coming
up, what do you do?


105
00:04:09,806 --> 00:04:10,936
You tell your users about it.


106
00:04:11,616 --> 00:04:13,786
To remind ourselves in the
timeline, we are now here,


107
00:04:14,136 --> 00:04:15,086
right before the event.


108
00:04:16,226 --> 00:04:18,456
So this is an event,
hopefully our users really care


109
00:04:18,456 --> 00:04:19,116
about this.


110
00:04:19,206 --> 00:04:19,796
They're excited.


111
00:04:19,796 --> 00:04:21,745
When you told them about it,
they are looking forward to it.


112
00:04:22,216 --> 00:04:24,756
What can you do in your apps
to keep that excitement alive


113
00:04:24,756 --> 00:04:27,466
and what can you do to
remind them of the event?


114
00:04:28,606 --> 00:04:29,286
I'll show you.


115
00:04:29,736 --> 00:04:31,936
Through a feature in the Apple
Store app we called iPhone


116
00:04:31,936 --> 00:04:33,016
upgrade notification.


117
00:04:33,446 --> 00:04:34,456
Let me just set the scene.


118
00:04:34,766 --> 00:04:38,056
I will have to guess that pretty
much all of you have an iPhone


119
00:04:38,056 --> 00:04:39,256
or have access to an iPhone.


120
00:04:39,606 --> 00:04:42,276
Those of you that have
bought it in the US,


121
00:04:42,276 --> 00:04:45,096
you know that US carriers
like Sprint, AT&T, Verizon,


122
00:04:45,096 --> 00:04:47,586
they subsidized the
cost of your phone


123
00:04:47,676 --> 00:04:49,316
if you sign a contract
like two years.


124
00:04:50,036 --> 00:04:51,326
When you want to
upgrade your phone,


125
00:04:51,586 --> 00:04:53,596
depending on where you are in
that period, maybe at the end


126
00:04:53,596 --> 00:04:57,186
of the two years, you get a
full discount again of 199


127
00:04:57,186 --> 00:04:58,696
and the carrier will
subsidize that.


128
00:04:58,696 --> 00:04:59,806
Maybe if you're midway through,


129
00:04:59,806 --> 00:05:01,886
you get a partial
discount like 449.


130
00:05:02,116 --> 00:05:03,936
And if you're early, maybe
you don't get a discount.


131
00:05:04,716 --> 00:05:07,306
So, as a user, you might want to
get the iPhone at the best price


132
00:05:07,306 --> 00:05:10,766
so you got to keep track
where you are in that contract


133
00:05:10,766 --> 00:05:14,016
and when you're eligible
for that best price.


134
00:05:14,186 --> 00:05:15,696
OK, so that's your event.


135
00:05:15,776 --> 00:05:18,916
The event is the fact that
you can get this new product,


136
00:05:18,916 --> 00:05:20,476
this iPhone at the best price.


137
00:05:21,346 --> 00:05:22,676
OK, so you got to keep
track of that date


138
00:05:22,676 --> 00:05:24,726
and the worse thing
is it's dynamic.


139
00:05:24,776 --> 00:05:25,736
Carriers can change it.


140
00:05:25,896 --> 00:05:27,486
They can pull in
the date, you know,


141
00:05:27,836 --> 00:05:29,716
maybe to incentivize
you to buy early.


142
00:05:30,416 --> 00:05:32,616
So what can we do in the Apple
Store app to remind users


143
00:05:32,616 --> 00:05:34,836
of this event and make
this process even better?


144
00:05:36,236 --> 00:05:38,146
This is the iPhone
page in our app.


145
00:05:38,146 --> 00:05:39,406
You can learn about the iPhone.


146
00:05:39,796 --> 00:05:42,346
You can choose the model and
the color and you can buy.


147
00:05:43,366 --> 00:05:45,716
When you buy, we're going
to auto detect your carrier


148
00:05:45,906 --> 00:05:47,166
and we're going to
tell you, "Hey,


149
00:05:47,166 --> 00:05:49,966
we need to go query the
carrier on your behalf to find


150
00:05:49,966 --> 00:05:50,876
out what your price is."


151
00:05:51,576 --> 00:05:53,996
We take some info from you
that the carrier needs.


152
00:05:54,156 --> 00:05:56,956
We're going to encrypt this and
we're going to send it securely.


153
00:05:56,956 --> 00:05:58,536
And then, we're going
to come back


154
00:05:58,856 --> 00:05:59,916
with the price for your phone.


155
00:06:00,366 --> 00:06:03,096
In this case, you're eligible
for a partial discount


156
00:06:03,096 --> 00:06:05,416
of 449 for the 16 gigabyte.


157
00:06:05,746 --> 00:06:09,496
On April 15th, you can get
the full discount of 199


158
00:06:09,806 --> 00:06:11,216
and that's all the
features used to be.


159
00:06:11,346 --> 00:06:13,456
And it would be up to you
if you don't want to buy now


160
00:06:13,456 --> 00:06:15,916
to come back later and go
through this process again.


161
00:06:16,686 --> 00:06:18,046
Then we added Notify Me.


162
00:06:18,736 --> 00:06:20,906
That's your way to say, "Hey,
Apple Store app, I don't care


163
00:06:20,906 --> 00:06:22,656
about this to think
about this stuff.


164
00:06:22,656 --> 00:06:23,886
You tell me when I'm eligible."


165
00:06:24,426 --> 00:06:25,416
OK, we can do that.


166
00:06:25,866 --> 00:06:28,226
The first way we did this
was through Calendar Events.


167
00:06:28,466 --> 00:06:30,886
And we-- you tap there, we just
put an event on your calendar.


168
00:06:31,336 --> 00:06:32,676
You don't have to
think about it anymore


169
00:06:32,676 --> 00:06:33,886
and they'll be there for you.


170
00:06:34,386 --> 00:06:36,126
Or remember, it's a dynamic date


171
00:06:36,196 --> 00:06:37,816
and if the carrier
changes the date,


172
00:06:38,476 --> 00:06:39,796
the Calendar Event is static.


173
00:06:40,596 --> 00:06:42,636
So then we built it
using Push Notifications.


174
00:06:43,806 --> 00:06:46,156
And so, if you swipe
that toggle to on,


175
00:06:46,926 --> 00:06:48,686
we're going to do is we're
going to schedule a job


176
00:06:48,686 --> 00:06:52,636
on our service side and query
the carrier on a regular basis


177
00:06:52,636 --> 00:06:55,356
and in intelligent way and we'll
notify you the first moment


178
00:06:55,616 --> 00:06:56,306
that you're eligible.


179
00:06:57,396 --> 00:07:00,526
So then, on April 15th, maybe
the app is on the background,


180
00:07:00,526 --> 00:07:03,556
your phone is on your pocket,
or whatever that date is,


181
00:07:03,726 --> 00:07:04,826
you're going to get
something like this.


182
00:07:04,826 --> 00:07:07,746
It's a push notification from
our app, "Hey, good news,


183
00:07:07,746 --> 00:07:10,106
you can get the phone at
the best price right now."


184
00:07:10,216 --> 00:07:12,476
You swipe in, we'll
take you to the app,


185
00:07:12,696 --> 00:07:15,236
we'll show you the best price,
and you just tap to buy,


186
00:07:15,236 --> 00:07:17,486
and it can ship to your house
or pick it up at the store.


187
00:07:18,496 --> 00:07:20,666
And that's iPhone
upgrade notification.


188
00:07:20,966 --> 00:07:23,186
So we've taken this
event, get this iPhone


189
00:07:23,186 --> 00:07:26,066
and we've reminded users about
it and made the process easier.


190
00:07:27,326 --> 00:07:29,506
So, we're going to talk about
the example then we talk


191
00:07:29,506 --> 00:07:30,786
about the technology behind it.


192
00:07:31,696 --> 00:07:33,006
First is Calendar Events.


193
00:07:34,226 --> 00:07:36,516
This is simple to use
but pretty effective.


194
00:07:36,966 --> 00:07:38,396
And I'm not going to
spend too much time here.


195
00:07:38,396 --> 00:07:40,216
Pretty much all the
skeleton code is here.


196
00:07:40,576 --> 00:07:43,396
Innermost block is where you
create the event and save it.


197
00:07:43,736 --> 00:07:45,456
The outermost stuff is
little more interesting.


198
00:07:45,526 --> 00:07:46,796
It handles the privacy alert.


199
00:07:47,196 --> 00:07:50,136
Your app has to ask user
permission to use the calendar


200
00:07:50,396 --> 00:07:53,336
and that code is going
to take care of that.


201
00:07:53,546 --> 00:07:56,396
OK. Now, a little
more sophisticated,


202
00:07:56,636 --> 00:07:57,566
Push Notifications.


203
00:07:58,126 --> 00:08:00,706
This is the richer way to
inform users and it's dynamic.


204
00:08:00,706 --> 00:08:02,666
You can have those dynamic
events 'cause your server is


205
00:08:02,666 --> 00:08:04,556
going to decide when
to inform users.


206
00:08:05,056 --> 00:08:07,106
It's pretty straightforward.


207
00:08:07,106 --> 00:08:09,946
You register pushes-- you
register for Push with this API.


208
00:08:10,686 --> 00:08:12,616
You then take the
Token with this API.


209
00:08:12,726 --> 00:08:15,566
Now the token uniquely
represents your app


210
00:08:15,836 --> 00:08:16,706
on this device.


211
00:08:17,786 --> 00:08:20,036
Send that Token to the
server-side where you store it.


212
00:08:20,506 --> 00:08:22,736
When your server decides,
"Hey, it's time to do a push,


213
00:08:22,736 --> 00:08:27,136
the event is here," you send
the push to APNS via the Token


214
00:08:27,436 --> 00:08:30,346
and then APNS, that's the Apple
Push Notifications Service,


215
00:08:30,926 --> 00:08:33,756
they're going to target
that user by that Token.


216
00:08:34,556 --> 00:08:36,635
They'll get an alert and
then if they swipe in,


217
00:08:36,635 --> 00:08:38,616
your app will get woken up
and you're going to have


218
00:08:38,616 --> 00:08:41,346
to handle this did receive
remote notification method.


219
00:08:41,996 --> 00:08:43,806
And that's it, pretty
straightforward


220
00:08:43,926 --> 00:08:45,926
but pretty powerful
way to inform users.


221
00:08:47,126 --> 00:08:49,226
So we talk about the
technology behind the example.


222
00:08:49,896 --> 00:08:52,006
Now, we'll do some tips, tricks,


223
00:08:52,006 --> 00:08:53,536
and best practices
to use this stuff.


224
00:08:54,196 --> 00:08:59,456
First one is the big no,
no and there's X over there


225
00:08:59,456 --> 00:09:00,336
in case you're wondering.


226
00:09:00,676 --> 00:09:02,246
And it's the red X.


227
00:09:02,246 --> 00:09:04,676
And it's the only red X that
I have but it's very important


228
00:09:04,676 --> 00:09:07,246
because of this kind of stuff.


229
00:09:07,426 --> 00:09:09,986
How many of you can identify
what this, you know, "Hey,


230
00:09:09,986 --> 00:09:11,866
you haven't used me in
two weeks or five days.


231
00:09:12,096 --> 00:09:12,796
Please open me up."


232
00:09:13,486 --> 00:09:14,086
Pretty annoying.


233
00:09:14,746 --> 00:09:18,266
So, notify users of
events they care about,


234
00:09:18,266 --> 00:09:20,346
only of events they care about.


235
00:09:20,906 --> 00:09:22,796
'Cause if you don't, if you
bought at them like this,


236
00:09:23,046 --> 00:09:24,866
they going to turn off,
pushes globally for your app


237
00:09:24,866 --> 00:09:26,186
and you can't notify them again.


238
00:09:26,426 --> 00:09:28,956
Or worse, you're going to
hold down on your app icon.


239
00:09:28,996 --> 00:09:30,466
And your app icons
start jiggling.


240
00:09:30,926 --> 00:09:32,296
You guys know why it
starts jiggling, right?


241
00:09:32,906 --> 00:09:41,186
'Cause they're scared,
they're going to get deleted.


242
00:09:41,186 --> 00:09:41,331
[ Laughter ]


243
00:09:41,331 --> 00:09:41,476
[ Applause ]


244
00:09:41,476 --> 00:09:43,556
And then they're going to
click that X and they're going


245
00:09:43,556 --> 00:09:45,966
to delete it and never
to download it again.


246
00:09:45,966 --> 00:09:47,046
So don't let it happen to you.


247
00:09:47,516 --> 00:09:48,336
How do you do it?


248
00:09:48,806 --> 00:09:49,486
It's so simple.


249
00:09:49,586 --> 00:09:51,286
Provide an opt-in method.


250
00:09:51,776 --> 00:09:54,416
Tell them or explain the value
of this feature and let them opt


251
00:09:54,416 --> 00:09:55,676
in like we did with our toggle.


252
00:09:56,226 --> 00:09:58,066
You might be scared, "Oh then
nobody is going to use it."


253
00:09:58,126 --> 00:10:00,146
Believe me, if you explain
the value, people don't want


254
00:10:00,146 --> 00:10:01,036
to think about these things.


255
00:10:01,036 --> 00:10:01,976
They want to be reminded.


256
00:10:02,466 --> 00:10:03,986
So, explain the value
and they'll opt


257
00:10:03,986 --> 00:10:05,016
in then you know they want it.


258
00:10:05,566 --> 00:10:07,886
Provide this with the
correct moment in the flow.


259
00:10:07,886 --> 00:10:10,796
In our flow, remember, you
just checked your eligibility,


260
00:10:10,796 --> 00:10:13,256
you gave us all the information
then we asked you to opt in.


261
00:10:13,446 --> 00:10:14,436
It's a good time.


262
00:10:15,006 --> 00:10:17,816
And provide some settings where
users can turn this on or off


263
00:10:17,996 --> 00:10:19,816
and we'll talk more about
that in the next slide.


264
00:10:20,396 --> 00:10:21,016
So do not spam.


265
00:10:21,656 --> 00:10:21,916
Thank you.


266
00:10:22,836 --> 00:10:27,036
OK. So, In-App Notification
settings, I'm not talking


267
00:10:27,036 --> 00:10:28,116
about the settings app here,


268
00:10:28,116 --> 00:10:30,056
I'm talking about settings
inside your own app.


269
00:10:30,606 --> 00:10:33,186
For example, in the Apple
Store app, in our More tab,


270
00:10:33,226 --> 00:10:34,716
we've got this notification
section.


271
00:10:34,886 --> 00:10:37,346
You tap that, you're going
to see something like this.


272
00:10:37,656 --> 00:10:39,206
This is all the notifications
we do.


273
00:10:39,656 --> 00:10:42,816
The upgrade ones, we talk about
on top, then order status,


274
00:10:42,816 --> 00:10:45,016
when does your order ship,
when is it delivering.


275
00:10:45,526 --> 00:10:47,576
Reservations, when is your
Genius Bar reservation


276
00:10:47,576 --> 00:10:47,966
coming up?


277
00:10:48,436 --> 00:10:51,146
And then location-based
alerts which we'll talk


278
00:10:51,146 --> 00:10:53,196
about in the next section
in Storefront Pickup.


279
00:10:54,046 --> 00:10:55,736
So, this is great if
you have many types


280
00:10:55,736 --> 00:10:56,806
of Push Notifications.


281
00:10:56,806 --> 00:10:59,496
If you have only one,
maybe you don't need this.


282
00:10:59,496 --> 00:11:01,906
But if you have many types, this
is a great way to handle it.


283
00:11:02,476 --> 00:11:08,236
Why? Because it reduces
the chance


284
00:11:08,546 --> 00:11:10,066
that a user will
completely turn off Push.


285
00:11:10,066 --> 00:11:12,616
If they're annoyed by one
of this, they might turn


286
00:11:12,616 --> 00:11:14,106
that one off and keep
the other ones on.


287
00:11:14,106 --> 00:11:15,736
So, it's pretty obvious,
pretty simple,


288
00:11:15,736 --> 00:11:18,416
a lot of people don't do it
but this will be the best way


289
00:11:18,416 --> 00:11:23,166
to keep those pushes
that people want on.


290
00:11:23,426 --> 00:11:26,926
OK. Also, consider the time
of day, very important.


291
00:11:28,066 --> 00:11:30,056
So, don't send the push in
the middle of the night,


292
00:11:30,056 --> 00:11:31,076
don't wake somebody up.


293
00:11:31,136 --> 00:11:31,866
Don't disturb them.


294
00:11:32,916 --> 00:11:34,226
Be polite basically.


295
00:11:34,226 --> 00:11:36,266
This is also going
to feel like spamming


296
00:11:36,266 --> 00:11:37,516
if you send it at
the wrong time.


297
00:11:37,926 --> 00:11:40,736
So, consider the time of
day, consider when is best


298
00:11:40,736 --> 00:11:43,256
to send this, and also,
think about time zones.


299
00:11:43,256 --> 00:11:45,306
If you have a worldwide
app, you want to think


300
00:11:45,306 --> 00:11:46,856
about time zones there
or even in the US,


301
00:11:46,856 --> 00:11:47,886
you have multiple time zones.


302
00:11:49,236 --> 00:11:50,096
One thing I recommend you


303
00:11:50,096 --> 00:11:52,946
to do is create a Do Not Disturb
Time window on your server-side.


304
00:11:53,046 --> 00:11:54,346
Maybe put it in your
Push Engine.


305
00:11:54,946 --> 00:11:57,786
Users have the do not
disturb setting on their phone


306
00:11:58,226 --> 00:12:00,296
but they might not use that
so you cannot rely on it.


307
00:12:00,726 --> 00:12:04,246
So in this way, maybe in your
Push Engine, if there's a bug


308
00:12:04,246 --> 00:12:06,816
or something and a request comes
in your push engine at 3 a.m.,


309
00:12:07,156 --> 00:12:08,006
"Hey, send this push."


310
00:12:08,406 --> 00:12:10,286
Your Push Engine can be inactive


311
00:12:10,286 --> 00:12:12,366
and queue those requests
using some queuing system.


312
00:12:13,006 --> 00:12:14,546
Then when it's time
to send pushes again,


313
00:12:14,846 --> 00:12:16,156
the Push Engine becomes active


314
00:12:16,596 --> 00:12:18,236
and it starts consuming
from the queue.


315
00:12:18,476 --> 00:12:20,096
It's kind of a last
minute safety check


316
00:12:20,336 --> 00:12:21,146
on your server-side.


317
00:12:21,316 --> 00:12:23,186
Just the recommendation
we found pretty useful.


318
00:12:24,596 --> 00:12:27,286
Final tip and trick I
wanted to talk about is


319
00:12:27,286 --> 00:12:31,046
to be a good citizen and please
clean up the dead push tokens.


320
00:12:31,376 --> 00:12:33,836
Users might wipe the phone,
they might delete your app,


321
00:12:33,896 --> 00:12:36,486
they might turn off
pushes for your app


322
00:12:36,616 --> 00:12:38,686
so then these tokens
are no longer valid.


323
00:12:39,346 --> 00:12:41,686
OK? And you can send pushes
to them, nothing is going


324
00:12:41,686 --> 00:12:44,716
to happen except you're going to
clog the system for valid pushes


325
00:12:44,716 --> 00:12:45,636
and valid push tokens.


326
00:12:46,386 --> 00:12:47,756
So please clean up.


327
00:12:47,756 --> 00:12:50,846
Very easy, query the Apple Push
Notification Feedback Service


328
00:12:51,366 --> 00:12:53,566
as there's where you'll
query it using SSL.


329
00:12:53,956 --> 00:12:55,506
You'll get a list
of push tokens.


330
00:12:56,196 --> 00:12:57,466
The list will be
cleared when you get it.


331
00:12:57,466 --> 00:13:01,846
And then you parse the list
and just stop using them.


332
00:13:01,986 --> 00:13:03,306
Usually that means
you delete them


333
00:13:03,306 --> 00:13:05,086
on your data store or whatever.


334
00:13:05,406 --> 00:13:07,046
So please, be a good citizen.


335
00:13:07,626 --> 00:13:11,016
And that's it, that's the
time before the event.


336
00:13:11,516 --> 00:13:13,816
And now, the events arrived,
it's here, it's today


337
00:13:13,816 --> 00:13:15,256
and users are arriving.


338
00:13:15,726 --> 00:13:16,296
What do you do?


339
00:13:16,786 --> 00:13:17,436
Welcome them.


340
00:13:17,966 --> 00:13:22,026
And in our timeline, we
are now at the event.


341
00:13:22,256 --> 00:13:23,446
We're going to welcome
our users.


342
00:13:24,686 --> 00:13:26,866
When I say welcome them,
I don't mean just roll


343
00:13:26,866 --> 00:13:27,686
out the welcome mat.


344
00:13:28,746 --> 00:13:30,286
I mean roll out the red carpet.


345
00:13:30,626 --> 00:13:31,896
Make them feel like a star.


346
00:13:33,206 --> 00:13:34,406
How do you do that?


347
00:13:35,196 --> 00:13:38,316
I'll show you with the feature
we call Storefront Pickup.


348
00:13:38,416 --> 00:13:39,576
No setting the scene now,


349
00:13:39,576 --> 00:13:41,066
I'm just going straight
into this one.


350
00:13:42,686 --> 00:13:45,256
Back to the Upper West Side
Apple Store and meet John.


351
00:13:46,136 --> 00:13:47,816
John made an order with
the Apple Store app.


352
00:13:48,056 --> 00:13:50,346
He's going to pick it up in
the Upper West Side store.


353
00:13:50,346 --> 00:13:51,596
He wanted to pick
it up in the store.


354
00:13:52,746 --> 00:13:53,666
When he made this order,


355
00:13:54,116 --> 00:13:56,746
the Apple Store app created a
virtual perimeter, virtual fence


356
00:13:56,746 --> 00:13:59,016
or region around the
Upper West Side store.


357
00:13:59,926 --> 00:14:01,666
And we told iOS Core
Location, "Hey,


358
00:14:01,666 --> 00:14:04,556
when John crosses this
region even if our app is


359
00:14:04,556 --> 00:14:07,506
in the background or the phone
is in the pocket, wake us up,


360
00:14:07,696 --> 00:14:08,476
we want to do something."


361
00:14:09,266 --> 00:14:11,736
So when John crosses it,
Core Location detects that,


362
00:14:12,366 --> 00:14:14,986
wakes us up, we take a
look if John has an order


363
00:14:15,286 --> 00:14:16,836
and then we pop an alert.


364
00:14:17,356 --> 00:14:19,416
And John sees this says "Hey
John, you're near the store,


365
00:14:19,776 --> 00:14:20,706
there's an order for you here.


366
00:14:20,706 --> 00:14:21,696
Do you want to pick it up?"


367
00:14:22,636 --> 00:14:23,526
John says, "Yes."


368
00:14:24,406 --> 00:14:25,866
And then we tell him, "OK,


369
00:14:25,906 --> 00:14:27,916
one of our employees is
getting your order ready.


370
00:14:28,476 --> 00:14:29,186
Just come on over."


371
00:14:29,596 --> 00:14:31,276
And we send a signal to
the back of the house


372
00:14:31,556 --> 00:14:33,556
where they start putting it
in a bag and getting it ready.


373
00:14:34,816 --> 00:14:36,436
As John approaches
right on the front,


374
00:14:36,966 --> 00:14:38,316
he's going to get
another notification.


375
00:14:38,636 --> 00:14:40,906
And it's going to say, "Hey,
one of our employees, Hillary,


376
00:14:41,406 --> 00:14:44,986
has your product, has your
order, and she wants to meet you


377
00:14:44,986 --> 00:14:47,076
up at some location
like the entrance."


378
00:14:47,466 --> 00:14:50,806
And right as John--
and so John swipes that


379
00:14:51,106 --> 00:14:52,086
and goes into the app.


380
00:14:52,086 --> 00:14:53,256
We'll show him a
picture of Hillary.


381
00:14:53,256 --> 00:14:55,456
So, you know who she is
and can recognize her.


382
00:14:56,066 --> 00:14:59,156
And then as John enters
right around the entrance,


383
00:14:59,696 --> 00:15:01,086
Hillary will materialize.


384
00:15:01,086 --> 00:15:02,186
More importantly, John's


385
00:15:02,186 --> 00:15:02,776
[ Laughter ]


386
00:15:02,776 --> 00:15:04,926
order will materialize, OK?


387
00:15:05,436 --> 00:15:06,876
And it's there for John.


388
00:15:06,876 --> 00:15:08,556
Now John didn't have
to go in line.


389
00:15:08,556 --> 00:15:09,846
He didn't have to ask for help.


390
00:15:09,846 --> 00:15:11,166
He didn't have to be bothered.


391
00:15:11,166 --> 00:15:14,706
He was just coming to the store,
he got welcomed and he's there


392
00:15:14,706 --> 00:15:16,056
for his important event to pick


393
00:15:16,056 --> 00:15:17,746
up that phone he got
at the best price.


394
00:15:18,666 --> 00:15:20,486
And there it is, that
Storefront Pickup.


395
00:15:21,676 --> 00:15:23,436
So think about in
your-- thank you.


396
00:15:23,936 --> 00:15:27,746
[ Applause ]


397
00:15:28,246 --> 00:15:30,636
So, think about in your own
apps what you can do here.


398
00:15:30,636 --> 00:15:32,626
Maybe you have a
restaurant, you can say, "Hey,


399
00:15:32,626 --> 00:15:34,846
we've detected you've come
to the restaurant, welcome.


400
00:15:34,976 --> 00:15:36,806
Go to the bar, we're going
to get your table ready."


401
00:15:36,806 --> 00:15:38,876
And then we'll buzz you
when your table is ready


402
00:15:38,876 --> 00:15:40,206
and your phone can
buzz them again.


403
00:15:41,036 --> 00:15:42,376
You can eliminate those plastic,


404
00:15:42,376 --> 00:15:44,546
you know those pager things
they have at the restaurant,


405
00:15:44,546 --> 00:15:46,006
you can eliminate
that with your app.


406
00:15:46,386 --> 00:15:48,616
So, pretty cool stuff
you can do with it.


407
00:15:48,816 --> 00:15:50,896
You can welcome people to
the airport and say, "Hey,


408
00:15:50,896 --> 00:15:52,406
you know-- " I don't
know if you've ever flown


409
00:15:52,716 --> 00:15:54,586
from an airport like
SFO like on Friday


410
00:15:54,586 --> 00:15:56,346
at 5 or 6, it's very bad."


411
00:15:56,526 --> 00:15:58,196
So, you can tell him, "Hey,
here are the security lines


412
00:15:58,196 --> 00:15:59,806
that are open and
here is the wait time


413
00:15:59,806 --> 00:16:01,016
in each line," for example.


414
00:16:01,596 --> 00:16:03,376
So, a lot of useful things
you can do with this.


415
00:16:04,596 --> 00:16:05,986
What is the technology
behind this?


416
00:16:06,386 --> 00:16:07,626
It's called Region Monitoring.


417
00:16:07,626 --> 00:16:11,426
This is a feature
of Core Location.


418
00:16:11,626 --> 00:16:14,046
You basically create regions,
latitude and longitude


419
00:16:14,416 --> 00:16:16,206
and you give it a radius, right?


420
00:16:16,206 --> 00:16:19,066
And then you call this API,
start monitoring for region


421
00:16:19,366 --> 00:16:21,296
and then your app can
go in the background.


422
00:16:21,296 --> 00:16:24,786
Core Location will monitor
in a very low power mode.


423
00:16:26,266 --> 00:16:29,076
When Core Location detects
that you've crossed a boundary,


424
00:16:29,076 --> 00:16:30,886
you're at the region,
you're then--


425
00:16:31,206 --> 00:16:32,306
your app will wake
up and you're going


426
00:16:32,306 --> 00:16:34,056
to handle these delegates
that it will call.


427
00:16:35,516 --> 00:16:37,266
Finally, if you find the
reason, there's a reason


428
00:16:37,266 --> 00:16:39,926
to wake the user up, they
have an order or whatever,


429
00:16:40,576 --> 00:16:42,426
you then post the local
notification using these


430
00:16:42,426 --> 00:16:42,886
two methods.


431
00:16:42,886 --> 00:16:45,226
You can schedule one for
later, on the bottom one,


432
00:16:45,226 --> 00:16:46,726
you can present one right now.


433
00:16:47,536 --> 00:16:48,176
That's it.


434
00:16:48,856 --> 00:16:51,756
That's all you need to do for a
pretty magical feature, right?


435
00:16:52,146 --> 00:16:53,376
So, Region Monitoring.


436
00:16:55,036 --> 00:16:59,436
Now, tips, tricks, and best
practices, very important.


437
00:16:59,436 --> 00:17:03,556
We want to keep the battery
full so minimize battery drain.


438
00:17:04,286 --> 00:17:05,846
When you're woken
up by Core Location,


439
00:17:05,846 --> 00:17:08,786
you're running in
the background.


440
00:17:08,786 --> 00:17:10,996
And you know and it's
not a secret that running


441
00:17:10,996 --> 00:17:13,396
in the background and especially
calling the server-side,


442
00:17:13,596 --> 00:17:15,455
network call is going
to use up power.


443
00:17:15,776 --> 00:17:17,726
If you do this too
much, users will notice.


444
00:17:17,726 --> 00:17:19,896
They will notice your battery--
They will isolate your app


445
00:17:19,896 --> 00:17:21,185
and they will do that thing,


446
00:17:21,185 --> 00:17:23,915
that story I told you
deleting it, right?


447
00:17:24,326 --> 00:17:25,866
So, what to do?


448
00:17:26,016 --> 00:17:28,866
Just-- you know, it's obvious
but minimize the background code


449
00:17:28,866 --> 00:17:30,816
and wait and you employ
some safety checks.


450
00:17:31,536 --> 00:17:33,396
I'll give you an example
or/and caching as well.


451
00:17:33,396 --> 00:17:34,336
I'll give you an example.


452
00:17:34,876 --> 00:17:37,136
You have a restaurant at the
mall or at the shop or whatever


453
00:17:37,136 --> 00:17:39,206
and the user walk-in
in the mall,


454
00:17:39,206 --> 00:17:41,376
it keeps crossing your fence
and the app is waking up,


455
00:17:41,376 --> 00:17:43,916
he doesn't even know
it's waking up.


456
00:17:44,256 --> 00:17:47,416
If you've woken up, call the
server, you got the server data


457
00:17:47,416 --> 00:17:50,016
and you woken up 5, 10 minutes
later, even an hour later,


458
00:17:50,416 --> 00:17:52,076
maybe that data is still
fresh and you don't need


459
00:17:52,076 --> 00:17:53,716
to call again so
you save on that.


460
00:17:54,156 --> 00:17:57,336
And then employ some time
stamps and things like that.


461
00:17:57,336 --> 00:17:59,856
Maybe if you were
woken up 5 minutes ago


462
00:17:59,896 --> 00:18:02,676
or 5 minutes before that, you
don't need to do anything again.


463
00:18:02,676 --> 00:18:04,156
You've done the work you
need to do for the day


464
00:18:04,156 --> 00:18:05,806
and you can just
shut down right away.


465
00:18:06,286 --> 00:18:09,156
And maybe have some upper limit
of how long you can be awake


466
00:18:09,496 --> 00:18:11,996
within a given day and
enforce that to make sure


467
00:18:11,996 --> 00:18:14,966
that the battery doesn't drain.


468
00:18:15,136 --> 00:18:17,896
Finally, I know you love
to do this, but finally,


469
00:18:17,896 --> 00:18:19,716
you need to do significant
testing on features


470
00:18:19,716 --> 00:18:22,346
like this both in instruments
and automated testing


471
00:18:22,866 --> 00:18:25,216
but also realize nothing
will replace this --


472
00:18:25,476 --> 00:18:27,686
so, load you apps up on the
phone, put in your pocket,


473
00:18:27,686 --> 00:18:30,086
walk around the mall or
whatever your use case is


474
00:18:30,276 --> 00:18:31,266
and actually test this.


475
00:18:31,706 --> 00:18:34,126
Make sure it's not draining.


476
00:18:34,256 --> 00:18:37,216
OK, related topic is privacy.


477
00:18:37,916 --> 00:18:39,746
When you're monitoring
location or regions,


478
00:18:40,086 --> 00:18:41,326
this arrow is going
to appear, right?


479
00:18:41,356 --> 00:18:42,596
The Core Location arrow appears


480
00:18:42,596 --> 00:18:44,216
on the top right
of users' devices.


481
00:18:44,986 --> 00:18:45,766
They notice this thing.


482
00:18:46,336 --> 00:18:49,736
And when they notice that
they think often two things.


483
00:18:50,176 --> 00:18:51,556
"Hey, Mr. App, you
know where I am."


484
00:18:51,706 --> 00:18:52,966
Why? Why do you need to know?


485
00:18:53,806 --> 00:18:56,976
Or you're draining
my battery, right?


486
00:18:56,976 --> 00:18:58,506
You're constantly
monitoring locations


487
00:18:58,506 --> 00:18:59,736
so you're probably
draining my battery.


488
00:19:00,506 --> 00:19:01,536
So what do you do about this?


489
00:19:02,726 --> 00:19:05,026
First one is simple, be
upfront with your users,


490
00:19:05,026 --> 00:19:08,206
just like the opt-in method we
did with Push Notifications.


491
00:19:08,736 --> 00:19:09,846
Ask them to opt in to this.


492
00:19:09,896 --> 00:19:11,606
Tell them why you're
monitoring location,


493
00:19:11,606 --> 00:19:12,966
explain the value of this.


494
00:19:13,386 --> 00:19:15,916
And believe me, if you
explain the value well,


495
00:19:15,916 --> 00:19:16,736
they will opt in.


496
00:19:17,026 --> 00:19:18,896
So they're not surprised
when they see that arrow.


497
00:19:19,856 --> 00:19:22,716
And then other than the other
battery savings stuff we talked


498
00:19:22,716 --> 00:19:25,496
about, monitor location
only as needed.


499
00:19:25,496 --> 00:19:26,766
Minimize that arrow.


500
00:19:26,966 --> 00:19:28,936
If you don't need to
monitor locations, do not.


501
00:19:29,676 --> 00:19:30,716
There are three things
you can do.


502
00:19:30,716 --> 00:19:32,496
First one is the solid arrow.


503
00:19:33,106 --> 00:19:35,326
That means you're monitoring
a significant location change


504
00:19:35,326 --> 00:19:36,726
when your app is in background.


505
00:19:37,396 --> 00:19:38,926
It means if a user
moved all the way


506
00:19:38,926 --> 00:19:40,776
over there significantly,
you'll wake up.


507
00:19:40,776 --> 00:19:42,246
And so you'll wake
up quite often.


508
00:19:42,576 --> 00:19:44,426
If you really need
to do that, do that.


509
00:19:44,426 --> 00:19:45,526
Maybe you're a Sports app


510
00:19:45,526 --> 00:19:46,996
and you're tracking how
far they're running,


511
00:19:47,336 --> 00:19:48,106
you might need to do that.


512
00:19:48,296 --> 00:19:49,146
But if you don't need to,


513
00:19:49,146 --> 00:19:50,896
if you're just monitoring
static locations


514
00:19:50,896 --> 00:19:53,976
like we are then use a fence
and that will use less power.


515
00:19:54,486 --> 00:19:56,736
And then if you don't
need to monitor it, don't.


516
00:19:57,376 --> 00:20:00,576
So if you don't have an order
with the Apple Store app,


517
00:20:01,016 --> 00:20:02,056
we're not going to
fence anything


518
00:20:02,116 --> 00:20:04,196
and you won't see any
arrow, and users notice this


519
00:20:04,706 --> 00:20:07,196
and they appreciate that you
monitor location as needed.


520
00:20:07,596 --> 00:20:11,786
Finally, a tip for you guys
who have many locations,


521
00:20:11,786 --> 00:20:13,096
maybe have a chain of stores.


522
00:20:13,596 --> 00:20:17,036
Remember, Core Location allows
you only 20 regions to monitor.


523
00:20:17,736 --> 00:20:19,676
So you might want to be smart
about how you monitor them,


524
00:20:19,866 --> 00:20:22,766
if you need to monitor
all at the same time.


525
00:20:22,766 --> 00:20:25,706
So, when you start, check the
current location of the user,


526
00:20:25,936 --> 00:20:27,356
monitor those around the user.


527
00:20:27,916 --> 00:20:29,496
Maybe provide some
kind of zip code


528
00:20:29,496 --> 00:20:32,816
or address thing they can input,
and then if they're traveling,


529
00:20:32,816 --> 00:20:34,126
you can fence another area.


530
00:20:35,106 --> 00:20:36,266
Then you're going to
need to update this.


531
00:20:36,326 --> 00:20:37,696
For example, if they moved house


532
00:20:37,696 --> 00:20:40,586
or if they're traveling
somewhere you update


533
00:20:40,586 --> 00:20:42,346
and you update when
the app is awake.


534
00:20:42,616 --> 00:20:44,416
When the app is awake
battery is being used anyway,


535
00:20:44,416 --> 00:20:45,746
that's screen is
being used, right?


536
00:20:45,746 --> 00:20:48,246
So you can do it then and
not use much more battery.


537
00:20:48,246 --> 00:20:50,846
And if you really need
to, when the app is


538
00:20:50,846 --> 00:20:52,756
in the background you
can update your regions


539
00:20:52,756 --> 00:20:54,246
on a significant
location change.


540
00:20:54,416 --> 00:20:57,056
But remember, that's the solid
arrow and you only do this


541
00:20:57,056 --> 00:21:00,486
if you need to do this.


542
00:21:01,046 --> 00:21:03,256
OK, so we've talked
about, you know,


543
00:21:03,256 --> 00:21:04,436
telling users about events.


544
00:21:04,536 --> 00:21:06,616
We've talked about
welcoming users to events.


545
00:21:07,676 --> 00:21:10,166
Now the users at your event,
at your location enjoying


546
00:21:10,646 --> 00:21:12,526
and spending time at your
event, what can you do


547
00:21:12,726 --> 00:21:13,816
to enrich the experience?


548
00:21:14,216 --> 00:21:17,556
We're coming towards the
end now of our timeline


549
00:21:17,846 --> 00:21:21,246
and the user is spending
time at the location.


550
00:21:21,246 --> 00:21:23,996
So, let's give them something
they will never forget.


551
00:21:24,846 --> 00:21:28,536
Let's make them-- so,
OK, don't scare them


552
00:21:29,006 --> 00:21:31,116
but I'm saying give them
a memorable experience


553
00:21:31,116 --> 00:21:33,476
and let them get immersed
in your environment.


554
00:21:33,476 --> 00:21:35,136
How you're going to do that?


555
00:21:36,136 --> 00:21:37,456
I'll show you with
another feature


556
00:21:37,456 --> 00:21:38,326
from the Apple Store app.


557
00:21:38,416 --> 00:21:40,286
We call this In-Store Mode.


558
00:21:41,696 --> 00:21:45,506
So, this is the Apple Store app
on a normal day, featured tab,


559
00:21:45,506 --> 00:21:46,646
you got your featured product,


560
00:21:46,646 --> 00:21:49,886
some marketing maybe
Father's Day, alright?


561
00:21:50,796 --> 00:21:54,276
But when you approach a retail
store, the Upper West Side,


562
00:21:54,516 --> 00:21:56,156
when you approach the
retail store with the app on


563
00:21:56,156 --> 00:21:58,176
or you turn that-- bring the app


564
00:21:58,226 --> 00:22:02,146
to foreground inside the retail
store, we're going to detect


565
00:22:02,206 --> 00:22:03,886
that you're there
through Core Location


566
00:22:03,886 --> 00:22:05,126
and will bring up this other UI.


567
00:22:05,996 --> 00:22:08,086
We call this In-Store
Mode and it takes over.


568
00:22:09,486 --> 00:22:11,606
And it tells you what's
happening now and it's all


569
00:22:11,606 --> 00:22:12,926
about that location you're at.


570
00:22:13,326 --> 00:22:14,586
On the top, it tells
you where you are


571
00:22:14,586 --> 00:22:16,686
in case you didn't
know, Upper West Side.


572
00:22:17,276 --> 00:22:19,566
And then from the bottom,
just got some useful things,


573
00:22:19,566 --> 00:22:23,216
first is the current marketing
or events that are going on,


574
00:22:23,216 --> 00:22:24,196
you can swipe through those.


575
00:22:24,196 --> 00:22:26,796
You can get in to the
virtual queue, get help,


576
00:22:26,796 --> 00:22:29,016
you can see who was in-- how
many people are in the queue.


577
00:22:29,886 --> 00:22:32,666
You can also get support in book
a Genius Bar Appointment right


578
00:22:32,666 --> 00:22:35,366
there and probably
you can use EasyPay,


579
00:22:35,366 --> 00:22:37,106
a service that's only
available in the store


580
00:22:37,366 --> 00:22:38,696
where you take a
product from the shelf,


581
00:22:39,296 --> 00:22:41,276
with your Apple Store
app, you scan the barcode


582
00:22:41,276 --> 00:22:43,786
with your camera, put in
your Apple ID password


583
00:22:44,096 --> 00:22:44,886
and you bought the product.


584
00:22:44,886 --> 00:22:46,896
And you walk out with
a product in your hand


585
00:22:46,896 --> 00:22:48,136
and the receipt on your phone.


586
00:22:49,396 --> 00:22:53,126
So, these are some very useful
services and information


587
00:22:53,276 --> 00:22:56,076
that we offer right at the
store and our In-Store Mode


588
00:22:56,076 --> 00:22:57,666
to enhance the user's
experience there.


589
00:22:58,196 --> 00:23:01,486
The technology behind this,


590
00:23:01,546 --> 00:23:03,986
this In-Location Mode
is again Core Location


591
00:23:04,356 --> 00:23:06,306
and we're using it now when
the app is in the foreground


592
00:23:06,616 --> 00:23:08,276
and we just trying to
get the current location.


593
00:23:08,616 --> 00:23:09,826
It's an asynchronous process


594
00:23:09,826 --> 00:23:12,746
so your call start updating
location and you get a callback


595
00:23:12,746 --> 00:23:14,626
"did update locations"
and then you handle that.


596
00:23:15,356 --> 00:23:17,206
So now, you know where
the user is and you know


597
00:23:17,206 --> 00:23:18,656
where your location
of interest is.


598
00:23:19,206 --> 00:23:20,126
Compare the distance.


599
00:23:20,936 --> 00:23:22,976
And if it's within a
threshold, some kind of radius


600
00:23:22,976 --> 00:23:25,846
where you consider someone
in the location, you pop open


601
00:23:25,846 --> 00:23:28,836
that the special UI,
that's where that location.


602
00:23:29,446 --> 00:23:31,096
It's that simple.


603
00:23:31,836 --> 00:23:33,186
One thing I do want
to also point out,


604
00:23:33,306 --> 00:23:36,646
when you use Core Location you
can adjust the desired accuracy.


605
00:23:36,646 --> 00:23:38,486
This is being a good
citizen again.


606
00:23:38,486 --> 00:23:39,456
So, if you're miles and miles


607
00:23:39,456 --> 00:23:42,216
and miles away maybe tell Core
Location, "Hey, you don't need


608
00:23:42,216 --> 00:23:44,056
to monitor with such
high accuracy.


609
00:23:44,646 --> 00:23:48,866
You can monitor less accurately
and when it comes close maybe


610
00:23:48,866 --> 00:23:50,106
to the mall where
your restaurant is,


611
00:23:50,486 --> 00:23:52,006
start monitoring
with more accuracy.


612
00:23:52,516 --> 00:23:53,916
So, it saves a little
battery with that.


613
00:23:55,026 --> 00:23:59,066
So, In-Location Mode, now to
talk about some tips, tricks,


614
00:23:59,826 --> 00:24:01,096
and best practices for this.


615
00:24:02,356 --> 00:24:04,936
The UI is going to depend
largely on your use case,


616
00:24:05,006 --> 00:24:06,446
depends on your locations,
right?


617
00:24:06,996 --> 00:24:08,386
So this is the one
that's relevant to us


618
00:24:08,386 --> 00:24:10,966
but there are some generic
guidelines you should follow.


619
00:24:11,946 --> 00:24:14,266
First, be distinctive,
be obvious.


620
00:24:14,506 --> 00:24:16,966
This UI should catch their
eye and it should be different


621
00:24:16,966 --> 00:24:17,896
in your day-to-day app.


622
00:24:18,416 --> 00:24:20,196
Like this, you can't
miss this, right?


623
00:24:21,336 --> 00:24:22,986
And then, focus the user.


624
00:24:22,986 --> 00:24:26,136
Bring front and center, those
features and that information


625
00:24:26,136 --> 00:24:27,806
that matters at that location.


626
00:24:28,296 --> 00:24:31,476
So, we just really fo-- we take
everything else away and focus,


627
00:24:31,476 --> 00:24:33,856
you know, what's happening
now and all the services


628
00:24:34,056 --> 00:24:35,476
that are offered at the store.


629
00:24:36,806 --> 00:24:39,616
Finally, make sure this
UI can be dismissed


630
00:24:39,916 --> 00:24:42,056
and users can access the
normal functions of your app.


631
00:24:43,136 --> 00:24:44,886
For us, there's the
top right corner,


632
00:24:45,026 --> 00:24:47,476
there's the small white
arrow thing, you can see it?


633
00:24:47,726 --> 00:24:50,046
If you tap that,
the UI will minimize


634
00:24:50,136 --> 00:24:51,826
and then you can access
the other functions


635
00:24:52,136 --> 00:24:53,396
of the store-- of the app.


636
00:24:54,586 --> 00:24:56,086
And just to compare the UIs,


637
00:24:57,276 --> 00:24:58,726
you can see just how
different they are


638
00:24:59,506 --> 00:25:02,886
when you're in that location.


639
00:25:03,006 --> 00:25:05,476
Next up, remember,


640
00:25:05,476 --> 00:25:09,896
your In-Location UI is probably
only relevant in your location.


641
00:25:10,436 --> 00:25:12,516
Imagine if we expose,
get help, you know,


642
00:25:12,696 --> 00:25:16,086
or the EasyPay stuff
at your house.


643
00:25:16,086 --> 00:25:18,776
It's confusing and it
can result in bugs too.


644
00:25:18,996 --> 00:25:20,406
So make sure your
UI is only there


645
00:25:20,406 --> 00:25:21,416
when you're at the location.


646
00:25:22,796 --> 00:25:25,606
So you get a monitor for
exit events and watch


647
00:25:25,606 --> 00:25:27,886
and it'll have-- listen-- keep
listening to Core Location.


648
00:25:27,886 --> 00:25:30,066
When the user has left the
location, dismiss the UI.


649
00:25:30,836 --> 00:25:35,456
If the user is looking at your
In-Location UI and puts the app


650
00:25:35,456 --> 00:25:38,796
to background, when they
start the app up again,


651
00:25:38,796 --> 00:25:40,656
do a quick check, are
they still there or not


652
00:25:40,656 --> 00:25:42,426
and then you can dismiss
the UI if they're gone.


653
00:25:43,086 --> 00:25:44,506
There's one thing
to be very careful


654
00:25:44,506 --> 00:25:46,586
about here, boundary conditions.


655
00:25:47,106 --> 00:25:49,866
So, if that table is my
center of my location


656
00:25:49,866 --> 00:25:52,526
and this is the boundary,
right, where I'm in store.


657
00:25:52,906 --> 00:25:54,576
Maybe I'm right here
in Core Location says,


658
00:25:54,576 --> 00:25:57,046
you're in the location,
I pop-up in the UI


659
00:25:57,046 --> 00:25:59,556
and maybe I slightly move
and now I'm out the location.


660
00:26:00,456 --> 00:26:01,996
I close the UI, I slightly move,


661
00:26:01,996 --> 00:26:04,546
I open the UI, it's
annoying, right?


662
00:26:04,916 --> 00:26:07,806
So, you don't want to do
that flashing UI to the user.


663
00:26:07,806 --> 00:26:08,526
So be careful.


664
00:26:09,036 --> 00:26:12,476
The big tip I give you here
is when you detect user is


665
00:26:12,476 --> 00:26:16,426
in that location, maybe you have
a 50-meter radius or something.


666
00:26:17,096 --> 00:26:18,396
Relax those conditions.


667
00:26:18,586 --> 00:26:20,306
Increase them, make
it 100 meters.


668
00:26:20,476 --> 00:26:23,306
Or maybe it's also employed
with some minimum time that has


669
00:26:23,306 --> 00:26:26,246
to pass or minimum distance
they have to move for you


670
00:26:26,246 --> 00:26:28,406
to dismiss this In-Location
Mode.


671
00:26:29,006 --> 00:26:31,396
What you've done is you made
the In-Location feature pretty


672
00:26:31,396 --> 00:26:35,286
sticky and so when--
so that you are sure


673
00:26:35,356 --> 00:26:38,956
that they have left the location
when they do, otherwise,


674
00:26:38,956 --> 00:26:40,006
you'll get that flashing UI.


675
00:26:40,476 --> 00:26:42,066
Anyway, if you can relax
it just a little bit,


676
00:26:42,126 --> 00:26:43,256
it's not going to be a problem.


677
00:26:43,466 --> 00:26:45,366
You're still not going to
pop this UI at the house


678
00:26:45,526 --> 00:26:46,316
or something like that.


679
00:26:47,276 --> 00:26:51,616
So important tips
to remember here.


680
00:26:51,836 --> 00:26:56,346
OK, we talked about Core
Location and Region Monitoring


681
00:26:56,346 --> 00:27:00,036
to welcome the user to an event
and to enrich their experience.


682
00:27:00,936 --> 00:27:01,446
What's next?


683
00:27:02,616 --> 00:27:03,486
OK, you know, what's next but--


684
00:27:03,966 --> 00:27:06,096
How can we take this to
the next level, right?


685
00:27:07,216 --> 00:27:07,746
I'll show you.


686
00:27:07,946 --> 00:27:11,616
With the new technology
from-- available in iOS 7,


687
00:27:11,756 --> 00:27:14,186
it's a Core Location technology
and we call this iBeacons.


688
00:27:14,186 --> 00:27:17,236
I'm going to show you some
examples where we use iBeacons.


689
00:27:17,736 --> 00:27:20,726
I'm going to show you a little
bit about the technology.


690
00:27:21,716 --> 00:27:23,546
And then we're going to show
you how to do this thing


691
00:27:23,546 --> 00:27:25,426
for real in code in a demo.


692
00:27:27,076 --> 00:27:28,456
Two things I want to talk about.


693
00:27:28,456 --> 00:27:29,626
First is Region Monitoring,


694
00:27:29,626 --> 00:27:33,686
the essence is the same except
there's one key difference


695
00:27:33,686 --> 00:27:35,836
with iBeacons region
monitoring, accuracy.


696
00:27:36,926 --> 00:27:39,216
See, instead of using the
traditional Cell Tower


697
00:27:39,216 --> 00:27:43,786
Triangulation, GPS, and Wi-Fi,
when Core Location used to use


698
00:27:43,786 --> 00:27:46,176
that to figure out if
you cross the region.


699
00:27:46,506 --> 00:27:48,976
Now, Core Location tries
to look beacon signals.


700
00:27:49,776 --> 00:27:52,416
Beacons are just hardware
you put out in your location


701
00:27:52,936 --> 00:27:54,786
and they emit-- in
our case Bluetooth LE,


702
00:27:54,786 --> 00:27:55,946
Bluetooth Low Energy.


703
00:27:56,866 --> 00:27:59,686
And we quote-- and those
Bluetooth Low Energy signals can


704
00:27:59,686 --> 00:28:00,596
have specific IDs.


705
00:28:00,946 --> 00:28:04,226
Your app can tell Core Location,
"Hey I'm interested in ID XYZ


706
00:28:04,226 --> 00:28:07,136
or 123 this Bluetooth LE ID."


707
00:28:07,136 --> 00:28:09,806
When Core Location senses
that ID, it wakes your app up


708
00:28:10,236 --> 00:28:12,826
and you can do something.


709
00:28:12,936 --> 00:28:15,496
So, let's see how these
works in one of our examples.


710
00:28:15,566 --> 00:28:17,376
I want to put aside
the Apple Store app


711
00:28:17,376 --> 00:28:18,916
and I wanted to use a museum.


712
00:28:19,166 --> 00:28:20,226
We're now in Paris, France.


713
00:28:20,366 --> 00:28:22,716
This is the Louvre
Museum in Paris,


714
00:28:22,716 --> 00:28:24,386
France and we put
beacons on the entrance.


715
00:28:25,316 --> 00:28:30,096
So, when a user approaches one
of these beacons with the phone


716
00:28:30,096 --> 00:28:32,396
and our app is there, Core
Location detects that,


717
00:28:32,516 --> 00:28:35,446
tells our app and we can throw
up an alert and say, "Hey,


718
00:28:35,446 --> 00:28:36,406
welcome to the museum.


719
00:28:36,636 --> 00:28:37,876
Your guide is ready
to meet you."


720
00:28:38,506 --> 00:28:42,246
User swipes in and we
show pertinent information


721
00:28:42,246 --> 00:28:43,716
and tell them where
the guide is.


722
00:28:44,766 --> 00:28:47,266
Now, it's similar to the other
thing we talked about, right,


723
00:28:47,266 --> 00:28:50,256
the other region monitoring but
the accuracy is the difference.


724
00:28:50,256 --> 00:28:51,616
You can do this right
at the door.


725
00:28:52,176 --> 00:28:54,856
Maybe if you have many
entrances to the museum


726
00:28:54,856 --> 00:28:56,296
or whatever big location
you have,


727
00:28:56,646 --> 00:28:58,066
each one can have
its own iBeacon


728
00:28:58,066 --> 00:29:00,276
and it's a much tighter
accuracy.


729
00:29:00,276 --> 00:29:01,966
And you can know which
entrance the user is


730
00:29:02,516 --> 00:29:03,496
for the guide to meet them.


731
00:29:04,406 --> 00:29:05,206
Pretty powerful.


732
00:29:05,206 --> 00:29:08,236
Now, you get see them
more interesting.


733
00:29:08,236 --> 00:29:11,386
Let's talk about ranging.


734
00:29:12,136 --> 00:29:15,536
In ranging, iBeacons
ranging enables the use cases


735
00:29:15,536 --> 00:29:16,846
around micro-location.


736
00:29:17,446 --> 00:29:19,516
We've cracked the nut on
macro-location, right?


737
00:29:19,886 --> 00:29:21,956
We know you're in this room
maybe or in this building.


738
00:29:21,956 --> 00:29:22,916
We know you're in a restaurant.


739
00:29:23,366 --> 00:29:25,296
We know you're in
a movie theater.


740
00:29:25,296 --> 00:29:26,176
We know you're in store.


741
00:29:26,176 --> 00:29:27,286
We know you're in a museum.


742
00:29:28,046 --> 00:29:30,156
But how cool would it
be if we know you're


743
00:29:30,156 --> 00:29:31,906
at that table versus at the bar?


744
00:29:31,906 --> 00:29:35,286
We know you're at that departure
gate versus this departure gate.


745
00:29:35,686 --> 00:29:36,956
We know you're, you know,


746
00:29:37,026 --> 00:29:38,856
in front of this shelf
instead of that shelf.


747
00:29:39,116 --> 00:29:42,136
We know you're in front of this
painting instead of that statue.


748
00:29:42,756 --> 00:29:46,056
And you can open up a bunch
of use cases there and only


749
00:29:46,056 --> 00:29:48,336
and show some great
features that are pertinent


750
00:29:48,506 --> 00:29:50,596
to the user's immediate
surroundings.


751
00:29:51,506 --> 00:29:52,746
This is very powerful
and I'm going


752
00:29:52,746 --> 00:29:54,826
to show you a very
simple example now.


753
00:29:55,806 --> 00:29:57,176
But what's behind this is


754
00:29:57,176 --> 00:29:59,646
that Core Location
not only sees a signal


755
00:30:00,096 --> 00:30:01,576
but it can tell you how far away


756
00:30:02,026 --> 00:30:03,796
from a signal you are
and that's the power.


757
00:30:04,186 --> 00:30:06,156
This is estimated based
on signal strength


758
00:30:07,206 --> 00:30:09,836
and you can get a range
basically immediate range,


759
00:30:09,986 --> 00:30:13,506
10 centimeters away or so
or near range about two


760
00:30:13,506 --> 00:30:16,646
to three meters away or far
range, and then you react--


761
00:30:16,736 --> 00:30:18,766
your app react based on that.


762
00:30:19,496 --> 00:30:22,716
So, at the museum, we've
heard of this painting right,


763
00:30:22,716 --> 00:30:23,906
and we want to go
and look at it.


764
00:30:24,616 --> 00:30:27,556
And we're there with our
Museum app exploring the museum


765
00:30:28,186 --> 00:30:31,456
and we're constantly querying
Core Location ranging to see


766
00:30:31,456 --> 00:30:32,816
if we're near an artwork


767
00:30:32,816 --> 00:30:35,146
and we've put some
beacons at the artwork.


768
00:30:35,146 --> 00:30:38,136
We put a Mona Lisa beacon
right on near the painting,


769
00:30:38,136 --> 00:30:40,886
it's hidden, you can't see it
but it is emitting Bluetooth LE.


770
00:30:41,686 --> 00:30:44,776
And as you approach with your
app, Core Location tells us


771
00:30:44,776 --> 00:30:47,206
and we'll pop a special UI
to do with the Mona Lisa


772
00:30:47,206 --> 00:30:50,566
and we'll tell information about
the Mona Lisa and the artist.


773
00:30:50,566 --> 00:30:53,286
And whatever makes
sense for your use case,


774
00:30:53,286 --> 00:30:55,236
we can expose some features
like, "Hey, do you want to buy,"


775
00:30:55,236 --> 00:30:57,746
I don't know, "A print
or a Mona Lisa calendar?


776
00:30:58,046 --> 00:30:58,906
Ship it to your house?"


777
00:30:59,506 --> 00:31:00,806
Anything like that.


778
00:31:01,556 --> 00:31:04,666
So, pretty powerful stuff
right at the Mona Lisa.


779
00:31:04,666 --> 00:31:09,926
And then if you walk away,
we'll dismiss that UI.


780
00:31:09,926 --> 00:31:13,736
And you maybe you walk to the
Winged Victory statue also


781
00:31:13,736 --> 00:31:16,266
at the Louvre Museum, and
when you're near by there,


782
00:31:16,266 --> 00:31:19,526
you detect that beacon and you
show them a different UI to do


783
00:31:19,526 --> 00:31:21,886
with the Winged Victory and you
show that information there.


784
00:31:22,386 --> 00:31:24,976
Have you ever been
to the museum, right?


785
00:31:24,976 --> 00:31:26,076
Have you ever had
those audio tours,


786
00:31:26,076 --> 00:31:27,566
have you ever had
those Walkman things?


787
00:31:28,276 --> 00:31:30,616
You know what, so you don't need
that anymore, no more Walkman.


788
00:31:30,976 --> 00:31:33,226
You can just use your
app as a museum guide


789
00:31:33,696 --> 00:31:34,536
with this kind of stuff.


790
00:31:35,226 --> 00:31:37,246
A little bit about
the technology.


791
00:31:37,246 --> 00:31:38,516
[ Applause ]


792
00:31:38,516 --> 00:31:38,886
Thank you.


793
00:31:42,706 --> 00:31:43,576
Thank you, I appreciate that.


794
00:31:43,646 --> 00:31:44,876
A little bit about
the technology.


795
00:31:46,046 --> 00:31:48,246
As I said at the basis
of this is Core Location,


796
00:31:48,246 --> 00:31:50,056
monitoring Bluetooth LE signals


797
00:31:50,456 --> 00:31:53,156
and it can just do
Region Monitoring as well


798
00:31:53,156 --> 00:31:55,506
as it can do ranging
and detect distance.


799
00:31:55,736 --> 00:31:57,536
And Region Monitoring
is when your app is


800
00:31:57,536 --> 00:31:58,886
in the background usually.


801
00:31:59,526 --> 00:32:01,586
But for ranging, your app
needs to be in the foreground


802
00:32:01,766 --> 00:32:04,296
or you can do it scan
on wake which means


803
00:32:04,296 --> 00:32:06,356
when you wake your phone up
even if your app is not on,


804
00:32:06,896 --> 00:32:08,436
Core Location can do
a scan for you there.


805
00:32:09,046 --> 00:32:11,236
It's pretty powerful and you
can bring up a notification.


806
00:32:11,686 --> 00:32:14,496
What's a beacon, you might ask?


807
00:32:14,786 --> 00:32:15,696
It can be a lot of things.


808
00:32:16,066 --> 00:32:17,866
Various hardware
can act as a beacon.


809
00:32:17,986 --> 00:32:20,776
You can buy this third
party program, program them


810
00:32:20,776 --> 00:32:24,346
to emit whatever
Bluetooth signal but also,


811
00:32:24,396 --> 00:32:26,206
your iOS devices can be beacons.


812
00:32:26,686 --> 00:32:30,496
So your iPads, your iPhones with
the new iOS 7 SDK, Public SDK,


813
00:32:30,496 --> 00:32:33,346
you can program them to emit
whatever signal you want


814
00:32:33,946 --> 00:32:36,276
and you can do that
dynamically and programatically


815
00:32:36,746 --> 00:32:38,366
and vary depending
on what's happening.


816
00:32:38,806 --> 00:32:40,116
So, imagine at the
museum, the painting


817
00:32:40,156 --> 00:32:44,296
or the statue has a sign
like an iPad is the sign,


818
00:32:44,296 --> 00:32:46,916
like a smart sign, like we have
in our retail stores maybe,


819
00:32:47,476 --> 00:32:49,366
and you could tell the
information about the painting


820
00:32:49,696 --> 00:32:51,906
but if it's crowded, it's
still emitting Bluetooth LE


821
00:32:51,906 --> 00:32:55,866
in on your app, we can detect
that and show them whatever UI.


822
00:32:56,506 --> 00:32:59,296
So, pretty powerful that you can
use iOS devices for this too.


823
00:32:59,746 --> 00:33:02,076
You can try it out right now.


824
00:33:02,296 --> 00:33:05,256
Finally, to remind you the big
advantage here is the accuracy


825
00:33:05,256 --> 00:33:07,036
and that range that
distance awareness


826
00:33:07,326 --> 00:33:09,486
that lets you do things
you could never do before.


827
00:33:10,446 --> 00:33:13,726
And also worth mentioning,
one Beacon ID, you can have,


828
00:33:13,726 --> 00:33:15,816
maybe have a chain and
you do want to fen--


829
00:33:15,846 --> 00:33:17,836
you know, you want to fence
more than 20 locations.


830
00:33:18,316 --> 00:33:21,206
Once Beacon ID can
represent-- can be one--


831
00:33:21,266 --> 00:33:22,286
the beacons can be deployed


832
00:33:22,286 --> 00:33:23,916
in all these locations
with the same ID.


833
00:33:23,916 --> 00:33:26,136
So, one beacon ID
represents all your location


834
00:33:26,466 --> 00:33:28,596
and you're no longer
bound by that limit of 20.


835
00:33:29,496 --> 00:33:30,866
So, that's pretty powerful too.


836
00:33:31,366 --> 00:33:32,766
Thank you.


837
00:33:33,266 --> 00:33:37,136
[ Applause ]


838
00:33:37,636 --> 00:33:41,106
All right, so, I'm not going to
keep talking about this stuff.


839
00:33:41,236 --> 00:33:41,976
I've talked enough.


840
00:33:42,566 --> 00:33:43,846
Rather than talk, what we


841
00:33:43,846 --> 00:33:45,776
like to do is show you
a demo on this now.


842
00:33:46,206 --> 00:33:47,996
And I want to invite
Yingfeng Su.


843
00:33:47,996 --> 00:33:49,536
He is the Engineering
Manager on my team.


844
00:33:49,966 --> 00:33:51,946
He leads the team that actually
built all the features you


845
00:33:51,946 --> 00:33:52,506
saw today.


846
00:33:53,026 --> 00:33:54,656
And one of his


847
00:33:54,656 --> 00:33:55,716
[ Applause ]


848
00:33:55,716 --> 00:33:55,946
Thank you.


849
00:33:56,121 --> 00:33:58,121
[ Applause ]


850
00:33:58,296 --> 00:34:00,356
And Mathieu Roig is an
engineer on his team.


851
00:34:00,536 --> 00:34:03,076
They've actually built this
Museum app, this demo app


852
00:34:03,076 --> 00:34:05,126
that I showed you and they're
going to show you how this works


853
00:34:05,126 --> 00:34:06,576
in code and do a demo for you.


854
00:34:07,176 --> 00:34:08,766
Take it away.


855
00:34:08,766 --> 00:34:09,436
>> Thank you, Filip.


856
00:34:10,186 --> 00:34:12,136
Hello everyone, my
name is Yingfeng.


857
00:34:12,706 --> 00:34:15,216
I'm here to show you
two exciting demos.


858
00:34:15,866 --> 00:34:19,346
Both are related to the iBeacons
technology newly introduced


859
00:34:19,346 --> 00:34:20,346
in iOS 7.


860
00:34:21,275 --> 00:34:23,426
I'll do code walkthrough
in Xcode.


861
00:34:23,876 --> 00:34:26,686
Then I'll also show you how they
actually work on a real device.


862
00:34:27,706 --> 00:34:29,856
So, the first demo I'm
going to show you --


863
00:34:30,186 --> 00:34:33,565
how to welcome your
customer when they arrive


864
00:34:33,565 --> 00:34:35,326
at the entrance of
your location.


865
00:34:36,056 --> 00:34:38,966
So, you probably think this
feature sounds complicated.


866
00:34:38,966 --> 00:34:41,216
It must take a lot to
time and effort to build.


867
00:34:41,956 --> 00:34:43,616
That's not necessarily the case.


868
00:34:44,326 --> 00:34:46,606
So, please look-- take
a look at the screen


869
00:34:47,016 --> 00:34:49,616
where I'm showing you my
Geofence Manager class.


870
00:34:50,016 --> 00:34:53,356
This is where I grouped all the
Region Monitoring related code


871
00:34:53,356 --> 00:34:54,286
in a one place.


872
00:34:54,876 --> 00:34:57,676
There're only two methods you
need to implement in order


873
00:34:57,676 --> 00:35:00,476
to make this entire thing
work, so let's take a look.


874
00:35:01,576 --> 00:35:03,946
The first one is called
Register Beacon Region.


875
00:35:04,516 --> 00:35:07,916
This is where you tell
iOS, "Please monitor region


876
00:35:07,916 --> 00:35:10,146
for me even if my
app is not running."


877
00:35:11,186 --> 00:35:15,026
So, let's take a look at
the commented code first.


878
00:35:15,426 --> 00:35:17,666
So this, the commented code
shows how you are going


879
00:35:17,666 --> 00:35:20,526
to do it today with iOS
6 Region Monitoring.


880
00:35:21,146 --> 00:35:23,926
You need to use a latitude
and a longitude and a radius,


881
00:35:24,326 --> 00:35:25,656
then you monitor that region.


882
00:35:26,536 --> 00:35:29,226
What I want to show you is that
by just replacing two lines


883
00:35:29,226 --> 00:35:33,136
of code, you can easily
convert a regular region


884
00:35:33,376 --> 00:35:36,336
into a Beacon region which
gives you more accuracy.


885
00:35:36,756 --> 00:35:39,106
And other than that,
everything else works the same.


886
00:35:39,106 --> 00:35:40,946
You don't have to touch
any of your other code.


887
00:35:41,676 --> 00:35:42,446
So, let's take a look.


888
00:35:42,966 --> 00:35:45,406
The first line, you
need to create a UUID.


889
00:35:45,986 --> 00:35:49,386
This is your way to tell
iOS just monitor signals


890
00:35:49,436 --> 00:35:50,286
from my beacons.


891
00:35:50,336 --> 00:35:52,116
Don't monitor someone
else's beacon.


892
00:35:52,616 --> 00:35:54,456
You can use tools
like the UUIDGen


893
00:35:54,456 --> 00:35:56,716
to generate a random
unique identifier.


894
00:35:57,916 --> 00:36:01,806
Next line, you create a CL
Beacon Region object using


895
00:36:01,806 --> 00:36:03,676
that UUID you just created.


896
00:36:04,806 --> 00:36:06,886
And next, of course you need


897
00:36:06,886 --> 00:36:09,976
to create the location manager
itself and assign a delegate


898
00:36:09,976 --> 00:36:12,196
in order to receive
the callback.


899
00:36:13,156 --> 00:36:14,966
And the last, this
is a real deal,


900
00:36:15,156 --> 00:36:18,026
where you call the location
manager start monitoring API


901
00:36:18,766 --> 00:36:21,076
to tell iOS to monitor
this region for you.


902
00:36:21,726 --> 00:36:25,296
iOS is smart enough
to look at the type


903
00:36:25,296 --> 00:36:27,006
of the region object you pass in


904
00:36:27,336 --> 00:36:29,596
and determine what
technology should be used


905
00:36:29,596 --> 00:36:30,516
to monitor that for you.


906
00:36:30,826 --> 00:36:34,646
If you pass in a beacon type,
it will use Beacon technology


907
00:36:34,926 --> 00:36:37,346
but the API is exactly the
same as you have today.


908
00:36:38,396 --> 00:36:39,836
So, that's the method.


909
00:36:40,106 --> 00:36:43,966
I would call this method only
at the most relevant time.


910
00:36:44,346 --> 00:36:46,886
So, when user made a dinner
reservation at your restaurant,


911
00:36:47,276 --> 00:36:50,646
they just reserved the
guided tour at your museum


912
00:36:50,846 --> 00:36:53,246
or they placed an order and
will pick up at your store.


913
00:36:53,686 --> 00:36:56,836
Those are the perfect time to
start such monitoring process.


914
00:36:57,216 --> 00:36:58,336
You don't want to
do it too early.


915
00:36:58,336 --> 00:37:01,456
You don't want to do it blindly
at every startup and have


916
00:37:01,456 --> 00:37:03,346
that arrow show up
unnecessarily.


917
00:37:03,896 --> 00:37:08,306
So now, your customer finally
comes to your location.


918
00:37:08,866 --> 00:37:10,836
At the entrance, iOS detects


919
00:37:10,836 --> 00:37:13,736
that the user crossed the
boundary of this region.


920
00:37:14,286 --> 00:37:17,406
So, this location manager did
enter region callback will


921
00:37:17,406 --> 00:37:17,986
be invoked.


922
00:37:18,546 --> 00:37:21,496
Before I expand this
method, let's take a minute


923
00:37:21,696 --> 00:37:23,626
to think what we are
trying to do here.


924
00:37:24,246 --> 00:37:26,036
So, the ultimate
decision we want


925
00:37:26,036 --> 00:37:28,586
to make is whether
it's appropriate


926
00:37:28,936 --> 00:37:31,146
to post the welcome
notification to the user.


927
00:37:31,556 --> 00:37:33,736
If the user's order is not
ready, it's not the time


928
00:37:33,736 --> 00:37:35,386
for their dinner,
there's probably no point


929
00:37:35,476 --> 00:37:36,486
to show anything to them.


930
00:37:37,446 --> 00:37:40,926
However, in most of the systems
this decision can only be made


931
00:37:40,926 --> 00:37:43,946
on the server-side because
the user's order status,


932
00:37:44,266 --> 00:37:47,316
their reservation information,
their guided tour schedule,


933
00:37:47,316 --> 00:37:49,186
those are all stored
in the server database.


934
00:37:49,476 --> 00:37:51,706
Your app doesn't have that
information right away.


935
00:37:52,526 --> 00:37:54,956
That does mean your
app will need


936
00:37:54,956 --> 00:37:57,926
to make a server call
potentially in background


937
00:37:58,056 --> 00:38:00,176
because this will wake
up your app in background


938
00:38:00,176 --> 00:38:01,496
when your app is not running.


939
00:38:02,236 --> 00:38:03,966
That will involve another
technology called the


940
00:38:03,966 --> 00:38:05,146
Background Execution.


941
00:38:05,526 --> 00:38:08,536
It's part of the iOS
multitasking and there are lots


942
00:38:08,536 --> 00:38:10,616
of documentations and
sessions about that


943
00:38:11,096 --> 00:38:12,566
so I won't get into the details.


944
00:38:12,566 --> 00:38:15,376
I'll just show you how we use
it in our particular example.


945
00:38:16,166 --> 00:38:17,946
Now, let's expand the code.


946
00:38:18,516 --> 00:38:20,646
The first line is
just a sanity check


947
00:38:21,286 --> 00:38:24,576
to make sure my Geofence
manager is the right object


948
00:38:24,926 --> 00:38:26,256
to respond to this event.


949
00:38:26,956 --> 00:38:30,276
Because the region events
are delivered to all


950
00:38:30,276 --> 00:38:33,996
of the Core Location delegates
of your app, not only the one


951
00:38:33,996 --> 00:38:35,566
that registers for this region.


952
00:38:36,066 --> 00:38:37,236
So, you need to keep
that in mind.


953
00:38:38,126 --> 00:38:40,476
The second line is just my
way of telling you, "Hey,


954
00:38:40,476 --> 00:38:42,586
I'm only demonstrating
the background case."


955
00:38:42,916 --> 00:38:45,486
Once you understand this,
you can easily figure


956
00:38:45,486 --> 00:38:47,506
out the foreground
case on your own.


957
00:38:47,506 --> 00:38:48,346
It's even simpler.


958
00:38:49,536 --> 00:38:52,326
The next one is the safety
check I'm talking about.


959
00:38:52,856 --> 00:38:56,726
So, imagine your location
is in the middle--


960
00:38:56,786 --> 00:38:58,306
in the middle of a busy area.


961
00:38:58,476 --> 00:39:00,486
Your restaurant is in
the middle of a mall.


962
00:39:01,196 --> 00:39:02,656
It's totally possible
for the user


963
00:39:02,656 --> 00:39:05,316
to cross the region multiple
times in a short period.


964
00:39:05,876 --> 00:39:08,216
If you blindly start your app


965
00:39:08,216 --> 00:39:10,226
and do all these
resource-intensive things


966
00:39:10,226 --> 00:39:13,746
like making server calls every
single time the user crosses the


967
00:39:13,746 --> 00:39:16,146
region, for sure
the user will notice


968
00:39:16,146 --> 00:39:18,336
that their battery
drains faster than usual.


969
00:39:18,786 --> 00:39:19,956
You don't want that to happen.


970
00:39:19,956 --> 00:39:20,876
You want to prevent that.


971
00:39:21,326 --> 00:39:23,826
So you can-- what you can
do is to use information


972
00:39:23,826 --> 00:39:29,106
such as the timestamp of the
past location events to see


973
00:39:29,106 --> 00:39:30,686
if enough time has elapsed


974
00:39:30,686 --> 00:39:32,286
since the last time
they crossed the region.


975
00:39:32,696 --> 00:39:34,536
If that's not the case,
you should tell your app


976
00:39:34,636 --> 00:39:37,986
to just go back to sleep without
consuming any more resource.


977
00:39:38,286 --> 00:39:39,676
That's key to saving battery.


978
00:39:40,916 --> 00:39:45,076
Now, we finally enter
the real business.


979
00:39:45,406 --> 00:39:47,986
First thing you need to do
is call UIApplication begin


980
00:39:47,986 --> 00:39:51,896
background task API to request
additional background time


981
00:39:51,896 --> 00:39:53,456
because you are going
to do a server call


982
00:39:53,456 --> 00:39:54,916
and it might take a few seconds.


983
00:39:55,636 --> 00:39:58,086
So, there's a lot of the
documentation for that.


984
00:39:58,216 --> 00:39:59,816
There's only one thing
I want to call out is


985
00:39:59,856 --> 00:40:03,886
that be a good citizen when
your app is in the background.


986
00:40:04,286 --> 00:40:07,736
Implement a meaningful
expiration handler block


987
00:40:08,186 --> 00:40:10,956
so that iOS can invoke
to do the cleanup work


988
00:40:11,446 --> 00:40:13,196
in case your task
runs for too long.


989
00:40:13,556 --> 00:40:17,146
If you don't do that iOS will
eventually terminate your app.


990
00:40:17,816 --> 00:40:20,456
Now, you requested the
additional background time,


991
00:40:20,916 --> 00:40:22,606
you can actually
start the server call.


992
00:40:22,606 --> 00:40:24,506
This would be exactly
the same if you wanted


993
00:40:24,506 --> 00:40:25,466
to do it in a foreground.


994
00:40:26,046 --> 00:40:29,466
Here I'm using my Service
Manager Object to take care


995
00:40:29,466 --> 00:40:33,086
of all the URL connection,
HTTP details for me.


996
00:40:33,546 --> 00:40:36,736
So, what I'm doing here is
providing a completion block


997
00:40:37,116 --> 00:40:39,466
that will be invoked
by my Service Manager


998
00:40:39,816 --> 00:40:41,976
when the server data has
been received by the app.


999
00:40:42,796 --> 00:40:43,906
So, let's take a
look on what we do.


1000
00:40:44,406 --> 00:40:46,516
Rule number one, for
any client-server app,


1001
00:40:46,636 --> 00:40:49,166
check against the error,
never ignore an error, OK.


1002
00:40:49,606 --> 00:40:52,346
And if you get no error and
you actually get meaningful


1003
00:40:52,346 --> 00:40:55,566
information from the server such
as the user's order is ready


1004
00:40:55,566 --> 00:40:58,616
for pick up or dinner-- the
table is ready for their dinner,


1005
00:40:59,206 --> 00:41:01,666
you create the
UILocalNotification object.


1006
00:41:02,186 --> 00:41:04,966
You fill in the details using
the information you received


1007
00:41:04,966 --> 00:41:07,366
from your server,
and it's very easy,


1008
00:41:07,366 --> 00:41:08,956
you just call this
Present method


1009
00:41:09,416 --> 00:41:11,976
to UIApplication
object to present that.


1010
00:41:12,386 --> 00:41:16,826
Also you can optionally put
a private user info where--


1011
00:41:17,256 --> 00:41:18,766
to your Local Notification.


1012
00:41:19,026 --> 00:41:20,486
So later, when you
user opens it,


1013
00:41:20,486 --> 00:41:23,846
you know what notification it is
and how your app should react.


1014
00:41:24,916 --> 00:41:27,526
That's pretty much--
we're pretty much done.


1015
00:41:27,526 --> 00:41:28,946
There's one last
thing you need to do.


1016
00:41:29,056 --> 00:41:31,656
Remember you began a
Background Task earlier.


1017
00:41:32,056 --> 00:41:32,776
You need to end it.


1018
00:41:33,226 --> 00:41:35,736
If you don't do this, your
app will be terminated


1019
00:41:36,326 --> 00:41:37,896
by iOS eventually.


1020
00:41:38,646 --> 00:41:40,436
So that's all the
code you need to add


1021
00:41:40,436 --> 00:41:41,466
in order to make this work.


1022
00:41:42,016 --> 00:41:44,356
Now, let me show you
how this actually works


1023
00:41:44,356 --> 00:41:45,476
on the real device.


1024
00:41:46,346 --> 00:41:47,366
So, I'm the visitor.


1025
00:41:48,596 --> 00:41:53,446
I have a guided tour booked at
the Louvre Museum for today.


1026
00:41:54,676 --> 00:41:57,086
As I approach-- my phone
has been in my pocket.


1027
00:41:57,086 --> 00:41:58,806
It's still in the locked mode


1028
00:41:59,346 --> 00:42:02,086
and I'm expecting a
welcome message to tell me


1029
00:42:02,086 --> 00:42:03,746
where I should meet
my tour guide.


1030
00:42:04,486 --> 00:42:07,056
So, in order to do this demo--


1031
00:42:07,346 --> 00:42:09,816
because I cannot move around
with this cable attached,


1032
00:42:10,346 --> 00:42:12,756
so I'm going to get help
from our engineer Mathieu.


1033
00:42:13,266 --> 00:42:15,516
Mathieu is holding an
iPhone that is programmed


1034
00:42:15,566 --> 00:42:17,696
to be a beacon transmitter.


1035
00:42:18,096 --> 00:42:20,286
He's got this little
app where he can turn on


1036
00:42:20,286 --> 00:42:22,456
and off different
beacon signals.


1037
00:42:22,876 --> 00:42:26,856
So, when he turns on the Region
Beacon it will be exactly the


1038
00:42:26,906 --> 00:42:30,786
same effect as if user
crossed boundary of the region.


1039
00:42:31,246 --> 00:42:32,276
So, let's see how it works.


1040
00:42:32,816 --> 00:42:34,956
Mathieu, can you tun
on the region for me?


1041
00:42:35,496 --> 00:42:39,386
As we can see, as soon
as Mathieu turns it on,


1042
00:42:39,906 --> 00:42:41,826
the notification is posted


1043
00:42:41,826 --> 00:42:44,176
on the user's Welcome
screen that says.


1044
00:42:44,176 --> 00:42:44,243
[ Applause ]


1045
00:42:44,243 --> 00:42:45,666
Thank you.


1046
00:42:47,716 --> 00:42:49,376
It gives you some
meaningful information.


1047
00:42:49,376 --> 00:42:52,856
If as a user, I swipe and
open, the app is launched


1048
00:42:52,856 --> 00:42:55,886
in foreground and you have the
freedom to do whatever you want.


1049
00:42:56,516 --> 00:43:02,236
So, again, this is at the
entrance of your location, OK.


1050
00:43:03,016 --> 00:43:05,816
So comparing to the regular
Geofence where you have today,


1051
00:43:06,056 --> 00:43:08,276
it probably notified
the user at parking lot.


1052
00:43:08,636 --> 00:43:11,066
Now with this, you can
notify them at the entrance.


1053
00:43:11,786 --> 00:43:13,456
So, that's my first demo.


1054
00:43:13,456 --> 00:43:16,056
Only two methods, it really
couldn't be any simpler.


1055
00:43:16,576 --> 00:43:19,596
Let's move on to the next demo.


1056
00:43:20,216 --> 00:43:22,556
The next demo is about
ranging use case.


1057
00:43:23,506 --> 00:43:26,746
So, imagine, you are the
owner of a large museum.


1058
00:43:27,056 --> 00:43:29,806
You have hundreds or
thousands of artwork pods


1059
00:43:29,806 --> 00:43:31,536
in your exhibition area.


1060
00:43:32,246 --> 00:43:36,496
What you can do is to attach a
beacon to each of the artworks


1061
00:43:37,046 --> 00:43:40,356
such that when user
is in your museum


1062
00:43:40,676 --> 00:43:42,076
and they're running
your Museum app,


1063
00:43:42,676 --> 00:43:44,386
they can get additional
information


1064
00:43:44,426 --> 00:43:46,916
about the artwork
they are closest to.


1065
00:43:47,886 --> 00:43:49,876
So, let me show you
how to do it in code.


1066
00:43:50,636 --> 00:43:51,606
Again, two methods.


1067
00:43:52,196 --> 00:43:55,656
First method is to start
to the ranging process.


1068
00:43:55,656 --> 00:43:58,526
This tells iOS, "I'm
ready to receive signals.


1069
00:43:58,526 --> 00:44:00,726
Please, monitor beacon
signals around me


1070
00:44:00,726 --> 00:44:02,156
and report them back to me."


1071
00:44:02,916 --> 00:44:04,416
So, 3 lines of code.


1072
00:44:05,136 --> 00:44:07,006
First thing first,
you create a UUID.


1073
00:44:08,086 --> 00:44:12,446
You need to use the same
UUID between your app and all


1074
00:44:12,446 --> 00:44:14,446
of the artwork beacons
in your museum.


1075
00:44:14,446 --> 00:44:15,756
Maybe you have 500 of them.


1076
00:44:15,756 --> 00:44:16,476
It doesn't matter.


1077
00:44:16,476 --> 00:44:19,796
You use all the UUID-- you used
the same UUID on all of them.


1078
00:44:20,356 --> 00:44:22,826
So, there's really no
practical limit for you.


1079
00:44:23,556 --> 00:44:25,846
And then you create a
CL Beacon Region object.


1080
00:44:26,286 --> 00:44:28,086
It's very similar with
the previous demo.


1081
00:44:28,816 --> 00:44:32,236
And the last is this time we're
calling the Start Ranging API


1082
00:44:32,416 --> 00:44:34,656
instead of a Start
Monitoring API because we want


1083
00:44:34,656 --> 00:44:36,206
to do active scanning.


1084
00:44:37,086 --> 00:44:37,796
So, that is it.


1085
00:44:37,836 --> 00:44:42,266
From now on, iOS will start
monitoring the signals


1086
00:44:42,266 --> 00:44:43,736
around you and then
report them back to you.


1087
00:44:44,096 --> 00:44:46,706
I would call this method
whenever my app goes


1088
00:44:46,706 --> 00:44:49,586
to the foreground and the
user is confirmed to be


1089
00:44:49,586 --> 00:44:51,646
within the range of
my exhibition area.


1090
00:44:52,996 --> 00:44:55,376
So let's take a look at the
Core Location delegate callback.


1091
00:44:55,986 --> 00:44:58,886
Location manager did
range Beacons in region.


1092
00:44:59,536 --> 00:45:01,926
This is where iOS
tells you, "I found one


1093
00:45:01,926 --> 00:45:03,376
or more beacons around you."


1094
00:45:04,206 --> 00:45:07,346
Notice that the beacons
parameter is an array


1095
00:45:07,416 --> 00:45:10,066
because at anytime, you can see
multiple beacons around you.


1096
00:45:10,826 --> 00:45:14,906
They are sorted by the
perceived distance.


1097
00:45:15,256 --> 00:45:17,856
So, the one that's believed
to be the closest is


1098
00:45:17,856 --> 00:45:19,036
at the top of the array.


1099
00:45:19,666 --> 00:45:21,706
So, let's expand the method
and see what we do here.


1100
00:45:22,796 --> 00:45:27,206
First line, I'm just trying to
use utility method to inspect


1101
00:45:27,296 --> 00:45:31,996
if the closest beacon is
within a desired threshold.


1102
00:45:32,496 --> 00:45:35,656
Here, I'm using CL
proximity near as my threshold


1103
00:45:36,046 --> 00:45:39,136
which represents a distance
of roughly three meters.


1104
00:45:39,616 --> 00:45:42,396
So, this entire line
basically means try


1105
00:45:42,396 --> 00:45:46,006
to find the closest beacon
that is within three meters.


1106
00:45:47,376 --> 00:45:50,126
If one-- the reason I make
it into utility method is


1107
00:45:50,126 --> 00:45:52,256
because I may want to use
it somewhere else in my app


1108
00:45:52,376 --> 00:45:53,996
and it makes unit test easier.


1109
00:45:54,366 --> 00:45:58,156
But, inside it this is really
just objectAtIndex zero,


1110
00:45:58,156 --> 00:46:01,576
casted back to the region and
check the proximity property.


1111
00:46:02,816 --> 00:46:08,366
And if one is found, I can
inspect the major value property


1112
00:46:08,366 --> 00:46:10,876
on the Beacon to tell
whether it's the painting


1113
00:46:10,876 --> 00:46:11,816
or it's a sculpture.


1114
00:46:12,336 --> 00:46:15,796
So, we programmed all the
artwork beacons using the


1115
00:46:15,796 --> 00:46:16,676
same UUID.


1116
00:46:16,676 --> 00:46:18,906
So you might ask, "How do I
tell whether it's a painting


1117
00:46:18,906 --> 00:46:19,546
or sculpture?"


1118
00:46:20,226 --> 00:46:22,866
There are other customizable
values on the Beacon.


1119
00:46:22,866 --> 00:46:25,226
They are called major
and the minor properties.


1120
00:46:25,646 --> 00:46:28,456
Each of them is a
16-bit integer.


1121
00:46:28,456 --> 00:46:30,206
So you can define
the value of them.


1122
00:46:30,776 --> 00:46:34,236
So, in my case I specify one
to be the Mona Lisa paining


1123
00:46:34,656 --> 00:46:37,596
and I used two for the
Winged Victory statue.


1124
00:46:38,706 --> 00:46:42,726
So, by reading the major value,
I can give a hint to my UI code,


1125
00:46:42,726 --> 00:46:43,946
"OK, this is Mona Lisa.


1126
00:46:43,946 --> 00:46:45,406
That is the Winged Victory."


1127
00:46:45,406 --> 00:46:47,326
So you can show different pages.


1128
00:46:47,736 --> 00:46:52,326
And of course if user has walked
away from the exhibition area,


1129
00:46:52,626 --> 00:46:54,006
this method will return nil


1130
00:46:54,266 --> 00:46:56,986
and we'll just dismiss the
information page we just


1131
00:46:56,986 --> 00:46:57,536
showed earlier.


1132
00:46:58,136 --> 00:47:00,996
So let me show you how this
actually works on a device.


1133
00:47:01,536 --> 00:47:03,546
So, I'm running my
Museum Guide app.


1134
00:47:04,266 --> 00:47:06,866
OK, it's the same app
and it's in foreground.


1135
00:47:06,986 --> 00:47:10,386
So, the ranging process
is already working.


1136
00:47:10,986 --> 00:47:14,326
So again, I'm going to get
help from Mathieu to turn on


1137
00:47:14,326 --> 00:47:16,336
and off different
artwork beacons


1138
00:47:16,776 --> 00:47:20,506
which is exactly the same
as if user approaches


1139
00:47:20,506 --> 00:47:22,006
or leaves certain artwork.


1140
00:47:22,576 --> 00:47:26,046
So, Mathieu, can you please turn
on the Mona Lisa beacon for me?


1141
00:47:26,596 --> 00:47:32,256
As we can see as soon as Mathieu
turns on the Mona Lisa beacon--


1142
00:47:33,016 --> 00:47:34,236
I'm not touching the
phone by the way.


1143
00:47:34,236 --> 00:47:35,286
[ Laughs ]


1144
00:47:35,286 --> 00:47:37,486
So, we are showing
an information page


1145
00:47:37,486 --> 00:47:40,176
about the author and
what year it was made.


1146
00:47:40,176 --> 00:47:42,206
You can do whatever you
like that's relevant


1147
00:47:42,286 --> 00:47:43,566
to this particular artwork.


1148
00:47:44,256 --> 00:47:46,946
Mathieu, can you please switch
to the Winged Victory statue?


1149
00:47:48,286 --> 00:47:50,276
So now, I walk away
from Mona Lisa


1150
00:47:50,276 --> 00:47:53,236
and I walk towards the
Winged Victory statue.


1151
00:47:53,646 --> 00:47:55,216
You can see the app
is smart enough


1152
00:47:55,316 --> 00:47:57,056
to swap the information page.


1153
00:47:57,556 --> 00:47:59,436
Now, can you turn
off everything?


1154
00:48:00,366 --> 00:48:03,936
So, when Mathieu turns off
everything, we are dismissing


1155
00:48:03,936 --> 00:48:05,066
that information page.


1156
00:48:05,506 --> 00:48:09,666
And the app is still ranging as
long as you are in the museum.


1157
00:48:10,886 --> 00:48:14,346
So, that is the end
of my both demos.


1158
00:48:14,806 --> 00:48:17,606
We are very excited about
these new technologies.


1159
00:48:17,826 --> 00:48:21,066
Everyday, we keep thinking how
we can use these technologies


1160
00:48:21,066 --> 00:48:24,866
to further enrich the
customer experience in our app.


1161
00:48:25,586 --> 00:48:30,176
I hope you like them as well and
think about how you can use them


1162
00:48:30,176 --> 00:48:33,986
to deliver more personalized
services to your customers.


1163
00:48:34,486 --> 00:48:38,196
Thank you and I'm going to
give this back to Filip.


1164
00:48:38,196 --> 00:48:38,263
[ Applause ]


1165
00:48:38,263 --> 00:48:41,006
>> OK. Hope you guys
enjoyed that demo.


1166
00:48:41,506 --> 00:48:43,306
It was live and you're
one of the first people


1167
00:48:43,306 --> 00:48:45,676
to actually see iBeacons
in action for real.


1168
00:48:46,306 --> 00:48:48,796
So, like Yingfeng said,
we're really excited


1169
00:48:48,796 --> 00:48:49,686
about this on our side.


1170
00:48:49,686 --> 00:48:51,736
So, I hope you guys are
too and just go out there


1171
00:48:51,736 --> 00:48:53,156
and build some magic
with this feature.


1172
00:48:53,586 --> 00:48:56,786
I'm going to summarize things up
now and as we talked about this,


1173
00:48:56,786 --> 00:48:58,836
some key iOS technologies,
calendar,


1174
00:48:59,016 --> 00:49:01,566
push calendar events
pushes Region Monitoring,


1175
00:49:01,566 --> 00:49:03,106
Core Location, and iBeacons.


1176
00:49:03,546 --> 00:49:05,456
And they're simple to
use but so effective


1177
00:49:05,726 --> 00:49:07,886
and you guys can make some truly
great experience with these.


1178
00:49:08,366 --> 00:49:09,456
So, go out there and use them


1179
00:49:09,796 --> 00:49:11,616
but use them wisely,
use them properly.


1180
00:49:11,876 --> 00:49:13,626
That's how we have tips
and tricks here for you.


1181
00:49:14,366 --> 00:49:16,036
Finally, if you have
been done it already,


1182
00:49:17,116 --> 00:49:19,546
download the Apple Store app,
you can see all this in practice


1183
00:49:19,796 --> 00:49:22,066
and you can pull along and
see what we do in future.


1184
00:49:23,356 --> 00:49:26,146
For more information, our
evangelist is Paul Marcos.


1185
00:49:26,306 --> 00:49:27,936
This is the Apple Store
app, the Reference app.


1186
00:49:27,936 --> 00:49:30,076
You can find it here or
download on the App Store


1187
00:49:30,736 --> 00:49:33,006
and as always the Apple
Developer Forums are there


1188
00:49:33,006 --> 00:49:33,346
for you.


1189
00:49:34,796 --> 00:49:37,536
There are some related sessions
I want to point you guys too,


1190
00:49:37,586 --> 00:49:39,666
Yingfeng talked about
running in the background.


1191
00:49:40,026 --> 00:49:41,476
You're going to find
a lot all about that


1192
00:49:41,476 --> 00:49:42,896
and what's new with
multitasking.


1193
00:49:43,016 --> 00:49:46,026
I really recommend that one
then Integrating Passbook


1194
00:49:46,026 --> 00:49:48,406
in Your Ecosystem, that's
another session by my team.


1195
00:49:48,776 --> 00:49:51,176
Well, again we approach
it from your perspective.


1196
00:49:51,176 --> 00:49:54,096
We've implemented the
Apple Store gift card pass.


1197
00:49:54,136 --> 00:49:56,076
Pretty complex pass and
we talked about how we did


1198
00:49:56,076 --> 00:49:57,396
that in the tips
and tricks there


1199
00:49:57,666 --> 00:49:59,446
so you guys can implement
your own passes.


1200
00:49:59,676 --> 00:50:02,296
And then, of course what's
new in Core Location.


1201
00:50:02,646 --> 00:50:05,116
Here, you can find out a
lot more about the iBeacons


1202
00:50:05,116 --> 00:50:07,516
and all the other Core Location
technology we've talked about.


1203
00:50:08,096 --> 00:50:10,666
With that, I want to thank you
guys for coming to this talk.


1204
00:50:10,926 --> 00:50:11,326
Thank you


1205
00:50:11,326 --> 00:50:11,456
[ Applause ]


1206
00:50:11,456 --> 00:50:12,386
for coming to WWDC.


1207
00:50:12,446 --> 00:50:13,676
Hope you had fun.

