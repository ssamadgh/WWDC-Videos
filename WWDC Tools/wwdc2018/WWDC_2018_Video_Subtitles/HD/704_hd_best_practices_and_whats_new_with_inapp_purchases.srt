1
00:00:07,516 --> 00:00:15,500
[ Music ]


2
00:00:21,216 --> 00:00:21,856
>> Good afternoon.


3
00:00:22,516 --> 00:00:26,796
[ Applause ]


4
00:00:27,296 --> 00:00:28,656
Welcome to Best Practices and


5
00:00:28,656 --> 00:00:29,606
What's New with In-App


6
00:00:29,686 --> 00:00:30,966
Purchases, my name is Dana


7
00:00:30,966 --> 00:00:32,466
DuBois, I'm an App Store


8
00:00:32,466 --> 00:00:33,566
engineering manager.


9
00:00:34,406 --> 00:00:35,596
In-app purchases are an


10
00:00:35,596 --> 00:00:37,596
essential part of how so many


11
00:00:37,596 --> 00:00:38,946
apps do businesses in the App


12
00:00:38,946 --> 00:00:39,326
Store.


13
00:00:39,806 --> 00:00:40,946
Whether you have a subscription


14
00:00:40,946 --> 00:00:43,136
model where you're maybe a video


15
00:00:43,136 --> 00:00:44,926
streaming service or a newspaper


16
00:00:44,926 --> 00:00:46,976
or magazine or you offer


17
00:00:46,976 --> 00:00:49,546
consumables, content that the


18
00:00:49,546 --> 00:00:51,136
user can buy over and over again


19
00:00:51,136 --> 00:00:52,866
like in-game currency or


20
00:00:52,866 --> 00:00:54,996
non-consumables, something where


21
00:00:55,116 --> 00:00:56,906
the user buy once and uses from


22
00:00:56,906 --> 00:00:57,516
then on.


23
00:00:58,136 --> 00:00:59,886
It's important to make that user


24
00:00:59,886 --> 00:01:02,746
experience great, this is your


25
00:01:02,746 --> 00:01:04,046
business after all.


26
00:01:05,476 --> 00:01:06,976
So we're going to cover some


27
00:01:06,976 --> 00:01:08,556
best practices in order to help


28
00:01:08,556 --> 00:01:10,036
you make that experience great.


29
00:01:10,156 --> 00:01:10,976
We're also going to talk about


30
00:01:10,976 --> 00:01:12,166
some stuff that we have been


31
00:01:12,166 --> 00:01:14,916
doing to make this great for


32
00:01:14,916 --> 00:01:14,983
you.


33
00:01:19,106 --> 00:01:19,976
So first, I'm going to invite my


34
00:01:19,976 --> 00:01:21,606
colleague Ross up on stage, he's


35
00:01:21,606 --> 00:01:22,666
going to talk about Introductory


36
00:01:22,666 --> 00:01:23,626
Pricing, this is a feature we


37
00:01:23,626 --> 00:01:25,226
launched last December and it


38
00:01:25,226 --> 00:01:26,926
allows you for your subscription


39
00:01:26,926 --> 00:01:28,716
business to entice new customers


40
00:01:28,716 --> 00:01:29,026
in.


41
00:01:29,426 --> 00:01:31,106
I'm going to give a quick update


42
00:01:31,106 --> 00:01:32,956
on trials in the App Store.


43
00:01:32,956 --> 00:01:35,546
We're going to go over ratings


44
00:01:35,546 --> 00:01:37,126
and reviews and how your app can


45
00:01:37,126 --> 00:01:39,146
get customers to give feedback


46
00:01:39,146 --> 00:01:40,176
into the App Store.


47
00:01:40,456 --> 00:01:42,116
I'm going to give an update on


48
00:01:42,116 --> 00:01:43,896
how you can use the Apple App


49
00:01:44,066 --> 00:01:46,266
Store Sandbox environment for


50
00:01:46,266 --> 00:01:47,986
testing your in-app purchases.


51
00:01:49,026 --> 00:01:50,176
Ross is going to come back up


52
00:01:50,176 --> 00:01:51,756
and talk about processing


53
00:01:51,756 --> 00:01:52,806
transactions, this is when


54
00:01:52,806 --> 00:01:53,936
you're actually buying those


55
00:01:53,936 --> 00:01:54,996
in-app purchases.


56
00:01:55,506 --> 00:01:57,416
And finally, I'm going to give


57
00:01:57,416 --> 00:01:58,856
you an overview about the in-app


58
00:01:59,586 --> 00:02:00,266
receipt.


59
00:02:01,156 --> 00:02:04,066
So to begin here's my colleague


60
00:02:04,066 --> 00:02:04,556
Ross.


61
00:02:07,106 --> 00:02:09,515
>> Thanks Dana.


62
00:02:09,686 --> 00:02:13,256
In iOS 11.2 and macOS 10.13.2 we


63
00:02:13,256 --> 00:02:14,466
added the Introductory Pricing


64
00:02:14,466 --> 00:02:15,506
feature to in-app purchase


65
00:02:15,506 --> 00:02:16,086
subscriptions.


66
00:02:17,146 --> 00:02:17,946
This allows you to create a


67
00:02:17,946 --> 00:02:19,446
one-time use discount for new


68
00:02:19,446 --> 00:02:20,136
subscribers.


69
00:02:21,556 --> 00:02:23,286
We set up introductory pricing


70
00:02:23,996 --> 00:02:25,736
in App Store Connect and each


71
00:02:25,876 --> 00:02:26,776
subscription can only have a


72
00:02:26,826 --> 00:02:28,186
single introductory price at a


73
00:02:28,756 --> 00:02:28,846
time.


74
00:02:29,206 --> 00:02:30,656
When an eligible user purchases


75
00:02:30,656 --> 00:02:33,056
the subscription in your app the


76
00:02:33,056 --> 00:02:33,936
discount is applied


77
00:02:33,936 --> 00:02:35,376
automatically by the App Store.


78
00:02:36,496 --> 00:02:37,536
Each user is eligible for a


79
00:02:37,536 --> 00:02:39,356
single introductory price based


80
00:02:39,356 --> 00:02:40,346
on the subscription group.


81
00:02:40,776 --> 00:02:42,646
I'll go into that a little bit


82
00:02:43,476 --> 00:02:43,906
more later.


83
00:02:44,126 --> 00:02:45,366
Along with Introductory Pricing


84
00:02:45,846 --> 00:02:47,046
we added several new types and


85
00:02:47,046 --> 00:02:47,926
properties in StoreKit.


86
00:02:49,096 --> 00:02:50,766
These APIs reflect the data that


87
00:02:50,766 --> 00:02:51,646
you've set up in App Store


88
00:02:51,646 --> 00:02:54,186
Connect and you can use them to


89
00:02:54,466 --> 00:02:55,946
format your UI to display the


90
00:02:55,946 --> 00:02:57,186
terms of the subscription to


91
00:02:57,186 --> 00:02:59,156
your users, as well as to


92
00:02:59,156 --> 00:03:00,616
determine which users are


93
00:03:00,616 --> 00:03:01,676
eligible for the introductory


94
00:03:01,676 --> 00:03:02,156
prices.


95
00:03:03,836 --> 00:03:06,296
For example, here's what it


96
00:03:06,296 --> 00:03:07,696
looks like in the App Store when


97
00:03:07,696 --> 00:03:08,996
you set up an introductory price


98
00:03:08,996 --> 00:03:10,456
on a promoted in-app purchase.


99
00:03:11,306 --> 00:03:12,796
You can see that it clearly


100
00:03:12,796 --> 00:03:14,646
naturally lays out the terms of


101
00:03:14,646 --> 00:03:15,726
the subscription to the user,


102
00:03:16,426 --> 00:03:18,586
the first year for 19.99, then


103
00:03:18,586 --> 00:03:21,006
39.99 for each year after that.


104
00:03:21,556 --> 00:03:23,016
This is also a great benefit of


105
00:03:23,016 --> 00:03:24,106
promoting your in-app purchases


106
00:03:24,106 --> 00:03:25,236
that have introductory prices.


107
00:03:25,596 --> 00:03:26,716
Users can see the discount


108
00:03:26,716 --> 00:03:27,696
before they even install your


109
00:03:27,886 --> 00:03:28,486
app.


110
00:03:29,596 --> 00:03:30,696
Today I'm going to go over these


111
00:03:30,696 --> 00:03:32,336
new APIs with you and look at a


112
00:03:32,336 --> 00:03:33,386
couple ways you may want to set


113
00:03:33,386 --> 00:03:36,616
up your introductory prices.


114
00:03:37,856 --> 00:03:40,026
First, there's a new property on


115
00:03:40,126 --> 00:03:41,496
SKProduct which is called


116
00:03:41,496 --> 00:03:42,016
fittingly enough


117
00:03:42,656 --> 00:03:43,476
introductoryPrice.


118
00:03:44,116 --> 00:03:45,456
This is a new class that's


119
00:03:45,456 --> 00:03:46,676
called SKProductDiscount.


120
00:03:47,656 --> 00:03:48,566
This class contains all the


121
00:03:48,566 --> 00:03:49,776
information about introductory


122
00:03:49,776 --> 00:03:50,426
price you've set up.


123
00:03:50,486 --> 00:03:52,406
And as you can see it's an


124
00:03:52,406 --> 00:03:53,776
optional property that's because


125
00:03:53,776 --> 00:03:55,226
only subscriptions can have


126
00:03:55,226 --> 00:03:56,996
introductory prices and not all


127
00:03:56,996 --> 00:03:59,226
subscriptions will have them.


128
00:03:59,316 --> 00:04:00,286
So let's dive into


129
00:04:00,286 --> 00:04:01,526
SKProductDiscount.


130
00:04:03,636 --> 00:04:05,266
SKProductDiscount reflects the


131
00:04:05,266 --> 00:04:06,236
data you've set up about the


132
00:04:06,236 --> 00:04:07,946
introductory price in App Store


133
00:04:07,946 --> 00:04:08,216
Connect.


134
00:04:08,216 --> 00:04:10,756
It has a price and a price


135
00:04:10,756 --> 00:04:12,396
locale property and these behave


136
00:04:12,396 --> 00:04:13,466
the same as the properties with


137
00:04:13,466 --> 00:04:14,436
the same names you're familiar


138
00:04:14,436 --> 00:04:15,306
with on SKProduct.


139
00:04:15,306 --> 00:04:19,315
Also as a subscription period


140
00:04:19,315 --> 00:04:21,146
property, this is a new class


141
00:04:21,146 --> 00:04:21,546
called


142
00:04:21,546 --> 00:04:24,276
SKProductSubscriptionPeriod and


143
00:04:24,276 --> 00:04:25,456
this reflects all the data about


144
00:04:25,456 --> 00:04:26,976
the billing and renewal terms of


145
00:04:26,976 --> 00:04:27,976
the introductory price.


146
00:04:28,516 --> 00:04:30,466
It achieves this with two


147
00:04:30,466 --> 00:04:32,496
properties of its own, the first


148
00:04:32,496 --> 00:04:33,826
is unit which is an enum that


149
00:04:33,826 --> 00:04:35,806
can be day, week, month or year.


150
00:04:37,196 --> 00:04:38,866
The next is number of units.


151
00:04:39,386 --> 00:04:42,606
So for example if you have a


152
00:04:42,606 --> 00:04:44,286
unit of month and a number of


153
00:04:44,286 --> 00:04:45,976
units of 2 that means that the


154
00:04:45,976 --> 00:04:47,306
introductory price renews every


155
00:04:47,306 --> 00:04:47,836
2 months.


156
00:04:48,346 --> 00:04:51,866
And back on SKProductDiscount


157
00:04:51,936 --> 00:04:53,296
there's also a numberOfPeriods


158
00:04:53,296 --> 00:04:53,686
property.


159
00:04:54,676 --> 00:04:56,016
So this reflects the number of


160
00:04:56,016 --> 00:04:57,166
those subscription periods the


161
00:04:57,166 --> 00:04:58,666
introductory price is valid for.


162
00:04:59,706 --> 00:05:00,906
Say if you have that 2-month


163
00:05:00,956 --> 00:05:02,516
introductory price, the number


164
00:05:02,516 --> 00:05:03,996
of periods is 3, that means the


165
00:05:03,996 --> 00:05:05,146
introductory price is valid for


166
00:05:05,146 --> 00:05:05,916
a total of 6 months.


167
00:05:10,066 --> 00:05:11,606
Finally, on SKProductDiscount


168
00:05:12,876 --> 00:05:14,286
there's a payment mode property.


169
00:05:15,286 --> 00:05:16,576
This is another new enum that


170
00:05:16,656 --> 00:05:17,496
has three values.


171
00:05:18,276 --> 00:05:20,496
The first value is payAsYouGo,


172
00:05:21,716 --> 00:05:22,586
this behaves like a normal


173
00:05:22,586 --> 00:05:24,416
subscription where the user pays


174
00:05:24,416 --> 00:05:25,576
once per renewal period.


175
00:05:27,036 --> 00:05:28,416
The renewal period for these


176
00:05:28,416 --> 00:05:29,766
does have to be the same as the


177
00:05:29,766 --> 00:05:30,816
renewal period of the base


178
00:05:30,816 --> 00:05:31,766
subscription you've set up the


179
00:05:31,766 --> 00:05:32,736
introductory price on.


180
00:05:33,306 --> 00:05:35,466
So if you had a month-long


181
00:05:35,586 --> 00:05:37,216
subscription you couldn't have a


182
00:05:37,216 --> 00:05:38,506
2-week long introductory price


183
00:05:38,506 --> 00:05:39,036
in this case.


184
00:05:39,576 --> 00:05:41,886
You can use these types of


185
00:05:41,886 --> 00:05:43,176
introductory prices to offer


186
00:05:43,176 --> 00:05:45,246
your users a longer introductory


187
00:05:45,246 --> 00:05:46,716
duration but with less friction


188
00:05:46,836 --> 00:05:48,746
up front.


189
00:05:48,746 --> 00:05:51,116
For example, if you have a


190
00:05:51,166 --> 00:05:52,796
3-month renewing subscription


191
00:05:52,796 --> 00:05:56,096
that's billed at 9.99 you could


192
00:05:56,096 --> 00:05:57,446
set up a 6-month introductory


193
00:05:57,446 --> 00:06:00,176
price that renews twice at 1.99


194
00:06:00,176 --> 00:06:00,536
each.


195
00:06:02,396 --> 00:06:03,596
The billing period would look


196
00:06:03,596 --> 00:06:05,716
like this, the user purchases


197
00:06:05,716 --> 00:06:07,046
the subscription at the


198
00:06:07,046 --> 00:06:09,446
introductory price of 1.99 and


199
00:06:09,446 --> 00:06:11,036
receives 3 months of access.


200
00:06:11,556 --> 00:06:13,166
After that they can renew at


201
00:06:13,166 --> 00:06:15,106
1.99 for another 3 months of


202
00:06:15,106 --> 00:06:15,596
access.


203
00:06:16,076 --> 00:06:18,236
When that's over they'll renew


204
00:06:18,236 --> 00:06:19,416
at the normal subscription terms


205
00:06:19,416 --> 00:06:20,756
of 9.99 for 3 months.


206
00:06:20,756 --> 00:06:23,856
Here's what the data from


207
00:06:23,856 --> 00:06:25,326
StoreKit would look like in this


208
00:06:25,326 --> 00:06:25,706
case.


209
00:06:26,546 --> 00:06:27,536
You can see the


210
00:06:27,536 --> 00:06:28,826
subscriptionPeriod has a unit of


211
00:06:28,826 --> 00:06:30,636
month and the number of units is


212
00:06:30,636 --> 00:06:32,426
3, so it'll renew every 3 months


213
00:06:32,456 --> 00:06:32,606
number.


214
00:06:33,376 --> 00:06:34,486
And then the numberOfPeriods is


215
00:06:34,486 --> 00:06:35,726
2 giving us that total of 6


216
00:06:35,726 --> 00:06:36,516
months of introductory.


217
00:06:37,056 --> 00:06:39,426
The payment mode is payAsYouGo.


218
00:06:39,486 --> 00:06:40,376
And the price for the


219
00:06:40,376 --> 00:06:41,976
introductory price is 1.99.


220
00:06:46,046 --> 00:06:47,276
The next payment mode is


221
00:06:47,406 --> 00:06:47,926
payUpFront.


222
00:06:47,926 --> 00:06:50,846
With this type of introductory


223
00:06:50,846 --> 00:06:52,206
price the user pays just one


224
00:06:52,206 --> 00:06:53,336
time and receives the entire


225
00:06:53,336 --> 00:06:54,246
introductory duration.


226
00:06:55,516 --> 00:06:57,436
This is not limited to multiples


227
00:06:57,436 --> 00:06:58,536
of your subscriptions renewal


228
00:06:58,536 --> 00:06:58,876
period.


229
00:06:59,206 --> 00:07:00,326
So in this case, you could have


230
00:07:00,796 --> 00:07:02,496
a 1-year renewing subscription


231
00:07:02,736 --> 00:07:04,206
and offer a 1-month introductory


232
00:07:04,206 --> 00:07:04,606
price.


233
00:07:05,166 --> 00:07:08,086
So if we can take our previous


234
00:07:08,086 --> 00:07:10,106
example of our 3-month auto


235
00:07:10,106 --> 00:07:11,706
renewable subscription, this


236
00:07:12,376 --> 00:07:14,426
time we'll offer a payUpFront


237
00:07:14,426 --> 00:07:15,846
introductory price for 6 months.


238
00:07:16,286 --> 00:07:19,666
Charging 3.99, so it's about the


239
00:07:19,666 --> 00:07:20,846
same overall cost as the


240
00:07:20,846 --> 00:07:22,476
previous example, but this time


241
00:07:22,836 --> 00:07:24,416
the user will pay 3.99 upfront


242
00:07:24,416 --> 00:07:25,986
and receive the entire 6 months.


243
00:07:26,106 --> 00:07:28,806
After that's up we'll renew with


244
00:07:28,806 --> 00:07:29,616
the normal terms of the


245
00:07:29,616 --> 00:07:31,826
subscription at 9.99 for every 3


246
00:07:31,826 --> 00:07:31,976
months.


247
00:07:36,046 --> 00:07:36,556
Here's what the data from


248
00:07:36,556 --> 00:07:37,386
StoreKit would look like in this


249
00:07:37,386 --> 00:07:37,766
case.


250
00:07:38,416 --> 00:07:39,736
The subscriptionPeriod's unit is


251
00:07:39,736 --> 00:07:41,126
still month, but this time we


252
00:07:41,126 --> 00:07:42,046
have 6 units.


253
00:07:42,636 --> 00:07:44,566
The numberOfPeriods is 1 because


254
00:07:44,566 --> 00:07:45,816
it's a payUpFront introductory


255
00:07:45,816 --> 00:07:45,976
price.


256
00:07:51,216 --> 00:07:52,446
The final payment mode is


257
00:07:52,556 --> 00:07:52,986
freeTrial.


258
00:07:54,306 --> 00:07:55,436
This behaves the same as the old


259
00:07:55,436 --> 00:07:56,886
freeTrial behavior where the


260
00:07:56,886 --> 00:07:57,896
user pays nothing and receives


261
00:07:57,896 --> 00:07:58,796
the entire introductory


262
00:07:58,796 --> 00:07:59,156
duration.


263
00:08:00,216 --> 00:08:01,406
This is available under


264
00:08:01,406 --> 00:08:03,016
durations varying from 3 days


265
00:08:03,016 --> 00:08:03,896
all the way up to 1 year.


266
00:08:08,166 --> 00:08:10,426
Excuse me.


267
00:08:10,666 --> 00:08:13,256
Also in iOS 12 and macOS 10.13.2


268
00:08:14,766 --> 00:08:15,186
we've added the


269
00:08:15,186 --> 00:08:16,946
subscriptionPeriod property to


270
00:08:16,946 --> 00:08:17,596
SKProduct itself.


271
00:08:18,736 --> 00:08:19,976
This way you have access to the


272
00:08:19,976 --> 00:08:21,616
billing and renewal terms of all


273
00:08:21,616 --> 00:08:22,286
of your auto renewable


274
00:08:22,286 --> 00:08:23,386
subscriptions not just the


275
00:08:23,386 --> 00:08:26,426
introductory price.


276
00:08:26,556 --> 00:08:28,816
Also, in iOS 12 and macOS 10.14


277
00:08:29,486 --> 00:08:29,916
we've added the


278
00:08:29,916 --> 00:08:31,416
subscriptionGroupIdentifier to


279
00:08:31,466 --> 00:08:32,206
the SKProduct.


280
00:08:32,676 --> 00:08:35,756
This is important because


281
00:08:35,905 --> 00:08:37,216
introductory pricing eligibility


282
00:08:37,216 --> 00:08:38,226
is based on the subscription


283
00:08:38,226 --> 00:08:39,356
group not the subscription


284
00:08:39,356 --> 00:08:39,866
itself.


285
00:08:41,196 --> 00:08:42,405
Each user is eligible for a


286
00:08:42,405 --> 00:08:43,976
single introductory price per


287
00:08:43,976 --> 00:08:44,816
subscription group.


288
00:08:45,326 --> 00:08:47,426
This is because subscription


289
00:08:47,426 --> 00:08:48,266
groups are meant to offer the


290
00:08:48,266 --> 00:08:50,216
same features or content just a


291
00:08:50,216 --> 00:08:51,696
different at renewal periods and


292
00:08:51,726 --> 00:08:52,286
price points.


293
00:08:52,476 --> 00:08:54,116
For example, many apps offer


294
00:08:54,116 --> 00:08:55,736
both a yearly and a monthly


295
00:08:55,736 --> 00:08:57,406
option for the same content with


296
00:08:57,406 --> 00:08:58,136
the yearly one being


297
00:08:58,136 --> 00:08:59,206
less-expensive over time.


298
00:09:00,106 --> 00:09:01,136
Now it wouldn't really make


299
00:09:01,136 --> 00:09:02,326
sense for a user to receive an


300
00:09:02,326 --> 00:09:03,506
introductory price to both the


301
00:09:03,506 --> 00:09:05,176
monthly and the yearly option


302
00:09:05,176 --> 00:09:05,976
for exact same content.


303
00:09:09,416 --> 00:09:10,876
Since introductory prices are


304
00:09:10,876 --> 00:09:12,326
applied automatically by the App


305
00:09:12,326 --> 00:09:13,426
Store at the time of purchase


306
00:09:13,826 --> 00:09:14,756
it's important that your app


307
00:09:14,756 --> 00:09:16,196
correctly determines the user's


308
00:09:16,196 --> 00:09:18,506
eligibility when displaying the


309
00:09:19,076 --> 00:09:19,216
price.


310
00:09:19,326 --> 00:09:20,186
For more information about


311
00:09:20,186 --> 00:09:21,946
determining eligibility you can


312
00:09:21,946 --> 00:09:23,236
see the engineering subscription


313
00:09:23,236 --> 00:09:24,526
session which is just after this


314
00:09:24,526 --> 00:09:25,196
one at 3 o'clock.


315
00:09:25,296 --> 00:09:28,546
Now with these new APIs you'll


316
00:09:28,546 --> 00:09:29,636
have access to all the


317
00:09:29,636 --> 00:09:30,776
information you've set up in App


318
00:09:30,776 --> 00:09:31,466
Store Connect for your


319
00:09:31,466 --> 00:09:33,136
subscriptions, so your app can


320
00:09:33,136 --> 00:09:34,356
reflect any changes you make


321
00:09:34,636 --> 00:09:35,806
without updates to your binary


322
00:09:35,806 --> 00:09:36,686
or to your server code.


323
00:09:37,136 --> 00:09:39,836
I'd like to invite Dana back on


324
00:09:39,836 --> 00:09:41,276
who has a few tips and


325
00:09:41,276 --> 00:09:41,976
improvements for you.


326
00:09:44,516 --> 00:09:47,096
[ Applause ]


327
00:09:47,596 --> 00:09:49,826
>> Thank you Ross, so


328
00:09:49,826 --> 00:09:51,736
Introductory Pricing is a great


329
00:09:51,776 --> 00:09:54,836
way to attract new customers if


330
00:09:54,836 --> 00:09:55,806
your business model is a


331
00:09:55,806 --> 00:09:56,476
subscription.


332
00:09:57,086 --> 00:09:58,636
But what if it doesn't make


333
00:09:58,636 --> 00:10:00,246
sense for your app and your


334
00:10:00,246 --> 00:10:01,946
app's business model to offer a


335
00:10:01,946 --> 00:10:02,976
subscription service?


336
00:10:03,966 --> 00:10:06,986
Well, starting today we're


337
00:10:06,986 --> 00:10:08,006
excited to announce that you can


338
00:10:08,006 --> 00:10:09,476
offer free trials for


339
00:10:09,476 --> 00:10:11,086
non-subscription based apps.


340
00:10:11,836 --> 00:10:12,936
This will allow you to have a


341
00:10:12,936 --> 00:10:14,506
try before you can buy


342
00:10:14,506 --> 00:10:15,436
experience.


343
00:10:15,436 --> 00:10:18,606
So how do you do this?


344
00:10:19,746 --> 00:10:22,796
Well you take your payUpFront


345
00:10:22,796 --> 00:10:25,306
app and you make it free in the


346
00:10:25,306 --> 00:10:26,106
App Store.


347
00:10:26,946 --> 00:10:28,096
And then you add a


348
00:10:28,096 --> 00:10:30,086
non-consumable in-app purchase


349
00:10:30,086 --> 00:10:30,656
to unlock.


350
00:10:30,656 --> 00:10:32,456
So if your app is 9.99 in the


351
00:10:32,456 --> 00:10:33,426
App Store you're going to want


352
00:10:33,426 --> 00:10:35,336
to make a non-consumable in-app


353
00:10:35,466 --> 00:10:37,156
purchase of 9.99.


354
00:10:38,486 --> 00:10:39,446
But it's important to let the


355
00:10:39,446 --> 00:10:41,456
user decide when to begin the


356
00:10:41,456 --> 00:10:43,976
trial period, so to do that you


357
00:10:43,976 --> 00:10:45,176
need to make a second


358
00:10:45,796 --> 00:10:47,406
non-consumable in-app purchase


359
00:10:47,406 --> 00:10:48,656
at price tier 0.


360
00:10:48,656 --> 00:10:50,006
This will be a free


361
00:10:50,006 --> 00:10:52,636
non-consumable that the user


362
00:10:52,636 --> 00:10:54,576
will use to begin their trial


363
00:10:54,576 --> 00:10:55,026
period.


364
00:10:56,216 --> 00:10:57,856
The naming convention of that


365
00:10:58,186 --> 00:11:00,486
free non-consumable should


366
00:11:00,586 --> 00:11:02,956
detail out how long that


367
00:11:02,956 --> 00:11:04,086
introductory period is.


368
00:11:04,086 --> 00:11:05,796
So in this example it's 14-day


369
00:11:05,796 --> 00:11:06,426
trial.


370
00:11:07,836 --> 00:11:10,506
Before the user begins their


371
00:11:10,506 --> 00:11:11,586
free trial, they should be


372
00:11:11,626 --> 00:11:13,846
clearly informed of how long


373
00:11:13,846 --> 00:11:15,386
that trial is, in your app's UI


374
00:11:15,386 --> 00:11:18,636
what the ultimate cost is going


375
00:11:18,636 --> 00:11:20,646
to be to unlock at the end of


376
00:11:20,646 --> 00:11:21,626
that free trial.


377
00:11:22,366 --> 00:11:25,106
And finally, what features or


378
00:11:25,176 --> 00:11:27,016
content is going to be lost if


379
00:11:27,016 --> 00:11:28,706
they let the free trial expire


380
00:11:28,706 --> 00:11:30,356
and choose not to purchase the


381
00:11:30,356 --> 00:11:31,096
full unlock.


382
00:11:31,346 --> 00:11:32,406
That information needs to be


383
00:11:32,406 --> 00:11:33,286
presented up front.


384
00:11:34,046 --> 00:11:34,906
So this gives you a quick


385
00:11:34,906 --> 00:11:36,246
overview of the change, I'm


386
00:11:36,246 --> 00:11:37,396
going to talk more about how you


387
00:11:37,396 --> 00:11:38,636
can implement this inside your


388
00:11:38,636 --> 00:11:40,306
app when I go over receipts.


389
00:11:40,806 --> 00:11:44,486
Right now however I'd like to


390
00:11:44,486 --> 00:11:46,316
give an update on requesting


391
00:11:46,316 --> 00:11:47,786
ratings and reviews.


392
00:11:48,936 --> 00:11:50,116
Whether or not your app has


393
00:11:50,116 --> 00:11:51,936
in-app purchases if it's in the


394
00:11:51,936 --> 00:11:53,336
App Store you care about the


395
00:11:53,446 --> 00:11:55,316
feedback your users are going to


396
00:11:55,316 --> 00:11:55,516
give.


397
00:11:55,796 --> 00:11:56,956
And there are ae few ways the


398
00:11:56,956 --> 00:11:58,836
App Store and StoreKit can get


399
00:11:58,836 --> 00:11:59,826
you that information.


400
00:12:01,096 --> 00:12:04,166
First, in iOS 10.3 we introduced


401
00:12:04,166 --> 00:12:06,016
the SKStoreReviewController.


402
00:12:06,016 --> 00:12:08,586
This is a powerful API and it


403
00:12:08,586 --> 00:12:10,986
allows an app to give a quick


404
00:12:11,026 --> 00:12:12,796
and easy prompt for the user to


405
00:12:12,796 --> 00:12:14,706
select a star rating or maybe


406
00:12:14,706 --> 00:12:16,076
even type in a review and get


407
00:12:16,076 --> 00:12:17,926
right back to using your app.


408
00:12:18,596 --> 00:12:21,036
But with great power comes


409
00:12:21,246 --> 00:12:22,246
restrictions.


410
00:12:23,006 --> 00:12:25,836
First, we limit the number of


411
00:12:25,836 --> 00:12:27,186
times that this prompt can


412
00:12:27,186 --> 00:12:30,466
appear per app, per device and


413
00:12:30,466 --> 00:12:31,316
per year.


414
00:12:32,866 --> 00:12:35,516
Second, if users choose never to


415
00:12:35,516 --> 00:12:37,556
see these rating prompt they can


416
00:12:37,556 --> 00:12:38,956
just go into App Store settings


417
00:12:38,956 --> 00:12:40,286
and disable them altogether.


418
00:12:41,346 --> 00:12:43,116
So with those 2 restrictions in


419
00:12:43,116 --> 00:12:45,666
mind what are some strategies


420
00:12:45,666 --> 00:12:46,936
you want to use for when to


421
00:12:46,936 --> 00:12:49,296
determine is the best time to


422
00:12:49,296 --> 00:12:51,186
call into the review controller.


423
00:12:52,356 --> 00:12:54,486
Well first and foremost, don't


424
00:12:54,486 --> 00:12:55,166
interrupt.


425
00:12:55,236 --> 00:12:57,486
If the user is in the middle of


426
00:12:57,486 --> 00:12:58,866
playing that level and fighting


427
00:12:58,866 --> 00:13:00,426
the big boss at the end of it


428
00:13:01,036 --> 00:13:02,386
it's not a great time to ask


429
00:13:02,386 --> 00:13:04,516
them to rate your game, wait


430
00:13:04,516 --> 00:13:05,156
until they're done.


431
00:13:05,676 --> 00:13:09,186
You should also wait until both


432
00:13:09,386 --> 00:13:10,876
they've had enough experience


433
00:13:10,876 --> 00:13:12,276
with your app to actually have a


434
00:13:12,276 --> 00:13:14,196
good opinion about it, as well


435
00:13:14,196 --> 00:13:15,046
as wait until they've had a


436
00:13:15,046 --> 00:13:16,236
positive experience.


437
00:13:16,236 --> 00:13:17,516
Maybe they just finished


438
00:13:17,516 --> 00:13:19,216
fighting that boss, maybe they


439
00:13:19,216 --> 00:13:20,616
just ordered food and it got


440
00:13:20,616 --> 00:13:22,126
delivered through your app, wait


441
00:13:22,126 --> 00:13:23,856
until that positive experience.


442
00:13:25,196 --> 00:13:26,376
Finally, I mentioned before that


443
00:13:26,376 --> 00:13:28,746
we limit the number of times we


444
00:13:28,746 --> 00:13:30,666
will prompt this review her app,


445
00:13:30,836 --> 00:13:33,046
per device, per year, but that


446
00:13:33,046 --> 00:13:34,206
doesn't mean we do any sort of


447
00:13:34,206 --> 00:13:34,876
rate limiting.


448
00:13:35,786 --> 00:13:37,906
So if within one session you


449
00:13:37,906 --> 00:13:39,886
call the SKStoreReviewController


450
00:13:40,046 --> 00:13:42,046
3 times and the user keeps


451
00:13:42,046 --> 00:13:44,006
clicking not now they will see


452
00:13:44,006 --> 00:13:45,486
that 3 times in a row.


453
00:13:45,486 --> 00:13:47,316
It's up to you to add your own


454
00:13:47,316 --> 00:13:49,186
rate limiting to your app.


455
00:13:49,466 --> 00:13:50,706
So how does this look in code?


456
00:13:51,826 --> 00:13:54,556
Well as I've been saying, wrap


457
00:13:54,556 --> 00:13:55,216
any call to the


458
00:13:55,216 --> 00:13:56,396
StoreReviewController around


459
00:13:56,396 --> 00:13:58,096
your own app's business logic.


460
00:13:58,396 --> 00:13:59,286
Here's what you're going to want


461
00:13:59,286 --> 00:14:00,946
to check, is this a good time to


462
00:14:00,946 --> 00:14:03,426
do it, are they in the middle or


463
00:14:03,426 --> 00:14:05,066
have they just completed a task.


464
00:14:05,696 --> 00:14:06,776
Have they just had a positive


465
00:14:06,776 --> 00:14:08,936
experience and have you prompted


466
00:14:08,936 --> 00:14:10,286
recently, that's where you want


467
00:14:10,286 --> 00:14:10,936
to have your check.


468
00:14:11,146 --> 00:14:13,366
As soon as all of those pass you


469
00:14:13,366 --> 00:14:14,246
simply call


470
00:14:14,286 --> 00:14:15,946
SKStoreReviewController.


471
00:14:15,946 --> 00:14:17,486
requestReview.


472
00:14:17,856 --> 00:14:19,416
It takes no input and it gives


473
00:14:19,416 --> 00:14:21,166
back no output, it's a simple


474
00:14:21,166 --> 00:14:22,176
but powerful API.


475
00:14:23,726 --> 00:14:25,746
We've gotten immense response


476
00:14:25,746 --> 00:14:27,036
from developers about these


477
00:14:27,036 --> 00:14:28,936
APIs, I'm happy to share a few


478
00:14:28,936 --> 00:14:29,346
with you.


479
00:14:30,176 --> 00:14:32,036
Zappos have said they're seeing


480
00:14:32,396 --> 00:14:34,786
10 times the amount of reviews


481
00:14:34,786 --> 00:14:36,266
that they used to using the


482
00:14:36,266 --> 00:14:37,936
SKStoreReviewController and it's


483
00:14:37,936 --> 00:14:39,596
giving them the confidence to


484
00:14:39,596 --> 00:14:40,566
know that they're delivering the


485
00:14:40,566 --> 00:14:42,176
right things to their customers.


486
00:14:42,836 --> 00:14:45,186
Frosty Pop, maker of such great


487
00:14:45,186 --> 00:14:47,796
games like Kingpin Bowling and


488
00:14:47,796 --> 00:14:49,776
Ninja Attack have said that


489
00:14:50,436 --> 00:14:51,636
they're getting greater


490
00:14:51,636 --> 00:14:53,206
visibility in the App Store and


491
00:14:53,686 --> 00:14:55,576
because of a larger sample size


492
00:14:56,006 --> 00:14:57,616
they have a much greater and


493
00:14:57,616 --> 00:14:59,326
more relevantly engaged user


494
00:14:59,326 --> 00:15:00,426
base giving feedback.


495
00:15:00,426 --> 00:15:03,286
I hope this type of feedback


496
00:15:03,286 --> 00:15:04,566
convinces you that you shouldn't


497
00:15:04,566 --> 00:15:06,496
be using your own prompts to


498
00:15:06,496 --> 00:15:07,606
request review you should move


499
00:15:07,606 --> 00:15:08,436
over to the


500
00:15:08,436 --> 00:15:11,216
SKStoreReviewController, it


501
00:15:11,216 --> 00:15:12,326
really has been making


502
00:15:12,326 --> 00:15:13,276
tremendous gains.


503
00:15:16,116 --> 00:15:18,056
As I'm sure you saw yesterday,


504
00:15:18,576 --> 00:15:20,556
we announced a beautiful new Mac


505
00:15:20,556 --> 00:15:22,646
App Store and we know you guys


506
00:15:22,646 --> 00:15:23,676
are all going to rush off and


507
00:15:23,676 --> 00:15:25,476
make great new Mac apps.


508
00:15:25,906 --> 00:15:27,486
And so with that we're excited


509
00:15:27,486 --> 00:15:29,056
to announce that we brought the


510
00:15:29,056 --> 00:15:30,856
write a review API to the Mac


511
00:15:31,136 --> 00:15:31,976
starting with Mojave.


512
00:15:32,516 --> 00:15:36,566
[ Applause ]


513
00:15:37,066 --> 00:15:38,136
So I mentioned there were a few


514
00:15:38,136 --> 00:15:41,156
ways you can get users to write


515
00:15:41,156 --> 00:15:42,716
reviews for your apps.


516
00:15:44,226 --> 00:15:46,046
Well another way of doing it is


517
00:15:46,156 --> 00:15:47,676
you can deep link right into the


518
00:15:47,676 --> 00:15:48,436
App Store.


519
00:15:49,226 --> 00:15:50,636
We also introduced this in iOS


520
00:15:50,636 --> 00:15:52,216
10.3 and we're also bringing


521
00:15:52,216 --> 00:15:53,436
that to the Mac this year.


522
00:15:54,746 --> 00:15:56,156
It's basically just a link right


523
00:15:56,156 --> 00:15:57,816
into your product page, you tell


524
00:15:57,816 --> 00:15:59,126
the App Store bring up the write


525
00:15:59,126 --> 00:16:00,886
a review sheet and the user can


526
00:16:00,886 --> 00:16:01,786
fill it out right then and


527
00:16:01,786 --> 00:16:02,036
there.


528
00:16:02,196 --> 00:16:04,046
As an alternative to the


529
00:16:04,046 --> 00:16:05,606
SKStoreReviewController this


530
00:16:05,606 --> 00:16:07,386
works much better from any sort


531
00:16:07,386 --> 00:16:09,056
of UI you might have where the


532
00:16:09,056 --> 00:16:10,626
user has to take an immediate


533
00:16:10,626 --> 00:16:11,216
action.


534
00:16:11,936 --> 00:16:13,856
So for example, if you had a


535
00:16:13,856 --> 00:16:15,946
button inside a settings page


536
00:16:15,946 --> 00:16:17,726
within your app basically asking


537
00:16:17,726 --> 00:16:18,866
the user to kindly write a


538
00:16:18,866 --> 00:16:20,576
review this would be a great


539
00:16:20,576 --> 00:16:22,296
time to use a deep link right


540
00:16:22,296 --> 00:16:23,406
into your product page.


541
00:16:24,086 --> 00:16:24,986
So how does this work?


542
00:16:25,976 --> 00:16:28,536
Well pretty simple, you take


543
00:16:28,536 --> 00:16:30,326
your product page URL and you


544
00:16:30,326 --> 00:16:32,406
add action=write-review to the


545
00:16:32,406 --> 00:16:32,836
end of it.


546
00:16:32,836 --> 00:16:34,136
This informs the App Store to


547
00:16:34,136 --> 00:16:35,216
bring right up the write a


548
00:16:35,216 --> 00:16:35,866
review sheet.


549
00:16:36,246 --> 00:16:38,776
If you don't know how to get a


550
00:16:38,776 --> 00:16:41,176
product URL for your app


551
00:16:41,766 --> 00:16:44,316
linkmaker.itunes.apple.com is a


552
00:16:44,316 --> 00:16:46,356
great facility for finding that.


553
00:16:46,446 --> 00:16:47,166
You can get a lot more


554
00:16:47,166 --> 00:16:48,536
information about ratings and


555
00:16:48,536 --> 00:16:49,686
reviews, including how to


556
00:16:49,686 --> 00:16:51,596
respond to your customer reviews


557
00:16:51,736 --> 00:16:53,106
right on the developer website.


558
00:16:53,636 --> 00:16:57,776
I'd like to do a deep dive into


559
00:16:58,006 --> 00:16:59,676
the App Store Sandbox next.


560
00:17:00,686 --> 00:17:02,066
So what do I mean by the


561
00:17:02,066 --> 00:17:03,036
Sandbox?


562
00:17:03,656 --> 00:17:05,906
Well first what don't I mean,


563
00:17:05,996 --> 00:17:07,906
I'm not talking about the app


564
00:17:07,906 --> 00:17:10,236
Sandbox, that part of the


565
00:17:10,266 --> 00:17:11,766
operating system in kernel that


566
00:17:11,766 --> 00:17:14,106
limits what resources your apps


567
00:17:14,106 --> 00:17:14,886
have access to.


568
00:17:15,126 --> 00:17:16,435
What I'm really talking about is


569
00:17:16,435 --> 00:17:18,435
a dedicated environment, it's an


570
00:17:18,435 --> 00:17:20,736
entire copy of the App Store


571
00:17:20,736 --> 00:17:22,106
commerce engine on the server


572
00:17:22,106 --> 00:17:24,106
side that's there for you to


573
00:17:24,106 --> 00:17:26,016
test your apps and in-app


574
00:17:26,016 --> 00:17:26,915
purchases.


575
00:17:28,435 --> 00:17:31,076
StoreKit knows when to go to the


576
00:17:31,076 --> 00:17:32,946
Sandbox environment based on how


577
00:17:32,946 --> 00:17:34,036
your app is signed.


578
00:17:34,806 --> 00:17:36,486
So for example, you're building


579
00:17:36,486 --> 00:17:38,196
your app in Xcode, it's signed


580
00:17:38,196 --> 00:17:39,946
with the developer's certificate


581
00:17:40,566 --> 00:17:41,756
StoreKit knows right then and


582
00:17:41,756 --> 00:17:43,526
there take all of your requests


583
00:17:43,526 --> 00:17:44,846
to the Sandbox environment.


584
00:17:45,356 --> 00:17:47,996
If the user downloads the app


585
00:17:48,076 --> 00:17:49,676
from the production App Store in


586
00:17:49,676 --> 00:17:50,466
that case it's going to be


587
00:17:50,466 --> 00:17:51,346
production signed.


588
00:17:51,906 --> 00:17:53,476
StoreKit knows to go right to


589
00:17:53,476 --> 00:17:55,016
the regular production


590
00:17:55,016 --> 00:17:55,536
environment.


591
00:17:56,916 --> 00:17:58,496
So what makes the Sandbox


592
00:17:58,496 --> 00:17:59,386
environment different?


593
00:17:59,386 --> 00:18:02,676
Well first we don't charge, this


594
00:18:02,676 --> 00:18:04,266
is an environment for you to


595
00:18:04,266 --> 00:18:05,406
test your in-apps.


596
00:18:05,756 --> 00:18:06,716
You're going to test them over


597
00:18:06,716 --> 00:18:08,066
and over and over again, there's


598
00:18:08,066 --> 00:18:09,306
no reason to charge.


599
00:18:10,206 --> 00:18:12,396
Second, we have specific


600
00:18:12,396 --> 00:18:14,266
dedicated Sandbox accounts that


601
00:18:14,266 --> 00:18:16,146
you create in App Store Connect


602
00:18:16,476 --> 00:18:18,406
for your developer to use in the


603
00:18:18,406 --> 00:18:19,986
Sandbox environment, they're not


604
00:18:19,986 --> 00:18:22,136
the same as your regular iTunes


605
00:18:22,136 --> 00:18:23,686
in-apps accounts.


606
00:18:24,956 --> 00:18:26,586
We also as I mentioned before


607
00:18:26,586 --> 00:18:27,906
have a completely different


608
00:18:27,906 --> 00:18:29,196
backend environment which means


609
00:18:29,196 --> 00:18:30,526
there's a completely different


610
00:18:30,526 --> 00:18:32,006
URL from when you're doing


611
00:18:32,196 --> 00:18:33,726
server to server receipt


612
00:18:33,726 --> 00:18:34,496
validation.


613
00:18:34,746 --> 00:18:35,886
This is important to know if


614
00:18:35,886 --> 00:18:37,726
you're taking that development


615
00:18:37,896 --> 00:18:39,736
test receipt from your device,


616
00:18:39,736 --> 00:18:41,916
sending it to your QA server and


617
00:18:41,916 --> 00:18:43,896
wanting to have that go to the


618
00:18:44,186 --> 00:18:45,726
Verify Receipt endpoint for


619
00:18:45,726 --> 00:18:46,406
validation.


620
00:18:47,256 --> 00:18:48,186
I'll talk more about that a


621
00:18:48,186 --> 00:18:49,086
little bit later on.


622
00:18:50,416 --> 00:18:52,016
We also offer some test modes


623
00:18:52,016 --> 00:18:53,196
right in StoreKit.


624
00:18:53,596 --> 00:18:54,496
So for example,


625
00:18:54,656 --> 00:18:58,536
SKReceiptRefreshRequest can take


626
00:18:58,536 --> 00:19:00,616
in an argument to get an expired


627
00:19:00,616 --> 00:19:01,156
receipt.


628
00:19:01,586 --> 00:19:03,066
This way you can actually test


629
00:19:03,426 --> 00:19:04,876
hey what happens if I get an


630
00:19:04,876 --> 00:19:06,816
expired receipt later on.


631
00:19:08,356 --> 00:19:09,856
We also have an ability for you


632
00:19:09,856 --> 00:19:12,386
to simulate what would happen if


633
00:19:12,386 --> 00:19:14,896
a kid is asking their parent for


634
00:19:14,896 --> 00:19:15,896
an in-app purchase.


635
00:19:16,666 --> 00:19:17,026
We have


636
00:19:17,026 --> 00:19:19,006
simulatesAskToBuyInSandbox.


637
00:19:20,696 --> 00:19:21,986
Probably one of the biggest


638
00:19:21,986 --> 00:19:24,476
differences is that when you're


639
00:19:24,476 --> 00:19:25,306
working with in-app


640
00:19:25,306 --> 00:19:27,506
subscriptions we can track down


641
00:19:27,506 --> 00:19:29,206
how long it takes to auto renew.


642
00:19:29,726 --> 00:19:30,886
If you have an annual


643
00:19:30,886 --> 00:19:32,666
subscription in your app it


644
00:19:32,666 --> 00:19:33,846
would be ridiculous for us to


645
00:19:33,846 --> 00:19:35,536
make you wait a year to test


646
00:19:35,836 --> 00:19:37,046
your annual subscription


647
00:19:37,046 --> 00:19:37,576
renewing.


648
00:19:39,016 --> 00:19:41,356
A general rule of thumb is 1


649
00:19:41,356 --> 00:19:44,166
year in real time equals 1 hour


650
00:19:44,166 --> 00:19:45,196
in Sandbox.


651
00:19:46,196 --> 00:19:47,336
You can also see that if you


652
00:19:47,336 --> 00:19:48,636
have a monthly subscription


653
00:19:48,826 --> 00:19:50,166
that's only 5 minutes.


654
00:19:51,636 --> 00:19:53,816
We also limit the number of auto


655
00:19:53,816 --> 00:19:55,986
renews in Sandbox to 5.


656
00:19:56,576 --> 00:19:58,826
So when you buy that initial


657
00:19:59,036 --> 00:20:00,836
subscription purchase you'll


658
00:20:00,836 --> 00:20:02,886
have 5 automatic auto renews


659
00:20:03,156 --> 00:20:04,826
working up this cadence and at


660
00:20:04,826 --> 00:20:05,976
the end it'll just stop.


661
00:20:06,096 --> 00:20:07,996
This is to simulate what would


662
00:20:07,996 --> 00:20:09,166
happen if a user goes into


663
00:20:09,166 --> 00:20:10,726
managed accounts and disables


664
00:20:10,726 --> 00:20:11,716
that subscription, they just


665
00:20:11,756 --> 00:20:13,926
turn it off or what we call


666
00:20:13,926 --> 00:20:15,726
voluntary turn, they've decided


667
00:20:15,726 --> 00:20:16,516
they don't want to use your


668
00:20:16,516 --> 00:20:17,366
service anymore.


669
00:20:17,846 --> 00:20:21,486
So how do set all this up, how


670
00:20:21,486 --> 00:20:22,656
do you work with the Sandbox


671
00:20:22,656 --> 00:20:23,106
environment?


672
00:20:23,106 --> 00:20:24,276
Well first you go into App Store


673
00:20:24,276 --> 00:20:26,576
Connect, you create your users.


674
00:20:27,076 --> 00:20:29,666
You create your products that


675
00:20:29,666 --> 00:20:30,806
you're going to sell, you're


676
00:20:30,806 --> 00:20:31,846
going to need to get that up on


677
00:20:31,846 --> 00:20:33,156
the server side before your app


678
00:20:33,156 --> 00:20:34,236
starts working with that.


679
00:20:35,446 --> 00:20:36,656
You build and sign your app in


680
00:20:36,686 --> 00:20:37,896
Xcode just like you do all the


681
00:20:37,896 --> 00:20:38,336
time.


682
00:20:39,086 --> 00:20:40,346
And you launch your app and you


683
00:20:40,346 --> 00:20:41,646
go find a product to buy.


684
00:20:42,206 --> 00:20:44,386
And then when prompted you sign


685
00:20:44,386 --> 00:20:45,586
in with your Sandbox account.


686
00:20:46,076 --> 00:20:48,866
Now if you're paying attention


687
00:20:48,866 --> 00:20:50,426
you might have thought I missed


688
00:20:50,426 --> 00:20:51,206
a step.


689
00:20:51,816 --> 00:20:53,946
What would happen if I'm already


690
00:20:53,946 --> 00:20:56,206
signed in to my production app


691
00:20:56,606 --> 00:20:58,706
or iTunes Store, don't I need to


692
00:20:58,706 --> 00:21:00,676
sign out before using a Sandbox


693
00:21:00,676 --> 00:21:01,046
account?


694
00:21:01,816 --> 00:21:03,316
Well starting in iOS 12 that's


695
00:21:03,316 --> 00:21:04,546
no longer the case.


696
00:21:05,516 --> 00:21:11,086
[ Applause ]


697
00:21:11,586 --> 00:21:13,786
Down here we've separated out


698
00:21:14,086 --> 00:21:15,196
your production account from


699
00:21:15,196 --> 00:21:16,426
your Sandbox account, you can


700
00:21:16,426 --> 00:21:18,176
manage it separately just like


701
00:21:18,176 --> 00:21:19,736
how we use the receipt to decide


702
00:21:19,736 --> 00:21:21,366
which environment to use we use


703
00:21:21,366 --> 00:21:22,906
the -- I'm sorry, just like we


704
00:21:22,906 --> 00:21:24,616
use the certificate to know


705
00:21:24,616 --> 00:21:26,286
which environment to use we know


706
00:21:26,286 --> 00:21:28,926
to use the Sandbox account when


707
00:21:28,926 --> 00:21:30,086
you're in development mode.


708
00:21:30,896 --> 00:21:32,056
So look forward to that in iOS


709
00:21:32,056 --> 00:21:33,006
12 I think it's going to make a


710
00:21:33,006 --> 00:21:34,466
huge difference for carrying


711
00:21:34,466 --> 00:21:35,866
these test apps on your personal


712
00:21:35,866 --> 00:21:37,646
devices for long-term testing.


713
00:21:38,166 --> 00:21:41,156
So now I'm going to invite Ross


714
00:21:41,156 --> 00:21:42,076
back up and he's going to talk


715
00:21:42,076 --> 00:21:43,756
about some best practices, some


716
00:21:43,756 --> 00:21:45,056
things you want to keep in mind


717
00:21:45,056 --> 00:21:45,846
when processing your


718
00:21:45,846 --> 00:21:46,826
transactions.


719
00:21:47,236 --> 00:21:47,626
Ross.


720
00:21:48,516 --> 00:21:53,500
[ Applause ]


721
00:21:55,256 --> 00:21:56,576
>> I would like to go over a few


722
00:21:56,576 --> 00:21:57,876
common questions and scenarios


723
00:21:57,876 --> 00:21:59,106
we see and discuss the best way


724
00:21:59,106 --> 00:22:00,856
to handle them.


725
00:22:01,056 --> 00:22:02,756
First things first, you should


726
00:22:02,756 --> 00:22:04,236
add your Transaction Observer to


727
00:22:04,236 --> 00:22:05,576
the default gaming queue as


728
00:22:05,636 --> 00:22:06,806
early as possible in the life


729
00:22:06,806 --> 00:22:08,066
cycle of your app.


730
00:22:09,456 --> 00:22:10,956
This is a common issue we see


731
00:22:10,956 --> 00:22:12,176
where apps don't add a


732
00:22:12,176 --> 00:22:13,416
Transaction Observer until the


733
00:22:13,416 --> 00:22:14,616
user navigates to the in-app


734
00:22:14,656 --> 00:22:16,216
purchase UI or even until they


735
00:22:16,216 --> 00:22:17,136
begin a transaction.


736
00:22:18,206 --> 00:22:19,996
In fact we recommend adding it


737
00:22:20,376 --> 00:22:21,586
right in the application


738
00:22:21,586 --> 00:22:22,336
didFinishLaunching


739
00:22:22,336 --> 00:22:23,316
WithOptions method of your


740
00:22:23,316 --> 00:22:23,866
AppDelegate.


741
00:22:25,616 --> 00:22:26,946
Well why we recommend this.


742
00:22:27,746 --> 00:22:29,016
Well the Transaction Observer is


743
00:22:29,016 --> 00:22:30,276
StoreKit's way of communicating


744
00:22:30,276 --> 00:22:32,366
changes in transactions the user


745
00:22:32,366 --> 00:22:34,186
is making in their app and


746
00:22:34,186 --> 00:22:35,236
pretty much all of these changes


747
00:22:35,236 --> 00:22:35,726
are important.


748
00:22:35,726 --> 00:22:37,636
And it's a good user experience


749
00:22:37,636 --> 00:22:38,796
and generally good business to


750
00:22:38,796 --> 00:22:39,706
make sure you handle any


751
00:22:39,706 --> 00:22:40,736
transaction promptly.


752
00:22:42,596 --> 00:22:43,776
There are a few cases when


753
00:22:43,776 --> 00:22:44,656
transactions can become


754
00:22:44,656 --> 00:22:45,146
interrupted.


755
00:22:46,426 --> 00:22:47,626
For example, if the user leaves


756
00:22:47,626 --> 00:22:48,356
your app in the middle of a


757
00:22:48,356 --> 00:22:49,846
transaction, maybe they got


758
00:22:49,846 --> 00:22:51,076
caught playing games in class.


759
00:22:52,446 --> 00:22:53,526
Your app could be terminated by


760
00:22:53,526 --> 00:22:55,076
the system later on or even by


761
00:22:55,076 --> 00:22:56,886
the user and then when it's


762
00:22:56,886 --> 00:22:58,456
opened back up again StoreKit


763
00:22:58,456 --> 00:22:59,346
won't know to continue the


764
00:22:59,346 --> 00:23:00,676
transaction until you add the


765
00:23:00,676 --> 00:23:01,576
Transaction Observer.


766
00:23:01,746 --> 00:23:03,446
If the user decides to buy


767
00:23:03,446 --> 00:23:04,676
something else this could result


768
00:23:04,676 --> 00:23:05,846
in confusion when they receive


769
00:23:05,846 --> 00:23:08,156
two prompts or they could


770
00:23:08,156 --> 00:23:09,346
receive a prompt out of nowhere


771
00:23:09,346 --> 00:23:10,416
when you finally add the


772
00:23:10,416 --> 00:23:12,666
Transaction Observer again.


773
00:23:13,446 --> 00:23:14,926
Not great [inaudible].


774
00:23:15,106 --> 00:23:16,156
Another common case where the


775
00:23:16,156 --> 00:23:17,176
user needs to leave your app in


776
00:23:17,176 --> 00:23:18,216
the middle of a transaction is


777
00:23:18,216 --> 00:23:18,886
if they have to edit their


778
00:23:18,886 --> 00:23:20,456
billing info, this happens all


779
00:23:20,456 --> 00:23:20,816
the time.


780
00:23:21,156 --> 00:23:22,086
You'd have to leave your app and


781
00:23:22,086 --> 00:23:22,816
you want to make sure to


782
00:23:22,816 --> 00:23:23,596
smoothly continue the


783
00:23:23,596 --> 00:23:24,806
transaction when they do return.


784
00:23:26,916 --> 00:23:29,276
Finally, it happens your app can


785
00:23:29,276 --> 00:23:31,016
crash, in this case you want to


786
00:23:31,016 --> 00:23:32,466
make sure to smoothly continue


787
00:23:32,466 --> 00:23:32,886
as well.


788
00:23:33,426 --> 00:23:37,026
Now there are some other reason


789
00:23:37,026 --> 00:23:38,316
as well that you want to make


790
00:23:38,316 --> 00:23:39,286
sure to add this as early as


791
00:23:39,286 --> 00:23:39,766
possible.


792
00:23:39,766 --> 00:23:41,806
There are several types of


793
00:23:41,806 --> 00:23:43,246
transactions that can actually


794
00:23:43,246 --> 00:23:44,016
come from outside your app.


795
00:23:45,236 --> 00:23:46,266
For example subscription


796
00:23:46,266 --> 00:23:47,076
renewals come through the


797
00:23:47,076 --> 00:23:47,956
Transaction Observer.


798
00:23:49,096 --> 00:23:50,726
When an auto renewable renews


799
00:23:50,726 --> 00:23:52,236
successfully you'll receive a


800
00:23:52,236 --> 00:23:53,426
transaction in the payment


801
00:23:53,426 --> 00:23:53,616
queue.


802
00:23:53,756 --> 00:23:56,066
You definitely want to make sure


803
00:23:56,066 --> 00:23:57,246
to receive this as early as


804
00:23:57,246 --> 00:23:58,346
possible so you don't interrupt


805
00:23:58,346 --> 00:23:59,636
the user's service when they


806
00:23:59,636 --> 00:24:02,866
actually have paid for it.


807
00:24:03,136 --> 00:24:04,656
Also promoted in-app purchases,


808
00:24:05,086 --> 00:24:06,366
users click on these in the App


809
00:24:06,366 --> 00:24:07,896
Store and then the transaction


810
00:24:07,896 --> 00:24:08,936
is handed off to your app.


811
00:24:09,536 --> 00:24:10,526
So you want to make sure to have


812
00:24:10,526 --> 00:24:13,496
a smooth transition there.


813
00:24:13,616 --> 00:24:14,746
Finally, if you set up promo


814
00:24:14,746 --> 00:24:15,826
codes for your in-app purchases


815
00:24:15,856 --> 00:24:16,836
these are redeemed from inside


816
00:24:16,836 --> 00:24:17,656
the App Store and sent to your


817
00:24:17,656 --> 00:24:17,976
app as well.


818
00:24:23,286 --> 00:24:24,526
Another question we get all time


819
00:24:24,526 --> 00:24:25,906
is when should I call Finish


820
00:24:25,906 --> 00:24:26,496
Transaction.


821
00:24:27,946 --> 00:24:29,066
Well the general rule is you


822
00:24:29,066 --> 00:24:30,426
should call Finish Transaction


823
00:24:30,486 --> 00:24:31,856
after a transaction has


824
00:24:31,856 --> 00:24:33,746
completed successfully and you


825
00:24:33,746 --> 00:24:34,796
have downloaded and delivered


826
00:24:34,796 --> 00:24:37,156
all the content to the user or


827
00:24:37,156 --> 00:24:38,126
after the transaction has


828
00:24:38,126 --> 00:24:39,356
computed unsuccessfully.


829
00:24:40,776 --> 00:24:43,306
To get more specific, let's go


830
00:24:43,306 --> 00:24:44,266
through all the transaction


831
00:24:44,266 --> 00:24:46,296
states and talk about how to


832
00:24:46,296 --> 00:24:47,196
handle them.


833
00:24:47,896 --> 00:24:50,086
The purchasing state you don't


834
00:24:50,086 --> 00:24:50,776
need to do anything at the


835
00:24:50,776 --> 00:24:52,196
moment, just continue to observe


836
00:24:52,236 --> 00:24:53,556
the payment queue and wait for


837
00:24:53,556 --> 00:24:54,286
the state to change.


838
00:24:54,836 --> 00:24:57,526
In the purchased state the


839
00:24:57,526 --> 00:24:58,686
transaction has completed


840
00:24:58,686 --> 00:24:59,096
successfully.


841
00:24:59,096 --> 00:25:00,966
You should download and deliver


842
00:25:00,966 --> 00:25:02,106
all of the content to the user


843
00:25:02,376 --> 00:25:03,076
and then call Finish


844
00:25:03,076 --> 00:25:03,626
Transaction.


845
00:25:04,166 --> 00:25:07,416
In the failed state the


846
00:25:07,416 --> 00:25:08,536
transaction has completed


847
00:25:08,606 --> 00:25:09,326
unsuccessfully.


848
00:25:09,326 --> 00:25:11,216
You should inspect the error and


849
00:25:11,216 --> 00:25:12,706
handle it appropriately, maybe


850
00:25:12,706 --> 00:25:13,746
update your UI, record


851
00:25:13,746 --> 00:25:14,666
analytics, whatever you need to


852
00:25:14,666 --> 00:25:16,366
do, and then you should call


853
00:25:16,366 --> 00:25:17,156
Finish Transaction.


854
00:25:17,356 --> 00:25:19,196
And it's also important to note


855
00:25:19,196 --> 00:25:22,106
here that transactions come back


856
00:25:22,106 --> 00:25:23,286
in the failed state if the user


857
00:25:23,316 --> 00:25:23,896
cancels them.


858
00:25:24,546 --> 00:25:25,886
So it's very important that you


859
00:25:25,886 --> 00:25:26,926
do inspect the error and make


860
00:25:26,926 --> 00:25:28,096
sure it's not the canceled error


861
00:25:28,296 --> 00:25:29,176
because you shouldn't show any


862
00:25:29,176 --> 00:25:30,046
UI in that case.


863
00:25:30,046 --> 00:25:31,206
You know the user just canceled


864
00:25:31,206 --> 00:25:32,216
they don't need to know that it


865
00:25:32,246 --> 00:25:32,456
failed.


866
00:25:35,556 --> 00:25:37,086
The restored state, this is very


867
00:25:37,086 --> 00:25:38,336
similar to the purchased state.


868
00:25:38,586 --> 00:25:40,286
It indicates the transaction has


869
00:25:40,286 --> 00:25:41,796
completed successfully, so again


870
00:25:41,796 --> 00:25:42,856
you should download and deliver


871
00:25:42,856 --> 00:25:43,976
all of the content to the user


872
00:25:44,156 --> 00:25:45,346
and then you should call Finish


873
00:25:45,346 --> 00:25:45,876
Transaction.


874
00:25:48,356 --> 00:25:49,786
Finally, the deferred state,


875
00:25:50,616 --> 00:25:51,566
this is similar to the


876
00:25:51,566 --> 00:25:53,676
purchasing state except it means


877
00:25:53,676 --> 00:25:54,806
that the transaction is waiting


878
00:25:54,806 --> 00:25:55,886
on some outside action to


879
00:25:55,886 --> 00:25:56,346
continue.


880
00:25:57,346 --> 00:25:58,726
For example, if a user has Ask


881
00:25:58,816 --> 00:26:01,336
to Buy turned on, so Ask to Buy


882
00:26:01,336 --> 00:26:02,766
is a feature that allows parents


883
00:26:02,826 --> 00:26:04,766
to manually approve or decline


884
00:26:04,766 --> 00:26:05,856
transactions made by their


885
00:26:05,856 --> 00:26:06,236
children.


886
00:26:07,596 --> 00:26:09,216
Any user can have Ask to Buy set


887
00:26:09,216 --> 00:26:11,206
up, but it can happen to any of


888
00:26:11,206 --> 00:26:12,386
your in-app purchases so it is


889
00:26:12,386 --> 00:26:13,306
important that you handle this


890
00:26:13,306 --> 00:26:13,976
case appropriately.


891
00:26:18,046 --> 00:26:20,436
Speaking of Ask to Buy, if your


892
00:26:20,436 --> 00:26:21,716
transaction is deferred due to


893
00:26:21,716 --> 00:26:24,136
Ask to Buy the user will receive


894
00:26:24,136 --> 00:26:25,206
a message from the App Store


895
00:26:25,206 --> 00:26:26,306
saying that their parent has


896
00:26:26,306 --> 00:26:28,406
been notified to approve it.


897
00:26:29,236 --> 00:26:31,706
If it is approved and then it


898
00:26:31,706 --> 00:26:32,786
will be returned to your


899
00:26:33,046 --> 00:26:34,606
Transaction Observer in the


900
00:26:34,666 --> 00:26:35,296
purchased state.


901
00:26:35,996 --> 00:26:36,836
You should let the user know


902
00:26:36,836 --> 00:26:38,316
it's been approved, of course


903
00:26:38,316 --> 00:26:39,786
deliver the content, and call


904
00:26:39,786 --> 00:26:40,516
Finish Transaction.


905
00:26:41,096 --> 00:26:44,396
If it's declined it will be


906
00:26:44,396 --> 00:26:45,426
returned to your Transaction


907
00:26:45,426 --> 00:26:46,456
Observer in the failed state.


908
00:26:46,976 --> 00:26:48,026
So here you should let the user


909
00:26:48,026 --> 00:26:49,636
know that it was declined and


910
00:26:49,636 --> 00:26:50,816
then call Finish Transaction to


911
00:26:50,816 --> 00:26:51,246
finish it up.


912
00:26:52,206 --> 00:26:55,736
However, if there's no action


913
00:26:55,736 --> 00:26:58,346
taken within 24 hours then the


914
00:26:58,346 --> 00:27:02,416
transaction fails silently, this


915
00:27:02,416 --> 00:27:03,486
means that nothing will be


916
00:27:03,486 --> 00:27:04,566
returned to your Transaction


917
00:27:04,566 --> 00:27:04,916
Observer.


918
00:27:05,686 --> 00:27:07,946
Furthermore, all Ask to Buy


919
00:27:07,946 --> 00:27:09,416
transactions within that 24


920
00:27:09,416 --> 00:27:11,036
hours are consolidated into a


921
00:27:11,036 --> 00:27:12,886
single ask.


922
00:27:13,506 --> 00:27:14,486
So the important takeaway here


923
00:27:14,486 --> 00:27:15,756
is that you should not wait on


924
00:27:15,756 --> 00:27:17,486
deferred transactions or even


925
00:27:17,486 --> 00:27:18,646
expect them to come back at all,


926
00:27:18,826 --> 00:27:19,946
you should make sure you don't


927
00:27:19,946 --> 00:27:21,176
lock the UI and allow the user


928
00:27:21,176 --> 00:27:22,546
to continue using your app as


929
00:27:22,546 --> 00:27:24,666
much as possible.


930
00:27:24,666 --> 00:27:26,106
Another important tip when


931
00:27:26,106 --> 00:27:27,756
working with in-app purchases


932
00:27:27,756 --> 00:27:29,326
that have Apple hosted content


933
00:27:29,326 --> 00:27:31,096
via SKDownload is that you


934
00:27:31,096 --> 00:27:32,346
should always finish downloading


935
00:27:32,346 --> 00:27:34,246
the hosted content before


936
00:27:34,246 --> 00:27:35,356
calling Finish Transaction.


937
00:27:36,616 --> 00:27:37,996
This is because once you call


938
00:27:37,996 --> 00:27:39,556
Finish Transaction all


939
00:27:39,696 --> 00:27:41,766
SKDownloads will be canceled and


940
00:27:41,876 --> 00:27:42,896
no longer valid for


941
00:27:42,896 --> 00:27:43,436
redownloading.


942
00:27:44,256 --> 00:27:45,826
If you do this on accident then


943
00:27:45,826 --> 00:27:47,066
you have to call Restore


944
00:27:47,066 --> 00:27:48,146
Transactions to get a new


945
00:27:48,146 --> 00:27:49,016
download to finish.


946
00:27:49,346 --> 00:27:51,056
So even if your download fails


947
00:27:51,786 --> 00:27:53,116
you should withhold calling


948
00:27:53,116 --> 00:27:54,656
Finish Transaction until you


949
00:27:54,656 --> 00:27:55,726
retry it and you actually


950
00:27:56,006 --> 00:27:56,996
successfully download it and


951
00:27:56,996 --> 00:27:58,016
deliver that content to the


952
00:27:58,016 --> 00:27:58,316
user.


953
00:28:00,756 --> 00:28:02,416
Finally, if you're using Receipt


954
00:28:02,416 --> 00:28:05,006
Verification you should always


955
00:28:05,006 --> 00:28:06,496
make sure to do this before


956
00:28:06,496 --> 00:28:07,586
calling Finish Transaction as


957
00:28:07,586 --> 00:28:07,816
well.


958
00:28:08,806 --> 00:28:09,996
This is especially important for


959
00:28:09,996 --> 00:28:11,306
consumable in-app purchases


960
00:28:11,306 --> 00:28:12,756
because consumable in-app


961
00:28:12,756 --> 00:28:14,286
purchases only appear in receipt


962
00:28:14,556 --> 00:28:15,936
as long as they're unfinished.


963
00:28:16,736 --> 00:28:17,516
Once you do call Finish


964
00:28:17,516 --> 00:28:18,856
Transaction they will no longer


965
00:28:18,946 --> 00:28:19,986
appear in their seats and you


966
00:28:19,986 --> 00:28:21,016
won't be able to validate them.


967
00:28:21,316 --> 00:28:22,686
So if you're using Receipt


968
00:28:22,686 --> 00:28:24,416
Verification make sure that it's


969
00:28:24,416 --> 00:28:26,046
a real Apple signed transaction


970
00:28:26,046 --> 00:28:27,976
the user paid for, always do


971
00:28:27,976 --> 00:28:29,016
this before calling Finish


972
00:28:29,016 --> 00:28:29,556
Transaction.


973
00:28:29,686 --> 00:28:32,916
I'd like to hand it back to Dana


974
00:28:32,916 --> 00:28:34,036
to discuss some tips for


975
00:28:34,036 --> 00:28:34,696
managing the receipt.


976
00:28:36,516 --> 00:28:39,546
[ Applause ]


977
00:28:40,046 --> 00:28:41,306
>> Thanks again Ross.


978
00:28:43,496 --> 00:28:44,836
So what is the receipt?


979
00:28:46,006 --> 00:28:46,846
It's a lot like its name


980
00:28:46,846 --> 00:28:49,016
implies, it is a record of your


981
00:28:49,016 --> 00:28:50,336
app in in-app purchases.


982
00:28:50,336 --> 00:28:51,476
It's a lot like the piece of


983
00:28:51,476 --> 00:28:53,216
paper you get when you buy some


984
00:28:53,216 --> 00:28:54,006
retail good.


985
00:28:54,556 --> 00:28:57,716
It's stored on the device, it's


986
00:28:57,716 --> 00:28:59,096
a file, it's a file that we


987
00:28:59,096 --> 00:29:00,676
actually get from the App Store.


988
00:29:00,676 --> 00:29:01,696
It comes from the server,


989
00:29:01,696 --> 00:29:03,256
StoreKit doesn't make it and we


990
00:29:03,256 --> 00:29:04,946
store it on the device and your


991
00:29:05,066 --> 00:29:07,506
app can actually read it.


992
00:29:07,776 --> 00:29:09,626
It's signed by the App Store so


993
00:29:09,626 --> 00:29:10,796
that's how you know it's


994
00:29:10,796 --> 00:29:11,506
authentic.


995
00:29:12,966 --> 00:29:15,116
And finally, it's for your app


996
00:29:15,116 --> 00:29:16,636
and for that device.


997
00:29:17,316 --> 00:29:19,526
The receipt is an important way


998
00:29:19,526 --> 00:29:22,066
for making sure that that app is


999
00:29:22,066 --> 00:29:23,776
valid for the device it's trying


1000
00:29:23,776 --> 00:29:24,336
to run on.


1001
00:29:24,856 --> 00:29:28,046
How do you validate the receipt?


1002
00:29:28,086 --> 00:29:29,356
Well there's two things you can


1003
00:29:29,356 --> 00:29:29,616
do.


1004
00:29:29,686 --> 00:29:31,356
First, you can look at on-device


1005
00:29:31,356 --> 00:29:32,876
receipt validation, this is


1006
00:29:32,876 --> 00:29:34,336
where you can just use


1007
00:29:35,086 --> 00:29:36,296
cryptography right on your


1008
00:29:36,296 --> 00:29:38,176
device to validate that receipt


1009
00:29:38,416 --> 00:29:39,876
and unlock content right then


1010
00:29:39,876 --> 00:29:40,226
and there.


1011
00:29:40,666 --> 00:29:42,406
Alternatively, you can do


1012
00:29:42,406 --> 00:29:44,176
server-to-server validation.


1013
00:29:44,346 --> 00:29:45,486
This is where you take the


1014
00:29:45,486 --> 00:29:47,116
receipt, send it up to your


1015
00:29:47,116 --> 00:29:49,106
trusted server, and it'll manage


1016
00:29:49,106 --> 00:29:49,756
it for you.


1017
00:29:50,316 --> 00:29:52,956
In this case it'll call


1018
00:29:53,086 --> 00:29:56,136
itunes.apple.com/verifyreceipt,


1019
00:29:56,276 --> 00:29:57,946
send that receipt over and the


1020
00:29:57,946 --> 00:29:59,976
App Store will validate it for


1021
00:29:59,976 --> 00:30:00,976
your trusted server.


1022
00:30:01,596 --> 00:30:02,796
This is great if you have a


1023
00:30:02,796 --> 00:30:04,106
subscription service on the


1024
00:30:04,106 --> 00:30:04,726
backend.


1025
00:30:05,366 --> 00:30:07,576
However, I'm going to focus more


1026
00:30:07,576 --> 00:30:09,226
for the purposes of my talk for


1027
00:30:09,226 --> 00:30:10,626
on-device validation.


1028
00:30:11,086 --> 00:30:12,256
If you have a subscription


1029
00:30:12,256 --> 00:30:14,686
service I highly suggest you


1030
00:30:14,686 --> 00:30:15,686
check out engineering


1031
00:30:15,686 --> 00:30:18,026
subscriptions here in Hall 1


1032
00:30:18,026 --> 00:30:19,386
today at 3 o'clock right after


1033
00:30:19,386 --> 00:30:19,966
this talk.


1034
00:30:20,446 --> 00:30:23,816
But I do want to make one point


1035
00:30:24,006 --> 00:30:25,166
about server-to-server


1036
00:30:25,166 --> 00:30:25,876
validation.


1037
00:30:27,276 --> 00:30:28,296
As I said, it's completely


1038
00:30:28,296 --> 00:30:29,356
correct, it's completely


1039
00:30:29,356 --> 00:30:30,836
appropriate to take that receipt


1040
00:30:30,886 --> 00:30:32,176
from the device and send it up


1041
00:30:32,176 --> 00:30:32,996
to your server.


1042
00:30:34,226 --> 00:30:36,026
But you should never send the


1043
00:30:36,026 --> 00:30:37,586
receipt from your device


1044
00:30:37,746 --> 00:30:39,926
directly to Verify Receipt.


1045
00:30:40,746 --> 00:30:42,166
You don't control either end of


1046
00:30:42,166 --> 00:30:43,066
that connection, you don't


1047
00:30:43,066 --> 00:30:44,596
control the user's device and


1048
00:30:44,596 --> 00:30:45,966
what connections it makes and


1049
00:30:45,966 --> 00:30:47,166
you don't control the other end


1050
00:30:47,216 --> 00:30:48,026
with the App Store.


1051
00:30:48,246 --> 00:30:49,986
There's no way to make a trusted


1052
00:30:49,986 --> 00:30:51,266
connection from your app right


1053
00:30:51,266 --> 00:30:51,716
then and there.


1054
00:30:51,986 --> 00:30:53,266
You should send it, always send


1055
00:30:53,266 --> 00:30:54,856
it up to an intermediate server.


1056
00:30:55,376 --> 00:30:59,046
So what is the structure of the


1057
00:30:59,046 --> 00:30:59,556
receipt?


1058
00:31:00,856 --> 00:31:01,836
Well it has some purchase


1059
00:31:01,836 --> 00:31:03,296
information, the certificates


1060
00:31:03,296 --> 00:31:04,206
and signatures.


1061
00:31:04,666 --> 00:31:06,496
We give you an API to pull it


1062
00:31:06,496 --> 00:31:07,636
off the file system.


1063
00:31:08,216 --> 00:31:09,976
And as I said it's a single


1064
00:31:10,686 --> 00:31:10,786
file.


1065
00:31:11,836 --> 00:31:14,546
We use opensource standards,


1066
00:31:15,116 --> 00:31:18,566
PKCS Cryptographic Container and


1067
00:31:18,566 --> 00:31:20,706
ASN.1 to store the metadata


1068
00:31:20,706 --> 00:31:21,496
within the receipt.


1069
00:31:21,496 --> 00:31:23,216
These are all well documented


1070
00:31:23,216 --> 00:31:24,906
and well published open file


1071
00:31:25,286 --> 00:31:26,266
formats.


1072
00:31:26,776 --> 00:31:29,236
And there are tons of options


1073
00:31:29,236 --> 00:31:30,856
out there for verifying and


1074
00:31:30,856 --> 00:31:33,366
reading the receipt, OpenSSL,


1075
00:31:34,366 --> 00:31:36,466
asn1c, there's tons more, you


1076
00:31:36,466 --> 00:31:37,766
can even build your own.


1077
00:31:38,586 --> 00:31:39,826
How do you read that receipt no


1078
00:31:39,826 --> 00:31:40,876
matter what API you're going to


1079
00:31:40,876 --> 00:31:41,286
use?


1080
00:31:41,286 --> 00:31:42,196
Well you call


1081
00:31:42,196 --> 00:31:44,666
bundle.appStoreReceiptURL, this


1082
00:31:44,666 --> 00:31:46,616
returns a URL to your app, but


1083
00:31:46,616 --> 00:31:48,126
again it's just a path to the


1084
00:31:48,126 --> 00:31:49,466
file in the file system.


1085
00:31:50,256 --> 00:31:50,966
There you're going to want to


1086
00:31:50,966 --> 00:31:52,736
read in that content, get that


1087
00:31:52,736 --> 00:31:54,766
blob of data into memory, and if


1088
00:31:54,766 --> 00:31:55,906
you're doing server-to-server


1089
00:31:55,906 --> 00:31:57,486
validation send it up to your


1090
00:31:57,486 --> 00:31:58,886
server, otherwise you can


1091
00:31:58,886 --> 00:32:00,066
process it right there on the


1092
00:32:00,066 --> 00:32:00,656
device.


1093
00:32:01,386 --> 00:32:03,476
When you are processing it if


1094
00:32:03,476 --> 00:32:05,596
you're using OpenSSL here are


1095
00:32:05,596 --> 00:32:07,016
some tips you want to follow.


1096
00:32:07,156 --> 00:32:09,706
First, build a static library


1097
00:32:10,476 --> 00:32:12,176
not a dynamic one, it much more


1098
00:32:12,176 --> 00:32:13,566
secure if you use a static


1099
00:32:13,566 --> 00:32:14,126
library.


1100
00:32:15,336 --> 00:32:16,426
Finally, if you're going to


1101
00:32:16,516 --> 00:32:18,516
include the Apple Root CA


1102
00:32:18,516 --> 00:32:19,656
Certificate, which is what you


1103
00:32:19,656 --> 00:32:21,356
need to validate the receipt you


1104
00:32:21,356 --> 00:32:22,936
can grab that online, there's


1105
00:32:22,936 --> 00:32:24,406
tons of documentation out there,


1106
00:32:24,576 --> 00:32:26,276
but watch out for the expiration


1107
00:32:26,276 --> 00:32:26,966
of that receipt.


1108
00:32:30,196 --> 00:32:31,596
So as I mentioned before there's


1109
00:32:31,636 --> 00:32:33,236
tons of solutions out there for


1110
00:32:33,236 --> 00:32:35,666
this, but keep in mind


1111
00:32:35,726 --> 00:32:37,326
convenience comes at a price.


1112
00:32:37,326 --> 00:32:39,456
This is your business, you need


1113
00:32:39,456 --> 00:32:41,416
to understand and know the risks


1114
00:32:41,546 --> 00:32:42,976
that come to any solution you


1115
00:32:42,976 --> 00:32:43,486
implement.


1116
00:32:44,356 --> 00:32:46,166
If you're using some popular


1117
00:32:46,346 --> 00:32:47,776
third-party solution out there


1118
00:32:47,776 --> 00:32:49,096
and there's an exploit within


1119
00:32:49,096 --> 00:32:51,286
there your app is going to be


1120
00:32:51,286 --> 00:32:52,566
vulnerable to that as well.


1121
00:32:53,736 --> 00:32:55,506
It's your revenue stream, make


1122
00:32:55,506 --> 00:32:57,276
sure you understand what


1123
00:32:57,276 --> 00:32:57,976
products you're choosing.


1124
00:33:02,156 --> 00:33:04,226
So I mentioned that there's a


1125
00:33:04,226 --> 00:33:05,086
signature and there's


1126
00:33:05,086 --> 00:33:06,376
certificates within the receipt.


1127
00:33:07,126 --> 00:33:10,416
One best practice is don't check


1128
00:33:10,766 --> 00:33:12,026
the expiration date of those


1129
00:33:12,026 --> 00:33:13,296
certificates within the receipt


1130
00:33:13,296 --> 00:33:14,996
against the current clock.


1131
00:33:15,766 --> 00:33:17,346
First of all, the user can


1132
00:33:17,346 --> 00:33:18,986
actually change the clock on the


1133
00:33:18,986 --> 00:33:24,336
device, but more importantly the


1134
00:33:24,436 --> 00:33:26,776
receipt isn't necessarily


1135
00:33:26,776 --> 00:33:27,986
invalid just because the


1136
00:33:27,986 --> 00:33:29,236
certificates within it are


1137
00:33:29,236 --> 00:33:29,926
expired.


1138
00:33:30,746 --> 00:33:31,976
What you should be comparing it


1139
00:33:31,976 --> 00:33:33,246
to is the dates of the


1140
00:33:33,246 --> 00:33:35,136
transactions within the receipt.


1141
00:33:35,136 --> 00:33:37,026
As long as all the transactions


1142
00:33:37,226 --> 00:33:38,926
occurred before the certificate


1143
00:33:38,926 --> 00:33:41,086
is expired it's a valid receipt.


1144
00:33:43,856 --> 00:33:45,906
So let's dive in and get a sense


1145
00:33:45,906 --> 00:33:47,486
of what is inside the receipt.


1146
00:33:48,546 --> 00:33:49,726
That purchase information


1147
00:33:49,966 --> 00:33:51,486
contains just a bunch of types


1148
00:33:51,486 --> 00:33:52,436
and attributes.


1149
00:33:53,156 --> 00:33:54,226
Here you can see there's a


1150
00:33:54,226 --> 00:33:56,896
bundle identifier and a bunch of


1151
00:33:56,896 --> 00:33:58,266
other values that go along with


1152
00:33:58,916 --> 00:33:58,986
it.


1153
00:34:01,116 --> 00:34:02,546
If you're going to check that


1154
00:34:02,546 --> 00:34:03,776
the receipt is for your


1155
00:34:03,776 --> 00:34:05,656
application first you want to


1156
00:34:05,656 --> 00:34:07,866
check that bundle identifier and


1157
00:34:07,866 --> 00:34:10,016
you want to check type 3, which


1158
00:34:10,016 --> 00:34:11,406
gives you the version that goes


1159
00:34:11,406 --> 00:34:13,866
with the app.


1160
00:34:14,126 --> 00:34:15,626
But a best practice here is


1161
00:34:15,996 --> 00:34:17,656
always use hardcoded values,


1162
00:34:17,656 --> 00:34:19,266
don't just read from your app's


1163
00:34:19,266 --> 00:34:20,416
Info.plist.


1164
00:34:20,726 --> 00:34:22,085
It's too easy to change the


1165
00:34:22,085 --> 00:34:24,436
Info.plist to match an invalid


1166
00:34:24,436 --> 00:34:26,085
receipt to spoof your app into


1167
00:34:26,085 --> 00:34:26,436
running.


1168
00:34:27,786 --> 00:34:29,536
Now that you've matched that


1169
00:34:29,536 --> 00:34:31,516
bundle identifier and version to


1170
00:34:31,516 --> 00:34:33,386
the receipt you're going to want


1171
00:34:33,386 --> 00:34:35,005
to make sure that it's valid for


1172
00:34:35,005 --> 00:34:36,806
your device and the way to do


1173
00:34:36,806 --> 00:34:38,456
this is to use attribute 5.


1174
00:34:39,255 --> 00:34:41,846
Attribute 5 is shawl SHA-1 hash


1175
00:34:42,116 --> 00:34:44,936
of a couple values, including


1176
00:34:44,936 --> 00:34:46,536
the bundle identifier, the


1177
00:34:46,536 --> 00:34:48,016
device identifier, the thing


1178
00:34:48,016 --> 00:34:49,636
that represents the hardware


1179
00:34:49,746 --> 00:34:50,525
that is running your


1180
00:34:50,525 --> 00:34:52,456
application, and an opaque


1181
00:34:52,456 --> 00:34:52,976
value.


1182
00:34:53,536 --> 00:34:54,686
This is a bit of cryptic or


1183
00:34:54,926 --> 00:34:55,966
[inaudible] entropy, it changes


1184
00:34:55,966 --> 00:34:57,496
over time and we store that in


1185
00:34:57,496 --> 00:34:58,776
the receipt as type 4.


1186
00:34:59,476 --> 00:35:00,846
You're going to take those 3


1187
00:35:00,846 --> 00:35:03,826
values, generate your SHA-1 hash


1188
00:35:04,696 --> 00:35:07,126
and compare and if it matches


1189
00:35:07,846 --> 00:35:09,256
what you generate with what's in


1190
00:35:09,256 --> 00:35:10,776
the receipt you know that that


1191
00:35:10,776 --> 00:35:12,786
receipt was generated for your


1192
00:35:12,786 --> 00:35:14,246
app on that device.


1193
00:35:17,056 --> 00:35:18,406
Well what happens if you get an


1194
00:35:18,596 --> 00:35:21,526
invalid receipt or it just


1195
00:35:21,526 --> 00:35:22,776
doesn't exist for whatever


1196
00:35:22,776 --> 00:35:23,276
reason?


1197
00:35:24,556 --> 00:35:26,676
StoreKit gives you APIs to


1198
00:35:26,876 --> 00:35:28,836
request a new receipt from the


1199
00:35:28,836 --> 00:35:29,466
App Store.


1200
00:35:30,176 --> 00:35:31,656
Again, the receipt comes from


1201
00:35:31,656 --> 00:35:33,616
our commerce backend so you're


1202
00:35:33,616 --> 00:35:35,806
going to need a network in order


1203
00:35:35,806 --> 00:35:36,686
to be able to complete this


1204
00:35:36,686 --> 00:35:37,426
operation.


1205
00:35:38,596 --> 00:35:41,586
In order to make sure that we


1206
00:35:41,586 --> 00:35:43,196
are using an authentic receipt


1207
00:35:43,196 --> 00:35:44,886
from an authentic user a sign-in


1208
00:35:44,886 --> 00:35:45,806
may be required.


1209
00:35:46,306 --> 00:35:49,806
When you get an updated receipt


1210
00:35:49,806 --> 00:35:51,526
you need to be careful to avoid


1211
00:35:51,526 --> 00:35:53,386
any sort of continuous loop of


1212
00:35:53,386 --> 00:35:54,586
validate and refresh.


1213
00:35:54,586 --> 00:35:55,916
If you get an updated receipt


1214
00:35:56,136 --> 00:35:57,836
check it once and if it's still


1215
00:35:57,836 --> 00:35:59,486
invalid error out then.


1216
00:36:00,506 --> 00:36:01,526
So what does this look like in


1217
00:36:01,526 --> 00:36:01,886
code?


1218
00:36:02,846 --> 00:36:03,606
You simply call


1219
00:36:03,606 --> 00:36:06,416
SKReceiptRefreshRequest, you set


1220
00:36:06,416 --> 00:36:08,526
your purchase queue delegate


1221
00:36:08,726 --> 00:36:09,266
right there on the


1222
00:36:09,266 --> 00:36:10,886
ReceiptRefresh, you call start


1223
00:36:11,186 --> 00:36:12,706
and as that receipt gets updated


1224
00:36:12,966 --> 00:36:14,176
we'll call back and let you know


1225
00:36:14,176 --> 00:36:14,846
when it's down.


1226
00:36:15,376 --> 00:36:19,546
On macOS you can also call exit


1227
00:36:19,546 --> 00:36:23,176
173, that 173 code will tell the


1228
00:36:23,176 --> 00:36:24,486
operating system and tell


1229
00:36:24,486 --> 00:36:27,746
StoreKit to refresh a receipt on


1230
00:36:27,746 --> 00:36:28,156
your behalf.


1231
00:36:29,246 --> 00:36:30,066
There the app will get


1232
00:36:30,066 --> 00:36:31,596
relaunched once a new receipt


1233
00:36:31,596 --> 00:36:32,166
comes down.


1234
00:36:32,696 --> 00:36:36,156
As I mentioned earlier, we're


1235
00:36:36,156 --> 00:36:38,156
now allowing non-subscription


1236
00:36:38,156 --> 00:36:39,736
apps to do free trials and the


1237
00:36:39,736 --> 00:36:41,406
receipt is a great way to


1238
00:36:41,406 --> 00:36:43,446
understand is the user in the


1239
00:36:43,446 --> 00:36:45,146
middle of a free trial or have


1240
00:36:45,146 --> 00:36:47,946
they bought the full unlock


1241
00:36:48,476 --> 00:36:49,656
non-consumable IAP.


1242
00:36:49,656 --> 00:36:53,016
To do this you're going to want


1243
00:36:53,016 --> 00:36:55,776
to look for type 17 within the


1244
00:36:55,776 --> 00:36:56,236
receipt.


1245
00:36:56,556 --> 00:36:58,156
This includes all of your


1246
00:36:58,286 --> 00:37:00,036
subscription consumable and


1247
00:37:00,036 --> 00:37:01,846
non-consumable IAPs.


1248
00:37:03,246 --> 00:37:05,496
Within type 17 there's a couple


1249
00:37:05,936 --> 00:37:07,866
subdictionaries of data.


1250
00:37:08,466 --> 00:37:12,816
Type 1702 is going to be the


1251
00:37:12,816 --> 00:37:14,066
product identifier that's


1252
00:37:14,066 --> 00:37:15,376
associated with your


1253
00:37:15,746 --> 00:37:17,246
non-consumable IAP.


1254
00:37:17,246 --> 00:37:19,316
This is where you're going to


1255
00:37:19,316 --> 00:37:21,186
want to check to see is it my


1256
00:37:21,956 --> 00:37:23,316
non-consumable that represents


1257
00:37:23,316 --> 00:37:24,746
the beginning of the free trial


1258
00:37:24,746 --> 00:37:25,796
or the non-consumable that


1259
00:37:25,796 --> 00:37:27,366
represents the full unlock of


1260
00:37:27,366 --> 00:37:27,866
the app.


1261
00:37:29,246 --> 00:37:30,176
You're also going to want use


1262
00:37:30,176 --> 00:37:32,076
type 1704, this is where you can


1263
00:37:32,076 --> 00:37:33,496
check the purchase date of when


1264
00:37:33,496 --> 00:37:34,866
that consumable was actually


1265
00:37:34,866 --> 00:37:34,966
made.


1266
00:37:38,076 --> 00:37:39,326
So what's the algorithm you're


1267
00:37:39,326 --> 00:37:40,176
going to want to follow?


1268
00:37:40,646 --> 00:37:41,366
Well first, you're going to


1269
00:37:41,436 --> 00:37:43,136
iterate over all those in-app


1270
00:37:43,136 --> 00:37:44,766
purchases, all of those type


1271
00:37:44,766 --> 00:37:45,576
17's.


1272
00:37:46,966 --> 00:37:48,526
If you find any within the


1273
00:37:48,526 --> 00:37:50,256
receipt that matches the product


1274
00:37:50,256 --> 00:37:51,576
identifier that you've


1275
00:37:51,576 --> 00:37:53,216
represented the Full Unlock of


1276
00:37:53,216 --> 00:37:54,526
the app you're done.


1277
00:37:54,806 --> 00:37:55,956
You know that the user has


1278
00:37:56,016 --> 00:37:57,506
purchased the Full Unlock of


1279
00:37:57,506 --> 00:37:59,196
your app, give them the access


1280
00:37:59,196 --> 00:38:01,006
to it.


1281
00:38:01,246 --> 00:38:03,336
Alternatively, if you find a


1282
00:38:03,776 --> 00:38:05,436
Free Trial Product Identifier,


1283
00:38:05,436 --> 00:38:06,526
the product identifier that


1284
00:38:06,526 --> 00:38:08,046
represents the user beginning


1285
00:38:08,046 --> 00:38:09,486
their free trial you're going to


1286
00:38:09,486 --> 00:38:10,496
want to look at the purchase


1287
00:38:10,526 --> 00:38:11,976
date associated with that free


1288
00:38:11,976 --> 00:38:12,426
trial.


1289
00:38:13,646 --> 00:38:14,556
Here's where things get a little


1290
00:38:14,556 --> 00:38:15,016
tricky.


1291
00:38:15,986 --> 00:38:17,476
You can't always trust the clock


1292
00:38:17,476 --> 00:38:18,826
on the device, again the user


1293
00:38:18,826 --> 00:38:19,556
can change that.


1294
00:38:19,556 --> 00:38:20,616
So you might want to use your


1295
00:38:20,616 --> 00:38:22,416
own backend server or some sort


1296
00:38:22,416 --> 00:38:24,406
of time server to make sure that


1297
00:38:24,406 --> 00:38:25,586
it's still within your free


1298
00:38:25,586 --> 00:38:26,526
trial period.


1299
00:38:27,636 --> 00:38:29,876
There's also device check APIs


1300
00:38:30,086 --> 00:38:30,946
which I highly recommend you


1301
00:38:30,946 --> 00:38:31,946
check out that help you


1302
00:38:32,106 --> 00:38:33,776
determine whether or not the


1303
00:38:33,776 --> 00:38:35,436
user has previously completed


1304
00:38:35,436 --> 00:38:37,016
their free trial window on that


1305
00:38:37,056 --> 00:38:37,716
device.


1306
00:38:39,416 --> 00:38:41,206
Lastly, if neither are present


1307
00:38:41,416 --> 00:38:43,456
this is your signal to display


1308
00:38:43,666 --> 00:38:46,956
that free trial upsell to begin


1309
00:38:46,956 --> 00:38:48,116
the free trial, but again you


1310
00:38:48,116 --> 00:38:49,276
need to be careful to make sure


1311
00:38:49,276 --> 00:38:51,066
you represent the length of that


1312
00:38:51,066 --> 00:38:52,936
free trial, the content that


1313
00:38:52,936 --> 00:38:54,116
they're going to lose if they


1314
00:38:54,286 --> 00:38:56,766
don't buy that Full Unlock, and


1315
00:38:56,766 --> 00:38:58,206
the ultimate price of the Full


1316
00:38:58,206 --> 00:38:58,656
Unlock.


1317
00:39:01,356 --> 00:39:03,026
If you already have an app in


1318
00:39:03,026 --> 00:39:05,086
the App Store and you're selling


1319
00:39:05,086 --> 00:39:06,676
it or you have a subscription


1320
00:39:06,676 --> 00:39:08,006
model and you want to move to a


1321
00:39:08,006 --> 00:39:10,406
new free trial there's some


1322
00:39:10,406 --> 00:39:11,326
things you can also use the


1323
00:39:11,326 --> 00:39:12,916
receipt for to make that easier


1324
00:39:12,916 --> 00:39:13,356
for you.


1325
00:39:14,636 --> 00:39:15,976
So if you're paid up front and


1326
00:39:15,976 --> 00:39:16,656
you want to move to a


1327
00:39:16,656 --> 00:39:18,516
subscription or if you're paid


1328
00:39:18,516 --> 00:39:19,946
up, paid up front and you want


1329
00:39:19,946 --> 00:39:22,226
to move to a free trial use type


1330
00:39:22,276 --> 00:39:22,996
19.


1331
00:39:23,736 --> 00:39:25,756
This will tell you the original


1332
00:39:25,756 --> 00:39:27,356
version that the user purchased


1333
00:39:27,356 --> 00:39:28,466
that app with from the App


1334
00:39:28,466 --> 00:39:28,836
Store.


1335
00:39:29,926 --> 00:39:31,186
Even if they delete the app and


1336
00:39:31,186 --> 00:39:32,426
redownload it over and over


1337
00:39:32,426 --> 00:39:34,856
again that type 19 will tell you


1338
00:39:34,856 --> 00:39:36,596
exactly what version they bought


1339
00:39:36,596 --> 00:39:37,226
their app with.


1340
00:39:37,776 --> 00:39:41,516
If the user did originally pay


1341
00:39:41,516 --> 00:39:44,026
up front make sure to give them


1342
00:39:44,026 --> 00:39:45,276
the functionality that they


1343
00:39:45,276 --> 00:39:45,736
bought.


1344
00:39:46,246 --> 00:39:47,296
Just because you move to a


1345
00:39:47,296 --> 00:39:48,826
subscription model if they


1346
00:39:48,826 --> 00:39:50,766
bought it when it was a paid for


1347
00:39:50,766 --> 00:39:53,396
app in the App Store you need to


1348
00:39:53,396 --> 00:39:54,666
give them that access to that


1349
00:39:54,666 --> 00:39:55,886
content they originally paid


1350
00:39:55,886 --> 00:39:55,976
for.


1351
00:39:57,796 --> 00:40:00,056
So again use type 19 within the


1352
00:40:00,056 --> 00:40:02,676
receipt to know what version


1353
00:40:02,676 --> 00:40:03,646
they bought that app with.


1354
00:40:04,156 --> 00:40:06,986
So we went over a lot of things


1355
00:40:06,986 --> 00:40:07,856
today, we talked about


1356
00:40:07,856 --> 00:40:09,366
Introductory Pricing, this is a


1357
00:40:09,366 --> 00:40:11,666
great means of enticing new


1358
00:40:11,666 --> 00:40:12,596
customers into your


1359
00:40:12,596 --> 00:40:14,306
subscription, you can show


1360
00:40:14,306 --> 00:40:15,986
content right on the App Store


1361
00:40:17,096 --> 00:40:18,346
if you're merchandising your


1362
00:40:18,606 --> 00:40:19,886
subscription IAPs.


1363
00:40:20,636 --> 00:40:22,646
I also talked about how you can


1364
00:40:22,646 --> 00:40:24,636
now offer non-subscription free


1365
00:40:24,636 --> 00:40:26,566
trials within your apps.


1366
00:40:27,326 --> 00:40:28,416
We talked about


1367
00:40:28,416 --> 00:40:30,466
SKStoreReviewController and how


1368
00:40:31,256 --> 00:40:32,526
developers have seen such a


1369
00:40:32,526 --> 00:40:33,786
great response to that and how


1370
00:40:33,786 --> 00:40:34,966
we brought it to the Mac App


1371
00:40:34,966 --> 00:40:35,746
Store this year.


1372
00:40:37,136 --> 00:40:38,256
Talked about the Sandbox


1373
00:40:38,256 --> 00:40:39,746
environment and how now we


1374
00:40:39,746 --> 00:40:41,496
manage your Sandbox account


1375
00:40:41,496 --> 00:40:42,876
separately from your regular


1376
00:40:42,876 --> 00:40:44,126
iTunes and App Store production


1377
00:40:44,126 --> 00:40:44,736
accounts.


1378
00:40:45,696 --> 00:40:47,106
Ross gave a great overview of


1379
00:40:47,106 --> 00:40:48,436
things you need to keep in mind


1380
00:40:48,436 --> 00:40:49,346
when processing your


1381
00:40:49,346 --> 00:40:51,266
transactions, including making


1382
00:40:51,266 --> 00:40:53,076
sure to observe early and


1383
00:40:53,226 --> 00:40:54,526
knowing when the right time to


1384
00:40:54,526 --> 00:40:56,066
call Finish Transaction is.


1385
00:40:56,636 --> 00:40:58,266
And finally, I gave you some


1386
00:40:58,266 --> 00:41:00,086
good points on how to manage


1387
00:41:00,086 --> 00:41:01,196
that in-app receipt for


1388
00:41:01,196 --> 00:41:02,956
on-device validation and making


1389
00:41:02,956 --> 00:41:04,726
sure your free trials go


1390
00:41:04,726 --> 00:41:06,136
smoothly using the receipt.


1391
00:41:07,896 --> 00:41:09,676
For more information I highly


1392
00:41:09,676 --> 00:41:10,916
suggest you stick around for


1393
00:41:10,966 --> 00:41:12,566
Engineering Subscriptions if you


1394
00:41:12,566 --> 00:41:13,916
have a subscription business


1395
00:41:13,916 --> 00:41:14,396
model.


1396
00:41:14,506 --> 00:41:15,306
We're also going to be at the


1397
00:41:15,306 --> 00:41:17,886
labs today at 4 o'clock and then


1398
00:41:18,046 --> 00:41:19,916
Thursday morning at 9 a.m. We'd


1399
00:41:19,916 --> 00:41:21,076
love to get your questions and


1400
00:41:21,076 --> 00:41:22,246
help you out as best we can.


1401
00:41:22,756 --> 00:41:23,686
Thanks so much for coming.


1402
00:41:24,516 --> 00:41:30,500
[ Applause ]

