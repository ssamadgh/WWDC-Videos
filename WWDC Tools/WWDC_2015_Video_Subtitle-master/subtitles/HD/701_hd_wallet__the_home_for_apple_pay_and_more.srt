1
00:00:27,366 --> 00:00:28,536
>> DANVIN RUANGCHAN: All
right, good morning, everyone,


2
00:00:28,866 --> 00:00:31,476
and welcome to session 701.


3
00:00:31,746 --> 00:00:34,646
My name is Danvin, and I'm
really excited to be here today


4
00:00:34,646 --> 00:00:36,876
to talk to you guys
about Wallet,


5
00:00:37,596 --> 00:00:40,136
the app formerly
known as Passbook.


6
00:00:40,606 --> 00:00:41,016
All right.


7
00:00:41,016 --> 00:00:44,856
With a new name, we
also have a new logo!


8
00:00:45,676 --> 00:00:48,996
And you may have seen our
icon if you installed iOS 9,


9
00:00:49,226 --> 00:00:54,136
this is now our new icon, but
beauty is more than skin deep.


10
00:00:54,606 --> 00:00:57,156
We have been working on a
lot of features for Wallet


11
00:00:57,156 --> 00:00:58,306
over the past few years.


12
00:00:58,586 --> 00:01:00,836
We will talk about a
few of those today.


13
00:01:01,236 --> 00:01:03,506
So let's take a look at
our agenda and take a look


14
00:01:03,506 --> 00:01:05,206
at what we will be
talking about today.


15
00:01:05,786 --> 00:01:08,166
First we're going to take a
glance at what we've been up to


16
00:01:08,906 --> 00:01:11,676
and then a quick history lesson


17
00:01:11,836 --> 00:01:13,976
and review all of
Wallet's features.


18
00:01:14,186 --> 00:01:16,086
We will talk about
what is a Pass.


19
00:01:17,066 --> 00:01:19,586
We will talk about PassKit,
our framework inside iOS


20
00:01:19,586 --> 00:01:24,356
and we're going to talk about
Apple Pay and then there's more!


21
00:01:24,606 --> 00:01:25,276
So stick around.


22
00:01:25,276 --> 00:01:27,316
We have a lot of content
to talk about today.


23
00:01:27,946 --> 00:01:28,996
So what have we been up to?


24
00:01:29,646 --> 00:01:32,126
Well, Apple Pay is
what we have been up to


25
00:01:32,386 --> 00:01:34,906
and Apple Pay was
introduced last fall,


26
00:01:35,366 --> 00:01:37,566
and the responses
have been great!


27
00:01:38,236 --> 00:01:40,426
Consumers have loved
its ease of use.


28
00:01:40,746 --> 00:01:43,726
And merchants have loved
its higher conversion rates.


29
00:01:44,876 --> 00:01:48,276
And now with Apple Pay we have
now enabled contactless payments


30
00:01:48,626 --> 00:01:50,526
on our phones, our watches.


31
00:01:50,766 --> 00:01:52,006
We even released an API


32
00:01:52,006 --> 00:01:56,946
so you can take Apple Pay
inside your apps as well.


33
00:01:58,226 --> 00:02:00,646
But to understand the
essence of Wallet,


34
00:02:00,756 --> 00:02:04,826
to understand what we are about,
we need to take a look back.


35
00:02:05,396 --> 00:02:08,906
Take a look back and
see how we got here.


36
00:02:09,936 --> 00:02:12,346
Does this ring a bell?


37
00:02:12,346 --> 00:02:13,656
Does this look familiar
to anyone.


38
00:02:13,656 --> 00:02:15,836
Does anyone have a wallet
that looks like this?


39
00:02:17,296 --> 00:02:18,526
I'm sure someone out there


40
00:02:18,526 --> 00:02:19,876
who has a wallet
that looks like this.


41
00:02:19,876 --> 00:02:21,966
This is a real problem.


42
00:02:22,406 --> 00:02:25,606
We stick our gift cards in here,
our debit cards and credit cards


43
00:02:25,606 --> 00:02:28,626
and our coupons and
then when we try


44
00:02:28,626 --> 00:02:31,316
to find something,
we can't find it.


45
00:02:32,726 --> 00:02:36,196
The overstuffed wallet
is a real problem.


46
00:02:36,756 --> 00:02:39,206
And we are trying to solve
that problem with Wallet.


47
00:02:40,036 --> 00:02:41,846
We do so with passes.


48
00:02:41,846 --> 00:02:45,176
We have beautiful
passes inside Wallet.


49
00:02:45,376 --> 00:02:50,716
We have passes for coupons, for
event tickets for store cards,


50
00:02:51,186 --> 00:02:53,016
and even for boarding
passes as well.


51
00:02:53,716 --> 00:02:56,106
But all the things that
these passes have in common,


52
00:02:56,416 --> 00:03:00,646
is that they all allow us to
take action in the real world.


53
00:03:01,216 --> 00:03:05,426
And now, with Apple Pay,
we have your credit cards


54
00:03:05,766 --> 00:03:08,386
and debit cards inside
Wallet as well.


55
00:03:08,386 --> 00:03:10,116
But we went beyond that.


56
00:03:10,116 --> 00:03:12,196
We want to solve the problem
where we can't find the thing


57
00:03:12,196 --> 00:03:13,806
at the right place at the
right time so we built


58
00:03:13,806 --> 00:03:17,076
in relevancy inside
our passes as well.


59
00:03:17,076 --> 00:03:17,946
And they look like this.


60
00:03:17,946 --> 00:03:19,416
If you come to the airport,


61
00:03:19,716 --> 00:03:21,786
your boarding pass is right
there waiting for you.


62
00:03:22,316 --> 00:03:24,636
All I do is swipe
on the lock screen


63
00:03:24,886 --> 00:03:27,636
and my boarding pass
is ready to use.


64
00:03:28,456 --> 00:03:29,816
It's so great!


65
00:03:29,816 --> 00:03:32,736
It's that great surprise in the
light factor that this brings.


66
00:03:32,956 --> 00:03:37,246
But let's take a
look at these passes.


67
00:03:37,366 --> 00:03:39,996
In essence, these passes
contain information.


68
00:03:40,536 --> 00:03:43,766
On the top left-hand corner
you will see there's a logo.


69
00:03:44,286 --> 00:03:47,876
It clearly states the entity
that this pass belongs to.


70
00:03:48,016 --> 00:03:49,236
In this particular
case we are looking


71
00:03:49,236 --> 00:03:50,526
at a United boarding pass.


72
00:03:51,606 --> 00:03:54,306
So their logo is
predominantly up there


73
00:03:54,306 --> 00:03:55,566
in the top left-hand corner.


74
00:03:56,746 --> 00:03:59,386
We put our important
information in our header field.


75
00:04:00,546 --> 00:04:02,716
In this case, our gate
information is present there.


76
00:04:03,176 --> 00:04:05,826
Our users will know exactly
what gate they need to go to,


77
00:04:06,216 --> 00:04:07,816
when boarding time arrives.


78
00:04:08,356 --> 00:04:12,646
We put our important information
down in our primary fields.


79
00:04:13,606 --> 00:04:17,005
And this particular case, we
have a flight that takes off


80
00:04:17,005 --> 00:04:20,046
from Newark and arrives
in Stockholm.


81
00:04:21,875 --> 00:04:25,326
We also have auxiliary and
secondary fields and this is


82
00:04:25,326 --> 00:04:28,466
where we put our nice go to
know pieces of information,


83
00:04:28,466 --> 00:04:30,196
things like the seat number.


84
00:04:30,726 --> 00:04:34,806
And, of course, we
have our bar code.


85
00:04:34,806 --> 00:04:36,296
And this is that link.


86
00:04:36,686 --> 00:04:39,826
It's the message that connects
the users to your system,


87
00:04:39,826 --> 00:04:42,526
to be able to take action in the
real world, and in this case,


88
00:04:42,526 --> 00:04:46,786
this boarding pass will allow
the user to board a flight.


89
00:04:46,786 --> 00:04:50,646
And we can flip this
to the back.


90
00:04:51,016 --> 00:04:53,396
We call this the
back of the pass.


91
00:04:53,486 --> 00:04:54,346
And you'll notice right away


92
00:04:54,346 --> 00:04:58,066
on the very top you can
associate an app with this pass,


93
00:04:58,626 --> 00:05:02,926
and appropriately we have the
United Airlines app associated


94
00:05:02,926 --> 00:05:03,556
with this pass.


95
00:05:04,376 --> 00:05:06,326
There are two options
for users here as well.


96
00:05:06,506 --> 00:05:08,666
To be able to automatically
update this pass,


97
00:05:08,706 --> 00:05:10,256
that's very important
we're going touch


98
00:05:10,256 --> 00:05:12,956
on that a little bit later in
our presentation to be able


99
00:05:12,956 --> 00:05:16,286
to update these passes to
keep information up to date.


100
00:05:17,186 --> 00:05:20,006
We can also turn on and
off relevancy on and off


101
00:05:20,006 --> 00:05:21,226
on the back of the pass as well.


102
00:05:21,226 --> 00:05:24,246
That's the option there,
Suggest Pass on Lock Screen.


103
00:05:24,586 --> 00:05:26,526
And along with that, on
the back of the pass,


104
00:05:26,526 --> 00:05:29,066
with he have some other nice
to know pieces of information,


105
00:05:29,126 --> 00:05:34,386
things like terms can go
open the back of the pass.


106
00:05:34,386 --> 00:05:35,546
What makes a pass a pass?


107
00:05:36,236 --> 00:05:40,586
Let's take a look at this
beautiful MLB event ticket.


108
00:05:41,756 --> 00:05:45,426
The pass is made from
a pass.json file.


109
00:05:45,426 --> 00:05:47,046
The contents and the layout


110
00:05:47,046 --> 00:05:49,136
of this pass is defined
in that file.


111
00:05:49,136 --> 00:05:52,296
And it just your standard JSON
file with keys and values.


112
00:05:52,816 --> 00:05:55,566
In this case the keys and
values determine the content


113
00:05:55,716 --> 00:05:57,676
and the styling and the
layout of this pass.


114
00:05:59,456 --> 00:06:02,666
And this MLB pass also has
some really beautiful images.


115
00:06:02,666 --> 00:06:06,536
We have a logo that's an image
on the top left-hand corner


116
00:06:07,456 --> 00:06:09,656
and we have a strip image
that spans that pass.


117
00:06:09,656 --> 00:06:11,476
It really makes that
pass come to life.


118
00:06:11,916 --> 00:06:14,306
And when we package
all of these things


119
00:06:14,306 --> 00:06:18,236
up together we get what
is called a PKPass file.


120
00:06:19,506 --> 00:06:21,516
And the file hierarchy
looks something like this.


121
00:06:22,226 --> 00:06:25,106
Your PKPass file will
contain the pass.json


122
00:06:25,256 --> 00:06:28,596
and those images we talked
about and there are a couple


123
00:06:28,596 --> 00:06:30,396
of other files in there
I want to point out.


124
00:06:31,306 --> 00:06:33,406
First of all, there are
localized strings in here.


125
00:06:33,946 --> 00:06:35,636
Yes, passes can be localized,


126
00:06:35,636 --> 00:06:37,296
I will encourage
you guys to do so.


127
00:06:37,826 --> 00:06:40,866
You'll also notice
on the bottom,


128
00:06:41,296 --> 00:06:43,546
the manifest file
and a signature file.


129
00:06:44,686 --> 00:06:46,626
Our passes are cryptographically
signed


130
00:06:46,746 --> 00:06:49,056
so that their authenticity
can be verified


131
00:06:49,496 --> 00:06:52,616
and that the users know that the
pass came from a known entity.


132
00:06:53,126 --> 00:06:54,636
This is great.


133
00:06:55,036 --> 00:06:56,766
So now with a PK pass file


134
00:06:56,766 --> 00:06:58,606
and this is now just
a generic pass file.


135
00:06:58,606 --> 00:06:59,666
How do we make this unique?


136
00:06:59,666 --> 00:07:01,636
How do we make this your pass?


137
00:07:02,416 --> 00:07:04,746
Well we use three
different values to be able


138
00:07:04,746 --> 00:07:06,946
to determine the
uniqueness of your pass.


139
00:07:08,486 --> 00:07:10,886
The first one is
the teamIdentifier


140
00:07:10,886 --> 00:07:14,016
and this is just a 10 character
string that you can find


141
00:07:14,016 --> 00:07:16,986
in the developer portal and
we use this to entitle apps


142
00:07:17,866 --> 00:07:20,726
to gain access via
PassKit, our framework.


143
00:07:21,236 --> 00:07:25,616
The second value we use
is a passTypeIdentifier.


144
00:07:25,976 --> 00:07:29,296
And now this defines the class
or the category of passes


145
00:07:29,396 --> 00:07:31,966
that this particular pass is.


146
00:07:31,966 --> 00:07:34,446
You register for this in the
developer portal as well.


147
00:07:34,846 --> 00:07:37,896
We also use this value
to group passes together.


148
00:07:38,726 --> 00:07:42,226
And lastly, we have
the pass serialNumber.


149
00:07:43,216 --> 00:07:45,556
And now, this is unique
for every single pass.


150
00:07:45,796 --> 00:07:48,346
And it's completely chosen
by you, and opaque to us.


151
00:07:49,566 --> 00:07:52,116
Now, when we combine this
value, the serialNumber


152
00:07:52,586 --> 00:07:53,986
with a passTypeIdentifier,


153
00:07:54,686 --> 00:07:58,806
we get our guaranteed global
uniqueness for your pass.


154
00:07:59,596 --> 00:08:03,006
Along with all of these
values, the pass.json is also


155
00:08:03,006 --> 00:08:05,106
where you declare
your pass' relevancy.


156
00:08:05,566 --> 00:08:06,866
Let's take a look
at relevancy now.


157
00:08:08,036 --> 00:08:11,456
Relevancy can be determined
by three different categories.


158
00:08:12,116 --> 00:08:14,196
You can use date.


159
00:08:14,196 --> 00:08:16,306
You can use location.


160
00:08:17,116 --> 00:08:18,576
And you can use beacons.


161
00:08:18,896 --> 00:08:22,276
And it's the combination
of these categories


162
00:08:22,466 --> 00:08:25,276
that make these passes
really, really powerful.


163
00:08:25,276 --> 00:08:28,786
So let's take a look at
how we implement relevancy


164
00:08:28,926 --> 00:08:30,856
on our pass.json.


165
00:08:31,266 --> 00:08:32,086
We have a few keys.


166
00:08:32,885 --> 00:08:33,535
First of all, we're going


167
00:08:33,535 --> 00:08:35,616
to take a look at
the locations key.


168
00:08:36,006 --> 00:08:38,226
That takes an array
of dictionaries


169
00:08:38,596 --> 00:08:43,135
and that dictionary will contain
in it a latitude, a longitude


170
00:08:43,256 --> 00:08:44,726
and an optional relevantText.


171
00:08:45,066 --> 00:08:47,176
This relevant text will
then appear when your users


172
00:08:47,266 --> 00:08:48,986
in that locate or
near that location.


173
00:08:49,476 --> 00:08:52,606
So it's good to declare
those to be able to clarify


174
00:08:52,606 --> 00:08:56,716
to your user exactly why
that's shown to the user.


175
00:08:57,566 --> 00:08:59,416
And then we have
the relevantDate,


176
00:09:00,236 --> 00:09:03,666
and that's just your standard
W3C format, relevantDate,


177
00:09:04,436 --> 00:09:06,466
and then we have our beacons.


178
00:09:07,136 --> 00:09:10,156
The beacons key is an array.


179
00:09:10,896 --> 00:09:12,496
Inside that array
are dictionaries,


180
00:09:13,226 --> 00:09:16,736
the proximityUUID will
uniquely identify your beacon.


181
00:09:17,306 --> 00:09:18,836
Again, we have that relevantText


182
00:09:18,836 --> 00:09:20,816
and the optional name
field here as well.


183
00:09:21,296 --> 00:09:22,726
Again, it's when you combine all


184
00:09:22,726 --> 00:09:24,516
of these relevancy
categories together is


185
00:09:24,856 --> 00:09:28,336
when you make your passes
really, really powerful.


186
00:09:28,336 --> 00:09:30,086
And it's a great surprise
in the live feature


187
00:09:30,086 --> 00:09:31,356
for your users as well.


188
00:09:31,966 --> 00:09:35,406
Passes are only interesting to
the user when the information


189
00:09:35,406 --> 00:09:37,276
on them is up to date.


190
00:09:37,586 --> 00:09:39,816
So how do we keep our
passes up to date?


191
00:09:39,816 --> 00:09:42,976
Now, I'm going to give
a very high level glance


192
00:09:42,976 --> 00:09:45,176
at how this works,
and I'm going to refer


193
00:09:45,176 --> 00:09:48,796
to a WWDC talk we
gave back in 2012


194
00:09:49,006 --> 00:09:50,926
that goes really
in-depth into this topic.


195
00:09:51,376 --> 00:09:52,446
Let's take a look at this now.


196
00:09:54,576 --> 00:09:57,756
So your server will implement
the Apple Push Service.


197
00:09:57,756 --> 00:10:01,766
And we utilize the Apple Push
Service to start a pass' update.


198
00:10:03,046 --> 00:10:05,866
We get pass down, a
passTypeIdentifier.


199
00:10:05,906 --> 00:10:08,476
That's what we talked about
a couple of slides earlier.


200
00:10:09,646 --> 00:10:12,656
With that passTypeIdentifier,
we then look at your pass.json


201
00:10:12,996 --> 00:10:15,716
and look for the webService key.


202
00:10:16,746 --> 00:10:19,726
That webService key will
contain a URL that we can hit


203
00:10:20,356 --> 00:10:21,886
and ask for updated passes.


204
00:10:22,456 --> 00:10:26,026
And then we get brand new
.pkpass files with updates


205
00:10:26,026 --> 00:10:29,836
on them sent down to our devices
and we update the user's pass.


206
00:10:30,826 --> 00:10:33,146
Now that's a very high level
view of how this works.


207
00:10:33,596 --> 00:10:37,366
I would highly recommend going
back to that WWDC talk from 2012


208
00:10:37,836 --> 00:10:41,996
and dig into how to implement
a web service for your passes.


209
00:10:42,876 --> 00:10:44,156
Okay. This is great.


210
00:10:44,156 --> 00:10:47,136
Now, let's take a look at how
we can programmatically get


211
00:10:47,136 --> 00:10:47,966
to these passes.


212
00:10:48,516 --> 00:10:50,406
We do have PassKit
after all inside iOS.


213
00:10:50,406 --> 00:10:51,916
Let's see how we use it.


214
00:10:52,276 --> 00:10:54,776
The main class that
we're going to be using


215
00:10:54,776 --> 00:10:57,836
in PassKit is PKPassLibrary.


216
00:10:57,836 --> 00:10:59,246
This is your link.


217
00:10:59,716 --> 00:11:02,296
This is what you are
going to use to be able


218
00:11:02,296 --> 00:11:03,906
to query your user's passes,


219
00:11:04,956 --> 00:11:07,276
and access to it is
gated by entitlements.


220
00:11:07,756 --> 00:11:09,256
We talked about that
a little bit earlier,


221
00:11:09,736 --> 00:11:11,606
using your passTypeIdentifier.


222
00:11:12,816 --> 00:11:15,636
Let's take a look at some of the
methods inside PKPassLibrary.


223
00:11:17,356 --> 00:11:20,356
First we have a function
that asks,


224
00:11:20,996 --> 00:11:23,376
is the PassLibrary
available on this device.


225
00:11:23,376 --> 00:11:25,456
This is a very good
question to ask.


226
00:11:26,616 --> 00:11:32,296
When we get a positive answer
back, you can then get passes.


227
00:11:32,296 --> 00:11:35,046
When you call passes, you will
get back an array of PKPass.


228
00:11:35,306 --> 00:11:39,376
And these are all the passes
that you are entitled to see.


229
00:11:40,656 --> 00:11:42,936
You can also find a
particular, a specific pass


230
00:11:42,936 --> 00:11:43,486
that you are looking


231
00:11:43,486 --> 00:11:45,766
for by calling
passWithPassTypeIdentifier,


232
00:11:46,196 --> 00:11:49,776
serialNumber, passing
it the identifier string


233
00:11:49,826 --> 00:11:50,916
and the serial number string.


234
00:11:50,916 --> 00:11:52,886
That will get you the exact
pass that you are looking for.


235
00:11:53,386 --> 00:11:56,256
We also have another
one called passesOfType,


236
00:11:57,086 --> 00:11:58,086
passing a PKPassType.


237
00:11:58,086 --> 00:12:00,036
And you may wonder what are
all the different pass types?


238
00:12:00,036 --> 00:12:02,816
Well here they are
there's Barcode,


239
00:12:03,346 --> 00:12:05,216
there's Payment and there's Any.


240
00:12:06,476 --> 00:12:08,546
So you may ask yourself, Danvin,


241
00:12:08,546 --> 00:12:10,086
why would you want
to get passes?


242
00:12:10,086 --> 00:12:11,606
Why do you want to see
your user's passes.


243
00:12:11,606 --> 00:12:14,056
Well as a developer
you may want to know --


244
00:12:14,056 --> 00:12:18,396
any of your passes that your
users already have on the system


245
00:12:18,396 --> 00:12:20,976
so you don't duplicate
things again.


246
00:12:20,976 --> 00:12:23,516
For payment passes, we're
going talk about earlier,


247
00:12:23,516 --> 00:12:26,516
banks and other merchants
may want to be able


248
00:12:26,516 --> 00:12:30,386
to activate payment passes
from your users' pass library.


249
00:12:30,386 --> 00:12:32,866
We will get into that when we
get into the Apple Pay section.


250
00:12:33,676 --> 00:12:36,246
Now we have our passes
together, they're beautiful,


251
00:12:36,246 --> 00:12:38,296
they're relevant, they're up
to date, how do we get them


252
00:12:38,296 --> 00:12:39,546
in the hands of our users.


253
00:12:40,806 --> 00:12:45,316
Well the PKPass file is pretty
portable, so you can host them


254
00:12:45,316 --> 00:12:48,206
on a website, you can
email them to your users,


255
00:12:48,206 --> 00:12:50,746
you can even include
them inside your apps.


256
00:12:52,326 --> 00:12:54,916
And I want to point one
neat little feature,


257
00:12:55,116 --> 00:12:56,636
we give special treatment


258
00:12:56,636 --> 00:12:59,876
to PKPass files inside
our iOS apps like Mail.


259
00:13:00,426 --> 00:13:03,426
When we receive a PKPass file


260
00:13:03,796 --> 00:13:07,176
in our email Mail will give
it some special treatment


261
00:13:07,176 --> 00:13:11,106
with this action button and you
can see exactly what PKPass file


262
00:13:11,106 --> 00:13:13,186
is in that email.


263
00:13:13,536 --> 00:13:17,446
And if you host this on a
website or put this on an app,


264
00:13:17,446 --> 00:13:19,116
we even have a banner for you,


265
00:13:19,116 --> 00:13:22,866
you can include inside your
sites and on your apps.


266
00:13:23,716 --> 00:13:25,556
But you may be telling
me, Danvin,


267
00:13:25,556 --> 00:13:27,426
you know that says Passbook.


268
00:13:28,156 --> 00:13:29,826
I know. I know this
says Passbook.


269
00:13:29,826 --> 00:13:33,746
This is a good little
transition for me to talk about.


270
00:13:33,826 --> 00:13:35,206
We are in the middle
of a transition.


271
00:13:35,416 --> 00:13:37,486
We are moving from
Passbook to Wallet.


272
00:13:37,996 --> 00:13:40,886
And for now, in the public, we
are still known as Passbook.


273
00:13:41,026 --> 00:13:41,916
So be aware of that.


274
00:13:42,516 --> 00:13:45,316
But please stay tuned as
we get closer and closer


275
00:13:45,316 --> 00:13:50,056
to iOS 9's release, we will keep
you up to date on this topic.


276
00:13:50,116 --> 00:13:52,706
I'm really glad we got
to talk about that.


277
00:13:53,506 --> 00:13:57,326
But let's say we want to add
these passes programmatically,


278
00:13:57,386 --> 00:13:58,196
how would you do that?


279
00:13:58,956 --> 00:14:00,376
Well, PKPassLibrary does that.


280
00:14:01,076 --> 00:14:03,846
We have a function in
there called addPasses.


281
00:14:05,086 --> 00:14:06,676
That's right, multiple passes.


282
00:14:06,716 --> 00:14:07,756
Why would you want to do this?


283
00:14:07,756 --> 00:14:12,926
Well, consider a flight with
multiple segments and you want


284
00:14:12,926 --> 00:14:16,036
to be able to ingest all
the passes all at once.


285
00:14:16,826 --> 00:14:18,016
This is a great way to do that.


286
00:14:18,016 --> 00:14:20,906
So addPasses
withCompletionHandler will alert


287
00:14:20,906 --> 00:14:23,986
the user with a small
and very subtle dialog


288
00:14:24,066 --> 00:14:26,236
to add these passes
into their library.


289
00:14:26,286 --> 00:14:29,816
Please make sure before you call
this that you already denoted


290
00:14:29,816 --> 00:14:33,506
to the user that they
are about to add a pass.


291
00:14:33,706 --> 00:14:36,516
We do have one more way to add
passes into the pass library


292
00:14:36,516 --> 00:14:39,706
and that's using
PKAddPassesViewController.


293
00:14:40,606 --> 00:14:43,056
you may have seen this before if
you have added passes to Mail.


294
00:14:43,456 --> 00:14:46,316
It looks something like
this, you tap on a pass,


295
00:14:47,426 --> 00:14:49,116
they call
PKAddPassesViewController


296
00:14:49,186 --> 00:14:51,776
and we get this nice beautiful
view controller fully rendered


297
00:14:51,776 --> 00:14:55,456
out with an action up top
for the user to choose.


298
00:14:56,486 --> 00:14:57,096
How does this work.


299
00:14:57,496 --> 00:14:59,996
PKAddPassesViewerController
has a function


300
00:15:00,096 --> 00:15:02,216
that checks can you add
passes to this device?


301
00:15:03,156 --> 00:15:05,396
And then like before, you
can add a single pass,


302
00:15:06,896 --> 00:15:07,746
or multiple passes.


303
00:15:08,156 --> 00:15:09,376
So you knit one of these guys


304
00:15:09,486 --> 00:15:12,076
and then you just show this
view controller and we take care


305
00:15:12,076 --> 00:15:13,466
of rendering that pass for you.


306
00:15:14,626 --> 00:15:17,166
Great. Now we can add passes.


307
00:15:17,166 --> 00:15:18,936
We can keep them updated.


308
00:15:18,936 --> 00:15:19,896
We can keep them relevant.


309
00:15:21,186 --> 00:15:23,196
But how do we keep
these passes engaging?


310
00:15:23,486 --> 00:15:23,826
All right.


311
00:15:23,826 --> 00:15:25,376
We want our users
to keep coming back


312
00:15:25,376 --> 00:15:26,796
and take a look at our passes.


313
00:15:27,346 --> 00:15:30,486
So I have a few tips for you
to keep our passes engaging.


314
00:15:31,376 --> 00:15:33,816
As I mentioned before
relevancy is a big deal.


315
00:15:33,886 --> 00:15:36,486
Relevancy will give that
big surprise in the life,


316
00:15:36,926 --> 00:15:38,846
kind of feel for the users.


317
00:15:40,176 --> 00:15:41,486
You want to keep
our passes updated.


318
00:15:41,486 --> 00:15:43,366
For example, this pass,
this boarding pass,


319
00:15:44,106 --> 00:15:48,066
it's useless unless we have
the latest gate information.


320
00:15:49,386 --> 00:15:53,546
Users want to come back and
keep looking at your passes.


321
00:15:53,696 --> 00:15:54,586
Images are great.


322
00:15:55,116 --> 00:15:56,656
For example, this MLB
pass that we looked


323
00:15:56,656 --> 00:16:00,136
at has this strip image that
spans the entirety of the pass.


324
00:16:00,916 --> 00:16:03,196
It really brings life
and also brings clarity


325
00:16:03,196 --> 00:16:05,836
as to what this pass is
actually for and what it does.


326
00:16:06,516 --> 00:16:07,636
This is called a strip image.


327
00:16:07,806 --> 00:16:09,556
You notice that there's no
extra information there.


328
00:16:09,556 --> 00:16:10,766
It's just for context.


329
00:16:10,766 --> 00:16:11,486
It's beautiful!


330
00:16:12,396 --> 00:16:15,216
And lastly, I want to
talk about formatting.


331
00:16:16,676 --> 00:16:18,456
Formatting is tricky.


332
00:16:19,056 --> 00:16:20,276
But we take care
of this for you.


333
00:16:20,516 --> 00:16:22,346
And now we know we
have different devices


334
00:16:22,346 --> 00:16:23,476
with different screen sizes.


335
00:16:23,476 --> 00:16:27,496
And so what I recommend is you
take a look at our HI guidelines


336
00:16:27,686 --> 00:16:30,986
on the website follow them
and we will do our very best


337
00:16:30,986 --> 00:16:35,686
to make your passes look really
great on all of our devices.


338
00:16:37,016 --> 00:16:39,366
Great. These passes have
been really, really useful.


339
00:16:39,366 --> 00:16:41,436
They really let us take
action in the real world.


340
00:16:42,376 --> 00:16:45,096
But they are not as slick
as what that experience


341
00:16:45,096 --> 00:16:46,116
with Apple Pay is yet.


342
00:16:47,186 --> 00:16:49,576
So how do we make that
experience a lot better?


343
00:16:50,126 --> 00:16:52,586
Well, let's talk about
where we go from here.


344
00:16:53,126 --> 00:16:55,956
Let me give you a scenario.


345
00:16:57,116 --> 00:16:58,356
So the other day, I go


346
00:16:58,356 --> 00:17:01,886
to my local neighborhood grocery
store, and I pick up my things


347
00:17:02,106 --> 00:17:03,116
and I'm ready to check out.


348
00:17:03,526 --> 00:17:05,376
Great, they take Apple Pay.


349
00:17:05,516 --> 00:17:08,526
As I head to the terminal, the
clerk is ringing up my things


350
00:17:08,526 --> 00:17:11,336
and I get my phone ready
to pay with Apple Pay.


351
00:17:12,816 --> 00:17:13,116
All right.


352
00:17:13,996 --> 00:17:16,396
They are done ringing up my
things and I bring my phone


353
00:17:16,396 --> 00:17:17,156
to the terminal and...


354
00:17:17,246 --> 00:17:19,316
do you have a loyalty
pass with us?


355
00:17:20,606 --> 00:17:21,906
I think I do.


356
00:17:21,906 --> 00:17:25,935
The clerk is really -- really
adamant about this loyalty card.


357
00:17:26,185 --> 00:17:28,306
I think it's in that
big fat wallet of mine.


358
00:17:28,306 --> 00:17:30,426
Oh, I can't find it right now.


359
00:17:30,426 --> 00:17:31,376
I know it's on my phone number.


360
00:17:31,376 --> 00:17:32,756
It's got to be registered
with my phone number.


361
00:17:32,806 --> 00:17:34,686
I blurt my phone
number to the clerk.


362
00:17:35,976 --> 00:17:38,136
Nope. It's not registered
with that phone number.


363
00:17:38,536 --> 00:17:41,776
I'm frustrated and the
line is two or three deep.


364
00:17:42,016 --> 00:17:44,016
I just blurt out my
mom's phone number


365
00:17:44,016 --> 00:17:45,876
because I know my mom
has one of these things.


366
00:17:46,346 --> 00:17:47,436
Great. That works!


367
00:17:47,956 --> 00:17:49,086
And I now can Apple Pay


368
00:17:49,126 --> 00:17:51,486
and I grab my things
and I'm out the door.


369
00:17:52,206 --> 00:17:54,496
So a lot of bad things
happen there.


370
00:17:55,646 --> 00:17:57,986
For me as a consumer,
I just want to pay.


371
00:17:58,956 --> 00:18:00,946
I want to get my
things and be done.


372
00:18:00,946 --> 00:18:05,456
For the merchant, they just
got the completely wrong


373
00:18:05,456 --> 00:18:06,296
loyalty information.


374
00:18:06,296 --> 00:18:08,476
They got my mom's loyalty
information, not mine.


375
00:18:09,016 --> 00:18:11,086
So we want to make this better.


376
00:18:12,156 --> 00:18:14,626
And that's why we are
introducing passes


377
00:18:14,626 --> 00:18:16,326
that work with Apple Pay.


378
00:18:16,786 --> 00:18:21,846
Passes that work with Apple
Pay transmit your loyalty


379
00:18:21,846 --> 00:18:25,786
information, contactlessly along
with your Apple Pay transaction.


380
00:18:27,316 --> 00:18:30,646
We use the Value Added
Services Protocol


381
00:18:30,686 --> 00:18:33,076
and we have been working with
major terminal manufacturers


382
00:18:33,356 --> 00:18:35,456
for the adoption of
this new protocol.


383
00:18:36,536 --> 00:18:38,846
So now, my scenario
looks more like this.


384
00:18:40,096 --> 00:18:43,036
I go to my friendly
neighborhood Walgreens.


385
00:18:44,636 --> 00:18:48,506
They take Apple Pay, great,
I use the new iOS feature


386
00:18:48,586 --> 00:18:52,206
and double tap on my home
button and I can prearm my card.


387
00:18:52,206 --> 00:18:54,896
I can get my card ready before
I even head up to the terminal.


388
00:18:54,936 --> 00:18:58,736
Great. My card is ready and I
head up to pay for my things.


389
00:18:59,866 --> 00:19:01,726
When I put my phone
on the terminal,


390
00:19:02,826 --> 00:19:05,616
my Walgreen's loyalty
information is transmitted


391
00:19:05,616 --> 00:19:08,116
contactlessly, along with
my Apple Pay information,


392
00:19:08,396 --> 00:19:09,986
all in one tap.


393
00:19:11,366 --> 00:19:11,776
That's it!


394
00:19:12,946 --> 00:19:15,356
I give a friendly
smile and a thank you


395
00:19:15,356 --> 00:19:17,316
to the clerk and
I'm out the door.


396
00:19:17,876 --> 00:19:20,106
That is great!


397
00:19:21,176 --> 00:19:24,056
That makes the process
a lot more smooth.


398
00:19:24,976 --> 00:19:25,736
So how do we do this?


399
00:19:25,736 --> 00:19:29,556
How do we add this
feature into your passes?


400
00:19:30,246 --> 00:19:31,046
We have a new key.


401
00:19:31,416 --> 00:19:32,756
It's pass.json.


402
00:19:33,516 --> 00:19:40,126
It's nfc. Nfc is a a
dictionary that takes a message.


403
00:19:40,126 --> 00:19:43,256
Just kind of like a bar code,
this is the loyalty information


404
00:19:43,256 --> 00:19:44,886
or anything that
links this user,


405
00:19:44,886 --> 00:19:46,766
this identity to your system.


406
00:19:47,496 --> 00:19:50,156
We have an optional
encryptionPublicKey.


407
00:19:50,686 --> 00:19:53,236
And this guarantees
authenticity,


408
00:19:53,236 --> 00:19:55,806
this is something
handshake yourself


409
00:19:56,036 --> 00:19:58,726
between merchant
and your terminal.


410
00:19:59,716 --> 00:20:03,656
So this is how you
implement passes that work


411
00:20:03,656 --> 00:20:05,786
with Apple Pay on your passes.


412
00:20:05,786 --> 00:20:08,066
And now if you are a
merchant or a terminal maker


413
00:20:08,066 --> 00:20:10,946
and you are interested by
this, please come see us.


414
00:20:11,536 --> 00:20:13,816
Our developer relations
team will be here this week


415
00:20:13,816 --> 00:20:14,816
and you can contact them.


416
00:20:14,816 --> 00:20:17,856
I will give you the contact
information after this talk.


417
00:20:18,176 --> 00:20:19,736
And let them know
you are interested


418
00:20:19,736 --> 00:20:24,076
and we will get you started with
passes that work with Apple Pay.


419
00:20:24,956 --> 00:20:27,926
Speaking of Apple Pay,
Apple Pay has been great,


420
00:20:28,146 --> 00:20:29,016
like I mentioned before.


421
00:20:29,066 --> 00:20:32,796
We have now enabled contactless
payment on our phones,


422
00:20:32,866 --> 00:20:37,076
on our watches, and even
we have enabled APIs


423
00:20:37,076 --> 00:20:39,756
so you can take Apple
Pay inside your apps.


424
00:20:41,216 --> 00:20:44,136
And Apple Pay is great because
there's a seamless payment


425
00:20:44,136 --> 00:20:45,946
experience for your users.


426
00:20:46,286 --> 00:20:48,036
And merchants are seeing
higher conversion rates


427
00:20:48,356 --> 00:20:52,116
across the board so we
want to encourage our users


428
00:20:52,116 --> 00:20:54,986
to add Apple Pay cards
into their devices.


429
00:20:55,826 --> 00:20:56,576
How do we do that?


430
00:20:56,576 --> 00:20:58,966
We are giving you a couple
of APIs to enable this.


431
00:21:00,046 --> 00:21:01,196
There's two.


432
00:21:01,946 --> 00:21:05,946
The first one will take your
users directly to our Wallet app


433
00:21:05,946 --> 00:21:06,886
and start setup from there.


434
00:21:08,036 --> 00:21:09,756
And a second one,
that allows you to set


435
00:21:09,756 --> 00:21:11,976
up these cards from
within your app.


436
00:21:13,056 --> 00:21:14,116
Let's take a look
at that first one.


437
00:21:15,566 --> 00:21:19,056
It's in PKPassLibrary
and it's very simple.


438
00:21:20,606 --> 00:21:23,086
We call openPaymentSetup.


439
00:21:23,086 --> 00:21:25,206
And that will take your
user directly into Wallet,


440
00:21:25,476 --> 00:21:27,216
and start the setup flow.


441
00:21:27,626 --> 00:21:29,546
And now with our new
features in iOS 9,


442
00:21:29,726 --> 00:21:32,546
your users can go really
easily back into your app


443
00:21:32,746 --> 00:21:34,556
and we leave a little bread
crumb for them to tap on


444
00:21:34,556 --> 00:21:37,336
and go back into your
app and do continue


445
00:21:37,336 --> 00:21:38,406
to do whatever they were doing.


446
00:21:38,656 --> 00:21:39,496
Hopefully shopping.


447
00:21:40,446 --> 00:21:45,846
And if you are a bank or if you
are a merchant with a store card


448
00:21:45,846 --> 00:21:47,056
or a private label card,


449
00:21:47,056 --> 00:21:49,586
you want to have this
happen inside your own app,


450
00:21:50,356 --> 00:21:51,656
we have an API for that as well.


451
00:21:52,426 --> 00:21:53,756
It's actually a view controller,


452
00:21:54,266 --> 00:21:56,926
it's
PKAddPaymentPassViewController.


453
00:21:57,876 --> 00:22:01,256
And of course we need to check
whether this particular device


454
00:22:01,356 --> 00:22:03,426
can add a payment pass or not.


455
00:22:04,316 --> 00:22:08,476
When we find out it can, we set
one of these up, we can knit it


456
00:22:08,476 --> 00:22:12,186
with a requestConfiguration
and we pass into it a delegate.


457
00:22:13,356 --> 00:22:16,006
Now this delegate that you
implement inside your app,


458
00:22:16,706 --> 00:22:19,316
will form together using
those pieces of information,


459
00:22:19,316 --> 00:22:24,666
like the nonceSignature, will
form up a AddPaymentPassRequest.


460
00:22:25,546 --> 00:22:27,616
We can really dig into
this for a long time.


461
00:22:27,616 --> 00:22:29,536
I really don't have time
in this particular session


462
00:22:29,536 --> 00:22:30,246
to dig into this.


463
00:22:30,616 --> 00:22:32,346
So please refer to
your documentation


464
00:22:32,346 --> 00:22:35,796
if you have any questions
about how to use this class.


465
00:22:36,706 --> 00:22:39,006
And this class will be entitled.


466
00:22:39,086 --> 00:22:40,686
So please let us know
as well if you want


467
00:22:40,686 --> 00:22:44,626
to use this inside your app.


468
00:22:44,706 --> 00:22:48,956
Another necessary step that
our users might need to take


469
00:22:48,956 --> 00:22:53,206
when they are adding a payment
pass inside Apple Pay is a


470
00:22:53,496 --> 00:22:56,086
payment pass verification
or second factor auth


471
00:22:56,086 --> 00:22:57,686
as some people know it.


472
00:22:57,976 --> 00:23:03,876
And along with the typical flow,
like using SMS or a phone call


473
00:23:03,876 --> 00:23:07,306
or email, another option
we offer is using an app.


474
00:23:08,256 --> 00:23:10,126
We see here Capital
One using their app


475
00:23:10,216 --> 00:23:12,806
to verify their user's identity.


476
00:23:13,626 --> 00:23:14,286
How do we do this?


477
00:23:15,346 --> 00:23:17,906
Well, we give you guys a
couple of APIs to be able


478
00:23:17,906 --> 00:23:22,616
to allow this inside
of your apps.


479
00:23:22,836 --> 00:23:24,486
It's also in PKPassLibrary.


480
00:23:25,706 --> 00:23:27,846
You check first, is
there a payment pass


481
00:23:27,846 --> 00:23:28,916
activation available?


482
00:23:30,376 --> 00:23:33,616
Remember when we
were pulling PKPasses


483
00:23:33,806 --> 00:23:35,196
out of the user's library?


484
00:23:35,196 --> 00:23:36,786
Well this is where it's useful.


485
00:23:37,266 --> 00:23:42,796
You can pass into this call,
that PKPaymentPass and pass


486
00:23:42,796 --> 00:23:44,946
into it some activation data


487
00:23:45,736 --> 00:23:47,366
and you'll get a
completion back whether


488
00:23:47,366 --> 00:23:49,486
that activation was
successful or not.


489
00:23:50,646 --> 00:23:55,106
That's how you can implement
verification inside your apps.


490
00:23:56,326 --> 00:23:58,416
So our phones have been
really, really popular


491
00:23:58,666 --> 00:24:00,426
and there's awesome and really,


492
00:24:00,426 --> 00:24:01,696
really great accessories
out there.


493
00:24:02,786 --> 00:24:05,996
Some of them emit a field and
we want to be good players


494
00:24:06,446 --> 00:24:07,366
with those accessories.


495
00:24:07,366 --> 00:24:09,446
We are announcing with iOS 9,


496
00:24:09,846 --> 00:24:12,516
a contactless interface
suppression API.


497
00:24:14,146 --> 00:24:17,486
What this will do is temporarily
disable the user interface.


498
00:24:18,036 --> 00:24:19,786
It's the sheet of
passes that you see


499
00:24:20,956 --> 00:24:23,156
and this will require
a user's permission.


500
00:24:23,686 --> 00:24:25,886
Let's take a look
at how we do this.


501
00:24:26,596 --> 00:24:29,456
It's in that PKPassLibrary
again.


502
00:24:30,446 --> 00:24:33,276
PKPassLibrary has a
new function called


503
00:24:33,596 --> 00:24:38,286
requestAutomaticPassPresentation
SuppressionWithResponseHandler.


504
00:24:38,846 --> 00:24:39,446
It's a mouthful!


505
00:24:40,146 --> 00:24:44,776
And what you will get
back is a response result


506
00:24:44,776 --> 00:24:46,636
of what the user
decides, whether


507
00:24:46,636 --> 00:24:50,806
or not they will allow
suppression inside your app.


508
00:24:50,806 --> 00:24:52,246
You also get back
a request token.


509
00:24:52,246 --> 00:24:54,866
Then you can use that request
token for this next call


510
00:24:55,406 --> 00:24:57,506
to endAutomaticPassPresentation.


511
00:24:57,986 --> 00:24:59,676
Pass into it, that requestToken,


512
00:25:00,736 --> 00:25:04,026
and the payment UI will
appear again inside your app.


513
00:25:04,476 --> 00:25:07,896
You can also check whether
automaticPassPresentation


514
00:25:07,936 --> 00:25:09,336
Suppression is already occurring


515
00:25:09,466 --> 00:25:11,176
by using this function
right here.


516
00:25:11,796 --> 00:25:13,956
As I mentioned before,
it is temporary.


517
00:25:13,956 --> 00:25:16,016
So if your app is suspended,


518
00:25:16,646 --> 00:25:19,146
the payment pass UI will
appear again for the user


519
00:25:19,266 --> 00:25:22,046
or if it's been 24 hours
after your last requests,


520
00:25:22,386 --> 00:25:25,106
you will need to re-request
your user's permission again.


521
00:25:25,646 --> 00:25:28,696
These classes and these
calls are entitled.


522
00:25:28,696 --> 00:25:32,056
So please let us know if
you would like to use them.


523
00:25:32,196 --> 00:25:37,286
Along with Apple Pay, last fall
we also introduced Apple Watch.


524
00:25:37,806 --> 00:25:42,376
And now I'm really happy to
announce that in watchOS 2,


525
00:25:42,376 --> 00:25:47,036
we are bringing full PassKit
support to Apple Watch.


526
00:25:47,476 --> 00:25:52,396
And this is really great because
now on Apple Watch, you can add,


527
00:25:53,086 --> 00:25:56,166
you can remove, you can query
passes just like up doing


528
00:25:57,026 --> 00:25:59,846
on our phones previously.


529
00:26:01,176 --> 00:26:03,846
So full PassKit support
is coming to Apple Watch


530
00:26:04,576 --> 00:26:08,076
and watchOS 2, there's
another thing I want to talk


531
00:26:08,076 --> 00:26:10,686
about in regards to Apple Watch
and that's the screen size.


532
00:26:11,876 --> 00:26:15,706
Working with a lot smaller real
estate space on Apple Watch,


533
00:26:15,706 --> 00:26:16,846
and I want to point this out,


534
00:26:16,846 --> 00:26:19,386
because passes are drawn
a little differently


535
00:26:20,236 --> 00:26:21,046
on Apple Watch.


536
00:26:22,046 --> 00:26:23,156
This is a pretty cool graphic.


537
00:26:23,726 --> 00:26:27,646
This is what a pass rendered
on Apple Watch looks like.


538
00:26:27,646 --> 00:26:30,056
As you can see this
is our MLB pass


539
00:26:30,846 --> 00:26:31,766
from a couple of slides back.


540
00:26:33,096 --> 00:26:36,016
And you will notice right away
it looks a little different.


541
00:26:37,126 --> 00:26:39,096
That strip image
is no longer there.


542
00:26:39,746 --> 00:26:43,656
And, in fact, we don't even
have a back of the pass.


543
00:26:43,656 --> 00:26:46,416
So take a look and remember,
passes do look different


544
00:26:46,416 --> 00:26:48,356
on different devices,
especially on Apple Watch.


545
00:26:48,356 --> 00:26:51,746
So consider that when you
are designing your passes


546
00:26:51,836 --> 00:26:52,736
and implementing them.


547
00:26:53,186 --> 00:26:56,026
But, of course, if you
follow the HI guidelines,


548
00:26:56,146 --> 00:27:01,226
we will promise and do our best
to make your passes look great


549
00:27:01,516 --> 00:27:04,486
on every single one
of our devices.


550
00:27:04,836 --> 00:27:07,146
So that's PassKit
and Apple Watch.


551
00:27:07,576 --> 00:27:10,996
There's one more thing
I do want to talk about.


552
00:27:11,736 --> 00:27:12,996
And that's 1D bar codes.


553
00:27:13,846 --> 00:27:17,106
We have been getting a lot
of requests for 1D barcodes


554
00:27:17,656 --> 00:27:20,846
and I'm really glad
to say that iOS 9,


555
00:27:20,846 --> 00:27:24,946
we are bringing 1D
Barcode support to Wallet.


556
00:27:25,096 --> 00:27:25,646
Yeah.


557
00:27:26,016 --> 00:27:27,936
[ Applause ]


558
00:27:27,936 --> 00:27:29,926
I'm glad you are glad.


559
00:27:29,926 --> 00:27:32,596
So we have a new barcode format.


560
00:27:33,126 --> 00:27:35,466
It's PKBarcodeFormatCode128.


561
00:27:36,286 --> 00:27:39,456
You may ask what about my users
that are who are still on iOS 8


562
00:27:39,456 --> 00:27:40,766
and below, are they
going to get this?


563
00:27:40,766 --> 00:27:45,746
Well, no. That's why you
will have this fallback.


564
00:27:46,546 --> 00:27:47,916
We still have that barcode key.


565
00:27:48,266 --> 00:27:50,676
That barcode key is
very, very important


566
00:27:50,676 --> 00:27:53,486
but we have here is
implementing that 2D barcode.


567
00:27:53,896 --> 00:27:58,496
We have a new barcodes, plural,
key that is an array that takes


568
00:27:58,496 --> 00:27:59,886
in a dictionary of barcodes.


569
00:28:00,396 --> 00:28:03,896
So, as you can see, we have a
new barcodes array here that has


570
00:28:03,896 --> 00:28:05,866
in the first dictionary,


571
00:28:05,866 --> 00:28:09,396
a barcode with
PKBarcodeFormatCode128.


572
00:28:09,396 --> 00:28:10,886
And that's the 1D barcode.


573
00:28:11,436 --> 00:28:13,406
So please, please, as you
are implementing this,


574
00:28:14,236 --> 00:28:17,966
do me a favor, please verify
your system supports 1D barcodes


575
00:28:18,756 --> 00:28:20,976
and what I really mean
is optical scanners.


576
00:28:21,476 --> 00:28:25,856
And please remember to
fall back to 2D barcodes


577
00:28:25,856 --> 00:28:27,866
so that your users on iOS 8


578
00:28:27,866 --> 00:28:30,716
and below have a
barcode on their passes.


579
00:28:31,776 --> 00:28:32,076
All right.


580
00:28:32,166 --> 00:28:34,106
I have done a lot of
talking this morning.


581
00:28:34,106 --> 00:28:38,216
If I had to say that you
should remember something


582
00:28:38,216 --> 00:28:42,146
from this session, it's
these things: We're solving


583
00:28:42,146 --> 00:28:43,426
that overstuffed wallet problem.


584
00:28:44,346 --> 00:28:45,586
We don't want that
wallet anymore.


585
00:28:45,736 --> 00:28:47,256
We don't want to see
that wallet anymore.


586
00:28:47,896 --> 00:28:48,996
We do that with passes.


587
00:28:49,936 --> 00:28:52,996
Passes allow us to take
action in the real world.


588
00:28:53,576 --> 00:28:54,896
They are really easy
to integrate


589
00:28:54,896 --> 00:28:56,746
into your apps, into your flow.


590
00:28:57,616 --> 00:29:00,826
And passes when they are
engaging really keep your users


591
00:29:01,556 --> 00:29:04,586
interactive and interested
in your systems.


592
00:29:05,486 --> 00:29:06,806
And I want to remind you


593
00:29:06,806 --> 00:29:08,126
to integrate Apple
Pay into your apps.


594
00:29:08,246 --> 00:29:11,016
Encourage your users to use
Apple Pay into their apps.


595
00:29:11,796 --> 00:29:14,786
Remember you want that smooth
and seamless checkout flow


596
00:29:14,786 --> 00:29:17,316
and we also want the
higher conversion rates


597
00:29:17,506 --> 00:29:18,106
for our merchants.


598
00:29:19,406 --> 00:29:21,616
I didn't even talk about
integrating Apple Pay


599
00:29:21,616 --> 00:29:23,186
as a payment inside apps at all.


600
00:29:23,646 --> 00:29:26,106
This session cannot
contain that awesomeness.


601
00:29:26,666 --> 00:29:30,726
We have our own session
immediately following this one,


602
00:29:31,126 --> 00:29:34,446
give by my colleagues Nick
and Rachel, and it's going


603
00:29:34,446 --> 00:29:35,576
to be really, really amazing.


604
00:29:35,576 --> 00:29:37,796
They will solve that
abandoned cart issue.


605
00:29:38,056 --> 00:29:41,806
They're going to help integrate
Apple Pay into your apps.


606
00:29:42,966 --> 00:29:45,836
Remember, please use
Wallet and use Apple Pay.


607
00:29:45,836 --> 00:29:47,306
Go out there and redeem coupons.


608
00:29:47,936 --> 00:29:48,976
Go out there and spend money!


609
00:29:49,566 --> 00:29:55,526
I mentioned a lot of resources
during this talk and I want


610
00:29:55,526 --> 00:29:57,026
to point a couple
of them out to you.


611
00:29:57,436 --> 00:30:00,676
First, we have Passbook for
Developers specific site


612
00:30:00,676 --> 00:30:02,296
on our developer website.


613
00:30:02,776 --> 00:30:04,756
We also have one specific
to Apple Pay as well.


614
00:30:04,756 --> 00:30:08,526
And I mentioned a couple of
talks from previous WWDCs.


615
00:30:09,206 --> 00:30:10,546
Here's one from 2012,


616
00:30:10,796 --> 00:30:14,266
it's called "Introducing
Passbook Part 1 & 2" that's


617
00:30:14,266 --> 00:30:16,176
really going to go in
depth into designing passes


618
00:30:16,276 --> 00:30:17,486
and updating passes as well.


619
00:30:17,856 --> 00:30:19,736
And then "Integrating Passbook


620
00:30:19,736 --> 00:30:23,096
Into Your Ecosystem"
which is WWDC 2013.


621
00:30:24,016 --> 00:30:26,006
These are really great resources
for you guys to check out.


622
00:30:26,596 --> 00:30:28,366
And of course we have
our developer forum


623
00:30:28,876 --> 00:30:30,806
that you guys can
utilize as well.


624
00:30:32,016 --> 00:30:35,956
And a really awesome evangelist
Paul can also help you guys


625
00:30:35,956 --> 00:30:37,576
out here, here's
his email address.


626
00:30:38,746 --> 00:30:42,166
So again, thank you for your
time, thank you for coming


627
00:30:42,166 --> 00:30:44,876
and listening about
Wallet and Apple Pay.


628
00:30:45,236 --> 00:30:48,026
I hope you go out there have
a really, really great week.


629
00:30:48,226 --> 00:30:48,726
Thanks a lot.


630
00:30:49,508 --> 00:30:51,508
[Applause]

