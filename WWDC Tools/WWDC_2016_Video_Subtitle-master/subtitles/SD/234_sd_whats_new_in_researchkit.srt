1
00:00:07,516 --> 00:00:18,500
[ Music ]


2
00:00:27,516 --> 00:00:31,546
[ Applause ]


3
00:00:32,046 --> 00:00:33,476
>> Good morning.


4
00:00:33,476 --> 00:00:34,336
>> Good morning.


5
00:00:34,336 --> 00:00:35,086
>> Thank you.


6
00:00:35,996 --> 00:00:38,636
I'd like to welcome the
physicians who came here today


7
00:00:38,636 --> 00:00:42,746
who also code and the developers
who are working with researchers


8
00:00:42,796 --> 00:00:44,506
to create great research apps.


9
00:00:45,066 --> 00:00:47,726
And of course, that includes
our students who are here today


10
00:00:48,146 --> 00:00:50,226
who I know are already
using ResearchKit.


11
00:00:50,726 --> 00:00:51,556
Welcome to all of you.


12
00:00:52,696 --> 00:00:54,756
Would you like to see a
great ResearchKit app?


13
00:00:55,286 --> 00:00:55,636
>> Yes.


14
00:00:55,956 --> 00:00:58,866
>> Good, I'm glad there are at
least a couple of people awake


15
00:00:58,866 --> 00:00:59,916
after last night's party.


16
00:01:02,266 --> 00:01:04,536
Autism & Beyond from
Duke Medicine.


17
00:01:04,936 --> 00:01:08,056
Yes and we do have the Duke
developers here, so thank you.


18
00:01:09,566 --> 00:01:13,346
Autism & Beyond from Duke
Medicine is a study that seeks


19
00:01:13,346 --> 00:01:17,036
to identify and understand the
risks for child development.


20
00:01:17,586 --> 00:01:23,186
In this ResearchKit app a
young child views a video


21
00:01:23,936 --> 00:01:27,336
and the forward facing camera
records their reaction.


22
00:01:28,016 --> 00:01:28,706
Let's take a look.


23
00:01:35,106 --> 00:01:38,346
>> The itsy bitsy spider
went up the water spout.


24
00:01:39,526 --> 00:01:43,946
>> The app analyzes the video of
the child for emotional reaction


25
00:01:44,216 --> 00:01:46,316
and extracts facial expression.


26
00:01:47,626 --> 00:01:51,716
One day a video like this might
be used to screen a young child


27
00:01:51,716 --> 00:01:53,756
in her own home for autism


28
00:01:53,756 --> 00:01:56,676
and other mental health
challenges like anxiety.


29
00:01:57,756 --> 00:02:00,736
If the research is
successful, Duke will be able


30
00:02:00,736 --> 00:02:04,936
to use science-based tools
to help parents understand


31
00:02:05,176 --> 00:02:06,896
and support their
child's development.


32
00:02:07,756 --> 00:02:11,466
I think this app is pretty
amazing and it's just one


33
00:02:11,466 --> 00:02:13,026
of the many apps that
have been created


34
00:02:13,026 --> 00:02:15,026
over the past year
using ResearchKit.


35
00:02:16,146 --> 00:02:17,836
Today, my colleague, Yuan Zhu,


36
00:02:17,836 --> 00:02:19,776
and I hope that we
can inspire you


37
00:02:19,826 --> 00:02:22,986
to create other great
ResearchKit apps like this.


38
00:02:24,486 --> 00:02:27,396
Today, we will go over the
new features in ResearchKit,


39
00:02:28,436 --> 00:02:30,816
we'll talk a little bit
about the contributions


40
00:02:30,816 --> 00:02:33,216
from the open source community
and how you can contribute.


41
00:02:34,256 --> 00:02:37,126
But first, I'd like to start
with a recap of ResearchKit.


42
00:02:37,756 --> 00:02:42,056
We introduced ResearchKit over
a year ago and the aim was


43
00:02:42,096 --> 00:02:44,596
to take the basic components
of clinical research


44
00:02:44,746 --> 00:02:46,756
and to move them over
to the mobile world.


45
00:02:46,816 --> 00:02:50,396
And those basic components
are informed consent,


46
00:02:51,176 --> 00:02:54,116
survey tasks and active tasks.


47
00:02:55,556 --> 00:02:58,366
It's pretty staggering to think
about the number of iPhones


48
00:02:58,366 --> 00:03:01,176
that are in the world
and how users like you


49
00:03:01,406 --> 00:03:03,436
and I can contribute
to research.


50
00:03:04,326 --> 00:03:06,626
But there's some
significant differences


51
00:03:06,626 --> 00:03:09,086
between clinical research
and the mobile world,


52
00:03:09,866 --> 00:03:12,176
specifically in clinical
research.


53
00:03:12,646 --> 00:03:14,086
The participant is right there


54
00:03:14,086 --> 00:03:16,236
where the researcher can
see them and show them what


55
00:03:16,236 --> 00:03:17,146
to do and be with them.


56
00:03:17,766 --> 00:03:20,806
So when you move to the mobile
space there are some things


57
00:03:20,866 --> 00:03:21,436
to consider.


58
00:03:22,316 --> 00:03:24,226
I'd like to go over
each of these components


59
00:03:24,226 --> 00:03:27,336
and show you how
ResearchKit does them.


60
00:03:28,246 --> 00:03:30,866
Informed consent is
requirement for all studies


61
00:03:30,866 --> 00:03:32,166
that use human subjects.


62
00:03:33,366 --> 00:03:36,186
Researchers are required to tell
participants what the study's


63
00:03:36,186 --> 00:03:38,956
about, what data they're going
to collect, how they're going


64
00:03:38,956 --> 00:03:41,336
to use the data, how they're
going to ensure privacy,


65
00:03:41,336 --> 00:03:44,506
how the person can withdraw from
the study, and many more things.


66
00:03:45,706 --> 00:03:49,096
So typically what
happens is that a person


67
00:03:49,096 --> 00:03:52,856
like in the Autism & Beyond
study will be given a form


68
00:03:52,856 --> 00:03:53,716
like this to read.


69
00:03:54,206 --> 00:03:56,186
It's rather long because
if you were to put it end


70
00:03:56,186 --> 00:03:57,506
to end it would be
taller than I am.


71
00:03:57,756 --> 00:04:01,056
So it's a lot of text the
person needs to go through.


72
00:04:01,886 --> 00:04:03,566
So translating this


73
00:04:03,656 --> 00:04:07,766
to ResearchKit we developed
an informed consent module


74
00:04:08,226 --> 00:04:10,566
and what we do is we
split this large form


75
00:04:10,916 --> 00:04:12,466
into a series of screens.


76
00:04:13,126 --> 00:04:15,596
On each screen it describes
that particular section,


77
00:04:15,976 --> 00:04:18,716
gives an overview,
provides a learn more link


78
00:04:19,396 --> 00:04:22,586
where the participant can drill
down and get more information


79
00:04:22,586 --> 00:04:25,746
if they want to, as they're
doing here with withdrawing.


80
00:04:26,326 --> 00:04:29,056
And then at the end everything
is put back together again


81
00:04:29,306 --> 00:04:32,726
for one final review and
then the person can decide


82
00:04:32,726 --> 00:04:35,036
to participate in
the study or not.


83
00:04:36,386 --> 00:04:39,236
If they decide to participate in
the study, then they'll be asked


84
00:04:39,236 --> 00:04:43,526
to give their name and sign an
electronic consent form just


85
00:04:43,526 --> 00:04:46,246
as our most famous user, Johnny
Appleseed, is doing here.


86
00:04:47,826 --> 00:04:50,596
Now what I want to point
out is if you're a developer


87
00:04:50,596 --> 00:04:53,546
and you're doing your first
ResearchKit app you can't just


88
00:04:53,546 --> 00:04:56,066
cut and paste this
text here that Duke has


89
00:04:56,066 --> 00:04:57,156
or any other study has.


90
00:04:57,936 --> 00:05:00,946
Informed consent
text is approved


91
00:05:00,946 --> 00:05:04,406
by an institutional review board
or ethics committee and you need


92
00:05:04,406 --> 00:05:05,736
to use the text that
they give them.


93
00:05:06,056 --> 00:05:09,446
And you also have to like resist
the urge to be a creative writer


94
00:05:10,526 --> 00:05:13,196
and to like, you know, I look
at these things and think wow,


95
00:05:13,196 --> 00:05:15,776
I can simply this, I can make
this really exciting to read.


96
00:05:16,086 --> 00:05:17,656
But you don't want to
do that, you just want


97
00:05:17,736 --> 00:05:19,656
to take what the researcher
gives you and make sure


98
00:05:19,656 --> 00:05:20,836
that it has been approved.


99
00:05:21,256 --> 00:05:22,986
So that's informed consent.


100
00:05:23,656 --> 00:05:30,036
In clinical research researchers
typically have a participant do


101
00:05:30,036 --> 00:05:32,796
at least one survey if only
to ask for demographic data.


102
00:05:33,096 --> 00:05:35,596
But it's also quite
common for researchers


103
00:05:35,626 --> 00:05:37,296
to use standard surveys
like this,


104
00:05:37,356 --> 00:05:40,076
the patient health
questionnaire or PHQ-9.


105
00:05:41,106 --> 00:05:43,416
Now it's pretty easy to
translate a paper survey


106
00:05:43,416 --> 00:05:46,156
into a mobile survey
and ResearchKit tries


107
00:05:46,156 --> 00:05:47,576
to make this a little
bit more pleasant


108
00:05:47,576 --> 00:05:49,936
by in most cases putting
one question per page.


109
00:05:50,676 --> 00:05:53,726
And of course, we can support
anything that paper has in terms


110
00:05:53,726 --> 00:05:55,426
of fill in the blank,
multiple-choice.


111
00:05:55,916 --> 00:05:58,936
But because it is mobile
ResearchKit can do even more.


112
00:05:59,346 --> 00:06:00,536
You can do your multiple-choice,


113
00:06:00,536 --> 00:06:02,276
it can have a truly
sliding-scale where you have


114
00:06:02,276 --> 00:06:05,356
to slide your finger, you can
give location as an answer


115
00:06:05,746 --> 00:06:07,846
or date and time or images.


116
00:06:08,436 --> 00:06:10,976
There are many, many
rich answer formats


117
00:06:10,976 --> 00:06:12,916
in ResearchKit that
can be there.


118
00:06:13,516 --> 00:06:15,856
Good, the date looks
right for me now.


119
00:06:17,996 --> 00:06:19,326
So that was our survey tasks.


120
00:06:20,516 --> 00:06:23,696
Now active tasks, in a clinical
setting a participant might be


121
00:06:23,696 --> 00:06:25,176
asked to do something like walk,


122
00:06:25,376 --> 00:06:29,506
so the researcher can
observe their gait or maybe


123
00:06:29,506 --> 00:06:31,836
to solve a puzzle
or tell a story


124
00:06:31,836 --> 00:06:33,246
for psychological research.


125
00:06:33,876 --> 00:06:35,406
Or they might even
be asked to do things


126
00:06:35,406 --> 00:06:37,976
like that require fine
motor coordination.


127
00:06:38,946 --> 00:06:41,166
And again, in the clinic
you have somebody there


128
00:06:41,276 --> 00:06:42,306
to show you how to do it


129
00:06:42,306 --> 00:06:43,696
and to make sure you're
doing it correctly.


130
00:06:43,696 --> 00:06:45,956
So I'm going to show
you two tasks


131
00:06:45,956 --> 00:06:47,176
so that you can get an idea


132
00:06:47,346 --> 00:06:49,666
of how ResearchKit
handles active tasks.


133
00:06:51,316 --> 00:06:55,586
The first is a voice task and
here the participant is asked


134
00:06:55,586 --> 00:06:58,126
to say "ah" into the microphone


135
00:06:58,646 --> 00:07:03,146
and then the app collects the
audio and analyzes it in any way


136
00:07:03,146 --> 00:07:05,406
that is fit for that
particular research.


137
00:07:06,106 --> 00:07:08,856
So this task has all the
components that can be


138
00:07:08,906 --> 00:07:10,746
in an active task, so
let's go through them.


139
00:07:11,006 --> 00:07:14,066
There is a page that
describes what the task is,


140
00:07:15,726 --> 00:07:18,556
that gives instructions to the
user on how to perform the task,


141
00:07:19,056 --> 00:07:21,686
and a lot of active tasks
have a countdown timer.


142
00:07:22,246 --> 00:07:25,396
And then some feedback
to the user


143
00:07:25,396 --> 00:07:27,476
and in this case it's
saying that she's too loud,


144
00:07:27,946 --> 00:07:30,546
so you can make sure that
you do the task correctly.


145
00:07:31,176 --> 00:07:33,586
All the screens you
see, the animation,


146
00:07:33,746 --> 00:07:36,896
the screen to screen navigation
are all provided by ResearchKit.


147
00:07:37,226 --> 00:07:40,136
To get this task you
only need to use one call


148
00:07:40,136 --> 00:07:41,796
in ResearchKit, it's that easy.


149
00:07:42,826 --> 00:07:43,626
Here's another task.


150
00:07:44,386 --> 00:07:47,696
This is a tapping speed task
where a user needs to tap back


151
00:07:47,696 --> 00:07:50,416
and forth as fast as she
can during a given time.


152
00:07:51,286 --> 00:07:53,536
But there are many, many
other tasks in ResearchKit,


153
00:07:53,746 --> 00:07:55,586
including a walking task,


154
00:07:55,926 --> 00:07:58,076
spatial memory task,
and there are others.


155
00:07:58,726 --> 00:08:02,436
So those are active tasks.


156
00:08:04,336 --> 00:08:05,186
From the first day


157
00:08:05,186 --> 00:08:08,716
that ResearchKit was released it
was integrated with HealthKit.


158
00:08:09,836 --> 00:08:12,916
It's very easy in Xcode to
add the HealthKit entitlement


159
00:08:12,916 --> 00:08:16,066
to your app and it doesn't take
too many more lines of code


160
00:08:16,066 --> 00:08:18,886
to get a screen like this
where you can ask the user


161
00:08:19,116 --> 00:08:20,946
to have access to the
data in HealthKit.


162
00:08:21,906 --> 00:08:24,546
When you do that you need to
specify the data that you want


163
00:08:24,546 --> 00:08:26,936
to read from and write
to the health app.


164
00:08:28,436 --> 00:08:31,026
The user has the option to give
you permission for everything


165
00:08:31,026 --> 00:08:33,515
that you ask for or she can
just give you permission


166
00:08:33,515 --> 00:08:34,616
for specific pieces.


167
00:08:36,116 --> 00:08:39,586
So I suggest that when you are
going to ask for access to data


168
00:08:39,856 --> 00:08:42,256
that you ask only for the data
that you're absolutely going


169
00:08:42,256 --> 00:08:43,086
to use in your research.


170
00:08:43,086 --> 00:08:47,566
So don't ask for everything
and you'll have a better chance


171
00:08:47,566 --> 00:08:49,376
of success of getting that
permission from the user.


172
00:08:49,996 --> 00:08:54,426
One of the big questions
that we got asked


173
00:08:54,426 --> 00:08:58,086
over the past year is what does
ResearchKit do with the data,


174
00:08:58,486 --> 00:08:59,446
where does it store it.


175
00:08:59,446 --> 00:09:01,616
And that's really
easy for me to answer


176
00:09:01,766 --> 00:09:03,776
because ResearchKit doesn't
do anything with data.


177
00:09:05,196 --> 00:09:08,046
If you were here for last year's
presentation on ResearchKit


178
00:09:08,936 --> 00:09:11,366
where John Earl explained
the architecture


179
00:09:11,366 --> 00:09:14,176
of ResearchKit he also talked
a lot about result objects.


180
00:09:15,176 --> 00:09:17,076
And the short story is


181
00:09:17,076 --> 00:09:19,466
that ResearchKit has
a results property


182
00:09:19,466 --> 00:09:20,676
on the Task View controller


183
00:09:21,306 --> 00:09:23,456
and it will hand you the
results in that property.


184
00:09:23,996 --> 00:09:26,936
But it's up to your app to
persist the data locally


185
00:09:27,816 --> 00:09:30,566
and also for a research study
you want to send that data


186
00:09:30,566 --> 00:09:33,786
to secure server where you
can aggregate and analyze it.


187
00:09:34,356 --> 00:09:37,336
If you haven't watched
John Earl's presentation


188
00:09:37,336 --> 00:09:40,496
from last year I suggest
that you do so because


189
00:09:40,496 --> 00:09:43,346
in it he also shows how
to code informed consent,


190
00:09:43,576 --> 00:09:45,606
survey tasks and active tasks.


191
00:09:46,346 --> 00:09:49,446
But rather than have me
go over that coding today


192
00:09:49,496 --> 00:09:52,246
because you can watch that
video I would like to bring


193
00:09:52,246 --> 00:09:55,486
up my colleague, Yuan Zhu, who
can go over the new features


194
00:09:55,486 --> 00:09:58,996
of ResearchKit and explain
to you how to code with them.


195
00:10:00,086 --> 00:10:00,376
Yuan.


196
00:10:01,516 --> 00:10:07,546
[ Applause ]


197
00:10:08,046 --> 00:10:08,566
>> Thank you Bunny.


198
00:10:09,196 --> 00:10:11,066
The open source community
discovers


199
00:10:11,066 --> 00:10:13,526
that mobile research
needs more features


200
00:10:13,676 --> 00:10:14,986
than research can provide it.


201
00:10:14,986 --> 00:10:18,196
And we have been
collaborating with the community


202
00:10:18,376 --> 00:10:20,256
to add more features
to ResearchKit.


203
00:10:21,696 --> 00:10:26,276
So today, I'm really excited
to show you three of them.


204
00:10:27,276 --> 00:10:28,786
First, branching task.


205
00:10:29,486 --> 00:10:31,156
It can be confusing
on the paper,


206
00:10:31,716 --> 00:10:34,986
but on mobile devices this
is really themed to the user.


207
00:10:36,236 --> 00:10:37,956
Second, app access.


208
00:10:38,566 --> 00:10:42,606
It protects user's privacy
and data, which is critical


209
00:10:42,756 --> 00:10:44,916
to most of the research apps.


210
00:10:45,266 --> 00:10:46,396
Last, charts.


211
00:10:47,506 --> 00:10:50,016
Present the data in a
visual way to your user,


212
00:10:50,106 --> 00:10:52,616
then your user can
understand the data better.


213
00:10:54,066 --> 00:11:00,986
First, I will talk about the
first one, branching task.


214
00:11:01,576 --> 00:11:03,566
Whether your app is
giving instructions,


215
00:11:04,026 --> 00:11:08,166
presenting a survey or running
an active task everything


216
00:11:08,166 --> 00:11:10,206
in ResearchKit is a
collection of steps,


217
00:11:11,186 --> 00:11:12,676
which together form a task


218
00:11:13,166 --> 00:11:15,376
and the task can be
presented to the user.


219
00:11:15,526 --> 00:11:18,846
With this model it's
quite straightforward


220
00:11:18,896 --> 00:11:22,476
to create a linear task,
but branching task is not


221
00:11:22,476 --> 00:11:23,976
that obvious how to create.


222
00:11:24,776 --> 00:11:25,966
Let me show you an example.


223
00:11:26,606 --> 00:11:31,746
What you see here is a
survey with three questions.


224
00:11:32,786 --> 00:11:36,576
And apparently it only makes
sense to ask the second question


225
00:11:36,936 --> 00:11:39,026
to the user who has
responded yes


226
00:11:39,286 --> 00:11:41,576
to the first question,
do you own a car.


227
00:11:42,816 --> 00:11:43,786
And the last question,


228
00:11:44,256 --> 00:11:46,876
do you own a bicycle
should always be asked


229
00:11:46,876 --> 00:11:50,346
at the end regardless the answer
to the first two questions.


230
00:11:51,336 --> 00:11:53,946
Then you may wonder how
could I create this survey


231
00:11:54,006 --> 00:11:54,756
in ResearchKit.


232
00:11:55,566 --> 00:12:00,536
To help you do that I
introduce you a new class,


233
00:12:00,776 --> 00:12:02,856
ORKNavigableOrderTask.


234
00:12:03,886 --> 00:12:07,866
Since it's a task, so it has
a collection of steps as well.


235
00:12:08,706 --> 00:12:12,976
But besides that it also holds a
collection of navigation rules.


236
00:12:13,766 --> 00:12:17,706
The navigation rules defines
the branching logic in the task.


237
00:12:19,326 --> 00:12:22,436
Next, I'm going to show you
how to use this new class


238
00:12:22,696 --> 00:12:24,686
to present a survey
and just show to you


239
00:12:25,246 --> 00:12:26,766
and it's really easy to use.


240
00:12:27,336 --> 00:12:33,176
In the code first I need to
create those question steps.


241
00:12:33,946 --> 00:12:37,636
Once I have the questions steps
I can create the navigable order


242
00:12:37,636 --> 00:12:38,936
tasks with those steps.


243
00:12:39,576 --> 00:12:43,596
As you can see, it's as easy
as create a linear task.


244
00:12:43,676 --> 00:12:47,606
But after that I need to create
the navigation rule for it.


245
00:12:48,816 --> 00:12:51,696
The navigation rule I'm
trying to create here is


246
00:12:51,696 --> 00:12:54,486
to display own a
bicycle question right


247
00:12:54,486 --> 00:12:58,246
after the own car question to
the people who don't have a car.


248
00:12:58,976 --> 00:13:03,166
And I want to let you know
the navigation rule has


249
00:13:03,226 --> 00:13:04,066
three elements.


250
00:13:04,576 --> 00:13:08,866
First, a trigger step, which
it triggers the navigation rule


251
00:13:08,866 --> 00:13:09,896
to be evaluated.


252
00:13:10,876 --> 00:13:16,136
Second, expected answer, so
expected answer here is no


253
00:13:16,266 --> 00:13:18,486
to the first question,
do we own a car.


254
00:13:19,206 --> 00:13:22,866
Last, it requires
a designation step.


255
00:13:23,236 --> 00:13:27,046
Now you have learned the three
elements in the navigation rule.


256
00:13:27,606 --> 00:13:28,816
Let me show you the code now.


257
00:13:29,446 --> 00:13:34,726
In the code first I
use the resultSelector


258
00:13:34,956 --> 00:13:36,876
to locate where is the result.


259
00:13:37,826 --> 00:13:41,236
And then I create the predicate
with the expected answer.


260
00:13:42,556 --> 00:13:45,496
After I have the predicate I
can create the navigation rule


261
00:13:45,806 --> 00:13:47,716
with the destination step.


262
00:13:49,116 --> 00:13:53,006
Last, I'll add the first
question, do you own a car,


263
00:13:53,286 --> 00:13:54,206
to be the trigger step.


264
00:13:55,266 --> 00:13:57,966
As you can see, it's
quite easy just one, two,


265
00:13:57,966 --> 00:14:00,166
three I create this
navigation rule.


266
00:14:00,846 --> 00:14:07,756
And also the task is ready
to be presented to the user.


267
00:14:08,286 --> 00:14:11,596
Now you have learned how
to use branching task.


268
00:14:11,906 --> 00:14:13,866
Next, let me show
you the app access.


269
00:14:19,046 --> 00:14:21,666
User account is a
very important aspect


270
00:14:21,666 --> 00:14:24,446
of managing the user
in your app.


271
00:14:24,446 --> 00:14:26,986
App access provide this
necessary functionality.


272
00:14:28,256 --> 00:14:33,386
Two basic operations to
support account in your app,


273
00:14:33,386 --> 00:14:35,856
account registration
and account login.


274
00:14:36,656 --> 00:14:41,046
Account registration allows
your user to log in to register


275
00:14:41,046 --> 00:14:43,486
with your app is
password and username.


276
00:14:44,376 --> 00:14:46,866
And a registered user
can use account login


277
00:14:46,956 --> 00:14:50,686
to continue participating in
your app even on a new device.


278
00:14:51,726 --> 00:14:52,586
So that's account.


279
00:14:53,746 --> 00:14:56,596
And you may know, user's privacy


280
00:14:56,596 --> 00:14:58,726
and data security
are very important


281
00:14:58,836 --> 00:15:00,406
for most of the research apps.


282
00:15:01,466 --> 00:15:05,096
To help you do that we recommend
your app to allow the user


283
00:15:05,206 --> 00:15:06,446
to set up a passcode [inaudible]


284
00:15:06,656 --> 00:15:09,936
and use it later
to unlock your app.


285
00:15:11,026 --> 00:15:14,666
Same here there are two
basic operations in passcode.


286
00:15:15,226 --> 00:15:17,126
First, passcode creation.


287
00:15:17,636 --> 00:15:20,356
It lets user to select
a desired passcode.


288
00:15:21,266 --> 00:15:25,736
Once the passcode is created,
then the app can assist the user


289
00:15:25,886 --> 00:15:28,646
to enter the correct
passcode to enter the app


290
00:15:29,376 --> 00:15:31,556
to use passcode authentication.


291
00:15:32,676 --> 00:15:35,096
Now you have learned app
access has two parts,


292
00:15:35,906 --> 00:15:37,406
account and passcode.


293
00:15:38,806 --> 00:15:40,246
Let me show you the
account part first.


294
00:15:40,986 --> 00:15:47,446
You see here it's a screenshot
of account registration.


295
00:15:48,876 --> 00:15:51,016
It lets a user register
with your app


296
00:15:51,086 --> 00:15:52,696
by providing an email address


297
00:15:53,076 --> 00:15:58,136
and enter the possible
twice to avoid typos.


298
00:15:58,136 --> 00:15:59,726
Next, I will show
you this in code.


299
00:15:59,726 --> 00:16:06,276
All I need is to create one
step ORKRegistrationStep


300
00:16:06,926 --> 00:16:09,116
with identifier, title and text.


301
00:16:10,016 --> 00:16:12,636
And the last parameter
options can be used


302
00:16:12,636 --> 00:16:14,726
to provide additional
input fields


303
00:16:15,066 --> 00:16:17,526
like gender or date of birth.


304
00:16:18,736 --> 00:16:24,566
Once I have this step I can put
it into a task and present it.


305
00:16:25,346 --> 00:16:29,396
After the step is completed I
need to retrieve the username


306
00:16:29,636 --> 00:16:31,786
and password from
the result object.


307
00:16:32,656 --> 00:16:33,636
It's easy to do.


308
00:16:34,576 --> 00:16:37,166
I just need to use the
predefined identifier


309
00:16:37,466 --> 00:16:39,236
to get them.


310
00:16:39,236 --> 00:16:40,466
Once I have the username


311
00:16:40,696 --> 00:16:44,086
and password I can securely
send them to a remote server


312
00:16:44,616 --> 00:16:46,876
to create the account
for the user.


313
00:16:48,146 --> 00:16:49,936
So that's account registration.


314
00:16:50,506 --> 00:16:54,396
Next, account login.


315
00:16:55,156 --> 00:16:57,666
For the user who
already registered want


316
00:16:57,666 --> 00:17:00,206
to continue participating
in your app.


317
00:17:02,056 --> 00:17:05,646
You see here it's a
screenshot of the account login.


318
00:17:06,366 --> 00:17:10,026
It allows a user to log in
with username and password.


319
00:17:11,016 --> 00:17:15,445
Additionally, if a user forgot
his password there's a button


320
00:17:15,445 --> 00:17:19,536
available for them
at the bottom.


321
00:17:19,536 --> 00:17:23,526
We only need a few lines code
to create this in your app.


322
00:17:24,096 --> 00:17:28,165
Same here, we need
a step ORKLoginStep.


323
00:17:28,906 --> 00:17:32,446
I create this step with
identifier, title, and text.


324
00:17:33,266 --> 00:17:37,226
And you may notice the
last parameter I need


325
00:17:37,226 --> 00:17:39,146
to provide a
ViewControllerClass.


326
00:17:39,926 --> 00:17:45,366
Why? Because I need to
subclass the view controller


327
00:17:45,366 --> 00:17:49,436
from the ResearchKit to
provide my own custom handler


328
00:17:49,436 --> 00:17:54,396
to the action forgot password in
case something forgot password


329
00:17:54,446 --> 00:17:55,526
and click that button.


330
00:17:56,566 --> 00:17:57,826
After I have done this,


331
00:17:57,956 --> 00:18:03,226
then this login step is
ready to be presented.


332
00:18:03,516 --> 00:18:06,986
Now I'm showing you account
registration and account login.


333
00:18:07,926 --> 00:18:11,206
Next, let me show you how to
let your user create an account,


334
00:18:11,336 --> 00:18:14,886
create a passcode and use
it to unlock your app later.


335
00:18:21,056 --> 00:18:25,366
In the process of passcode
creation the user will be asked


336
00:18:25,606 --> 00:18:31,566
to enter the passcode first,
then confirm it and optionally,


337
00:18:31,786 --> 00:18:35,146
if the device has Touch ID
enabled the user can opt


338
00:18:35,146 --> 00:18:37,806
in to use Touch ID to
unlock your app later.


339
00:18:38,936 --> 00:18:40,986
You can see here a few steps,


340
00:18:41,256 --> 00:18:45,156
but in the code it's
really easy to do.


341
00:18:45,386 --> 00:18:48,466
Same I need one step,
ORKPasscodeStep


342
00:18:49,526 --> 00:18:52,136
and after I create
it I recommend you


343
00:18:52,136 --> 00:18:56,776
to provide a decryption text to
your user to explain the purpose


344
00:18:56,776 --> 00:18:58,246
of setting up a passcode.


345
00:18:59,136 --> 00:19:00,406
That's all I need to do.


346
00:19:02,046 --> 00:19:03,456
Some of you may want to ask


347
00:19:03,886 --> 00:19:06,946
where the passcode is being
stored, that's a good question.


348
00:19:07,416 --> 00:19:09,946
Let me show you that.


349
00:19:10,146 --> 00:19:14,546
From this diagram you can see
the passcode is being stored


350
00:19:14,546 --> 00:19:16,996
in the iOS Keychain,
so it's secure


351
00:19:17,766 --> 00:19:20,636
and also telling you
the passcode writing


352
00:19:20,926 --> 00:19:24,186
and passcode reading are both
managed by the ResearchKit,


353
00:19:24,686 --> 00:19:26,746
so you don't need to
worry about it all.


354
00:19:26,986 --> 00:19:27,606
Isn't that cool?


355
00:19:28,686 --> 00:19:28,816
>> Yeah.


356
00:19:29,156 --> 00:19:29,486
>> Thank you.


357
00:19:31,626 --> 00:19:34,876
After you learn this let me show
you the passcode authentication.


358
00:19:35,306 --> 00:19:39,906
The passcode authentication
allow the user


359
00:19:39,956 --> 00:19:43,886
to enter the correct passcode
before accessing the app.


360
00:19:44,036 --> 00:19:46,906
Let me show you the code.


361
00:19:47,116 --> 00:19:48,756
All I need is a view controller.


362
00:19:49,356 --> 00:19:51,146
I can create this
view controller easily


363
00:19:51,656 --> 00:19:54,086
and also I need to
remember assign a delegate


364
00:19:54,186 --> 00:19:55,276
to it at the end.


365
00:19:56,306 --> 00:19:58,976
I will show you next how
to implement this delegate.


366
00:19:59,716 --> 00:20:05,446
The passcode authentication view
controller's delegate provides


367
00:20:05,756 --> 00:20:09,656
opportunities to the developers
to handle the different result


368
00:20:09,956 --> 00:20:11,406
of the possible authentication.


369
00:20:12,256 --> 00:20:16,506
For example, if the passcode
authentication succeed I can


370
00:20:16,506 --> 00:20:18,226
present that function
to the users.


371
00:20:19,186 --> 00:20:22,966
But if the passcode
authentication failed I need


372
00:20:22,966 --> 00:20:28,006
to show alert or the passcode
authentication is canceled I can


373
00:20:28,006 --> 00:20:30,366
show the default welcome
screen to the user instead.


374
00:20:31,396 --> 00:20:35,836
So that's this delegate and also
this new controller is ready


375
00:20:35,836 --> 00:20:39,066
to be displayed to the user.


376
00:20:39,236 --> 00:20:42,386
Now I have showed you all
the parts in the app access,


377
00:20:42,386 --> 00:20:44,576
I hope you find it useful.


378
00:20:45,586 --> 00:20:47,416
I can show you the charts.


379
00:20:48,016 --> 00:20:50,486
With charts you can present
your data to your user.


380
00:20:51,086 --> 00:20:54,896
There are three types of charts
in ResearchKit, as you can see


381
00:20:54,896 --> 00:20:56,106
from those screenshots.


382
00:20:56,876 --> 00:21:01,396
There are pie charts, line
graph, and discrete graph.


383
00:21:01,606 --> 00:21:03,866
Let's zoom into the
first one, pie chart.


384
00:21:10,066 --> 00:21:11,636
A pie chart is [inaudible] ring


385
00:21:11,766 --> 00:21:13,736
and which is divided
into segments.


386
00:21:14,356 --> 00:21:17,106
Each of them represent a
proportion of the whole


387
00:21:17,716 --> 00:21:21,996
and each segment has its
own value, color and title.


388
00:21:23,136 --> 00:21:24,476
Once you have learned the basics


389
00:21:24,476 --> 00:21:27,886
of this pie chart I can show
you the code behind this.


390
00:21:29,076 --> 00:21:33,206
To code it I need to create
this pieChartView first,


391
00:21:33,936 --> 00:21:36,576
then I'll assign a data
source object to it


392
00:21:37,536 --> 00:21:40,396
because the data source object
provide all the information


393
00:21:40,546 --> 00:21:41,776
to be displayed in the chart.


394
00:21:43,376 --> 00:21:46,196
Now I need to implement
this data source,


395
00:21:47,106 --> 00:21:50,246
but before I'm jumping
onto those functions I need


396
00:21:50,246 --> 00:21:53,796
to take some time to set
up the data object first.


397
00:21:54,416 --> 00:21:59,476
In order to do that I first
define a base structure


398
00:21:59,606 --> 00:22:02,966
to carry the basic information
for each segment in the chart.


399
00:22:04,636 --> 00:22:07,986
You can see from here I
defined the base structure


400
00:22:08,166 --> 00:22:10,676
with title, value, and color.


401
00:22:11,266 --> 00:22:13,066
All the basic information
that is needed.


402
00:22:14,226 --> 00:22:17,006
Once I have done that I
can create the data objects


403
00:22:17,206 --> 00:22:18,956
with those structures.


404
00:22:20,186 --> 00:22:22,976
Next, I will return
them in the functions.


405
00:22:23,636 --> 00:22:29,556
Since I already have these
objects ready I can create those


406
00:22:29,556 --> 00:22:30,436
functions easily.


407
00:22:30,956 --> 00:22:34,946
First, I return the
total number of segments,


408
00:22:35,666 --> 00:22:39,606
then I return the value of
each segment and the value


409
00:22:39,606 --> 00:22:42,656
that will be used to calculate
the proportion in the ring.


410
00:22:43,836 --> 00:22:47,576
After that is a color
and the title.


411
00:22:48,726 --> 00:22:50,486
After I have done that,


412
00:22:51,516 --> 00:22:56,776
then this pie chart is
ready to be displayed.


413
00:22:56,856 --> 00:23:00,356
Now you have learned how to
use pie chart with ResearchKit.


414
00:23:01,566 --> 00:23:05,156
And line graph and discrete
graph are quite similar to use.


415
00:23:05,796 --> 00:23:07,856
You can simply go
to GitHub site,


416
00:23:08,196 --> 00:23:10,526
download our simple
project to learn from it


417
00:23:11,036 --> 00:23:16,446
and you can see the
URL on the screen.


418
00:23:16,906 --> 00:23:18,886
Branching task, app access,


419
00:23:19,136 --> 00:23:21,966
and charts are the three
new features I introduced


420
00:23:21,966 --> 00:23:22,456
to you today.


421
00:23:23,276 --> 00:23:27,096
With them I'm sure you will find
doing a research app will be


422
00:23:27,096 --> 00:23:27,866
more easier.


423
00:23:29,626 --> 00:23:34,286
Now I'm giving it back
to my colleague, Bunny,


424
00:23:34,776 --> 00:23:36,846
to talk about contributing
to ResearchKit.


425
00:23:38,516 --> 00:23:42,500
[ Applause ]


426
00:23:45,046 --> 00:23:45,906
>> The reason why
ResearchKit has


427
00:23:45,906 --> 00:23:47,536
so many great new features is


428
00:23:47,566 --> 00:23:49,206
because of our open
source community.


429
00:23:49,796 --> 00:23:51,566
Many of our contributors
are here today


430
00:23:51,566 --> 00:23:52,536
and I'd like to thank them.


431
00:23:53,326 --> 00:23:55,426
But any of you out
there can work with us


432
00:23:55,456 --> 00:23:58,906
to make ResearchKit even
better, so let me tell you how.


433
00:24:00,026 --> 00:24:02,646
Contributing to ResearchKit
is like contributing


434
00:24:02,646 --> 00:24:04,366
to any other open
source project.


435
00:24:05,146 --> 00:24:08,266
Go to our GitHub repo,
pick or open an issue


436
00:24:08,556 --> 00:24:09,746
and please drop us a line


437
00:24:09,746 --> 00:24:10,876
and let us know what
you're working on.


438
00:24:11,966 --> 00:24:13,246
Then submit a pull request.


439
00:24:13,876 --> 00:24:16,716
At that time Apple
engineers and active members


440
00:24:16,716 --> 00:24:19,246
of the ResearchKit community
will take a look at your code


441
00:24:19,816 --> 00:24:21,576
and no doubt they're
going to have some advice


442
00:24:21,576 --> 00:24:23,196
for you on how to improve it.


443
00:24:23,606 --> 00:24:25,276
So we want you to work
with the review team


444
00:24:25,276 --> 00:24:26,346
until everyone's happy.


445
00:24:27,566 --> 00:24:30,486
Then your changes will get
merged into the master branch.


446
00:24:32,796 --> 00:24:34,976
Sometimes later we'll
branch for convergence.


447
00:24:35,596 --> 00:24:38,186
At that time you code
will have been localized


448
00:24:38,186 --> 00:24:40,456
into all the languages
that iOS supports,


449
00:24:41,266 --> 00:24:44,756
updated for accessibility,
and tested on a wide variety


450
00:24:44,926 --> 00:24:46,946
of devices and scenarios.


451
00:24:47,646 --> 00:24:49,076
We'll also look at your code


452
00:24:49,076 --> 00:24:51,006
with an eye towards
privacy and security.


453
00:24:52,486 --> 00:24:55,696
Now this open source process
might seem a little Apple


454
00:24:55,696 --> 00:24:57,986
centric to you, but
we want to make sure


455
00:24:57,986 --> 00:25:01,246
that your code can be used all
over the world and by users


456
00:25:01,246 --> 00:25:03,206
who have a variety of
different abilities


457
00:25:03,466 --> 00:25:05,726
and on a variety of
different devices.


458
00:25:06,936 --> 00:25:09,016
So now that you know
how to contribute some


459
00:25:09,016 --> 00:25:11,536
of you might have ideas of
what to contribute and others


460
00:25:11,596 --> 00:25:12,546
of you maybe you don't,


461
00:25:12,546 --> 00:25:14,146
so I'd like to give you
a little inspiration.


462
00:25:14,816 --> 00:25:20,606
But before I do that we do tag a
new stable version at some point


463
00:25:20,606 --> 00:25:24,336
and our last stable version is
Win.3 that we tagged in January.


464
00:25:26,116 --> 00:25:27,566
Okay, so what can
you contribute?


465
00:25:27,756 --> 00:25:29,726
Of course, you can
contribute active tasks,


466
00:25:29,726 --> 00:25:31,116
I've already showed you a few.


467
00:25:32,236 --> 00:25:36,286
This year we've had a 9-hole
peg test contributed and I'd


468
00:25:36,286 --> 00:25:38,186
like to thank Julian
Therrier [assumed spelling]


469
00:25:38,186 --> 00:25:39,176
for contributing that.


470
00:25:39,966 --> 00:25:43,176
This task is supposed
to be a digital version


471
00:25:43,306 --> 00:25:44,916
of a test that's
done in the clinic


472
00:25:44,916 --> 00:25:46,356
for rehabilitation medicine


473
00:25:46,396 --> 00:25:48,476
to test upper extremity
functioning.


474
00:25:49,376 --> 00:25:52,606
Now right now this task
is undergoing validation


475
00:25:52,606 --> 00:25:55,256
in a research study because
we don't really know whether


476
00:25:55,256 --> 00:25:57,426
or not this digital
version is equivalent


477
00:25:57,426 --> 00:25:58,336
to the one in the clinic.


478
00:25:58,846 --> 00:26:00,336
So validation is
really important.


479
00:26:00,456 --> 00:26:03,866
When you develop a new task
researchers want to know


480
00:26:04,076 --> 00:26:05,436
that what you say it's measuring


481
00:26:05,486 --> 00:26:06,986
that the task is
really measuring that.


482
00:26:06,986 --> 00:26:09,016
So you might have to get
involved in a little bit


483
00:26:09,016 --> 00:26:10,426
of validation study to do that.


484
00:26:11,866 --> 00:26:14,526
The Tower of Hanoi is a
puzzle that's commonly used


485
00:26:14,526 --> 00:26:17,916
in psychological research and
I'd like to thank James Cox


486
00:26:17,916 --> 00:26:18,916
for this contribution.


487
00:26:19,836 --> 00:26:21,896
I'm sure there are many
other tasks out there.


488
00:26:21,996 --> 00:26:24,906
In fact, researchers often write
to me and say that they would


489
00:26:24,906 --> 00:26:28,286
like things like maybe the
Stroop, which is the color test


490
00:26:28,686 --> 00:26:31,426
or psychomotor vigilance task.


491
00:26:31,426 --> 00:26:32,696
So there are many
things out there


492
00:26:32,816 --> 00:26:34,296
that if you ask researchers
I'm sure


493
00:26:34,296 --> 00:26:36,436
that you can develop
these tasks.


494
00:26:36,966 --> 00:26:40,956
There are many other
answer formats than what's


495
00:26:40,956 --> 00:26:44,596
in ResearchKit I'm sure and
I'd like to thank Quintiles


496
00:26:44,596 --> 00:26:46,766
for giving us the
location answer format.


497
00:26:47,336 --> 00:26:53,066
As you probably gathered
from Yuan, the basic thing


498
00:26:53,066 --> 00:26:57,236
in ResearchKit is a step and
there are always many more steps


499
00:26:57,236 --> 00:26:58,326
that could be contributed.


500
00:26:58,386 --> 00:27:00,046
I'd like to thank
Quintiles once again


501
00:27:00,046 --> 00:27:01,906
for contributing a wait step.


502
00:27:02,036 --> 00:27:05,276
This step turns out
to be really important


503
00:27:05,276 --> 00:27:07,936
when you're doing a very
lengthy calculation and you want


504
00:27:07,936 --> 00:27:09,836
to get the results to the
user before they proceed


505
00:27:09,836 --> 00:27:13,756
on with other steps in the task.


506
00:27:14,216 --> 00:27:17,556
Modules are encapsulated
pieces of functionality


507
00:27:17,556 --> 00:27:18,476
that help researchers.


508
00:27:19,066 --> 00:27:20,996
Yuan just told you
about the charts module,


509
00:27:21,526 --> 00:27:23,736
this is a great contribution
and I'd


510
00:27:23,736 --> 00:27:26,846
like to thank Ricardo Sanchez
[inaudible] and James Cox


511
00:27:26,846 --> 00:27:27,866
for contributing this.


512
00:27:28,566 --> 00:27:31,066
Just about every new ResearchKit
app is using this module


513
00:27:31,266 --> 00:27:34,156
and it turns out that users love
to see charts about their data,


514
00:27:34,156 --> 00:27:39,906
their progress in the study,
and things about the study.


515
00:27:41,116 --> 00:27:43,636
The genetic basis of
condition is of interest


516
00:27:43,636 --> 00:27:46,536
to many researchers and right
now there are two ResearchKit


517
00:27:46,536 --> 00:27:48,206
apps out there looking
at genetics.


518
00:27:48,776 --> 00:27:52,096
PPD Act is looking
at the genetic basis


519
00:27:52,436 --> 00:27:54,016
of postpartum depression
in women.


520
00:27:54,896 --> 00:27:57,936
And MyHeart Counts recently
added a genetic component


521
00:27:57,936 --> 00:27:59,736
so that they could
look at genetics


522
00:27:59,736 --> 00:28:00,916
in cardiovascular health.


523
00:28:00,966 --> 00:28:04,216
It turns out if you want
to collect genetic material


524
00:28:04,216 --> 00:28:07,826
from someone, there is an
informed consent process that's


525
00:28:07,826 --> 00:28:09,686
above and beyond what's
required in your app.


526
00:28:11,356 --> 00:28:14,676
So I'd like to thank
23andMe for coming


527
00:28:14,676 --> 00:28:18,526
up with the ResearchKit module
that shows how to do the --


528
00:28:18,526 --> 00:28:21,796
that has informed consent in it.


529
00:28:21,796 --> 00:28:24,446
And right now they're hosting
this on their own website,


530
00:28:24,446 --> 00:28:26,476
so if you want to use 23andMe


531
00:28:26,476 --> 00:28:28,986
to collect genetic data you
could go to their website


532
00:28:28,986 --> 00:28:30,786
and get this ResearchKit module.


533
00:28:31,396 --> 00:28:33,866
And the great thing is that
they have complete documentation


534
00:28:33,866 --> 00:28:36,186
of how to add this to your
app and the modifications


535
00:28:36,186 --> 00:28:37,826
that you need to make
in your app to make sure


536
00:28:37,826 --> 00:28:38,906
that this works really well.


537
00:28:39,656 --> 00:28:41,906
I'm sure there are other modules
that you could contribute.


538
00:28:42,026 --> 00:28:46,876
Now as I mentioned before,
ResearchKit doesn't do anything


539
00:28:46,876 --> 00:28:49,876
with your data, so you need to
connect it to a data service.


540
00:28:50,666 --> 00:28:54,256
If you're someone who provides
data services I suggest


541
00:28:54,256 --> 00:28:58,566
that you download our sample,
ORKSample and you modify it


542
00:28:58,566 --> 00:29:01,506
to use your data service,
then host that modified app


543
00:29:01,506 --> 00:29:04,296
on a GitHub repo, so people
can come there and see how


544
00:29:04,296 --> 00:29:06,566
to connect their ResearchKit
app to your data service.


545
00:29:06,946 --> 00:29:09,566
It would be a great help to
researchers who are struggling


546
00:29:09,566 --> 00:29:11,256
with trying to get that
data over to a server.


547
00:29:13,146 --> 00:29:16,496
So after you've made all these
code contributions maybe you


548
00:29:16,496 --> 00:29:17,166
want to do more.


549
00:29:18,546 --> 00:29:19,426
I can see some of you.


550
00:29:21,076 --> 00:29:21,586
If you've gone


551
00:29:21,586 --> 00:29:23,776
to ResearchKit.org
recently you'll see


552
00:29:23,776 --> 00:29:25,706
that we feature a number
of tutorials written


553
00:29:25,706 --> 00:29:26,996
by the open source community.


554
00:29:27,446 --> 00:29:31,066
Specifically, I'd like to thank
the [inaudible] Blog in France


555
00:29:31,786 --> 00:29:33,196
and Raywenderlich.com.


556
00:29:35,476 --> 00:29:37,896
We love to see developers
teaching other developers how


557
00:29:37,896 --> 00:29:38,226
to code.


558
00:29:38,896 --> 00:29:41,406
And if you're one of those rare
people who know how to code


559
00:29:41,406 --> 00:29:44,686
and write, please find
a topic in ResearchKit


560
00:29:44,686 --> 00:29:47,106
that you think needs
explaining and write a tutorial.


561
00:29:47,306 --> 00:29:48,416
Then let us know about it


562
00:29:48,416 --> 00:29:49,736
and we'll help you
to get out the word.


563
00:29:51,126 --> 00:29:53,846
Now while the ResearchKit
community has been busy writing,


564
00:29:53,846 --> 00:29:54,726
so has Apple.


565
00:29:56,166 --> 00:29:58,496
We've updated the
ResearchKit programming guide


566
00:29:58,496 --> 00:30:00,846
and reference documentation
earlier this year


567
00:30:01,016 --> 00:30:02,686
and we also added a chapter


568
00:30:02,726 --> 00:30:05,986
to the iOS Human Interface
Guidelines to give you guidance


569
00:30:05,986 --> 00:30:07,616
on how to write a
great ResearchKit app.


570
00:30:08,266 --> 00:30:10,346
If you haven't read that,
please go out and do


571
00:30:10,346 --> 00:30:11,776
so at your earliest convenience.


572
00:30:12,496 --> 00:30:15,376
I have some homework for you.


573
00:30:16,046 --> 00:30:17,156
This is your call to action.


574
00:30:17,726 --> 00:30:19,836
If you haven't already
downloaded ResearchKit


575
00:30:19,906 --> 00:30:21,616
framework, please do so today.


576
00:30:21,846 --> 00:30:23,526
You'll get access all
the great new features


577
00:30:23,526 --> 00:30:24,486
that Yuan talked about.


578
00:30:25,666 --> 00:30:28,306
Inside the framework you'll
see a sample folder and in


579
00:30:28,306 --> 00:30:31,696
that is the ORKSample app,
we added that this year.


580
00:30:32,116 --> 00:30:34,626
I suggest that you build and
run it, it's a great app.


581
00:30:35,076 --> 00:30:38,456
It's in Swift, it uses best
practices not only for Swift


582
00:30:38,526 --> 00:30:40,516
and ResearchKit, but
for iOS in general.


583
00:30:41,356 --> 00:30:43,626
It has a great architecture
for a ResearchKit app.


584
00:30:44,006 --> 00:30:45,426
You can even start with that app


585
00:30:45,426 --> 00:30:48,956
and you'll have a great
start on your own research.


586
00:30:50,196 --> 00:30:53,366
Also build and run
the ORKCatalog app.


587
00:30:53,886 --> 00:30:55,886
As its name suggests,
it's a catalog


588
00:30:55,996 --> 00:30:57,366
of ResearchKit functionality.


589
00:30:58,066 --> 00:31:00,896
When you run it you'll see
what each active task does,


590
00:31:01,226 --> 00:31:02,996
you'll get a look at
all the answer formats,


591
00:31:03,136 --> 00:31:05,196
you can even see what
an eligibility survey is


592
00:31:05,196 --> 00:31:06,016
like and more.


593
00:31:07,566 --> 00:31:10,066
And finally, please
make a contribution.


594
00:31:10,106 --> 00:31:11,546
ResearchKit is open source


595
00:31:11,546 --> 00:31:14,846
and it will become
only what you make it.


596
00:31:15,636 --> 00:31:17,866
Everything you need to get
started with ResearchKit is


597
00:31:17,866 --> 00:31:22,926
on this page,
developer.apple.com/WWDC16/234.


598
00:31:23,306 --> 00:31:24,756
There's links to
the GitHub repo,


599
00:31:25,046 --> 00:31:26,576
to the tutorials I talked about,


600
00:31:26,576 --> 00:31:30,176
to own documentation,
so please look at it.


601
00:31:31,706 --> 00:31:33,336
This afternoon I'd
like you to join us


602
00:31:33,336 --> 00:31:35,236
at the Getting Started
with CareKit session.


603
00:31:35,416 --> 00:31:38,356
CareKit is a new open source
framework that we introduced


604
00:31:38,826 --> 00:31:42,266
in March and that will help you
to build great apps for people


605
00:31:42,266 --> 00:31:43,506
to manage their own care.


606
00:31:45,096 --> 00:31:47,976
So with that, thank you and
have a great rest of WWDC.

