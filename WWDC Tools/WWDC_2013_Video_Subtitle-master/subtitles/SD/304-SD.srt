1
00:00:00,506 --> 00:00:10,416
[ Applause ]


2
00:00:10,916 --> 00:00:11,076
>> James Howard: Whoops.


3
00:00:15,676 --> 00:00:16,556
Good morning everyone.


4
00:00:16,906 --> 00:00:19,486
Thank you all for
coming at 9:00 a.m. here.


5
00:00:19,596 --> 00:00:21,086
I know that's a little
early for programmers


6
00:00:21,156 --> 00:00:22,066
or at least it is for me.


7
00:00:22,636 --> 00:00:24,846
This is what's new in Map Kit.


8
00:00:25,036 --> 00:00:26,176
I'm James Howard.


9
00:00:26,236 --> 00:00:30,916
I'm a software engineer on
the Maps Team and let's begin.


10
00:00:31,036 --> 00:00:34,456
So, we have a lot to cover here
and I'm going to go quickly.


11
00:00:34,546 --> 00:00:35,606
So, hold on to your hats.


12
00:00:36,856 --> 00:00:39,186
Our first topic and the
one that I'm most excited


13
00:00:39,186 --> 00:00:42,436
about is Map Kit on OS X.


14
00:00:42,936 --> 00:00:46,076
[ Applause ]


15
00:00:46,576 --> 00:00:49,756
>> We've also got some updates
to Map Kit for the new UI.


16
00:00:50,696 --> 00:00:53,706
So, we're going to
talk about that.


17
00:00:53,916 --> 00:00:56,476
New Perspectives: We've got
new ways to look at the Map.


18
00:00:56,546 --> 00:00:59,906
We've got a 3D mode that
you can use in Map Kit


19
00:01:00,306 --> 00:01:03,646
and we've also got the ability
to span around the 180th radian,


20
00:01:03,686 --> 00:01:05,666
so these change the way that
you can set the view port


21
00:01:05,666 --> 00:01:05,956
on the Map.


22
00:01:06,486 --> 00:01:07,286
We're going to discuss that.


23
00:01:08,956 --> 00:01:12,366
There's new Overlays
Functionality in iOS 7 and also


24
00:01:12,366 --> 00:01:14,996
on Mac OS X and there's
quite a lot of this.


25
00:01:14,996 --> 00:01:19,096
There's a ability to put
overlays underneath labels.


26
00:01:19,396 --> 00:01:21,466
So, if you have a polyline or
a polygon and you want to put


27
00:01:21,466 --> 00:01:22,986
that underneath the
labeling on the Map


28
00:01:23,076 --> 00:01:25,106
to enhance readability
you can do that.


29
00:01:25,516 --> 00:01:29,116
We've got the ability to do new
tiled overlays so if you have


30
00:01:29,116 --> 00:01:31,856
like a raster image pyramid and
you want to place that on top


31
00:01:31,856 --> 00:01:33,406
of the Map you can do that.


32
00:01:33,576 --> 00:01:36,706
We've got the ability to replace
the built-in Apple Map data


33
00:01:36,706 --> 00:01:38,906
with your own data via overlays


34
00:01:39,296 --> 00:01:40,926
and we've got a geodesic
polyline.


35
00:01:41,256 --> 00:01:42,926
So, that's new to Overlays
Functionality and we're going


36
00:01:42,926 --> 00:01:43,866
to get into that
in a little bit.


37
00:01:44,776 --> 00:01:47,886
We've got a search API, so
this is for doing local search.


38
00:01:48,346 --> 00:01:52,916
So, finding locations via a
query string we can do that now.


39
00:01:54,096 --> 00:01:56,216
And we've also got
a Directions API.


40
00:01:57,576 --> 00:02:04,996
So, with that outlined let's
talk about Map Kit for OS X.


41
00:02:05,226 --> 00:02:06,996
Here it is.


42
00:02:07,226 --> 00:02:10,295
We have an NP Map view
and an NS Window running


43
00:02:10,295 --> 00:02:11,216
on Mac OS X there.


44
00:02:12,416 --> 00:02:14,106
And what are the features?


45
00:02:14,106 --> 00:02:15,546
So, it's just like iOS.


46
00:02:15,746 --> 00:02:21,526
We managed to get parody between
iOS and Mac OS X for Map Kit.


47
00:02:22,186 --> 00:02:23,426
We've got basically
the same API.


48
00:02:23,816 --> 00:02:28,076
So, we have MKMapView on OS X
and the difference between it


49
00:02:28,076 --> 00:02:30,196
and iOS is basically just
that' it's an NSView.


50
00:02:30,536 --> 00:02:31,556
We have all the same things.


51
00:02:31,556 --> 00:02:33,266
We have annotations if
you want to put a point


52
00:02:33,266 --> 00:02:34,066
of interest on the Map.


53
00:02:34,626 --> 00:02:37,686
The Annotation views are NS
views instead of UI views


54
00:02:37,686 --> 00:02:38,896
but they are other
otherwise the same.


55
00:02:39,316 --> 00:02:41,326
We've got Overlays so you
can put areas of interest


56
00:02:41,326 --> 00:02:43,506
on your Map and we've
also got the Local Search


57
00:02:43,506 --> 00:02:45,416
and Directions API,
so it's just like OS X


58
00:02:45,936 --> 00:02:47,736
or just like iOS on OS X.


59
00:02:48,896 --> 00:02:51,196
There are some small
differences in terms of the UI


60
00:02:51,406 --> 00:02:56,206
so here we have a window showing
a MapView with Annotation on it.


61
00:02:56,206 --> 00:02:57,256
One thing you can notice is


62
00:02:57,256 --> 00:02:59,526
in the lower right there
there's a plus and minus


63
00:02:59,586 --> 00:03:01,606
and a compass control so you
can use these to interact


64
00:03:01,606 --> 00:03:04,166
with the Map via a
mouse and you can show


65
00:03:04,166 --> 00:03:05,176
or hide these with a API.


66
00:03:06,766 --> 00:03:08,826
And we have this Map
data attribution label


67
00:03:08,826 --> 00:03:09,766
in the lower left.


68
00:03:10,016 --> 00:03:13,276
This is basically
what you have on iOS.


69
00:03:13,276 --> 00:03:15,596
Don't, don't obscure this thing.


70
00:03:15,596 --> 00:03:17,056
We need it there
for legal reasons.


71
00:03:18,026 --> 00:03:20,536
And the finally the callouts
that call it that says,


72
00:03:20,536 --> 00:03:21,446
"Hello World" there on the map.


73
00:03:22,066 --> 00:03:25,926
That is on the side so it can be
on either the right or the left


74
00:03:25,926 --> 00:03:27,086
where in iOS it's on the top,


75
00:03:27,086 --> 00:03:28,556
but otherwise it has
the same functionality.


76
00:03:28,556 --> 00:03:30,616
You can set a left
and a right view on it


77
00:03:30,616 --> 00:03:33,566
and you can also set
a subtitle on it.


78
00:03:34,796 --> 00:03:37,696
The other thing about this
is it's available for apps


79
00:03:37,696 --> 00:03:40,646
in the Mac App Store so you have
to code sign it and you have


80
00:03:40,646 --> 00:03:43,176
to put this entitlement on
it: com.apple.developer.maps.


81
00:03:43,696 --> 00:03:46,936
And you can turn this on via the
Capabilities page in Xcode 5.


82
00:03:47,376 --> 00:03:49,616
And the thing I'll say about
this is it's not on in seed one,


83
00:03:49,726 --> 00:03:52,796
so you can-- we're not
enforcing this at the moment


84
00:03:52,796 --> 00:03:54,636
but in the next seed we
are going to enforce this.


85
00:03:55,096 --> 00:03:56,306
So, it's something you
need to be aware of.


86
00:03:56,716 --> 00:03:59,676
And with that let's do a
demo and I'm going to invite


87
00:03:59,676 --> 00:04:02,726
up Alexander Carlhian up
on stage to do this demo.


88
00:04:03,296 --> 00:04:04,966
And you should give him
a big round of applause


89
00:04:05,006 --> 00:04:05,726
because if it wasn't


90
00:04:05,726 --> 00:04:07,666
for Alexander we wouldn't
have Map Kit on OS X.


91
00:04:08,166 --> 00:04:14,106
[ Applause ]


92
00:04:14,606 --> 00:04:15,436
>> Alexander Carlhian:
Good morning everyone.


93
00:04:15,546 --> 00:04:17,646
My name is Alexander
Carlhian and today I would


94
00:04:17,646 --> 00:04:21,106
like to give you an overview of
the main Map Kit APIs on OS X.


95
00:04:21,606 --> 00:04:23,236
How many of you have
used Map Kit in iOS?


96
00:04:24,696 --> 00:04:28,526
Good, so for you guys this is
going to sound like a refresher,


97
00:04:29,036 --> 00:04:32,066
but for the other guys it's
going to be brand new APIs.


98
00:04:32,396 --> 00:04:35,976
So, for today let's just pretend
I am a software developer


99
00:04:35,976 --> 00:04:39,756
working for a coffee company
that own a few places in Paris


100
00:04:40,206 --> 00:04:42,936
and I would like to extend
my existing application


101
00:04:43,266 --> 00:04:44,096
to add MapView.


102
00:04:44,456 --> 00:04:45,496
So, how do I do that?


103
00:04:46,316 --> 00:04:49,136
Well, we can start with
something really easy,


104
00:04:49,656 --> 00:04:54,126
just within Xcode we added a
new object called MKMapView.


105
00:04:54,726 --> 00:05:02,496
I can just drag it into my
view, resize, simple right?


106
00:05:02,796 --> 00:05:07,096
Just, let's just
run-- here it is.


107
00:05:07,656 --> 00:05:09,956
I have my window
and my map view.


108
00:05:11,106 --> 00:05:13,546
Good, so the next thing I
would like to do I would


109
00:05:13,546 --> 00:05:17,896
like to add controls for
zooming, for compass and I would


110
00:05:17,896 --> 00:05:19,706
like to set the region to Paris.


111
00:05:20,286 --> 00:05:23,406
So, let's start by adding the
compass and the zoom controls.


112
00:05:24,006 --> 00:05:27,016
So, this is pretty easy.


113
00:05:27,216 --> 00:05:30,036
You can just set shows compass
and shows zoom controls,


114
00:05:30,186 --> 00:05:32,206
set the property to
yes and that's it.


115
00:05:32,866 --> 00:05:38,286
If you want to set the region
you need to set a coordinate


116
00:05:39,326 --> 00:05:42,206
which is a long lat
and set the radius


117
00:05:43,166 --> 00:05:45,286
to create an MK coordinate
region.


118
00:05:45,866 --> 00:05:50,516
So, the coordinate is a
long lat and the regions is


119
00:05:50,516 --> 00:05:52,576
in meters here, so
that's 10 kilometers.


120
00:05:53,026 --> 00:05:56,086
And just set the region using
set region on the map view.


121
00:05:57,026 --> 00:05:57,786
Let's run again.


122
00:05:58,366 --> 00:06:02,566
So you can see Paris.


123
00:06:02,566 --> 00:06:03,716
You can see the compass.


124
00:06:03,926 --> 00:06:06,236
I can tilt pushing up or down.


125
00:06:06,526 --> 00:06:07,176
I can rotate.


126
00:06:07,896 --> 00:06:13,136
I can zoom in and
zoom out, good.


127
00:06:13,376 --> 00:06:17,136
So, the next thing is to add
pin for each of my coffee place.


128
00:06:18,146 --> 00:06:24,726
To do that I create three
instances of MKPoint annotation


129
00:06:25,996 --> 00:06:29,786
by setting coordinate,
setting an optional title.


130
00:06:30,766 --> 00:06:32,336
I do it for each
of my coffee place


131
00:06:32,736 --> 00:06:35,626
and I can add the
annotations on my MapView


132
00:06:35,626 --> 00:06:38,426
in a single call
using addAnnotations:.


133
00:06:39,016 --> 00:06:39,766
Let's run again.


134
00:06:40,336 --> 00:06:44,986
I can see now that I have my
three red pins on the map.


135
00:06:46,466 --> 00:06:47,006
That's great.


136
00:06:47,176 --> 00:06:47,786
That's great start.


137
00:06:48,966 --> 00:06:51,886
Well, you know what I want
to give a distinct look


138
00:06:51,886 --> 00:06:53,836
to my application so I like
to customize this red pin


139
00:06:53,886 --> 00:06:55,576
to look something else,
something different,


140
00:06:55,916 --> 00:06:57,586
remember that is a coffee place.


141
00:06:57,616 --> 00:07:00,956
So, I'm going to add
an image to my project.


142
00:07:01,456 --> 00:07:05,536
[ Silence ]


143
00:07:06,036 --> 00:07:06,906
>> This image.


144
00:07:08,026 --> 00:07:13,256
And I'm going to add a subclass
of my MKPinAnnotationView.


145
00:07:13,766 --> 00:07:16,586
Called MyAnnotationView


146
00:07:17,166 --> 00:07:20,426
and designated initializer
I just call super


147
00:07:21,026 --> 00:07:24,566
and load the image and just
set the image and that's it.


148
00:07:24,756 --> 00:07:25,876
You just need to set the image.


149
00:07:27,306 --> 00:07:30,946
Next thing you need to do is
to actually tell the MapView


150
00:07:30,946 --> 00:07:34,516
that you want to use instance
of your custom annotation view.


151
00:07:35,296 --> 00:07:39,016
So, first you set the
delegate of your MapView


152
00:07:39,916 --> 00:07:42,306
and you implement this
delegate method here.


153
00:07:42,576 --> 00:07:44,206
-mapView:viewForAnnotation:.


154
00:07:44,206 --> 00:07:47,376
Here you can just
create one more instance


155
00:07:48,166 --> 00:07:49,906
of your annotation
view and return it.


156
00:07:50,376 --> 00:07:51,146
Alright, let's run.


157
00:07:51,696 --> 00:07:56,446
And you can see that the
red pins have been replaced


158
00:07:56,446 --> 00:07:57,326
by my image, pretty easy.


159
00:07:57,766 --> 00:08:01,876
Alright, so the next step
will be to add a callout.


160
00:08:02,016 --> 00:08:04,996
A callout is like a popover that
pops next to the pin annotation.


161
00:08:05,086 --> 00:08:11,336
So to do that you in
annotation view you can call


162
00:08:11,916 --> 00:08:14,696
-setCanShowCallout: and
set this property to yes.


163
00:08:15,966 --> 00:08:17,666
Well, I've changed the image


164
00:08:17,816 --> 00:08:20,116
to have a slightly
bigger pin image.


165
00:08:20,386 --> 00:08:23,336
So, I need to adjust the
offset of my callouts


166
00:08:23,686 --> 00:08:26,006
where the callout would
be anchored on the right


167
00:08:26,006 --> 00:08:28,376
and the left by just
creating a point here


168
00:08:29,156 --> 00:08:30,106
and setting the offset.


169
00:08:31,356 --> 00:08:34,196
So, let's run.


170
00:08:34,395 --> 00:08:37,556
If I click on a pin I
can see the callout next


171
00:08:37,556 --> 00:08:39,306
to it with my title.


172
00:08:39,885 --> 00:08:43,546
That was easy right.


173
00:08:44,576 --> 00:08:47,046
Well, I would like to
customize this callout


174
00:08:47,206 --> 00:08:50,236
to add accessory views,
maybe add a button,


175
00:08:50,236 --> 00:08:53,096
maybe ordering coffee just
by clicking on this button.


176
00:08:53,546 --> 00:08:56,456
So, as seen on the
documentation there is a right


177
00:08:56,566 --> 00:09:01,696
and left accessory views
so I'm going to use that.


178
00:09:01,906 --> 00:09:07,216
I'm creating a left button,
which is size 32 x 32 points.


179
00:09:08,346 --> 00:09:10,176
Setting the title,
target an action,


180
00:09:10,496 --> 00:09:15,676
same thing on the right is a
button and I set the target


181
00:09:15,746 --> 00:09:18,686
and action to call either
the right click method


182
00:09:18,686 --> 00:09:19,866
or left click method.


183
00:09:20,476 --> 00:09:23,506
I click on run.


184
00:09:24,696 --> 00:09:28,176
If I show my callout I can see
now that I have this new button


185
00:09:28,176 --> 00:09:30,986
and if I click on it I can see
the action is correctly fired.


186
00:09:31,526 --> 00:09:35,026
Well, it's not exactly what
I want for my application.


187
00:09:35,026 --> 00:09:38,286
I would like to customize
this callout to be bigger,


188
00:09:38,356 --> 00:09:39,716
to show something
a bit different,


189
00:09:40,006 --> 00:09:41,056
maybe have a bigger button.


190
00:09:41,886 --> 00:09:43,246
So, how do we do that.


191
00:09:43,496 --> 00:09:46,286
That's something that you
guys have been asking for iOS


192
00:09:46,396 --> 00:09:48,486
and in fact, it has
already been available


193
00:09:48,846 --> 00:09:50,316
since the first mission
of the API.


194
00:09:50,316 --> 00:09:52,406
Just you need to keep in mind


195
00:09:52,616 --> 00:09:55,566
that annotation view is
just a subclass of a view.


196
00:09:55,886 --> 00:09:59,846
So, an UIView on iOS
and an NSView on OS X.


197
00:10:00,636 --> 00:10:03,656
So, something you can do
is just to add a subview


198
00:10:04,096 --> 00:10:06,406
when the pin is selected
and remove it


199
00:10:06,466 --> 00:10:07,526
when the pin is unselected.


200
00:10:08,626 --> 00:10:09,816
So, I will show you
how to do that.


201
00:10:10,316 --> 00:10:13,176
First, I would like to display
an address inside this callout.


202
00:10:13,176 --> 00:10:16,286
So, I'm just adding an
annotation model object here,


203
00:10:16,716 --> 00:10:18,746
which is the subclass
of MKPointAnnotation.


204
00:10:19,186 --> 00:10:21,776
That just going to hold
the address, no code,


205
00:10:22,306 --> 00:10:26,726
but in the App Delegate I'm
replacing the MKPointAnnotation


206
00:10:26,926 --> 00:10:30,096
with my own, MyAnnotation
instance inside the address


207
00:10:30,096 --> 00:10:32,056
for each of my coffee
place here.


208
00:10:32,406 --> 00:10:36,996
So, next thing I'm going to do
is to add a view that's going


209
00:10:36,996 --> 00:10:38,926
to be displayed on screen
when I click on the pin.


210
00:10:39,916 --> 00:10:42,386
So, this is just a
subclass of NSView,


211
00:10:43,436 --> 00:10:45,286
just basic -drawRect:
to add a background.


212
00:10:46,786 --> 00:10:48,436
The View Controller is
going to load the nib


213
00:10:49,076 --> 00:10:53,546
and inside the nib I'm
just binding my annotation.


214
00:10:53,746 --> 00:11:02,256
I will show you my annotation
title here and address


215
00:11:03,036 --> 00:11:05,456
and just add a button.


216
00:11:06,086 --> 00:11:08,196
Well I now have a
custom callout so I would


217
00:11:08,196 --> 00:11:10,016
like to disable the
default callout.


218
00:11:10,476 --> 00:11:13,266
So, remember we enabled
it in the allocation view,


219
00:11:13,576 --> 00:11:14,876
so we're just going
to disable it now


220
00:11:15,106 --> 00:11:17,126
by setting canShowCallout to no.


221
00:11:18,306 --> 00:11:22,086
And the last part is to actually
implement the -setSelected:


222
00:11:22,086 --> 00:11:24,026
method on the annotation view


223
00:11:24,026 --> 00:11:27,816
so next time annotation
view is selected is going


224
00:11:28,216 --> 00:11:29,206
to call -setSelected:.


225
00:11:29,266 --> 00:11:30,476
So, I can just call super


226
00:11:31,046 --> 00:11:37,546
and when the pin is selected
I'm just going to set the frame


227
00:11:37,746 --> 00:11:40,916
of my callout and
just add the subview.


228
00:11:41,516 --> 00:11:41,976
Easy right?


229
00:11:42,496 --> 00:11:46,266
And when the pin is unselected,
I want to fade my view


230
00:11:46,266 --> 00:11:49,606
and remove my callout
from the MapView.


231
00:11:49,676 --> 00:11:52,796
Something you need
to keep in mind is


232
00:11:52,796 --> 00:11:55,306
that we are adding a view
outside of the bounds


233
00:11:55,536 --> 00:11:57,576
of the annotation
view of the pin.


234
00:11:58,076 --> 00:12:00,996
So, we need to override the
-hitTest: method to correct that


235
00:12:01,496 --> 00:12:05,316
and to allow click
to be propagated


236
00:12:05,316 --> 00:12:06,736
to the button inside my callout.


237
00:12:07,436 --> 00:12:10,106
So, I'm going to run
again one more time.


238
00:12:10,686 --> 00:12:12,886
I click on a pin.


239
00:12:13,346 --> 00:12:14,306
I can see my callout.


240
00:12:14,336 --> 00:12:19,706
I can see the title address and
a button and if I click it fades


241
00:12:19,706 --> 00:12:25,346
out and if I click
again on a pin et voila!


242
00:12:26,006 --> 00:12:29,466
So, thank you that
was my MapKit on OSX.


243
00:12:29,966 --> 00:12:33,306
[ Applause ]


244
00:12:33,806 --> 00:12:35,996
I'm really thrilled by this
and I'm looking forward


245
00:12:35,996 --> 00:12:38,506
to all your applications
using MapKit in OS X.


246
00:12:38,746 --> 00:12:39,036
Thank you.


247
00:12:39,336 --> 00:12:39,566
James.


248
00:12:40,066 --> 00:12:43,376
[ Applause ]


249
00:12:43,876 --> 00:12:44,576
>> James Howard:
Thank you Alexander.


250
00:12:46,276 --> 00:12:47,576
So, just to recap
what did we see?


251
00:12:48,316 --> 00:12:52,066
We saw how to add Map Kit
to a Mac OS X project.


252
00:12:52,566 --> 00:12:54,676
We saw how to control user
interaction with the map view


253
00:12:54,676 --> 00:12:56,726
by adding those zoom
and compass controls.


254
00:12:57,216 --> 00:12:58,726
We saw how to add annotations


255
00:12:58,766 --> 00:13:02,246
to the map both the built-in
MKPin annotation view


256
00:13:02,246 --> 00:13:04,586
with the red pins and then
the custom annotation views


257
00:13:04,586 --> 00:13:05,246
with the coffee pins.


258
00:13:05,246 --> 00:13:08,446
And then finally we saw how
to add a custom callout view.


259
00:13:08,746 --> 00:13:10,306
So, if you don't like the
built-in one that comes


260
00:13:10,306 --> 00:13:12,556
with Map Kit you need a
little more space or whatever


261
00:13:12,556 --> 00:13:14,366
to show what you need to
show, you can do that.


262
00:13:14,766 --> 00:13:17,956
And that lesson applies
equally well to iOS as Mac OS X.


263
00:13:19,046 --> 00:13:20,036
So, that's Mac OS X.


264
00:13:20,276 --> 00:13:23,036
Let's talk about
what's new in iOS 7.


265
00:13:23,096 --> 00:13:25,566
So, we've got a new UI in iOS 7


266
00:13:25,566 --> 00:13:27,206
and there's a new
look for Map Kit.


267
00:13:28,236 --> 00:13:30,496
So, the first thing we've
done is we've updated


268
00:13:30,496 --> 00:13:31,266
the cartography.


269
00:13:31,666 --> 00:13:33,796
You can see what we had
on the left there in iOS 6


270
00:13:34,136 --> 00:13:36,216
and what we have on
the right in iOS 7.


271
00:13:36,486 --> 00:13:37,836
So, we've improved
the visibility


272
00:13:37,836 --> 00:13:39,766
of the roads especially
the major roads there


273
00:13:40,286 --> 00:13:42,416
and we've improved the
labeling quite a bit as well,


274
00:13:42,416 --> 00:13:44,046
so you have quite a lot
more detail on the map.


275
00:13:44,226 --> 00:13:46,976
So, we think this makes
the map a lot more useable.


276
00:13:48,256 --> 00:13:50,436
We've also improved
the Hybrid mode


277
00:13:50,796 --> 00:13:52,306
so that's the old Hybrid Mode.


278
00:13:52,876 --> 00:13:53,926
This is the new Hybrid Mode.


279
00:13:54,576 --> 00:13:56,716
I think it's also
a lot more useable.


280
00:13:57,326 --> 00:14:02,756
And we've changed the pins; they
look a little bit different.


281
00:14:02,756 --> 00:14:04,036
They're a little-- they've
lost a little weight.


282
00:14:04,406 --> 00:14:06,356
They're a little brighter
than they were before.


283
00:14:06,356 --> 00:14:08,036
But the nice thing about it
is it's the same dimensions


284
00:14:08,036 --> 00:14:08,446
as before.


285
00:14:08,446 --> 00:14:10,726
So, if you were doing any
math based on the geometry


286
00:14:10,726 --> 00:14:13,406
of those pins it's going to
be the same as it was before.


287
00:14:14,016 --> 00:14:17,636
The other thing we've got
is we've got a new callout.


288
00:14:17,636 --> 00:14:19,726
So, it's this white
callout now instead


289
00:14:19,726 --> 00:14:21,466
of the black callout
we had in iOS 6.


290
00:14:22,546 --> 00:14:23,956
We've got a new user
location view.


291
00:14:24,066 --> 00:14:27,306
So, this is this white dot
with the colored center.


292
00:14:27,306 --> 00:14:29,876
And if you've noticed
we have a new property


293
00:14:29,876 --> 00:14:31,626
on UIView, which is Tint Color.


294
00:14:32,006 --> 00:14:35,156
If you set that on an
MKMapView it will filter down


295
00:14:35,216 --> 00:14:37,626
and effect the user location
view and also the callout.


296
00:14:37,626 --> 00:14:43,316
So, let's talk about
New Perspectives.


297
00:14:43,696 --> 00:14:48,466
We've got some new ways that you
can look at the map in iOS 7.


298
00:14:48,596 --> 00:14:50,866
So, you can now span
the 180th meridian.


299
00:14:51,546 --> 00:14:53,386
So you can do this
either via touch,


300
00:14:53,386 --> 00:14:56,936
you can just start panning West
and pan over the Pacific Ocean


301
00:14:56,936 --> 00:14:58,916
or pan East from
Japan and pan over it.


302
00:14:59,276 --> 00:15:01,246
And you can also do this
programmatically via API.


303
00:15:01,776 --> 00:15:04,096
So, just to look at the code
really quickly how could you


304
00:15:04,096 --> 00:15:04,476
do this?


305
00:15:04,806 --> 00:15:06,426
One way you could do it is you
could set the centerCoordinate


306
00:15:06,426 --> 00:15:07,026
property of the map.


307
00:15:07,516 --> 00:15:10,286
So, we'll create a
coordinate at the equator


308
00:15:10,756 --> 00:15:14,696
and the 180th meridian
and set that on the map


309
00:15:14,696 --> 00:15:16,246
or you can set the
region on the map.


310
00:15:16,246 --> 00:15:18,616
Again we'll set the center
of that region to the equator


311
00:15:18,616 --> 00:15:24,786
in the 180th meridian and we'll
use 1000 kilometers both East,


312
00:15:24,786 --> 00:15:28,396
West, North and South
as the delta there


313
00:15:29,406 --> 00:15:30,576
or you can do it by a MapRect.


314
00:15:30,576 --> 00:15:31,666
So, those of you
that are familiar


315
00:15:31,666 --> 00:15:33,846
with our MapPoint system,


316
00:15:33,916 --> 00:15:37,326
which is a projected coordinate
system, which is proportional


317
00:15:37,326 --> 00:15:38,966
to screen points relative


318
00:15:38,966 --> 00:15:40,716
to the zoom scale you
can do that with MapRect.


319
00:15:40,716 --> 00:15:44,366
So, we have MKMapRectWorld
which is the MapRect enclosing


320
00:15:44,726 --> 00:15:46,556
that sort of square
world that we have


321
00:15:46,556 --> 00:15:47,646
in the projected
coordinate system.


322
00:15:47,836 --> 00:15:51,116
But you can actually make
MapRects that intersect that


323
00:15:51,116 --> 00:15:53,396
or go outside the bounds of
that and if you want to do that,


324
00:15:53,396 --> 00:15:55,206
that's fine and set the
visible MapRect this way


325
00:15:55,206 --> 00:15:56,266
and that will work.


326
00:15:56,266 --> 00:15:59,036
So, all of these three things
I showed do the same thing


327
00:15:59,036 --> 00:16:01,576
and so that's the screenshot
showed on the slide earlier.


328
00:16:02,226 --> 00:16:03,636
The other thing you might
want to do is you might want


329
00:16:03,636 --> 00:16:05,526
to enclose pins on the map.


330
00:16:05,526 --> 00:16:07,556
So, suppose we have this
pin here in Sydney and one


331
00:16:07,556 --> 00:16:10,066
in Honolulu and we say oh we
want to show both of these.


332
00:16:10,436 --> 00:16:13,246
So, figure out what would
be the region to span those.


333
00:16:13,246 --> 00:16:15,076
It's kind of a bit
of a weird edge case.


334
00:16:15,316 --> 00:16:16,746
So here's the code to do it.


335
00:16:17,186 --> 00:16:21,056
So, suppose we've got two point
annotations, one in Honolulu


336
00:16:21,056 --> 00:16:23,526
and one in Sydney and
if you want to look


337
00:16:23,526 --> 00:16:25,036
at the longitude value
for each of those right,


338
00:16:25,036 --> 00:16:26,796
it's nearly 360 degrees apart.


339
00:16:27,146 --> 00:16:28,526
So, if you just naively
said, "Oh,


340
00:16:28,526 --> 00:16:30,546
I'm going to calculate
a longitude delta" right


341
00:16:30,546 --> 00:16:32,306
by taking my min longitude
and my max longitude


342
00:16:32,306 --> 00:16:36,616
and subtracting the two, you'd
get like you know 354 degrees


343
00:16:36,616 --> 00:16:38,656
or something like
that, 356 degrees.


344
00:16:38,976 --> 00:16:41,206
It would be way more zoomed
out than what you want.


345
00:16:41,396 --> 00:16:44,106
So, we have introduced a new
API called showAnnotations


346
00:16:44,106 --> 00:16:45,486
and it makes a list
of annotations


347
00:16:45,886 --> 00:16:47,466
and it just does the
work to make sure


348
00:16:47,466 --> 00:16:48,396
that those are enclosed.


349
00:16:48,786 --> 00:16:49,766
So, you get that screenshot.


350
00:16:50,276 --> 00:16:51,266
You like that?


351
00:16:51,266 --> 00:16:51,566
[ Applause ]


352
00:16:51,566 --> 00:16:51,736
Good.


353
00:16:52,236 --> 00:16:54,696
[ Applause ]


354
00:16:55,196 --> 00:16:57,316
Yea, it's a nice new
convenience that we've got.


355
00:16:58,506 --> 00:16:59,526
We've also got 3D.


356
00:17:00,706 --> 00:17:02,096
So, you can view maps in 3D.


357
00:17:02,096 --> 00:17:04,455
We've got the Space Needle
here that you can view


358
00:17:04,455 --> 00:17:06,715
so you can view these
buildings that we've got.


359
00:17:07,046 --> 00:17:10,036
It's on by default in iOS
7 and also in Mavericks.


360
00:17:10,356 --> 00:17:12,246
So, if you make an MKMap or
you put it in your project


361
00:17:12,246 --> 00:17:14,396
or you recompile your
project you're going to have


362
00:17:14,396 --> 00:17:16,526
to create users to be able
to enter that via a gesture


363
00:17:16,996 --> 00:17:18,116
on those operating systems.


364
00:17:18,476 --> 00:17:21,076
And we've got a whole bunch
of APIs for working with 3D,


365
00:17:21,246 --> 00:17:24,126
which I'm not going
to cover here.


366
00:17:24,465 --> 00:17:26,236
You should go to the
session this afternoon


367
00:17:26,376 --> 00:17:29,536
in Pacific Heights at 2:00 p.m.
and see everything about 3D.


368
00:17:29,536 --> 00:17:32,656
There's quite a lot to know
and we've got a lot of new APIs


369
00:17:32,656 --> 00:17:35,016
around that and it's just too
much to put in this session.


370
00:17:35,046 --> 00:17:36,976
So, go to that this
afternoon to learn about 3D.


371
00:17:37,806 --> 00:17:39,186
So, let's talk about
what's new in Overlays.


372
00:17:39,996 --> 00:17:42,116
So, just to run it
down we've got a new


373
00:17:42,116 --> 00:17:43,556
class MKOverlayRenderer.


374
00:17:43,816 --> 00:17:45,166
This is used to draw overlays.


375
00:17:45,166 --> 00:17:47,806
We're replacing MKOverlayView
with MKOverlayRenderer.


376
00:17:48,726 --> 00:17:52,216
We've got a new facility for
putting overlays beneath labels.


377
00:17:52,646 --> 00:17:55,666
So, as I mentioned in the
overview earlier this allows you


378
00:17:55,666 --> 00:17:58,176
to put your polylines or
polygons underneath the labels


379
00:17:58,176 --> 00:17:59,406
and enhance readability
of the map.


380
00:17:59,676 --> 00:18:01,086
We've got a geodesic polyline.


381
00:18:01,086 --> 00:18:03,946
A geodesic is the shortest path


382
00:18:04,056 --> 00:18:05,856
between two points
along a curved surface.


383
00:18:06,136 --> 00:18:07,446
So, as this applies
to the Earth it's--


384
00:18:07,776 --> 00:18:09,556
you know it follows


385
00:18:09,556 --> 00:18:11,596
that shortest path along the
curved surface of the Earth.


386
00:18:12,366 --> 00:18:13,376
Why would you want to use this?


387
00:18:13,556 --> 00:18:15,866
Probably to show the flight
path that an airplane takes.


388
00:18:15,976 --> 00:18:17,396
Airplanes usually
take the shortest path


389
00:18:17,786 --> 00:18:20,026
between two points, not
always, but usually they do.


390
00:18:20,716 --> 00:18:22,046
We've got MKTileOverlays.


391
00:18:22,046 --> 00:18:23,556
So if you've got a
raster image pyramid,


392
00:18:23,556 --> 00:18:25,476
you've got your own
map tiles and you want


393
00:18:25,476 --> 00:18:28,136
to show those either
on top of or in lieu


394
00:18:28,136 --> 00:18:30,816
of Apple's data we can do
that and that works in content


395
00:18:30,816 --> 00:18:32,536
with our Map data
replacement APIs.


396
00:18:33,226 --> 00:18:35,296
And the last point is
better performance.


397
00:18:35,336 --> 00:18:38,926
We rewrote the Overlay system
in iOS 7, so it's going


398
00:18:38,926 --> 00:18:40,226
to be faster and
work better for you.


399
00:18:41,626 --> 00:18:42,536
So, let's get into it.


400
00:18:42,536 --> 00:18:45,426
First topic, MKOverlayRenderer:
What I'd like you


401
00:18:45,426 --> 00:18:48,426
to do is replace everywhere
you use MKOverlayView


402
00:18:48,426 --> 00:18:49,356
with MKOverlayRenderer.


403
00:18:49,356 --> 00:18:51,106
So we have a whole
new class hierarchy


404
00:18:51,106 --> 00:18:53,536
under MKOverlayRenderer,
MKPolylineRenderer,


405
00:18:53,536 --> 00:18:55,716
MKPolygonRenderer
and MKCircleRenderer


406
00:18:56,186 --> 00:18:59,616
and MKTileOverlayRenderer now.


407
00:19:00,146 --> 00:19:02,236
And so just switch
from MKOverlayView


408
00:19:02,236 --> 00:19:04,086
to MKOverlayRenderer class.


409
00:19:04,436 --> 00:19:06,156
MKOverlayRenderer
is lighter weight


410
00:19:06,156 --> 00:19:07,256
because it's no longer a view.


411
00:19:07,306 --> 00:19:09,226
We didn't really need
the viewness of it


412
00:19:09,666 --> 00:19:13,066
and this is the only way to
do overlays on OS X as well.


413
00:19:13,196 --> 00:19:15,426
So, find and replace
and fix your errors


414
00:19:15,426 --> 00:19:16,576
and it should be
pretty straightforward.


415
00:19:16,786 --> 00:19:20,026
The API is basically the same.


416
00:19:20,236 --> 00:19:25,116
So, on the topic of putting your
overlays underneath the labels


417
00:19:25,266 --> 00:19:26,856
we have two places
you can put them now.


418
00:19:27,276 --> 00:19:29,196
You an put them above roads.


419
00:19:29,846 --> 00:19:31,726
So this is going to be
directly above the roads,


420
00:19:31,726 --> 00:19:35,106
but below everything else,
above the labels, above shields


421
00:19:35,166 --> 00:19:39,876
that you see on highways, or
this is below shields you see


422
00:19:39,876 --> 00:19:42,646
on highways rather, below point
of interest icons that are


423
00:19:42,646 --> 00:19:43,436
on the map an so forth.


424
00:19:43,516 --> 00:19:45,746
And there's
MKOverlayLevelAboveLabels,


425
00:19:45,746 --> 00:19:46,896
which is what we
traditionally had


426
00:19:46,896 --> 00:19:48,476
since I was formerly
introduced to overlays.


427
00:19:48,476 --> 00:19:49,456
So, this is the overlay.


428
00:19:49,456 --> 00:19:51,676
It's above everything except
for your annotation views.


429
00:19:52,226 --> 00:19:54,826
So, just to show what
this looks like here,


430
00:19:55,156 --> 00:19:56,646
get out of the way of the thing.


431
00:19:57,246 --> 00:19:59,156
So, this is what we had.


432
00:19:59,366 --> 00:20:01,776
This is AboveLabels and
then just go ahead and push


433
00:20:01,776 --> 00:20:03,656
that underneath and it improves
the readability of the map.


434
00:20:03,656 --> 00:20:05,816
You can see the labels on
the streets and the point


435
00:20:05,816 --> 00:20:08,696
of interest icons there; they
really stand out a lot better.


436
00:20:09,166 --> 00:20:15,776
And just to go through this in a
little more detail this is how--


437
00:20:16,106 --> 00:20:18,276
this is sort of how the map
is layered from the ground up.


438
00:20:19,116 --> 00:20:23,336
So, initially we had the grid
and then we add in the base map.


439
00:20:23,336 --> 00:20:26,706
So, we add in polygons
like parks


440
00:20:26,706 --> 00:20:28,336
and so forth, bodies of water.


441
00:20:29,336 --> 00:20:31,886
We add in roads and we add
in 2D building footprints


442
00:20:31,886 --> 00:20:32,586
where those are available.


443
00:20:33,896 --> 00:20:36,026
And then
MKOverlayLevelAboveRoads


444
00:20:36,296 --> 00:20:38,276
so we'll go ahead and put this
polyline here on this road.


445
00:20:40,056 --> 00:20:41,286
Then we'll add in labeling


446
00:20:41,696 --> 00:20:43,266
so you can see those
point of interest icons.


447
00:20:43,296 --> 00:20:45,206
The street labels and so
forth come in and they're


448
00:20:45,206 --> 00:20:45,986
on top of the overlay.


449
00:20:45,986 --> 00:20:49,566
And then we can add an
overlay above those labels.


450
00:20:49,566 --> 00:20:51,746
So we'll put the circle in
their above the labels and then


451
00:20:51,746 --> 00:20:56,226
if we were to pitch in the 3D
those 3D buildings they push


452
00:20:56,256 --> 00:20:58,626
through and they
occlude the overlays.


453
00:20:58,946 --> 00:21:01,296
And then finally we'll come back
to 2D and add an annotation view


454
00:21:01,586 --> 00:21:03,296
and an annotation view
sits on top of all of that.


455
00:21:04,086 --> 00:21:05,886
So, that's the layers
of the map.


456
00:21:06,196 --> 00:21:08,536
That's how they fit together.


457
00:21:08,626 --> 00:21:12,126
So, in Code suppose we have
an MKPolygon represented


458
00:21:12,126 --> 00:21:14,346
in presidio and we have
this new parameter here


459
00:21:14,346 --> 00:21:15,506
when we add the overlay level.


460
00:21:15,506 --> 00:21:17,996
We can just pass either of
those [inaudible] values there


461
00:21:18,056 --> 00:21:19,086
and get it where we want it.


462
00:21:20,016 --> 00:21:20,756
So, pretty straight forward.


463
00:21:21,226 --> 00:21:23,746
So the geodesic polyline,
here's a screenshot


464
00:21:23,746 --> 00:21:24,496
of what this looks like.


465
00:21:24,496 --> 00:21:25,346
We have the blue line.


466
00:21:25,736 --> 00:21:28,196
This is the shortest
path as the pixel flies.


467
00:21:28,196 --> 00:21:28,886
[ Laughter ]


468
00:21:28,886 --> 00:21:33,086
And then yea, and then the
red line is the shortest path


469
00:21:33,086 --> 00:21:35,096
as the crow flies in
a very long flight


470
00:21:35,536 --> 00:21:37,066
to Tokyo from San Francisco.


471
00:21:38,496 --> 00:21:39,756
So, in Code how is this done?


472
00:21:40,216 --> 00:21:42,116
So, suppose we have a
method here updateOverlays


473
00:21:42,816 --> 00:21:44,536
and we're going to
create a geodesic polyline


474
00:21:44,536 --> 00:21:46,156
from two points.


475
00:21:46,156 --> 00:21:49,026
MKGeodesicPolyline is a
subclass of MKPolyline


476
00:21:49,026 --> 00:21:49,856
so it works the same way.


477
00:21:50,136 --> 00:21:52,826
We just create it with a list of
coordinates, in this case two.


478
00:21:53,306 --> 00:21:55,566
We add it to the map and the
map's going to come back to us


479
00:21:55,566 --> 00:21:57,186
and say give me a
renderer for this


480
00:21:57,406 --> 00:21:59,356
and we just use a regular
MKPolyline Renderer


481
00:21:59,356 --> 00:21:59,946
to show this.


482
00:22:00,246 --> 00:22:02,766
And it has a line
with a strokeColor.


483
00:22:02,766 --> 00:22:03,996
There's no difference
between the renderer


484
00:22:03,996 --> 00:22:06,536
for regular polylines
and geodesic polylines.


485
00:22:06,576 --> 00:22:10,136
So, the same thing there.


486
00:22:10,336 --> 00:22:12,676
Next topic, MKTileOverlays


487
00:22:12,676 --> 00:22:16,366
so this is a full replacement
tile set that I built.


488
00:22:16,756 --> 00:22:19,966
I used Core Image and I did
like a CP atone filter and I did


489
00:22:20,106 --> 00:22:22,616
like a grid behind it and
so forth and took some tiles


490
00:22:22,776 --> 00:22:24,566
and built my own tile set here.


491
00:22:24,946 --> 00:22:28,946
So, that's my take
on an old time map.


492
00:22:29,956 --> 00:22:31,256
How did I do this?


493
00:22:31,606 --> 00:22:33,126
Well, it's pretty simple to use.


494
00:22:33,406 --> 00:22:35,036
The first thing you do is
you configure a template.


495
00:22:35,036 --> 00:22:37,236
You're also, if you have these
tiles you have an image pyramid,


496
00:22:37,236 --> 00:22:39,356
a whole bunch of tiles located
on the web server somewhere.


497
00:22:39,696 --> 00:22:40,946
You have some addressing
scheme for it.


498
00:22:41,276 --> 00:22:42,526
You fill out this template URL


499
00:22:42,816 --> 00:22:44,046
and you have your
[inaudible] parameters


500
00:22:44,046 --> 00:22:45,906
or whatever structure
you use to make this URL.


501
00:22:46,386 --> 00:22:49,996
There's an X and a Y and a Z
addressing each of those tiles


502
00:22:50,256 --> 00:22:52,016
and we'll go ahead
and those are things


503
00:22:52,016 --> 00:22:52,856
that are in the braces there.


504
00:22:52,856 --> 00:22:55,636
We'll fill those in and so
when you create a tile overlay


505
00:22:55,636 --> 00:22:57,336
with that we're going
to take that template


506
00:22:57,646 --> 00:22:59,106
and as needed we'll load tiles


507
00:22:59,106 --> 00:23:00,416
from your web server
in order to display.


508
00:23:00,916 --> 00:23:03,456
We can set this property
canReplaceMapContent to Yes


509
00:23:03,986 --> 00:23:06,046
and in the case where
we do that it's going


510
00:23:06,046 --> 00:23:08,126
to not load Apple
data or show it.


511
00:23:08,226 --> 00:23:09,846
It's going to load
your data and show it


512
00:23:09,846 --> 00:23:13,146
so it's a way you can use your
own map content using MKMapView.


513
00:23:13,736 --> 00:23:14,986
And then finally we'll
add it to the map.


514
00:23:15,206 --> 00:23:17,616
We'll add it AboveLabels because
we're replacing everything


515
00:23:18,696 --> 00:23:19,416
and that's how it's done.


516
00:23:19,766 --> 00:23:20,856
And then the map is
going to come back to us


517
00:23:20,856 --> 00:23:21,846
and give us a renderer.


518
00:23:22,706 --> 00:23:24,236
We return an
MKTileOverlayRenderer


519
00:23:24,236 --> 00:23:24,676
and return it.


520
00:23:25,646 --> 00:23:27,086
So, just to go into
a little more detail


521
00:23:27,086 --> 00:23:28,926
about this what is the
coordinate system for this?


522
00:23:29,276 --> 00:23:33,856
So, the way that it works
is it's a regular grid.


523
00:23:33,996 --> 00:23:37,206
It's a square and it's
tiled from the upper left


524
00:23:37,206 --> 00:23:39,146
by default though we
also allow you to tile it


525
00:23:39,146 --> 00:23:40,796
from the lower left, so you
can set your origin wherever


526
00:23:40,796 --> 00:23:41,826
you like.


527
00:23:42,286 --> 00:23:46,296
Well, either of those
two places.


528
00:23:46,296 --> 00:23:49,156
And it goes by powers of two
so you have zoom level zero,


529
00:23:49,476 --> 00:23:50,876
zoom level one, zoom level two.


530
00:23:51,046 --> 00:23:52,616
Here we're looking at zoom
level three, so there's going


531
00:23:52,616 --> 00:23:53,926
to be eight tiles
in the X direction,


532
00:23:54,336 --> 00:23:56,656
eight tile in the Y direction.


533
00:23:57,716 --> 00:23:59,776
And then you zoom in,
zoom level twelve.


534
00:23:59,776 --> 00:24:01,726
We have two to the twelve
tiles in the X direction


535
00:24:01,726 --> 00:24:03,346
to the twelve tiles
in the Y direction


536
00:24:03,656 --> 00:24:04,486
and it's quite a lot more.


537
00:24:04,716 --> 00:24:06,226
So, it is quite a lot of data.


538
00:24:06,226 --> 00:24:07,486
It's not the kind of thing
that you're just going


539
00:24:07,486 --> 00:24:09,186
to ship you know
in you app bundle.


540
00:24:09,186 --> 00:24:10,826
If you want to replace the
entire world you're going


541
00:24:10,826 --> 00:24:12,576
to have to have a web
server loading this


542
00:24:12,576 --> 00:24:14,206
up so you load only the
things that you need.


543
00:24:14,706 --> 00:24:18,526
And the other thing to say
about this is the tiles are


544
00:24:18,526 --> 00:24:20,396
in this mercator
projection that we use.


545
00:24:20,886 --> 00:24:24,186
You can use this
code the EPSG:3857


546
00:24:24,186 --> 00:24:27,046
if you're using software to
like warp an image to match.


547
00:24:27,936 --> 00:24:28,986
There's various ways
we can do it.


548
00:24:28,986 --> 00:24:30,566
I've used the command
line tools that came


549
00:24:30,566 --> 00:24:32,286
with the geospatial data
abstraction library.


550
00:24:32,326 --> 00:24:34,006
It's an open source
toolkit for working


551
00:24:34,006 --> 00:24:35,786
with raster geographical data.


552
00:24:36,106 --> 00:24:38,746
I've had good success with
this in the past myself


553
00:24:38,746 --> 00:24:41,006
and the other thing I'll say
about it, it's the same system


554
00:24:41,006 --> 00:24:43,666
as a lot of like web mapping
parameters if you've used


555
00:24:43,666 --> 00:24:46,156
like JavaScript frameworks
for showing your own tiles.


556
00:24:46,796 --> 00:24:49,106
It's the same system as
that, so you may be able


557
00:24:49,106 --> 00:24:51,996
to use the same tiles
in Map Kit as well


558
00:24:51,996 --> 00:24:52,946
as what you use on the web.


559
00:24:53,206 --> 00:24:57,376
And on the topic of replacing
Apple data with your data,


560
00:24:57,376 --> 00:24:59,906
so we do this either by
optional method on MKOverlay.


561
00:24:59,906 --> 00:25:01,146
So, you can make--
if you don't want


562
00:25:01,146 --> 00:25:03,456
to use MKTileOverlay you
can just use any MKOverlay,


563
00:25:03,616 --> 00:25:05,016
implement this method,
return Yes.


564
00:25:05,586 --> 00:25:08,546
And what we'll do is
within the bounding MapRect


565
00:25:08,546 --> 00:25:09,716
of that we'll say okay
we're not going to try


566
00:25:09,716 --> 00:25:10,736
and load any Apple Map data.


567
00:25:10,736 --> 00:25:12,736
We're just going to load
your data, so you'll see grid


568
00:25:12,736 --> 00:25:14,426
until your data comes
in and draws.


569
00:25:15,016 --> 00:25:16,176
And then it's also available


570
00:25:16,176 --> 00:25:17,826
as a settable property
on MKTileOverlay.


571
00:25:18,666 --> 00:25:21,506
And as I mentioned neither load
nor draw the Apple Map data


572
00:25:21,506 --> 00:25:22,106
when we do this.


573
00:25:22,696 --> 00:25:24,986
And you typically
use it above labels,


574
00:25:24,986 --> 00:25:26,376
so you're showing this right.


575
00:25:26,376 --> 00:25:27,066
We're not showing labels.


576
00:25:27,066 --> 00:25:29,396
But one new thing is you
actually can put it above roads


577
00:25:29,606 --> 00:25:32,256
and what we'll do in that case
is just load the data necessary


578
00:25:32,256 --> 00:25:32,966
to display the labels.


579
00:25:32,966 --> 00:25:35,726
So, if you had satellite data
or whatever that you needed


580
00:25:35,726 --> 00:25:38,346
to display or something that's
not labeled and you wanted


581
00:25:38,346 --> 00:25:40,866
to have like a hybrid mode,
you could use this to do that.


582
00:25:42,096 --> 00:25:44,116
So, I'm going to walk over
here to the demo machine


583
00:25:44,116 --> 00:25:45,086
and show you a quick demo.


584
00:25:45,626 --> 00:25:48,596
And what I'm going to do
actually is recycle a demo


585
00:25:48,866 --> 00:25:55,086
that I showed in 2010, but
I'm going to update it.


586
00:25:59,336 --> 00:25:59,576
Switch here.


587
00:25:59,576 --> 00:25:59,676
[ Silence ]


588
00:25:59,676 --> 00:26:11,166
>> Let's shut this down and
let's bring up a new demo.


589
00:26:11,166 --> 00:26:11,666
[ Silence ]


590
00:26:11,666 --> 00:26:13,216
>> That bigger.


591
00:26:13,296 --> 00:26:16,306
So, I wrote this three years ago


592
00:26:16,736 --> 00:26:17,846
for Worldwide Development
Conference.


593
00:26:17,846 --> 00:26:19,626
Did you guys ever look
at Code three years ago?


594
00:26:21,196 --> 00:26:27,526
Yea. What I'm going to do is
open my notes here and this--


595
00:26:28,056 --> 00:26:30,426
the thing about this,
let me just build


596
00:26:30,426 --> 00:26:35,446
and run it and see what it does.


597
00:26:35,666 --> 00:26:38,986
I took this map and I'm
going to zoom in on it here.


598
00:26:39,416 --> 00:26:40,956
I got this from the
National Oceanic


599
00:26:40,956 --> 00:26:43,556
and Atmospheric Administration's
website three years ago


600
00:26:43,956 --> 00:26:48,486
and I cut into the tiles using
GDAL and I have those tiles


601
00:26:48,486 --> 00:26:51,086
in my apps resources here.


602
00:26:51,856 --> 00:26:52,446
You can see them.


603
00:26:52,826 --> 00:26:56,866
It's the thing that's
sliced up into tiles.


604
00:26:57,046 --> 00:26:58,426
All of these guys are in there


605
00:26:58,926 --> 00:27:01,176
and what this thing does it
just goes ahead and loads them


606
00:27:01,176 --> 00:27:03,046
and displays them in
semitransparent fashion


607
00:27:03,676 --> 00:27:04,916
on top of satellite tiles.


608
00:27:05,436 --> 00:27:08,496
So, this is nice, but the thing
about it was there was kind


609
00:27:08,496 --> 00:27:09,996
of a lot of code to do this.


610
00:27:09,996 --> 00:27:11,416
I'm not even going
to bother with it.


611
00:27:11,476 --> 00:27:12,556
Just scroll through
there, it's a lot.


612
00:27:12,556 --> 00:27:14,426
And there was more in there.


613
00:27:15,436 --> 00:27:17,746
And it was kind of
complicated and the thing


614
00:27:17,746 --> 00:27:20,626
about this is it only works
for pretty much this sample.


615
00:27:20,626 --> 00:27:22,526
It's like well if you had
a small amount of tiles


616
00:27:22,526 --> 00:27:23,916
in your app you're going
to say okay it works,


617
00:27:24,386 --> 00:27:26,386
but it doesn't work
well if you want


618
00:27:26,386 --> 00:27:27,366
to load them from a web server.


619
00:27:27,416 --> 00:27:29,166
I kind of handwaved
that three years ago.


620
00:27:29,166 --> 00:27:33,166
So, we're going to make that
better and the way to do


621
00:27:33,166 --> 00:27:34,936
that is I'm just going
to delete everything.


622
00:27:35,046 --> 00:27:37,046
[ Laughter ]


623
00:27:37,156 --> 00:27:43,976
Just delete, delete,
this-- all this.


624
00:27:44,796 --> 00:27:48,986
I'm just going to,
nope, nope, nope.


625
00:27:49,186 --> 00:27:53,186
Gone. And instead, what I'm
going to do is I'm going to drag


626
00:27:53,186 --> 00:27:57,676
in a new viewDidLoad
and what I'm going


627
00:27:57,676 --> 00:27:59,756
to do is I still have these
tiles in my out bundle.


628
00:27:59,756 --> 00:28:01,296
It works for me because
I don't have that many.


629
00:28:01,496 --> 00:28:03,736
I'm not going to put
them on web server here,


630
00:28:03,736 --> 00:28:05,076
but you certainly could.


631
00:28:05,386 --> 00:28:09,056
I'm going to set up a template
URL so file URL for this.


632
00:28:09,746 --> 00:28:10,776
I'm going to make a TileOverlay.


633
00:28:10,926 --> 00:28:12,546
I'm going to say
geometry flipped


634
00:28:12,546 --> 00:28:14,146
because the origin
is in the lower left.


635
00:28:14,776 --> 00:28:17,206
I'll add that overlay to
the map and I'll release it


636
00:28:17,206 --> 00:28:22,366
because it was three years
ago and we didn't have ARC.


637
00:28:23,806 --> 00:28:27,686
And we'll have renderer for
overlay, new method here.


638
00:28:27,746 --> 00:28:28,716
for overlay.


639
00:28:29,156 --> 00:28:30,436
We'll make a
TileOverlayRenderer,


640
00:28:30,436 --> 00:28:34,446
set the alpha on it to point
6, return it, build and run.


641
00:28:34,566 --> 00:28:40,446
There we go exactly the
same thing and 20 lines


642
00:28:40,446 --> 00:28:46,576
of code instead of 200.


643
00:28:46,576 --> 00:28:46,956
[ Applause ]


644
00:28:46,956 --> 00:28:49,676
Thanks. So, let's
shut this down.


645
00:28:49,676 --> 00:28:51,926
Close that, close that.


646
00:28:53,146 --> 00:28:56,236
So what did we see?


647
00:28:56,706 --> 00:28:58,416
We saw that the tiles can
be bundled with the app.


648
00:28:58,536 --> 00:29:00,306
So, in this case we had
a smaller number of tiles


649
00:29:00,306 --> 00:29:01,626
and we wanted to put
them in the apps bundle.


650
00:29:01,836 --> 00:29:03,746
That's fine or more
likely you're going


651
00:29:03,746 --> 00:29:05,636
to have a web server
serving up all of thse tiles


652
00:29:05,636 --> 00:29:06,996
so you can download
them from your server.


653
00:29:07,476 --> 00:29:08,616
And the other thing to see


654
00:29:08,646 --> 00:29:11,106
as a I mentioned we can
replace Apple's Map Data


655
00:29:11,506 --> 00:29:14,046
or we can show a topic if
we want to blend data on top


656
00:29:14,046 --> 00:29:15,616
or we want to add
Apple's Map Data we can do


657
00:29:15,616 --> 00:29:16,726
that using MKTileOverlay.


658
00:29:17,236 --> 00:29:17,746
So, that's that.


659
00:29:19,126 --> 00:29:21,736
Let's talk about Local
Search, enough of Overlays.


660
00:29:22,386 --> 00:29:25,436
So, in Local Search
we've got the ability


661
00:29:25,436 --> 00:29:28,446
to find a specific
place by name.


662
00:29:28,716 --> 00:29:30,716
So if I search for Mascone
Center West and find that.


663
00:29:31,586 --> 00:29:35,116
We can find a list of places
by type such as pizza places.


664
00:29:35,656 --> 00:29:39,076
So, this is pizza places near
here or you can find an address.


665
00:29:39,566 --> 00:29:42,326
So, if you want to find one
infinite loop Cupertino,


666
00:29:42,326 --> 00:29:42,796
California.


667
00:29:42,796 --> 00:29:44,956
You can find that; that's
Apple's headquarters.


668
00:29:45,476 --> 00:29:49,256
We introduced this
in iOS 6.1 actually,


669
00:29:49,256 --> 00:29:51,266
so it came out last fall.


670
00:29:51,266 --> 00:29:53,516
We also have it on Mavericks.


671
00:29:54,066 --> 00:29:57,256
And I would just like
to take a moment here


672
00:29:57,256 --> 00:29:58,616
and compare this with Geocoding.


673
00:29:58,616 --> 00:30:00,706
So, we introduced CL
Geocoder a few years ago.


674
00:30:01,036 --> 00:30:03,636
And Geocoding is useful
and does something similar


675
00:30:03,636 --> 00:30:04,586
but not quite the same.


676
00:30:04,586 --> 00:30:06,576
So, I just want to explain
why you would use one


677
00:30:06,576 --> 00:30:07,136
and not the other.


678
00:30:07,566 --> 00:30:10,666
So, with Geocoding we have the
ability to reverse Geocoding.


679
00:30:10,666 --> 00:30:11,486
So this takes a coordinate.


680
00:30:11,486 --> 00:30:12,786
You have a latitude
and a longitude pair.


681
00:30:13,156 --> 00:30:14,646
You get an address,
a structured address.


682
00:30:14,646 --> 00:30:16,836
You can add to address book or
you can format it and display it


683
00:30:16,836 --> 00:30:17,676
to the user if you want.


684
00:30:18,776 --> 00:30:19,556
So, that's how this works.


685
00:30:19,556 --> 00:30:21,706
You drop a pin, find
the coordinate for that,


686
00:30:22,156 --> 00:30:24,306
reverse Geocode it, put the
address in the subtitle.


687
00:30:25,206 --> 00:30:26,776
Forward Geocoding
takes an address.


688
00:30:26,776 --> 00:30:28,876
You have an address
book card and you want


689
00:30:28,876 --> 00:30:29,756
to find the coordinate.


690
00:30:30,016 --> 00:30:31,856
So, in this example we'll
use the Maps app here,


691
00:30:32,426 --> 00:30:36,396
open up our contacts list, find
a contact, find the address,


692
00:30:37,476 --> 00:30:38,816
we'll Geocode that,
put a pin on the map.


693
00:30:39,876 --> 00:30:42,196
Local Search takes a
free form query string,


694
00:30:42,196 --> 00:30:43,566
so this is something
the user types in.


695
00:30:43,566 --> 00:30:45,956
I want to find you know
a user UI search bar


696
00:30:45,956 --> 00:30:48,956
and a search field, get back
a list of search results.


697
00:30:49,516 --> 00:30:53,836
So, search for coffee,
drop the pins.


698
00:30:54,016 --> 00:30:56,086
And those search
results are represented


699
00:30:56,086 --> 00:30:57,446
by a class called MKMapItem.


700
00:30:57,446 --> 00:30:59,496
We've had this around
since I was 6.0


701
00:31:00,026 --> 00:31:03,076
and its got a coordinate,
it's got a structured address


702
00:31:03,076 --> 00:31:04,236
so you can add it
to address book


703
00:31:04,776 --> 00:31:07,956
and if it's a business
we may have its name,


704
00:31:07,956 --> 00:31:09,506
its phone number and its URL.


705
00:31:09,856 --> 00:31:11,366
So, those may be
available depending


706
00:31:11,436 --> 00:31:13,086
on what the search result is.


707
00:31:14,456 --> 00:31:18,206
So in Code how this is done is
you create a request object.


708
00:31:18,496 --> 00:31:21,936
So, MKLocalSearchRequest and
you set two things on it.


709
00:31:22,156 --> 00:31:23,956
First is the query so this
is what the user typed


710
00:31:23,986 --> 00:31:26,786
in in the user's language.


711
00:31:27,736 --> 00:31:29,176
This is a query and
then the region.


712
00:31:29,576 --> 00:31:30,926
So, it's important
to set that region


713
00:31:30,926 --> 00:31:33,016
because if you don't
set it and you query


714
00:31:33,016 --> 00:31:35,206
for pizza you're not going
to get relevant results.


715
00:31:35,256 --> 00:31:37,336
So, if you have a map view
that the user can position


716
00:31:37,936 --> 00:31:39,566
or you have some other way


717
00:31:39,566 --> 00:31:41,776
of constraining you know
what the search is going


718
00:31:41,776 --> 00:31:44,096
to be you need to set
that region in order


719
00:31:44,096 --> 00:31:45,046
to get relevant results.


720
00:31:45,336 --> 00:31:46,286
So, once we've got that set


721
00:31:46,286 --> 00:31:49,376
up we'll create a search
object, MKLocalSearch object.


722
00:31:49,376 --> 00:31:50,486
We initialize it with a request.


723
00:31:50,696 --> 00:31:53,416
It's one local search
object per request.


724
00:31:53,666 --> 00:31:55,766
However, you can create multiple
requests, multiple searches


725
00:31:55,766 --> 00:31:57,166
and run them in parallel
if you want.


726
00:31:58,086 --> 00:31:59,906
So, once we have that
we'll start it up


727
00:32:00,436 --> 00:32:02,066
and we'll specify a
CompletionHandler,


728
00:32:02,066 --> 00:32:04,276
which is going to get either
a response or an error.


729
00:32:05,506 --> 00:32:08,966
This is called back on the
main queue, asynchronously


730
00:32:09,386 --> 00:32:11,606
and in this example I'm just
going to go ahead and loop


731
00:32:11,606 --> 00:32:13,566
over those map items,
get their Placemarks


732
00:32:13,566 --> 00:32:15,516
which have their coordinates
in it and I'm going


733
00:32:15,516 --> 00:32:18,176
to remove any old Placemarks on
the map and add these new ones.


734
00:32:18,176 --> 00:32:20,476
So, that's how you can put pins
on the map with Local Search.


735
00:32:21,176 --> 00:32:21,966
So, that's Local Search.


736
00:32:21,966 --> 00:32:23,676
Let's talk about a
closely related topic,


737
00:32:23,676 --> 00:32:26,856
which is directions.


738
00:32:26,926 --> 00:32:30,166
So, directions is a new API in
iOS 7 and it's on Mavericks.


739
00:32:30,656 --> 00:32:32,566
It's a general purpose
route finding API support


740
00:32:32,566 --> 00:32:34,086
in both driving and
walking directions.


741
00:32:34,506 --> 00:32:37,226
We've got support for alternate
routes, so if there's more


742
00:32:37,226 --> 00:32:39,706
than one good way to get there
and the server knows about it,


743
00:32:39,706 --> 00:32:40,616
it can recommend them both.


744
00:32:40,616 --> 00:32:42,646
And it also has support
for time estimates,


745
00:32:42,646 --> 00:32:45,426
so by default this is based on
the current traffic conditions


746
00:32:45,816 --> 00:32:47,976
but you can actually
set a departure date


747
00:32:48,896 --> 00:32:52,336
or a desired arrival
time to the future


748
00:32:52,716 --> 00:32:54,886
and we can use historical
traffic patterns


749
00:32:54,886 --> 00:32:57,566
to estimate what the travel time
is going to be at that point.


750
00:32:58,616 --> 00:33:02,036
So, that's the features of
directions and how do we use it.


751
00:33:02,436 --> 00:33:03,746
So, suppose we have this
method here and we want


752
00:33:03,746 --> 00:33:05,306
to find directions
between two places.


753
00:33:05,966 --> 00:33:06,816
It works a lot like search.


754
00:33:06,816 --> 00:33:09,696
We make a request object, we
initialize it with a source


755
00:33:09,776 --> 00:33:12,376
and destination and
those are MKMapItems.


756
00:33:13,396 --> 00:33:15,146
So, you can do a
local search for them


757
00:33:15,146 --> 00:33:16,256
or make the up yourself.


758
00:33:16,966 --> 00:33:20,456
You do that, create a
directions object and ask it


759
00:33:20,456 --> 00:33:22,656
to calculate directions and
its going to come back to you


760
00:33:22,656 --> 00:33:25,266
on the main thread
with either an error


761
00:33:25,566 --> 00:33:27,656
in which case you probably
want to show like a UI alert


762
00:33:27,656 --> 00:33:29,946
or NS alert or do
something with that.


763
00:33:30,506 --> 00:33:33,376
Otherwise, you're going
to show the response.


764
00:33:34,166 --> 00:33:36,186
And so when I talk about showing
the responsibility there's a lot


765
00:33:36,186 --> 00:33:36,916
of things you can do about it.


766
00:33:36,916 --> 00:33:38,226
There's a lot of data
in this response.


767
00:33:38,496 --> 00:33:40,846
And let's just go through really
quickly what is available.


768
00:33:41,426 --> 00:33:43,776
So, we echo back to you
the source and destination.


769
00:33:44,246 --> 00:33:47,726
So an example of this is like
if you get directions to a place


770
00:33:47,796 --> 00:33:49,856
and you know you put
it at this coordinate


771
00:33:49,856 --> 00:33:52,216
but the direction server thinks
oh, you really should arrive


772
00:33:52,216 --> 00:33:53,826
at this point because it's
going to be easier to turn


773
00:33:53,826 --> 00:33:54,786
into the driveway or whatever.


774
00:33:54,786 --> 00:33:56,646
It may move that site, so
you want to look at those.


775
00:33:57,056 --> 00:33:58,896
It's going to come back
with a list of routes


776
00:33:59,196 --> 00:34:01,486
so each route is going
to have a name to it.


777
00:34:01,616 --> 00:34:03,886
So, this is sort of the
name of the way that you go


778
00:34:03,886 --> 00:34:05,876
like US 101 South, if
you're getting directions


779
00:34:05,876 --> 00:34:06,846
from here down to Cupertino.


780
00:34:06,846 --> 00:34:08,416
It's going to give
you a distance.


781
00:34:08,416 --> 00:34:10,525
It's going to giving
you any advisory notice


782
00:34:10,565 --> 00:34:11,856
like if it requires tolls


783
00:34:11,856 --> 00:34:13,126
and you can display
that to the user.


784
00:34:14,016 --> 00:34:16,606
There's going to be an expected
travel time and there's going


785
00:34:16,606 --> 00:34:17,946
to be the geometry
as a polyline.


786
00:34:18,585 --> 00:34:20,446
And also there's going
to be a list of turn


787
00:34:20,446 --> 00:34:22,626
by turn instructions,
so these are the steps.


788
00:34:22,795 --> 00:34:24,505
And so these are going
to be the instructions,


789
00:34:24,505 --> 00:34:26,126
so for instance take exit 11


790
00:34:26,126 --> 00:34:28,896
on the De Anza Boulevard would
be one your last steps driving


791
00:34:28,896 --> 00:34:29,926
down to Apple Headquarters.


792
00:34:30,406 --> 00:34:32,636
There may be a notice on some
of the steps, so you may want


793
00:34:32,636 --> 00:34:34,235
to present that in
some special UI.


794
00:34:34,896 --> 00:34:38,146
You'll get a distance and you'll
also get a transport type.


795
00:34:38,146 --> 00:34:39,766
So, for instance, if you
got directions from here


796
00:34:39,766 --> 00:34:42,156
to Coit Tower you can't drive
all the way to Coit Tower.


797
00:34:42,156 --> 00:34:43,636
You can drive almost
there and then you got


798
00:34:43,636 --> 00:34:45,386
to walk the rest of the way.


799
00:34:45,565 --> 00:34:47,686
This step may have a
walking step at the end


800
00:34:47,686 --> 00:34:48,735
if you got driving directions.


801
00:34:49,196 --> 00:34:51,136
And then the other thing is
you can get the step geometry


802
00:34:51,136 --> 00:34:51,806
as a polyline.


803
00:34:51,806 --> 00:34:54,246
So, this is basically
the subsequence


804
00:34:54,246 --> 00:34:55,326
of that overall geometry.


805
00:34:56,815 --> 00:34:58,906
So, suppose we want to display
something like this on the map.


806
00:34:59,296 --> 00:35:00,686
Here's the routes
from San Franciso


807
00:35:01,126 --> 00:35:02,646
down to Cupertino,
three ways to do it.


808
00:35:03,496 --> 00:35:04,716
And here's some code to do that.


809
00:35:05,146 --> 00:35:08,706
So, we'll just loop over all
the routes and add an overlay


810
00:35:08,866 --> 00:35:11,416
of those polylines for each
of the routes to the map.


811
00:35:11,986 --> 00:35:13,586
The other thing you might
want to do is you might want


812
00:35:13,586 --> 00:35:14,396
to show it in a table view.


813
00:35:14,846 --> 00:35:19,146
So, for instance in California
there is always a way,


814
00:35:19,796 --> 00:35:20,846
more than one way to get there.


815
00:35:20,846 --> 00:35:23,776
You can take the 280,
you can take the 101,


816
00:35:24,286 --> 00:35:25,396
you can take the 880.


817
00:35:25,636 --> 00:35:28,606
You've got choices and
if you want to do this,


818
00:35:28,606 --> 00:35:31,006
suppose we're the data
source for a table view.


819
00:35:31,006 --> 00:35:34,686
And what we'll do is we'll have
this route, so we find the route


820
00:35:34,686 --> 00:35:37,416
that we want to show and we'll
set the text of that cell


821
00:35:37,686 --> 00:35:38,586
to the name of the route.


822
00:35:39,736 --> 00:35:41,636
We have a new class in iOs 7,


823
00:35:41,636 --> 00:35:43,616
also in Mavericks that's
a distance formatter.


824
00:35:44,096 --> 00:35:46,136
This is an NS formatter
subclass that allows you


825
00:35:46,136 --> 00:35:47,336
to format distances according


826
00:35:47,336 --> 00:35:49,776
to the user interface
language and locale.


827
00:35:50,316 --> 00:35:52,696
So, in the United
States we'll use miles.


828
00:35:52,696 --> 00:35:53,636
Elsewhere we'll use kilometers.


829
00:35:53,636 --> 00:35:55,436
[ Applause ]


830
00:35:55,436 --> 00:36:01,206
Cool. I'm glad you guys liked
that and we'll go ahead and use


831
00:36:01,206 --> 00:36:03,746
that distance formatter and
we'll use NS data formatter,


832
00:36:03,746 --> 00:36:06,126
which I'm going to handwave
here and then we can show


833
00:36:06,126 --> 00:36:08,086
that expected arrival
time in distance.


834
00:36:08,086 --> 00:36:09,566
So, that's how we do that.


835
00:36:09,756 --> 00:36:11,066
So, I'm going to do
a quick demo here


836
00:36:11,186 --> 00:36:12,946
of adding walking
directions to an app.


837
00:36:12,946 --> 00:36:14,736
I'm going to recycle
another demo.


838
00:36:15,136 --> 00:36:16,576
This is one we showed last year


839
00:36:17,566 --> 00:36:22,136
and what it did was it
showed Caltrain directions.


840
00:36:22,386 --> 00:36:27,176
And it was really just kind of
a basic app and we just used it


841
00:36:27,176 --> 00:36:29,486
to show routing apps in maps.


842
00:36:29,896 --> 00:36:35,856
And I'm just going to
build and run this.


843
00:36:35,856 --> 00:36:40,646
Get this guy going here.


844
00:36:40,646 --> 00:36:43,356
It's really just you know a very
basic just kind of a sample app


845
00:36:44,086 --> 00:36:48,766
and it gives Caltrain
directions between two points.


846
00:36:48,906 --> 00:36:51,286
And the thing about Caltrian
is it doesn't go to Cupertino.


847
00:36:51,426 --> 00:36:53,226
It goes to Sunnyvale.


848
00:36:53,606 --> 00:36:55,456
And what we'd like to do is
sort of fill in the gaps.


849
00:36:55,456 --> 00:36:58,246
Let's improve this app so we can
have walking directions to get


850
00:36:58,246 --> 00:37:00,046
from you know how do we get


851
00:37:00,136 --> 00:37:01,706
to the train station
we're departing from


852
00:37:01,706 --> 00:37:03,936
and from their arrival
transition how do we get


853
00:37:03,936 --> 00:37:04,666
to our destination?


854
00:37:04,826 --> 00:37:10,296
So, let's quit that and add
some code and some notes here.


855
00:37:10,626 --> 00:37:15,206
So, what I'm going to do--


856
00:37:15,426 --> 00:37:19,516
it's a sample application,
but it's kind of big.


857
00:37:19,516 --> 00:37:21,856
And we don't need to
understand the whole thing


858
00:37:21,856 --> 00:37:22,856
in order to modify it.


859
00:37:22,856 --> 00:37:23,826
So, what we have here is the--


860
00:37:23,826 --> 00:37:25,946
these are the properties on
this view controller here


861
00:37:25,946 --> 00:37:26,626
and it has a route.


862
00:37:26,926 --> 00:37:29,966
This route object is an internal
object to this application


863
00:37:30,226 --> 00:37:31,756
and it represents
a Caltrain route.


864
00:37:31,796 --> 00:37:33,186
So, this is what it has.


865
00:37:33,456 --> 00:37:36,116
What I want to add alongside
of this is two MKRoutes


866
00:37:36,116 --> 00:37:38,306
that we're going to get
from the Directions API.


867
00:37:38,306 --> 00:37:40,166
So, we're going to have
the walking leg one.


868
00:37:40,166 --> 00:37:42,436
This is how we get to our
departure train station


869
00:37:43,056 --> 00:37:44,566
and walking leg two, which is--


870
00:37:44,926 --> 00:37:46,726
this is how we get from
our arrival train station


871
00:37:46,726 --> 00:37:47,916
to our final destination.


872
00:37:48,366 --> 00:37:51,456
So, add properties for
that and what we're going


873
00:37:51,456 --> 00:37:52,726
to do is just scroll down here.


874
00:37:53,276 --> 00:37:56,456
And I see this method
here ClearRoute.


875
00:37:56,456 --> 00:37:59,046
Obviously we just need
to add some stuff here.


876
00:37:59,106 --> 00:38:02,486
So, if we clear that Caltrain
route let's also clear our


877
00:38:02,486 --> 00:38:03,746
walking route.


878
00:38:04,676 --> 00:38:10,826
That's good and once we've
gotten the route it goes ahead


879
00:38:10,826 --> 00:38:13,446
and adds annotations for
the start and the stop


880
00:38:13,446 --> 00:38:17,156
and it adds an overlay for
the Caltrain route's polyline.


881
00:38:17,876 --> 00:38:20,866
And I'm going to add
those walking polylines.


882
00:38:21,486 --> 00:38:25,016
I know we don't have them yet,
but hopefully we will get them


883
00:38:25,016 --> 00:38:27,136
and when we do we're going
to want to show them.


884
00:38:27,136 --> 00:38:29,606
Another thing I noted about
this is this is using this old


885
00:38:29,766 --> 00:38:31,476
overlay, AddOverlay API.


886
00:38:31,476 --> 00:38:33,446
It's just going to
add it AboveLabels.


887
00:38:33,446 --> 00:38:41,656
Let's put them BelowLabels
while we're in here.


888
00:38:41,656 --> 00:38:41,886
[ Silence ]


889
00:38:41,886 --> 00:38:48,666
>> There we go, so a
bit of formatting there.


890
00:38:49,646 --> 00:38:51,386
And let's go ahead and--


891
00:38:51,606 --> 00:38:54,536
I know that we implement
ViewForOverlay in here.


892
00:38:55,316 --> 00:38:58,126
This is old and busted, delete.


893
00:39:00,096 --> 00:39:04,156
New, RendererForOverlay.


894
00:39:04,456 --> 00:39:05,596
So the only difference
here is we're going


895
00:39:05,596 --> 00:39:07,926
to make polyline renderers
and we'll do a blue one


896
00:39:08,186 --> 00:39:10,876
if the polyline that
we're being asked for,


897
00:39:10,876 --> 00:39:13,036
the overlay we're being asked
for is for the Caltrain route.


898
00:39:13,036 --> 00:39:14,506
Otherwise, it's one
of the walking routes.


899
00:39:14,506 --> 00:39:15,316
Let's do a gray line.


900
00:39:15,636 --> 00:39:16,356
So, we'll put that in there.


901
00:39:16,436 --> 00:39:19,686
And then the last thing is the
thing we're all here to see.


902
00:39:20,066 --> 00:39:24,676
There's this method
route from place in here.


903
00:39:25,296 --> 00:39:27,566
So, this is an internal
object representing a place.


904
00:39:27,606 --> 00:39:30,386
This is where we're
going to start leaving


905
00:39:30,386 --> 00:39:32,856
from and where it goes to.


906
00:39:32,856 --> 00:39:35,506
And what this application did is
it just said give me the closest


907
00:39:35,506 --> 00:39:38,066
stop, the closest stop.


908
00:39:38,356 --> 00:39:39,266
Well, how do we get there?


909
00:39:39,896 --> 00:39:41,206
Don't know; this
app doesn't do that.


910
00:39:41,206 --> 00:39:43,556
And then it just routes from
the start stop to the end stop.


911
00:39:44,066 --> 00:39:45,266
Let's not do that.


912
00:39:45,546 --> 00:39:50,186
Let's delete that and add this
code, just kind of a big block


913
00:39:50,186 --> 00:39:52,976
of code and I'll walk you
through it really quickly.


914
00:39:53,116 --> 00:39:55,206
So, we're going to make
a directions request


915
00:39:55,476 --> 00:39:56,236
for the first leg.


916
00:39:56,306 --> 00:40:00,026
We're going to set the transport
type to walking and we're going


917
00:40:00,026 --> 00:40:01,196
to set the source
and the destination


918
00:40:01,196 --> 00:40:02,836
to be the start place,
so this is


919
00:40:02,916 --> 00:40:04,856
where we're actually
departing from where we are now


920
00:40:04,856 --> 00:40:08,186
and then we're going to
set it to the train station


921
00:40:08,186 --> 00:40:09,156
that we want to leave from.


922
00:40:09,346 --> 00:40:12,846
So, we'll create a
directions object for that.


923
00:40:12,846 --> 00:40:15,106
Ask it to calculate directions
and it's going to come back


924
00:40:15,106 --> 00:40:17,746
to us on the main queue
and either we're going


925
00:40:17,746 --> 00:40:19,466
to be having an error in
which case we're going to have


926
00:40:19,466 --> 00:40:21,856
to display an alert and we're
all going to be very sad


927
00:40:22,676 --> 00:40:25,076
or we'll get back a walking leg.


928
00:40:25,076 --> 00:40:27,236
So, this is-- we didn't
ask for alternate routes,


929
00:40:27,236 --> 00:40:28,236
so there's going to be just one.


930
00:40:28,826 --> 00:40:30,136
So, we'll get that first route


931
00:40:30,526 --> 00:40:31,976
and we'll stash in
that property.


932
00:40:32,586 --> 00:40:38,426
So, we'll do the same thing for
leg two and hopefully we succeed


933
00:40:38,786 --> 00:40:39,926
and we end up stashing it there


934
00:40:40,846 --> 00:40:42,786
and then finally we can get
the Caltrain directions now


935
00:40:42,786 --> 00:40:44,216
that we've got the walking
directions that we need.


936
00:40:44,396 --> 00:40:46,406
And the thing I'll say
about this is for simplicity


937
00:40:46,406 --> 00:40:48,446
up here I've done
these serially.


938
00:40:48,446 --> 00:40:50,256
You could run them in
parallel if you want.


939
00:40:50,256 --> 00:40:52,386
There's no reason that
you can't do that.


940
00:40:52,386 --> 00:40:53,676
I just did it this
way to be simple.


941
00:40:53,676 --> 00:40:55,226
So, let's just build and run.


942
00:40:55,226 --> 00:40:55,296
[ Silence ]


943
00:40:55,296 --> 00:40:55,646
Directions.


944
00:40:59,776 --> 00:41:01,566
And the other thing I would say


945
00:41:01,566 --> 00:41:04,036
about this is I actually
cheated a little bit and I went


946
00:41:04,036 --> 00:41:05,536
and I updated this
sample I had this time


947
00:41:05,536 --> 00:41:08,716
to use LocalSearch instead
of using the Geocoder,


948
00:41:08,716 --> 00:41:09,466
which it originally is.


949
00:41:09,846 --> 00:41:13,346
So, we can actually go from
Mascone West now and let's go


950
00:41:13,346 --> 00:41:15,346
to a place in Palo
Alto that I know


951
00:41:15,346 --> 00:41:17,246
about called Antonio's Nuthouse.


952
00:41:17,716 --> 00:41:23,326
Get directions, and
now if we zoom


953
00:41:23,326 --> 00:41:26,646
in on the map we can see
we've got walking directions


954
00:41:26,686 --> 00:41:29,636
from Mascone West here,
walk down 4th Street;


955
00:41:29,636 --> 00:41:32,456
it's not a long walk, get on
the Caltrain at 4th and King,


956
00:41:33,456 --> 00:41:39,266
zoom out, go down and
we'll get off in Palo Alto


957
00:41:39,266 --> 00:41:42,416
at the [inaudible] Station
and it's just a short block


958
00:41:42,416 --> 00:41:44,626
and a half walk to the
Nuthouse, which is right here.


959
00:41:45,926 --> 00:41:48,136
So, that's how you can
add walking directions


960
00:41:48,136 --> 00:41:49,586
to an existing routing app.


961
00:41:50,936 --> 00:41:53,196
And this is really just kind of
scratching the surface of it.


962
00:41:53,196 --> 00:41:54,576
[ Applause ]


963
00:41:54,576 --> 00:41:54,836
Thank you.


964
00:41:59,136 --> 00:42:00,856
There's obviously a lot
more you could do with it.


965
00:42:00,856 --> 00:42:02,326
This just sort of
scratches the surface


966
00:42:02,366 --> 00:42:04,276
but I hope you get
the idea there.


967
00:42:06,006 --> 00:42:07,036
Let's go back to the slides.


968
00:42:09,906 --> 00:42:11,386
So, we saw how to use
the Directions API


969
00:42:11,446 --> 00:42:13,236
to augment an existing
routing app.


970
00:42:13,236 --> 00:42:15,376
So, I hope that if you have a
routing app right now you have


971
00:42:15,376 --> 00:42:16,886
something on there
stored and you say oh,


972
00:42:16,886 --> 00:42:18,166
I wish I had walking directions.


973
00:42:18,166 --> 00:42:18,876
I wish I could add this.


974
00:42:19,256 --> 00:42:20,286
Please go ahead and do that


975
00:42:20,726 --> 00:42:22,286
and then the other
thing we saw is how


976
00:42:22,286 --> 00:42:24,046
to show those MKRoutes
on MKMapView.


977
00:42:25,116 --> 00:42:25,656
So, that's that.


978
00:42:26,076 --> 00:42:27,926
So, now I want to talk about
the fact that Directions


979
00:42:27,976 --> 00:42:29,316
and Search are server-based.


980
00:42:29,426 --> 00:42:31,476
So, they require a network
connection to operate.


981
00:42:32,266 --> 00:42:33,236
And the other thing I'll say


982
00:42:33,236 --> 00:42:34,896
about them is don't cache
the results for too long.


983
00:42:34,896 --> 00:42:38,336
If you get driving directions
and you hold onto them


984
00:42:38,336 --> 00:42:40,216
for a week, you know
you store them on disk,


985
00:42:40,546 --> 00:42:42,346
you pull those back up,
things may have changed.


986
00:42:42,346 --> 00:42:43,836
The traffic conditions
may have changed.


987
00:42:44,286 --> 00:42:46,126
There may be a road closure
or something like that.


988
00:42:46,126 --> 00:42:47,476
So, you want to rerequest
those things


989
00:42:47,546 --> 00:42:48,336
to get more up to date data.


990
00:42:48,336 --> 00:42:49,756
And the same thing goes
for Search as well.


991
00:42:51,086 --> 00:42:52,056
And the other thing
I want to talk


992
00:42:52,056 --> 00:42:55,626
about is the Usage
Limits on this API.


993
00:42:55,866 --> 00:42:58,676
So, I'm happy to announce
that there's no application


994
00:42:58,676 --> 00:43:00,566
or developer identifier
wide usage limits.


995
00:43:00,776 --> 00:43:03,576
So, if you have a app that has
a lot of users and you want


996
00:43:03,576 --> 00:43:05,396
to do a lot of requests,
that's fine.


997
00:43:05,576 --> 00:43:05,946
It'll work.


998
00:43:06,446 --> 00:43:11,036
[ Applause ]


999
00:43:11,536 --> 00:43:14,796
And the throttling that we do
have is really just a first line


1000
00:43:14,796 --> 00:43:15,756
of defense against buggy apps.


1001
00:43:15,756 --> 00:43:18,646
So, if you put directions
requests


1002
00:43:18,646 --> 00:43:21,316
or local search requests in an
infinite loop, you've got a bug,


1003
00:43:21,686 --> 00:43:23,016
eventually you're
going to get throttled.


1004
00:43:23,276 --> 00:43:24,926
But if you do something
reasonable, you say oh,


1005
00:43:24,926 --> 00:43:27,126
I'm going to just do directions
in response to user input


1006
00:43:27,126 --> 00:43:28,696
and you know you can
do a few of those


1007
00:43:28,696 --> 00:43:30,086
because we showed
them that example.


1008
00:43:30,086 --> 00:43:32,086
Like we did two directions
request in response


1009
00:43:32,086 --> 00:43:33,096
to one user input, that's fine.


1010
00:43:33,556 --> 00:43:37,696
But, you know if you're doing
10,000 every time the user taps


1011
00:43:37,696 --> 00:43:39,286
on the screen, then you're
going to get throttled.


1012
00:43:39,286 --> 00:43:41,156
But, just keep it
reasonable and you'll be fine.


1013
00:43:42,256 --> 00:43:43,076
So, that's everything.


1014
00:43:43,296 --> 00:43:44,476
Let's go into our conclusion.


1015
00:43:45,156 --> 00:43:46,566
So, what did we learn?


1016
00:43:46,836 --> 00:43:47,966
There's many new features.


1017
00:43:47,966 --> 00:43:49,456
In fact, we couldn't even
have covered them all


1018
00:43:49,456 --> 00:43:49,926
in this session.


1019
00:43:49,926 --> 00:43:51,006
We have a session coming up.


1020
00:43:51,606 --> 00:43:53,446
The first of which
was Map Kit OS X,


1021
00:43:53,886 --> 00:43:55,486
which is I think my
favorite feature.


1022
00:43:55,756 --> 00:43:59,156
I'm really excited to see what
you guys come up with on OS X.


1023
00:43:59,836 --> 00:44:02,256
There's the updates to iOS 7 UI.


1024
00:44:02,486 --> 00:44:04,046
So, there's a new UI in iOS 7


1025
00:44:04,046 --> 00:44:06,216
and that changes a few
things in MKMapView.


1026
00:44:07,496 --> 00:44:09,876
We've got 3D maps and
spanning the 180th meridian.


1027
00:44:10,956 --> 00:44:12,676
We've got new Overlays
Functionality


1028
00:44:12,676 --> 00:44:15,196
so we've got polylines,
polygons,


1029
00:44:15,196 --> 00:44:17,016
other overlays underneath
your labels.


1030
00:44:17,016 --> 00:44:18,386
We've got the geodesic
polylines.


1031
00:44:18,386 --> 00:44:19,696
We've got MKTileOverlay.


1032
00:44:20,186 --> 00:44:23,056
We've got the ability to replace
Apple's Map Data with your own


1033
00:44:23,056 --> 00:44:25,046
and we've got Performance
Improvement for Overlays.


1034
00:44:26,266 --> 00:44:28,846
We've got the Search API
and the Directions API.


1035
00:44:30,026 --> 00:44:33,216
So, what I'd like to ask you
to do is try these things out.


1036
00:44:33,376 --> 00:44:33,976
Try them soon.


1037
00:44:33,976 --> 00:44:34,596
Like try them this week.


1038
00:44:34,756 --> 00:44:35,456
Try them next week.


1039
00:44:35,766 --> 00:44:39,916
I want it to work for you,
but if it doesn't please go


1040
00:44:39,916 --> 00:44:42,426
to bugreport.apple.com and file
a bug so that we can fix it.


1041
00:44:43,736 --> 00:44:46,016
For more information you can
email our Evangelist who's


1042
00:44:46,016 --> 00:44:46,826
Paul Marcos.


1043
00:44:46,826 --> 00:44:47,806
That's his email up there.


1044
00:44:48,216 --> 00:44:49,616
We've got some Documentation.


1045
00:44:49,796 --> 00:44:51,866
I know that's a long URL but if
you on our website and search


1046
00:44:51,866 --> 00:44:54,166
for MKMapUIDeveloper.apple.com
you'll find it.


1047
00:44:54,506 --> 00:44:56,356
There's also the Location
Awareness Programming Guide,


1048
00:44:56,356 --> 00:44:57,936
which has info on
both Core Location


1049
00:44:57,976 --> 00:44:59,546
and Map Kit, which is good.


1050
00:44:59,866 --> 00:45:03,116
And there's the Developer Forum
which I try to read occasionally


1051
00:45:03,186 --> 00:45:04,596
and so I may see you in there.


1052
00:45:05,946 --> 00:45:08,046
And the next thing to say is
we've got a session at 2:00.


1053
00:45:08,456 --> 00:45:09,496
You should go to the session.


1054
00:45:09,576 --> 00:45:11,226
It's the second half of this.


1055
00:45:11,296 --> 00:45:14,176
There's a whole bunch
more content on 3D Maps.


1056
00:45:14,626 --> 00:45:16,556
We also got Static Map
Snapshots, which we're going


1057
00:45:16,556 --> 00:45:18,346
to cover in there
and you should attend


1058
00:45:18,346 --> 00:45:19,306
that session this afternoon.


1059
00:45:19,746 --> 00:45:20,486
So, that's everything.


1060
00:45:20,846 --> 00:45:21,616
Thank you all very much.


1061
00:45:22,116 --> 00:45:28,980
[ Applause ]

