1
00:00:02,569 --> 00:00:04,771
The ClockKit
framework allows you to display


2
00:00:04,771 --> 00:00:06,907
your app’s data
on the watch face.


3
00:00:06,907 --> 00:00:09,476
These areas are called
complications.


4
00:00:09,476 --> 00:00:11,612
Complications are a great way


5
00:00:11,612 --> 00:00:13,814
to connect people
to their favorite apps


6
00:00:13,814 --> 00:00:15,115
with every wrist raise


7
00:00:15,115 --> 00:00:17,851
and keep them informed
throughout their day.


8
00:00:17,851 --> 00:00:22,556
Complications can also be tapped
for quick access into the app.


9
00:00:22,556 --> 00:00:24,358
With Apple Watch Series 4,


10
00:00:24,358 --> 00:00:27,694
we’re adding new complication
capabilities to ClockKit,


11
00:00:27,694 --> 00:00:29,830
which allow you to create
engaging,


12
00:00:29,830 --> 00:00:33,367
full-color complications
for the new Infograph


13
00:00:33,367 --> 00:00:36,236
and Infograph Modular
watch faces.


14
00:00:36,236 --> 00:00:38,038
On the Infograph watch face,


15
00:00:38,038 --> 00:00:40,073
these new complications
can extend


16
00:00:40,073 --> 00:00:43,911
into the corners
of the incredible new display.


17
00:00:43,911 --> 00:00:46,013
On the Infograph Modular
watch face,


18
00:00:46,013 --> 00:00:47,347
you can now present


19
00:00:47,347 --> 00:00:50,584
even more of your app’s
information in full-color,


20
00:00:50,584 --> 00:00:53,453
right in the middle
of the watch face.


21
00:00:53,453 --> 00:00:56,189
Complications are divided
into families.


22
00:00:56,189 --> 00:00:59,626
These determine how information
is presented onscreen.


23
00:00:59,626 --> 00:01:04,096
On Apple Watch Series 4,
we’ve added four new families:


24
00:01:04,096 --> 00:01:06,667
Graphic Corner,
Graphic Circular,


25
00:01:06,667 --> 00:01:10,270
Graphic Bezel,
and Graphic Rectangular.


26
00:01:10,270 --> 00:01:14,241
Each complication family uses
system-defined templates


27
00:01:14,241 --> 00:01:16,677
to determine how the information
is laid out,


28
00:01:16,677 --> 00:01:19,713
like the Graphic Circular family
seen here.


29
00:01:19,713 --> 00:01:22,282
There are many templates
for you to choose from


30
00:01:22,282 --> 00:01:24,217
to display your data.


31
00:01:24,217 --> 00:01:26,987
The complication family
templates each consist


32
00:01:26,987 --> 00:01:29,856
of different combinations
of data provider classes


33
00:01:29,856 --> 00:01:31,692
from the ClockKit framework,


34
00:01:31,692 --> 00:01:37,431
from text to images
to the all-new gauges.


35
00:01:37,431 --> 00:01:40,500
For the Infograph and Infograph
Modular watch faces,


36
00:01:40,500 --> 00:01:43,303
we’ve added
a new full-color image provider


37
00:01:43,303 --> 00:01:45,172
and a new gauge provider.


38
00:01:45,172 --> 00:01:47,741
Let’s learn about these.


39
00:01:47,741 --> 00:01:50,243
First is the all-new
gauge provider.


40
00:01:50,243 --> 00:01:53,580
Gauge providers allow you
to show progress completed


41
00:01:53,580 --> 00:01:56,917
or a value within a range
to the user in different ways,


42
00:01:56,917 --> 00:02:00,854
depending on the complication
template family you are using.


43
00:02:00,854 --> 00:02:03,390
You can also use
a time interval gauge


44
00:02:03,390 --> 00:02:06,360
to automatically animate
the values as they change,


45
00:02:06,360 --> 00:02:09,763
as you see here
with the timer complication.


46
00:02:09,763 --> 00:02:12,499
With gauge providers,
you can provide a single color


47
00:02:12,499 --> 00:02:14,234
or you can provide a gradient,


48
00:02:14,234 --> 00:02:17,437
specifying the gradient colors
along the gauge.


49
00:02:17,437 --> 00:02:20,340
You can also specify
whether the color or gradient


50
00:02:20,340 --> 00:02:22,976
will fill the gauge
as the data progresses


51
00:02:22,976 --> 00:02:27,948
or if it’s a range and uses
a ring to indicate the value.


52
00:02:27,948 --> 00:02:29,983
Next, we have image providers.


53
00:02:29,983 --> 00:02:33,086
Image providers allow you
to display a tintable image


54
00:02:33,086 --> 00:02:37,157
or a one-color image for use
on existing watch faces,


55
00:02:37,157 --> 00:02:40,994
and now on the Infograph and
Infograph Modular watch faces,


56
00:02:40,994 --> 00:02:43,430
full color images.


57
00:02:43,430 --> 00:02:46,733
Finally, we have text providers,
which allow you to use text


58
00:02:46,733 --> 00:02:48,802
throughout the various
templates.


59
00:02:48,802 --> 00:02:51,071
They can be used
to display text,


60
00:02:51,071 --> 00:02:55,909
dates, time, time ranges,
and even automatic countdowns


61
00:02:55,909 --> 00:02:59,846
or count-ups between two dates
or times.


62
00:02:59,846 --> 00:03:02,449
In a handful of complication
family templates,


63
00:03:02,449 --> 00:03:06,186
you can also now use multiple
text providers together,


64
00:03:06,186 --> 00:03:08,288
each with their own tint color,


65
00:03:08,288 --> 00:03:10,757
to make one
multi-purpose string.


66
00:03:10,757 --> 00:03:12,159
This can be really useful


67
00:03:12,159 --> 00:03:14,294
if your app has
specific branding


68
00:03:14,294 --> 00:03:17,431
for different pieces of data.


69
00:03:17,431 --> 00:03:19,099
Now that you’re familiar
with the gauge,


70
00:03:19,099 --> 00:03:20,967
image, and text providers,


71
00:03:20,967 --> 00:03:24,438
let’s look at the new graphic
complication family templates


72
00:03:24,438 --> 00:03:28,942
available on the Infograph and
Infograph Modular watch faces


73
00:03:28,942 --> 00:03:32,212
and learn how to combine
providers to display your data


74
00:03:32,212 --> 00:03:34,748
in different ways.


75
00:03:34,748 --> 00:03:37,150
The first new complication
family template


76
00:03:37,150 --> 00:03:38,885
is the Graphic Corner.


77
00:03:38,885 --> 00:03:42,456
This is available for use
on the Infograph watch face.


78
00:03:42,456 --> 00:03:45,225
This template curves along
the corner of the display


79
00:03:45,225 --> 00:03:48,829
to allow for more content
like never before.


80
00:03:48,829 --> 00:03:50,831
The Graphic Corner templates
have a handful


81
00:03:50,831 --> 00:03:54,000
of different combinations
of providers to use.


82
00:03:54,000 --> 00:03:56,603
You can use a gauge provider
with text,


83
00:03:56,603 --> 00:03:59,439
a gauge provider with an image,


84
00:03:59,439 --> 00:04:01,741
a set of text providers,


85
00:04:01,741 --> 00:04:04,177
a text provider with an image.


86
00:04:04,177 --> 00:04:08,515
And finally, you can use
a full-color image by itself.


87
00:04:08,515 --> 00:04:11,785
Now, for consistency
with other corner complications,


88
00:04:11,785 --> 00:04:13,820
it’s recommended
that you use providers


89
00:04:13,820 --> 00:04:16,389
that will curve
around the display.


90
00:04:16,389 --> 00:04:19,091
OK, let’s look at a code example


91
00:04:19,091 --> 00:04:21,827
of how to create
a graphic corner complication


92
00:04:21,827 --> 00:04:24,498
that uses a gauge provider
with text.


93
00:04:24,498 --> 00:04:27,200
Let’s make something similar
to the Weather app.


94
00:04:28,268 --> 00:04:30,637
First, we’ll need to work
with our designer


95
00:04:30,637 --> 00:04:33,940
to get some values
for the text tint colors.


96
00:04:33,940 --> 00:04:34,875
In this example,


97
00:04:34,875 --> 00:04:39,679
we have text showing our high,
low, and current temperatures.


98
00:04:39,679 --> 00:04:42,048
We will also need an array
of values


99
00:04:42,048 --> 00:04:44,451
for which colors
will make up the gradient.


100
00:04:44,451 --> 00:04:46,720
Here, we’re going to use
three colors.


101
00:04:46,720 --> 00:04:49,556
One for the low,
one for the middle of the range,


102
00:04:49,556 --> 00:04:51,324
and one for the high.


103
00:04:51,324 --> 00:04:54,361
watchOS will take care
of the gradient between colors,


104
00:04:54,361 --> 00:04:57,330
so the only additional
information we need to provide


105
00:04:57,330 --> 00:04:59,766
is an array of values to express


106
00:04:59,766 --> 00:05:04,871
where each color should
be located along the gauge.


107
00:05:04,871 --> 00:05:06,740
Now that we have
all of our values,


108
00:05:06,740 --> 00:05:10,343
we need to create our graphic
corner complication template.


109
00:05:10,343 --> 00:05:12,712
We’re going to create
a corner complication


110
00:05:12,712 --> 00:05:14,814
with a gauge provider
and text provider,


111
00:05:14,814 --> 00:05:19,719
so we create an instance of the
GraphicCornerGaugeText template.


112
00:05:19,719 --> 00:05:21,855
Once we’ve created
our template instance,


113
00:05:21,855 --> 00:05:23,757
we need to create
the providers for it,


114
00:05:23,757 --> 00:05:25,725
starting with
the gauge provider.


115
00:05:25,725 --> 00:05:28,995
Here we’re using
CLKSimpleGaugeProvider.


116
00:05:28,995 --> 00:05:30,630
The style can be a ring,


117
00:05:30,630 --> 00:05:33,333
which displays a ring
around the value in the gauge,


118
00:05:33,333 --> 00:05:36,236
or a fill, if you’re wanting
to fill the progress


119
00:05:36,236 --> 00:05:37,637
within the gauge.


120
00:05:37,637 --> 00:05:39,940
Here we’ll use the ring style.


121
00:05:39,940 --> 00:05:41,908
Next, we set our gauge colors


122
00:05:41,908 --> 00:05:44,344
to the gradient colors
we created earlier,


123
00:05:44,344 --> 00:05:46,546
as well as the gauge color
locations,


124
00:05:46,546 --> 00:05:50,016
which will define where
the colors are along our gauge.


125
00:05:50,016 --> 00:05:53,019
Finally, we need to set
the fill fraction.


126
00:05:53,019 --> 00:05:55,288
This sets the current value
for the gauge


127
00:05:55,288 --> 00:05:58,558
and should be dynamic,
depending on your data.


128
00:05:58,558 --> 00:06:02,362
Next, we set the gauge provider
property of the corner template


129
00:06:02,362 --> 00:06:05,198
and set the various
text providers for the template,


130
00:06:05,198 --> 00:06:08,868
which we created earlier in code
with tint colors for each.


131
00:06:08,868 --> 00:06:11,871
All that’s left is to pass in
the completed template


132
00:06:11,871 --> 00:06:14,207
to create a timeline entry.


133
00:06:14,207 --> 00:06:15,542
This looks great.


134
00:06:15,542 --> 00:06:17,477
You can see our gradient
between colors


135
00:06:17,477 --> 00:06:19,346
is handled by the system,


136
00:06:19,346 --> 00:06:20,914
and our ring-style
gauge provider


137
00:06:20,914 --> 00:06:24,317
centers in the ring
on our current value.


138
00:06:24,317 --> 00:06:25,552
Next, let’s look at


139
00:06:25,552 --> 00:06:28,488
the graphic circular
complication family templates


140
00:06:28,488 --> 00:06:30,557
available on both the Infograph


141
00:06:30,557 --> 00:06:33,860
and Infograph Modular
watch faces.


142
00:06:33,860 --> 00:06:36,429
The Graphic Circular templates
provide the ability


143
00:06:36,429 --> 00:06:39,332
to combine gauge providers
with text providers


144
00:06:39,332 --> 00:06:40,800
to show an open gauge


145
00:06:40,800 --> 00:06:43,403
with values
at the end of a range.


146
00:06:43,403 --> 00:06:45,272
You can also create a template
with text


147
00:06:45,272 --> 00:06:48,475
below the center text value
with an open gauge,


148
00:06:48,475 --> 00:06:51,177
as well as use a full-color
image provider


149
00:06:51,177 --> 00:06:54,014
below the center text
with an open gauge.


150
00:06:54,014 --> 00:06:55,815
Using a closed gauge,


151
00:06:55,815 --> 00:06:57,517
you can provide
a full-color image


152
00:06:57,517 --> 00:07:00,587
inside of the gauge or text.


153
00:07:00,587 --> 00:07:02,989
And finally, you can use
a full-color image


154
00:07:02,989 --> 00:07:07,560
to represent the entire area
of the complication.


155
00:07:07,560 --> 00:07:09,162
In our previous example,


156
00:07:09,162 --> 00:07:11,498
we created a graphic
corner complication


157
00:07:11,498 --> 00:07:13,500
representing weather data.


158
00:07:13,500 --> 00:07:15,602
Now, let’s take that same data


159
00:07:15,602 --> 00:07:18,204
and create a graphic
circular complication


160
00:07:18,204 --> 00:07:21,174
using an open gauge
with text.


161
00:07:21,174 --> 00:07:23,476
The text providers,
gradient colors,


162
00:07:23,476 --> 00:07:26,246
and gradient color locations
we're going to use


163
00:07:26,246 --> 00:07:27,947
are the same as we used


164
00:07:27,947 --> 00:07:30,383
in the graphic
corner complication.


165
00:07:30,383 --> 00:07:33,353
The main difference
is that we need to instantiate


166
00:07:33,353 --> 00:07:37,257
the graphic circular open gauge
range text template.


167
00:07:37,257 --> 00:07:40,360
We will create the gauge
provider as we did last time.


168
00:07:40,360 --> 00:07:42,762
One additional change
is that we will set


169
00:07:42,762 --> 00:07:45,765
the center text provider
property for the template,


170
00:07:45,765 --> 00:07:47,701
where on the graphic
circular template,


171
00:07:47,701 --> 00:07:50,003
this was an outer text provider.


172
00:07:50,003 --> 00:07:51,237
And that’s all.


173
00:07:51,237 --> 00:07:54,407
Now we have our graphic
circular complication.


174
00:07:54,407 --> 00:07:56,609
But there’s more that we can do


175
00:07:56,609 --> 00:07:59,479
with a graphic circular
complication.


176
00:07:59,479 --> 00:08:01,348
On the Infograph watch face,


177
00:08:01,348 --> 00:08:04,451
there is another family called
Graphic Bezel.


178
00:08:04,451 --> 00:08:07,754
This utilizes a graphic
circular complication


179
00:08:07,754 --> 00:08:09,823
and adds a text provider to it


180
00:08:09,823 --> 00:08:12,892
to wrap the text
within the time bezel.


181
00:08:12,892 --> 00:08:16,996
First, we start by creating
a graphic circular template.


182
00:08:16,996 --> 00:08:17,997
In this example,


183
00:08:17,997 --> 00:08:19,599
we’ll use the one
we just created


184
00:08:19,599 --> 00:08:21,468
in our last example.


185
00:08:21,468 --> 00:08:24,504
Once the graphic circular
template is configured,


186
00:08:24,504 --> 00:08:25,905
we create an instance of


187
00:08:25,905 --> 00:08:28,842
the GraphicBezelCircularText
template.


188
00:08:28,842 --> 00:08:31,745
This takes a configured
graphic circular template


189
00:08:31,745 --> 00:08:34,447
and a text provider
for the bezel text.


190
00:08:34,447 --> 00:08:38,451
Here, we’re just hardcoding
some values for the example.


191
00:08:38,451 --> 00:08:42,020
Finally, you need to pass
in the configured bezel template


192
00:08:42,020 --> 00:08:44,424
for the complication
timeline entry.


193
00:08:44,424 --> 00:08:48,294
Here’s our completed
Graphic Bezel complication.


194
00:08:48,294 --> 00:08:51,064
The text will automatically
curve along the bezel


195
00:08:51,064 --> 00:08:53,032
and display as uppercase.


196
00:08:53,032 --> 00:08:56,536
The bezel text can fill
nearly 180 degrees


197
00:08:56,536 --> 00:08:59,539
of the bezel
before it is truncated.


198
00:08:59,539 --> 00:09:02,275
The final addition
to our complication families


199
00:09:02,275 --> 00:09:03,910
is the Graphic Rectangular,


200
00:09:03,910 --> 00:09:07,447
which is available on the
Infograph Modular watch face.


201
00:09:07,447 --> 00:09:09,949
This family has templates
allowing you to create


202
00:09:09,949 --> 00:09:13,820
a full-color image that fills
the middle of the watch face.


203
00:09:13,820 --> 00:09:16,856
This template also includes
a text provider.


204
00:09:16,856 --> 00:09:18,992
This image should be
highly visual


205
00:09:18,992 --> 00:09:23,263
and not rely on text
to convey the information shown.


206
00:09:23,263 --> 00:09:25,765
The graphic rectangular
templates also allow


207
00:09:25,765 --> 00:09:28,034
for a more traditional
configuration,


208
00:09:28,034 --> 00:09:30,937
utilizing multiple
text providers.


209
00:09:30,937 --> 00:09:34,574
Additionally, an image can be
used beside the header text


210
00:09:34,574 --> 00:09:38,111
and you can also use a template
that displays a gauge provider


211
00:09:38,111 --> 00:09:40,346
instead of a third line of text.


212
00:09:40,346 --> 00:09:44,217
This is great
to communicate progress.


213
00:09:44,217 --> 00:09:46,953
Let’s create a graphic
rectangular complication


214
00:09:46,953 --> 00:09:48,288
that provides a header text


215
00:09:48,288 --> 00:09:51,124
and a big full-color image
below it.


216
00:09:51,124 --> 00:09:52,792
First, we need to instantiate


217
00:09:52,792 --> 00:09:56,029
our graphic rectangular
large image template.


218
00:09:56,029 --> 00:09:58,398
The next step is to create
a text provider


219
00:09:58,398 --> 00:09:59,899
with our header text.


220
00:09:59,899 --> 00:10:02,001
Again, this can be
a text provider


221
00:10:02,001 --> 00:10:05,004
that is made up
of multiple text providers.


222
00:10:05,004 --> 00:10:08,007
Finally, we create
a full-color image provider


223
00:10:08,007 --> 00:10:10,310
with an image of our data.


224
00:10:10,310 --> 00:10:13,847
Some key points to keep in mind
as you create complications


225
00:10:13,847 --> 00:10:17,784
for the new Infograph and
Infograph Modular watch faces


226
00:10:17,784 --> 00:10:20,954
are that the update
opportunities remain the same.


227
00:10:20,954 --> 00:10:24,090
You have 50 guaranteed
complication push updates


228
00:10:24,090 --> 00:10:25,825
every 24 hours,


229
00:10:25,825 --> 00:10:28,995
as well as the possibility
of an update each hour


230
00:10:28,995 --> 00:10:32,365
if your app is taking advantage
of background app refresh


231
00:10:32,365 --> 00:10:34,267
or is in the most
recently used apps


232
00:10:34,267 --> 00:10:37,437
on the person’s Apple Watch.


233
00:10:37,437 --> 00:10:40,139
As you take advantage
of the graphic circular


234
00:10:40,139 --> 00:10:42,242
and graphic
rectangular families,


235
00:10:42,242 --> 00:10:44,410
be aware that there are
potential CPU


236
00:10:44,410 --> 00:10:47,981
and update time thresholds
while you get your data,


237
00:10:47,981 --> 00:10:50,283
process it,
and render images,


238
00:10:50,283 --> 00:10:53,052
so do this work quickly.


239
00:10:53,052 --> 00:10:54,787
For full-color image providers,


240
00:10:54,787 --> 00:10:58,024
use the accessibility
label property to provide


241
00:10:58,024 --> 00:11:01,427
meaningful information
to people using VoiceOver.


242
00:11:01,427 --> 00:11:04,831
This is especially important
for graphic circular templates


243
00:11:04,831 --> 00:11:06,266
using only an image,


244
00:11:06,266 --> 00:11:08,735
as there will be
no accompanying text,


245
00:11:08,735 --> 00:11:09,669
as well as for


246
00:11:09,669 --> 00:11:12,438
the graphic rectangular
large image template,


247
00:11:12,438 --> 00:11:15,608
which allows for a lot of data
to be represented.


248
00:11:15,608 --> 00:11:17,510
For more information
on creating


249
00:11:17,510 --> 00:11:21,047
the new graphic complications
using the ClockKit framework,


250
00:11:21,047 --> 00:11:24,050
please visit the Apple developer
documentation


251
00:11:24,050 --> 00:11:26,452
at developer.apple.com.


252
00:11:26,452 --> 00:11:29,622
The watchOS Sketch
and Photoshop resources


253
00:11:29,622 --> 00:11:31,257
in the Human Interface
Guidelines


254
00:11:31,257 --> 00:11:34,394
have also been updated
for Apple Watch Series 4


255
00:11:34,394 --> 00:11:36,729
and watchOS 5.


256
00:11:36,729 --> 00:11:37,697
In addition,


257
00:11:37,697 --> 00:11:40,199
the size specifications
for each of the templates


258
00:11:40,199 --> 00:11:43,269
in the Graphic complication
families are shown here


259
00:11:43,269 --> 00:11:46,272
and can also be found in
the Human Interface Guidelines


260
00:11:46,272 --> 00:11:49,576
at developer.apple.com.

