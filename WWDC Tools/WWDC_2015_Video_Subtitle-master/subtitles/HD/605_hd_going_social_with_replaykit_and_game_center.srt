1
00:00:25,516 --> 00:00:31,666
[Applause]


2
00:00:32,165 --> 00:00:32,926
>> MEGAN GARDNER:
Hey, everybody.


3
00:00:33,206 --> 00:00:35,606
Welcome, and thank you
for coming to our session.


4
00:00:35,926 --> 00:00:39,046
My name is Megan Gardner, I'm a
software engineer on the games


5
00:00:39,046 --> 00:00:42,226
and graphics team and later
we will have my colleague,


6
00:00:42,226 --> 00:00:43,896
Edwin Iskandar up.


7
00:00:43,896 --> 00:00:46,676
We're going to be talking
to you about going social


8
00:00:46,676 --> 00:00:48,696
with ReplayKit and Game Center.


9
00:00:49,466 --> 00:00:51,816
So we have a few things
on the agenda today.


10
00:00:52,056 --> 00:00:53,856
First, what's new
in Game Center.


11
00:00:54,126 --> 00:00:58,066
We have two new things
basically guest players as well


12
00:00:58,066 --> 00:00:59,926
as our new unified
server environment.


13
00:00:59,926 --> 00:01:03,306
And then Edwin will get up and
talk to you about ReplayKit


14
00:01:03,686 --> 00:01:06,666
which is a great new way to
add a new social experience


15
00:01:06,666 --> 00:01:09,006
to your games and for
your users to be able


16
00:01:09,006 --> 00:01:11,536
to share those experiences
with others.


17
00:01:12,796 --> 00:01:14,886
So what's new in Game Center?


18
00:01:15,476 --> 00:01:17,566
Well, what is Game Center?


19
00:01:18,156 --> 00:01:19,206
Hopefully you know what it is,


20
00:01:19,206 --> 00:01:20,436
especially if you
are in this session.


21
00:01:20,436 --> 00:01:22,756
It's been around for a while,
but just in case you don't,


22
00:01:23,376 --> 00:01:27,766
Game Center is our API and app
that allows you as developers


23
00:01:27,766 --> 00:01:30,116
to add a social experience
to your games.


24
00:01:30,576 --> 00:01:33,036
This allows our users to be able
to make friends with each other,


25
00:01:33,356 --> 00:01:36,126
for you as developers to be
able to set up leaderboards


26
00:01:36,126 --> 00:01:38,256
for those users to be
able to post scores to,


27
00:01:38,476 --> 00:01:40,546
that they can then compare
against their friends as well


28
00:01:40,546 --> 00:01:43,696
as others, for you to be
able to define achievements


29
00:01:43,696 --> 00:01:46,736
that your users can achieve
and we also support everything


30
00:01:46,736 --> 00:01:49,086
that you would need to be
able to write a realtime


31
00:01:49,086 --> 00:01:51,476
or turn-based multiplayer
game without having


32
00:01:51,476 --> 00:01:52,656
to set up your own servers.


33
00:01:53,316 --> 00:01:56,356
And we also support challenges
which add a multiplayer element


34
00:01:56,596 --> 00:01:57,806
to your single player game.


35
00:01:58,476 --> 00:01:59,736
So, what's new?


36
00:02:00,506 --> 00:02:03,076
First up, we have guest players.


37
00:02:03,936 --> 00:02:06,516
Currently in Game Center
we have two main places


38
00:02:06,516 --> 00:02:07,696
that you'll run into players.


39
00:02:08,196 --> 00:02:10,045
First is your GKLocalPlayer.


40
00:02:10,566 --> 00:02:12,466
You only have one of these
per device and it has


41
00:02:12,466 --> 00:02:14,876
to be an authenticated
Game Center user.


42
00:02:15,766 --> 00:02:19,936
You'll also run into GKPlayer
as friends of that GKLocalPlayer


43
00:02:20,246 --> 00:02:22,956
but more commonly as
participants in any sort


44
00:02:22,956 --> 00:02:24,796
of multiplayer match
whether or not


45
00:02:24,796 --> 00:02:27,026
that is real time or turn-based.


46
00:02:27,526 --> 00:02:28,816
However with these players,


47
00:02:28,816 --> 00:02:31,166
you can only have one
player per device.


48
00:02:31,766 --> 00:02:32,626
Well, not anymore.


49
00:02:33,396 --> 00:02:34,516
Now we have guest players.


50
00:02:35,096 --> 00:02:36,356
So what are guest players?


51
00:02:36,866 --> 00:02:39,686
They actually are
GKPlayer instances.


52
00:02:39,686 --> 00:02:43,106
So you can use them just like
you would any other GKPlayer.


53
00:02:43,756 --> 00:02:45,566
They do not require
authentication,


54
00:02:45,606 --> 00:02:48,536
they will be created by you
vending us an identifier


55
00:02:48,536 --> 00:02:50,496
and then we will give
you back a GKPlayer.


56
00:02:51,166 --> 00:02:52,846
They are first-class
participants


57
00:02:52,846 --> 00:02:55,546
in any multiplayer game so
you can fill up the rest


58
00:02:55,546 --> 00:02:58,516
of the slots in your game
with those guest players.


59
00:02:58,836 --> 00:03:02,716
You do need to have at least
one authenticated GKPlayer


60
00:03:03,166 --> 00:03:06,436
but everything else can
be those guest players.


61
00:03:06,856 --> 00:03:08,436
What can you use
guest players for?


62
00:03:09,286 --> 00:03:10,746
They are great for
pass and play.


63
00:03:11,176 --> 00:03:13,356
Say you want to be able
to have an iPad game


64
00:03:13,356 --> 00:03:15,366
that you have one
player logged into


65
00:03:15,516 --> 00:03:17,166
and everybody else wants
to be able to play.


66
00:03:17,476 --> 00:03:18,806
You can fill up the
rest of those slots


67
00:03:18,806 --> 00:03:20,736
with these guest
players and be able


68
00:03:20,736 --> 00:03:23,156
to have a completely
local game on that iPad


69
00:03:23,396 --> 00:03:25,006
that your users will
be able to play


70
00:03:25,356 --> 00:03:28,816
and you can treat the game logic
in that turn-base game exactly


71
00:03:28,816 --> 00:03:30,126
as you would any other game.


72
00:03:30,126 --> 00:03:32,476
You can pass messages,
you can pass the turn,


73
00:03:32,756 --> 00:03:34,906
you can send exchanges
just as you would


74
00:03:34,906 --> 00:03:36,806
in any other turn-based game.


75
00:03:37,616 --> 00:03:40,666
It's also a really great way to
be able to plug in AI players,


76
00:03:40,876 --> 00:03:43,656
which will allow you to be able
to have the same game logic


77
00:03:43,656 --> 00:03:45,596
as you would otherwise
but also be able


78
00:03:45,596 --> 00:03:48,336
to have your users be able to
play against different levels


79
00:03:48,336 --> 00:03:50,616
of AI so they can learn how
to up their game faster.


80
00:03:51,606 --> 00:03:54,416
So with guest players, as I
said before, you are going


81
00:03:54,416 --> 00:03:58,456
to be defining the identifier,
and that identifier needs


82
00:03:58,456 --> 00:04:01,106
to be unique across
each game session.


83
00:04:01,566 --> 00:04:03,266
So whatever method
you end up using,


84
00:04:03,486 --> 00:04:04,956
make sure that you are not going


85
00:04:04,956 --> 00:04:07,356
to be having any collisions
on this identifier.


86
00:04:07,356 --> 00:04:10,416
If you have one guest
player, on one device


87
00:04:10,416 --> 00:04:13,156
and another guest player on
another device, just make sure


88
00:04:13,156 --> 00:04:14,546
that those aren't
going to collide,


89
00:04:14,546 --> 00:04:17,116
otherwise your game logic is
probably going to have problems.


90
00:04:18,386 --> 00:04:22,466
These guest players can't
earn scores or achievements,


91
00:04:22,866 --> 00:04:24,546
which makes sense, there's
nothing on the server


92
00:04:24,546 --> 00:04:28,876
to post them to, but
you need to know that.


93
00:04:29,566 --> 00:04:35,626
Sessions with guest players are
only compatible with sessions


94
00:04:35,966 --> 00:04:39,196
with players that are
also running iOS 9.


95
00:04:39,736 --> 00:04:43,706
Now, this does not lock
your game to iOS 9.


96
00:04:44,036 --> 00:04:48,406
This only locks those individual
sessions with guest players


97
00:04:48,736 --> 00:04:52,046
to other users that
are running iOS 9.


98
00:04:52,586 --> 00:04:54,636
We try to make this a
little bit easier for you,


99
00:04:54,876 --> 00:04:57,856
we won't be automatching anyone
that won't be able to join


100
00:04:57,856 --> 00:05:01,986
that game and if one of your
users does extend an invitation


101
00:05:02,026 --> 00:05:05,606
to multiplayer game to someone
who wouldn't be able to join,


102
00:05:05,606 --> 00:05:07,716
we will be auto declining
that on the server side


103
00:05:07,776 --> 00:05:10,346
on their behalf so you
shouldn't run into any issues


104
00:05:10,556 --> 00:05:12,186
but it is something you
need to be aware of.


105
00:05:12,686 --> 00:05:14,706
Again, this is not
locking your game.


106
00:05:15,066 --> 00:05:15,986
Everything specified


107
00:05:15,986 --> 00:05:17,896
in the compatibility
matrix will still work,


108
00:05:18,286 --> 00:05:20,326
anyone who is running on
an older version of iOS


109
00:05:20,446 --> 00:05:22,056
with your game will still work.


110
00:05:22,356 --> 00:05:24,936
It's just those individual
gameplay sessions.


111
00:05:25,536 --> 00:05:27,046
That's guest players.


112
00:05:27,296 --> 00:05:30,186
We really hope that this is
going to allow you to create new


113
00:05:30,186 --> 00:05:33,316
and interesting dynamic ways to
add to your multiplayer games


114
00:05:33,316 --> 00:05:35,686
and we are really excited to see
what you're going to do with it.


115
00:05:36,376 --> 00:05:40,146
Next up, we have the Game
Center Sandbox environment.


116
00:05:40,906 --> 00:05:45,826
So Sandbox, we created to have
a separate environment for you


117
00:05:45,826 --> 00:05:48,566
to be able to test out
Game Center functionality


118
00:05:48,816 --> 00:05:50,136
without being on production.


119
00:05:50,636 --> 00:05:54,096
But we had a completely
duplicate server,


120
00:05:54,096 --> 00:05:55,416
you had to have different
accounts


121
00:05:55,416 --> 00:05:58,096
and all the exact same
data in two places.


122
00:05:58,096 --> 00:06:00,446
And this was really great.


123
00:06:00,906 --> 00:06:04,486
But we feel that Sandbox
has really done its purpose,


124
00:06:04,906 --> 00:06:08,516
and now we are going to unify
Sandbox with production.


125
00:06:09,366 --> 00:06:11,926
So you will still
have two sets of data


126
00:06:11,926 --> 00:06:14,716
but it will all be
running on the same server.


127
00:06:15,276 --> 00:06:18,776
And this gives us a lot of
really good benefits, one,


128
00:06:18,776 --> 00:06:20,396
this really simplifies
your accounts.


129
00:06:20,706 --> 00:06:22,836
You no longer have to have
a separate Sandbox account


130
00:06:22,836 --> 00:06:24,716
that you're going to have to
be worried about maintaining,


131
00:06:24,946 --> 00:06:30,086
making friends with or dealing
with in any way like that.


132
00:06:30,086 --> 00:06:31,856
This is really compatible
with TestFlight


133
00:06:31,856 --> 00:06:35,476
so you can send your game out
on TestFlight for your testers


134
00:06:35,836 --> 00:06:38,236
to be able to test with
and not have to worry


135
00:06:38,236 --> 00:06:39,536
about them setting up Sandbox.


136
00:06:40,446 --> 00:06:44,106
Multiplayer will now
work against any version


137
00:06:44,106 --> 00:06:49,316
that you have published on that
server and this is automatic,


138
00:06:49,316 --> 00:06:50,946
you don't have to do
anything to set this up,


139
00:06:50,976 --> 00:06:52,636
we will be flipping
the switch on our side.


140
00:06:53,956 --> 00:06:55,996
There are a few things that
you do need to be aware of.


141
00:06:56,476 --> 00:06:58,886
First, any new game
that you will be working


142
00:06:58,886 --> 00:07:02,326
on will actually show up in
your games list in Game Center.


143
00:07:02,526 --> 00:07:03,836
So as you can see here,


144
00:07:04,236 --> 00:07:06,706
me and demo-liscious are
working on GK tester.


145
00:07:06,706 --> 00:07:10,146
And if you were demo-liscious'
friend, then you clicked


146
00:07:10,146 --> 00:07:13,076
on her profile in the Game
Center app, if you clicked


147
00:07:13,076 --> 00:07:15,566
on her games list, you would be
able to scroll through and see


148
00:07:15,566 --> 00:07:16,876
that she was working
on that game.


149
00:07:17,236 --> 00:07:19,216
If there's a game
you really don't want


150
00:07:19,216 --> 00:07:21,566
to let anyone know about,
we do suggest that you set


151
00:07:21,566 --> 00:07:24,776
up a separate account, however,


152
00:07:24,776 --> 00:07:26,176
that shouldn't be too
much of a problem.


153
00:07:26,706 --> 00:07:29,756
Any scores that you post,


154
00:07:30,006 --> 00:07:32,296
while running your
game will be posting


155
00:07:32,356 --> 00:07:33,736
to the same leaderboards.


156
00:07:34,386 --> 00:07:39,516
And iOS 8 users will still
actually need to flip


157
00:07:39,516 --> 00:07:41,816
that Sandbox switch in settings


158
00:07:42,316 --> 00:07:45,426
because we will be
automatically errorring


159
00:07:45,426 --> 00:07:47,526
out if they are not
thinking that they are going


160
00:07:47,526 --> 00:07:48,686
into that Sandbox environment.


161
00:07:48,686 --> 00:07:51,616
Well, Sandbox doesn't exist
so they won't actually be


162
00:07:51,616 --> 00:07:54,296
in Sandbox but they will see
some of that same UI treatment.


163
00:07:54,776 --> 00:07:59,696
But fortunately, everyone on
iOS 8 can upgrade to iOS 9,


164
00:08:00,056 --> 00:08:01,556
so we just suggest that
you do that instead.


165
00:08:02,096 --> 00:08:06,006
So let's go over what this
is exactly going to mean


166
00:08:06,006 --> 00:08:07,096
for each one of these sections.


167
00:08:07,606 --> 00:08:08,536
So leaderboards.


168
00:08:09,266 --> 00:08:11,256
All of your versions
will be posting


169
00:08:11,306 --> 00:08:12,856
to the same leaderboards.


170
00:08:13,236 --> 00:08:15,896
However, if you have
an update to your game,


171
00:08:15,956 --> 00:08:18,056
in which you've added
new leaderboards,


172
00:08:18,486 --> 00:08:22,526
those leaderboards will only be
viewable to you or your testers


173
00:08:22,666 --> 00:08:24,576
who are running that version,


174
00:08:24,806 --> 00:08:26,416
that updated version
of your game.


175
00:08:26,716 --> 00:08:28,676
No one else will be able
to see those leaderboards,


176
00:08:29,036 --> 00:08:30,956
but everything else
you will be posting


177
00:08:30,956 --> 00:08:32,546
to those same production
leaderboards.


178
00:08:33,015 --> 00:08:35,666
Fortunately, everything is
iTunes Connect and that is going


179
00:08:35,666 --> 00:08:37,785
to allow you to clear the
leaderboards before you publish


180
00:08:37,785 --> 00:08:40,716
them or to call any scores
that you or your testers end


181
00:08:40,716 --> 00:08:43,576
up posting either
erroneously or in a way


182
00:08:43,576 --> 00:08:44,636
that you don't really
want to mess


183
00:08:44,636 --> 00:08:46,016
up the integrity of
your leaderboards.


184
00:08:46,016 --> 00:08:47,256
Those are easily clearable


185
00:08:47,256 --> 00:08:50,966
through iTunes Connect
using your current tools.


186
00:08:51,136 --> 00:08:54,116
For multiplayer, this is
a really huge benefit.


187
00:08:54,496 --> 00:08:58,866
This is going to allow you to
be able to test your updates


188
00:08:58,866 --> 00:09:01,966
to your multiplayer games
against games that are already


189
00:09:01,966 --> 00:09:04,016
out there in the
wild in production.


190
00:09:04,386 --> 00:09:08,446
Because there's no barrier
between the preproduction server


191
00:09:08,446 --> 00:09:09,926
and the production server.


192
00:09:09,926 --> 00:09:11,416
They are the same server.


193
00:09:11,496 --> 00:09:13,806
So you will be able to
easily test and make sure


194
00:09:14,066 --> 00:09:15,466
that any updates
that you are making


195
00:09:15,466 --> 00:09:17,416
to your multiplayer
games are going to work


196
00:09:17,416 --> 00:09:20,426
with whatever is
already out there.


197
00:09:21,216 --> 00:09:24,506
For iTunes Connect, you will
be maintaining two completely


198
00:09:24,506 --> 00:09:25,546
separate sets of metadata


199
00:09:25,546 --> 00:09:28,256
that we will be maintaining
on the server.


200
00:09:28,256 --> 00:09:31,146
You will have your currently
released version of your data,


201
00:09:31,376 --> 00:09:33,586
as well as the unreleased
version of your data.


202
00:09:34,636 --> 00:09:39,556
So which set of data that
you get, you or your users


203
00:09:39,556 --> 00:09:43,416
or your testers is going to
depend on the CFBundleVersion


204
00:09:43,516 --> 00:09:46,926
of the app that you have
installed on that device.


205
00:09:47,686 --> 00:09:51,236
So if the CFBundleVersion
on your device is greater


206
00:09:51,236 --> 00:09:53,656
than the release bundle
version that you would get


207
00:09:53,876 --> 00:09:57,276
from the App Store, you will
be vended the unreleased data.


208
00:09:58,326 --> 00:10:02,116
If the CFBundleVersion that you
have on your device is less than


209
00:10:02,116 --> 00:10:05,276
or equal to the release bundle
version that you would download


210
00:10:05,276 --> 00:10:08,586
from the App Store, you will be
vended the currently released


211
00:10:08,676 --> 00:10:09,276
set of data.


212
00:10:09,886 --> 00:10:11,856
If there isn't one
on the App Store,


213
00:10:12,056 --> 00:10:13,806
then you will just be
getting the unreleased data.


214
00:10:13,806 --> 00:10:15,986
It's the only data that exists.


215
00:10:17,016 --> 00:10:18,266
So let's go over this again.


216
00:10:18,266 --> 00:10:24,156
If you or one of your testers
is running a beta version


217
00:10:25,086 --> 00:10:29,396
of your game, then that
game will be viewable


218
00:10:29,396 --> 00:10:31,536
by your Game Center friends
in the Game Center app.


219
00:10:32,186 --> 00:10:34,486
You will be able to play
against any other beta version,


220
00:10:34,836 --> 00:10:36,836
that's the only versions
out there.


221
00:10:36,836 --> 00:10:38,406
You'll be posting to
the beta leaderboards,


222
00:10:38,406 --> 00:10:40,926
again those are the only
leaderboards that exist.


223
00:10:41,476 --> 00:10:45,576
If you or one of your users
is running a released version


224
00:10:45,576 --> 00:10:48,416
of your game, this is
kind of your normal case,


225
00:10:48,486 --> 00:10:51,116
you will be able to see
the game in Game Center,


226
00:10:51,116 --> 00:10:52,496
on your Game Center's
friends list.


227
00:10:52,856 --> 00:10:55,616
You will be able to play,
if it's a multiplayer game,


228
00:10:55,616 --> 00:10:58,976
against any version specified
in the compatibility matrix


229
00:10:58,976 --> 00:11:01,826
and iTunes Connect,
including versions


230
00:11:02,206 --> 00:11:05,916
that your game would not
necessarily know about because


231
00:11:05,916 --> 00:11:08,186
that compatibility matrix
is stored on the server


232
00:11:08,326 --> 00:11:09,966
and the server will
know that you can match


233
00:11:09,966 --> 00:11:11,316
against those unreleased games.


234
00:11:12,226 --> 00:11:14,486
You will be posting to
released leaderboards just


235
00:11:14,486 --> 00:11:15,146
like you would expect.


236
00:11:16,096 --> 00:11:19,776
If you or one of your testers
is running an updated version


237
00:11:19,776 --> 00:11:21,416
of your game that has
not been pubbished


238
00:11:21,416 --> 00:11:24,776
yet that game will still
be viewable in Game Center


239
00:11:24,776 --> 00:11:28,626
in your Game Center friends list
and you will be able to play


240
00:11:28,626 --> 00:11:30,196
against any specified
version, whether


241
00:11:30,196 --> 00:11:32,736
or not it is the older version
of your game or the new version


242
00:11:32,736 --> 00:11:35,706
of your game that you're
testing, anything specified


243
00:11:35,706 --> 00:11:38,166
on the compatibility matrix, you
will be able to play against.


244
00:11:38,916 --> 00:11:42,156
Then you will be posting
to release leaderboards


245
00:11:42,816 --> 00:11:48,276
if the leaderboard already
exists or you will be posting


246
00:11:48,276 --> 00:11:51,556
to an unreleased leaderboard
if that is a new leaderboard


247
00:11:51,556 --> 00:11:53,436
for that game and those games --


248
00:11:53,436 --> 00:11:56,356
those leaderboards will only
be viewable by those people


249
00:11:56,356 --> 00:12:00,406
who have that version of
your game on their system.


250
00:12:00,956 --> 00:12:03,216
So that's what's new.


251
00:12:03,626 --> 00:12:06,276
First was guest players
which we really hope is going


252
00:12:06,276 --> 00:12:08,286
to expand the multiplayer
opportunities that you have


253
00:12:08,286 --> 00:12:13,156
for your game, as well as our
new unified server environment


254
00:12:13,746 --> 00:12:16,936
which is really simple, it's
automatic, there's nothing


255
00:12:16,936 --> 00:12:18,306
that you need to
do to set this up.


256
00:12:18,466 --> 00:12:20,636
It's going to work so much
better with TestFlight,


257
00:12:20,636 --> 00:12:23,456
which we feel will give you
guys a better way to be able


258
00:12:23,496 --> 00:12:25,756
to get full functionality
testing on your game.


259
00:12:26,616 --> 00:12:27,766
And I think that
this is really going


260
00:12:27,766 --> 00:12:29,516
to just make your guys'
life a lot easier.


261
00:12:29,636 --> 00:12:33,886
Now I will bring up Edwin
and he will tell you


262
00:12:33,886 --> 00:12:35,966
about the new framework
replay kit.


263
00:12:36,516 --> 00:12:40,826
[Applause]


264
00:12:41,326 --> 00:12:41,746
>> EDWIN ISKANDAR: All right.


265
00:12:42,506 --> 00:12:43,216
Thank you, Megan.


266
00:12:43,966 --> 00:12:45,866
Good afternoon, I'm
Edwin Iskandar.


267
00:12:45,866 --> 00:12:48,196
I'm a software engineer on the
graphics and games team here


268
00:12:48,196 --> 00:12:51,406
at Apple and I'm here to
talk to you about ReplayKit.


269
00:12:52,586 --> 00:12:55,316
So some truly memorable moments
happen during gaming, right,


270
00:12:55,826 --> 00:12:57,576
like when you finally
get those three stars


271
00:12:57,806 --> 00:12:59,356
in that seemingly
impossible level.


272
00:12:59,356 --> 00:13:02,516
Or when you finally
beat that last boss


273
00:13:02,516 --> 00:13:04,036
without losing a
single life point.


274
00:13:04,926 --> 00:13:06,776
Wouldn't it be awesome
if you could capture


275
00:13:07,076 --> 00:13:08,026
and share those moments?


276
00:13:09,346 --> 00:13:10,636
So that's where ReplayKit
comes in.


277
00:13:12,166 --> 00:13:14,576
ReplayKit records
the audio and visuals


278
00:13:14,826 --> 00:13:15,896
of your running application.


279
00:13:17,066 --> 00:13:19,366
It also allows you to use
this to add voice commentary


280
00:13:19,366 --> 00:13:22,276
and so they can make their
recordings more personal or just


281
00:13:22,366 --> 00:13:23,866
to provide additional context.


282
00:13:24,406 --> 00:13:26,766
It allows your users
to play back,


283
00:13:26,936 --> 00:13:28,746
scrub and trim their recordings


284
00:13:29,026 --> 00:13:30,986
and finally share
their recordings


285
00:13:30,986 --> 00:13:32,316
to their favorite
social networks


286
00:13:33,096 --> 00:13:34,926
and video destination sites.


287
00:13:35,956 --> 00:13:38,756
ReplayKit produces
high-quality HD recordings


288
00:13:39,546 --> 00:13:42,886
that will look great on TV's,
websites and mobile devices.


289
00:13:43,906 --> 00:13:45,476
And it does this
extremely efficiently


290
00:13:45,476 --> 00:13:49,406
with a low-performance
impact while also minimizing


291
00:13:50,266 --> 00:13:51,416
power usage.


292
00:13:51,656 --> 00:13:54,116
ReplayKit includes
privacy safeguards


293
00:13:54,306 --> 00:13:57,026
that help protect our users and
we'll talk a little bit more


294
00:13:57,026 --> 00:13:57,926
about these in the next slide.


295
00:13:58,526 --> 00:14:01,536
And it's available
today in the iOS 9 beta.


296
00:14:02,406 --> 00:14:05,936
And later in the fall, to
customers when iOS 9 ships.


297
00:14:06,616 --> 00:14:10,926
It's available in all
A7 and A8-based devices.


298
00:14:11,496 --> 00:14:16,316
Like all of Apple's frameworks
ReplayKit takes the users


299
00:14:16,316 --> 00:14:17,716
privacy very seriously.


300
00:14:18,556 --> 00:14:20,316
So before ReplayKit
can start recording,


301
00:14:21,196 --> 00:14:22,926
it requires that the
user give it permission,


302
00:14:23,246 --> 00:14:25,626
and it does this via
user consent prompt.


303
00:14:26,846 --> 00:14:29,076
ReplayKit also supports
parental controls


304
00:14:29,076 --> 00:14:32,746
so if you have a device
that's often used by a child,


305
00:14:32,746 --> 00:14:37,386
you can disable ReplayKit
systemwide via settings.


306
00:14:38,066 --> 00:14:40,736
All recordings made via
ReplayKit will exclude


307
00:14:40,736 --> 00:14:41,276
system UI.


308
00:14:41,786 --> 00:14:44,356
That means that any personal
notifications that come through,


309
00:14:44,576 --> 00:14:47,396
while recording, will
be excluded as well


310
00:14:47,396 --> 00:14:49,396
as any keyboard entry
that happens in game.


311
00:14:51,636 --> 00:14:54,476
And finally, applications
don't have direct access


312
00:14:54,796 --> 00:14:55,606
to the movie files.


313
00:14:55,896 --> 00:14:57,096
These are only accessible


314
00:14:57,096 --> 00:15:01,126
to the user via ReplayKit's
preview UI and share sheet.


315
00:15:01,676 --> 00:15:05,246
All right, so let's take a
look at how ReplayKit works


316
00:15:05,586 --> 00:15:07,086
by taking a look at
its architecture.


317
00:15:07,686 --> 00:15:11,656
So your application links
to the ReplayKit framework


318
00:15:11,996 --> 00:15:15,456
and it uses these two
classes, RPScreenRecorder


319
00:15:15,676 --> 00:15:16,936
which handles the
recording tasks


320
00:15:17,626 --> 00:15:20,596
and RPPreviewViewController
which is responsible


321
00:15:20,596 --> 00:15:21,936
for the preview UI
and share sheet.


322
00:15:23,326 --> 00:15:27,226
So RPScreenRecorder communicates
with the replay demon


323
00:15:27,386 --> 00:15:29,186
which is a separate process
from your application.


324
00:15:30,196 --> 00:15:32,756
The replay demon communicates
with lower level video


325
00:15:32,756 --> 00:15:36,066
and audio services which in turn
communicate with the hardware


326
00:15:36,806 --> 00:15:39,956
to capture the visuals and
audio of your application,


327
00:15:40,006 --> 00:15:42,746
as well as the audio data
from the device microphone.


328
00:15:44,216 --> 00:15:48,816
During capture, the replay
demon will encode this data


329
00:15:48,816 --> 00:15:50,716
in realtime and write
it to a movie file.


330
00:15:51,026 --> 00:15:54,206
It will write this movie file
to a location only accessible


331
00:15:54,356 --> 00:15:56,316
to ReplayKits internal services.


332
00:15:57,156 --> 00:16:01,446
How does the user actually
interact with that movie then?


333
00:16:01,666 --> 00:16:03,586
Well, when you tell
RPScreenRecorder


334
00:16:03,586 --> 00:16:07,326
to stop recording it vends back
an RPPreViewViewController.


335
00:16:07,976 --> 00:16:10,876
And you can simply present it,


336
00:16:10,876 --> 00:16:13,226
and RPPreviewViewController
hosts the preview


337
00:16:13,226 --> 00:16:16,096
and share extension which
does have access to the movie


338
00:16:17,406 --> 00:16:18,986
and your users can
interact with that


339
00:16:19,916 --> 00:16:21,726
to preview and share the movie.


340
00:16:22,936 --> 00:16:25,416
As you can see, it's a pretty
complicated system with a lot


341
00:16:25,416 --> 00:16:27,636
of moving parts but thankfully


342
00:16:27,636 --> 00:16:31,056
for developers it really just
boils down to these two classes.


343
00:16:31,526 --> 00:16:33,686
RPScreenRecorder and
RPPreviewViewController.


344
00:16:34,516 --> 00:16:34,946
Pretty simple.


345
00:16:34,946 --> 00:16:41,596
All right, so let's take a
deeper look into these classes.


346
00:16:41,676 --> 00:16:44,216
So first up, is
RPScreenRecorder.


347
00:16:44,536 --> 00:16:46,516
Again, it's responsible
for starting, stopping


348
00:16:46,516 --> 00:16:47,556
and discarding the recording.


349
00:16:48,086 --> 00:16:51,016
It can also be used to check
for the ability to record


350
00:16:51,016 --> 00:16:52,756
and it can also be used


351
00:16:52,756 --> 00:16:54,386
to enable the microphone
for commentary.


352
00:16:55,596 --> 00:16:58,676
RPScreenRecorder has a
delegate that you can set


353
00:16:58,736 --> 00:16:59,656
that should conform


354
00:16:59,656 --> 00:17:02,116
to the RPScreenRecorder
delegate protocol.


355
00:17:03,276 --> 00:17:05,236
And this delegate can be
used to check for changes


356
00:17:05,236 --> 00:17:09,695
in availability, and also how a
case is if recording stops due


357
00:17:09,695 --> 00:17:10,685
to an error, for example.


358
00:17:11,246 --> 00:17:14,935
For the second class,
RPPreviewViewController,


359
00:17:15,415 --> 00:17:17,465
again it's responsible for
previewing the recording,


360
00:17:17,465 --> 00:17:19,715
editing and trimming and
fially sharing the movie.


361
00:17:20,796 --> 00:17:24,336
RPPreviewViewController also
has a delegate that you can set


362
00:17:24,606 --> 00:17:25,415
that should conform


363
00:17:25,415 --> 00:17:27,596
to the
RPPreviewViewControllerDelegate


364
00:17:27,596 --> 00:17:28,586
protocol.


365
00:17:29,216 --> 00:17:31,906
That can be used to simply
dismiss the view controller


366
00:17:32,486 --> 00:17:34,146
when the user is done
previewing and sharing.


367
00:17:34,756 --> 00:17:37,006
That's literally it.


368
00:17:37,006 --> 00:17:39,226
There are actually only two
classes and two protocols.


369
00:17:39,226 --> 00:17:40,646
It's a really compact framework


370
00:17:41,136 --> 00:17:44,026
and as you will see adoption
is incredibly simple.


371
00:17:44,796 --> 00:17:47,186
So let's take a look
at this API in action


372
00:17:47,416 --> 00:17:50,136
and I think the best way to
do that is to use an example.


373
00:17:51,426 --> 00:17:53,956
So the example we are
going to use is a game


374
00:17:53,956 --> 00:17:56,646
that the sample code team
created called DemoBots.


375
00:17:56,646 --> 00:17:58,006
You have probably seen
this in other sessions.


376
00:17:58,706 --> 00:18:01,616
Just in case you haven't,
the premise of DemoBots is


377
00:18:01,616 --> 00:18:05,136
that you have this circuit
board where these task bots live


378
00:18:05,136 --> 00:18:07,736
and the task bots
are responsible


379
00:18:07,736 --> 00:18:08,946
for keeping the circuit
board running


380
00:18:09,246 --> 00:18:11,366
but unfortunately all
the bots are buggy.


381
00:18:12,106 --> 00:18:13,416
It's your job to debug them.


382
00:18:13,416 --> 00:18:17,826
So each level in DemoBots
takes two to three minutes,


383
00:18:17,986 --> 00:18:21,726
so it's short gameplay sessions
and you can download the source


384
00:18:21,726 --> 00:18:23,166
at developer.Apple.com.


385
00:18:23,286 --> 00:18:24,286
You should definitely
check it out.


386
00:18:24,956 --> 00:18:27,446
It showcases a lot of Apple's
new gaming technologies.


387
00:18:27,736 --> 00:18:28,656
It's a really great sample.


388
00:18:30,086 --> 00:18:33,036
One of the reasons
why we chose DemoBots


389
00:18:33,176 --> 00:18:36,036
to showcase ReplayKit is it has
this great scene flow that's


390
00:18:36,036 --> 00:18:37,416
common to iOS games.


391
00:18:38,146 --> 00:18:40,366
Once you launch DemoBots
you're treated to a main menu.


392
00:18:41,126 --> 00:18:43,216
From the main menu,
you can start a game


393
00:18:43,216 --> 00:18:44,826
and it transitions
you to the game level.


394
00:18:45,816 --> 00:18:49,256
The game level, if you succeed
at the game level or fail at it,


395
00:18:49,326 --> 00:18:51,346
will transition to
a level end scene


396
00:18:51,976 --> 00:18:54,826
and from the level end scene,
you can either replay the level


397
00:18:54,826 --> 00:18:56,056
or go to the next level.


398
00:18:57,156 --> 00:18:59,426
So now that we know what
the scene flow looks like,


399
00:18:59,846 --> 00:19:02,416
let's see how ReplayKit fits in.


400
00:19:02,616 --> 00:19:06,006
Since we know that DemoBots has
short game play sessions we will


401
00:19:06,096 --> 00:19:07,866
opt for an automatic
recording strategy.


402
00:19:07,866 --> 00:19:12,116
And what I mean by that is
that we want to tell ReplayKit


403
00:19:12,116 --> 00:19:15,406
to start recording immediately
when the game level starts


404
00:19:16,076 --> 00:19:17,526
and we want to tell
it to stop recording


405
00:19:18,006 --> 00:19:18,826
when the game level ends.


406
00:19:18,826 --> 00:19:22,616
We also want to allow
the user to preview


407
00:19:22,616 --> 00:19:24,786
and share the recording
but we don't want


408
00:19:24,786 --> 00:19:26,846
to do this immediately after
we stop recording, right?


409
00:19:27,536 --> 00:19:29,436
We want to do this when all
the action has died down.


410
00:19:29,476 --> 00:19:31,516
A perfect place to do that
is the level end scene.


411
00:19:31,516 --> 00:19:32,146
All right.


412
00:19:33,276 --> 00:19:34,786
Pretty straightforward.


413
00:19:35,026 --> 00:19:36,346
So let's step through this.


414
00:19:37,386 --> 00:19:38,556
So first up is the main menu.


415
00:19:39,556 --> 00:19:41,606
Since we are using that
automatic recording strategy,


416
00:19:41,856 --> 00:19:44,556
we also want to allow the
the user to disable this


417
00:19:44,556 --> 00:19:46,736
if they don't want to
auto record each level


418
00:19:47,346 --> 00:19:49,866
and to do this we have
implemented an auto record


419
00:19:49,866 --> 00:19:51,966
button on the top right
there that the user can use


420
00:19:51,966 --> 00:19:53,436
to toggle this behavior
on and off.


421
00:19:53,476 --> 00:19:58,146
So let's say a user toggles
this on and then presses


422
00:19:58,146 --> 00:19:59,956
on the new game button.


423
00:20:00,476 --> 00:20:02,506
At this point, we
transition to the game level


424
00:20:02,506 --> 00:20:04,536
where the actual gameplay
happens and we want


425
00:20:04,536 --> 00:20:06,136
to tell ReplayKit
to start recording.


426
00:20:06,956 --> 00:20:08,846
Let's take a look at what
that looks like in code.


427
00:20:09,356 --> 00:20:13,896
First things first, we need an
instance of RPScreenRecorder.


428
00:20:14,826 --> 00:20:17,846
So each application has a shared
instance of RPScreenRecorder


429
00:20:18,106 --> 00:20:21,036
which can be accessed with the
class function; shared recorder.


430
00:20:21,756 --> 00:20:22,516
Pretty straight forward.


431
00:20:23,576 --> 00:20:26,346
To start recording, we
call a start recording


432
00:20:26,346 --> 00:20:29,156
with microphone enabled
on that shared instance,


433
00:20:29,846 --> 00:20:32,826
and here you can specify if you
want voice commentary on or off.


434
00:20:34,066 --> 00:20:36,716
You also supply a handle block,


435
00:20:37,286 --> 00:20:40,816
and that handle block is
supplied an optional NSError.


436
00:20:41,796 --> 00:20:43,116
If you receive an error here,


437
00:20:43,116 --> 00:20:44,456
you should handle
it appropriately.


438
00:20:44,946 --> 00:20:46,526
In our case we're just
going to pause the game


439
00:20:46,596 --> 00:20:48,226
and alert the user and
that the recording failed.


440
00:20:48,226 --> 00:20:52,446
Once you start the recording
with microphone enables,


441
00:20:53,276 --> 00:20:56,726
the user is presented with
this user consent prompt.


442
00:20:57,516 --> 00:20:59,476
And the user at this
point has three options.


443
00:21:00,066 --> 00:21:02,226
It can choose to record the
screen and the microphone


444
00:21:02,226 --> 00:21:03,506
to enable voice commentary.


445
00:21:04,356 --> 00:21:06,236
They can just record
the screen only.


446
00:21:07,076 --> 00:21:09,506
Or they can don't
allow recording at all.


447
00:21:10,226 --> 00:21:14,676
So this user consent prompt will
be displayed everytime you call


448
00:21:14,706 --> 00:21:16,176
a start recording with
microphone enabled,


449
00:21:16,796 --> 00:21:20,956
but once the user has accepted
it, it will not be shown again


450
00:21:21,386 --> 00:21:22,156
for another eight minutes.


451
00:21:22,666 --> 00:21:27,386
Let's say the user now wants
to enable voice commenary


452
00:21:27,386 --> 00:21:28,586
and also record the screen.


453
00:21:28,586 --> 00:21:31,246
So they press on the record
screen and microphone button.


454
00:21:31,796 --> 00:21:35,916
Okay, at this point
ReplayKit starts recording,


455
00:21:36,376 --> 00:21:38,076
the game starts and
the user is playing,


456
00:21:38,556 --> 00:21:40,186
providing voice commentary
and whatnot.


457
00:21:40,796 --> 00:21:46,276
And they debug all the task
bots at that particular level.


458
00:21:46,496 --> 00:21:48,766
At that point, they beat the
level and we want to transition


459
00:21:48,766 --> 00:21:49,706
to that level end scene.


460
00:21:50,356 --> 00:21:53,586
Before we do that, we want to
tell ReplayKit to stop recording


461
00:21:54,866 --> 00:21:58,816
to do that in code, we simply
call stop recording with handler


462
00:21:59,236 --> 00:22:02,516
on that shared recorder
instance and then


463
00:22:02,716 --> 00:22:05,416
that handle block its
applied an optional NSError


464
00:22:05,986 --> 00:22:07,386
and optional preview
view controller.


465
00:22:08,416 --> 00:22:10,956
Again, handle that
error appropriately.


466
00:22:11,466 --> 00:22:12,776
And for the preview
view controller,


467
00:22:12,776 --> 00:22:13,616
you have a couple of options.


468
00:22:13,686 --> 00:22:18,206
You can either present it
immediately or you can hang


469
00:22:18,206 --> 00:22:19,266
on to it for later use.


470
00:22:19,576 --> 00:22:21,416
So we are going to hang on
to it because we don't want


471
00:22:21,586 --> 00:22:24,696
to display it just yet.


472
00:22:24,696 --> 00:22:26,786
ReplayKit has stopped
recording and now we transition


473
00:22:26,786 --> 00:22:27,726
to that level end scene.


474
00:22:28,376 --> 00:22:30,016
And here we want to
allow user to preview


475
00:22:30,016 --> 00:22:30,806
and share their movie.


476
00:22:31,646 --> 00:22:33,786
We have implemented the
play recording button


477
00:22:33,786 --> 00:22:34,746
that you see in the top right.


478
00:22:35,906 --> 00:22:37,466
The user taps on that.


479
00:22:38,406 --> 00:22:43,636
We want to present
that preview UI.


480
00:22:43,636 --> 00:22:46,526
To do that in code, we
simply call UIViewController,


481
00:22:46,526 --> 00:22:49,606
as present view controller
animated and we patch


482
00:22:49,606 --> 00:22:50,906
in that preview view controller


483
00:22:50,976 --> 00:22:53,176
that we held the
reference to previously.


484
00:22:53,726 --> 00:22:57,346
That brings up replay
kit's preview UI


485
00:22:57,346 --> 00:23:01,766
where the user can
scrub through, trim,


486
00:23:03,226 --> 00:23:04,596
and finally share
their recordings.


487
00:23:05,626 --> 00:23:07,036
Using ReplayKit's share UI.


488
00:23:07,036 --> 00:23:10,676
So the share UI is implemented
with UI share preview controller


489
00:23:10,676 --> 00:23:14,026
so you can even write your
own custom sharing extensions


490
00:23:14,026 --> 00:23:15,986
in your app, which
is pretty cool.


491
00:23:17,576 --> 00:23:21,316
So say the user wants to now
share this video to Facebook.


492
00:23:21,426 --> 00:23:24,926
They tap on the Facebook button
and the Facebook modal shows up,


493
00:23:25,366 --> 00:23:28,086
the video is already attached,
they can write a custom message


494
00:23:28,086 --> 00:23:31,426
and then simply press post and
it will show up on their feed.


495
00:23:31,976 --> 00:23:35,796
It's that simple for the user
to use and also really fun.


496
00:23:35,846 --> 00:23:36,466
All right.


497
00:23:38,076 --> 00:23:42,356
So now the video is posted
to the users Facebook feed,


498
00:23:42,356 --> 00:23:44,966
and they are done sharing
and previewing, now they want


499
00:23:44,966 --> 00:23:46,826
to cancel and dismiss
this preview UI.


500
00:23:47,096 --> 00:23:49,276
So remember, we presented
the preview UI.


501
00:23:50,586 --> 00:23:52,566
So we are also responsible
for dismissing it.


502
00:23:53,516 --> 00:23:54,666
So to handle dismissal,


503
00:23:56,206 --> 00:23:58,286
we simply set preview
view controllers delegate


504
00:23:58,286 --> 00:24:01,076
and that delegate should conform


505
00:24:01,076 --> 00:24:03,846
to RPPreviewViewController
delegate protocol


506
00:24:04,406 --> 00:24:06,636
and should implement
preview controller did finish


507
00:24:06,836 --> 00:24:08,986
with get supplied, a
preview view controller


508
00:24:09,446 --> 00:24:12,096
and you simply call dismiss
view controller animated


509
00:24:12,806 --> 00:24:13,966
on that preview view controller.


510
00:24:14,546 --> 00:24:18,506
And that's basically it.


511
00:24:18,506 --> 00:24:22,066
Just a couple lines of code,
we have a basic implementation


512
00:24:22,066 --> 00:24:24,656
of ReplayKit in DemoBots,
it's really that simple.


513
00:24:25,126 --> 00:24:28,006
So just to recap, we went over
how to get a shared instance


514
00:24:28,006 --> 00:24:32,396
of the recorder, how to stop
and start the recorder and how


515
00:24:32,426 --> 00:24:34,106
to present and dismiss
that preview UI.


516
00:24:34,106 --> 00:24:34,376
All right.


517
00:24:34,376 --> 00:24:38,026
Now that we have
the basics down,


518
00:24:38,586 --> 00:24:41,896
let's go into some more advanced
topics to really fine tune


519
00:24:41,896 --> 00:24:43,156
that ReplayKit implementation.


520
00:24:44,456 --> 00:24:47,186
So first up is verifying
availability.


521
00:24:48,486 --> 00:24:51,576
So ReplayKit may become
available or may be unavailable


522
00:24:51,616 --> 00:24:52,386
for a number of reasons.


523
00:24:53,746 --> 00:24:56,506
ReplayKit uses the same
technologies as AirPlay and TV


524
00:24:56,506 --> 00:24:58,396
out to capture its
video content.


525
00:24:59,136 --> 00:25:01,996
So unfortunately, it cannot be
used simultaneously with either


526
00:25:01,996 --> 00:25:02,926
of those two services.


527
00:25:03,466 --> 00:25:06,876
And as I mentioned before,
ReplayKit is supported


528
00:25:06,876 --> 00:25:09,136
on A7 and A8 based devices.


529
00:25:10,146 --> 00:25:12,816
Any older devices, ReplayKit
will not be available.


530
00:25:13,456 --> 00:25:15,596
To check for availability,


531
00:25:16,106 --> 00:25:20,146
you simply query the available
property and RPScreenRecorder.


532
00:25:20,796 --> 00:25:23,596
And what do you do if
it's not available?


533
00:25:23,896 --> 00:25:26,146
Well, you simply
discard any recording UI


534
00:25:26,276 --> 00:25:27,966
in your game or app.


535
00:25:28,756 --> 00:25:30,556
Since availability can
change in realtime,


536
00:25:32,496 --> 00:25:35,586
you can also implement
RPScreenRecorder delegate screen


537
00:25:35,586 --> 00:25:37,716
recorder to change the
availability to listen


538
00:25:37,716 --> 00:25:38,926
for changes in availability.


539
00:25:39,456 --> 00:25:43,326
Quick example, remember
the auto record toggle


540
00:25:43,326 --> 00:25:44,676
that we had in DemoBots?


541
00:25:44,926 --> 00:25:47,236
If ReplayKits not even available
on the device, we don't want


542
00:25:47,236 --> 00:25:48,236
to show that toggle, right?


543
00:25:49,586 --> 00:25:53,746
We query that available property
in RPScreenRecorder and use


544
00:25:53,746 --> 00:25:56,166
that to drive the visibility
of the recording toggle button.


545
00:25:57,216 --> 00:26:01,126
Simple. All right, next up
is discarding the recording.


546
00:26:02,536 --> 00:26:05,766
So ReplayKit automatically
discards the previous recording


547
00:26:05,766 --> 00:26:06,886
when a new recording starts.


548
00:26:08,076 --> 00:26:10,056
So currently there can
only be one recording


549
00:26:10,126 --> 00:26:11,766
at a time per application.


550
00:26:13,026 --> 00:26:14,696
But there are cases
where you know


551
00:26:14,696 --> 00:26:17,366
that the user no longer will
have access to the preview UI.


552
00:26:18,656 --> 00:26:20,306
So you probably want
to discard it earlier.


553
00:26:20,816 --> 00:26:25,526
So in our example with DemoBots,
if the user transitions


554
00:26:25,526 --> 00:26:27,616
from the level end scene,
you know they're not going


555
00:26:27,616 --> 00:26:29,096
to be able to preview
the video anymore


556
00:26:29,326 --> 00:26:30,346
so you should probably
discard it.


557
00:26:31,446 --> 00:26:34,236
To do that in code, in
our particular example,


558
00:26:34,576 --> 00:26:36,356
and I will transition to
the next level scene --


559
00:26:36,546 --> 00:26:40,616
next method, we simply call
discard recording with handler


560
00:26:41,246 --> 00:26:44,856
and once that returns, we
transition to the next level.


561
00:26:45,386 --> 00:26:49,416
Next up is recording indicators.


562
00:26:50,896 --> 00:26:53,676
So when ReplayKit is
recording, you probably want


563
00:26:53,676 --> 00:26:57,146
to notify the user that
recording is happening and also


564
00:26:57,346 --> 00:26:58,966
if voice commentary
is on or off.


565
00:27:00,486 --> 00:27:03,576
So to implement this, you can
simply query the recording


566
00:27:03,576 --> 00:27:06,206
and the microphone enable
properties in RPScreenRecorder


567
00:27:07,216 --> 00:27:09,836
and use the values of those
to toggle the visibility


568
00:27:10,066 --> 00:27:11,216
of your recording indicators.


569
00:27:12,256 --> 00:27:13,246
Again, pretty straightforward.


570
00:27:13,866 --> 00:27:16,936
So next up is excluding UI.


571
00:27:17,926 --> 00:27:22,326
So there's certain elements in
a game that are really useful


572
00:27:22,326 --> 00:27:25,056
for users, but pretty
uninteresting


573
00:27:25,056 --> 00:27:25,926
to spectators, right?


574
00:27:26,456 --> 00:27:27,676
We just talked about
one of those.


575
00:27:27,676 --> 00:27:28,636
Recording indicators.


576
00:27:28,636 --> 00:27:31,576
They are great for the user
to know, but for a spectator,


577
00:27:31,666 --> 00:27:32,376
they are pretty useless.


578
00:27:32,666 --> 00:27:35,876
They know that the recording
is on and voice commentary is


579
00:27:35,876 --> 00:27:37,216
on because they are
watching the video, right?


580
00:27:37,336 --> 00:27:40,666
So you probably want
to exclude those.


581
00:27:41,126 --> 00:27:43,296
A couple more examples
of virtual controls


582
00:27:43,706 --> 00:27:44,946
and pause and menu buttons.


583
00:27:45,786 --> 00:27:47,356
These may clutter
up the recordings


584
00:27:47,636 --> 00:27:49,156
and not be necessary
for spectators.


585
00:27:49,496 --> 00:27:52,606
How do you exclude UI
from the ReplayKit?


586
00:27:53,786 --> 00:27:58,186
So ReplayKit only records your
applications main UI window.


587
00:27:58,746 --> 00:28:03,566
If you want to exclude any UI,
you simply create a new instance


588
00:28:03,566 --> 00:28:07,586
of UI window and place any
elements you want hidden


589
00:28:08,116 --> 00:28:09,506
in that new instance.


590
00:28:10,756 --> 00:28:11,866
That's excluding UI.


591
00:28:12,586 --> 00:28:16,656
Next up is choosing
when to record.


592
00:28:17,326 --> 00:28:20,036
So if you remember in DemoBots,


593
00:28:20,316 --> 00:28:24,086
we know that DemoBots has short
game play sessions lasting only


594
00:28:24,086 --> 00:28:24,836
two or three minutes.


595
00:28:26,066 --> 00:28:27,956
So we went for an
automatic recording strategy


596
00:28:27,956 --> 00:28:30,066
where we automatically
record each game level.


597
00:28:30,666 --> 00:28:33,286
But some games are
different, right?


598
00:28:34,586 --> 00:28:37,816
For example, in RPG, there's
longer gameplay sessions,


599
00:28:38,326 --> 00:28:40,256
it might have more spread
out interesting events,


600
00:28:40,636 --> 00:28:43,296
but it really doesn't make sense
to record the entire session.


601
00:28:43,626 --> 00:28:46,036
Instead you should give the
user the ability to start


602
00:28:46,036 --> 00:28:47,256
and stop recording at will.


603
00:28:48,596 --> 00:28:51,646
To do this, you simply build
your own recording controls


604
00:28:52,416 --> 00:28:55,836
that allow users to do that.


605
00:28:56,046 --> 00:28:57,426
Again, all games are different.


606
00:28:58,136 --> 00:28:59,816
So you should just
choose what is appropriate


607
00:28:59,816 --> 00:29:02,086
for your particular game type.


608
00:29:03,916 --> 00:29:06,256
All right, so that actually
concludes the fine tuning


609
00:29:06,256 --> 00:29:07,016
session as well.


610
00:29:07,016 --> 00:29:10,486
So we went over how to
verify availability,


611
00:29:11,036 --> 00:29:13,956
how to discard the recording,
how to show the indicator,


612
00:29:14,606 --> 00:29:17,776
how to exclude any UI, and also
choosing the best recording


613
00:29:17,776 --> 00:29:18,776
strategy for your game.


614
00:29:19,396 --> 00:29:23,376
Now, we would like
to show you a demo.


615
00:29:24,586 --> 00:29:28,116
So a couple of weeks ago,
we invited Spacetime Studios


616
00:29:28,116 --> 00:29:31,906
over to Cupertino to check out
ReplayKit and try to adopt it


617
00:29:32,436 --> 00:29:34,196
into the upcoming game,
Call of Champions.


618
00:29:34,876 --> 00:29:37,436
So I'd like to welcome
up on stage Cinco Barnes


619
00:29:37,436 --> 00:29:41,026
from Spacetime Studios to
share his experiences with us.


620
00:29:41,066 --> 00:29:41,946
Please welcome Cinco.


621
00:29:42,516 --> 00:29:45,316
[Applause]


622
00:29:45,816 --> 00:29:46,556
>> CINCO BARNES: Thanks, Edwin.


623
00:29:47,386 --> 00:29:48,396
I'm Cinco Barnes.


624
00:29:48,716 --> 00:29:53,296
I founded Spacetime Studios
with my partners back in 2005.


625
00:29:53,816 --> 00:29:59,976
Our purpose was to make
hard core PC games but all


626
00:29:59,976 --> 00:30:04,006
of that went out of the
window in 2009 with iOS


627
00:30:04,006 --> 00:30:07,776
and the first iPad and our
release of Pocket Legends.


628
00:30:08,126 --> 00:30:10,266
Since then we have been
dedicated to the iOS platform


629
00:30:10,266 --> 00:30:12,166
for gaming and it's
been fantastic.


630
00:30:12,646 --> 00:30:15,836
Today I get to talk to you
about Call of Champions


631
00:30:15,836 --> 00:30:18,006
as a case for ReplayKit.


632
00:30:18,006 --> 00:30:18,996
I definitely want to talk to you


633
00:30:18,996 --> 00:30:20,876
about how it affects
the game itself


634
00:30:21,166 --> 00:30:25,566
but the big message is how this
builds community, specifically


635
00:30:25,566 --> 00:30:28,646
for us as a community
of gamers, active gamers


636
00:30:28,646 --> 00:30:29,486
into something like this.


637
00:30:29,896 --> 00:30:31,356
I want to give you a
little bit of history


638
00:30:31,356 --> 00:30:33,016
on who we are in some context.


639
00:30:33,316 --> 00:30:37,626
Spacetime Studios has always
endeavored to take core games,


640
00:30:37,626 --> 00:30:43,286
distill them and adapt them into
our mobile gaming lifestyle.


641
00:30:43,686 --> 00:30:46,366
It's the way that we
found our voice in trying


642
00:30:46,366 --> 00:30:49,376
to provide things that are
both immediately accessible


643
00:30:49,686 --> 00:30:51,886
and things that are
strategically rich.


644
00:30:52,356 --> 00:30:55,686
And our next product here
is Call of Champions.


645
00:30:56,196 --> 00:30:59,296
Call of Champions is
a mobile battle arena.


646
00:30:59,636 --> 00:31:01,926
It's a three-on-three team game,


647
00:31:02,206 --> 00:31:05,326
its got a neat Rugby-inspired
lane mechanic,


648
00:31:05,576 --> 00:31:07,866
it's got shooter style
power ups in the middle.


649
00:31:08,266 --> 00:31:12,276
The main thing is it's squeezed
into a five-minute segment


650
00:31:12,276 --> 00:31:15,086
like a mixed martial arts fight.


651
00:31:15,086 --> 00:31:19,166
We worked really hard to load
those five minutes with all


652
00:31:19,166 --> 00:31:22,166
of the different choices and
all the different strategies


653
00:31:22,166 --> 00:31:25,026
that we know that our
audience loves to play.


654
00:31:25,026 --> 00:31:29,626
But we also know that the
audience that's attracted


655
00:31:29,626 --> 00:31:33,386
to these kinds of games
doesn't just enjoy playing them.


656
00:31:33,956 --> 00:31:36,176
They love to watch them.


657
00:31:36,176 --> 00:31:37,946
They love to watch live games.


658
00:31:37,946 --> 00:31:41,756
One of the things that we did
also was include a spectator


659
00:31:41,756 --> 00:31:43,246
mode for watching just that,


660
00:31:43,246 --> 00:31:45,516
live games anywhere
around the world.


661
00:31:45,816 --> 00:31:48,696
And on its own this
satisfies our side of it.


662
00:31:49,046 --> 00:31:53,386
But then we also know how
people would love to record


663
00:31:53,386 --> 00:31:56,476
and share this as part
of the energy of creating


664
00:31:56,616 --> 00:32:00,076
that community of gamers and
that's where ReplayKit comes in.


665
00:32:01,126 --> 00:32:04,276
Here's an example of a replay
that I'm sharing with you.


666
00:32:04,906 --> 00:32:06,566
As a designer of
a game like this,


667
00:32:06,616 --> 00:32:09,656
I've got some top
level programmers


668
00:32:09,706 --> 00:32:12,106
that are beating the heck
out of me and my partners


669
00:32:12,406 --> 00:32:15,506
and I really want to show
off the features that we have


670
00:32:15,506 --> 00:32:18,006
in spectator and
replays allows me to do


671
00:32:18,006 --> 00:32:19,426
that here in this context.


672
00:32:19,826 --> 00:32:22,316
There's tons of cool stuff
going on inside of this


673
00:32:22,716 --> 00:32:26,286
but the addition of my
commentary and the presentation


674
00:32:26,286 --> 00:32:29,506
of this in a shared environment
is really what ReplayKit is


675
00:32:29,556 --> 00:32:30,086
all about.


676
00:32:30,086 --> 00:32:35,696
I mean, we see how this works
really well for a game like Call


677
00:32:35,696 --> 00:32:39,706
of Champions, but it's our
position that it would work


678
00:32:39,706 --> 00:32:44,346
for anyone who is actively
trying to foster a community


679
00:32:44,556 --> 00:32:47,586
in today's media-rich market.


680
00:32:48,486 --> 00:32:50,096
That's an excellent
shot right there.


681
00:32:50,096 --> 00:32:52,726
A skill shot, by the way
and a professional gamer,


682
00:32:53,436 --> 00:32:55,556
killing my partner by
setting him on fire.


683
00:32:55,786 --> 00:32:58,206
And capturing these moments
and being able to share them


684
00:32:58,206 --> 00:33:00,306
from the tail end of a
game that was important


685
00:33:00,346 --> 00:33:03,526
to me is exactly the
spirit of all of this.


686
00:33:04,076 --> 00:33:06,806
So when I think about ReplayKit,


687
00:33:06,946 --> 00:33:11,516
I see it as a crazy powerful
means to address this community


688
00:33:11,726 --> 00:33:13,986
and to embrace the fact
that we are all playing,


689
00:33:13,986 --> 00:33:17,006
we are all sharing and being
able to bring this stuff


690
00:33:17,256 --> 00:33:22,006
to a game like Call of Champions
was really easy for us.


691
00:33:22,006 --> 00:33:24,686
The implementation took us,
well we have one guy, Rick,


692
00:33:24,686 --> 00:33:26,096
and he did it in a day.


693
00:33:26,226 --> 00:33:27,226
So no excuses.


694
00:33:27,226 --> 00:33:29,126
It's spectacular!


695
00:33:29,376 --> 00:33:31,286
That's what I have
to say about it.


696
00:33:31,796 --> 00:33:32,996
Thank you very much
for your time.


697
00:33:32,996 --> 00:33:33,976
Edwin, I'm taking
it back to you.


698
00:33:34,171 --> 00:33:36,171
[Applause]


699
00:33:36,326 --> 00:33:37,116
>> EDWIN ISKANDAR:
Thank you, Cinco.


700
00:33:37,256 --> 00:33:39,576
That was awesome.


701
00:33:39,576 --> 00:33:41,366
So unfortunately that
concludes our session,


702
00:33:41,366 --> 00:33:42,726
what's new in social gaming.


703
00:33:42,996 --> 00:33:46,276
Just to recap, Megan talked
to us about the changes made


704
00:33:46,276 --> 00:33:49,116
at Game Center, like adding
guest players which allow


705
00:33:49,116 --> 00:33:51,596
for new player configuration
and Game Center multiplayer.


706
00:33:52,436 --> 00:33:54,546
She also talked about how
we streamline development,


707
00:33:54,546 --> 00:33:56,536
and testing of Game Center games


708
00:33:56,726 --> 00:33:59,126
by unifying the server
environments and removing


709
00:33:59,126 --> 00:34:00,236
that Game Center Sandbox.


710
00:34:01,406 --> 00:34:04,266
And we introduced ReplayKit,
a whole new way to add social


711
00:34:04,266 --> 00:34:07,576
into your games and it allows
you to record audio and visuals


712
00:34:07,576 --> 00:34:09,846
in your running application
and it does it efficiently


713
00:34:09,846 --> 00:34:11,696
and it has privacy
safeguards for the users.


714
00:34:12,545 --> 00:34:15,065
As you have seen, it's an
incredibly compact framework


715
00:34:15,065 --> 00:34:17,085
and has incredibly
simple adoption.


716
00:34:18,846 --> 00:34:22,275
For more information, go to
developer.Apple.com and refer


717
00:34:22,275 --> 00:34:25,696
to the documentation or
contact Alan Schaffer our game


718
00:34:25,696 --> 00:34:27,136
technologies evangelist.


719
00:34:28,126 --> 00:34:31,585
I urge you to download the iOS
9 data, check out ReplayKit,


720
00:34:31,676 --> 00:34:33,466
get it into your games,
bring them to the labs


721
00:34:33,466 --> 00:34:35,755
and show us what you've got.


722
00:34:35,896 --> 00:34:36,775
That's it for me.


723
00:34:36,846 --> 00:34:38,045
Thank you so much for attending.


724
00:34:38,045 --> 00:34:41,366
I hope you enjoy the rest
of your WWDC experience.


725
00:34:41,775 --> 00:34:41,976
Thank you.


726
00:34:42,507 --> 00:34:44,507
[Applause]

