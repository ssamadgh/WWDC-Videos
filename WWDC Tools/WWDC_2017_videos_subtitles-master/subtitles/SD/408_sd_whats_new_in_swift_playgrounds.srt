1
00:00:07,516 --> 00:00:16,500
[ Background Conversations ]


2
00:00:22,516 --> 00:00:29,676
[ Applause ]


3
00:00:30,176 --> 00:00:31,846
>> Hello, everyone, and welcome


4
00:00:31,846 --> 00:00:33,316
to What's New in Swift


5
00:00:33,316 --> 00:00:33,946
Playgrounds.


6
00:00:34,486 --> 00:00:35,326
My name is Connor.


7
00:00:35,576 --> 00:00:36,886
I'm an engineer on the Swift


8
00:00:36,886 --> 00:00:37,736
Playgrounds Team.


9
00:00:38,016 --> 00:00:39,196
And today, along with my


10
00:00:39,196 --> 00:00:41,186
colleagues Grace and Najla, I'll


11
00:00:41,186 --> 00:00:42,426
be sharing with you some of


12
00:00:42,426 --> 00:00:43,616
what's new in Swift Playgrounds


13
00:00:43,756 --> 00:00:44,796
since last year's conference.


14
00:00:47,486 --> 00:00:48,696
Today's session will be broken


15
00:00:48,696 --> 00:00:49,796
up into three parts.


16
00:00:50,626 --> 00:00:52,406
First, we'll take a quick look


17
00:00:52,406 --> 00:00:53,866
at the Playground book format to


18
00:00:53,866 --> 00:00:55,176
ensure that everyone is on the


19
00:00:55,206 --> 00:00:55,856
same page.


20
00:00:58,436 --> 00:01:00,126
Then, we'll talk about many of


21
00:01:00,126 --> 00:01:01,266
the enhancements which have been


22
00:01:01,266 --> 00:01:03,136
made to support building better


23
00:01:03,136 --> 00:01:03,776
Playground books.


24
00:01:05,126 --> 00:01:06,786
And finally, we'll introduce a


25
00:01:06,786 --> 00:01:08,746
brand-new API for interacting


26
00:01:08,746 --> 00:01:10,926
with and connecting to Bluetooth


27
00:01:10,926 --> 00:01:12,266
accessories in Playgrounds,


28
00:01:12,596 --> 00:01:13,626
allowing you to provide a


29
00:01:13,626 --> 00:01:14,976
consistent user experience.


30
00:01:15,036 --> 00:01:19,326
So let's get started by talking


31
00:01:19,326 --> 00:01:21,776
about Playground books.


32
00:01:23,896 --> 00:01:25,776
Swift Playgrounds supports two


33
00:01:25,776 --> 00:01:27,546
file formats, the classic


34
00:01:27,596 --> 00:01:29,336
Playground file format used by


35
00:01:29,336 --> 00:01:30,946
Xcode as well as the Playground


36
00:01:30,946 --> 00:01:32,616
book file format, which allows


37
00:01:32,616 --> 00:01:35,666
you to control the experience


38
00:01:35,786 --> 00:01:36,726
which your users see.


39
00:01:38,146 --> 00:01:39,756
Playground books are split up


40
00:01:39,756 --> 00:01:41,156
into chapters, which are then


41
00:01:41,246 --> 00:01:43,046
further subdivided into pages.


42
00:01:44,656 --> 00:01:45,816
Playground books may contain


43
00:01:45,816 --> 00:01:47,766
resources which are used either


44
00:01:47,916 --> 00:01:49,776
at runtime or in the prose which


45
00:01:49,776 --> 00:01:50,686
you show to your users.


46
00:01:50,686 --> 00:01:55,606
All of this is done with a


47
00:01:55,606 --> 00:01:57,076
package-based file format.


48
00:01:57,596 --> 00:01:58,416
If you're not familiar with what


49
00:01:58,416 --> 00:01:59,656
a package-based file format is,


50
00:01:59,986 --> 00:02:01,356
essentially instead of being a


51
00:02:01,356 --> 00:02:03,186
flat file, it's a folder which


52
00:02:03,186 --> 00:02:04,756
itself contains other files and


53
00:02:04,756 --> 00:02:06,376
folders which make up the


54
00:02:06,376 --> 00:02:06,876
document.


55
00:02:08,526 --> 00:02:09,686
If we take a peek inside the


56
00:02:09,686 --> 00:02:10,925
Playground book, we can see


57
00:02:10,925 --> 00:02:12,856
inside there some PLIST files,


58
00:02:12,856 --> 00:02:14,316
some Swift files, and a bunch of


59
00:02:14,316 --> 00:02:15,426
directories which make up the


60
00:02:15,426 --> 00:02:15,876
structure.


61
00:02:15,876 --> 00:02:19,036
Let's first take a look at the


62
00:02:19,036 --> 00:02:19,846
manifest files.


63
00:02:19,846 --> 00:02:22,286
You can think of these as


64
00:02:22,286 --> 00:02:23,626
something that's very similar to


65
00:02:23,626 --> 00:02:24,876
an app's info.plist.


66
00:02:25,766 --> 00:02:27,066
The manifest PLIST provides


67
00:02:27,246 --> 00:02:28,926
book-, chapter-, and page-level


68
00:02:28,926 --> 00:02:30,106
metadata, such as the name of


69
00:02:30,106 --> 00:02:32,196
the page or the icon which is


70
00:02:32,196 --> 00:02:33,536
used in the document browser.


71
00:02:35,586 --> 00:02:37,506
Manifest files also specify the


72
00:02:37,506 --> 00:02:39,356
options for the book, chapter,


73
00:02:39,356 --> 00:02:41,266
or page, such as whether or not


74
00:02:41,266 --> 00:02:42,416
the live view is visible by


75
00:02:42,416 --> 00:02:43,756
default or if you want


76
00:02:43,786 --> 00:02:44,836
Playground logging to be turned


77
00:02:45,656 --> 00:02:45,776
on.


78
00:02:46,856 --> 00:02:48,796
The other major component of a


79
00:02:48,796 --> 00:02:50,446
Playground book are Swift files,


80
00:02:50,986 --> 00:02:52,656
and there are three different


81
00:02:52,696 --> 00:02:54,226
kinds of Swift files inside of


82
00:02:54,226 --> 00:02:55,546
Playground books.


83
00:02:56,276 --> 00:02:57,836
The first of these is the


84
00:02:57,836 --> 00:02:59,046
Contents.swift file.


85
00:02:59,506 --> 00:03:00,886
This is the source file with


86
00:03:00,926 --> 00:03:02,396
which your users interact, and


87
00:03:02,596 --> 00:03:03,856
it's where you can store the


88
00:03:03,856 --> 00:03:05,666
prose which is shown to your


89
00:03:05,666 --> 00:03:07,786
user inside of special markup


90
00:03:07,786 --> 00:03:09,746
comments in the Swift file.


91
00:03:11,986 --> 00:03:13,346
There's also the LiveView.swift


92
00:03:13,346 --> 00:03:13,686
file.


93
00:03:13,976 --> 00:03:15,496
This allows you to provide an


94
00:03:15,586 --> 00:03:17,276
always on live view, which


95
00:03:17,276 --> 00:03:18,726
provides a rich and interactive


96
00:03:18,726 --> 00:03:20,286
experience for your users for


97
00:03:20,286 --> 00:03:21,456
the entire time they're on the


98
00:03:21,456 --> 00:03:22,586
page instead of just when


99
00:03:22,586 --> 00:03:23,786
they're running their code.


100
00:03:25,476 --> 00:03:27,566
And finally, you also have the


101
00:03:27,566 --> 00:03:29,126
auxiliary source files.


102
00:03:29,666 --> 00:03:30,926
These are stored in the book,


103
00:03:30,926 --> 00:03:32,506
chapter, and page and allow you


104
00:03:32,506 --> 00:03:33,896
to provide additional API


105
00:03:34,626 --> 00:03:36,016
through separate Swift modules


106
00:03:36,016 --> 00:03:37,736
which are automatically imported


107
00:03:37,736 --> 00:03:38,556
at each level.


108
00:03:40,426 --> 00:03:41,646
For more information on the


109
00:03:41,646 --> 00:03:43,296
Playground book file format, I'd


110
00:03:43,296 --> 00:03:44,366
really recommend that you take a


111
00:03:44,366 --> 00:03:45,596
look at last year's session,


112
00:03:45,596 --> 00:03:47,036
Introducing Swift Playgrounds,


113
00:03:47,036 --> 00:03:48,176
where some of my colleagues go


114
00:03:48,176 --> 00:03:49,466
into this in a lot more depth.


115
00:03:50,266 --> 00:03:51,066
There's also really great


116
00:03:51,066 --> 00:03:52,536
documentation available on


117
00:03:52,536 --> 00:03:55,746
developer.apple.com.


118
00:03:56,976 --> 00:03:58,396
Let's now take a look at some of


119
00:03:58,396 --> 00:04:00,046
the new features in Swift


120
00:04:00,046 --> 00:04:01,186
Playgrounds since last year.


121
00:04:02,636 --> 00:04:05,646
First up is support for copying


122
00:04:05,646 --> 00:04:06,736
code between pages.


123
00:04:07,366 --> 00:04:08,446
This allows you to build a


124
00:04:08,446 --> 00:04:10,326
Playground book which continues


125
00:04:10,326 --> 00:04:11,966
a narrative from page to page


126
00:04:11,966 --> 00:04:13,446
while allowing users to evolve


127
00:04:13,446 --> 00:04:14,336
the code that they're writing.


128
00:04:15,306 --> 00:04:16,495
So when I open up a page that


129
00:04:16,495 --> 00:04:19,016
uses this feature, as a user, I


130
00:04:19,016 --> 00:04:20,466
see a prompt to either bring


131
00:04:20,466 --> 00:04:21,706
over my code from the previous


132
00:04:21,706 --> 00:04:23,106
page or to start coding


133
00:04:23,106 --> 00:04:23,856
immediately.


134
00:04:25,046 --> 00:04:27,006
If I then tap on the button to


135
00:04:27,006 --> 00:04:29,206
bring my code forward, then my


136
00:04:29,336 --> 00:04:31,016
implementation from the previous


137
00:04:31,016 --> 00:04:32,496
page is automatically copied for


138
00:04:32,496 --> 00:04:33,886
me and the source editor is


139
00:04:33,886 --> 00:04:35,176
shown, allowing me to begin


140
00:04:35,176 --> 00:04:35,536
coding.


141
00:04:40,946 --> 00:04:42,366
The next new feature is support


142
00:04:42,366 --> 00:04:43,986
for speed control in Swift


143
00:04:43,986 --> 00:04:44,476
Playgrounds.


144
00:04:45,476 --> 00:04:46,456
This allows you to control the


145
00:04:46,456 --> 00:04:48,206
speed of execution, and there's


146
00:04:48,206 --> 00:04:48,926
two forms for this.


147
00:04:50,096 --> 00:04:52,256
First up is support for stepping


148
00:04:52,306 --> 00:04:53,576
through code as it executes.


149
00:04:53,966 --> 00:04:55,076
So if you tap the speed control


150
00:04:55,076 --> 00:04:56,216
in the live view at the bottom


151
00:04:56,216 --> 00:04:57,496
left, you can select Step


152
00:04:57,496 --> 00:04:59,676
Through My Code, and then as the


153
00:04:59,676 --> 00:05:01,466
code executes in the live view,


154
00:05:01,576 --> 00:05:02,476
the line of code, which


155
00:05:02,476 --> 00:05:03,646
corresponds to the current


156
00:05:03,866 --> 00:05:05,076
action, is highlighted in the


157
00:05:05,136 --> 00:05:05,686
source editor.


158
00:05:05,686 --> 00:05:07,436
So you can see, as Bite moves


159
00:05:07,436 --> 00:05:08,736
around the puzzle world, the


160
00:05:08,736 --> 00:05:10,426
line of code directing the


161
00:05:10,426 --> 00:05:13,526
action is highlighted.


162
00:05:14,306 --> 00:05:15,416
Swift Playgrounds now also


163
00:05:15,416 --> 00:05:17,166
supports running faster than the


164
00:05:17,166 --> 00:05:18,846
default speed if your Playground


165
00:05:18,846 --> 00:05:19,536
book supports it.


166
00:05:19,536 --> 00:05:22,106
So again, you can tap on the


167
00:05:22,106 --> 00:05:24,086
speed control in the live view


168
00:05:24,286 --> 00:05:25,646
and then select Run Faster or


169
00:05:25,646 --> 00:05:26,316
Run Fastest.


170
00:05:27,096 --> 00:05:28,516
Learn to Code 1 and 2 take


171
00:05:28,516 --> 00:05:29,826
advantage of this feature to


172
00:05:29,856 --> 00:05:31,256
make Bite move more quickly


173
00:05:31,256 --> 00:05:33,326
throughout the puzzle world.


174
00:05:34,176 --> 00:05:37,726
Swift Playgrounds will now show


175
00:05:37,726 --> 00:05:39,786
runtime errors which occur in


176
00:05:40,066 --> 00:05:41,036
your Playgrounds.


177
00:05:41,536 --> 00:05:43,276
So in this case, I have created


178
00:05:43,276 --> 00:05:45,126
an array with five items, and


179
00:05:45,126 --> 00:05:46,686
then I try and access the item


180
00:05:46,686 --> 00:05:48,676
at index 5, which results in an


181
00:05:48,676 --> 00:05:49,806
index out of range error.


182
00:05:50,826 --> 00:05:51,916
Swift Playgrounds is able to


183
00:05:51,916 --> 00:05:53,326
determine which line of code


184
00:05:53,326 --> 00:05:55,306
caused execution to crash and


185
00:05:55,306 --> 00:05:56,836
then highlights the line with


186
00:05:57,216 --> 00:06:01,256
the text that's provided.


187
00:06:01,256 --> 00:06:03,976
Users are now able to add,


188
00:06:04,546 --> 00:06:07,566
delete, rename, reorder, and


189
00:06:07,566 --> 00:06:09,276
duplicate pages inside of


190
00:06:09,366 --> 00:06:10,356
Playground books, which they


191
00:06:10,356 --> 00:06:11,306
create inside of Swift


192
00:06:11,306 --> 00:06:12,916
Playgrounds, including all of


193
00:06:12,916 --> 00:06:14,366
the Apple-provided starting


194
00:06:14,936 --> 00:06:15,086
points.


195
00:06:16,176 --> 00:06:19,126
Swift Playgrounds is now


196
00:06:19,126 --> 00:06:20,956
localized into a few more


197
00:06:20,956 --> 00:06:22,786
languages to increase its reach.


198
00:06:23,676 --> 00:06:24,966
So Swift Playgrounds and all of


199
00:06:24,966 --> 00:06:26,206
the Apple-provided content is


200
00:06:26,206 --> 00:06:27,656
now available in simplified


201
00:06:27,656 --> 00:06:31,136
Chinese, Japanese, French,


202
00:06:32,216 --> 00:06:35,696
German, and Latin American


203
00:06:37,306 --> 00:06:37,716
Spanish.


204
00:06:37,926 --> 00:06:40,436
And you as an author can


205
00:06:40,436 --> 00:06:41,796
localize into any of these


206
00:06:41,796 --> 00:06:43,476
languages or any of the others


207
00:06:43,516 --> 00:06:44,496
which iOS supports.


208
00:06:45,516 --> 00:06:51,816
[ Applause ]


209
00:06:52,316 --> 00:06:53,976
Coming in Swift Playgrounds 2 is


210
00:06:53,976 --> 00:06:56,146
support for the iOS 11 SDK, and


211
00:06:56,716 --> 00:06:58,256
this means that a handful of new


212
00:06:58,316 --> 00:06:59,706
frameworks are now available for


213
00:06:59,706 --> 00:07:01,096
use in Playgrounds in Swift


214
00:07:01,096 --> 00:07:01,726
Playgrounds 2.


215
00:07:01,726 --> 00:07:05,126
This includes ARKit, CoreML,


216
00:07:05,586 --> 00:07:08,246
IOSurface, PDFKit, and Vision.


217
00:07:09,816 --> 00:07:11,466
Additionally, Playgrounds may


218
00:07:11,466 --> 00:07:13,046
now access the camera if they're


219
00:07:13,046 --> 00:07:14,186
running on iOS 11.


220
00:07:14,546 --> 00:07:15,916
You can use the AVFoundation


221
00:07:15,916 --> 00:07:17,006
APIs to get access to the


222
00:07:17,006 --> 00:07:17,406
camera.


223
00:07:18,156 --> 00:07:19,006
It's important to note, though,


224
00:07:19,006 --> 00:07:20,566
that this won't work on earlier


225
00:07:20,566 --> 00:07:22,376
versions of iOS, so if your


226
00:07:22,436 --> 00:07:23,396
Playground depends on the


227
00:07:23,466 --> 00:07:24,666
camera, we recommend that you


228
00:07:24,706 --> 00:07:26,176
set its deployment target to iOS


229
00:07:26,176 --> 00:07:26,586
11.


230
00:07:27,106 --> 00:07:30,146
And now, let's hop into a demo


231
00:07:30,146 --> 00:07:31,056
to take a look at a couple of


232
00:07:31,056 --> 00:07:31,566
these features.


233
00:07:32,516 --> 00:07:40,446
[ Applause ]


234
00:07:40,946 --> 00:07:42,886
OK, so here I have Swift


235
00:07:42,886 --> 00:07:44,366
Playgrounds, and I'm going to go


236
00:07:44,366 --> 00:07:47,336
ahead and launch it.


237
00:07:47,336 --> 00:07:49,496
And Najla, Grace, and I are each


238
00:07:49,526 --> 00:07:50,626
working on Playground books


239
00:07:51,006 --> 00:07:52,636
representing kind of our kitchen


240
00:07:52,636 --> 00:07:53,686
where we're going to use Swift


241
00:07:53,686 --> 00:07:55,906
code to make some things.


242
00:07:55,906 --> 00:07:56,896
And I'm going to start out by


243
00:07:56,896 --> 00:07:57,466
making a cake.


244
00:07:58,286 --> 00:07:59,386
So I'll go ahead and open up my


245
00:07:59,436 --> 00:08:00,036
Playground book.


246
00:08:00,036 --> 00:08:02,296
And we're going to start from


247
00:08:02,296 --> 00:08:04,416
the very beginning by making


248
00:08:04,416 --> 00:08:06,656
our, making some butter on our


249
00:08:06,656 --> 00:08:07,246
own.


250
00:08:08,046 --> 00:08:09,166
So we've got this makeButter


251
00:08:09,166 --> 00:08:10,856
function and we've got the cream


252
00:08:10,856 --> 00:08:11,746
that we need for the butter.


253
00:08:11,746 --> 00:08:14,476
So I'll go in and just add some


254
00:08:15,436 --> 00:08:17,166
code to churn that cream, which


255
00:08:17,166 --> 00:08:18,156
will then produce the butter


256
00:08:18,156 --> 00:08:18,776
that we want.


257
00:08:18,776 --> 00:08:22,506
I can then run my code, and then


258
00:08:22,506 --> 00:08:23,866
we'll see in the live view that,


259
00:08:23,866 --> 00:08:25,196
hey, we got the cream, we've


260
00:08:25,196 --> 00:08:26,726
churned it, and then we have


261
00:08:27,096 --> 00:08:27,546
butter.


262
00:08:27,646 --> 00:08:29,146
So it's then, Swift Playgrounds


263
00:08:29,146 --> 00:08:29,986
is then telling us that we've


264
00:08:29,986 --> 00:08:31,156
successfully completed the task.


265
00:08:31,256 --> 00:08:33,876
I'll go on to the next page, and


266
00:08:34,366 --> 00:08:35,496
we're going to use that butter


267
00:08:35,496 --> 00:08:36,466
to make some frosting.


268
00:08:36,466 --> 00:08:39,246
And instead of having to take a


269
00:08:39,246 --> 00:08:41,496
author-provided version of


270
00:08:41,556 --> 00:08:43,946
butter, I'm going to be able to


271
00:08:43,946 --> 00:08:46,476
pull my butter function from the


272
00:08:46,476 --> 00:08:47,266
previous page.


273
00:08:47,796 --> 00:08:48,746
So I'll tap on Bring Over My


274
00:08:48,746 --> 00:08:50,886
Code, and then I see the


275
00:08:50,886 --> 00:08:51,856
makeButter function that I


276
00:08:51,856 --> 00:08:54,116
implemented is copied over to


277
00:08:54,116 --> 00:08:54,766
this page.


278
00:08:55,706 --> 00:08:56,886
Additionally, the authors


279
00:08:56,886 --> 00:08:59,006
provided a makeFrosting


280
00:08:59,056 --> 00:09:00,366
function, which I'll then fill


281
00:09:00,366 --> 00:09:00,596
out.


282
00:09:00,596 --> 00:09:02,226
So we've got all the ingredients


283
00:09:02,226 --> 00:09:03,476
we need for the frosting: the


284
00:09:03,476 --> 00:09:05,456
butter, powdered sugar, vanilla,


285
00:09:05,456 --> 00:09:05,856
and milk.


286
00:09:07,456 --> 00:09:08,936
So I'll go ahead and make this


287
00:09:09,256 --> 00:09:11,036
return frosting, which I can do


288
00:09:12,006 --> 00:09:12,826
by mixing together these


289
00:09:12,826 --> 00:09:14,126
ingredients.


290
00:09:14,646 --> 00:09:15,316
Let's look at the powdered


291
00:09:15,316 --> 00:09:21,466
sugar, the butter, the vanilla,


292
00:09:23,036 --> 00:09:23,526
and the milk.


293
00:09:24,026 --> 00:09:25,516
And because I want to see


294
00:09:25,516 --> 00:09:27,806
exactly what happens to make


295
00:09:27,806 --> 00:09:29,036
this frosting, I'm going to


296
00:09:29,036 --> 00:09:31,836
enable Step Through My Code.


297
00:09:32,276 --> 00:09:33,166
We'll see that we start the


298
00:09:33,166 --> 00:09:34,586
makeFrosting function, then we


299
00:09:34,586 --> 00:09:36,016
start to make butter, and we see


300
00:09:36,016 --> 00:09:37,226
the live view update as we make


301
00:09:37,226 --> 00:09:37,576
the butter.


302
00:09:37,576 --> 00:09:39,746
Look at the powdered sugar, the


303
00:09:39,746 --> 00:09:40,946
vanilla, and the milk.


304
00:09:40,946 --> 00:09:42,736
Then, we mix it all together to


305
00:09:42,736 --> 00:09:43,496
get frosting.


306
00:09:43,866 --> 00:09:44,916
And so there we've completed the


307
00:09:44,916 --> 00:09:46,556
task on this page that we want.


308
00:09:47,676 --> 00:09:48,446
So I'll move forward.


309
00:09:48,446 --> 00:09:51,216
And now, we're going to go on


310
00:09:51,216 --> 00:09:52,406
and start making the cake.


311
00:09:53,086 --> 00:09:54,756
But if I look at this, there's a


312
00:09:54,756 --> 00:09:55,906
lot of ingredients here that it


313
00:09:55,906 --> 00:09:57,506
wants me to collect, and I think


314
00:09:57,506 --> 00:09:58,506
there's going to be a little bit


315
00:09:58,506 --> 00:09:59,516
more work that I need to make


316
00:09:59,516 --> 00:10:00,876
this cake, and I'm kind of


317
00:10:00,876 --> 00:10:01,816
running short on time.


318
00:10:02,236 --> 00:10:03,196
So I'm going to pretend that I'm


319
00:10:03,196 --> 00:10:04,366
on a cooking show and move


320
00:10:04,366 --> 00:10:06,276
straight to the end.


321
00:10:07,106 --> 00:10:08,496
So I'll tap on this Let's Eat


322
00:10:08,496 --> 00:10:09,276
Cake page.


323
00:10:10,156 --> 00:10:12,236
And Swift Playgrounds is telling


324
00:10:12,236 --> 00:10:13,256
me that I should go back and


325
00:10:13,256 --> 00:10:15,076
finish making this cake, but


326
00:10:15,076 --> 00:10:17,296
because I can go to any page at


327
00:10:17,296 --> 00:10:19,016
all, I'm able to tap in this


328
00:10:19,256 --> 00:10:20,526
Start Cooking on This Page


329
00:10:20,776 --> 00:10:23,736
button, which will then use the


330
00:10:23,736 --> 00:10:25,266
default implementation of the


331
00:10:25,266 --> 00:10:25,576
cake.


332
00:10:25,576 --> 00:10:27,106
So we'll see the authors


333
00:10:27,106 --> 00:10:28,386
provided a makeButter and a


334
00:10:28,386 --> 00:10:29,366
makeFrosting function.


335
00:10:30,376 --> 00:10:32,456
Then, the author has all of the


336
00:10:32,456 --> 00:10:34,386
ingredients needed for the cake.


337
00:10:34,386 --> 00:10:36,546
The ingredients are then mixed


338
00:10:36,636 --> 00:10:38,466
together into a batter, which is


339
00:10:38,466 --> 00:10:40,076
then baked in an oven, and then


340
00:10:40,076 --> 00:10:42,976
we let that hot cake cool before


341
00:10:42,976 --> 00:10:43,456
frosting it.


342
00:10:43,576 --> 00:10:45,156
So I'm going to come in here at


343
00:10:45,156 --> 00:10:46,846
the bottom and just call a


344
00:10:46,846 --> 00:10:47,856
function to eat the cake.


345
00:10:48,316 --> 00:10:50,926
Because I want to go as quickly


346
00:10:50,926 --> 00:10:52,006
as possible to get through this,


347
00:10:52,076 --> 00:10:53,306
I'm going to actually tap on Run


348
00:10:53,366 --> 00:10:55,546
Fastest, which will then go


349
00:10:55,546 --> 00:10:56,736
through each step very, very


350
00:10:56,736 --> 00:10:57,306
quickly.


351
00:10:57,426 --> 00:10:58,456
We can see in just a matter of


352
00:10:58,456 --> 00:11:00,076
moments I have the cake that I


353
00:11:00,076 --> 00:11:00,736
was looking for.


354
00:11:02,046 --> 00:11:03,826
So great. I've now showed you a


355
00:11:04,016 --> 00:11:05,406
handful of features that are new


356
00:11:05,406 --> 00:11:06,176
in Swift Playgrounds.


357
00:11:06,586 --> 00:11:07,916
Let's now take a look at how you


358
00:11:07,916 --> 00:11:08,846
can adopt them in your


359
00:11:08,846 --> 00:11:09,456
Playground books.


360
00:11:11,516 --> 00:11:15,500
[ Applause ]


361
00:11:21,546 --> 00:11:22,666
The first feature I showed you


362
00:11:22,666 --> 00:11:24,286
was support for copying code


363
00:11:24,286 --> 00:11:25,136
between pages.


364
00:11:25,766 --> 00:11:27,526
This allows you to craft a


365
00:11:27,526 --> 00:11:29,116
Playground book where the user


366
00:11:29,116 --> 00:11:30,696
is constantly refining their


367
00:11:30,696 --> 00:11:32,316
implementation of a particular


368
00:11:32,316 --> 00:11:33,946
function or of other code.


369
00:11:35,046 --> 00:11:37,906
For a user, when I look at a


370
00:11:37,976 --> 00:11:39,666
page which is being used as the


371
00:11:39,666 --> 00:11:41,476
source of copyable code, I


372
00:11:41,546 --> 00:11:42,646
really don't actually see much


373
00:11:42,646 --> 00:11:43,126
difference.


374
00:11:43,446 --> 00:11:45,106
I just see an editable area


375
00:11:45,106 --> 00:11:46,486
where I can insert some code.


376
00:11:46,486 --> 00:11:48,476
But if we take a peek at the


377
00:11:48,476 --> 00:11:49,576
code underneath, there's a


378
00:11:49,616 --> 00:11:50,986
little bit of stuff that you as


379
00:11:50,986 --> 00:11:52,696
the author provide to let Swift


380
00:11:52,696 --> 00:11:53,646
Playgrounds know what should be


381
00:11:53,646 --> 00:11:54,066
copied.


382
00:11:55,246 --> 00:11:57,476
That is these copy source tags,


383
00:11:57,596 --> 00:11:59,306
which allow you to tag a region


384
00:11:59,306 --> 00:12:01,576
of the page with an identifier,


385
00:12:01,576 --> 00:12:02,756
which then you can reference


386
00:12:02,856 --> 00:12:03,186
later.


387
00:12:03,916 --> 00:12:08,006
On a page onto which code is


388
00:12:08,006 --> 00:12:10,426
being copied, as a user, when I


389
00:12:10,426 --> 00:12:11,646
first open it, instead of being


390
00:12:11,646 --> 00:12:12,996
presented with a source editor,


391
00:12:13,166 --> 00:12:14,566
I'm presented with the option to


392
00:12:14,566 --> 00:12:15,656
either copy my code from the


393
00:12:15,656 --> 00:12:17,306
previous page or use the default


394
00:12:17,306 --> 00:12:18,046
implementation.


395
00:12:19,796 --> 00:12:20,846
If I haven't yet successfully


396
00:12:20,846 --> 00:12:22,506
completed that page, instead of


397
00:12:22,506 --> 00:12:23,926
being asked if I want to copy


398
00:12:23,926 --> 00:12:25,716
code, I'm asked if I want to go


399
00:12:25,716 --> 00:12:27,366
back to that page to finish it


400
00:12:27,426 --> 00:12:27,686
first.


401
00:12:28,086 --> 00:12:28,996
But I'm still presented with the


402
00:12:28,996 --> 00:12:30,466
option to start working on this


403
00:12:30,466 --> 00:12:31,226
page immediately.


404
00:12:31,856 --> 00:12:34,656
Once the user makes a selection


405
00:12:34,656 --> 00:12:36,216
to either copy code or use the


406
00:12:36,216 --> 00:12:38,016
default implementation, then the


407
00:12:38,016 --> 00:12:38,876
regular source editor's


408
00:12:38,876 --> 00:12:39,936
presented with a code they


409
00:12:39,936 --> 00:12:40,236
expect.


410
00:12:40,236 --> 00:12:42,606
Let's take a look at how this


411
00:12:42,676 --> 00:12:43,816
happens in the source code


412
00:12:43,816 --> 00:12:44,246
itself.


413
00:12:45,266 --> 00:12:47,246
And it's very similar to the


414
00:12:47,246 --> 00:12:47,726
other case.


415
00:12:48,226 --> 00:12:49,456
Instead of providing copy source


416
00:12:49,456 --> 00:12:51,196
tags, though, you provide a copy


417
00:12:51,196 --> 00:12:52,806
destination tag, which tells


418
00:12:52,806 --> 00:12:55,236
Swift Playgrounds the page from


419
00:12:55,236 --> 00:12:57,146
which you want to copy as well


420
00:12:57,146 --> 00:12:58,446
as the identifier on that page


421
00:12:58,446 --> 00:12:59,496
for the range of code which


422
00:12:59,496 --> 00:13:00,616
should be copied because you're


423
00:13:00,616 --> 00:13:02,016
able to copy code from multiple


424
00:13:02,016 --> 00:13:03,596
sources onto a single page.


425
00:13:04,426 --> 00:13:05,286
Then, you place this inside of


426
00:13:05,286 --> 00:13:06,536
the editable code region into


427
00:13:06,536 --> 00:13:07,406
which you want to place the


428
00:13:07,406 --> 00:13:08,036
copied code.


429
00:13:08,306 --> 00:13:11,046
There's also a little bit of


430
00:13:11,046 --> 00:13:12,216
stuff that needs to be placed in


431
00:13:12,216 --> 00:13:13,746
the manifest file to support


432
00:13:13,746 --> 00:13:15,016
copying code between pages.


433
00:13:15,016 --> 00:13:17,796
So there are a couple of keys,


434
00:13:17,796 --> 00:13:19,326
the ready to copy instructions


435
00:13:19,326 --> 00:13:20,486
and the not ready to copy


436
00:13:20,486 --> 00:13:21,106
instructions.


437
00:13:21,866 --> 00:13:24,126
These refer to markup text,


438
00:13:24,126 --> 00:13:25,396
which is shown with Swift


439
00:13:25,396 --> 00:13:26,506
Playgrounds is either ready to


440
00:13:26,506 --> 00:13:27,736
copy because the user has


441
00:13:27,826 --> 00:13:28,746
successfully completed the


442
00:13:28,746 --> 00:13:30,896
previous page or when it's not


443
00:13:30,896 --> 00:13:32,116
ready to copy because the user


444
00:13:32,246 --> 00:13:33,396
hasn't yet finished the page.


445
00:13:33,576 --> 00:13:34,726
And you're able to provide the


446
00:13:34,726 --> 00:13:36,236
text that makes sense for your


447
00:13:36,236 --> 00:13:37,696
playground book to tell the user


448
00:13:37,696 --> 00:13:39,826
what they should be doing here.


449
00:13:40,776 --> 00:13:42,346
There are also a handful of


450
00:13:42,346 --> 00:13:43,966
optional keys -- the


451
00:13:43,966 --> 00:13:45,856
CopyCommandButtonTitle key, the


452
00:13:45,856 --> 00:13:47,616
NavigateCommandButtonTitle key,


453
00:13:47,916 --> 00:13:48,306
and the


454
00:13:48,306 --> 00:13:50,276
DefaultCommandButtonTitle.


455
00:13:51,016 --> 00:13:52,926
These all refer to the titles of


456
00:13:52,926 --> 00:13:54,066
the buttons so that you can


457
00:13:54,066 --> 00:13:55,776
customize them to your


458
00:13:55,776 --> 00:13:56,486
Playground book.


459
00:13:57,246 --> 00:13:58,336
It's worth noting, though, that


460
00:13:58,336 --> 00:13:59,426
if you don't provide any of


461
00:13:59,426 --> 00:14:01,096
these keys, Swift Playgrounds


462
00:14:01,096 --> 00:14:03,516
will use a default title


463
00:14:03,516 --> 00:14:04,406
instead.


464
00:14:04,406 --> 00:14:06,616
It's not possible to hide any of


465
00:14:06,616 --> 00:14:07,406
these buttons in the UI.


466
00:14:11,256 --> 00:14:12,486
The other feature, which I


467
00:14:12,486 --> 00:14:14,076
showed you, was support for


468
00:14:14,076 --> 00:14:15,126
controlling the speed of


469
00:14:15,126 --> 00:14:16,476
execution in Playgrounds.


470
00:14:18,546 --> 00:14:20,086
Swift Playground now supports


471
00:14:20,086 --> 00:14:22,046
both stepping through code as


472
00:14:22,086 --> 00:14:23,676
well as running faster than the


473
00:14:23,676 --> 00:14:24,086
default.


474
00:14:25,606 --> 00:14:27,356
The Step Through My Code mode as


475
00:14:27,356 --> 00:14:29,216
well as its sibling, Step


476
00:14:29,306 --> 00:14:31,076
Slowly, is enabled for all


477
00:14:31,076 --> 00:14:31,656
Playgrounds.


478
00:14:32,096 --> 00:14:33,766
This is because users should


479
00:14:33,766 --> 00:14:35,246
always be able to enable this


480
00:14:35,246 --> 00:14:36,676
mode to see what's happening in


481
00:14:36,676 --> 00:14:37,376
their code.


482
00:14:39,626 --> 00:14:41,266
Run Faster and Run Fastest,


483
00:14:41,266 --> 00:14:43,136
however, we can't enable those


484
00:14:43,136 --> 00:14:45,146
by default because not all


485
00:14:45,146 --> 00:14:46,356
Playground books can actually


486
00:14:46,356 --> 00:14:47,066
run faster.


487
00:14:47,266 --> 00:14:48,566
Some operations, you just can't


488
00:14:48,566 --> 00:14:49,416
make it go faster.


489
00:14:49,936 --> 00:14:51,536
So Playground pages in books may


490
00:14:51,536 --> 00:14:54,306
opt into run faster or in


491
00:14:54,306 --> 00:14:54,876
running fastest.


492
00:14:54,876 --> 00:14:58,266
Let's take another look at how


493
00:14:58,266 --> 00:14:59,286
Step Through My Code works.


494
00:14:59,996 --> 00:15:01,886
So when the user taps on the


495
00:15:01,886 --> 00:15:03,346
run, the speed control, rather,


496
00:15:03,686 --> 00:15:04,786
and selects Step Through My


497
00:15:04,786 --> 00:15:07,116
Code, then their, the code runs


498
00:15:07,116 --> 00:15:08,806
normally, but the line of code


499
00:15:08,806 --> 00:15:10,106
which is running is highlighted


500
00:15:10,106 --> 00:15:10,676
on the left.


501
00:15:12,016 --> 00:15:12,946
Let's see how this works under


502
00:15:12,946 --> 00:15:14,466
the hood.


503
00:15:15,416 --> 00:15:16,906
So if you have in your


504
00:15:16,906 --> 00:15:17,836
Playground book some


505
00:15:17,836 --> 00:15:19,276
straight-line code that's


506
00:15:19,276 --> 00:15:20,896
running synchronously like this


507
00:15:20,896 --> 00:15:22,226
where we create a string,


508
00:15:22,226 --> 00:15:23,486
iterate over each character of


509
00:15:23,486 --> 00:15:24,586
the string, and then print it


510
00:15:24,586 --> 00:15:26,426
out, there's actually nothing


511
00:15:26,426 --> 00:15:27,196
that you need to do.


512
00:15:27,726 --> 00:15:28,746
Swift Playgrounds will


513
00:15:28,746 --> 00:15:30,666
automatically insert delays so


514
00:15:30,666 --> 00:15:32,196
that every visible line of code


515
00:15:32,196 --> 00:15:33,806
takes an appreciable amount of


516
00:15:34,216 --> 00:15:36,286
time so this code will highlight


517
00:15:37,106 --> 00:15:37,336
correctly.


518
00:15:38,436 --> 00:15:40,206
There is one case which needs


519
00:15:40,206 --> 00:15:41,866
some special care, and that's if


520
00:15:41,866 --> 00:15:43,476
you as a Playground book author


521
00:15:43,736 --> 00:15:45,946
are providing asynchronous API


522
00:15:45,946 --> 00:15:47,596
to your users, which under the


523
00:15:47,656 --> 00:15:48,726
hood is actually implemented


524
00:15:48,726 --> 00:15:49,486
asynchronously.


525
00:15:50,266 --> 00:15:51,196
So in this case, we have a


526
00:15:51,196 --> 00:15:53,126
moveForward function, which is


527
00:15:53,126 --> 00:15:55,086
going to just schedule some work


528
00:15:55,086 --> 00:15:56,146
on a background queue.


529
00:15:57,046 --> 00:15:58,686
While this would be a good


530
00:15:58,686 --> 00:16:00,466
practice in an app, it's not so


531
00:16:00,466 --> 00:16:01,826
great for a Playground because


532
00:16:01,826 --> 00:16:04,596
when you -- when the user calls


533
00:16:04,596 --> 00:16:05,736
the moveForward function, it


534
00:16:05,736 --> 00:16:07,146
will only be highlighted for the


535
00:16:07,146 --> 00:16:08,166
amount of time it takes to


536
00:16:08,216 --> 00:16:09,406
schedule this background work,


537
00:16:09,766 --> 00:16:10,706
not for the amount of time it


538
00:16:10,746 --> 00:16:12,026
takes to actually move forward.


539
00:16:12,026 --> 00:16:15,346
So instead, you need to make


540
00:16:15,346 --> 00:16:17,116
your functions which appear to


541
00:16:17,116 --> 00:16:18,356
be synchronous actually be


542
00:16:18,406 --> 00:16:20,196
synchronous, and you can do this


543
00:16:20,306 --> 00:16:22,016
with a little bit of code.


544
00:16:23,006 --> 00:16:24,156
So first, at the top of your


545
00:16:24,156 --> 00:16:25,516
function, you can get the


546
00:16:25,516 --> 00:16:27,376
current run loop and then have a


547
00:16:27,376 --> 00:16:28,796
variable, which indicates


548
00:16:28,796 --> 00:16:29,816
whether or not the asynchronous


549
00:16:29,816 --> 00:16:30,906
operation has completed.


550
00:16:30,906 --> 00:16:33,626
Then, at the end, you need to


551
00:16:33,626 --> 00:16:34,786
make sure that the function


552
00:16:34,786 --> 00:16:36,396
doesn't exit until the


553
00:16:36,396 --> 00:16:37,866
asynchronous operation has


554
00:16:37,936 --> 00:16:38,286
finished.


555
00:16:38,286 --> 00:16:40,026
So you can do that by having a


556
00:16:40,026 --> 00:16:41,356
while loop which keeps the


557
00:16:41,356 --> 00:16:42,816
current run loop running until


558
00:16:42,816 --> 00:16:45,306
the didFinish flag is set to


559
00:16:45,306 --> 00:16:45,786
true.


560
00:16:47,866 --> 00:16:49,576
In the callback, after your,


561
00:16:49,576 --> 00:16:50,926
whatever work you would be


562
00:16:50,926 --> 00:16:52,486
normally doing in the callback,


563
00:16:52,486 --> 00:16:53,146
you need to do a little bit


564
00:16:53,146 --> 00:16:53,766
extra.


565
00:16:54,586 --> 00:16:55,506
First, you need to set the


566
00:16:55,506 --> 00:16:57,156
didFinish flag to true so that


567
00:16:57,156 --> 00:16:58,356
that while loop will exit.


568
00:16:59,056 --> 00:17:02,216
You then need to run a lock on


569
00:17:02,216 --> 00:17:04,876
that run loop to tell it to stop


570
00:17:05,256 --> 00:17:07,536
so that the CFRunLoop run call


571
00:17:07,536 --> 00:17:08,316
will terminate.


572
00:17:08,965 --> 00:17:11,896
And then, because of how the CF


573
00:17:11,896 --> 00:17:13,705
API works, you need to tell that


574
00:17:13,705 --> 00:17:14,756
run loop to wake up so that it


575
00:17:14,756 --> 00:17:15,986
will actually perform with the


576
00:17:15,986 --> 00:17:16,986
block that you scheduled.


577
00:17:17,496 --> 00:17:21,516
The other half of speed control


578
00:17:21,516 --> 00:17:23,306
is support for running faster


579
00:17:23,306 --> 00:17:24,366
than the default speed.


580
00:17:25,236 --> 00:17:27,116
Again, this is accessed through


581
00:17:27,116 --> 00:17:28,465
the speed control in the bottom


582
00:17:28,465 --> 00:17:29,656
left of the live view.


583
00:17:29,656 --> 00:17:31,226
The user can tap on Run Fastest


584
00:17:31,226 --> 00:17:32,846
if it's supported, and then the


585
00:17:32,846 --> 00:17:34,836
Playground book does whatever it


586
00:17:34,906 --> 00:17:37,576
can to run faster or run


587
00:17:37,576 --> 00:17:38,116
fastest.


588
00:17:40,986 --> 00:17:42,306
Since not all Playground pages


589
00:17:42,306 --> 00:17:44,436
can actually run faster, this


590
00:17:44,436 --> 00:17:46,716
requires an opt in from the


591
00:17:46,716 --> 00:17:48,326
author to enable these modes,


592
00:17:48,826 --> 00:17:49,906
and that's by setting the


593
00:17:49,966 --> 00:17:51,366
maximum supported execution


594
00:17:51,436 --> 00:17:53,046
speed to the maximum speed at


595
00:17:53,046 --> 00:17:53,696
which you can run.


596
00:17:54,596 --> 00:17:55,696
If you leave this out, Swift


597
00:17:55,696 --> 00:17:56,746
Playgrounds will infer the


598
00:17:56,746 --> 00:17:59,706
default, the speed to the normal


599
00:17:59,766 --> 00:18:00,746
speed, which would mean that


600
00:18:00,746 --> 00:18:02,756
only the Run My Code Speed would


601
00:18:02,756 --> 00:18:03,216
be shown.


602
00:18:03,836 --> 00:18:04,866
But you can also set it to


603
00:18:04,866 --> 00:18:06,816
faster or fastest depending on


604
00:18:06,816 --> 00:18:08,726
the fastest possible speed you


605
00:18:08,726 --> 00:18:09,096
support.


606
00:18:11,386 --> 00:18:13,426
To adopt this feature, you just


607
00:18:13,426 --> 00:18:14,436
need to listen for a


608
00:18:14,436 --> 00:18:15,926
notification, which is posted


609
00:18:15,926 --> 00:18:17,606
when the user changes the


610
00:18:17,606 --> 00:18:18,686
execution speed.


611
00:18:19,176 --> 00:18:19,546
That's this


612
00:18:19,606 --> 00:18:21,126
playgroundPageExecution


613
00:18:21,126 --> 00:18:22,886
ModeDidChange notification.


614
00:18:23,866 --> 00:18:25,006
Instead of this callback, you


615
00:18:25,006 --> 00:18:26,616
can then ask the current


616
00:18:26,616 --> 00:18:27,676
Playground page for its


617
00:18:27,676 --> 00:18:29,516
execution mode and then update


618
00:18:29,516 --> 00:18:31,576
animation speeds or anything


619
00:18:31,576 --> 00:18:32,886
else for the new mode that the


620
00:18:32,886 --> 00:18:33,796
user has selected.


621
00:18:33,796 --> 00:18:37,386
So with that, I'd like to bring


622
00:18:37,386 --> 00:18:38,706
my colleague, Grace, up on stage


623
00:18:38,706 --> 00:18:39,866
to talk about a handful of the


624
00:18:39,866 --> 00:18:40,746
other enhancements we've made to


625
00:18:40,746 --> 00:18:41,276
Playground books.


626
00:18:42,346 --> 00:18:42,586
Grace?


627
00:18:43,516 --> 00:18:46,356
[ Applause ]


628
00:18:46,856 --> 00:18:47,126
>> All right.


629
00:18:47,866 --> 00:18:49,396
Thanks, Connor.


630
00:18:49,396 --> 00:18:50,676
I'm so excited to talk to you


631
00:18:50,676 --> 00:18:52,026
about some of the enhancements


632
00:18:52,026 --> 00:18:52,946
that have been made to the


633
00:18:52,946 --> 00:18:54,366
Playground book format to better


634
00:18:54,366 --> 00:18:55,886
serve you all as authors and


635
00:18:55,886 --> 00:18:56,396
developers.


636
00:18:57,736 --> 00:18:59,616
The first thing that I'd like to


637
00:18:59,616 --> 00:19:01,236
talk about is the introduction


638
00:19:01,306 --> 00:19:03,106
of the minimum Swift Playgrounds


639
00:19:03,156 --> 00:19:03,966
version key.


640
00:19:04,456 --> 00:19:05,966
This is an optional string that


641
00:19:05,966 --> 00:19:07,446
will allow you to specify the


642
00:19:07,446 --> 00:19:08,926
minimum app version that can be


643
00:19:08,926 --> 00:19:10,376
used to open your documents.


644
00:19:10,906 --> 00:19:15,146
Next, let's talk about the


645
00:19:15,146 --> 00:19:16,666
deployment target and the Swift


646
00:19:16,666 --> 00:19:17,506
version keys.


647
00:19:17,956 --> 00:19:19,416
These keys have been present


648
00:19:19,416 --> 00:19:20,676
since the original release


649
00:19:20,716 --> 00:19:22,706
Playground book format, but


650
00:19:22,876 --> 00:19:24,346
earlier versions of the app had


651
00:19:24,346 --> 00:19:26,716
hard-coded iOS 10.0 and Swift


652
00:19:26,716 --> 00:19:27,986
3.0 to these keys.


653
00:19:28,636 --> 00:19:30,536
However, now your selections are


654
00:19:31,246 --> 00:19:31,366
honored.


655
00:19:31,916 --> 00:19:34,026
Additionally, Swift version is


656
00:19:34,026 --> 00:19:35,676
now a required key for you to


657
00:19:35,786 --> 00:19:36,226
fill in.


658
00:19:36,896 --> 00:19:38,386
This is all stored in the book


659
00:19:38,386 --> 00:19:40,296
level Manifest.plist.


660
00:19:40,296 --> 00:19:41,566
And for Swift version, you


661
00:19:41,566 --> 00:19:42,936
should use the major and the


662
00:19:42,936 --> 00:19:44,296
minor version of Swift that you


663
00:19:44,296 --> 00:19:45,946
used to write your book.


664
00:19:47,716 --> 00:19:49,856
Swift Playgrounds now allows you


665
00:19:49,856 --> 00:19:52,186
to specify subtitles for your


666
00:19:52,186 --> 00:19:52,836
document.


667
00:19:53,346 --> 00:19:54,916
This is another optional string


668
00:19:54,916 --> 00:19:55,646
in the book level


669
00:19:55,646 --> 00:19:57,756
Manifest.plist, and if you don't


670
00:19:57,756 --> 00:19:59,886
provide it, Swift Playgrounds


671
00:19:59,886 --> 00:20:00,986
will just fill in the Swift


672
00:20:00,986 --> 00:20:02,096
version of your book.


673
00:20:02,966 --> 00:20:05,156
So here in Grace's Kitchen, I've


674
00:20:05,156 --> 00:20:06,536
used Cooking with Playgrounds


675
00:20:06,536 --> 00:20:08,256
for my subtitle, and it shows


676
00:20:08,256 --> 00:20:09,476
below my document in the


677
00:20:09,476 --> 00:20:13,366
document picker.


678
00:20:13,896 --> 00:20:15,546
Next, Swift Playgrounds has


679
00:20:15,546 --> 00:20:17,086
replaced the single Resources


680
00:20:17,086 --> 00:20:19,046
directory with two resources,


681
00:20:19,526 --> 00:20:20,986
two Resource directories,


682
00:20:20,986 --> 00:20:22,166
PublicResources and


683
00:20:22,166 --> 00:20:23,286
PrivateResources.


684
00:20:23,816 --> 00:20:25,116
Any files that you want your


685
00:20:25,116 --> 00:20:26,776
users to be able to access while


686
00:20:26,776 --> 00:20:28,206
they're using your book, either


687
00:20:28,206 --> 00:20:29,596
in the file picker or the image


688
00:20:29,596 --> 00:20:30,926
picker, should go in the


689
00:20:30,926 --> 00:20:32,486
PublicResources directory.


690
00:20:32,876 --> 00:20:34,036
And any files that you don't


691
00:20:34,036 --> 00:20:35,076
want your user to be able to


692
00:20:35,076 --> 00:20:36,876
access should go in the


693
00:20:36,876 --> 00:20:38,156
PrivateResource directory.


694
00:20:38,556 --> 00:20:39,496
Those files could be


695
00:20:39,496 --> 00:20:40,926
localization files or hints


696
00:20:40,926 --> 00:20:42,136
files that you don't want your


697
00:20:42,136 --> 00:20:43,186
user to peek at while they're


698
00:20:43,186 --> 00:20:44,346
using your book.


699
00:20:46,876 --> 00:20:49,106
Next, Swift Playgrounds now


700
00:20:49,106 --> 00:20:50,626
allows you to create specific


701
00:20:50,626 --> 00:20:52,106
runtime issues that will show up


702
00:20:52,106 --> 00:20:52,676
in line.


703
00:20:53,146 --> 00:20:54,556
So to do this, you can call


704
00:20:54,556 --> 00:20:55,936
fatal error, and the string


705
00:20:55,936 --> 00:20:57,516
that's passed in will show up in


706
00:20:57,516 --> 00:20:59,016
line with other results while


707
00:20:59,016 --> 00:21:00,736
your user is using the book, if


708
00:21:00,736 --> 00:21:01,866
they ever hit it.


709
00:21:05,076 --> 00:21:07,036
So next, let's talk about how


710
00:21:07,036 --> 00:21:08,836
you can support user-editing in


711
00:21:08,836 --> 00:21:10,046
your Playground books through


712
00:21:10,046 --> 00:21:11,476
the use of template pages.


713
00:21:12,026 --> 00:21:15,116
A new feature in Swift


714
00:21:15,116 --> 00:21:19,716
Playgrounds allows your users to


715
00:21:20,506 --> 00:21:25,556
add, remove, rename, duplicate,


716
00:21:26,426 --> 00:21:28,096
and reorder pages within your


717
00:21:28,096 --> 00:21:29,026
Playgrounds books.


718
00:21:29,726 --> 00:21:30,986
You can see this functionality


719
00:21:30,986 --> 00:21:32,376
already in our starting points


720
00:21:32,376 --> 00:21:32,976
templates.


721
00:21:33,516 --> 00:21:35,866
But to show it off a little bit


722
00:21:35,866 --> 00:21:36,996
here, I'd like to hop into a


723
00:21:36,996 --> 00:21:37,296
demo.


724
00:21:38,516 --> 00:21:43,706
[ Applause ]


725
00:21:44,206 --> 00:21:45,426
So I'm going to go ahead and


726
00:21:45,426 --> 00:21:46,796
open up Grace's Kitchen, and


727
00:21:46,866 --> 00:21:48,676
this is a book that I created


728
00:21:48,676 --> 00:21:50,266
for my users to have a recipe


729
00:21:50,266 --> 00:21:52,246
book on their iPad with Swift


730
00:21:52,246 --> 00:21:52,476
code.


731
00:21:52,476 --> 00:21:56,016
So in my kitchen, I have three


732
00:21:56,016 --> 00:21:58,266
recipes: butter, frosting, and


733
00:21:58,266 --> 00:21:58,596
cake.


734
00:21:58,956 --> 00:22:00,406
And my mom would tell me that


735
00:22:00,406 --> 00:22:01,826
this is not the most healthy


736
00:22:01,826 --> 00:22:03,896
recipe book, so I want my users


737
00:22:03,896 --> 00:22:04,996
to be able to add some of their


738
00:22:05,776 --> 00:22:05,843
own.


739
00:22:06,856 --> 00:22:08,276
So if we go into the Edit


740
00:22:08,276 --> 00:22:10,776
button, I can add a page through


741
00:22:10,776 --> 00:22:12,506
the + button in the top left.


742
00:22:13,276 --> 00:22:14,546
And then, I'm going to add a


743
00:22:14,546 --> 00:22:16,146
recipe for pancakes.


744
00:22:19,896 --> 00:22:21,476
Not the most healthy, but we're


745
00:22:21,476 --> 00:22:22,146
getting there.


746
00:22:22,146 --> 00:22:24,186
So if I tap Done and then I


747
00:22:24,186 --> 00:22:26,516
navigate to my Pancakes page, we


748
00:22:26,516 --> 00:22:27,946
can see that I as the author


749
00:22:27,946 --> 00:22:29,906
have provided some prose, and


750
00:22:29,906 --> 00:22:31,516
then for sake of time, I've also


751
00:22:31,516 --> 00:22:32,956
written out our pancakes recipe


752
00:22:32,956 --> 00:22:33,396
in code.


753
00:22:33,976 --> 00:22:35,646
And now, when I tap Run My Code,


754
00:22:36,286 --> 00:22:37,176
this Playground book will


755
00:22:37,176 --> 00:22:39,066
intelligently generate a recipe


756
00:22:39,066 --> 00:22:40,076
for pancakes.


757
00:22:40,666 --> 00:22:45,566
And to show you how you can


758
00:22:45,566 --> 00:22:47,026
adopt this in your books, let's


759
00:22:47,026 --> 00:22:48,626
hop back to the slides.


760
00:22:49,516 --> 00:22:52,946
[ Applause ]


761
00:22:53,446 --> 00:22:54,466
The first thing that you'll need


762
00:22:54,466 --> 00:22:56,256
to do is specify a template


763
00:22:56,256 --> 00:22:56,706
page.


764
00:22:57,236 --> 00:22:58,716
Template pages are supported in


765
00:22:58,716 --> 00:23:00,206
the last chapter of your book,


766
00:23:00,596 --> 00:23:02,486
and this key should go in the


767
00:23:02,486 --> 00:23:04,096
chapter's Manifest.plist.


768
00:23:04,266 --> 00:23:06,126
And what I mean by template page


769
00:23:06,126 --> 00:23:07,816
is the page that's instantiated


770
00:23:07,816 --> 00:23:09,266
when your user adds a new page


771
00:23:09,266 --> 00:23:09,646
to your book.


772
00:23:09,946 --> 00:23:11,926
So to specify this, you should


773
00:23:11,926 --> 00:23:13,576
use the TemplatePageFilename


774
00:23:13,656 --> 00:23:13,896
key.


775
00:23:14,496 --> 00:23:15,806
This is a string, and the string


776
00:23:15,806 --> 00:23:17,376
should be the value of the file


777
00:23:17,376 --> 00:23:18,636
that should be instantiated.


778
00:23:18,996 --> 00:23:19,686
So here I've used


779
00:23:19,686 --> 00:23:20,926
Template.playgroundpage.


780
00:23:21,386 --> 00:23:25,656
Next, I'd like to talk about the


781
00:23:25,656 --> 00:23:26,726
difference between


782
00:23:26,726 --> 00:23:28,706
InitialUserPages and pages.


783
00:23:29,356 --> 00:23:30,726
Both of these are keys that


784
00:23:30,726 --> 00:23:32,226
store an array of page


785
00:23:32,226 --> 00:23:33,016
filenames.


786
00:23:33,396 --> 00:23:35,376
InitialUserPages are pages that


787
00:23:35,376 --> 00:23:36,926
the author has created that they


788
00:23:36,926 --> 00:23:38,246
want the user to be able to


789
00:23:38,246 --> 00:23:40,686
interact with in that way of


790
00:23:40,686 --> 00:23:42,046
duplicating, renaming,


791
00:23:42,046 --> 00:23:43,296
reordering, et cetera.


792
00:23:44,116 --> 00:23:45,376
If you don't want your user to


793
00:23:45,376 --> 00:23:46,546
be able to interact with them in


794
00:23:46,546 --> 00:23:47,736
that way, then you should store


795
00:23:47,736 --> 00:23:49,166
them in the pages key instead.


796
00:23:49,696 --> 00:23:53,976
So here's the file structure for


797
00:23:53,976 --> 00:23:54,846
my Playground book.


798
00:23:55,466 --> 00:23:56,096
We can see that the


799
00:23:56,096 --> 00:23:58,366
Manifest.plist in -- is in the


800
00:23:58,366 --> 00:23:59,966
chapter level, and that should


801
00:23:59,966 --> 00:24:01,666
hold the InitialUserPages key


802
00:24:01,666 --> 00:24:03,036
and the TemplatePageFilename


803
00:24:03,126 --> 00:24:03,386
key.


804
00:24:03,456 --> 00:24:05,696
And then, in my Pages directory,


805
00:24:05,696 --> 00:24:07,306
I have my Butter, Frosting, and


806
00:24:07,306 --> 00:24:08,946
Cake pages, and I also have my


807
00:24:08,946 --> 00:24:10,266
Template page, which is what


808
00:24:10,266 --> 00:24:11,406
should be instantiated when a


809
00:24:11,406 --> 00:24:14,316
user adds a page.


810
00:24:14,406 --> 00:24:15,676
And next, I'd like to pass it


811
00:24:15,676 --> 00:24:16,926
off to Najla to talk about


812
00:24:16,926 --> 00:24:17,626
localization.


813
00:24:18,046 --> 00:24:20,046
[ Applause ]


814
00:24:20,076 --> 00:24:20,786
>> Hi, everyone.


815
00:24:22,326 --> 00:24:24,016
So as Connor mentioned earlier


816
00:24:24,016 --> 00:24:25,246
today, the Swift Playgrounds


817
00:24:25,246 --> 00:24:27,036
app, along with Apple-provided


818
00:24:27,126 --> 00:24:29,226
content, is now localized into


819
00:24:29,346 --> 00:24:30,206
six languages.


820
00:24:30,796 --> 00:24:32,236
But if you wanted to localize


821
00:24:32,236 --> 00:24:33,866
your own Playground books, then


822
00:24:33,866 --> 00:24:36,206
you're not limited to these six


823
00:24:36,266 --> 00:24:36,896
languages.


824
00:24:38,146 --> 00:24:39,726
Localizing a Playground book is


825
00:24:39,726 --> 00:24:41,776
a lot like localizing an app in


826
00:24:41,776 --> 00:24:44,316
that you have the same resource


827
00:24:44,316 --> 00:24:45,166
[inaudible] directories, and


828
00:24:45,166 --> 00:24:45,906
strings files.


829
00:24:46,646 --> 00:24:49,956
So to localize your Playground


830
00:24:49,956 --> 00:24:50,986
book, you're going to need to


831
00:24:50,986 --> 00:24:52,716
set the development region key.


832
00:24:53,196 --> 00:24:54,236
The development region key


833
00:24:54,236 --> 00:24:55,896
specifies what base language


834
00:24:55,896 --> 00:24:57,086
this book was written in, and


835
00:24:57,286 --> 00:24:58,866
it's required even if you


836
00:24:58,866 --> 00:25:02,486
haven't localized your book yet.


837
00:25:02,486 --> 00:25:03,976
If you've, if you are familiar


838
00:25:03,976 --> 00:25:05,836
with localizing apps, the


839
00:25:05,836 --> 00:25:07,146
development region key is the


840
00:25:07,176 --> 00:25:08,366
Playground book equivalent of


841
00:25:08,506 --> 00:25:09,826
CFBundleDevelopmentRegion.


842
00:25:09,826 --> 00:25:13,316
So just like apps, Swift


843
00:25:14,096 --> 00:25:15,856
Playgrounds supports localizing


844
00:25:15,946 --> 00:25:18,096
content with strings files, and


845
00:25:18,096 --> 00:25:19,246
there are four kinds of strings


846
00:25:19,296 --> 00:25:20,636
files that we want to mention


847
00:25:20,636 --> 00:25:24,846
today: ManifestPlist, Prose,


848
00:25:25,906 --> 00:25:28,466
EditableFields, and QuickHelp.


849
00:25:30,336 --> 00:25:31,846
Now, earlier in this session,


850
00:25:31,846 --> 00:25:33,506
Grace talked about public versus


851
00:25:33,576 --> 00:25:35,066
private resource directories in


852
00:25:35,456 --> 00:25:36,996
your Playground books.


853
00:25:37,086 --> 00:25:38,946
And since the strings files are


854
00:25:38,946 --> 00:25:40,156
used to communicate with the app


855
00:25:40,476 --> 00:25:42,206
itself, it's best that they live


856
00:25:42,206 --> 00:25:43,376
in the PrivateResources


857
00:25:43,376 --> 00:25:45,126
directory of your book.


858
00:25:46,516 --> 00:25:48,376
So let's hop into some more


859
00:25:48,376 --> 00:25:49,466
detail about these strings


860
00:25:49,556 --> 00:25:49,966
files.


861
00:25:51,376 --> 00:25:52,516
So Swift Playgrounds supports


862
00:25:52,516 --> 00:25:54,046
localizing content from


863
00:25:54,046 --> 00:25:55,956
ManifestPlists using a


864
00:25:55,956 --> 00:25:57,916
ManifestPlist.strings file.


865
00:25:58,526 --> 00:25:59,886
And an example of some


866
00:25:59,886 --> 00:26:01,896
localizing ManifestPlist content


867
00:26:02,256 --> 00:26:04,206
in Learn to Code 1 is the table


868
00:26:04,206 --> 00:26:05,386
of contents that you can see


869
00:26:05,386 --> 00:26:06,476
with all of the exercises.


870
00:26:06,476 --> 00:26:09,906
Let's take a closer look at the


871
00:26:10,046 --> 00:26:12,266
first exercise in Learn to Code


872
00:26:12,266 --> 00:26:13,776
1, which is called Issuing


873
00:26:13,776 --> 00:26:15,376
Commands, and here it is in


874
00:26:15,376 --> 00:26:17,106
simplified Chinese.


875
00:26:19,396 --> 00:26:21,496
So Playground book has a


876
00:26:21,496 --> 00:26:23,446
ManifestPlist at every level --


877
00:26:23,446 --> 00:26:25,126
at the book level, chapter


878
00:26:25,126 --> 00:26:26,426
level, and page level.


879
00:26:27,246 --> 00:26:28,856
Information about an exercise's


880
00:26:28,926 --> 00:26:30,506
title is pulled from the page


881
00:26:30,506 --> 00:26:32,626
level ManifestPlist, and here's


882
00:26:32,626 --> 00:26:34,216
the page level ManifestPlist for


883
00:26:34,446 --> 00:26:35,966
the Issuing Commands exercise.


884
00:26:37,106 --> 00:26:38,306
You can see that there's a key


885
00:26:38,306 --> 00:26:40,096
called Name, and its value is


886
00:26:40,126 --> 00:26:41,000
the title.


887
00:26:44,566 --> 00:26:46,666
The simplified Chinese title for


888
00:26:46,666 --> 00:26:48,156
Issuing Commands is pulled from


889
00:26:48,156 --> 00:26:49,226
the simplified Chinese


890
00:26:49,646 --> 00:26:52,376
ManifestPlist.strings file.


891
00:26:52,376 --> 00:26:54,266
And here you can see that the


892
00:26:54,266 --> 00:26:56,446
name is defined as a simplified


893
00:26:56,536 --> 00:26:58,096
Chinese of Issuing Commands.


894
00:26:58,946 --> 00:27:00,596
So Playground markup blocks are


895
00:27:00,596 --> 00:27:01,586
also supported.


896
00:27:01,586 --> 00:27:03,926
You can also localize Playground


897
00:27:03,926 --> 00:27:04,896
markup blocks in Swift


898
00:27:04,956 --> 00:27:06,846
Playgrounds using a


899
00:27:06,916 --> 00:27:08,476
Prose.strings file at the page


900
00:27:08,476 --> 00:27:08,826
level.


901
00:27:09,186 --> 00:27:10,286
And here's some prose from


902
00:27:10,286 --> 00:27:11,756
Issuing Commands that's been


903
00:27:11,756 --> 00:27:13,056
localized into German.


904
00:27:13,996 --> 00:27:16,516
To do this, in the


905
00:27:16,516 --> 00:27:18,446
Contents.swift file, it


906
00:27:18,546 --> 00:27:20,416
specifies a block of localized


907
00:27:20,566 --> 00:27:22,566
prose using a localized tag,


908
00:27:23,306 --> 00:27:26,536
which takes a key.


909
00:27:26,766 --> 00:27:28,426
This key is then defined in the


910
00:27:28,426 --> 00:27:31,006
German Prose.strings file as the


911
00:27:31,006 --> 00:27:36,526
German translation of our prose.


912
00:27:37,066 --> 00:27:39,336
You can also localize editable


913
00:27:39,476 --> 00:27:41,296
fields in Swift Playgrounds by


914
00:27:41,296 --> 00:27:43,566
using an EditableFields.strings


915
00:27:43,646 --> 00:27:44,026
file.


916
00:27:44,756 --> 00:27:46,886
An example of an editable field


917
00:27:46,886 --> 00:27:48,536
in Learn to Code 1 is that Tap


918
00:27:48,536 --> 00:27:49,606
to enter code string that you


919
00:27:49,716 --> 00:27:50,736
see in some exercises.


920
00:27:50,736 --> 00:27:53,000
And here it is in French.


921
00:27:56,286 --> 00:27:58,706
So in the Contents.swift file,


922
00:27:59,096 --> 00:28:01,046
it specifies an editable field


923
00:28:01,366 --> 00:28:03,496
with an editable code tag that


924
00:28:03,496 --> 00:28:04,896
takes the key that's the


925
00:28:04,896 --> 00:28:06,076
placeholder that we want to


926
00:28:06,076 --> 00:28:06,676
localize.


927
00:28:07,126 --> 00:28:08,756
In our case, the placeholder is


928
00:28:08,796 --> 00:28:11,006
called Tap to enter code.


929
00:28:12,536 --> 00:28:14,886
That placeholder is then defined


930
00:28:14,886 --> 00:28:16,686
in the EditableField.strings


931
00:28:16,736 --> 00:28:18,616
file for French as the French


932
00:28:18,616 --> 00:28:19,696
translation of Tap to enter


933
00:28:19,696 --> 00:28:20,000
code.


934
00:28:23,046 --> 00:28:25,706
So in Swift Playgrounds 2.0,


935
00:28:25,706 --> 00:28:27,126
which you got a beta of on


936
00:28:27,126 --> 00:28:29,136
Monday, you can localize API


937
00:28:29,286 --> 00:28:30,066
documentation.


938
00:28:30,066 --> 00:28:32,126
And here's an example of some


939
00:28:32,126 --> 00:28:33,626
API documentation from Learn to


940
00:28:33,626 --> 00:28:34,236
Code 1.


941
00:28:34,726 --> 00:28:36,666
It's a move forward command that


942
00:28:36,666 --> 00:28:38,306
you can use to move Bite in its


943
00:28:38,376 --> 00:28:39,806
little world.


944
00:28:41,836 --> 00:28:43,456
To localize your API


945
00:28:43,536 --> 00:28:45,476
documentation, you can use a


946
00:28:45,516 --> 00:28:46,966
QuickHelp.strings file.


947
00:28:48,076 --> 00:28:50,206
In you AuxiliarySources file for


948
00:28:50,206 --> 00:28:52,796
your exercise, it specifies a


949
00:28:52,926 --> 00:28:55,986
block of localized documentation


950
00:28:56,356 --> 00:28:58,106
by using a localization key.


951
00:28:58,696 --> 00:29:01,046
That key is then defined in the


952
00:29:01,046 --> 00:29:02,216
QuickHelp.strings file.


953
00:29:02,316 --> 00:29:03,886
In our case, our documentation


954
00:29:03,886 --> 00:29:05,356
is in English, so this is the


955
00:29:05,356 --> 00:29:06,906
QuickHelp.strings file for


956
00:29:06,906 --> 00:29:07,446
English.


957
00:29:10,796 --> 00:29:12,726
So along with using strings


958
00:29:12,766 --> 00:29:14,356
files to localize your


959
00:29:14,356 --> 00:29:16,156
Playground books, you can use a


960
00:29:16,156 --> 00:29:18,136
Hints.plist to localize default


961
00:29:18,136 --> 00:29:18,486
hints.


962
00:29:19,516 --> 00:29:22,146
Here's an example of a hint from


963
00:29:22,146 --> 00:29:23,426
Issuing Commands that's been


964
00:29:23,426 --> 00:29:24,796
localized into Japanese.


965
00:29:26,806 --> 00:29:29,146
So Issuing Commands only has one


966
00:29:29,236 --> 00:29:29,496
hint.


967
00:29:30,146 --> 00:29:31,296
So in our Hints.plist for


968
00:29:31,886 --> 00:29:34,486
Japanese, we have one entry that


969
00:29:34,486 --> 00:29:36,486
represents our one hint, and its


970
00:29:36,486 --> 00:29:38,066
value is the Japanese


971
00:29:38,136 --> 00:29:39,286
translation of our hint.


972
00:29:40,586 --> 00:29:42,626
So the localization support in


973
00:29:42,726 --> 00:29:44,456
Swift Playgrounds allows you to


974
00:29:44,456 --> 00:29:45,946
create really detailed and


975
00:29:45,946 --> 00:29:47,996
immersive Playground books for a


976
00:29:47,996 --> 00:29:49,826
larger audience, and we're super


977
00:29:49,826 --> 00:29:50,906
excited to see all of the


978
00:29:50,906 --> 00:29:51,756
Playground books that you


979
00:29:51,756 --> 00:29:52,306
localize.


980
00:29:53,056 --> 00:29:55,666
If you want more information


981
00:29:55,666 --> 00:29:56,886
about how to localize your


982
00:29:56,886 --> 00:29:58,346
Playground books, we have a


983
00:29:58,346 --> 00:29:59,586
session later today on


984
00:29:59,586 --> 00:30:01,086
Localizing Content for Swift


985
00:30:01,166 --> 00:30:05,896
Playgrounds at 3:10.


986
00:30:06,526 --> 00:30:08,376
So let's switch gears and talk


987
00:30:08,376 --> 00:30:09,516
about the PlaygroundBluetooth


988
00:30:09,516 --> 00:30:11,176
API, which is in Swift


989
00:30:11,176 --> 00:30:13,126
Playgrounds 1.5, which shipped


990
00:30:13,126 --> 00:30:13,586
on Monday.


991
00:30:14,466 --> 00:30:18,936
So Swift Playgrounds provides


992
00:30:19,066 --> 00:30:20,506
full access to CoreBluetooth,


993
00:30:20,846 --> 00:30:22,386
which allows you to integrate


994
00:30:22,386 --> 00:30:23,626
accessories into your Playground


995
00:30:23,626 --> 00:30:23,776
books.


996
00:30:24,606 --> 00:30:25,856
And if you've taken a look at


997
00:30:25,856 --> 00:30:27,146
some of the accessory Playground


998
00:30:27,146 --> 00:30:28,796
books available, you'll notice


999
00:30:28,826 --> 00:30:30,016
that they all have a really


1000
00:30:30,166 --> 00:30:31,846
great and consistent Playground


1001
00:30:31,846 --> 00:30:32,506
book experience.


1002
00:30:32,506 --> 00:30:34,686
And the Playground book API


1003
00:30:35,226 --> 00:30:36,676
allows you to integrate that


1004
00:30:36,676 --> 00:30:37,776
experience into your own


1005
00:30:37,776 --> 00:30:39,296
Playground books.


1006
00:30:39,936 --> 00:30:42,776
So there are two main components


1007
00:30:42,836 --> 00:30:43,956
of the PlaygroundBluetooth


1008
00:30:43,956 --> 00:30:44,366
framework.


1009
00:30:45,006 --> 00:30:45,876
The first is the


1010
00:30:45,976 --> 00:30:47,186
PlaygroundBluetooth Central


1011
00:30:47,186 --> 00:30:49,326
Manager, which is responsible


1012
00:30:49,326 --> 00:30:51,046
for all the logic to interact


1013
00:30:51,306 --> 00:30:52,766
and manage accessories.


1014
00:30:54,146 --> 00:30:55,096
The second is the


1015
00:30:55,096 --> 00:30:57,496
PlaygroundBluetooth Connection


1016
00:30:57,496 --> 00:30:59,196
View, which allows you to


1017
00:30:59,196 --> 00:31:01,176
customize a user interface that


1018
00:31:01,176 --> 00:31:02,636
users use to interact with


1019
00:31:02,726 --> 00:31:03,266
accessories.


1020
00:31:04,466 --> 00:31:05,326
They both have their own


1021
00:31:05,326 --> 00:31:06,636
delegates, and the


1022
00:31:06,706 --> 00:31:08,036
PlaygroundBluetooth Connection


1023
00:31:08,036 --> 00:31:09,526
View has a PlaygroundBluetooth


1024
00:31:09,846 --> 00:31:11,676
Connection View data source that


1025
00:31:11,676 --> 00:31:13,556
provides specific information


1026
00:31:13,556 --> 00:31:14,500
about an accessory.


1027
00:31:17,116 --> 00:31:18,856
So the PlaygroundBluetooth


1028
00:31:18,856 --> 00:31:20,656
Central Manager provides an


1029
00:31:20,656 --> 00:31:22,306
interface for connecting to and


1030
00:31:22,306 --> 00:31:23,766
interacting with accessories.


1031
00:31:25,016 --> 00:31:26,156
It's really similar to


1032
00:31:26,156 --> 00:31:26,716
CoreBluetooth's


1033
00:31:26,866 --> 00:31:28,886
CBCentralManager, so if you've


1034
00:31:28,886 --> 00:31:30,246
implemented that before in a


1035
00:31:30,246 --> 00:31:32,316
Playground, then you could reuse


1036
00:31:32,466 --> 00:31:33,086
code here.


1037
00:31:34,086 --> 00:31:35,876
The Central Manager can take an


1038
00:31:35,876 --> 00:31:38,486
array of accessory UUIDs to


1039
00:31:38,486 --> 00:31:40,586
search for, or you can specify


1040
00:31:40,586 --> 00:31:42,216
to search for all accessories in


1041
00:31:42,216 --> 00:31:42,846
the vicinity.


1042
00:31:46,266 --> 00:31:48,086
The PlaygroundBluetoothCentral


1043
00:31:48,656 --> 00:31:50,586
ManagerDelegate has methods for


1044
00:31:50,706 --> 00:31:52,626
interacting with accessories,


1045
00:31:52,946 --> 00:31:54,556
such as connecting to and


1046
00:31:54,556 --> 00:31:56,256
disconnecting from accessories.


1047
00:32:01,596 --> 00:32:02,546
So the PlaygroundBluetooth


1048
00:32:02,546 --> 00:32:03,656
ConnectionView provides an


1049
00:32:03,656 --> 00:32:06,226
interface for displaying the


1050
00:32:06,316 --> 00:32:08,386
connection status of accessories


1051
00:32:08,786 --> 00:32:10,596
and allows users to discover,


1052
00:32:10,596 --> 00:32:12,686
connect to, and disconnect from


1053
00:32:12,686 --> 00:32:13,396
accessories.


1054
00:32:13,996 --> 00:32:15,346
Here's an example of a


1055
00:32:15,346 --> 00:32:17,056
Connection View that I've


1056
00:32:17,106 --> 00:32:18,986
customized because my Playground


1057
00:32:18,986 --> 00:32:20,386
book searches for a Bluetooth


1058
00:32:20,386 --> 00:32:20,816
printer.


1059
00:32:24,446 --> 00:32:25,596
The PlaygroundBluetooth


1060
00:32:25,596 --> 00:32:27,316
ConnectionViewDelegate has


1061
00:32:27,316 --> 00:32:29,096
methods for customizing the UI


1062
00:32:29,096 --> 00:32:31,336
and handling user interactions.


1063
00:32:31,756 --> 00:32:33,636
For example, you can use the


1064
00:32:33,636 --> 00:32:35,626
titleFor delegate method to


1065
00:32:35,626 --> 00:32:36,936
customize the Connection button.


1066
00:32:37,706 --> 00:32:39,356
In my case, I've customized it


1067
00:32:39,446 --> 00:32:41,000
to say Select Printer.


1068
00:32:44,506 --> 00:32:46,426
Lastly, the PlaygroundBluetooth


1069
00:32:46,426 --> 00:32:47,786
ConnectionViewDataSource is a


1070
00:32:47,786 --> 00:32:49,736
protocol that's adopted by the


1071
00:32:49,736 --> 00:32:51,166
Connection View that provides


1072
00:32:51,256 --> 00:32:52,896
specific information about an


1073
00:32:53,086 --> 00:32:53,536
accessory.


1074
00:32:54,866 --> 00:32:56,436
In my case, the data source


1075
00:32:56,476 --> 00:32:57,896
provides information about my


1076
00:32:57,976 --> 00:32:59,716
printer, its title, which is


1077
00:32:59,716 --> 00:33:01,556
Najla's Printer, and that cute


1078
00:33:01,826 --> 00:33:03,416
printer icon that's to its left.


1079
00:33:04,496 --> 00:33:06,066
You can provide this information


1080
00:33:06,346 --> 00:33:08,346
using its one method.


1081
00:33:10,516 --> 00:33:13,136
So let's hop into a quick demo


1082
00:33:13,136 --> 00:33:14,136
of the PlaygroundBluetooth


1083
00:33:14,136 --> 00:33:15,046
framework in action.


1084
00:33:16,516 --> 00:33:21,766
[ Applause ]


1085
00:33:22,266 --> 00:33:24,446
So earlier today you saw Grace


1086
00:33:24,526 --> 00:33:25,896
create a Playground page for


1087
00:33:25,896 --> 00:33:28,866
making pancakes, and I love


1088
00:33:28,996 --> 00:33:31,486
pancakes a lot, but I cannot


1089
00:33:31,546 --> 00:33:31,676
cook.


1090
00:33:33,196 --> 00:33:34,916
So what I would really like to


1091
00:33:34,986 --> 00:33:36,866
do is I would like this


1092
00:33:36,986 --> 00:33:38,576
Playground book, in addition to


1093
00:33:38,576 --> 00:33:40,356
generating the recipe, to be


1094
00:33:40,356 --> 00:33:41,716
able to connect to a Bluetooth


1095
00:33:41,776 --> 00:33:42,966
printer so that I can print it


1096
00:33:42,966 --> 00:33:44,836
out and then give it to someone


1097
00:33:44,836 --> 00:33:45,816
when I want them to make


1098
00:33:45,916 --> 00:33:47,216
pancakes for me.


1099
00:33:49,026 --> 00:33:50,956
So let's go into my Playground


1100
00:33:50,956 --> 00:33:51,136
book.


1101
00:33:51,346 --> 00:33:53,986
And what I've done is I've taken


1102
00:33:53,986 --> 00:33:56,976
Grace's Pancakes page and I've


1103
00:33:56,976 --> 00:34:00,236
integrated this cute, little


1104
00:34:00,236 --> 00:34:01,006
Bluetooth printer.


1105
00:34:02,696 --> 00:34:04,056
So when I tap on Connect


1106
00:34:04,216 --> 00:34:05,986
Printer, it's going to search


1107
00:34:05,986 --> 00:34:06,666
for my printer.


1108
00:34:06,666 --> 00:34:09,826
And in addition to being able to


1109
00:34:09,826 --> 00:34:12,156
generate this recipe, when I


1110
00:34:12,235 --> 00:34:13,696
select Najla's Printer, it's


1111
00:34:13,696 --> 00:34:15,346
going to print out the recipe.


1112
00:34:15,706 --> 00:34:17,446
So keep an eye on the printer


1113
00:34:17,446 --> 00:34:18,516
and cross your fingers.


1114
00:34:19,476 --> 00:34:21,786
Here we go.


1115
00:34:22,295 --> 00:34:22,496
Yeah!


1116
00:34:24,041 --> 00:34:26,041
[ Applause ]


1117
00:34:26,065 --> 00:34:26,446
OK.


1118
00:34:29,295 --> 00:34:29,636
All right.


1119
00:34:30,065 --> 00:34:30,786
Nailed it.


1120
00:34:31,876 --> 00:34:34,766
So, [laughs] so now, I have the


1121
00:34:34,766 --> 00:34:36,426
recipe for pancakes and I can


1122
00:34:36,426 --> 00:34:38,076
give it to Connor after this


1123
00:34:38,076 --> 00:34:38,426
session.


1124
00:34:39,016 --> 00:34:41,016
[ Laughter ]


1125
00:34:41,516 --> 00:34:49,946
[ Applause ]


1126
00:34:50,446 --> 00:34:52,146
So we talked about a lot today.


1127
00:34:52,485 --> 00:34:53,985
You got an overview of all of


1128
00:34:53,985 --> 00:34:55,136
the format changes that have


1129
00:34:55,136 --> 00:34:56,525
happened in the past year.


1130
00:34:57,326 --> 00:34:59,296
You learned how to integrate


1131
00:34:59,296 --> 00:35:00,806
copy code forward into your


1132
00:35:00,806 --> 00:35:01,976
Playground books so that you can


1133
00:35:02,046 --> 00:35:03,726
create a really nice narrative,


1134
00:35:04,226 --> 00:35:05,686
how to create interesting user


1135
00:35:05,686 --> 00:35:09,056
editable books so that users can


1136
00:35:09,056 --> 00:35:11,106
then modify your template pages,


1137
00:35:11,646 --> 00:35:13,116
how to localize your Playground


1138
00:35:14,106 --> 00:35:15,726
books, and finally, how to


1139
00:35:15,726 --> 00:35:17,226
integrate accessories into your


1140
00:35:17,226 --> 00:35:18,786
Playground books.


1141
00:35:19,566 --> 00:35:21,486
For more information about this


1142
00:35:21,606 --> 00:35:22,396
session, please visit


1143
00:35:22,396 --> 00:35:25,646
developer.apple.com.


1144
00:35:26,006 --> 00:35:27,156
There are also a few related


1145
00:35:27,156 --> 00:35:28,686
sessions that you can visit or


1146
00:35:28,686 --> 00:35:29,556
watch online.


1147
00:35:30,776 --> 00:35:31,836
Thank you for watching our


1148
00:35:31,836 --> 00:35:33,066
session, and we hope that you


1149
00:35:33,066 --> 00:35:33,796
enjoy the rest of the


1150
00:35:33,796 --> 00:35:34,296
conference.


1151
00:35:35,516 --> 00:35:39,500
[ Applause ]

