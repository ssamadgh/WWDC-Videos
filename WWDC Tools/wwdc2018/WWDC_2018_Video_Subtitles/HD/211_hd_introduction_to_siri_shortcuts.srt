1
00:00:07,516 --> 00:00:16,500
[ Music ]


2
00:00:20,516 --> 00:00:28,996
[ Applause ]


3
00:00:29,496 --> 00:00:30,396
>> Hi, everybody.


4
00:00:30,876 --> 00:00:32,566
My name is Ari Weinstein, and


5
00:00:32,566 --> 00:00:34,326
I'm really excited to be here


6
00:00:34,326 --> 00:00:35,766
along with Willem Mattelaer to


7
00:00:35,766 --> 00:00:37,516
tell you about Siri Shortcuts.


8
00:00:38,106 --> 00:00:41,496
So, two years ago, we announced


9
00:00:41,496 --> 00:00:43,096
the first version of SiriKit,


10
00:00:43,256 --> 00:00:44,966
which enables your apps to work


11
00:00:44,966 --> 00:00:46,566
with Siri, and it has great


12
00:00:46,566 --> 00:00:48,446
domain-specific knowledge for


13
00:00:48,446 --> 00:00:50,046
things like sending messages,


14
00:00:50,166 --> 00:00:51,586
requesting rides, making


15
00:00:51,586 --> 00:00:52,356
payments, and more.


16
00:00:53,026 --> 00:00:55,116
But we know that you want to do


17
00:00:55,116 --> 00:00:57,096
even more with SiriKit, and so


18
00:00:57,096 --> 00:00:58,656
that's why, this year, we're so


19
00:00:58,656 --> 00:01:00,166
excited to announce Shortcuts.


20
00:01:01,506 --> 00:01:03,586
This central idea behind


21
00:01:03,586 --> 00:01:05,066
Shortcuts is that it lets you


22
00:01:05,066 --> 00:01:06,996
expose the key capabilities of


23
00:01:06,996 --> 00:01:09,246
your app to Siri, and this is


24
00:01:09,426 --> 00:01:11,226
really great, because it enables


25
00:01:11,226 --> 00:01:12,606
people to use the features of


26
00:01:12,606 --> 00:01:14,636
your apps in new ways and in new


27
00:01:14,636 --> 00:01:15,136
places.


28
00:01:15,596 --> 00:01:17,216
And it's a really powerful way


29
00:01:17,376 --> 00:01:18,406
to engage your users.


30
00:01:19,446 --> 00:01:22,246
So, exposing a shortcut opens up


31
00:01:22,246 --> 00:01:24,266
a ton of new possibilities for


32
00:01:24,266 --> 00:01:25,616
how people can use your apps, so


33
00:01:25,616 --> 00:01:27,306
let's explore all of the places


34
00:01:27,526 --> 00:01:30,436
where Shortcuts can be used.


35
00:01:30,926 --> 00:01:32,216
Shortcuts takes Siri's


36
00:01:32,216 --> 00:01:34,416
suggestions to the next level by


37
00:01:34,416 --> 00:01:35,986
surfacing what you want to do


38
00:01:35,986 --> 00:01:37,876
next, not just with your apps,


39
00:01:37,876 --> 00:01:39,816
but inside of your apps, and it


40
00:01:39,816 --> 00:01:41,766
does it by surfacing them in


41
00:01:41,766 --> 00:01:43,906
search at just the right time.


42
00:01:45,366 --> 00:01:47,286
And Siri can suggest shortcuts


43
00:01:47,286 --> 00:01:48,836
on the Watch, so you can use


44
00:01:48,836 --> 00:01:50,596
them right from your wrist on


45
00:01:50,596 --> 00:01:51,496
the Siri Watch Face.


46
00:01:53,556 --> 00:01:55,166
When Siri is confident that it's


47
00:01:55,166 --> 00:01:56,516
the exact right time for a


48
00:01:56,516 --> 00:01:58,286
Shortcut, it will be surfaced on


49
00:01:58,286 --> 00:01:59,096
the lock screen.


50
00:01:59,216 --> 00:02:01,026
And, when you tap on a shortcut,


51
00:02:01,246 --> 00:02:02,776
you can use it right in line


52
00:02:02,976 --> 00:02:05,226
with a rich custom UI specific


53
00:02:05,226 --> 00:02:07,266
to that app.


54
00:02:07,356 --> 00:02:08,586
And you can also add shortcuts


55
00:02:08,626 --> 00:02:10,096
to Siri, so you can use them


56
00:02:10,096 --> 00:02:11,876
with your voice just by asking


57
00:02:11,876 --> 00:02:12,406
Siri.


58
00:02:12,646 --> 00:02:14,316
And in Siri you'll see the same


59
00:02:14,316 --> 00:02:16,536
custom UI that you see in search


60
00:02:16,536 --> 00:02:17,496
and on the lock screen.


61
00:02:18,966 --> 00:02:21,706
And apps can provide a great


62
00:02:21,706 --> 00:02:23,566
voice experience in Siri by


63
00:02:23,566 --> 00:02:26,086
providing custom response dialog


64
00:02:26,296 --> 00:02:28,176
that Siri will read out loud to


65
00:02:28,176 --> 00:02:30,976
tell you things like how long it


66
00:02:31,146 --> 00:02:33,076
will take for your coffee to be


67
00:02:33,596 --> 00:02:33,746
ready.


68
00:02:34,476 --> 00:02:37,216
So, when the user adds a


69
00:02:37,216 --> 00:02:39,036
shortcut to Siri, they get to


70
00:02:39,036 --> 00:02:41,056
pick a custom personal phrase,


71
00:02:41,396 --> 00:02:43,536
so the user chooses what to say


72
00:02:43,536 --> 00:02:45,426
to Siri to invoke your shortcut.


73
00:02:45,846 --> 00:02:47,326
And, as a developer, you get to


74
00:02:47,326 --> 00:02:49,336
suggest what phrase to use, so,


75
00:02:49,486 --> 00:02:51,086
in this case, a suggestion is


76
00:02:51,086 --> 00:02:51,736
"coffee time."


77
00:02:52,226 --> 00:02:53,876
And, once a shortcut has been


78
00:02:53,946 --> 00:02:55,876
added to Siri, it works across


79
00:02:55,876 --> 00:02:58,686
all of your iOS devices, and on


80
00:02:58,686 --> 00:03:00,436
Apple Watch, and even on


81
00:03:00,436 --> 00:03:01,686
HomePod.


82
00:03:02,376 --> 00:03:04,956
So, we also have the new


83
00:03:04,956 --> 00:03:06,576
Shortcuts app, and with the new


84
00:03:06,576 --> 00:03:08,146
Shortcuts app, anyone can build


85
00:03:08,146 --> 00:03:10,176
their own shortcuts, and you do


86
00:03:10,176 --> 00:03:12,086
it just by dragging and dropping


87
00:03:12,086 --> 00:03:13,396
a series of steps together.


88
00:03:13,896 --> 00:03:15,556
And those steps can even include


89
00:03:15,706 --> 00:03:17,406
the shortcuts exposed by your


90
00:03:18,966 --> 00:03:19,046
app.


91
00:03:19,266 --> 00:03:21,476
So, today, we're going to talk


92
00:03:21,476 --> 00:03:23,096
about how to adopt shortcuts for


93
00:03:23,096 --> 00:03:24,606
your apps, and then we'll talk


94
00:03:24,606 --> 00:03:25,676
about how to optimize your


95
00:03:25,676 --> 00:03:27,346
shortcuts for great suggestions.


96
00:03:27,806 --> 00:03:29,316
And we'll also cover some


97
00:03:29,316 --> 00:03:30,926
privacy considerations that are


98
00:03:30,926 --> 00:03:32,106
important to keep in mind, and


99
00:03:32,106 --> 00:03:33,036
we'll talk about how to make


100
00:03:33,036 --> 00:03:34,486
great shortcuts for media


101
00:03:34,486 --> 00:03:34,906
playback.


102
00:03:36,236 --> 00:03:38,156
So, first, we'll talk about how


103
00:03:38,156 --> 00:03:39,656
to adopt the new Shortcut's


104
00:03:39,656 --> 00:03:39,946
APIs.


105
00:03:41,546 --> 00:03:43,236
There were three steps for


106
00:03:43,236 --> 00:03:44,676
creating a shortcut, and the


107
00:03:44,676 --> 00:03:46,286
first step is to define your


108
00:03:46,286 --> 00:03:46,726
shortcut.


109
00:03:46,996 --> 00:03:48,256
That means you have to decide


110
00:03:48,396 --> 00:03:50,186
what you want to expose as a


111
00:03:50,186 --> 00:03:52,336
shortcut and define each one so


112
00:03:52,336 --> 00:03:53,576
Siri knows everything that your


113
00:03:53,576 --> 00:03:54,136
app can do.


114
00:03:55,406 --> 00:03:57,076
Next, you'll need to donate your


115
00:03:57,076 --> 00:03:57,676
new shortcut.


116
00:03:58,086 --> 00:03:59,436
That means you need to tell the


117
00:03:59,436 --> 00:04:01,816
system every time the user does


118
00:04:01,816 --> 00:04:03,476
something in your app that you


119
00:04:03,476 --> 00:04:05,046
expose a shortcut for, which


120
00:04:05,086 --> 00:04:06,776
will let Siri learn when and


121
00:04:06,776 --> 00:04:07,916
where is the right time to


122
00:04:07,916 --> 00:04:08,826
suggest your shortcut.


123
00:04:09,246 --> 00:04:12,026
And the third step is to handle


124
00:04:12,026 --> 00:04:12,616
your shortcut.


125
00:04:13,076 --> 00:04:14,936
That means, when the user wants


126
00:04:14,936 --> 00:04:16,625
to go and use your shortcut in


127
00:04:16,676 --> 00:04:18,106
Siri, on the lock screen, in


128
00:04:18,106 --> 00:04:19,886
search, you need to be ready for


129
00:04:19,886 --> 00:04:22,356
your app or app extension to be


130
00:04:22,356 --> 00:04:23,596
invoked and be handed the


131
00:04:23,596 --> 00:04:24,456
shortcut to handle.


132
00:04:25,836 --> 00:04:29,236
So, before you define shortcuts,


133
00:04:29,306 --> 00:04:30,496
you'll need to decide what


134
00:04:30,496 --> 00:04:31,946
exactly it is that you want to


135
00:04:31,946 --> 00:04:32,396
expose.


136
00:04:33,056 --> 00:04:35,176
And you should start by thinking


137
00:04:35,176 --> 00:04:36,256
through what are the most


138
00:04:36,256 --> 00:04:37,316
important things that people


139
00:04:37,316 --> 00:04:38,436
like to do with your apps?


140
00:04:38,686 --> 00:04:39,716
Because those are the things


141
00:04:39,716 --> 00:04:40,826
that you might want to consider


142
00:04:40,826 --> 00:04:41,936
exposing shortcuts for.


143
00:04:42,256 --> 00:04:44,796
So, every shortcut that you


144
00:04:44,796 --> 00:04:46,776
expose should accelerate the


145
00:04:46,776 --> 00:04:48,686
user, to perform a key function


146
00:04:48,716 --> 00:04:49,246
of your app.


147
00:04:50,056 --> 00:04:51,176
That means it should take


148
00:04:51,176 --> 00:04:52,616
something that the user already


149
00:04:52,616 --> 00:04:54,266
wanted to do with your app and


150
00:04:54,266 --> 00:04:55,866
help them do it even faster.


151
00:04:56,796 --> 00:04:58,616
The acceleration that you offer


152
00:04:58,616 --> 00:05:00,376
should be substantial, so you


153
00:05:00,376 --> 00:05:01,836
shouldn't just expose a shortcut


154
00:05:01,836 --> 00:05:03,346
that does about the same thing


155
00:05:03,346 --> 00:05:04,676
as opening your app normally.


156
00:05:05,316 --> 00:05:06,936
If you expose a shortcut that


157
00:05:06,936 --> 00:05:08,096
doesn't provide very much


158
00:05:08,096 --> 00:05:09,636
acceleration to the user, it


159
00:05:10,186 --> 00:05:11,346
won't be suggested as


160
00:05:11,346 --> 00:05:11,826
frequently.


161
00:05:12,416 --> 00:05:15,446
And, next, every shortcut that


162
00:05:15,446 --> 00:05:16,426
you expose should be of


163
00:05:16,426 --> 00:05:18,056
persistent interest to the user,


164
00:05:18,166 --> 00:05:19,286
so that means it should be


165
00:05:19,346 --> 00:05:20,236
something that the user might


166
00:05:20,236 --> 00:05:21,516
want to do multiple times.


167
00:05:21,926 --> 00:05:23,696
It's not a good idea to expose a


168
00:05:23,696 --> 00:05:24,966
shortcut for something that the


169
00:05:24,966 --> 00:05:27,126
user might only want to use once


170
00:05:27,256 --> 00:05:28,976
or twice.


171
00:05:29,076 --> 00:05:30,906
And you should also expose only


172
00:05:30,906 --> 00:05:32,706
shortcuts that are executable at


173
00:05:32,706 --> 00:05:35,036
any time, because you can't rely


174
00:05:35,036 --> 00:05:36,566
on the user being in some


175
00:05:36,566 --> 00:05:38,076
particular state before your


176
00:05:38,076 --> 00:05:39,596
shortcut will be ready for use.


177
00:05:40,806 --> 00:05:43,246
So, once you've decided what


178
00:05:43,246 --> 00:05:44,406
shortcuts to expose, you're


179
00:05:44,406 --> 00:05:45,686
ready to check out the


180
00:05:45,686 --> 00:05:47,386
shortcuts' APIs.


181
00:05:48,396 --> 00:05:51,026
There were two APIs that we


182
00:05:51,026 --> 00:05:52,766
support for adopting shortcuts.


183
00:05:53,216 --> 00:05:55,316
The first is NSUserActivity.


184
00:05:56,076 --> 00:05:58,086
NSUserActivity is a lightweight


185
00:05:58,086 --> 00:05:59,596
way to represent the state of


186
00:05:59,596 --> 00:06:01,426
your app, and it integrates with


187
00:06:01,456 --> 00:06:02,776
other Apple features like


188
00:06:02,806 --> 00:06:04,156
Spotlight and Handoff.


189
00:06:05,046 --> 00:06:07,046
And the second is intents.


190
00:06:07,626 --> 00:06:08,676
Intents are a way of


191
00:06:08,676 --> 00:06:10,726
representing, in detail, a type


192
00:06:10,726 --> 00:06:12,286
of action that your app can


193
00:06:12,286 --> 00:06:14,726
perform, and Siri includes a


194
00:06:14,726 --> 00:06:18,166
bunch of great built-in intents


195
00:06:18,166 --> 00:06:19,106
that support a range of


196
00:06:19,106 --> 00:06:20,786
capabilities that apps can use


197
00:06:20,786 --> 00:06:21,716
to integrate with Siri.


198
00:06:22,226 --> 00:06:22,916
And, this year, we're


199
00:06:22,916 --> 00:06:23,896
introducing something really


200
00:06:23,896 --> 00:06:25,176
cool, which is the ability for


201
00:06:25,176 --> 00:06:26,556
you to define your own custom


202
00:06:26,556 --> 00:06:27,886
intents for use with Shortcuts.


203
00:06:29,006 --> 00:06:30,676
So, for every shortcut you


204
00:06:30,676 --> 00:06:32,286
expose, you'll need to decide


205
00:06:32,286 --> 00:06:33,126
whether it should be an


206
00:06:33,126 --> 00:06:34,836
NSUserActivity or an intent.


207
00:06:35,266 --> 00:06:36,836
So, let's talk about how to make


208
00:06:37,466 --> 00:06:39,266
that decision.


209
00:06:40,236 --> 00:06:42,426
Now, NSUserActivity is a great


210
00:06:42,426 --> 00:06:43,606
choice for building a shortcut.


211
00:06:43,866 --> 00:06:45,366
If you're just building a simple


212
00:06:45,366 --> 00:06:46,746
shortcut that opens something in


213
00:06:46,746 --> 00:06:49,186
your app, or if you're exposing


214
00:06:49,186 --> 00:06:51,496
a shortcut for something that


215
00:06:51,496 --> 00:06:53,216
you already index in Spotlight


216
00:06:53,216 --> 00:06:55,386
search, or that you already


217
00:06:55,426 --> 00:06:57,486
offer in NSUserActivity for, for


218
00:06:57,486 --> 00:06:58,616
example, for Handoff.


219
00:06:59,146 --> 00:07:02,436
But for the best Shortcuts


220
00:07:02,436 --> 00:07:03,936
experience, you'll want to adopt


221
00:07:03,936 --> 00:07:05,746
intents, and intents-based


222
00:07:05,746 --> 00:07:06,646
shortcuts are really cool,


223
00:07:06,646 --> 00:07:08,596
because they can run inline


224
00:07:08,596 --> 00:07:10,156
without launching your app.


225
00:07:10,156 --> 00:07:11,656
And they can include custom


226
00:07:11,656 --> 00:07:13,626
voice responses and custom UIs


227
00:07:13,626 --> 00:07:14,726
like we saw earlier.


228
00:07:14,726 --> 00:07:16,186
And they can also include


229
00:07:16,336 --> 00:07:17,956
granular parameter predictions,


230
00:07:18,266 --> 00:07:19,756
which Willem tell you a little


231
00:07:19,756 --> 00:07:20,346
bit about later.


232
00:07:21,516 --> 00:07:23,616
So, once you've decided how to


233
00:07:23,616 --> 00:07:25,356
adopt, you're ready to dive into


234
00:07:25,356 --> 00:07:28,116
the implementation, so let's do


235
00:07:29,176 --> 00:07:29,996
that now.


236
00:07:29,996 --> 00:07:30,976
First, let's go over how to


237
00:07:30,976 --> 00:07:31,766
adopt shortcuts with


238
00:07:31,766 --> 00:07:33,586
NSUserActivity, and the first


239
00:07:33,586 --> 00:07:35,416
step is to define your shortcut.


240
00:07:35,416 --> 00:07:37,376
For NSUserActivity, that means


241
00:07:37,406 --> 00:07:38,806
you need to declare a


242
00:07:38,806 --> 00:07:41,116
UserActivityType in your app's


243
00:07:41,116 --> 00:07:43,466
Info.plist file to register your


244
00:07:43,466 --> 00:07:44,596
activity type with the system.


245
00:07:46,006 --> 00:07:47,896
Next, you need to donate your


246
00:07:47,896 --> 00:07:48,326
shortcut.


247
00:07:48,736 --> 00:07:50,836
For NSUserActivity, that means


248
00:07:50,946 --> 00:07:52,186
every time the user is looking


249
00:07:52,186 --> 00:07:53,596
at the screen in your app that


250
00:07:53,596 --> 00:07:54,716
you want to provide a shortcut


251
00:07:54,716 --> 00:07:56,076
to, you should make an


252
00:07:56,076 --> 00:07:57,836
NSUserActivity object available.


253
00:07:58,696 --> 00:08:01,106
So, there's one key new thing


254
00:08:01,106 --> 00:08:02,066
here, which is the


255
00:08:02,246 --> 00:08:04,056
isEligibleForPrediction flag.


256
00:08:04,546 --> 00:08:06,206
Setting this on any user


257
00:08:06,206 --> 00:08:07,386
activity turns it into a


258
00:08:07,386 --> 00:08:09,236
shortcut, and what's really cool


259
00:08:09,236 --> 00:08:10,716
is if you have an existing user


260
00:08:10,716 --> 00:08:12,286
activity in your app, you just


261
00:08:12,286 --> 00:08:14,796
have to set this to true and


262
00:08:14,796 --> 00:08:16,416
that user activity will become a


263
00:08:16,416 --> 00:08:17,606
shortcut automatically.


264
00:08:18,616 --> 00:08:19,926
Now, note that the


265
00:08:19,926 --> 00:08:21,826
isEligibleForSearch flag has to


266
00:08:21,826 --> 00:08:22,906
be true in order for


267
00:08:22,906 --> 00:08:24,956
isEligibleForPrediction to have


268
00:08:24,956 --> 00:08:25,336
an effect.


269
00:08:25,486 --> 00:08:27,746
And, by the way, you might also


270
00:08:27,746 --> 00:08:28,746
want to consider the


271
00:08:28,746 --> 00:08:30,806
isEligibleForHandoff flag, which


272
00:08:30,876 --> 00:08:31,786
defaults to true.


273
00:08:31,786 --> 00:08:34,196
So, by default, all of your user


274
00:08:34,196 --> 00:08:35,885
activities will be able to be


275
00:08:35,885 --> 00:08:38,846
handed off between devices.


276
00:08:38,926 --> 00:08:40,066
Now, when you're creating your


277
00:08:40,066 --> 00:08:41,166
user activity, you want to make


278
00:08:41,166 --> 00:08:42,426
sure to include all of the


279
00:08:42,426 --> 00:08:44,246
information in your user info


280
00:08:44,246 --> 00:08:45,896
dictionary that you'll need to


281
00:08:45,896 --> 00:08:47,326
restore the activity later on.


282
00:08:48,886 --> 00:08:50,976
And the last step is to mark


283
00:08:50,976 --> 00:08:52,306
your activity current by


284
00:08:52,306 --> 00:08:54,186
attaching it to a UI


285
00:08:54,186 --> 00:08:55,566
viewController or a UI responder


286
00:08:55,566 --> 00:08:56,586
object that's onscreen.


287
00:08:57,186 --> 00:09:00,476
Now, the last step is to handle


288
00:09:00,476 --> 00:09:01,316
your shortcut, once you've


289
00:09:01,316 --> 00:09:02,526
defined and donated it.


290
00:09:02,926 --> 00:09:05,186
And every time the user uses an


291
00:09:05,186 --> 00:09:08,046
NSUserActivity from your app, it


292
00:09:08,406 --> 00:09:09,406
will be opened in your app.


293
00:09:09,806 --> 00:09:11,186
And so you need to handle it by


294
00:09:11,186 --> 00:09:12,696
implementing the app delegate


295
00:09:12,696 --> 00:09:13,916
method for handling


296
00:09:13,916 --> 00:09:15,256
NSUserActivity, which is called


297
00:09:15,256 --> 00:09:16,496
continueUserActivity.


298
00:09:17,086 --> 00:09:18,036
So, all you have to do is


299
00:09:18,036 --> 00:09:19,816
implement this method, check if


300
00:09:19,816 --> 00:09:21,326
the activity type matches the


301
00:09:21,326 --> 00:09:22,646
one that you registered, and, if


302
00:09:22,646 --> 00:09:23,926
it does, then you want to


303
00:09:23,926 --> 00:09:25,396
restore the state of your app to


304
00:09:25,396 --> 00:09:26,326
what it was when the user


305
00:09:26,326 --> 00:09:27,296
activity was saved.


306
00:09:28,706 --> 00:09:30,366
So, that's everything you need


307
00:09:30,366 --> 00:09:31,706
to do to get Siri to start


308
00:09:31,706 --> 00:09:33,386
suggesting shortcuts for your


309
00:09:33,386 --> 00:09:34,836
apps with NSUserActivity.


310
00:09:37,166 --> 00:09:38,396
Now, let's talk about how to


311
00:09:38,396 --> 00:09:39,356
expose Shortcuts through


312
00:09:39,356 --> 00:09:39,806
intents.


313
00:09:41,016 --> 00:09:42,376
The first step, again, is to


314
00:09:42,376 --> 00:09:43,346
define your shortcut.


315
00:09:43,526 --> 00:09:44,906
And so with intents, you'll need


316
00:09:44,906 --> 00:09:47,116
to start by deciding what type


317
00:09:47,116 --> 00:09:49,576
of intent you'd like to adopt.


318
00:09:50,196 --> 00:09:51,936
And, as you know, Siri includes


319
00:09:51,936 --> 00:09:53,396
many great built-in intents,


320
00:09:53,616 --> 00:09:55,406
like for messaging, workouts,


321
00:09:55,536 --> 00:09:56,626
lists, and more.


322
00:09:57,456 --> 00:09:59,156
And now we're introducing the


323
00:09:59,156 --> 00:10:00,936
ability to define custom intents


324
00:10:00,936 --> 00:10:01,916
in Xcode for Shortcuts.


325
00:10:03,146 --> 00:10:05,346
And so if the shortcut that you


326
00:10:05,346 --> 00:10:06,486
want to build corresponds to one


327
00:10:06,486 --> 00:10:08,156
of the default built-in SiriKit


328
00:10:08,156 --> 00:10:09,566
intents, then you should adopt


329
00:10:09,566 --> 00:10:09,876
that.


330
00:10:10,466 --> 00:10:11,726
But, otherwise, you can define


331
00:10:11,726 --> 00:10:12,136
your own.


332
00:10:12,616 --> 00:10:15,096
And whether you want to define


333
00:10:15,096 --> 00:10:16,416
your own or adopt an existing


334
00:10:16,416 --> 00:10:18,046
one to customize it, you want to


335
00:10:18,046 --> 00:10:19,566
get started by creating an


336
00:10:19,566 --> 00:10:21,356
intent definition file in Xcode.


337
00:10:21,786 --> 00:10:24,746
So, believe it or not, in my


338
00:10:24,746 --> 00:10:25,896
spare time, I've been working


339
00:10:25,896 --> 00:10:26,956
with a couple friends on a new


340
00:10:26,956 --> 00:10:29,156
app, and it's a soup delivery


341
00:10:29,156 --> 00:10:31,026
app, and it's called Soup Chef.


342
00:10:31,026 --> 00:10:32,666
It's the easiest way to order


343
00:10:32,666 --> 00:10:34,646
soup, and I'm really excited


344
00:10:34,676 --> 00:10:35,946
about the potential of hooking


345
00:10:35,946 --> 00:10:36,586
it up to Siri.


346
00:10:37,016 --> 00:10:38,586
So, let's step through how to


347
00:10:38,586 --> 00:10:40,286
use the new Intent Editor to


348
00:10:40,286 --> 00:10:42,066
build an intent for Soup Chef.


349
00:10:42,126 --> 00:10:43,426
I'm going to start by going to


350
00:10:43,426 --> 00:10:45,646
File, New File in Xcode, and


351
00:10:45,646 --> 00:10:47,256
I'll choose the SiriKit Intent


352
00:10:47,256 --> 00:10:48,196
Definition File type.


353
00:10:48,196 --> 00:10:50,626
And then I'll see the new Intent


354
00:10:50,626 --> 00:10:51,176
Editor.


355
00:10:51,636 --> 00:10:52,986
So, let's get started by


356
00:10:52,986 --> 00:10:54,346
clicking the plus button in the


357
00:10:54,346 --> 00:10:54,866
bottom left.


358
00:10:54,866 --> 00:10:58,146
Next, I want to give my intent a


359
00:10:58,146 --> 00:10:58,486
name.


360
00:10:58,756 --> 00:10:59,926
And, so in this case, I'm making


361
00:10:59,926 --> 00:11:01,076
an intent for ordering a soup,


362
00:11:01,076 --> 00:11:01,956
so I'm going to call it


363
00:11:02,056 --> 00:11:02,576
OrderSoup.


364
00:11:04,696 --> 00:11:06,266
Then I want to fill out my


365
00:11:06,266 --> 00:11:07,326
intent's metadata.


366
00:11:07,806 --> 00:11:09,056
So, let's look at that one step


367
00:11:09,056 --> 00:11:09,526
at a time.


368
00:11:10,456 --> 00:11:12,316
The first piece of metadata is


369
00:11:12,346 --> 00:11:14,936
category and defining a category


370
00:11:15,346 --> 00:11:17,536
helps Siri know how to talk


371
00:11:17,536 --> 00:11:19,176
about your intent and how to


372
00:11:19,176 --> 00:11:20,186
display it in the UI.


373
00:11:20,666 --> 00:11:22,286
So, for example, in this case,


374
00:11:22,286 --> 00:11:23,596
I'm choosing the Order category,


375
00:11:23,596 --> 00:11:25,216
and when I choose Order, Siri


376
00:11:25,216 --> 00:11:26,926
will say something like, "Okay,


377
00:11:26,926 --> 00:11:28,126
I ordered it," when I use it


378
00:11:28,126 --> 00:11:28,626
with Siri.


379
00:11:28,766 --> 00:11:29,926
And it'll display a button


380
00:11:29,926 --> 00:11:31,536
confirmation title like Order.


381
00:11:32,326 --> 00:11:33,776
So, we offer several different


382
00:11:33,776 --> 00:11:34,816
categories, and you should


383
00:11:34,816 --> 00:11:36,516
choose the one that matches your


384
00:11:36,516 --> 00:11:37,656
intent's purpose the most


385
00:11:37,656 --> 00:11:38,006
closely.


386
00:11:39,516 --> 00:11:40,956
Next, you want to fill out your


387
00:11:40,956 --> 00:11:42,716
intent's title and description,


388
00:11:43,056 --> 00:11:44,416
and that will be used in all the


389
00:11:44,416 --> 00:11:46,196
places where people can discover


390
00:11:46,196 --> 00:11:47,256
which shortcuts your app


391
00:11:47,256 --> 00:11:47,726
supports.


392
00:11:48,756 --> 00:11:49,876
And then there's the User


393
00:11:49,876 --> 00:11:51,586
confirmation required checkbox,


394
00:11:51,866 --> 00:11:53,666
which determines whether or not


395
00:11:53,786 --> 00:11:55,046
we'll ask the user for a


396
00:11:55,046 --> 00:11:56,906
confirmation before using your


397
00:11:56,906 --> 00:11:57,346
shortcut.


398
00:11:57,496 --> 00:11:58,686
So, Siri might say something


399
00:11:58,686 --> 00:12:00,066
like, "Are you ready to order


400
00:12:00,066 --> 00:12:01,226
with Soup Chef?"


401
00:12:01,226 --> 00:12:02,536
That's really great for my app,


402
00:12:02,536 --> 00:12:03,566
because I want to make sure that


403
00:12:03,566 --> 00:12:04,676
people aren't accidentally


404
00:12:04,676 --> 00:12:05,296
ordering soup [laughs].


405
00:12:07,756 --> 00:12:09,696
So, then, you'll see the intense


406
00:12:09,816 --> 00:12:10,386
parameters.


407
00:12:11,106 --> 00:12:12,856
And these define all of the


408
00:12:12,856 --> 00:12:14,016
parameters that are passed to


409
00:12:14,016 --> 00:12:14,716
your shortcut.


410
00:12:14,716 --> 00:12:16,546
For example, in my case, I have


411
00:12:16,546 --> 00:12:17,416
two parameters.


412
00:12:17,636 --> 00:12:19,556
They are the list of items being


413
00:12:19,556 --> 00:12:21,166
ordered and the location to


414
00:12:21,166 --> 00:12:21,746
deliver to.


415
00:12:22,246 --> 00:12:23,966
Now, parameters support a short


416
00:12:23,966 --> 00:12:25,206
list of types, and those types


417
00:12:25,206 --> 00:12:26,966
include things like string,


418
00:12:27,256 --> 00:12:29,606
number, person, and location.


419
00:12:30,046 --> 00:12:31,236
But if you're building a


420
00:12:31,236 --> 00:12:33,746
parameter that represents an


421
00:12:33,746 --> 00:12:35,346
object that's in your app that's


422
00:12:35,346 --> 00:12:36,706
not on the short list of types


423
00:12:36,906 --> 00:12:38,236
then you can choose the custom


424
00:12:39,676 --> 00:12:39,786
type.


425
00:12:40,386 --> 00:12:41,116
Once you've defined your


426
00:12:41,116 --> 00:12:42,146
parameters, you'll want to look


427
00:12:42,146 --> 00:12:43,186
at shortcut types.


428
00:12:43,776 --> 00:12:46,016
These define all of the types of


429
00:12:46,016 --> 00:12:47,266
shortcuts that you'd like to be


430
00:12:47,266 --> 00:12:48,326
suggested to the user.


431
00:12:49,616 --> 00:12:51,566
Each type includes a particular


432
00:12:51,566 --> 00:12:53,436
combination of parameters that


433
00:12:53,436 --> 00:12:55,836
will be predicted, and formats


434
00:12:55,836 --> 00:12:57,336
for how to display the title and


435
00:12:57,336 --> 00:12:59,476
subtitle of each one, filling in


436
00:12:59,706 --> 00:13:01,336
the values for your parameters.


437
00:13:01,676 --> 00:13:04,246
So, if your shortcut can't be


438
00:13:04,246 --> 00:13:05,526
performed in the background


439
00:13:05,816 --> 00:13:06,916
because it needs to launch your


440
00:13:06,916 --> 00:13:08,326
app when you use it, you should


441
00:13:08,456 --> 00:13:10,446
uncheck the Supports background


442
00:13:10,446 --> 00:13:11,766
execution checkbox.


443
00:13:12,236 --> 00:13:14,566
Now, in some cases, one intent


444
00:13:14,566 --> 00:13:15,786
may have multiple shortcut


445
00:13:15,786 --> 00:13:17,166
types, where some support


446
00:13:17,166 --> 00:13:18,786
background execution and some


447
00:13:18,786 --> 00:13:19,026
don't.


448
00:13:19,646 --> 00:13:21,666
Now, in the case of Soup Chef,


449
00:13:21,826 --> 00:13:22,996
that's especially relevant,


450
00:13:22,996 --> 00:13:24,276
because we can support


451
00:13:24,276 --> 00:13:26,186
background execution when both


452
00:13:26,186 --> 00:13:28,286
the items and delivery location


453
00:13:28,286 --> 00:13:29,586
are predicted, because we have


454
00:13:29,586 --> 00:13:30,926
all we need to place an order.


455
00:13:31,346 --> 00:13:33,276
But if we add a shortcut type


456
00:13:33,496 --> 00:13:37,106
that only includes delivery


457
00:13:37,106 --> 00:13:39,186
location, Siri may predict that,


458
00:13:39,226 --> 00:13:40,236
and we won't actually have


459
00:13:40,236 --> 00:13:41,226
enough information to place an


460
00:13:41,226 --> 00:13:41,446
order.


461
00:13:41,446 --> 00:13:42,926
So, we'll need our app to open


462
00:13:42,926 --> 00:13:44,806
to ask the user what location to


463
00:13:44,806 --> 00:13:46,176
deliver to, and, in that case,


464
00:13:46,176 --> 00:13:47,466
we'll want to not support


465
00:13:47,556 --> 00:13:49,056
background execution for that


466
00:13:49,056 --> 00:13:50,846
shortcut type.


467
00:13:51,066 --> 00:13:52,736
Now, you should specify shortcut


468
00:13:52,736 --> 00:13:54,676
types for every variation of


469
00:13:54,676 --> 00:13:55,896
your shortcut that you think


470
00:13:55,896 --> 00:13:57,366
will be useful so that Siri can


471
00:13:57,366 --> 00:13:58,496
make the best predictions.


472
00:13:58,946 --> 00:14:00,546
And, for the best experience,


473
00:14:00,776 --> 00:14:02,366
you should-- on all the shortcut


474
00:14:02,366 --> 00:14:03,506
types, you can-- support


475
00:14:03,506 --> 00:14:04,496
background execution.


476
00:14:05,136 --> 00:14:06,686
Shortcut types that support


477
00:14:06,686 --> 00:14:08,226
background execution provide


478
00:14:08,226 --> 00:14:09,756
more acceleration to the user,


479
00:14:09,756 --> 00:14:10,716
and so they'll actually be


480
00:14:10,716 --> 00:14:12,056
suggested more frequently.


481
00:14:13,726 --> 00:14:15,336
You can provide up to 16


482
00:14:15,336 --> 00:14:16,826
shortcut types for every intent


483
00:14:16,826 --> 00:14:17,446
that you define.


484
00:14:18,766 --> 00:14:19,946
Now, once your intent is


485
00:14:19,946 --> 00:14:21,696
defined, Xcode will


486
00:14:21,696 --> 00:14:23,446
automatically code generate an


487
00:14:24,016 --> 00:14:25,596
intent class and an intent


488
00:14:25,596 --> 00:14:26,906
handling protocol.


489
00:14:27,236 --> 00:14:29,176
In my case, we've generated the


490
00:14:29,176 --> 00:14:31,666
OrderSoupIntent class and an


491
00:14:31,746 --> 00:14:33,666
OrderSoupIntentHandling protocol


492
00:14:33,806 --> 00:14:36,116
with properties that correspond


493
00:14:36,266 --> 00:14:37,616
to what I just defined in my


494
00:14:37,616 --> 00:14:39,146
intent definition file.


495
00:14:39,816 --> 00:14:41,386
Because Xcode is doing code


496
00:14:41,386 --> 00:14:42,396
generation, it's really


497
00:14:42,396 --> 00:14:44,316
important to consider in which


498
00:14:44,316 --> 00:14:45,886
targets Xcode is doing this code


499
00:14:45,886 --> 00:14:47,486
generation, because you don't


500
00:14:47,486 --> 00:14:48,796
want to end up with duplicate


501
00:14:48,796 --> 00:14:50,586
instances of the same classes


502
00:14:50,586 --> 00:14:51,576
that conflict with each other.


503
00:14:52,606 --> 00:14:55,026
So, let's look at the targets in


504
00:14:55,156 --> 00:14:56,706
the target membership section of


505
00:14:56,736 --> 00:14:58,156
the inspector on my intent


506
00:14:58,156 --> 00:14:58,876
definition file.


507
00:15:01,046 --> 00:15:02,676
Your intent definition file


508
00:15:02,676 --> 00:15:04,276
should be included in every


509
00:15:04,276 --> 00:15:05,976
target in which your intent is


510
00:15:05,976 --> 00:15:07,496
used, so you should check the


511
00:15:07,496 --> 00:15:10,096
box under Target Membership.


512
00:15:10,506 --> 00:15:11,806
But you'll want to make sure


513
00:15:11,806 --> 00:15:13,066
that if you have a framework,


514
00:15:13,316 --> 00:15:15,096
you don't do code generation in


515
00:15:15,096 --> 00:15:16,086
multiple targets that are


516
00:15:16,086 --> 00:15:16,986
included from each other.


517
00:15:17,126 --> 00:15:19,546
So, if you have a framework, set


518
00:15:19,546 --> 00:15:21,886
the target membership to only


519
00:15:22,066 --> 00:15:23,516
generate intent classes for that


520
00:15:23,586 --> 00:15:25,036
framework by choosing intent


521
00:15:25,036 --> 00:15:26,866
classes and choosing no


522
00:15:26,866 --> 00:15:28,426
generated classes for every


523
00:15:28,426 --> 00:15:29,036
other target.


524
00:15:29,636 --> 00:15:31,496
But if you don't have any


525
00:15:31,576 --> 00:15:32,596
frameworks in your app because


526
00:15:32,596 --> 00:15:33,896
you haven't separated your app


527
00:15:33,896 --> 00:15:35,786
into frameworks yet, you should


528
00:15:35,786 --> 00:15:37,326
check the target for every


529
00:15:37,426 --> 00:15:38,486
single target.


530
00:15:39,326 --> 00:15:41,796
And that's how you define custom


531
00:15:41,796 --> 00:15:42,926
intents in Xcode.


532
00:15:44,296 --> 00:15:45,436
Once you've defined your custom


533
00:15:45,436 --> 00:15:46,776
intent, it's really easy to


534
00:15:46,776 --> 00:15:47,296
donate it.


535
00:15:47,906 --> 00:15:48,886
All you have to do is


536
00:15:48,886 --> 00:15:50,646
instantiate your intent object


537
00:15:51,166 --> 00:15:52,856
and then populate its parameters


538
00:15:52,956 --> 00:15:54,606
and create and donate an


539
00:15:54,766 --> 00:15:55,936
INInteraction object.


540
00:15:56,816 --> 00:15:58,826
Make sure to do this every time


541
00:15:58,866 --> 00:16:00,596
the user performs the equivalent


542
00:16:00,596 --> 00:16:01,756
of your shortcut in your app.


543
00:16:02,566 --> 00:16:05,246
In this case, every time the


544
00:16:05,366 --> 00:16:07,926
user orders soup, I want to


545
00:16:07,926 --> 00:16:09,396
donate this intent, because


546
00:16:09,396 --> 00:16:10,666
that's going to help Siri learn


547
00:16:10,836 --> 00:16:12,186
when is the best time to predict


548
00:16:12,186 --> 00:16:12,336
it?


549
00:16:13,766 --> 00:16:15,586
So, all that's left, now that


550
00:16:15,586 --> 00:16:16,926
we've defined our custom intent,


551
00:16:16,926 --> 00:16:17,956
is to handle it.


552
00:16:18,216 --> 00:16:19,036
And, just like with


553
00:16:19,036 --> 00:16:20,596
NSUserActivity, you should


554
00:16:20,596 --> 00:16:21,236
implement the


555
00:16:21,236 --> 00:16:23,036
continueUserActivity method in


556
00:16:23,036 --> 00:16:24,576
your app delegate in order to


557
00:16:24,576 --> 00:16:25,366
handle your intent.


558
00:16:26,126 --> 00:16:28,056
So, when an intent is opened in


559
00:16:28,056 --> 00:16:30,066
your app, it's passed in as an


560
00:16:30,066 --> 00:16:32,076
NSUserActivity object, whose


561
00:16:32,076 --> 00:16:34,436
activity type is the name of the


562
00:16:34,436 --> 00:16:36,086
intent class that you generated


563
00:16:36,086 --> 00:16:36,496
earlier.


564
00:16:36,796 --> 00:16:37,686
In this case, it's


565
00:16:37,796 --> 00:16:38,926
OrderSoupIntent.


566
00:16:40,146 --> 00:16:41,666
But if you only implement


567
00:16:41,666 --> 00:16:43,306
continueUserActivity, your


568
00:16:43,306 --> 00:16:44,796
shortcut will open your app


569
00:16:44,796 --> 00:16:45,446
every time.


570
00:16:45,486 --> 00:16:47,036
It won't run in the background,


571
00:16:47,036 --> 00:16:48,766
or work inline in Siri, or


572
00:16:48,766 --> 00:16:50,156
support things like custom voice


573
00:16:50,156 --> 00:16:50,676
responses.


574
00:16:51,056 --> 00:16:52,706
So, for the best experience, you


575
00:16:52,706 --> 00:16:54,486
want to create an extension to


576
00:16:54,486 --> 00:16:55,676
handle your shortcut in the


577
00:16:55,676 --> 00:16:56,176
background.


578
00:16:57,116 --> 00:16:59,716
And to do that, create a new


579
00:16:59,966 --> 00:17:01,736
target in your Xcode project and


580
00:17:01,736 --> 00:17:03,366
choose the Intents Extension


581
00:17:03,416 --> 00:17:03,806
template.


582
00:17:04,326 --> 00:17:07,836
Make your intent handler conform


583
00:17:07,925 --> 00:17:09,445
to the intent handling protocol.


584
00:17:09,836 --> 00:17:10,636
In this case, it's


585
00:17:10,876 --> 00:17:12,766
OrderSoupIntent handling and


586
00:17:12,766 --> 00:17:14,076
then implement these methods,


587
00:17:14,076 --> 00:17:15,876
which are confirm and handle.


588
00:17:16,425 --> 00:17:17,566
Now, note that unlike


589
00:17:17,566 --> 00:17:19,356
traditional SiriKit, you don't


590
00:17:19,356 --> 00:17:20,846
need to implement any resolve


591
00:17:20,846 --> 00:17:22,876
methods, because your intent is


592
00:17:22,996 --> 00:17:24,346
ready to go without any


593
00:17:24,486 --> 00:17:25,866
customization needed or any


594
00:17:25,866 --> 00:17:26,965
follow-ups from the user.


595
00:17:27,346 --> 00:17:29,676
So, in confirm, you should check


596
00:17:29,676 --> 00:17:30,906
all of the values of the


597
00:17:30,906 --> 00:17:32,126
properties of your intent to


598
00:17:32,126 --> 00:17:33,056
make sure that they're valid.


599
00:17:33,396 --> 00:17:34,596
And, if they're not, you should


600
00:17:34,596 --> 00:17:36,066
return an error code if you


601
00:17:36,066 --> 00:17:36,906
don't think you'll be able to


602
00:17:36,906 --> 00:17:38,096
handle that intent.


603
00:17:38,716 --> 00:17:40,866
And then you should handle,


604
00:17:40,916 --> 00:17:42,726
actually perform your shortcut.


605
00:17:43,086 --> 00:17:44,106
So, in this case, that means


606
00:17:44,106 --> 00:17:45,416
actually placing an order for


607
00:17:45,416 --> 00:17:45,786
the soup.


608
00:17:46,136 --> 00:17:47,996
And then you return a response


609
00:17:47,996 --> 00:17:49,756
object that indicates the


610
00:17:49,756 --> 00:17:51,266
outcome, such as success.


611
00:17:52,926 --> 00:17:54,596
Again, you should implement an


612
00:17:54,596 --> 00:17:56,816
intents extension for every


613
00:17:56,816 --> 00:17:58,476
shortcut that can run in the


614
00:17:58,476 --> 00:18:00,046
background, because then they'll


615
00:18:00,046 --> 00:18:01,526
run right in line inside of


616
00:18:01,526 --> 00:18:03,046
Siri, on the lock screen, in


617
00:18:03,046 --> 00:18:04,426
search, in the Shortcuts app,


618
00:18:04,426 --> 00:18:05,796
and on the Siri Watch Face,


619
00:18:05,796 --> 00:18:06,796
without having to launch your


620
00:18:06,796 --> 00:18:07,026
app.


621
00:18:07,726 --> 00:18:08,986
The most valuable shortcuts are


622
00:18:08,986 --> 00:18:09,736
the ones that run in the


623
00:18:09,736 --> 00:18:11,886
background, but you can also


624
00:18:11,886 --> 00:18:12,996
build a lot of great other


625
00:18:12,996 --> 00:18:13,486
shortcuts.


626
00:18:13,736 --> 00:18:15,546
And keep in mind that, even if


627
00:18:15,546 --> 00:18:16,696
you implement an intents


628
00:18:16,696 --> 00:18:18,166
extension, you should always


629
00:18:18,166 --> 00:18:19,816
implement continueUserActivity,


630
00:18:20,126 --> 00:18:21,476
because the user will have the


631
00:18:21,476 --> 00:18:23,076
opportunity to open the shortcut


632
00:18:23,076 --> 00:18:24,816
in your app from Siri, for


633
00:18:24,816 --> 00:18:26,906
example, by tapping on the card


634
00:18:27,206 --> 00:18:29,126
in Siri that shows your apps'


635
00:18:29,126 --> 00:18:31,226
custom UI.


636
00:18:31,766 --> 00:18:33,206
So, there's one more thing that


637
00:18:33,206 --> 00:18:34,506
I want to tell you about, which


638
00:18:34,506 --> 00:18:35,946
is INRelevantShortcut.


639
00:18:36,346 --> 00:18:37,896
Now, INRelevantShortcut is the


640
00:18:37,896 --> 00:18:39,386
way to expose shortcuts to the


641
00:18:39,386 --> 00:18:41,746
Siri Watch Face, and you do it


642
00:18:41,746 --> 00:18:42,726
just by providing


643
00:18:42,876 --> 00:18:44,756
INRelevantShortcut objects that


644
00:18:44,756 --> 00:18:46,706
include your intents or user


645
00:18:46,706 --> 00:18:47,176
activities.


646
00:18:48,026 --> 00:18:49,266
You can, optionally, include


647
00:18:49,266 --> 00:18:50,956
relevance information in your


648
00:18:50,956 --> 00:18:52,316
relevant shortcuts, which is a


649
00:18:52,316 --> 00:18:54,546
hint to the Siri Watch Face as


650
00:18:54,546 --> 00:18:56,046
to when your shortcuts will be


651
00:18:56,046 --> 00:18:57,326
relevant and when's the best


652
00:18:57,326 --> 00:18:58,286
time to show your shortcut?


653
00:18:59,376 --> 00:19:01,266
Now, the really cool thing about


654
00:19:01,386 --> 00:19:02,546
INRelevantShortcut is that it


655
00:19:02,546 --> 00:19:03,926
works even if you don't have a


656
00:19:03,926 --> 00:19:04,406
Watch app.


657
00:19:04,806 --> 00:19:06,206
So, you can actually expose


658
00:19:06,206 --> 00:19:07,896
relevant shortcuts from your iOS


659
00:19:07,896 --> 00:19:09,126
apps, and if they run in the


660
00:19:09,126 --> 00:19:10,666
background, they'll appear right


661
00:19:10,666 --> 00:19:11,776
on the Siri Watch Face.


662
00:19:12,276 --> 00:19:13,656
Okay, now that we've explored


663
00:19:13,656 --> 00:19:14,946
all the ways that Shortcuts can


664
00:19:14,946 --> 00:19:17,256
be used and how to adopt the


665
00:19:17,256 --> 00:19:18,586
APIs, I'm going to turn it over


666
00:19:18,586 --> 00:19:20,146
to my colleague Willem who's


667
00:19:20,146 --> 00:19:21,326
going to give you a great demo


668
00:19:21,326 --> 00:19:23,026
of how to adopt shortcuts in


669
00:19:23,026 --> 00:19:23,486
Xcode.


670
00:19:24,726 --> 00:19:24,976
Willem?


671
00:19:25,516 --> 00:19:34,126
[ Applause ]


672
00:19:34,626 --> 00:19:35,266
>> Thanks, Ari.


673
00:19:36,486 --> 00:19:38,976
I'm so excited to be the first


674
00:19:38,976 --> 00:19:42,056
one to demo adopting Shortcuts.


675
00:19:42,756 --> 00:19:45,606
Before I dive into Xcode, let me


676
00:19:45,606 --> 00:19:46,536
show you the app we've been


677
00:19:46,536 --> 00:19:47,066
working on.


678
00:19:47,486 --> 00:19:48,786
As Ari mentioned, we've been


679
00:19:48,786 --> 00:19:50,516
working on a soup-ordering app


680
00:19:50,516 --> 00:19:51,306
called Soup Chef.


681
00:19:51,486 --> 00:19:52,916
Let me show it to you.


682
00:19:59,356 --> 00:20:01,176
So, this is Soup Chef.


683
00:20:01,676 --> 00:20:02,956
When I launch the app, I'm


684
00:20:02,956 --> 00:20:04,646
presented with my order history.


685
00:20:05,106 --> 00:20:06,216
Since I haven't ordered anything


686
00:20:06,216 --> 00:20:07,536
yet, this is still empty.


687
00:20:08,106 --> 00:20:09,516
I can place a new order by


688
00:20:09,516 --> 00:20:10,506
tapping the plus button.


689
00:20:11,346 --> 00:20:12,696
This presents me with the soup


690
00:20:12,696 --> 00:20:13,726
menu, where you can see the


691
00:20:13,726 --> 00:20:15,016
available soups I can order.


692
00:20:15,516 --> 00:20:18,056
Let's order a tomato soup.


693
00:20:18,436 --> 00:20:21,336
Next, I can specify the quantity


694
00:20:21,336 --> 00:20:22,506
and options for my soup.


695
00:20:22,866 --> 00:20:24,586
I'll order a single tomato soup


696
00:20:24,886 --> 00:20:26,816
with red pepper, and when I'm


697
00:20:26,816 --> 00:20:28,446
ready to order, I tap the Place


698
00:20:28,496 --> 00:20:29,056
Order button.


699
00:20:30,306 --> 00:20:31,666
I'm brought back to the order


700
00:20:31,666 --> 00:20:32,586
history where you can now see


701
00:20:32,586 --> 00:20:33,706
the order that I just placed.


702
00:20:34,246 --> 00:20:36,316
I can tap the order to see more


703
00:20:36,316 --> 00:20:37,846
details about a specific order.


704
00:20:38,726 --> 00:20:40,236
This view has an associated user


705
00:20:40,236 --> 00:20:40,776
activity.


706
00:20:41,036 --> 00:20:43,576
I think it would be pretty cool


707
00:20:43,876 --> 00:20:45,196
to suggest this to our users,


708
00:20:45,496 --> 00:20:46,586
since our users like to


709
00:20:46,586 --> 00:20:47,976
reminisce about the good soups


710
00:20:47,976 --> 00:20:49,166
they've ordered in the past


711
00:20:49,166 --> 00:20:50,066
[laughter].


712
00:20:50,066 --> 00:20:52,206
And it would be great if this


713
00:20:52,206 --> 00:20:53,206
could be suggested to them.


714
00:20:53,726 --> 00:20:54,866
So, let's go to Xcode and see


715
00:20:54,866 --> 00:20:57,346
how we can do that.


716
00:20:58,276 --> 00:20:59,596
Here, I'm looking at the


717
00:20:59,596 --> 00:21:01,016
viewController for the order


718
00:21:01,016 --> 00:21:01,626
detail view.


719
00:21:02,776 --> 00:21:04,766
I'm creating a user activity,


720
00:21:04,926 --> 00:21:06,026
and I'm setting the


721
00:21:06,026 --> 00:21:07,306
requiredUserInfoKeys.


722
00:21:07,896 --> 00:21:08,966
I'm also making sure that it's


723
00:21:08,966 --> 00:21:09,986
EligibleForSearch.


724
00:21:11,316 --> 00:21:14,996
For it to be suggested, I also


725
00:21:14,996 --> 00:21:16,146
need to make it eligible for


726
00:21:16,146 --> 00:21:16,726
prediction.


727
00:21:22,216 --> 00:21:22,736
And that's it.


728
00:21:23,326 --> 00:21:24,346
Let's try it out.


729
00:21:34,226 --> 00:21:35,236
First, I need to make sure that


730
00:21:35,236 --> 00:21:36,766
I donate the user activity, so


731
00:21:36,766 --> 00:21:39,656
I'll go back to the view.


732
00:21:39,656 --> 00:21:40,456
That should be enough.


733
00:21:40,976 --> 00:21:42,366
Now we want to make sure that


734
00:21:42,366 --> 00:21:43,696
the donation actually happened,


735
00:21:43,836 --> 00:21:45,476
and, to do that, we added two


736
00:21:45,476 --> 00:21:47,116
new developer settings that make


737
00:21:47,116 --> 00:21:48,916
it super easy to see a recent


738
00:21:48,916 --> 00:21:50,726
donations in search and on the


739
00:21:50,726 --> 00:21:51,296
lock screen.


740
00:21:51,826 --> 00:21:53,426
To enable it, I go to Settings,


741
00:21:54,126 --> 00:21:55,216
and I scroll down to the


742
00:21:55,216 --> 00:21:56,096
developer section.


743
00:21:57,166 --> 00:21:59,136
At the bottom, there are two new


744
00:21:59,136 --> 00:22:00,776
toggles, Display Recent


745
00:22:00,776 --> 00:22:02,616
Shortcuts and Display Donations


746
00:22:02,666 --> 00:22:03,386
on Lock Screen.


747
00:22:03,656 --> 00:22:04,386
Let's enable both.


748
00:22:06,166 --> 00:22:08,236
I can now go back to the home


749
00:22:08,236 --> 00:22:09,906
screen and pull down to go to


750
00:22:09,906 --> 00:22:11,416
search, and I see the donation


751
00:22:11,416 --> 00:22:12,356
that I just did.


752
00:22:13,356 --> 00:22:13,656
Great.


753
00:22:14,516 --> 00:22:18,626
[ Applause ]


754
00:22:19,126 --> 00:22:20,496
I can tap it, and the app is


755
00:22:20,496 --> 00:22:21,556
launched with that user


756
00:22:21,556 --> 00:22:23,046
activity, and I'm back to the


757
00:22:23,046 --> 00:22:24,856
order that I was just donated.


758
00:22:25,586 --> 00:22:28,846
Great. So, this is pretty good,


759
00:22:29,216 --> 00:22:30,516
but I think we can do a lot


760
00:22:30,516 --> 00:22:30,826
more.


761
00:22:31,316 --> 00:22:33,326
Since the main capability of our


762
00:22:33,326 --> 00:22:34,856
app is ordering soup, it would


763
00:22:34,856 --> 00:22:35,846
be great if this could be


764
00:22:35,846 --> 00:22:37,556
suggested to our users.


765
00:22:38,016 --> 00:22:39,426
And I want users to be able to


766
00:22:39,426 --> 00:22:40,776
do that without having to launch


767
00:22:40,826 --> 00:22:41,086
the app.


768
00:22:41,626 --> 00:22:43,156
So, I'll implement it using an


769
00:22:43,316 --> 00:22:43,756
intent.


770
00:22:44,506 --> 00:22:47,536
There isn't a built-in soup


771
00:22:47,536 --> 00:22:51,196
order intent, but now in iOS 12,


772
00:22:51,296 --> 00:22:53,116
I can create a custom intent, so


773
00:22:53,116 --> 00:22:54,026
I'll do that.


774
00:22:55,826 --> 00:22:58,076
And to start by creating an


775
00:22:58,076 --> 00:22:59,896
intent definition file, I'll go


776
00:22:59,896 --> 00:23:01,606
to File, View.


777
00:23:02,396 --> 00:23:05,986
File and select the SiriKit and


778
00:23:05,986 --> 00:23:06,946
then definition file.


779
00:23:08,226 --> 00:23:08,826
Click Next.


780
00:23:09,856 --> 00:23:10,806
Now I can give it a name.


781
00:23:10,806 --> 00:23:12,106
I'll keep it to Intents, and


782
00:23:12,356 --> 00:23:13,876
I'll put it in the Resources


783
00:23:13,876 --> 00:23:14,116
group.


784
00:23:14,166 --> 00:23:15,186
All right, and I'm ready.


785
00:23:15,186 --> 00:23:15,806
I click Create.


786
00:23:17,286 --> 00:23:19,026
I'm presented with our intent


787
00:23:19,026 --> 00:23:20,206
definition file and our new


788
00:23:20,206 --> 00:23:21,046
Intent Editor.


789
00:23:21,886 --> 00:23:23,106
Before I add the intent, I'll


790
00:23:23,106 --> 00:23:24,456
make sure to include the intent


791
00:23:24,456 --> 00:23:25,526
definition file in the right


792
00:23:25,526 --> 00:23:26,186
targets.


793
00:23:26,526 --> 00:23:28,456
As Ari said, we need to add it


794
00:23:28,456 --> 00:23:29,556
to all the targets where the


795
00:23:29,556 --> 00:23:30,486
intents are used.


796
00:23:31,096 --> 00:23:32,976
So, I'll add it to our shared


797
00:23:32,976 --> 00:23:34,926
framework, and, since we're


798
00:23:34,926 --> 00:23:35,896
using a shared framework, I


799
00:23:35,896 --> 00:23:37,606
don't want it to generate go for


800
00:23:37,606 --> 00:23:38,196
app target.


801
00:23:38,756 --> 00:23:40,996
So, in the dropdown, next to the


802
00:23:40,996 --> 00:23:42,476
app target, I'll select No


803
00:23:42,476 --> 00:23:43,436
generated classes.


804
00:23:45,016 --> 00:23:46,016
Now that that's done, we're


805
00:23:46,016 --> 00:23:47,096
ready to add our intent.


806
00:23:47,506 --> 00:23:49,766
I'll click the plus button in


807
00:23:49,766 --> 00:23:52,186
the lower left corner and select


808
00:23:52,186 --> 00:23:52,776
New Intent.


809
00:23:53,646 --> 00:23:55,986
I'll give it a name OrderSoup.


810
00:23:58,556 --> 00:24:00,726
Next, I'll select the category.


811
00:24:01,006 --> 00:24:02,376
In this case, it's an order


812
00:24:02,426 --> 00:24:02,766
intent.


813
00:24:03,266 --> 00:24:05,946
Fill out the title, OrderSoup,


814
00:24:06,486 --> 00:24:08,606
and the description, Order a


815
00:24:08,786 --> 00:24:10,966
soup from Soup Chef.


816
00:24:12,236 --> 00:24:13,966
Since this involves a real-world


817
00:24:13,966 --> 00:24:15,746
transaction, I want to use it to


818
00:24:15,746 --> 00:24:17,086
confirm this order before


819
00:24:17,086 --> 00:24:18,906
placing it, so I'll select User


820
00:24:18,906 --> 00:24:20,056
confirmation required.


821
00:24:21,546 --> 00:24:22,816
Next, let's define the


822
00:24:22,816 --> 00:24:23,366
parameters.


823
00:24:23,776 --> 00:24:25,256
I'm going to define three


824
00:24:25,256 --> 00:24:27,576
parameters, one for the soup,


825
00:24:28,266 --> 00:24:30,016
one for the quantity, and one


826
00:24:30,016 --> 00:24:31,036
for the options that the user


827
00:24:31,036 --> 00:24:31,566
selects.


828
00:24:32,056 --> 00:24:32,886
I'll start with soup.


829
00:24:33,526 --> 00:24:35,106
I click the plus button in the


830
00:24:35,106 --> 00:24:37,066
parameter section and fill out


831
00:24:37,296 --> 00:24:38,396
the name, soup.


832
00:24:39,186 --> 00:24:41,246
Since soup is a custom object of


833
00:24:41,246 --> 00:24:43,406
our app, I'm going to select the


834
00:24:44,046 --> 00:24:45,176
custom type.


835
00:24:45,726 --> 00:24:47,666
Next, I'll add quantity.


836
00:24:47,966 --> 00:24:49,566
I click plus again, fill out the


837
00:24:49,566 --> 00:24:51,696
name, and this is going to be an


838
00:24:51,746 --> 00:24:52,256
integer.


839
00:24:54,346 --> 00:24:56,486
Next, options.


840
00:24:57,646 --> 00:24:58,756
Again, options is a custom


841
00:24:58,756 --> 00:25:00,186
object of our app, so I'll use


842
00:25:00,186 --> 00:25:00,836
the custom type.


843
00:25:01,846 --> 00:25:03,306
And since the user can select


844
00:25:03,306 --> 00:25:04,866
multiple options, I'll also


845
00:25:04,906 --> 00:25:06,676
check the array checkbox.


846
00:25:07,876 --> 00:25:11,076
Finally, we need to define the


847
00:25:11,076 --> 00:25:11,856
shortcut types.


848
00:25:11,856 --> 00:25:13,736
At this point, I'm just going to


849
00:25:13,736 --> 00:25:15,186
define a single shortcut type


850
00:25:15,186 --> 00:25:17,106
that contains all the


851
00:25:17,106 --> 00:25:17,646
parameters.


852
00:25:18,516 --> 00:25:19,816
I'll click the plus button in


853
00:25:19,816 --> 00:25:22,226
the shortcut type section and


854
00:25:22,456 --> 00:25:23,506
select the parameters I want to


855
00:25:23,506 --> 00:25:25,236
include in the shortcut type, so


856
00:25:25,236 --> 00:25:26,996
I'll select soup, quantity and


857
00:25:26,996 --> 00:25:27,456
options.


858
00:25:27,816 --> 00:25:29,076
When I'm ready, I click the Add


859
00:25:29,076 --> 00:25:30,136
Shortcut Type button.


860
00:25:31,176 --> 00:25:33,586
I fill out the title Order, and


861
00:25:33,586 --> 00:25:35,486
then I'm going to insert the


862
00:25:35,576 --> 00:25:39,506
quantity and the soup with


863
00:25:39,846 --> 00:25:42,496
options, and I'll leave the


864
00:25:42,496 --> 00:25:44,186
subtitle empty, because I've


865
00:25:44,186 --> 00:25:45,116
already conveyed all the


866
00:25:45,116 --> 00:25:46,356
information I need to in the


867
00:25:46,356 --> 00:25:46,726
title.


868
00:25:46,896 --> 00:25:49,116
I'll also leave Support


869
00:25:49,116 --> 00:25:50,396
background execution checked,


870
00:25:51,266 --> 00:25:52,416
because I want the user to run


871
00:25:52,416 --> 00:25:56,606
this intent in the background.


872
00:25:56,606 --> 00:25:58,276
So, we just defined our first


873
00:25:58,276 --> 00:25:58,736
intent.


874
00:25:59,286 --> 00:26:00,116
Let's start using it.


875
00:26:00,676 --> 00:26:03,016
I'll start by adding two helper


876
00:26:03,016 --> 00:26:05,426
methods to our order object to


877
00:26:05,556 --> 00:26:06,596
make it easier to convert


878
00:26:06,596 --> 00:26:08,016
between it and the intent.


879
00:26:08,916 --> 00:26:11,566
I'll go to the order class and,


880
00:26:11,606 --> 00:26:15,016
at the bottom, I'll add an order


881
00:26:15,016 --> 00:26:15,536
extension.


882
00:26:16,026 --> 00:26:20,146
It contains a computer variable


883
00:26:20,146 --> 00:26:22,196
that returns an intent.


884
00:26:22,196 --> 00:26:23,546
In it, I create the intent.


885
00:26:23,886 --> 00:26:26,266
I set the soup quantity and


886
00:26:26,266 --> 00:26:27,556
options, and I return the


887
00:26:27,556 --> 00:26:27,926
intent.


888
00:26:28,966 --> 00:26:30,316
Extension also defines a new


889
00:26:30,316 --> 00:26:31,466
initializer that dates an


890
00:26:31,466 --> 00:26:31,846
intent.


891
00:26:32,556 --> 00:26:34,316
In it, I extract the soup,


892
00:26:34,636 --> 00:26:36,996
quantity, and options, and then


893
00:26:37,046 --> 00:26:38,786
I initialize the order with


894
00:26:38,956 --> 00:26:40,096
those values.


895
00:26:41,056 --> 00:26:42,216
Great, this will be very


896
00:26:42,216 --> 00:26:42,556
helpful.


897
00:26:43,926 --> 00:26:45,256
Next, we need to make sure that


898
00:26:45,256 --> 00:26:46,996
we donate the intent every time


899
00:26:46,996 --> 00:26:48,156
the user places an order.


900
00:26:48,726 --> 00:26:50,296
So, I'll go to the soup order


901
00:26:50,296 --> 00:26:53,026
data manager, and, in the


902
00:26:53,026 --> 00:26:54,656
placeOrder method, I'll add our


903
00:26:54,656 --> 00:26:55,436
donation logic.


904
00:26:57,486 --> 00:26:59,716
I create an INInteraction that


905
00:26:59,716 --> 00:27:01,266
contains the intent of the


906
00:27:01,266 --> 00:27:03,126
order, and then I just donate


907
00:27:03,126 --> 00:27:06,066
that interaction, and that's it.


908
00:27:07,336 --> 00:27:08,606
Finally, we need to handle the


909
00:27:08,606 --> 00:27:09,036
intent.


910
00:27:09,366 --> 00:27:11,056
I'll start by adding support in


911
00:27:11,056 --> 00:27:13,196
the app itself, so I'll go to


912
00:27:13,196 --> 00:27:15,196
the AppDelegate, and, in the


913
00:27:15,196 --> 00:27:17,086
continueUserActivity, I'll add


914
00:27:17,086 --> 00:27:17,686
support for it.


915
00:27:18,236 --> 00:27:22,086
I check if the activityType of


916
00:27:22,616 --> 00:27:24,396
the userActivity is equal to the


917
00:27:24,396 --> 00:27:26,096
class name of the intent that I


918
00:27:26,096 --> 00:27:26,786
want to handle.


919
00:27:27,216 --> 00:27:29,196
If that's the case, I extract


920
00:27:29,196 --> 00:27:30,196
the intent from the


921
00:27:30,196 --> 00:27:32,226
userActivity, and I generate an


922
00:27:32,226 --> 00:27:32,886
order with it.


923
00:27:33,346 --> 00:27:34,966
Finally, I present the order


924
00:27:34,966 --> 00:27:35,276
view.


925
00:27:35,686 --> 00:27:37,426
So, since we're launching the


926
00:27:37,426 --> 00:27:38,966
app, I'm assuming that the user


927
00:27:38,966 --> 00:27:39,776
doesn't want to immediately


928
00:27:39,776 --> 00:27:41,096
place the order but wants to


929
00:27:41,096 --> 00:27:42,746
make some customizations before


930
00:27:42,746 --> 00:27:44,566
placing it, so that's why I'm


931
00:27:44,566 --> 00:27:45,596
presenting the order view


932
00:27:45,596 --> 00:27:46,036
instead.


933
00:27:46,846 --> 00:27:50,276
And, finally, let's add support


934
00:27:50,456 --> 00:27:52,556
with an intents extension so the


935
00:27:52,556 --> 00:27:54,106
user can run this intent in the


936
00:27:54,106 --> 00:27:54,646
background.


937
00:27:55,506 --> 00:27:56,776
I'll need to add an intents


938
00:27:56,776 --> 00:27:58,216
extension first, so I'll go to


939
00:27:58,216 --> 00:28:02,966
File, View, Target and select


940
00:28:02,966 --> 00:28:04,446
the Intents Extension target.


941
00:28:05,676 --> 00:28:06,496
I'll give it a name,


942
00:28:06,656 --> 00:28:09,826
SoupChefIntents, and I click


943
00:28:09,826 --> 00:28:10,286
Finish.


944
00:28:11,256 --> 00:28:14,956
Since I've added a new target


945
00:28:14,956 --> 00:28:17,316
where I'll use the intents, I


946
00:28:17,316 --> 00:28:18,166
need to make sure that the


947
00:28:18,166 --> 00:28:19,316
intent definition file is


948
00:28:19,316 --> 00:28:20,386
included in that target.


949
00:28:20,746 --> 00:28:21,906
So, I go back to the intent


950
00:28:21,906 --> 00:28:23,956
definition file and add it to


951
00:28:24,036 --> 00:28:25,156
that target.


952
00:28:25,716 --> 00:28:27,196
Again, I don't want to generate


953
00:28:27,196 --> 00:28:28,226
code in that target, so, in the


954
00:28:28,226 --> 00:28:29,656
dropdown, I'll select No


955
00:28:29,656 --> 00:28:33,726
generated classes.


956
00:28:34,616 --> 00:28:36,976
I also want the extension to


957
00:28:36,976 --> 00:28:38,406
have access to the same data as


958
00:28:38,406 --> 00:28:40,066
the app, so I'll add it to the


959
00:28:40,066 --> 00:28:40,766
same app group.


960
00:28:41,646 --> 00:28:43,316
In the Project Settings, I


961
00:28:43,316 --> 00:28:47,276
select the intents target and in


962
00:28:47,546 --> 00:28:49,146
the capability step, I'll add it


963
00:28:49,316 --> 00:28:52,286
to the same app group.


964
00:28:52,486 --> 00:28:53,886
Great. Now, we're ready to


965
00:28:53,886 --> 00:28:55,226
implement the intent handler


966
00:28:55,346 --> 00:28:56,556
that was created with this


967
00:28:56,556 --> 00:28:56,916
target.


968
00:28:59,886 --> 00:29:01,626
First, I'll import our shared


969
00:29:01,626 --> 00:29:02,866
framework, SoupKit [laughs].


970
00:29:03,956 --> 00:29:08,316
Since we're going to handle the


971
00:29:08,316 --> 00:29:10,086
OrderSoupIntent, this intent


972
00:29:10,086 --> 00:29:11,766
handler needs to conform to the


973
00:29:11,766 --> 00:29:12,996
OrderSoupIntentHandling


974
00:29:12,996 --> 00:29:13,606
protocol.


975
00:29:15,136 --> 00:29:17,756
This was generated as part of


976
00:29:18,406 --> 00:29:19,356
our intent.


977
00:29:21,276 --> 00:29:23,466
This protocol has one required


978
00:29:23,466 --> 00:29:25,826
method, the handle method.


979
00:29:25,826 --> 00:29:28,226
Let's implement it.


980
00:29:28,876 --> 00:29:31,456
In the handle method, I get an


981
00:29:31,456 --> 00:29:31,926
intent.


982
00:29:32,746 --> 00:29:33,926
I create an order from that


983
00:29:33,926 --> 00:29:36,186
intent, and, if that succeeds, I


984
00:29:36,186 --> 00:29:38,226
place the order, and I call the


985
00:29:38,226 --> 00:29:39,416
completion with an intent


986
00:29:39,416 --> 00:29:40,916
response with a success code.


987
00:29:41,706 --> 00:29:43,186
If I'm unable to create an order


988
00:29:43,416 --> 00:29:45,016
from the intent, I call


989
00:29:45,016 --> 00:29:46,096
completion with an intent


990
00:29:46,096 --> 00:29:47,326
response with a failure code.


991
00:29:47,816 --> 00:29:49,566
And that's it.


992
00:29:49,566 --> 00:29:50,946
I've just added support for a


993
00:29:50,946 --> 00:29:53,016
new intent in my app.


994
00:29:53,016 --> 00:29:53,686
Let's try it out.


995
00:30:04,736 --> 00:30:06,366
First, I'll need to donate the


996
00:30:06,366 --> 00:30:06,786
intent.


997
00:30:06,856 --> 00:30:08,006
So, I'll place another order.


998
00:30:08,566 --> 00:30:10,276
Click the plus button and this


999
00:30:10,276 --> 00:30:11,726
time I'm going to order a clam


1000
00:30:11,726 --> 00:30:16,356
chowder with croutons, and I'll


1001
00:30:16,356 --> 00:30:16,896
place the order.


1002
00:30:17,996 --> 00:30:19,136
Now, if we go back to the home


1003
00:30:19,136 --> 00:30:21,316
screen and pull down, I see my


1004
00:30:21,546 --> 00:30:22,346
donated intent.


1005
00:30:22,486 --> 00:30:22,786
Great.


1006
00:30:23,516 --> 00:30:28,196
[ Applause ]


1007
00:30:28,696 --> 00:30:30,826
I can tap it, and I'm presented


1008
00:30:30,826 --> 00:30:32,216
with a shortcut view and the


1009
00:30:32,246 --> 00:30:32,886
order button.


1010
00:30:33,266 --> 00:30:34,606
If I tap the order button, the


1011
00:30:34,606 --> 00:30:35,646
order will be placed in the


1012
00:30:35,646 --> 00:30:38,096
background, and it's ordered.


1013
00:30:38,926 --> 00:30:40,346
I can go back to the app and see


1014
00:30:40,346 --> 00:30:42,106
if it was actually ordered, and,


1015
00:30:42,106 --> 00:30:43,556
yeah, there is a new order in my


1016
00:30:43,556 --> 00:30:43,796
app.


1017
00:30:44,086 --> 00:30:44,976
Great, so easy.


1018
00:30:45,516 --> 00:30:53,686
[ Applause ]


1019
00:30:54,186 --> 00:30:55,726
I can also, instead of tapping


1020
00:30:55,726 --> 00:30:57,156
the order button, tap the


1021
00:30:57,156 --> 00:30:58,856
shortcut view, itself, which


1022
00:30:58,856 --> 00:31:00,646
will launch the app with the


1023
00:31:00,646 --> 00:31:02,586
shortcut, and, as I implemented


1024
00:31:02,586 --> 00:31:03,686
it, it shows the order view,


1025
00:31:03,896 --> 00:31:05,176
where I can customize the order.


1026
00:31:05,266 --> 00:31:07,026
So, I'll add cheese, too.


1027
00:31:07,206 --> 00:31:07,576
Who knows?


1028
00:31:08,236 --> 00:31:09,496
And I'll place the order.


1029
00:31:11,126 --> 00:31:14,396
Great. Finally, let's add the


1030
00:31:14,396 --> 00:31:15,516
shortcut to Siri.


1031
00:31:16,996 --> 00:31:19,156
I'll go to Settings, and I


1032
00:31:19,156 --> 00:31:20,896
scroll up to the Siri and


1033
00:31:20,896 --> 00:31:21,316
search.


1034
00:31:22,206 --> 00:31:23,496
Here I can select the shortcut


1035
00:31:23,496 --> 00:31:24,796
that I want to add to Siri.


1036
00:31:25,366 --> 00:31:26,856
In this case, I'll add the order


1037
00:31:26,856 --> 00:31:28,636
one clam chowder with croutons.


1038
00:31:30,206 --> 00:31:31,456
When I tap the record button, I


1039
00:31:31,456 --> 00:31:32,626
can say the phrase I want to


1040
00:31:32,626 --> 00:31:35,026
associate with the shortcut.


1041
00:31:35,456 --> 00:31:36,286
Soup time.


1042
00:31:37,446 --> 00:31:38,876
Now, they got it.


1043
00:31:39,516 --> 00:31:45,500
[ Applause ]


1044
00:31:48,636 --> 00:31:50,296
Let's take a step back and look


1045
00:31:50,296 --> 00:31:51,516
at what we just did.


1046
00:31:51,946 --> 00:31:53,126
We started by making an


1047
00:31:53,126 --> 00:31:54,856
NSUserActivity that was already


1048
00:31:54,856 --> 00:31:56,536
implemented in our app eligible


1049
00:31:56,536 --> 00:31:57,226
for prediction.


1050
00:31:57,886 --> 00:31:59,256
This allowed it to be suggested


1051
00:31:59,376 --> 00:32:00,706
and is a really easy way to


1052
00:32:00,706 --> 00:32:03,076
expose the content of your app.


1053
00:32:04,306 --> 00:32:06,046
Next, we defined a custom


1054
00:32:06,046 --> 00:32:06,396
intent.


1055
00:32:07,026 --> 00:32:08,806
This is really the best way to


1056
00:32:08,806 --> 00:32:09,786
represent a piece of key


1057
00:32:09,786 --> 00:32:11,236
functionality of your app.


1058
00:32:11,866 --> 00:32:13,256
In our case, that was ordering a


1059
00:32:13,256 --> 00:32:13,536
soup.


1060
00:32:13,986 --> 00:32:16,046
After defining the intent, we


1061
00:32:16,046 --> 00:32:17,136
made sure that we donate the


1062
00:32:17,136 --> 00:32:18,626
intent every time the user


1063
00:32:18,716 --> 00:32:20,006
placed an order inside of the


1064
00:32:20,006 --> 00:32:20,196
app.


1065
00:32:20,196 --> 00:32:23,176
And, finally, we handled the


1066
00:32:23,176 --> 00:32:25,196
intent, both in an extension to


1067
00:32:25,196 --> 00:32:27,266
support background execution and


1068
00:32:27,266 --> 00:32:29,156
in the app itself so the user


1069
00:32:29,156 --> 00:32:31,426
can launch the app with the


1070
00:32:32,176 --> 00:32:32,426
shortcut.


1071
00:32:34,066 --> 00:32:35,766
So, now that we've seen how you


1072
00:32:35,766 --> 00:32:37,786
can adopt shortcuts, let's take


1073
00:32:37,786 --> 00:32:39,666
a look at how those shortcuts


1074
00:32:39,666 --> 00:32:41,176
are suggested and what you can


1075
00:32:41,176 --> 00:32:42,866
do to make sure your users see


1076
00:32:42,866 --> 00:32:44,506
the best possible suggestions.


1077
00:32:45,096 --> 00:32:48,366
Every time a user performs an


1078
00:32:48,366 --> 00:32:50,526
action in your app and your app


1079
00:32:50,526 --> 00:32:53,036
donates this, the system will


1080
00:32:53,036 --> 00:32:56,086
look at the time, location, and


1081
00:32:56,086 --> 00:32:56,726
other signals.


1082
00:32:58,106 --> 00:32:59,906
For a time, we consider, among


1083
00:32:59,906 --> 00:33:01,396
other things, the time of day


1084
00:33:01,736 --> 00:33:02,656
and the day of the week.


1085
00:33:03,256 --> 00:33:04,946
Well, for the location, we look


1086
00:33:04,946 --> 00:33:06,216
at the overall location of the


1087
00:33:06,216 --> 00:33:07,286
user and see if it's a


1088
00:33:07,286 --> 00:33:08,736
significant location for that


1089
00:33:08,736 --> 00:33:09,046
user.


1090
00:33:09,646 --> 00:33:12,776
Let's see how the system now


1091
00:33:12,776 --> 00:33:14,566
uses these to make a suggestion.


1092
00:33:16,016 --> 00:33:17,736
Here, we'll just consider the


1093
00:33:18,436 --> 00:33:18,526
time.


1094
00:33:19,216 --> 00:33:20,786
Monday, at lunch, I order a


1095
00:33:20,786 --> 00:33:22,506
tomato soup with croutons.


1096
00:33:23,766 --> 00:33:25,106
That evening, I don't feel like


1097
00:33:25,106 --> 00:33:26,516
croutons, so I order a tomato


1098
00:33:26,566 --> 00:33:27,516
with red pepper instead.


1099
00:33:27,516 --> 00:33:30,866
Next day at lunch, I, again,


1100
00:33:30,866 --> 00:33:32,016
order a tomato soup with


1101
00:33:32,016 --> 00:33:32,466
croutons.


1102
00:33:33,326 --> 00:33:34,686
I keep doing this throughout the


1103
00:33:34,686 --> 00:33:36,966
week, and, on Friday, at lunch,


1104
00:33:37,246 --> 00:33:38,156
Siri might try to find a


1105
00:33:38,156 --> 00:33:38,926
suggestion for me.


1106
00:33:39,806 --> 00:33:41,926
It will look at my past behavior


1107
00:33:41,926 --> 00:33:43,286
and try to find a pattern in it.


1108
00:33:43,806 --> 00:33:45,286
And since it's lunchtime, and I


1109
00:33:45,286 --> 00:33:46,546
usually order a tomato soup with


1110
00:33:46,666 --> 00:33:48,486
croutons at lunchtime, Siri


1111
00:33:48,566 --> 00:33:50,486
might notice this and suggest


1112
00:33:50,486 --> 00:33:51,986
this to me, which is great.


1113
00:33:51,986 --> 00:33:53,096
It's exactly what I wanted.


1114
00:33:54,546 --> 00:33:56,196
So, this is all pretty high


1115
00:33:56,196 --> 00:33:57,546
level, so let's take a look at


1116
00:33:57,546 --> 00:33:59,526
how it actually works, starting


1117
00:33:59,706 --> 00:34:00,886
with NSUserActivity.


1118
00:34:01,196 --> 00:34:04,586
Imagine a user activity for the


1119
00:34:04,586 --> 00:34:06,346
place order screen in Soup Chef.


1120
00:34:06,676 --> 00:34:08,166
The user info dictionary could


1121
00:34:08,166 --> 00:34:09,926
contain three keys, soup,


1122
00:34:10,255 --> 00:34:11,985
quantity, and scroll position.


1123
00:34:12,485 --> 00:34:13,835
The last one is there, so, in


1124
00:34:13,835 --> 00:34:15,036
Handoff, you can bring the user


1125
00:34:15,036 --> 00:34:16,346
back to the exact position they


1126
00:34:16,346 --> 00:34:17,146
were last in.


1127
00:34:18,286 --> 00:34:20,246
Let's take a look at how this


1128
00:34:20,366 --> 00:34:22,156
can be suggested to the user.


1129
00:34:22,815 --> 00:34:25,916
We start by donating a user


1130
00:34:25,916 --> 00:34:27,596
activity where the soup is


1131
00:34:27,596 --> 00:34:29,716
tomato, the quantity is 1, and


1132
00:34:29,716 --> 00:34:30,926
the scroll position is 79


1133
00:34:30,926 --> 00:34:31,366
points.


1134
00:34:32,005 --> 00:34:34,076
Next, we donate a similar user


1135
00:34:34,076 --> 00:34:35,196
activity, but now scroll


1136
00:34:35,196 --> 00:34:36,686
position is changed to 110


1137
00:34:36,686 --> 00:34:37,005
points.


1138
00:34:38,176 --> 00:34:40,335
We keep doing this, and, at some


1139
00:34:40,335 --> 00:34:41,536
point, Siri will try to find a


1140
00:34:41,536 --> 00:34:42,376
suggestion again.


1141
00:34:42,976 --> 00:34:46,206
It will look at past behavior


1142
00:34:46,206 --> 00:34:47,315
and try to find a pattern of


1143
00:34:47,406 --> 00:34:48,556
equal user activities.


1144
00:34:49,295 --> 00:34:51,126
But since the scroll position is


1145
00:34:51,176 --> 00:34:52,985
so inconsistent over time, it


1146
00:34:52,985 --> 00:34:54,196
might not be able to find a


1147
00:34:54,196 --> 00:34:54,806
suggestion.


1148
00:34:56,346 --> 00:34:58,326
So, how can we fix this?


1149
00:34:59,856 --> 00:35:00,966
We can use the


1150
00:35:00,966 --> 00:35:02,366
requiredUserInfoKeys.


1151
00:35:03,486 --> 00:35:05,046
RequiredUserInfoKeys is an


1152
00:35:05,046 --> 00:35:06,706
existing property of a user


1153
00:35:06,706 --> 00:35:07,236
activity.


1154
00:35:07,876 --> 00:35:09,406
It represents the minimal amount


1155
00:35:09,406 --> 00:35:11,066
of information that is necessary


1156
00:35:11,066 --> 00:35:12,866
to restore the app to the state


1157
00:35:12,866 --> 00:35:13,806
that the user activity


1158
00:35:13,806 --> 00:35:14,336
represents.


1159
00:35:14,336 --> 00:35:17,366
And for suggestions it will be


1160
00:35:17,366 --> 00:35:19,216
used to determine which keys of


1161
00:35:19,216 --> 00:35:21,026
the user info dictionary will be


1162
00:35:21,026 --> 00:35:22,986
used to compare when looking for


1163
00:35:22,986 --> 00:35:23,466
patterns.


1164
00:35:24,476 --> 00:35:25,856
Let's apply this to a previous


1165
00:35:25,856 --> 00:35:26,326
example.


1166
00:35:27,916 --> 00:35:29,166
Now we specify that


1167
00:35:29,166 --> 00:35:31,246
requiredUserInfoKeys are soup


1168
00:35:31,436 --> 00:35:32,176
and quantity.


1169
00:35:32,726 --> 00:35:34,076
Again, we donate the user


1170
00:35:34,076 --> 00:35:36,026
activity where the soup is


1171
00:35:36,026 --> 00:35:38,066
tomato, the quantity is 1, and


1172
00:35:38,066 --> 00:35:39,226
the scroll position is 79


1173
00:35:39,226 --> 00:35:39,606
points.


1174
00:35:39,856 --> 00:35:41,246
But now the scroll position will


1175
00:35:41,246 --> 00:35:41,816
be ignored.


1176
00:35:42,986 --> 00:35:43,946
Next, we donate something


1177
00:35:43,946 --> 00:35:45,556
similar, and, again, the scroll


1178
00:35:45,556 --> 00:35:46,326
position is ignored.


1179
00:35:47,166 --> 00:35:49,546
We keep doing this, and, at some


1180
00:35:49,546 --> 00:35:51,426
point, Siri will try suggestion


1181
00:35:51,426 --> 00:35:51,656
again.


1182
00:35:53,046 --> 00:35:54,546
Now, I will look back and try to


1183
00:35:54,546 --> 00:35:55,666
find a pattern of equal user


1184
00:35:55,666 --> 00:35:56,196
activities.


1185
00:35:56,196 --> 00:35:57,226
And since it's no longer


1186
00:35:57,226 --> 00:35:59,166
considering the scroll position,


1187
00:35:59,306 --> 00:36:01,616
it might be able to say, "An


1188
00:36:01,616 --> 00:36:03,736
NSUserActivity with soup tomato


1189
00:36:03,986 --> 00:36:05,546
and quantity 1 is a good


1190
00:36:05,546 --> 00:36:07,056
suggestion for this user."


1191
00:36:08,096 --> 00:36:10,456
So, as you just saw, it's really


1192
00:36:10,456 --> 00:36:11,796
important to specify the right


1193
00:36:11,846 --> 00:36:13,606
set of keys as being required.


1194
00:36:13,606 --> 00:36:14,946
Otherwise, your users might not


1195
00:36:14,946 --> 00:36:16,306
get any suggestions at all.


1196
00:36:17,076 --> 00:36:18,696
So, that's how it worked for


1197
00:36:18,696 --> 00:36:19,476
user activity.


1198
00:36:20,826 --> 00:36:23,006
Intents work similarly but offer


1199
00:36:23,006 --> 00:36:24,416
you a lot more flexibility.


1200
00:36:25,386 --> 00:36:29,086
The main signal for intents are


1201
00:36:29,086 --> 00:36:30,046
the shortcut types that you


1202
00:36:30,046 --> 00:36:30,456
define.


1203
00:36:31,866 --> 00:36:33,766
Each shortcut type defines a


1204
00:36:33,766 --> 00:36:35,166
combination of parameters that


1205
00:36:35,166 --> 00:36:36,306
is valid for suggestion.


1206
00:36:36,966 --> 00:36:39,036
It's similar to the


1207
00:36:39,276 --> 00:36:40,556
requiredUserInfoKeys, but


1208
00:36:40,556 --> 00:36:41,896
instead of having just one set,


1209
00:36:42,076 --> 00:36:43,056
you can define multiple.


1210
00:36:43,666 --> 00:36:46,286
Let's apply this to our Soup


1211
00:36:46,286 --> 00:36:48,466
Chef app.


1212
00:36:48,466 --> 00:36:49,526
Earlier, I defined an


1213
00:36:49,526 --> 00:36:51,046
OrderSoupIntent with three


1214
00:36:51,046 --> 00:36:53,246
parameters, soup, quantity, and


1215
00:36:53,246 --> 00:36:53,676
options.


1216
00:36:54,026 --> 00:36:55,566
At the time, I only defined a


1217
00:36:55,566 --> 00:36:56,606
single shortcut type that


1218
00:36:56,606 --> 00:36:57,426
combined all of these


1219
00:36:57,466 --> 00:36:59,536
parameters, but, ideally, you


1220
00:36:59,536 --> 00:37:00,906
would define more shortcut


1221
00:37:00,906 --> 00:37:01,876
types, since that gives more


1222
00:37:01,876 --> 00:37:03,356
options to the system to find


1223
00:37:03,356 --> 00:37:04,326
patterns in your user's


1224
00:37:04,366 --> 00:37:04,776
behavior.


1225
00:37:05,596 --> 00:37:07,066
So, now I'll define three.


1226
00:37:08,136 --> 00:37:09,456
One shortcut type that combines


1227
00:37:09,456 --> 00:37:10,966
soup and quantity, one that


1228
00:37:10,966 --> 00:37:12,666
combines soup and options, and


1229
00:37:12,666 --> 00:37:14,056
one that combines all three


1230
00:37:14,126 --> 00:37:14,596
parameters.


1231
00:37:15,786 --> 00:37:17,326
Let's apply this to another


1232
00:37:17,326 --> 00:37:17,806
example.


1233
00:37:19,426 --> 00:37:21,586
Again, I start on Monday, at


1234
00:37:21,586 --> 00:37:23,136
lunch, by ordering a tomato soup


1235
00:37:23,326 --> 00:37:23,926
with croutons.


1236
00:37:24,846 --> 00:37:26,796
The Soup Chef app donates this


1237
00:37:26,846 --> 00:37:28,836
to the system, and the system


1238
00:37:28,836 --> 00:37:29,966
will split us up into all the


1239
00:37:29,966 --> 00:37:31,556
possible combinations based on


1240
00:37:31,556 --> 00:37:33,806
the shortcut types that I just


1241
00:37:34,576 --> 00:37:35,396
defined.


1242
00:37:35,396 --> 00:37:36,926
That evening, I order a tomato


1243
00:37:36,926 --> 00:37:37,866
soup with red pepper.


1244
00:37:38,636 --> 00:37:40,696
Again, it gets donated, and it


1245
00:37:40,696 --> 00:37:41,866
will be split up in all the


1246
00:37:41,866 --> 00:37:42,746
possible combinations.


1247
00:37:44,166 --> 00:37:45,376
Next day, at lunch, I order a


1248
00:37:45,376 --> 00:37:46,786
tomato soup with croutons.


1249
00:37:46,786 --> 00:37:48,456
It gets donated and split up.


1250
00:37:48,456 --> 00:37:50,876
I keep doing this throughout the


1251
00:37:50,876 --> 00:37:52,406
week, and, on Friday, at lunch,


1252
00:37:52,626 --> 00:37:53,476
Siri might try to find a


1253
00:37:53,476 --> 00:37:53,996
suggestion.


1254
00:37:55,076 --> 00:37:56,616
It might see that I often order


1255
00:37:56,616 --> 00:37:57,876
a single tomato soup.


1256
00:37:59,106 --> 00:38:04,476
But since it's lunchtime, it


1257
00:38:04,476 --> 00:38:06,556
also can see that, at lunchtime,


1258
00:38:06,556 --> 00:38:08,206
usually order a tomato soup with


1259
00:38:08,206 --> 00:38:08,666
croutons.


1260
00:38:09,726 --> 00:38:11,516
Since that is a more specific


1261
00:38:11,516 --> 00:38:12,856
shortcut, it will end up


1262
00:38:12,856 --> 00:38:14,746
preferring to suggest that.


1263
00:38:14,746 --> 00:38:16,236
So, I might get a suggestion to


1264
00:38:16,236 --> 00:38:17,686
order a tomato soup with


1265
00:38:17,686 --> 00:38:18,166
croutons.


1266
00:38:18,466 --> 00:38:21,516
Great. So, that's how


1267
00:38:21,516 --> 00:38:22,456
suggestions are made.


1268
00:38:23,296 --> 00:38:24,716
Let's now take a look at how to


1269
00:38:24,826 --> 00:38:27,716
make sure those suggestions are


1270
00:38:27,716 --> 00:38:29,266
good, and it all starts from


1271
00:38:29,266 --> 00:38:30,836
making good donations.


1272
00:38:31,546 --> 00:38:34,656
A good donation should be


1273
00:38:34,656 --> 00:38:36,096
something that is likely to be


1274
00:38:36,096 --> 00:38:36,606
repeated.


1275
00:38:37,576 --> 00:38:39,276
For user activity, there could


1276
00:38:39,276 --> 00:38:40,686
be some content they might look


1277
00:38:40,686 --> 00:38:41,186
at often.


1278
00:38:41,856 --> 00:38:43,156
Or, for an intent, there could


1279
00:38:43,206 --> 00:38:44,796
be an action the user would take


1280
00:38:44,796 --> 00:38:45,316
regularly.


1281
00:38:45,316 --> 00:38:48,936
You should make sure that the


1282
00:38:48,936 --> 00:38:50,436
payload of what you're donating


1283
00:38:50,636 --> 00:38:51,966
is consistent across all your


1284
00:38:51,966 --> 00:38:53,536
donations, since that is what


1285
00:38:53,536 --> 00:38:55,506
will be compared when looking


1286
00:38:56,246 --> 00:38:58,196
for patterns.


1287
00:38:58,196 --> 00:38:59,906
A good donation should also not


1288
00:38:59,906 --> 00:39:01,946
include a timestamp, since that


1289
00:39:01,946 --> 00:39:03,726
might not longer be relevant by


1290
00:39:03,726 --> 00:39:04,846
the time this donation would be


1291
00:39:04,846 --> 00:39:05,426
suggested.


1292
00:39:06,576 --> 00:39:08,976
For instance, a shortcut that


1293
00:39:08,976 --> 00:39:09,766
shows appointments for a


1294
00:39:09,766 --> 00:39:11,396
specific day is probably not


1295
00:39:11,396 --> 00:39:12,926
that useful, since, if you see


1296
00:39:12,926 --> 00:39:14,586
that the next day or later,


1297
00:39:14,586 --> 00:39:15,756
you're probably no longer


1298
00:39:15,756 --> 00:39:16,976
interested in the meetings of


1299
00:39:16,976 --> 00:39:18,026
that specific day.


1300
00:39:19,156 --> 00:39:20,716
A shortcut with a relative time,


1301
00:39:20,716 --> 00:39:22,626
however, is a lot more useful.


1302
00:39:23,236 --> 00:39:27,646
You should also make sure that


1303
00:39:27,646 --> 00:39:29,636
you donate exactly once for each


1304
00:39:29,636 --> 00:39:31,416
user action, even if that user


1305
00:39:31,416 --> 00:39:33,036
action involves multiple actions


1306
00:39:33,036 --> 00:39:34,606
inside your app.


1307
00:39:35,236 --> 00:39:37,116
Finally, selecting the correct


1308
00:39:37,116 --> 00:39:38,536
parameters of your intent is


1309
00:39:38,536 --> 00:39:39,216
also important.


1310
00:39:39,646 --> 00:39:40,616
So, let's take a look at two


1311
00:39:40,616 --> 00:39:42,376
possible types, starting with


1312
00:39:42,376 --> 00:39:42,836
enums.


1313
00:39:43,556 --> 00:39:46,026
You can define enums in your


1314
00:39:46,026 --> 00:39:47,696
intent definition file next to


1315
00:39:47,696 --> 00:39:49,566
your intents, and use it as the


1316
00:39:49,566 --> 00:39:53,106
types of your parameters.


1317
00:39:53,596 --> 00:39:55,486
We recommend that you use enums


1318
00:39:55,546 --> 00:39:56,596
whenever the values for a


1319
00:39:56,596 --> 00:39:57,666
parameter are bounded.


1320
00:39:58,296 --> 00:39:59,776
For instance, if you would add a


1321
00:39:59,776 --> 00:40:01,476
size parameter to a order soup


1322
00:40:01,476 --> 00:40:03,206
intent, it might make sense to


1323
00:40:03,206 --> 00:40:04,546
make that an enum, since the


1324
00:40:04,546 --> 00:40:06,036
possible sizes are probably just


1325
00:40:06,036 --> 00:40:07,986
small, medium, and large.


1326
00:40:09,916 --> 00:40:11,016
Using an enum will lead to


1327
00:40:11,016 --> 00:40:12,956
better suggestions and clearer


1328
00:40:12,956 --> 00:40:14,286
titles and subtitles for your


1329
00:40:14,286 --> 00:40:14,806
users.


1330
00:40:15,646 --> 00:40:17,176
To learn more about how enums


1331
00:40:17,176 --> 00:40:18,716
are used to generate titles and


1332
00:40:18,716 --> 00:40:20,296
subtitles, I recommend that you


1333
00:40:20,296 --> 00:40:21,706
watch the localization session.


1334
00:40:22,206 --> 00:40:25,076
Another type you can use is the


1335
00:40:25,076 --> 00:40:25,736
custom type.


1336
00:40:27,116 --> 00:40:28,556
Using a custom type will result


1337
00:40:28,556 --> 00:40:29,836
in an INObject and your


1338
00:40:29,836 --> 00:40:31,116
generated intent code.


1339
00:40:32,156 --> 00:40:33,426
An INObject combines an


1340
00:40:33,426 --> 00:40:35,206
identifier with a display


1341
00:40:35,206 --> 00:40:35,516
string.


1342
00:40:36,336 --> 00:40:38,566
The identifier can be used to


1343
00:40:38,566 --> 00:40:40,086
refer to an object internal to


1344
00:40:40,086 --> 00:40:42,066
your app, while the display


1345
00:40:42,066 --> 00:40:43,126
string contains the user


1346
00:40:43,126 --> 00:40:44,626
readable representation of that


1347
00:40:44,626 --> 00:40:45,066
object.


1348
00:40:45,946 --> 00:40:47,516
That way both your users and


1349
00:40:47,516 --> 00:40:49,306
your app always understands what


1350
00:40:49,496 --> 00:40:50,856
the value of this parameter is.


1351
00:40:52,196 --> 00:40:54,666
Finally, using an INObject also


1352
00:40:54,666 --> 00:40:56,096
prevents the possible dependency


1353
00:40:56,096 --> 00:40:56,966
between parameters.


1354
00:40:57,676 --> 00:40:59,866
Let me illustrate that.


1355
00:41:00,206 --> 00:41:02,606
There are two ways to represent


1356
00:41:02,606 --> 00:41:04,296
the combination of an identifier


1357
00:41:04,296 --> 00:41:06,306
with a display string.


1358
00:41:06,346 --> 00:41:07,966
You could add two parameters to


1359
00:41:07,966 --> 00:41:09,156
your intent, one for the


1360
00:41:09,156 --> 00:41:10,516
identifier, one for the display


1361
00:41:10,516 --> 00:41:12,726
string, or you could add a


1362
00:41:12,726 --> 00:41:15,686
single parameter using the


1363
00:41:15,906 --> 00:41:16,536
INObject.


1364
00:41:16,536 --> 00:41:17,586
With the first approach, you


1365
00:41:17,586 --> 00:41:18,366
have a dependency.


1366
00:41:18,366 --> 00:41:19,716
Since the display string depends


1367
00:41:20,196 --> 00:41:21,936
on the object as referenced by


1368
00:41:21,936 --> 00:41:24,456
the identifier, we discourage


1369
00:41:24,456 --> 00:41:25,696
having these dependencies as


1370
00:41:25,696 --> 00:41:27,246
they could cause issues when we


1371
00:41:27,246 --> 00:41:28,486
suggest this intent later.


1372
00:41:29,186 --> 00:41:34,106
A good shortcut should also have


1373
00:41:34,106 --> 00:41:35,676
an understandable title,


1374
00:41:35,926 --> 00:41:37,376
subtitle, and image.


1375
00:41:38,056 --> 00:41:39,116
It should represent what will


1376
00:41:39,116 --> 00:41:40,306
happen when the user taps the


1377
00:41:40,306 --> 00:41:42,236
shortcut, since it will be the


1378
00:41:42,236 --> 00:41:43,376
only thing the user will see


1379
00:41:43,616 --> 00:41:44,666
before interacting with it.


1380
00:41:44,916 --> 00:41:46,716
And, of course, you want to test


1381
00:41:46,716 --> 00:41:47,926
your shortcuts to make sure that


1382
00:41:47,926 --> 00:41:49,066
they look right and that they


1383
00:41:49,066 --> 00:41:50,266
behave as expected.


1384
00:41:51,056 --> 00:41:52,106
There are a couple of ways to do


1385
00:41:52,106 --> 00:41:52,316
that.


1386
00:41:52,426 --> 00:41:55,096
As I showed you earlier, we


1387
00:41:55,096 --> 00:41:56,396
added two new developer settings


1388
00:41:56,526 --> 00:41:57,716
that allow you to see your


1389
00:41:57,716 --> 00:41:59,406
recent donations on search and


1390
00:41:59,406 --> 00:42:00,746
on the lock screen, instead of


1391
00:42:00,746 --> 00:42:02,116
your regular Siri suggestions.


1392
00:42:03,306 --> 00:42:04,636
By enabling these, you can see


1393
00:42:04,636 --> 00:42:05,946
what your users will see when


1394
00:42:05,946 --> 00:42:06,796
those donations would be


1395
00:42:06,796 --> 00:42:08,536
suggested, and you can try


1396
00:42:08,536 --> 00:42:09,676
interacting with them to make


1397
00:42:09,676 --> 00:42:10,666
sure that they behave as


1398
00:42:10,666 --> 00:42:11,076
expected.


1399
00:42:11,076 --> 00:42:13,856
Another way to test your


1400
00:42:14,306 --> 00:42:15,846
shortcuts is by adding them to


1401
00:42:15,846 --> 00:42:16,316
Siri.


1402
00:42:17,116 --> 00:42:18,556
An easy way to test them then is


1403
00:42:18,596 --> 00:42:20,406
by editing the Xcode scheme to


1404
00:42:20,406 --> 00:42:21,726
automatically invoke Siri


1405
00:42:21,726 --> 00:42:23,356
without constantly having to say


1406
00:42:23,356 --> 00:42:23,796
the phrase.


1407
00:42:25,796 --> 00:42:27,626
In the scheme editor of an


1408
00:42:27,626 --> 00:42:28,976
intents extension there is the


1409
00:42:28,976 --> 00:42:30,676
Siri Intent Query field that you


1410
00:42:30,676 --> 00:42:31,956
can use to provide the utterance


1411
00:42:31,956 --> 00:42:32,856
to invoke Siri with.


1412
00:42:33,166 --> 00:42:36,416
And, finally, you can create a


1413
00:42:36,416 --> 00:42:38,206
custom shortcut in the Shortcuts


1414
00:42:38,206 --> 00:42:39,546
app that uses your shortcut.


1415
00:42:41,306 --> 00:42:42,736
This allows you to test the


1416
00:42:42,736 --> 00:42:44,116
behavior of your shortcut when


1417
00:42:44,116 --> 00:42:45,186
it's chained together with other


1418
00:42:45,186 --> 00:42:46,906
shortcuts or steps from the


1419
00:42:46,906 --> 00:42:48,306
Shortcuts app.


1420
00:42:49,296 --> 00:42:52,616
So, now that we've seen what a


1421
00:42:52,616 --> 00:42:54,796
good shortcut donation is and


1422
00:42:54,896 --> 00:42:56,636
how does donation get suggested


1423
00:42:57,356 --> 00:42:59,086
to your users, let's take a look


1424
00:42:59,086 --> 00:43:00,086
at a couple of privacy


1425
00:43:00,086 --> 00:43:01,776
considerations and how you can


1426
00:43:01,776 --> 00:43:03,236
make sure your user are never


1427
00:43:03,236 --> 00:43:04,816
upset by what is suggested to


1428
00:43:04,816 --> 00:43:04,966
them.


1429
00:43:08,046 --> 00:43:09,426
Your users expect that when they


1430
00:43:09,426 --> 00:43:10,626
delete something from within


1431
00:43:10,626 --> 00:43:12,046
your app that it's deleted for


1432
00:43:12,046 --> 00:43:12,286
good.


1433
00:43:12,946 --> 00:43:15,706
It's important to honor this so


1434
00:43:15,706 --> 00:43:17,066
you maintain your users' trust


1435
00:43:17,146 --> 00:43:18,626
and your so users aren't


1436
00:43:18,626 --> 00:43:20,176
presented with suggestions for


1437
00:43:20,176 --> 00:43:21,296
things that are not relevant to


1438
00:43:21,296 --> 00:43:21,946
them anymore.


1439
00:43:22,986 --> 00:43:25,076
So, if you donate shortcuts that


1440
00:43:25,076 --> 00:43:26,606
contain information that the


1441
00:43:26,606 --> 00:43:28,106
user can delete, you should make


1442
00:43:28,106 --> 00:43:29,596
sure to delete those donations


1443
00:43:29,716 --> 00:43:31,506
at the appropriate time.


1444
00:43:32,176 --> 00:43:33,246
Let's take a look at how to


1445
00:43:33,246 --> 00:43:35,226
delete donations, starting with


1446
00:43:35,226 --> 00:43:36,016
NSUserActivity.


1447
00:43:39,376 --> 00:43:41,506
There are two ways to delete a


1448
00:43:41,506 --> 00:43:42,696
donated user activity.


1449
00:43:43,766 --> 00:43:45,276
If you use Spotlight indexing


1450
00:43:45,396 --> 00:43:46,286
and you set the


1451
00:43:46,286 --> 00:43:48,206
relatedUniqueIdentifier, then


1452
00:43:48,206 --> 00:43:49,256
deleting the content from


1453
00:43:49,256 --> 00:43:50,616
Spotlight will automatically


1454
00:43:50,616 --> 00:43:51,786
delete the donated user


1455
00:43:51,786 --> 00:43:52,346
activity.


1456
00:43:53,966 --> 00:43:54,436
Just set the


1457
00:43:54,436 --> 00:43:56,056
relatedUniqueIdentifier on the


1458
00:43:56,056 --> 00:43:57,706
contentAttributeSet to the


1459
00:43:57,706 --> 00:43:59,056
identifier of the searchable


1460
00:43:59,056 --> 00:44:00,476
item that it matches with.


1461
00:44:01,316 --> 00:44:03,306
Then, when that searchable item


1462
00:44:03,366 --> 00:44:04,576
would be deleted, it would


1463
00:44:04,576 --> 00:44:05,976
automatically delete the user


1464
00:44:05,976 --> 00:44:06,516
activity.


1465
00:44:07,146 --> 00:44:10,746
If you don't use Spotlight


1466
00:44:10,746 --> 00:44:12,266
indexing, you can use the


1467
00:44:12,266 --> 00:44:13,926
persistent identifier property


1468
00:44:14,196 --> 00:44:15,366
on NSUserActivity.


1469
00:44:15,996 --> 00:44:17,746
This is a new property that you


1470
00:44:17,746 --> 00:44:19,276
can set so you can keep track of


1471
00:44:19,276 --> 00:44:21,446
your user activities and delete


1472
00:44:21,446 --> 00:44:23,506
them at the appropriate time.


1473
00:44:24,476 --> 00:44:27,406
To use it, just set the


1474
00:44:27,406 --> 00:44:28,886
persistentIdentifier property


1475
00:44:29,026 --> 00:44:30,646
before donating user activity.


1476
00:44:31,536 --> 00:44:32,536
Then, when you want to delete


1477
00:44:32,536 --> 00:44:33,526
it, you call


1478
00:44:33,526 --> 00:44:35,316
deleteSavedUserActivities with


1479
00:44:35,316 --> 00:44:36,766
the identifiers that you want to


1480
00:44:36,766 --> 00:44:37,056
delete.


1481
00:44:37,826 --> 00:44:39,166
You can also delete all your


1482
00:44:39,166 --> 00:44:40,306
donated user activities.


1483
00:44:41,386 --> 00:44:42,746
For instance, when your user


1484
00:44:42,746 --> 00:44:44,376
logs out, you can do that by


1485
00:44:44,376 --> 00:44:44,756
calling


1486
00:44:45,006 --> 00:44:46,916
deleteAllSavedUserActivities.


1487
00:44:48,576 --> 00:44:50,256
Intents have an existing API,


1488
00:44:50,256 --> 00:44:51,536
which is similar to this new


1489
00:44:51,536 --> 00:44:53,436
user activity API.


1490
00:44:54,336 --> 00:44:56,476
Since you donate intents through


1491
00:44:56,636 --> 00:44:58,166
INInteraction the leading and


1492
00:44:58,166 --> 00:44:59,656
donated intent also happens


1493
00:44:59,656 --> 00:45:00,586
through INInteraction.


1494
00:45:01,496 --> 00:45:03,816
An INInteraction has an


1495
00:45:03,856 --> 00:45:04,916
identifier and a group


1496
00:45:04,916 --> 00:45:06,386
identifier property that you can


1497
00:45:06,386 --> 00:45:08,086
set and then later use to delete


1498
00:45:08,086 --> 00:45:09,366
one or more donated


1499
00:45:09,366 --> 00:45:10,086
interactions.


1500
00:45:10,556 --> 00:45:13,986
Just set the identifier and or


1501
00:45:13,986 --> 00:45:15,806
group identifier before donating


1502
00:45:15,806 --> 00:45:16,546
the interaction.


1503
00:45:17,586 --> 00:45:18,676
Then, when you want to delete


1504
00:45:18,676 --> 00:45:20,616
it, you call delete with an


1505
00:45:20,616 --> 00:45:22,286
array of the identifiers that


1506
00:45:22,286 --> 00:45:22,866
you want to delete.


1507
00:45:23,706 --> 00:45:25,426
You can also delete all donated


1508
00:45:25,426 --> 00:45:27,076
intents with a shared group


1509
00:45:27,076 --> 00:45:28,836
identifier by calling delete


1510
00:45:29,066 --> 00:45:30,176
with the group identifier.


1511
00:45:30,266 --> 00:45:33,386
And, finally, just like


1512
00:45:33,386 --> 00:45:34,796
NSUserActivity, there is a way


1513
00:45:34,796 --> 00:45:36,146
to delete all your donated


1514
00:45:36,146 --> 00:45:38,746
intents by calling deleteAll on


1515
00:45:38,746 --> 00:45:39,426
INInteraction.


1516
00:45:40,796 --> 00:45:42,766
Please make sure to delete your


1517
00:45:42,766 --> 00:45:44,136
donations at the appropriate


1518
00:45:44,136 --> 00:45:44,456
time.


1519
00:45:45,046 --> 00:45:46,016
This will give your users the


1520
00:45:46,016 --> 00:45:47,736
best possible suggestions and


1521
00:45:47,736 --> 00:45:48,976
never make them wonder why


1522
00:45:48,976 --> 00:45:49,986
they're seeing suggestions for


1523
00:45:49,986 --> 00:45:51,196
things that are no longer


1524
00:45:51,196 --> 00:45:53,976
relevant to them.


1525
00:45:55,326 --> 00:45:56,206
So, now that we've looked at


1526
00:45:56,206 --> 00:45:57,386
different things to consider


1527
00:45:57,546 --> 00:45:59,836
when creating and donating


1528
00:45:59,836 --> 00:46:02,386
shortcuts, let's end by briefly


1529
00:46:02,386 --> 00:46:04,336
looking at what you can use to


1530
00:46:04,336 --> 00:46:06,206
create the best possible media


1531
00:46:06,206 --> 00:46:06,756
shortcuts.


1532
00:46:07,376 --> 00:46:10,486
We created a new intent that


1533
00:46:10,486 --> 00:46:11,936
works great with Shortcuts.


1534
00:46:12,426 --> 00:46:13,426
This intent is called


1535
00:46:13,506 --> 00:46:15,396
INPlayMediaIntent and allows you


1536
00:46:15,396 --> 00:46:17,326
to create and donate shortcuts


1537
00:46:17,646 --> 00:46:19,256
to play audio or video content.


1538
00:46:20,616 --> 00:46:23,056
When handling this intent in


1539
00:46:23,056 --> 00:46:24,406
your extension, you can choose


1540
00:46:24,406 --> 00:46:25,596
to have it handled by your app


1541
00:46:25,646 --> 00:46:26,346
in the background [inaudible].


1542
00:46:26,496 --> 00:46:28,896
This allows you to start audio


1543
00:46:28,896 --> 00:46:30,946
playback straight from your app.


1544
00:46:35,546 --> 00:46:36,646
Besides being suggested in


1545
00:46:36,646 --> 00:46:38,026
search and on the lock screen,


1546
00:46:38,686 --> 00:46:39,936
shortcuts with this intent will


1547
00:46:39,936 --> 00:46:41,186
also be suggested in the


1548
00:46:41,186 --> 00:46:42,736
playback controls on the lock


1549
00:46:42,736 --> 00:46:43,966
screen when the user connects


1550
00:46:43,966 --> 00:46:46,056
their headphones, making it even


1551
00:46:46,056 --> 00:46:47,126
easier for them to start


1552
00:46:47,126 --> 00:46:48,456
listening to your content.


1553
00:46:49,736 --> 00:46:52,556
And, finally, shortcuts with


1554
00:46:52,556 --> 00:46:54,226
this intent work great on the


1555
00:46:54,226 --> 00:46:54,746
HomePod.


1556
00:46:55,916 --> 00:46:58,236
Just add a play media shortcut


1557
00:46:58,356 --> 00:47:01,016
to Siri on your iPhone and


1558
00:47:01,016 --> 00:47:02,216
invoke it on your HomePod.


1559
00:47:02,216 --> 00:47:03,866
The audio will start playing


1560
00:47:04,056 --> 00:47:06,746
from your phone through HomePod.


1561
00:47:08,296 --> 00:47:11,636
We also created a new API that


1562
00:47:11,636 --> 00:47:14,366
allows you tell the system about


1563
00:47:14,366 --> 00:47:15,476
new content they might be


1564
00:47:15,476 --> 00:47:16,146
interested in.


1565
00:47:18,646 --> 00:47:20,086
This is great for periodical


1566
00:47:20,086 --> 00:47:21,216
content, where the content that


1567
00:47:21,216 --> 00:47:22,496
you would want to be suggested


1568
00:47:22,496 --> 00:47:23,876
to your users isn't something


1569
00:47:23,876 --> 00:47:24,676
they've listened to or watched


1570
00:47:24,676 --> 00:47:24,976
before.


1571
00:47:28,206 --> 00:47:29,966
So, those are a couple of things


1572
00:47:30,026 --> 00:47:31,576
that we have added to make great


1573
00:47:31,576 --> 00:47:32,526
media shortcuts.


1574
00:47:33,476 --> 00:47:34,886
Now, let's summarize what we


1575
00:47:34,886 --> 00:47:35,616
just talked about.


1576
00:47:39,086 --> 00:47:41,156
Shortcuts enable powerful, new


1577
00:47:41,156 --> 00:47:44,116
experiences with your apps.


1578
00:47:44,116 --> 00:47:46,546
It provides new ways to engage


1579
00:47:46,546 --> 00:47:48,316
your users by exposing your app


1580
00:47:48,446 --> 00:47:49,846
throughout the system in a


1581
00:47:49,846 --> 00:47:50,896
variety of places.


1582
00:47:51,226 --> 00:47:53,126
So, just search the lock screen,


1583
00:47:53,746 --> 00:47:55,046
the Siri Watch Face on your


1584
00:47:55,046 --> 00:47:57,106
Apple Watch, and in Siri itself.


1585
00:47:57,616 --> 00:47:58,836
You can also use it in the new


1586
00:47:58,836 --> 00:48:00,616
shortcuts app.


1587
00:48:01,486 --> 00:48:03,316
You can adopt shortcuts by using


1588
00:48:03,316 --> 00:48:04,766
NSUserActivity, which is a


1589
00:48:04,766 --> 00:48:06,326
really easy way to expose the


1590
00:48:06,326 --> 00:48:07,346
content of your app.


1591
00:48:08,246 --> 00:48:11,526
Or you can use intents which


1592
00:48:11,526 --> 00:48:12,556
provides you with a deeper


1593
00:48:12,556 --> 00:48:14,296
integration in the system and


1594
00:48:14,296 --> 00:48:15,416
can unlock entirely new


1595
00:48:15,416 --> 00:48:16,976
experiences for your users.


1596
00:48:17,516 --> 00:48:22,546
[ Applause ]


1597
00:48:23,046 --> 00:48:24,706
For more information, our


1598
00:48:24,706 --> 00:48:26,386
session is 211, and you can find


1599
00:48:26,386 --> 00:48:28,176
our page on developer.apple.com.


1600
00:48:28,686 --> 00:48:29,986
You can also find us in the labs


1601
00:48:29,986 --> 00:48:30,526
throughout the week.


1602
00:48:31,116 --> 00:48:32,776
Thank you so much for coming.


1603
00:48:32,846 --> 00:48:34,276
And we can't wait to see what


1604
00:48:34,276 --> 00:48:35,266
shortcuts you'll create.


1605
00:48:35,806 --> 00:48:36,606
Enjoy the rest of your


1606
00:48:36,606 --> 00:48:36,976
conference.


1607
00:48:37,516 --> 00:48:40,500
[ Applause ]

