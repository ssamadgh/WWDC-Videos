1
00:00:00,506 --> 00:00:10,686
[ Silence ]


2
00:00:11,186 --> 00:00:12,266
>> Well, hello again.


3
00:00:12,466 --> 00:00:14,906
For those who have been here
in the previous session,


4
00:00:15,326 --> 00:00:16,856
this is the second session


5
00:00:16,856 --> 00:00:20,016
of our two-part Web
Inspectors extravaganza today.


6
00:00:20,736 --> 00:00:23,656
My name is Antoine, I'm
an engineer on the Safari


7
00:00:23,656 --> 00:00:27,286
and WebKit teams and I work
specifically on Web Inspector.


8
00:00:28,226 --> 00:00:31,146
And so, for those who have been
here in the previous session,


9
00:00:31,546 --> 00:00:35,736
this is a more advanced session
but we will cover some ground


10
00:00:35,736 --> 00:00:37,286
that you may have seen
from the previous session.


11
00:00:37,286 --> 00:00:40,056
We'll try to reduce to overlap
so don't worry, but make sure


12
00:00:40,056 --> 00:00:42,896
that even if some of the content
seems familiar, we always going


13
00:00:42,896 --> 00:00:44,946
to go in much greater
detail than what we've seen


14
00:00:44,946 --> 00:00:45,776
on the previous session.


15
00:00:47,416 --> 00:00:50,536
So Web Inspector is the
Safari developer tool.


16
00:00:51,676 --> 00:00:56,106
It's the one stop shop for you
to inspect, tweak, analyze,


17
00:00:56,156 --> 00:00:58,816
and debug any problem you
may have with your web page.


18
00:01:00,156 --> 00:01:04,385
And it's a tool that runs
on the Mac as part of Safari


19
00:01:05,016 --> 00:01:07,346
and surely enough, you can
use it to inspect pages


20
00:01:07,346 --> 00:01:08,466
and Safari on your Mac.


21
00:01:09,166 --> 00:01:11,926
But we've set it up so that
with remote web inspection,


22
00:01:12,166 --> 00:01:15,516
you can always inspect content
running on your iOS device


23
00:01:15,516 --> 00:01:20,086
and iOS Safari, or even
your own app that you wrote


24
00:01:20,086 --> 00:01:22,366
for iOS that uses UIWebView.


25
00:01:22,926 --> 00:01:28,136
And the first thing I'd like
to do is to go through some


26
00:01:28,136 --> 00:01:29,466
of the changes we've made


27
00:01:29,466 --> 00:01:31,536
into the user interface
across last year.


28
00:01:32,796 --> 00:01:35,376
And to get a sense of our
progress, let's turn back


29
00:01:35,376 --> 00:01:38,166
to a year ago when on this
stage my colleague team Hatcher


30
00:01:38,166 --> 00:01:40,846
introduced Web Inspector
for Safari 6.


31
00:01:41,896 --> 00:01:44,276
And remember that at the time,


32
00:01:44,586 --> 00:01:47,626
the banner feature Web Inspector
was that for the first time,


33
00:01:47,656 --> 00:01:49,596
we added support for
remote web inspection.


34
00:01:50,076 --> 00:01:54,516
And what that meant is that
you could finally inspect your


35
00:01:54,516 --> 00:01:58,446
content loading-- loaded,
sorry, on iOS devices.


36
00:01:58,766 --> 00:02:00,386
That was really a
massive breakthrough.


37
00:02:00,776 --> 00:02:04,616
And we thought that while doing
this would probably gather a


38
00:02:04,616 --> 00:02:09,045
whole set of new users that will
be a lot more used to Xcode,


39
00:02:09,416 --> 00:02:12,736
you know, people that develop
app on iOS are using Xcode.


40
00:02:12,876 --> 00:02:16,686
So we took the cue of the
design lead of Xcode 4


41
00:02:16,986 --> 00:02:18,786
to change the complete
appearance


42
00:02:18,786 --> 00:02:20,656
of web inspector in Safari 6.


43
00:02:21,466 --> 00:02:27,416
So, that is Web Inspector looked
up until Safari 7 is coming out,


44
00:02:28,096 --> 00:02:31,266
and we heard a lot of feedback
about this user interface.


45
00:02:31,566 --> 00:02:35,686
More specifically, we heard that
the organization of icons to--


46
00:02:35,686 --> 00:02:39,216
on the left sidebars and on the
right sidebars was a little bit


47
00:02:39,216 --> 00:02:42,226
confusing and that they
were also a little bit small


48
00:02:42,226 --> 00:02:43,756
and lacked a little
bit of color.


49
00:02:44,016 --> 00:02:49,516
It wasn't just super easy
to learn about the interface


50
00:02:49,516 --> 00:02:52,216
if you weren't already familiar
with Xcode or Web Inspector.


51
00:02:52,646 --> 00:02:54,836
So we took that comments--
those comments to heart


52
00:02:54,836 --> 00:02:57,746
and we worked hard to
improve the user interface


53
00:02:57,746 --> 00:02:59,216
of Web Inspector in Safari 7.


54
00:02:59,996 --> 00:03:02,816
And so, I'd like to walk
you through one major change


55
00:03:02,816 --> 00:03:05,476
that we've made and
those changes were made


56
00:03:05,476 --> 00:03:06,086
to the tool bar.


57
00:03:06,146 --> 00:03:08,976
And the tool bar is
completely new in Safari 7.


58
00:03:09,106 --> 00:03:10,936
And the first thing
you'll notice is


59
00:03:10,936 --> 00:03:13,966
that to control the display
of your navigation sidebars


60
00:03:13,966 --> 00:03:16,906
to the left with those
three icons, resources,


61
00:03:16,906 --> 00:03:17,846
timelines, and debugger.


62
00:03:18,096 --> 00:03:20,776
Console is a different panel
that we'll go back to later.


63
00:03:21,476 --> 00:03:24,766
And these are icons
that you can control,


64
00:03:24,766 --> 00:03:28,036
you can fully customize
them, they're nice and big


65
00:03:28,036 --> 00:03:29,286
and have a label by default.


66
00:03:29,706 --> 00:03:32,546
We can turn the labels
up, put them to the side,


67
00:03:32,796 --> 00:03:35,556
make the icon smaller, and you
can fully customize the tool bar


68
00:03:35,666 --> 00:03:36,636
to your hearts content.


69
00:03:36,846 --> 00:03:39,756
And you can just do that like
you would in any other Mac app


70
00:03:40,206 --> 00:03:43,326
by just come and click on the
tool bar and customize it.


71
00:03:43,516 --> 00:03:44,216
It's really simple.


72
00:03:44,596 --> 00:03:46,376
OK. Let's move on
to the activity


73
00:03:46,376 --> 00:03:48,836
to your another brand new
thing as part of the tool bar.


74
00:03:49,196 --> 00:03:51,446
I've already talked about
this in the previous session


75
00:03:51,446 --> 00:03:54,156
but let me refresh you memory
or introduce it to people


76
00:03:54,156 --> 00:03:55,236
who may not have been here.


77
00:03:56,016 --> 00:03:58,216
To the left, you have
the first two items,


78
00:03:58,336 --> 00:04:00,976
we'll give you information about
your resources on your page,


79
00:04:01,186 --> 00:04:04,446
the number of resources
and the aggregate size


80
00:04:04,446 --> 00:04:05,926
for all those resources
put together.


81
00:04:05,926 --> 00:04:08,026
And these are not
just informational.


82
00:04:08,056 --> 00:04:10,206
You can just click on
those and jump straight


83
00:04:10,206 --> 00:04:12,846
to the resources sidebar
and start digging into them


84
00:04:12,846 --> 00:04:13,876
to find out more details.


85
00:04:15,406 --> 00:04:18,416
Likewise, you can track
the low time of your page,


86
00:04:18,505 --> 00:04:21,315
the time up to the load
events in a rolling counter


87
00:04:21,315 --> 00:04:24,136
from the page below to the time
the load even fired and click


88
00:04:24,136 --> 00:04:26,556
on that to jump to the
timeline and find out more


89
00:04:26,556 --> 00:04:29,256
about your network load time.


90
00:04:30,206 --> 00:04:31,286
And finally, to the right,


91
00:04:31,286 --> 00:04:33,526
we have three icons
devoted to the console.


92
00:04:33,626 --> 00:04:36,926
You can try plugs,
errors, and warnings,


93
00:04:37,486 --> 00:04:39,996
and this obviously would take
you to the console by clicking


94
00:04:39,996 --> 00:04:42,146
on them, and what's
even cooler is


95
00:04:42,146 --> 00:04:45,136
that since we added filtering
support to the console


96
00:04:45,136 --> 00:04:48,246
in Safari 7 and Web
Inspector, clicking on either


97
00:04:48,246 --> 00:04:51,136
of those items will
take you to the console


98
00:04:51,136 --> 00:04:54,536
and filter the content to match
where you just clicked on.


99
00:04:54,536 --> 00:04:56,196
So for example if you
click on a warning,


100
00:04:56,416 --> 00:04:58,006
you'll see only warnings
in the console.


101
00:04:58,006 --> 00:04:59,806
If you click an error,
you'll see only errors.


102
00:05:00,006 --> 00:05:02,046
And of course you can
filter back to all messages


103
00:05:02,046 --> 00:05:03,456
from the console very easily.


104
00:05:03,756 --> 00:05:06,416
And the last item to
the right is something


105
00:05:06,416 --> 00:05:10,466
that is actually specific to
when you're inspecting Safari


106
00:05:10,466 --> 00:05:14,286
on the Mac because it's
controlling the docking mode


107
00:05:14,286 --> 00:05:15,216
of Web Inspector.


108
00:05:15,426 --> 00:05:18,286
Web Inspector can run in a
stand-alone window like this


109
00:05:18,586 --> 00:05:20,796
or it can be docked to
the bottom of your page.


110
00:05:20,796 --> 00:05:22,166
We've always supported this.


111
00:05:22,966 --> 00:05:25,726
But something we heard
a lot of feature request


112
00:05:25,726 --> 00:05:29,896
for is the addition of a mode
where the inspector is docked


113
00:05:30,016 --> 00:05:31,166
to the side of the page.


114
00:05:31,196 --> 00:05:33,096
So this is something
new in Safari 7.


115
00:05:33,396 --> 00:05:36,586
You ask for it and
you've got it.


116
00:05:36,856 --> 00:05:41,676
So, now let's move on to or the
real meat of our presentation.


117
00:05:42,236 --> 00:05:44,916
And I wanted to show you
a lot of new features.


118
00:05:45,106 --> 00:05:47,916
And to do that, I'll ask two
colleagues of mine to come up--


119
00:05:48,136 --> 00:05:50,356
come up on stage and show
you some great demos,


120
00:05:50,356 --> 00:05:51,266
really compelling.


121
00:05:51,586 --> 00:05:55,116
They will put a lot of our new
features at work in three tasks.


122
00:05:55,286 --> 00:05:56,456
And if you've been here before,


123
00:05:56,646 --> 00:05:58,236
you'll be familiar
with those tasks.


124
00:05:58,516 --> 00:06:01,176
The first one would be
inspection tweaking then we'll


125
00:06:01,176 --> 00:06:03,886
go and take a look
at the performance


126
00:06:03,886 --> 00:06:05,076
of our page and analyze it.


127
00:06:05,126 --> 00:06:07,526
In this case, it will be
layout and rendering specific


128
00:06:07,926 --> 00:06:09,716
and we'll finish with
some JavaScript debugging.


129
00:06:09,986 --> 00:06:12,846
And again, this sounds like the
outline of the previous session


130
00:06:13,226 --> 00:06:16,066
because we think these are core
tasks for you as developers


131
00:06:16,066 --> 00:06:18,816
but the content in this
session is completely different


132
00:06:18,936 --> 00:06:20,476
and we'll be looking
at different features.


133
00:06:21,696 --> 00:06:24,956
So let's start by taking a
look at inspection tweaking.


134
00:06:25,666 --> 00:06:28,636
And to me, inspection
tweaking is about experimenting


135
00:06:28,636 --> 00:06:29,676
with the content of my page.


136
00:06:29,676 --> 00:06:32,286
It's about experimenting with
the DOM structure, the HTML,


137
00:06:32,286 --> 00:06:33,766
but I think most importantly,


138
00:06:34,056 --> 00:06:36,796
it's about interacting
with the styles.


139
00:06:37,386 --> 00:06:41,666
And the style is
really, to me, the bread


140
00:06:41,666 --> 00:06:42,676
and butter of Web Inspector.


141
00:06:42,676 --> 00:06:44,066
It's usually the first
thing I want to do


142
00:06:44,066 --> 00:06:46,806
with Web Inspector is tweak
the appearance of my page


143
00:06:46,806 --> 00:06:48,536
and make sure it's
pixel perfect,


144
00:06:48,536 --> 00:06:52,256
matches the design I want to
achieve, and it's really kind


145
00:06:52,256 --> 00:06:53,896
of the stable feature
of Web Inspector.


146
00:06:55,296 --> 00:06:58,646
But that didn't let us rest
on our laurels and we want


147
00:06:58,646 --> 00:07:01,376
to make sure that we had
the best experience possible


148
00:07:01,376 --> 00:07:04,146
for styles editing and we have
a completely refreshed styles


149
00:07:04,146 --> 00:07:06,436
sidebar in Web Inspector
in Safari 7.


150
00:07:07,396 --> 00:07:09,746
So, we still support things
that we've always supporting.


151
00:07:10,136 --> 00:07:11,506
We still has syntax
highlighting,


152
00:07:11,756 --> 00:07:13,626
we still have great
auto completion


153
00:07:13,836 --> 00:07:16,026
where we know exactly what
counts the CSS properties


154
00:07:16,026 --> 00:07:19,086
supported by WebKit since
Web Inspector talks directly


155
00:07:19,086 --> 00:07:19,616
to WebKit.


156
00:07:20,446 --> 00:07:23,076
We got some awesome
great new features.


157
00:07:23,796 --> 00:07:26,936
The first thing, and you'll
see that in great details


158
00:07:26,936 --> 00:07:29,656
in the demos, is that you can
just start clicking anywhere


159
00:07:29,726 --> 00:07:32,296
where you see CSS code
and just start typing.


160
00:07:32,616 --> 00:07:35,316
And as you type, you have auto
completion, syntax highlighting,


161
00:07:35,566 --> 00:07:36,946
and it just behaves just


162
00:07:36,946 --> 00:07:38,616
like you would expect
a great text editor


163
00:07:38,616 --> 00:07:41,176
to behave except now
you're in Web Inspector.


164
00:07:41,416 --> 00:07:44,726
It's just a series of many
text editors one for each rule.


165
00:07:44,726 --> 00:07:45,806
It's just so awesome.


166
00:07:46,886 --> 00:07:49,926
And another thing that we
found was commonly used but not


167
00:07:49,926 --> 00:07:52,626
as accessible as it should
be from the user interface


168
00:07:52,626 --> 00:07:55,696
of our previous version is
the ability to add a new rule.


169
00:07:55,976 --> 00:07:57,386
So we've made that a lot easier.


170
00:07:57,386 --> 00:07:59,136
There's a big button
in the style sidebar,


171
00:07:59,136 --> 00:08:02,406
you can't miss it, and what it--
and we've also made it better


172
00:08:02,406 --> 00:08:05,436
such that when you press
that button, it will look


173
00:08:05,436 --> 00:08:07,286
at the currently selected
element and it will try


174
00:08:07,286 --> 00:08:10,826
to generate a CSS selector
for the new rule that is


175
00:08:10,826 --> 00:08:12,476
as specific as it can.


176
00:08:12,546 --> 00:08:14,566
So for example, if your
element as an idea on it,


177
00:08:14,806 --> 00:08:16,986
we'll generate a rule
for that specific idea.


178
00:08:17,046 --> 00:08:18,266
It's really, really useful.


179
00:08:19,146 --> 00:08:22,476
And finally, at the top of the
styles sidebar, we added a way


180
00:08:22,476 --> 00:08:24,856
for you to force
some pseudo-classes


181
00:08:25,126 --> 00:08:26,526
to be applied to our element.


182
00:08:26,846 --> 00:08:29,146
And one that I think is
tremendously useful is being


183
00:08:29,146 --> 00:08:32,916
able to turn on the hover
pseudo-class which is something


184
00:08:33,106 --> 00:08:35,546
that if you wanted to tweak the
hover style of your element,


185
00:08:35,546 --> 00:08:38,476
you'd probably have to
go back through the page,


186
00:08:38,756 --> 00:08:40,706
roll over the element
in question,


187
00:08:41,096 --> 00:08:43,416
and then see what it
does and then go back


188
00:08:43,416 --> 00:08:46,636
into the inspector changes,
roll over back and so forth.


189
00:08:46,636 --> 00:08:47,756
It's just not very convenient.


190
00:08:47,966 --> 00:08:48,916
We've made that a lot better.


191
00:08:48,916 --> 00:08:51,156
And again, we'll see
that in demo right away.


192
00:08:51,866 --> 00:08:56,356
Another thing that I think is
really cool about styles in CSS


193
00:08:56,356 --> 00:08:59,786
and Web Inspector is that
we've made it so that style


194
00:08:59,786 --> 00:09:03,986
that may look great in Web
Inspector was actually something


195
00:09:03,986 --> 00:09:06,206
that came through
looking horrible before.


196
00:09:06,206 --> 00:09:07,856
And the way we make
it look good is


197
00:09:07,856 --> 00:09:10,326
that we support pretty
printing and this littler button


198
00:09:10,326 --> 00:09:13,416
at the right and it's a button
you may not even have to use


199
00:09:13,416 --> 00:09:15,936
in practice because we
automatically identify


200
00:09:15,936 --> 00:09:18,756
when we download minified
CSS content like this


201
00:09:19,206 --> 00:09:24,306
so that we can display it in
a much nicer way like that.


202
00:09:24,516 --> 00:09:27,266
And so, to walk you through some
of those great new features,


203
00:09:27,266 --> 00:09:29,116
I'd like to invite on
stage my colleague Brian


204
00:09:29,116 --> 00:09:32,326
who will give you a great
demo of advanced styling


205
00:09:32,326 --> 00:09:35,086
and experimentation
in a web page.


206
00:09:35,586 --> 00:09:39,416
[ Applause ]


207
00:09:39,916 --> 00:09:40,856
>> Thank you Antoine.


208
00:09:41,936 --> 00:09:42,456
Check, check.


209
00:09:43,946 --> 00:09:46,156
Good. So I'm actually
really excited


210
00:09:46,156 --> 00:09:47,056
to show you these demos today


211
00:09:47,056 --> 00:09:49,556
because Antoine spends
the entire day working


212
00:09:49,556 --> 00:09:51,536
at web content, allow
these features go along


213
00:09:51,536 --> 00:09:53,266
with my job a lot easier.


214
00:09:54,366 --> 00:09:56,386
So to show you, let's
pop up in demos


215
00:09:56,386 --> 00:09:57,296
that we've been working on.


216
00:09:57,756 --> 00:10:00,286
As you can see, it's a
very simple photo gallery.


217
00:10:01,056 --> 00:10:03,086
I have pictures of
me and my very close,


218
00:10:03,086 --> 00:10:04,186
very great looking friends.


219
00:10:05,226 --> 00:10:08,096
And as I look at this
side, there's a few things


220
00:10:08,096 --> 00:10:09,796
that I think I can improve
on that I didn't think


221
00:10:09,796 --> 00:10:10,846
about when I was
actually building


222
00:10:10,846 --> 00:10:11,746
and it in my text editor.


223
00:10:11,986 --> 00:10:13,436
Friends and I think of that.


224
00:10:13,816 --> 00:10:16,096
This header sits up to top
as I scroll through the page.


225
00:10:16,746 --> 00:10:18,036
And also this feels very static.


226
00:10:18,036 --> 00:10:20,076
I mean that there is a
cool little hover effect


227
00:10:20,076 --> 00:10:21,506
as I now search of
these thumbnails.


228
00:10:22,476 --> 00:10:24,206
So, let's focus first
on the header.


229
00:10:24,716 --> 00:10:27,016
So to get started let's
open up the Web Inspector


230
00:10:27,076 --> 00:10:28,456
and it causes the event session.


231
00:10:28,456 --> 00:10:31,026
We're going to use the keyboard
command, Command-Option-I.


232
00:10:31,886 --> 00:10:33,556
So this should look
familiar to you.


233
00:10:34,346 --> 00:10:35,306
Now the first thing
I'm going to do


234
00:10:35,306 --> 00:10:37,636
as I reminded you was I
want to fix the header.


235
00:10:38,006 --> 00:10:39,746
So let's zoom in here
into the DOM sheet mode


236
00:10:39,816 --> 00:10:42,266
and let's use the
arrow keys to drill


237
00:10:42,266 --> 00:10:44,946
down into the document
and get our header.


238
00:10:45,866 --> 00:10:47,006
But go over to the
right, you'll notice


239
00:10:47,006 --> 00:10:49,026
that we have some
preexisting styles associated


240
00:10:49,026 --> 00:10:49,466
with the header.


241
00:10:49,986 --> 00:10:51,026
But I want to add a new one.


242
00:10:52,136 --> 00:10:54,826
So let's zoom in closer and
see how we can use the styles


243
00:10:54,826 --> 00:10:55,376
detail bar.


244
00:10:56,256 --> 00:10:58,706
Now because it says a
free-form CSS editor,


245
00:10:58,956 --> 00:11:02,676
I can click anywhere, press
Enter and start typing.


246
00:11:03,486 --> 00:11:05,026
So because you want to
just stick to the top,


247
00:11:05,026 --> 00:11:06,846
we're going to adjust
the position property.


248
00:11:07,306 --> 00:11:07,846
So let's start.


249
00:11:08,706 --> 00:11:09,926
You'll notice the
autocomplete format.


250
00:11:11,056 --> 00:11:13,316
Now, instead of guessing
what the value is


251
00:11:14,076 --> 00:11:16,896
because this has WebKit under
a hood, I can press Escape


252
00:11:17,076 --> 00:11:18,896
and so bring up all the
options available to me.


253
00:11:19,466 --> 00:11:20,606
So, I can go through
it when I want.


254
00:11:20,606 --> 00:11:22,846
And in this case, you
want to use WebKit sticky.


255
00:11:23,936 --> 00:11:25,486
But there's something
you might have missed.


256
00:11:25,616 --> 00:11:27,376
So I'm going to press
command Z to undo this


257
00:11:27,646 --> 00:11:28,676
and I'm going to zoom out.


258
00:11:29,536 --> 00:11:31,466
I want to scroll down to
the middle of the page


259
00:11:32,216 --> 00:11:33,986
so that the header is invisible.


260
00:11:34,746 --> 00:11:36,976
And now, watch what happens
when I click Escape again.


261
00:11:37,516 --> 00:11:48,296
[ Pause ]


262
00:11:48,796 --> 00:11:49,476
There you go.


263
00:11:50,036 --> 00:11:52,886
So as soon I press Escape, it's
going to immediately apply the--


264
00:11:52,886 --> 00:11:55,356
immediately apply the
change of value to the DOM.


265
00:11:55,696 --> 00:11:58,866
So I can move through all these
options and quickly see how each


266
00:11:58,866 --> 00:12:00,236
of this property is
going to fit the layout.


267
00:12:00,726 --> 00:12:02,196
So this is the a lot
better than going back


268
00:12:02,196 --> 00:12:03,076
and forth reaching your editor.


269
00:12:03,376 --> 00:12:05,376
So I can nearly get in-- I
can get immediate feedback


270
00:12:05,376 --> 00:12:06,576
on what the changes
going to look like.


271
00:12:07,046 --> 00:12:09,686
So in this case, I want
to use WebKit sticky,


272
00:12:10,206 --> 00:12:12,486
press Enter to create the
change and we're done.


273
00:12:13,336 --> 00:12:16,016
Something else, I want to
fix is I also have a footer


274
00:12:16,016 --> 00:12:17,556
at the bottom of the page.


275
00:12:17,776 --> 00:12:20,066
Now, I want the footer to have
the same style as the header,


276
00:12:20,306 --> 00:12:22,106
so let's go back into
our style detail bar.


277
00:12:23,336 --> 00:12:24,906
And you notice that I
have shared style which is


278
00:12:24,906 --> 00:12:25,926
in my header and footer below.


279
00:12:25,926 --> 00:12:29,766
So I'm going to go ahead and
cut this because I can do this


280
00:12:30,036 --> 00:12:33,816
since it's free-form, click
anywhere, paste it in,


281
00:12:33,816 --> 00:12:35,526
and let's zoom out
and take a look.


282
00:12:36,626 --> 00:12:38,526
So now we had the footer stick
into the bottom of the page


283
00:12:38,526 --> 00:12:39,636
and the headers stick
on to the top.


284
00:12:40,976 --> 00:12:42,246
So it's looking much
better already.


285
00:12:43,896 --> 00:12:45,306
The second thing I
want to do is I want


286
00:12:45,306 --> 00:12:47,676
to have a nice hover effect when
I roll over one of the images.


287
00:12:47,866 --> 00:12:50,546
So to do that, let's
flat one of the images.


288
00:12:51,076 --> 00:12:53,366
And I want to inspect the image
element that's on the page.


289
00:12:53,366 --> 00:12:55,696
So to do that, I can right
click on the image element


290
00:12:56,396 --> 00:12:58,126
and choose the inspect
element option.


291
00:12:58,646 --> 00:13:00,896
You'll see this fit in directly


292
00:13:00,986 --> 00:13:03,656
into that note in
the content view.


293
00:13:04,866 --> 00:13:05,806
Now, if we go over to the right,


294
00:13:05,806 --> 00:13:09,456
we'll see we have some
associate styles to this image.


295
00:13:09,796 --> 00:13:13,236
Now, when tweaking styles,
I like using detail bar.


296
00:13:13,686 --> 00:13:16,326
But I like writing new styles
directly in the CSS file.


297
00:13:16,766 --> 00:13:18,936
And I can get that easily
in Web Inspector by clicking


298
00:13:18,936 --> 00:13:19,756
on this link to the right.


299
00:13:20,256 --> 00:13:25,756
And this is going to be directly
to the area in the style sheet


300
00:13:25,756 --> 00:13:26,836
that I actually find that style.


301
00:13:27,406 --> 00:13:29,226
So now I can go ahead and then
I can start adding to this.


302
00:13:29,696 --> 00:13:32,226
So just like one of text
editor, I can start typing,


303
00:13:32,756 --> 00:13:36,916
just add a hover
effect for the image,


304
00:13:37,406 --> 00:13:40,886
and notice as I type is
going to autocomplete


305
00:13:40,886 --> 00:13:42,256
and also syntax highlight
for me.


306
00:13:42,866 --> 00:13:44,816
So for this, let's add
a little zoom animation.


307
00:13:46,286 --> 00:13:49,346
So, I added WebKit transform,
we're going to do scale,


308
00:13:49,676 --> 00:13:52,446
and let's make it
three for 300 percent.


309
00:13:52,496 --> 00:13:55,426
So as you roll over the images
to the left we can see that.


310
00:13:56,186 --> 00:13:57,306
Let's go over there.


311
00:13:57,966 --> 00:13:59,126
We can see that it's
starting to work.


312
00:13:59,126 --> 00:14:00,806
But this is a little,
a little jumpy.


313
00:14:01,076 --> 00:14:03,216
So let's go back to our style
sheet and add a transition.


314
00:14:03,756 --> 00:14:06,726
And notice the autocomplete
as well


315
00:14:06,726 --> 00:14:08,496
and let's do it for
WebKit transform.


316
00:14:09,396 --> 00:14:12,616
Let's take it 1.5 seconds
and let's make it nice


317
00:14:12,616 --> 00:14:16,526
and smooth ease in our curve.


318
00:14:17,246 --> 00:14:18,886
So you notice that
as I roll over this,


319
00:14:18,976 --> 00:14:21,376
I get immediate feedback on the
changes that I made directly


320
00:14:21,466 --> 00:14:22,966
in the style sheet resources.


321
00:14:24,056 --> 00:14:26,476
But I think this could
be tweaked a little more


322
00:14:26,476 --> 00:14:28,316
and it's really hard for
me to go back and forth


323
00:14:28,346 --> 00:14:30,786
between the style sheet
and then rolling over.


324
00:14:31,176 --> 00:14:33,146
I want a better way
to build with a subtly


325
00:14:33,146 --> 00:14:34,936
and finest this animation.


326
00:14:35,206 --> 00:14:38,896
So, let's go back to the
viewer where before we're able


327
00:14:38,896 --> 00:14:40,206
to see the style details.


328
00:14:40,326 --> 00:14:41,656
To do that, I'm going to
use the navigation bar


329
00:14:41,656 --> 00:14:43,476
on the top here to go back.


330
00:14:44,496 --> 00:14:47,296
And as you can see it brought us
to area where I work previously.


331
00:14:48,646 --> 00:14:52,056
So now what I can do is I could
use a new hover pseudo-class


332
00:14:52,056 --> 00:14:52,626
on the top.


333
00:14:53,326 --> 00:14:55,936
And you notice that when I click
on this, the animation is going


334
00:14:55,936 --> 00:14:57,136
to be applied to the
image that I select.


335
00:14:57,726 --> 00:14:59,516
So I can click on and
off to see the effect


336
00:15:00,066 --> 00:15:02,986
but even better I can now see
the hover styles that I added


337
00:15:02,986 --> 00:15:05,806
in my resource directly
in the detail sidebar.


338
00:15:07,176 --> 00:15:09,946
So now I can go ahead and tweak
this through where I want it.


339
00:15:10,956 --> 00:15:13,076
So let's make it a little
faster, maybe a quarter


340
00:15:13,076 --> 00:15:15,576
of a second, and
also, just the scale.


341
00:15:15,676 --> 00:15:18,456
So let's go back,
that's a little too big,


342
00:15:18,456 --> 00:15:24,326
a little too small to, more
point to, that looks just right.


343
00:15:24,836 --> 00:15:28,036
Let's click off and take a look.


344
00:15:28,666 --> 00:15:32,216
So it's looking a
lot better already.


345
00:15:33,366 --> 00:15:35,326
Now, one thing I want to point
out to you is that the changes


346
00:15:35,326 --> 00:15:39,006
that I made to the CSS
in the sidebar are going


347
00:15:39,346 --> 00:15:40,696
to be reflected in
the source code.


348
00:15:40,696 --> 00:15:43,736
So let's click through back
to our CSS file and notice


349
00:15:43,736 --> 00:15:46,046
that these new properties,
the quarter of a second


350
00:15:46,046 --> 00:15:49,236
and the scale, all
reflected in the CSS file.


351
00:15:50,116 --> 00:15:53,296
So, this is looking pretty
good, but what do we do now?


352
00:15:54,196 --> 00:15:55,096
How do we save this?


353
00:15:55,276 --> 00:15:57,346
Typically, we have to go back
to our editor, copy the changes


354
00:15:57,346 --> 00:15:59,056
that we made, and
then start over.


355
00:15:59,846 --> 00:16:02,896
But now in Safari 7, I can
simply press Command S,


356
00:16:04,366 --> 00:16:05,776
save the file up to my disk.


357
00:16:06,256 --> 00:16:10,766
And to show you that it works,
I'm going to refresh the page.


358
00:16:10,946 --> 00:16:14,996
You can see that all things
I made have now been saved


359
00:16:15,136 --> 00:16:16,166
and I'm ready to continue.


360
00:16:16,166 --> 00:16:17,986
And viola, there you go.


361
00:16:18,466 --> 00:16:20,846
And speaking of viola,
back to Antoine.


362
00:16:21,516 --> 00:16:27,066
[ Applause ]


363
00:16:27,566 --> 00:16:28,306
>> Thanks Brian.


364
00:16:29,956 --> 00:16:33,336
So let's recap what Brian
just showed us on the stage.


365
00:16:34,236 --> 00:16:36,806
Using the new styles
sidebar easier than ever


366
00:16:36,986 --> 00:16:38,766
to make any changes
you want to your page.


367
00:16:38,766 --> 00:16:41,426
We have the great new
free-form CSS editing,


368
00:16:41,716 --> 00:16:44,476
syntax highlighting,
all of this instant,


369
00:16:44,886 --> 00:16:47,676
any change you made just
gets reflected on you page,


370
00:16:47,966 --> 00:16:49,716
and that's just really
amazing I think.


371
00:16:50,186 --> 00:16:52,566
And adding the neurals
just easier than ever


372
00:16:52,596 --> 00:16:54,046
with this big Neural button.


373
00:16:54,716 --> 00:16:57,526
And what I think is extremely
compelling especially in a kind


374
00:16:57,576 --> 00:17:00,736
of demo like this when we
want to tune the transition


375
00:17:00,966 --> 00:17:03,676
and the transformer applied to
an element when it's hovered,


376
00:17:04,016 --> 00:17:07,486
we can just control that so much
easier in a much easier manner


377
00:17:07,715 --> 00:17:11,256
by just using the hover
checkbox in the pseudo-class bar


378
00:17:11,256 --> 00:17:12,616
at the top of the
styles sidebar.


379
00:17:13,175 --> 00:17:20,076
I think of a future that
might seem just so natural now


380
00:17:20,076 --> 00:17:24,116
that you see it but if you
didn't have it, it would just be


381
00:17:24,116 --> 00:17:27,276
so much more painful is your
ability to just save files


382
00:17:27,276 --> 00:17:29,956
that you've been editing
locally so that it get taken


383
00:17:29,956 --> 00:17:32,096
into account when you
reload, and more importantly,


384
00:17:32,346 --> 00:17:35,526
they just apply directly
and you can just, you know,


385
00:17:35,526 --> 00:17:37,996
those change are done, you
do it all in Web Inspector.


386
00:17:38,326 --> 00:17:42,066
And so, by just pressing Command
S, you can save your file


387
00:17:42,066 --> 00:17:43,996
and it's just save
right where it was


388
00:17:43,996 --> 00:17:46,716
or it can even save a copy
somewhere else if you prefer.


389
00:17:46,716 --> 00:17:51,196
So I think that really
is a good summary


390
00:17:51,196 --> 00:17:53,796
of what Web Inspector
lets you do in terms


391
00:17:53,796 --> 00:17:56,576
of CSS experimentation,
inspection and tweaking.


392
00:17:56,576 --> 00:18:00,686
So now let's move on to the next
section, performance analysis.


393
00:18:01,606 --> 00:18:04,486
And we're going to focus
on layout and rendering.


394
00:18:05,456 --> 00:18:09,146
And I think the greatest leap
forward ever made in a browser


395
00:18:09,146 --> 00:18:10,876
for performance in
terms of layout


396
00:18:10,876 --> 00:18:14,926
and rendering was something
that WebKit pioneered as soon


397
00:18:15,216 --> 00:18:19,696
as early as iOS 2 in the
former hardware compositing


398
00:18:19,976 --> 00:18:21,926
and the ability to
have composited layers


399
00:18:21,926 --> 00:18:22,976
in your document.


400
00:18:25,116 --> 00:18:28,056
So, let me take a step
back for a minute.


401
00:18:28,176 --> 00:18:29,796
Let's get out of the
floor representation


402
00:18:29,936 --> 00:18:32,576
and let's discuss briefly
what composited layers are.


403
00:18:33,096 --> 00:18:34,286
You may not be familiar
with them.


404
00:18:35,666 --> 00:18:39,406
Composite layers is a way
for your document instead


405
00:18:39,406 --> 00:18:43,446
of being a flat surface in terms
of rendering to be a collection


406
00:18:43,446 --> 00:18:47,186
of smaller layers stacked on top
of one another and composited


407
00:18:47,186 --> 00:18:50,116
in a very efficient
way both in performance


408
00:18:50,116 --> 00:18:52,336
and power consumption
by the GPU.


409
00:18:52,826 --> 00:18:56,066
And so, let's take for
example a simple video player.


410
00:18:56,486 --> 00:18:59,436
Imagine that a backdrop
image here is a live video


411
00:18:59,796 --> 00:19:01,356
and we have controls
that we want


412
00:19:01,356 --> 00:19:03,216
to customize on top
of our video.


413
00:19:03,946 --> 00:19:08,186
So, to make sure that
video playback is a smooth


414
00:19:08,246 --> 00:19:11,446
and power-efficient as possible
in Safari, both on the Mac


415
00:19:11,446 --> 00:19:14,676
and on iOS, we're
making video elements


416
00:19:14,746 --> 00:19:17,786
in WebKit always be hardware
accelerated and hosted


417
00:19:17,786 --> 00:19:18,766
in a composited layer.


418
00:19:19,906 --> 00:19:23,406
So our video is playing and
it's kind of on its own space


419
00:19:23,786 --> 00:19:25,376
above the rest of the web page.


420
00:19:25,916 --> 00:19:28,316
Now, let's imagine that
you hover over the video


421
00:19:28,516 --> 00:19:30,146
and you want the
controls to appear.


422
00:19:30,306 --> 00:19:33,506
So you're probably state a great
little WebKit transition on them


423
00:19:33,886 --> 00:19:36,566
and make sure they start
appearing on top of the video.


424
00:19:37,036 --> 00:19:39,686
So, as soon as something
is animated with opacity


425
00:19:39,686 --> 00:19:42,446
or transform, WebKit will
automatically create a


426
00:19:42,446 --> 00:19:45,726
composited layer for you so
that we have the best possible


427
00:19:45,726 --> 00:19:47,696
performance as the
animation is performed.


428
00:19:47,846 --> 00:19:51,246
But in the end results of that
video control hovering the--


429
00:19:51,246 --> 00:19:54,716
being laid out over the
video, it means that we have


430
00:19:54,716 --> 00:19:57,276
to create a layer for
that control as well.


431
00:19:57,576 --> 00:19:59,846
Obviously, if you have
something displayed in a layer,


432
00:19:59,846 --> 00:20:02,516
in this case are video, and
something else drawn on top


433
00:20:02,516 --> 00:20:04,856
of it, that piece
of content laid


434
00:20:04,856 --> 00:20:07,726
out over the video will
itself need a layer.


435
00:20:08,376 --> 00:20:10,476
And what's kind of cool
about layer is not just--


436
00:20:10,476 --> 00:20:12,486
it's not just about
animations and transforms.


437
00:20:12,836 --> 00:20:18,266
It's also that when we have a
smaller logical piece of content


438
00:20:18,266 --> 00:20:21,606
to render in this layer for
example or controls up here,


439
00:20:21,606 --> 00:20:24,386
if we have to make a change
that requires a redraw,


440
00:20:24,386 --> 00:20:27,576
for example pressing the button,
it might turns to button green


441
00:20:27,576 --> 00:20:29,986
or something, then we
can make those changes


442
00:20:29,986 --> 00:20:33,646
in a much small region and make
a much more efficient redraw


443
00:20:33,646 --> 00:20:35,376
cycle in WebKit.


444
00:20:36,296 --> 00:20:38,686
And so, I'm telling you
a lot of information here


445
00:20:38,686 --> 00:20:41,026
and it might seem a little
bit more little abstract.


446
00:20:41,556 --> 00:20:44,166
But there was a great session
on this topic last year.


447
00:20:44,166 --> 00:20:47,346
It's called Optimizing
Web Content in UIWebViews


448
00:20:47,346 --> 00:20:49,646
and Websites on iOS,
I really urge you


449
00:20:49,646 --> 00:20:50,576
to look at that session.


450
00:20:50,576 --> 00:20:53,086
It has so much detail
information about how layout


451
00:20:53,086 --> 00:20:54,526
and rendering happens in WebKit.


452
00:20:54,526 --> 00:20:58,686
Section 601, WWDC 2012, you can
just watch it from the iOS app


453
00:20:58,686 --> 00:21:00,486
as soon as you exit this room.


454
00:21:01,826 --> 00:21:03,816
OK, so let's go back
to our presentation.


455
00:21:05,176 --> 00:21:08,626
Composited layers, like
I said, they're created


456
00:21:08,626 --> 00:21:10,376
and managed automatically
by WebKit.


457
00:21:10,376 --> 00:21:12,616
It's a great optimization
made by WebKit


458
00:21:12,676 --> 00:21:13,996
and it was such a breakthrough.


459
00:21:13,996 --> 00:21:16,786
I don't even think of other
browsers are quite caught


460
00:21:16,786 --> 00:21:17,376
up with this.


461
00:21:18,186 --> 00:21:21,326
And they pose their
own kinds of challenges


462
00:21:21,606 --> 00:21:23,796
as for you as a web developer.


463
00:21:24,506 --> 00:21:26,756
Who think things in
layers are not for free?


464
00:21:26,896 --> 00:21:29,416
In fact, almost anytime
you gain something


465
00:21:29,416 --> 00:21:33,256
in performance is always an
associated cost often times


466
00:21:33,256 --> 00:21:33,826
in memory.


467
00:21:34,126 --> 00:21:36,326
And layers will be the same.


468
00:21:36,986 --> 00:21:39,716
Something it gets drawn
into a layer requires memory


469
00:21:39,716 --> 00:21:41,166
to match the content
of that layer.


470
00:21:41,676 --> 00:21:43,796
So how do you find out when--


471
00:21:44,056 --> 00:21:46,266
having things in layers
might be a problem?


472
00:21:46,746 --> 00:21:49,256
Well, this is almost
impossible up to now.


473
00:21:49,686 --> 00:21:51,046
We have a brand new sidebar


474
00:21:51,046 --> 00:21:53,046
in Safari 7 called
the layer sidebar


475
00:21:53,326 --> 00:21:56,116
and it provides you all the
detail information you need


476
00:21:56,116 --> 00:21:57,436
about layers in your document.


477
00:21:57,496 --> 00:21:59,806
So let's take a look at what
information is contained here.


478
00:22:00,416 --> 00:22:02,896
At the top, we have
any information


479
00:22:03,116 --> 00:22:04,736
for a layer associated


480
00:22:04,736 --> 00:22:06,826
to the currently selected
element in the DOM.


481
00:22:06,986 --> 00:22:09,786
So, of course, you may not have
a layer for this element and in


482
00:22:09,786 --> 00:22:13,766
that case that panel will be
empty at the top, that's fine.


483
00:22:14,556 --> 00:22:18,096
And your elements might have
a lot of layers associated


484
00:22:18,096 --> 00:22:21,096
to descendants-- descendant
nodes of that element.


485
00:22:21,096 --> 00:22:24,926
So, we can just list all the
layers associated to any element


486
00:22:25,186 --> 00:22:27,386
in that selected element
subtree right there


487
00:22:27,386 --> 00:22:28,506
in the style sidebar panel.


488
00:22:28,886 --> 00:22:30,636
And that gives you
a great overview


489
00:22:30,836 --> 00:22:32,786
of what actually ends
up being in layers.


490
00:22:33,156 --> 00:22:36,046
And for each of those things
you can track the number


491
00:22:36,046 --> 00:22:37,926
of time those layers are painted


492
00:22:37,926 --> 00:22:39,726
and the associated
memory for that layer.


493
00:22:40,066 --> 00:22:40,966
And what's really cool is


494
00:22:40,966 --> 00:22:43,306
that since we display this
information in the table,


495
00:22:43,526 --> 00:22:47,226
you can sort by memory use
or by paints and keep track


496
00:22:47,226 --> 00:22:48,616
of the things that
might be painting


497
00:22:48,986 --> 00:22:51,356
or using too much
memory in real-time


498
00:22:51,606 --> 00:22:54,576
as this list gets updated as
you interact with the web page.


499
00:22:55,366 --> 00:22:59,016
And we summarize the layer
count as well as the memory


500
00:22:59,016 --> 00:23:00,106
at the bottom of the panel.


501
00:23:00,106 --> 00:23:02,496
So you can just take
a look at that number


502
00:23:02,746 --> 00:23:05,626
and see exactly how much
memory is consumed by layers


503
00:23:05,846 --> 00:23:07,006
on your web page or in


504
00:23:07,006 --> 00:23:08,526
that specific subtree
you're selecting.


505
00:23:10,206 --> 00:23:13,886
OK, so, layers are--


506
00:23:13,886 --> 00:23:16,376
can be associated to all
kinds of different content.


507
00:23:16,536 --> 00:23:19,506
The most obvious one
may be an HTML element,


508
00:23:19,606 --> 00:23:22,416
to which maybe a CSS
transform is applied.


509
00:23:23,226 --> 00:23:25,526
But there are other kinds
of content in your web page


510
00:23:25,816 --> 00:23:27,326
that you can't even
see in the DOM


511
00:23:27,546 --> 00:23:28,736
that might still create a layer.


512
00:23:28,826 --> 00:23:31,546
And one of those things
are pseudo-classes.


513
00:23:31,756 --> 00:23:35,996
And you might have used
before ::after or ::before


514
00:23:36,256 --> 00:23:38,766
or first letter first line,
those types of things.


515
00:23:39,386 --> 00:23:42,916
And what this lets you do purely
in CSS is actually something


516
00:23:42,916 --> 00:23:44,846
that we call generated content.


517
00:23:45,596 --> 00:23:48,756
And for example, I love
to use an after rule


518
00:23:49,026 --> 00:23:52,156
such that I can add and
overlay over an image


519
00:23:52,246 --> 00:23:57,056
that might be semi-transparent
when the mouse is not


520
00:23:57,056 --> 00:23:59,846
on the element and removes
itself when the mouse is over.


521
00:23:59,846 --> 00:24:02,376
So I can create interesting
effect without having


522
00:24:02,376 --> 00:24:03,536
to change the DOM structure.


523
00:24:04,036 --> 00:24:06,026
But imagine that
this content and that


524
00:24:06,026 --> 00:24:09,316
after selector is
actually composited itself.


525
00:24:09,316 --> 00:24:10,386
Well, that creates a layer.


526
00:24:10,386 --> 00:24:14,176
And you can identify it very
easily by looking for any layer


527
00:24:14,176 --> 00:24:16,086
that has a P icon next to it.


528
00:24:16,376 --> 00:24:17,546
P stands for pseudo-class.


529
00:24:18,336 --> 00:24:19,526
And what about reflections?


530
00:24:19,936 --> 00:24:23,156
Well, reflections themselves
do not require a layer


531
00:24:23,156 --> 00:24:23,966
to be generated.


532
00:24:24,166 --> 00:24:27,476
But imagine you're implying
a reflection to a video.


533
00:24:27,476 --> 00:24:29,136
A video is always
hosting a layer.


534
00:24:29,466 --> 00:24:31,796
So, in order to provide a
reflection for that video,


535
00:24:32,016 --> 00:24:33,936
we need to create a layer
for that reflection.


536
00:24:34,326 --> 00:24:37,026
And again, those things live
completely outside the DOM.


537
00:24:37,076 --> 00:24:38,956
And if it weren't for
the layer sidebar panel,


538
00:24:39,076 --> 00:24:41,886
there would be no way for you
to find out about those layers


539
00:24:41,886 --> 00:24:45,126
and diagnose any
issue laid to them.


540
00:24:45,126 --> 00:24:48,426
So what about jumping from a
layer to the actual element


541
00:24:48,466 --> 00:24:50,706
that this layer is
associated with?


542
00:24:50,906 --> 00:24:53,016
Well, we did something
that's just very intuitive.


543
00:24:53,016 --> 00:24:56,026
You can just hover over
the layer in the sidebar


544
00:24:56,436 --> 00:24:59,036
and a little Go To arrow will
pop up, you'll see them all


545
00:24:59,036 --> 00:25:00,576
over the place in
Web Inspector to jump


546
00:25:00,576 --> 00:25:03,346
to the associated content and
clicking on it will take you


547
00:25:03,616 --> 00:25:05,436
to that element and
regulate in the DOM.


548
00:25:05,596 --> 00:25:07,596
And then you can maybe change
the stuff for the element


549
00:25:07,866 --> 00:25:10,746
or do whatever you want that
may change this behavior,


550
00:25:10,746 --> 00:25:12,506
use less memory,
or what have you.


551
00:25:13,246 --> 00:25:16,846
And the final thing that I think
is just incredible is that,


552
00:25:17,406 --> 00:25:20,106
like I said,, WebKit has
its own set of reasons


553
00:25:20,146 --> 00:25:23,486
and it does the best it
can to generate layers


554
00:25:23,486 --> 00:25:26,106
when they're needed is not
something you have control


555
00:25:26,106 --> 00:25:28,766
over directly is just a great
optimization by WebKit .


556
00:25:29,216 --> 00:25:31,666
But the reason why something
might be composited can be


557
00:25:31,666 --> 00:25:32,536
very obscure.


558
00:25:32,536 --> 00:25:35,026
But what's great about
this sidebar panel is


559
00:25:35,026 --> 00:25:36,676
that if you select
one of those layers,


560
00:25:37,136 --> 00:25:41,096
it will show you right
away why we composited


561
00:25:41,096 --> 00:25:42,406
that layer in WebKit.


562
00:25:42,746 --> 00:25:44,916
So for example, here are
fairly obscure reason


563
00:25:44,916 --> 00:25:47,546
that have probably would not
have worked out by myself.


564
00:25:47,916 --> 00:25:51,346
The layer associated
to that element, well,


565
00:25:51,396 --> 00:25:54,606
the element overlaps another
element that's being composited


566
00:25:54,606 --> 00:25:55,126
in a layer.


567
00:25:55,376 --> 00:25:58,986
And so, just like I explained in
the overview, because it's laid


568
00:25:58,986 --> 00:26:00,936
out over another element
that's in a layer,


569
00:26:00,976 --> 00:26:02,176
it needs to be in its own layer.


570
00:26:02,416 --> 00:26:05,016
How could I found that out if--
without that sidebar panel?


571
00:26:05,366 --> 00:26:07,386
Well, this is exactly what
the layer sidebar is for.


572
00:26:07,766 --> 00:26:11,106
And so to find out more about
the layer sidebar and more


573
00:26:11,106 --> 00:26:14,326
about diagnosing and fixing
issues related to performance


574
00:26:14,326 --> 00:26:16,946
of layout and rendering, I'd
like to invite on stage Andreas


575
00:26:16,946 --> 00:26:18,246
to give us a great demo.


576
00:26:18,746 --> 00:26:24,976
[ Applause ]


577
00:26:25,476 --> 00:26:26,236
>> Thank you Antoine.


578
00:26:26,706 --> 00:26:28,986
I'm going to ahead and
reopen the photo gallery


579
00:26:28,986 --> 00:26:30,306
that Brian was just showing us.


580
00:26:30,766 --> 00:26:32,036
And here we go.


581
00:26:32,766 --> 00:26:35,066
So thanks to the latest
enhancements Brian has made.


582
00:26:35,336 --> 00:26:36,956
This is really starting
to come together.


583
00:26:37,436 --> 00:26:39,346
But we got to remember
this is a website.


584
00:26:39,756 --> 00:26:42,066
So not only it's going to be
viewed on different screen sizes


585
00:26:42,066 --> 00:26:45,036
like an iPhone or an iPad
but in case of the desktop,


586
00:26:45,286 --> 00:26:47,256
a user might even choose
to resize the window.


587
00:26:47,936 --> 00:26:50,726
So for that and in order to
have a great user experience,


588
00:26:50,876 --> 00:26:53,466
we want to had and build
this photo gallery using a


589
00:26:53,466 --> 00:26:54,286
responsive layout.


590
00:26:54,536 --> 00:26:55,496
So let's take a look at that.


591
00:26:56,626 --> 00:26:59,796
As you'll notice, as I resized
the window, the layout does


592
00:26:59,796 --> 00:27:01,626
in fact adjust to
the new screen size.


593
00:27:02,326 --> 00:27:03,826
But in terms of performance,


594
00:27:03,916 --> 00:27:05,596
things are not looking
really good.


595
00:27:05,956 --> 00:27:07,706
Things are laggy and in fact,


596
00:27:07,706 --> 00:27:09,356
I wouldn't say this is
a responsive layout.


597
00:27:10,086 --> 00:27:11,686
So let's go ahead
and try to fix that.


598
00:27:12,206 --> 00:27:14,046
But instead of me trying to
get what's wrong with that,


599
00:27:14,046 --> 00:27:16,156
I'm going to go ahead
and open the inspector.


600
00:27:17,096 --> 00:27:19,736
I'm going to go and jump
right into the timelines view.


601
00:27:20,736 --> 00:27:22,596
For those of you who are
not familiar with timelines,


602
00:27:22,986 --> 00:27:25,036
they allow you to record
any activity that's going


603
00:27:25,036 --> 00:27:27,756
on while you're interacting
or loading your website.


604
00:27:28,426 --> 00:27:31,536
These include stuff like network
requests, layout and rendering,


605
00:27:32,026 --> 00:27:33,116
and JavaScript events.


606
00:27:33,576 --> 00:27:35,746
So let's go ahead and start
recording a new timeline


607
00:27:35,746 --> 00:27:37,266
by clicking on this
button right here.


608
00:27:37,526 --> 00:27:41,656
Now that we're recording, let's
switch back to our photo gallery


609
00:27:42,126 --> 00:27:43,176
and resize the window.


610
00:27:43,836 --> 00:27:46,116
So notice, immediately
as I start interacting


611
00:27:46,116 --> 00:27:48,406
with my website,
the time is updated


612
00:27:48,406 --> 00:27:49,836
with any activity
that was recorded.


613
00:27:50,396 --> 00:27:51,066
Let's go ahead.


614
00:27:51,066 --> 00:27:52,826
I can continue interacting
with this page


615
00:27:53,086 --> 00:27:54,656
but I think I got
enough data for now.


616
00:27:54,756 --> 00:27:56,386
So let's go ahead
and stop recording.


617
00:27:57,276 --> 00:27:58,956
Again, using the same
button I use to start,


618
00:27:58,956 --> 00:28:01,696
I'm going to go ahead and
hide the timeline side panel


619
00:28:01,696 --> 00:28:03,046
so we get a little
bit more room here.


620
00:28:03,046 --> 00:28:06,376
And you immediately notice
on the top part of this view,


621
00:28:06,756 --> 00:28:09,516
we get a graphical
timeline and really easy


622
00:28:09,516 --> 00:28:11,836
to quickly visualize
everything that was going on.


623
00:28:12,216 --> 00:28:17,156
In the bottom part, we get
additional details of all


624
00:28:17,156 --> 00:28:19,966
of the events that were
recorded for-- while we are--


625
00:28:19,966 --> 00:28:21,936
of all the events
that are recorded.


626
00:28:22,126 --> 00:28:24,626
These include stuff like
start time, duration,


627
00:28:24,626 --> 00:28:26,576
and in case your
event was triggered


628
00:28:26,576 --> 00:28:30,046
by your JavaScript code, you
even get the function name,


629
00:28:30,326 --> 00:28:32,446
the line number, and if
I hover over one of this,


630
00:28:32,816 --> 00:28:34,726
we even get the entire
call stack that led


631
00:28:34,726 --> 00:28:35,806
to this event being trigger.


632
00:28:36,166 --> 00:28:38,336
Isn't this really cool?


633
00:28:38,876 --> 00:28:41,886
[ Applause ]


634
00:28:42,386 --> 00:28:44,506
So, let's go ahead and take
a look at the different types


635
00:28:44,506 --> 00:28:45,666
of events was going on.


636
00:28:45,666 --> 00:28:48,806
And something that
immediately pops out to me is


637
00:28:48,806 --> 00:28:52,066
that the single function,
this called layout photos,


638
00:28:52,496 --> 00:28:54,636
that seems to be trigging
most of these events.


639
00:28:54,966 --> 00:28:58,416
When I see some stuff like
layout here, some style going


640
00:28:58,416 --> 00:29:01,326
on against some layout, but
let's go ahead and focus


641
00:29:01,326 --> 00:29:02,716
on what's going on with styles.


642
00:29:02,716 --> 00:29:05,086
And to do this, I'm going
to go ahead and at the top


643
00:29:05,086 --> 00:29:07,906
of this table, we got
these awesome controls here


644
00:29:07,906 --> 00:29:10,256
that allow us to filter
the data in this table.


645
00:29:10,676 --> 00:29:12,826
So I'm going to ahead and
select invalidate styles.


646
00:29:13,656 --> 00:29:15,796
While holding the command
key, I'm also going to click


647
00:29:15,796 --> 00:29:16,776
on Recalculate Styles.


648
00:29:16,776 --> 00:29:20,116
So as you can see, the
table immediately updated


649
00:29:20,116 --> 00:29:22,056
to just show me those
two types of events.


650
00:29:23,086 --> 00:29:24,666
So again, let's browse
through data


651
00:29:24,756 --> 00:29:27,266
and we can immediately
detect a pattern here.


652
00:29:27,576 --> 00:29:29,866
And it seems that the
layout photos is constantly


653
00:29:30,226 --> 00:29:32,806
invalidating styles and
recalculating styles.


654
00:29:32,806 --> 00:29:35,456
And this seems to be
happening over and over again.


655
00:29:35,816 --> 00:29:39,096
And as I mention before, we can
even see the exact line number


656
00:29:39,096 --> 00:29:40,086
that this is happening on.


657
00:29:40,516 --> 00:29:43,006
In this case, it seems that
line 58 is triggering the


658
00:29:43,006 --> 00:29:46,636
recalculation, and line 64 is
triggering the invalidation.


659
00:29:46,876 --> 00:29:49,226
So let's go ahead and click
on the layout photo right here


660
00:29:49,406 --> 00:29:50,576
to jump right into the code.


661
00:29:51,726 --> 00:29:56,236
And here we go, let me zoom in.


662
00:29:56,426 --> 00:30:00,336
So you'll notice, line 58,
let's go ahead, and it seems


663
00:30:00,336 --> 00:30:01,616
that I'm inquiring
an offsetWidth.


664
00:30:02,096 --> 00:30:04,586
So this is clearly what's
triggering the recalculation.


665
00:30:05,346 --> 00:30:08,206
And if we jump back to line
64, if you remember correctly,


666
00:30:08,786 --> 00:30:10,186
in here we're setting a style.


667
00:30:10,526 --> 00:30:13,086
So when we set a style,
the browser has to go ahead


668
00:30:13,086 --> 00:30:14,756
and invalidate any cache styles.


669
00:30:14,756 --> 00:30:16,276
So if you look closely,


670
00:30:16,276 --> 00:30:18,096
all of this is happening
inside of for loop.


671
00:30:18,376 --> 00:30:20,326
So the next time I
go into this for loop


672
00:30:20,526 --> 00:30:23,346
and hit this offsetWidth, the
browser is going to have to,


673
00:30:23,346 --> 00:30:24,936
again, recalculate the side.


674
00:30:25,556 --> 00:30:27,976
So clearly, this is what
we were seeing in that--


675
00:30:27,976 --> 00:30:31,186
in the timelines where over and
over we're calculating styles


676
00:30:31,186 --> 00:30:32,366
and invalidation styles.


677
00:30:33,786 --> 00:30:36,186
But before I go ahead
and make any changes,


678
00:30:36,666 --> 00:30:38,956
wouldn't it be great if we
had a concrete measurement


679
00:30:39,476 --> 00:30:42,126
that could tell me how long this
function is taking to execute?


680
00:30:42,716 --> 00:30:44,466
That way, when we
do make changes,


681
00:30:44,956 --> 00:30:46,696
we can have an actual metric


682
00:30:46,696 --> 00:30:49,526
to validate whether those
changes improve things


683
00:30:49,736 --> 00:30:50,646
or made things worse.


684
00:30:51,586 --> 00:30:52,506
So let's go ahead.


685
00:30:52,506 --> 00:30:55,046
And I'm going to use a really
handy Console API I use all


686
00:30:55,046 --> 00:30:55,616
the time.


687
00:30:56,396 --> 00:30:58,976
And what I'm going to do is
I'm going to type console time


688
00:30:58,976 --> 00:31:00,246
at the beginning
of the function.


689
00:31:00,816 --> 00:31:05,306
I'm going to put
a console timeEnd


690
00:31:05,306 --> 00:31:08,016
at the end of the function.


691
00:31:08,016 --> 00:31:11,156
As you might have guess,


692
00:31:11,326 --> 00:31:13,906
what these APIs do is
they measure the time


693
00:31:13,906 --> 00:31:16,466
between the two calls and
print that out to a console.


694
00:31:17,226 --> 00:31:19,366
But something you might
have notice is I didn't have


695
00:31:19,366 --> 00:31:22,676
to go back to my text editor,
find the corresponding file,


696
00:31:23,016 --> 00:31:25,536
find this layout photo
function and edit my code there.


697
00:31:25,936 --> 00:31:28,246
I did all of this directly
from the web inspector.


698
00:31:28,656 --> 00:31:31,026
And just like with
CSS files when working


699
00:31:31,026 --> 00:31:34,286
up the local file system,
not only can I edit the files


700
00:31:34,286 --> 00:31:36,656
in line but I can go
ahead and Command S


701
00:31:36,656 --> 00:31:39,186
and save the file back
to my file system.


702
00:31:39,276 --> 00:31:41,136
I think this is a
really awesome feature.


703
00:31:41,136 --> 00:31:44,076
So let's go ahead
and save our file.


704
00:31:44,076 --> 00:31:46,176
And I know I'm going to
print some to the console


705
00:31:46,176 --> 00:31:47,566
so let's go ahead and switch


706
00:31:47,566 --> 00:31:50,906
to the console using the keyword
Shortcut Option Command C,


707
00:31:52,076 --> 00:31:55,396
that's the way in here, and
let's go ahead and reload


708
00:31:55,396 --> 00:31:56,516
that page using Command R.


709
00:31:57,086 --> 00:32:01,656
As you'll notice, we immediately
get that timing function


710
00:32:01,656 --> 00:32:04,826
so we can see that the
layouts photos is taking


711
00:32:04,826 --> 00:32:06,936
around 210 milliseconds
to execute.


712
00:32:08,166 --> 00:32:10,976
This might not seem like a
lot to some people but we got


713
00:32:10,976 --> 00:32:12,316
to remember we should always try


714
00:32:12,316 --> 00:32:14,476
to minimize our JavaScript
execution time.


715
00:32:14,736 --> 00:32:17,206
And in fact, I'm pretty
confident we can bring this


716
00:32:17,206 --> 00:32:17,716
number down.


717
00:32:17,716 --> 00:32:20,056
And let's go back
and jump to our code,


718
00:32:20,056 --> 00:32:22,356
and to do this I'm going to use
the navigation bars up here.


719
00:32:22,356 --> 00:32:23,946
[ Inaudible ]


720
00:32:23,946 --> 00:32:26,816
Let me use a console.


721
00:32:27,396 --> 00:32:32,556
So here we're back to our
code and let's go ahead


722
00:32:32,556 --> 00:32:33,676
and analyze what's going on.


723
00:32:34,006 --> 00:32:37,046
If you remember, we're
querying the offsetWidth


724
00:32:37,046 --> 00:32:40,356
and if you look closely,
we're using the offsetWidth


725
00:32:40,946 --> 00:32:44,196
to determine how many
photos we can put fair well.


726
00:32:44,196 --> 00:32:46,056
And base on that, we go ahead


727
00:32:46,456 --> 00:32:48,246
and determine the photo
width and the height.


728
00:32:48,716 --> 00:32:52,546
But if you look closely, we're
not relying on any photo's data


729
00:32:52,616 --> 00:32:54,426
to do these calculations.


730
00:32:54,746 --> 00:32:56,826
In fact, these are
pretty static calculations


731
00:32:57,206 --> 00:32:59,566
that can just go ahead and
move out of the for loop.


732
00:32:59,616 --> 00:33:01,966
So I'm going to just do that.


733
00:33:03,826 --> 00:33:08,316
And by doing this,
we're no longer going


734
00:33:08,316 --> 00:33:10,576
to recalculate style
on every loop.


735
00:33:11,026 --> 00:33:13,696
So let's go ahead
and save this, again,


736
00:33:13,696 --> 00:33:15,796
Command S, reload our page.


737
00:33:15,796 --> 00:33:17,916
But before I do that, switch
back to the console again,


738
00:33:18,406 --> 00:33:20,906
zoom in, and let's
reload our page.


739
00:33:21,456 --> 00:33:23,446
And there you have it.


740
00:33:23,716 --> 00:33:27,116
That minor change actually
made a huge improvement,


741
00:33:27,386 --> 00:33:29,226
not only that we make
that optimization


742
00:33:29,226 --> 00:33:32,536
but we have a concrete data
that can help us validate this.


743
00:33:32,656 --> 00:33:36,446
So we went from 200 milliseconds
to just under 10 milliseconds.


744
00:33:36,626 --> 00:33:37,536
So that's good.


745
00:33:37,796 --> 00:33:39,466
But let's go back
to the resizing,


746
00:33:39,466 --> 00:33:40,856
but that's what we're
trying to solve here.


747
00:33:41,096 --> 00:33:42,686
I'm going to zoom
out a little bit,


748
00:33:42,686 --> 00:33:44,146
let's go to the Inspector
for now.


749
00:33:44,146 --> 00:33:48,056
And I'm going to resize the
window and see what happens.


750
00:33:48,396 --> 00:33:50,966
As you'll notice, things
might be a little bit better


751
00:33:51,346 --> 00:33:52,696
but they're still
not [inaudible].


752
00:33:53,556 --> 00:33:56,126
So let's go ahead and see what
other optimizations we can make.


753
00:33:57,036 --> 00:33:59,936
And as you know, we're working
with a lot of images here,


754
00:33:59,936 --> 00:34:01,976
when we're doing
some CSS transforms.


755
00:34:02,086 --> 00:34:04,956
And in fact, to do all
the layouts of the photos,


756
00:34:05,396 --> 00:34:07,036
we're using CSS transforms
as well.


757
00:34:07,606 --> 00:34:11,096
So I'm a little bit concern
about in terms of memory


758
00:34:11,096 --> 00:34:14,216
and in case the browser might
be creating in the layers.


759
00:34:14,216 --> 00:34:17,146
So I'm going to go ahead and
make use of a brand new feature


760
00:34:17,146 --> 00:34:20,626
in Safari 7 that allows me
to quickly visualize all


761
00:34:20,626 --> 00:34:21,755
of the layers in my page.


762
00:34:22,386 --> 00:34:26,775
To do this, let me bring
up the Inspector again.


763
00:34:26,916 --> 00:34:28,946
And let's switch over
to the Resources tab.


764
00:34:28,946 --> 00:34:32,216
And in the DOM tree,
there's a brand new button


765
00:34:32,335 --> 00:34:33,396
in the upper right corner.


766
00:34:34,416 --> 00:34:35,795
But instead of me
explaining what it does,


767
00:34:35,795 --> 00:34:38,516
let me zoom out and
show you exactly.


768
00:34:38,676 --> 00:34:42,275
So I'm going to toggle it and
I know it's a little bit hard


769
00:34:42,275 --> 00:34:43,326
to see so let me zoom in.


770
00:34:44,136 --> 00:34:46,616
What this does, it actually
drag borders around all


771
00:34:46,616 --> 00:34:48,376
of the layers within your page.


772
00:34:49,045 --> 00:34:50,466
So this is a really cool way


773
00:34:50,466 --> 00:34:52,246
that you can quickly
visualize all


774
00:34:52,246 --> 00:34:54,376
of the layers within
your document.


775
00:34:54,576 --> 00:34:56,246
In this case, if
you look closely,


776
00:34:56,616 --> 00:34:57,876
it seems that we're generating,


777
00:34:57,986 --> 00:35:01,136
there are being layers
composited for each photos.


778
00:35:01,986 --> 00:35:03,376
This is sort of unexpected.


779
00:35:03,476 --> 00:35:06,066
At least it wasn't
my intention, sorry.


780
00:35:07,006 --> 00:35:10,166
So, before I go ahead
and make any changes,


781
00:35:10,456 --> 00:35:11,966
I think it would be
great if we can go


782
00:35:11,966 --> 00:35:14,016
and analyze how many
layers we have


783
00:35:14,016 --> 00:35:15,666
and why the things
are being composited.


784
00:35:16,096 --> 00:35:17,766
So for that, I'm going
to go ahead and open


785
00:35:17,766 --> 00:35:19,036
up the layer side panel,


786
00:35:19,376 --> 00:35:21,066
this brand new layer
side panel over here.


787
00:35:21,136 --> 00:35:24,086
And we can immediately
see the list of all


788
00:35:24,086 --> 00:35:26,696
of the layers for this document.


789
00:35:26,696 --> 00:35:29,296
And as expected, we can see
all the photo wrappers are


790
00:35:29,296 --> 00:35:30,126
being composited.


791
00:35:30,656 --> 00:35:31,926
We go all the way to the bottom.


792
00:35:32,806 --> 00:35:35,456
We can even see then the
exact layer kind of layers.


793
00:35:35,456 --> 00:35:36,716
In this case we have Nighty


794
00:35:36,716 --> 00:35:39,426
and they're consuming a
total of 11 megabytes.


795
00:35:40,006 --> 00:35:42,286
This might not seem like a
lot but we got to remember


796
00:35:42,286 --> 00:35:44,696
that in mobile devices,
memory is restricted.


797
00:35:44,946 --> 00:35:46,466
So we should always
try to memorize--


798
00:35:47,306 --> 00:35:48,776
minimize our memory footprint.


799
00:35:49,146 --> 00:35:52,876
So, now that we've seen how many
layers we have, let's go ahead


800
00:35:52,876 --> 00:35:56,536
and see exactly why layers are
being composited for each photo.


801
00:35:56,846 --> 00:35:58,616
So to do that, I'm going
to go ahead and select one


802
00:35:58,616 --> 00:35:59,796
of the photo wrappers here.


803
00:36:00,496 --> 00:36:03,756
You immediately see that the
reason this is being composited


804
00:36:03,756 --> 00:36:06,116
is because the element
has a 3D transform.


805
00:36:06,116 --> 00:36:08,306
So now that I know why this is,


806
00:36:08,606 --> 00:36:09,926
let's go back to
our photo gallery.


807
00:36:09,926 --> 00:36:13,736
And as I mentioned before,
we think 3D transforms


808
00:36:13,736 --> 00:36:16,196
or transforms to position
all of these photos


809
00:36:16,196 --> 00:36:18,996
because we have a feature
of the photo gallery


810
00:36:18,996 --> 00:36:20,366
that we haven't shown you yet.


811
00:36:20,976 --> 00:36:23,196
So you might have noticed that
in the upper right corner,


812
00:36:24,036 --> 00:36:25,086
we have a shuffle button.


813
00:36:25,376 --> 00:36:27,386
And instead of me explaining
what it does, let's go ahead


814
00:36:27,386 --> 00:36:29,086
and click it and see,
see them in action.


815
00:36:30,526 --> 00:36:32,756
As you'll notice, as
I click this button,


816
00:36:33,726 --> 00:36:36,416
the layout of the photos is
rearranged and they are animated


817
00:36:36,416 --> 00:36:37,326
to their new position.


818
00:36:37,496 --> 00:36:40,016
So this is why we're
using CSS transforms.


819
00:36:40,436 --> 00:36:42,686
But you'll notice we're
not doing anything fancy.


820
00:36:43,476 --> 00:36:45,126
I don't know what's going
on with the performance here


821
00:36:45,126 --> 00:36:49,036
but we're not doing anything
pretty of anything fancy.


822
00:36:49,106 --> 00:36:51,456
So I think it's safe
to go ahead and remove


823
00:36:51,456 --> 00:36:53,716
that 3D transformation
and convert them


824
00:36:53,716 --> 00:36:55,226
to just use 2D transforms.


825
00:36:55,676 --> 00:36:57,936
So I wrote this code and I
know exactly what file need


826
00:36:57,936 --> 00:36:58,356
to change.


827
00:36:58,356 --> 00:37:00,076
So I'm going to go
ahead in the Resources,


828
00:37:00,076 --> 00:37:03,406
Open photo.js, and here we go.


829
00:37:03,406 --> 00:37:06,876
This is the line of code that's
setting up that 3D transform,


830
00:37:06,876 --> 00:37:08,456
so I'm going to go
ahead and convert this


831
00:37:08,456 --> 00:37:09,706
to a regular translate.


832
00:37:11,456 --> 00:37:14,926
And again, I'm editing right in
the Web Inspector so Command S


833
00:37:14,926 --> 00:37:19,496
to save, save this file,
and let's reload the page.


834
00:37:19,636 --> 00:37:24,136
And you'll notice something
you can immediately see is


835
00:37:24,136 --> 00:37:27,306
that there are no longer borders
being drawn around each photo.


836
00:37:27,606 --> 00:37:28,966
So this means we did something.


837
00:37:29,326 --> 00:37:32,276
And layers are no longer being
composited for each photo.


838
00:37:32,506 --> 00:37:34,126
But just to be absolutely sure,


839
00:37:34,126 --> 00:37:36,786
let's reopen this layer
side panel once again.


840
00:37:38,276 --> 00:37:41,576
And sure enough as
expected, we went down from,


841
00:37:41,576 --> 00:37:44,536
I think it was 90 layers to just
two layers and let's see how


842
00:37:44,536 --> 00:37:45,506
that deal with memory.


843
00:37:46,646 --> 00:37:49,106
And we went down from, I
think, it was 13 megabytes


844
00:37:49,106 --> 00:37:50,366
to just 300 kilobytes.


845
00:37:50,366 --> 00:37:51,056
So this is great.


846
00:37:51,876 --> 00:37:55,226
But before I go and see how
that affected the resizing,


847
00:37:55,426 --> 00:37:58,006
let's make sure we didn't
break any system functionality.


848
00:37:58,376 --> 00:38:00,246
Let's go ahead and
try to shuffle again


849
00:38:00,786 --> 00:38:03,156
and make sure that's still
running as smooth as before.


850
00:38:03,156 --> 00:38:06,326
So I'm going to click
on it, and you'll notice


851
00:38:06,386 --> 00:38:07,906
that things are still
looking pretty good.


852
00:38:07,906 --> 00:38:10,806
And I know it's a
little bit fast here,


853
00:38:10,806 --> 00:38:13,846
but if you notice closely,
as an animation is happening,


854
00:38:14,436 --> 00:38:16,796
WebKit is smart enough to
composite layers for all


855
00:38:16,796 --> 00:38:18,926
of these elements so
that animation still runs


856
00:38:18,926 --> 00:38:19,826
as smooth as before.


857
00:38:20,226 --> 00:38:20,876
So this is good.


858
00:38:21,586 --> 00:38:24,846
So, let's go ahead
and resize the page


859
00:38:24,846 --> 00:38:27,146
and hopefully this would
fix our performance stages.


860
00:38:27,826 --> 00:38:30,006
So I'm going to go ahead
and resize the page.


861
00:38:30,006 --> 00:38:32,276
Notice, things are
immediately better.


862
00:38:32,546 --> 00:38:34,446
In fact, I would
say that this is now


863
00:38:34,446 --> 00:38:36,136
in fact a responsive layout.


864
00:38:36,556 --> 00:38:38,356
So with that, I'm going to
hand it back to Antoine.


865
00:38:38,596 --> 00:38:38,976
Thank you.


866
00:38:39,516 --> 00:38:44,536
[ Applause ]


867
00:38:45,036 --> 00:38:45,956
>> Thanks Andreas.


868
00:38:46,396 --> 00:38:48,856
I think this is the coolest
demo we've made today


869
00:38:49,406 --> 00:38:52,646
because it puts together so many
of the new features we've had


870
00:38:52,646 --> 00:38:55,406
in Web Inspector and
let's us do things


871
00:38:55,406 --> 00:38:56,936
that would be virtually
impossible


872
00:38:56,936 --> 00:38:58,746
to make with any other tool.


873
00:38:58,746 --> 00:39:00,146
Web Inspector is the only tool


874
00:39:00,146 --> 00:39:04,586
that let's you check
performance-related issues


875
00:39:04,686 --> 00:39:08,816
that might be originated
due to the use of layers.


876
00:39:09,566 --> 00:39:11,546
So let's recap what we just saw.


877
00:39:11,996 --> 00:39:14,196
The great new layer
sidebar something completely


878
00:39:14,196 --> 00:39:18,236
in Safari 7 let's us inspect at
a glance list of layers we have


879
00:39:18,516 --> 00:39:21,046
and we can even use the new
composited borders button


880
00:39:21,046 --> 00:39:24,056
in the navigation bar
to turn on borders


881
00:39:24,116 --> 00:39:26,376
on any composited
element in the page.


882
00:39:27,346 --> 00:39:30,716
And only to drill into more
information, the layer sidebar


883
00:39:31,116 --> 00:39:33,926
which lets us find out
about the number of panes


884
00:39:33,926 --> 00:39:36,216
or the memory used and even find


885
00:39:36,216 --> 00:39:39,376
out why specific layer was
composited in the first place,


886
00:39:39,746 --> 00:39:42,466
such that if it were
in unexpected behavior,


887
00:39:42,726 --> 00:39:48,336
we could go about fixing
it using the style sidebar.


888
00:39:48,896 --> 00:39:52,746
And in this demo, Andreas
managed to bring the tool number


889
00:39:52,746 --> 00:39:55,706
of layers from 90 to just
two layers just suing those


890
00:39:55,706 --> 00:39:56,396
great techniques.


891
00:39:57,006 --> 00:40:01,436
And Andreas also showcased some
great improvements we've made


892
00:40:01,436 --> 00:40:01,956
to the timelines panel.


893
00:40:02,756 --> 00:40:05,476
Recording all this information
about layout and rendering,


894
00:40:05,656 --> 00:40:07,996
it might be a lot, so the first
thing you can do is filter


895
00:40:07,996 --> 00:40:11,966
down to just the types of
layout and rendering operations


896
00:40:12,256 --> 00:40:13,526
that are of concern to you.


897
00:40:14,056 --> 00:40:17,836
And then as you select a
specific row in that DataGrid,


898
00:40:18,076 --> 00:40:22,716
you immediately can figure out
what kind of JavaScript code led


899
00:40:22,716 --> 00:40:24,886
to the execution of that layout.


900
00:40:24,886 --> 00:40:29,736
So for example here, we know
that it came from the AppInit


901
00:40:29,736 --> 00:40:32,086
and we can just start drilling
down through those functions


902
00:40:32,316 --> 00:40:34,986
to figure out why we eventually
call it layout photos.


903
00:40:35,406 --> 00:40:36,446
Such a great feature.


904
00:40:36,956 --> 00:40:38,136
You can just jump straight


905
00:40:38,286 --> 00:40:39,846
to where the performance
issue might be.


906
00:40:40,366 --> 00:40:46,546
I think since we're in the
advance session and I'm talking


907
00:40:46,546 --> 00:40:49,926
to a group of developers,
I think everybody are going


908
00:40:49,926 --> 00:40:52,916
to be interested in ways you can
boost your productivity while


909
00:40:52,916 --> 00:40:53,846
using Web Inspector.


910
00:40:54,636 --> 00:40:57,496
And a great way to do that is to
learn more about a Console API.


911
00:40:57,966 --> 00:41:01,266
Andreas used a console time
and console.timeEnd methods


912
00:41:01,626 --> 00:41:02,696
to time a code segment.


913
00:41:02,696 --> 00:41:03,496
This is really cool.


914
00:41:03,896 --> 00:41:05,916
There are other methods
you can call on console


915
00:41:05,916 --> 00:41:07,896
that could make your
life easier when dealing


916
00:41:07,896 --> 00:41:09,046
with performance analysis.


917
00:41:09,116 --> 00:41:11,356
For example, console
that mark timeline.


918
00:41:11,756 --> 00:41:15,086
What it lets you do is add
a green vertical dash line


919
00:41:15,316 --> 00:41:18,096
to the timeline recording
so that you can visually see


920
00:41:18,096 --> 00:41:19,596
when your piece of
code is being run.


921
00:41:20,466 --> 00:41:22,636
Another great thing we
could have done in this demo


922
00:41:22,766 --> 00:41:26,126
but we didn't is that instead
of calling time and timeEnd,


923
00:41:26,366 --> 00:41:28,316
we're going to call it
profile and profileEnd.


924
00:41:28,316 --> 00:41:32,256
And what this would have done is
start an instrumentation process


925
00:41:32,506 --> 00:41:35,076
where it keep track of all the
JavaScript calls made during


926
00:41:35,346 --> 00:41:38,796
that specific interaction and
present it in a great DataGrid


927
00:41:38,796 --> 00:41:40,036
within the timeline sidebar.


928
00:41:40,456 --> 00:41:42,476
We didn't have time to
feature profiling too much


929
00:41:42,476 --> 00:41:44,706
in this session this year,
but if you come to the lab,


930
00:41:44,916 --> 00:41:46,106
we'll be able to
show you a lot more


931
00:41:46,106 --> 00:41:47,536
about profiling if
you're interested.


932
00:41:48,056 --> 00:41:51,496
OK. So I think that
we did a good job


933
00:41:51,496 --> 00:41:54,296
of showing how we can deal
with performance analysis


934
00:41:54,296 --> 00:41:56,466
and fix those kinds of
performance-related issues


935
00:41:56,696 --> 00:41:58,436
in Web Inspector
in this section.


936
00:41:58,926 --> 00:42:00,856
Now let's wrap this
up by taking a look


937
00:42:00,856 --> 00:42:03,366
at debugging in Web Inspector.


938
00:42:03,446 --> 00:42:05,636
I'm going to invite on
the stage, again, Brian,


939
00:42:05,636 --> 00:42:06,806
to show you the final demo.


940
00:42:07,516 --> 00:42:12,476
[ Pause ]


941
00:42:12,976 --> 00:42:14,236
>> Thank you, Antoine.


942
00:42:14,576 --> 00:42:17,606
So, Andreas did a really awesome
job showing you how you can use


943
00:42:17,606 --> 00:42:21,046
a timeline to help profile
of [inaudible] in performance


944
00:42:21,046 --> 00:42:22,876
and layout associated with
their JavaScript code.


945
00:42:23,436 --> 00:42:25,716
But sometime, their JavaScript
code just doesn't work,


946
00:42:26,126 --> 00:42:27,466
at least mine quite often.


947
00:42:28,026 --> 00:42:29,246
So, let's take a look


948
00:42:29,246 --> 00:42:30,766
at the previous example
we're working at.


949
00:42:31,786 --> 00:42:34,626
This is looking pretty good
so far but one feature I want


950
00:42:34,626 --> 00:42:36,846
to add is that when you click
on a photo, it just zoom


951
00:42:36,846 --> 00:42:38,746
in full screen like a
nice photo gallery should.


952
00:42:39,486 --> 00:42:41,156
And I went ahead and
I added some code


953
00:42:41,156 --> 00:42:42,556
to do this but it doesn't work.


954
00:42:42,646 --> 00:42:43,816
And you'll notice
that when I click


955
00:42:43,816 --> 00:42:46,506
on the photos, nothing happens.


956
00:42:47,396 --> 00:42:49,436
So usually when something
goes wrong,


957
00:42:49,876 --> 00:42:51,876
the first thing I do
is I blame Antoine.


958
00:42:52,576 --> 00:42:55,356
The second thing I do is I open
up Web Inspector and take a look


959
00:42:55,356 --> 00:42:57,106
and see if there's any
information to tell me


960
00:42:57,316 --> 00:42:58,356
that something has gone wrong.


961
00:42:58,886 --> 00:43:01,346
So let's do just that.


962
00:43:01,556 --> 00:43:02,626
Now you'll notice
in the top right,


963
00:43:02,696 --> 00:43:05,596
in the top of the activity there
is a pretty obvious glaring


964
00:43:05,596 --> 00:43:06,146
red error.


965
00:43:06,146 --> 00:43:09,556
And this tells me that indeed
something is going-- gone wrong.


966
00:43:09,876 --> 00:43:12,546
And as I click on a photo,
it'll increment that count.


967
00:43:12,546 --> 00:43:12,936
[ Inaudible ]


968
00:43:12,936 --> 00:43:20,586
So as I click on a photo, it's
going to increment that number.


969
00:43:20,586 --> 00:43:22,996
So that tells me that
there's obviously a problem


970
00:43:23,366 --> 00:43:25,206
with the Java that's
being called as a result


971
00:43:25,206 --> 00:43:26,136
of clicking on a photo.


972
00:43:26,876 --> 00:43:28,916
So let's zoom out and let's--


973
00:43:28,916 --> 00:43:31,566
and we already have
console open.


974
00:43:31,566 --> 00:43:34,596
I can also get to that by
clicking on the red icon.


975
00:43:34,746 --> 00:43:38,126
And if I zoom in here, you'll
notice that we have an error


976
00:43:38,126 --> 00:43:40,456
and it's telling me
that we're trying


977
00:43:40,456 --> 00:43:41,756
to call an undefined function.


978
00:43:42,556 --> 00:43:43,556
So let's go straight
into the code


979
00:43:43,556 --> 00:43:44,666
and take a look at
what's going on.


980
00:43:44,756 --> 00:43:48,206
I do that by clicking a
link on the bottom right.


981
00:43:48,756 --> 00:43:51,846
I'm going to zoom out a
little bit and take a look.


982
00:43:52,736 --> 00:43:54,716
So, let's take a look
at code here and see


983
00:43:54,716 --> 00:43:56,336
if we can get an
idea of just looking


984
00:43:56,336 --> 00:43:58,116
at the code what's
trying to happen here.


985
00:43:58,616 --> 00:44:01,036
So clearly we add eventless near
to the element before you click


986
00:44:01,036 --> 00:44:04,216
on it, and in the function
handler, we're trying


987
00:44:04,216 --> 00:44:06,486
to call a method that notifies
that a photo was selected.


988
00:44:07,586 --> 00:44:10,886
But this doesn't give me a lot
of information so let's set turn


989
00:44:10,886 --> 00:44:14,626
out the debugger
which you can get too


990
00:44:14,626 --> 00:44:15,956
by toggling on the top here.


991
00:44:17,316 --> 00:44:19,666
And let's set term
breakpoints on and let's do it


992
00:44:19,666 --> 00:44:21,106
for all uncaught exceptions.


993
00:44:21,566 --> 00:44:22,946
Now, if you had exceptions
that were


994
00:44:22,946 --> 00:44:24,766
at in a try/catch statements,
you would also be able


995
00:44:24,766 --> 00:44:25,946
to use the all-exceptions.


996
00:44:26,766 --> 00:44:28,946
So without reloading the
page, I'm first going


997
00:44:28,946 --> 00:44:30,606
to press command K to
clear this error count.


998
00:44:31,506 --> 00:44:32,916
I'm going to click
on another image.


999
00:44:33,396 --> 00:44:37,016
And as you can see, the
debugger braked right


1000
00:44:37,016 --> 00:44:39,046
at the area where we expected.


1001
00:44:39,936 --> 00:44:42,976
So now that the debugger
stopped at the point


1002
00:44:43,096 --> 00:44:46,156
where the error is being thrown,
we have the opportunity to look


1003
00:44:46,156 --> 00:44:48,046
at the context and see
what's happening here.


1004
00:44:48,436 --> 00:44:50,826
So when you look at the top
right, we have a scope chain


1005
00:44:51,246 --> 00:44:52,916
which provides information
about the variables


1006
00:44:52,916 --> 00:44:54,456
and arguments in the method.


1007
00:44:55,006 --> 00:44:56,676
But nothing looks
obviously wrong here.


1008
00:44:56,676 --> 00:44:58,076
There's no neular undefined.


1009
00:44:58,486 --> 00:45:01,176
So, I can't really get a sense
about what the problem is.


1010
00:45:01,766 --> 00:45:04,016
So let's close this.


1011
00:45:04,016 --> 00:45:06,306
Safari 7 is a much better
way to go about doing this.


1012
00:45:07,136 --> 00:45:08,146
I can simply roll over--


1013
00:45:08,216 --> 00:45:11,256
I can simply roll
over any element here.


1014
00:45:11,256 --> 00:45:12,926
And I'm going to
get information,


1015
00:45:12,926 --> 00:45:14,166
let me zoom out of it.


1016
00:45:14,166 --> 00:45:18,096
I can get information about
any variable here live.


1017
00:45:18,746 --> 00:45:20,866
This is a really great way to
visualize the code and walk


1018
00:45:20,866 --> 00:45:22,606
through it and see what kind
of information we're getting


1019
00:45:22,606 --> 00:45:24,376
and see where the error happens.


1020
00:45:24,846 --> 00:45:26,196
So as you can see,
this is the event


1021
00:45:26,196 --> 00:45:27,406
that triggered the function.


1022
00:45:28,026 --> 00:45:29,776
I can roll over the idea
and see that we're going


1023
00:45:29,776 --> 00:45:31,796
to get the correct
idea of the photo.


1024
00:45:32,316 --> 00:45:33,966
This is the information
about the photo.


1025
00:45:34,526 --> 00:45:38,726
But as we expect, the
notify method is undefined.


1026
00:45:39,476 --> 00:45:40,726
So let's keep it going
through the left here


1027
00:45:40,866 --> 00:45:41,836
and roll over this.


1028
00:45:42,846 --> 00:45:44,196
And we zoom out and we see


1029
00:45:44,196 --> 00:45:46,366
that this keyword
represents the element.


1030
00:45:47,136 --> 00:45:49,166
So, this is a very subtle
JavaScript [inaudible]


1031
00:45:49,166 --> 00:45:50,966
that I ran into all the time.


1032
00:45:51,446 --> 00:45:53,396
And we know that a
function is called--


1033
00:45:53,396 --> 00:45:55,556
an event list in our function
is called in a context


1034
00:45:55,886 --> 00:45:57,246
of the object that
triggered the event.


1035
00:45:57,736 --> 00:46:00,086
So in this case, this
keyword refers to the element


1036
00:46:00,546 --> 00:46:03,066
that we clicked on, not the
object that contains the method.


1037
00:46:04,216 --> 00:46:07,186
So let's go ahead and continue
the-- let's play through.


1038
00:46:07,766 --> 00:46:10,386
And we can have-- let's
do a simple fix for this.


1039
00:46:11,386 --> 00:46:16,936
So I'm going to use bind which
is going to bind this scope


1040
00:46:16,936 --> 00:46:18,306
of the method to the object


1041
00:46:18,306 --> 00:46:20,516
that contains the notify
what's selected method.


1042
00:46:20,516 --> 00:46:23,306
I'm going to save
it, use a command S.


1043
00:46:27,176 --> 00:46:28,526
And let's refresh the page.


1044
00:46:28,896 --> 00:46:35,406
So now when I click on the
photo, boom, it zooms in.


1045
00:46:36,116 --> 00:46:37,876
So it's looking pretty
good so far.


1046
00:46:38,906 --> 00:46:39,586
But you'll notice that some


1047
00:46:39,586 --> 00:46:41,936
of these photos have
comment icons on a corner.


1048
00:46:42,406 --> 00:46:45,116
So when I click on it, we
shall load in some comments.


1049
00:46:45,646 --> 00:46:48,746
But you'll notice we're
not quite safe yet.


1050
00:46:48,746 --> 00:46:50,026
We have another problem
run into.


1051
00:46:50,946 --> 00:46:52,596
So clearly, what's
happening here?


1052
00:46:52,946 --> 00:46:55,246
So we have four comments
but they're all showing


1053
00:46:55,246 --> 00:46:56,376
up with undefined data.


1054
00:46:57,376 --> 00:46:58,866
So my hypothesis here is


1055
00:46:58,866 --> 00:47:00,706
that we're either not
getting the right data


1056
00:47:00,886 --> 00:47:02,196
or not running it correctly.


1057
00:47:02,686 --> 00:47:04,046
So let's look at
how we can inspect--


1058
00:47:04,046 --> 00:47:05,516
how we can debug this problem.


1059
00:47:06,396 --> 00:47:09,356
Now, what I want to do is I
want to see the associated data


1060
00:47:09,896 --> 00:47:12,586
that this-- that's being used
to render these comments.


1061
00:47:13,346 --> 00:47:16,426
So to do that, I'm going
to right click on one


1062
00:47:16,426 --> 00:47:19,946
of these elements and
click on inspect elements.


1063
00:47:20,406 --> 00:47:23,536
That's going to bring up these
comments in the-- in a DOM tree.


1064
00:47:23,536 --> 00:47:29,796
And let me scale
this a little bit


1065
00:47:29,796 --> 00:47:32,416
so you can see what
I'm going to do.


1066
00:47:32,416 --> 00:47:34,976
Now, I'm going to bring
up the quick console


1067
00:47:34,976 --> 00:47:35,866
and show you shorthand.


1068
00:47:36,756 --> 00:47:37,706
Let's clear this out.


1069
00:47:38,366 --> 00:47:40,926
Now I can use dollar sign 0 and
what this does, this is going


1070
00:47:40,926 --> 00:47:42,956
to reference the currently
selected element in the DOM.


1071
00:47:43,536 --> 00:47:48,736
So if I press Enter, you'll see
that this comment is the same


1072
00:47:48,736 --> 00:47:49,876
as the comment that I selected.


1073
00:47:50,566 --> 00:47:53,666
Now, as a debugging
technique, I actually associated


1074
00:47:53,876 --> 00:47:57,356
in JavaScript the info, the data
model that this comment used


1075
00:47:57,356 --> 00:47:59,356
to surrender itself
on the element itself.


1076
00:47:59,986 --> 00:48:01,386
So as I start autocompleting,


1077
00:48:01,706 --> 00:48:03,516
you'll see there's info
object associated with it.


1078
00:48:04,786 --> 00:48:05,896
So inspect this object,


1079
00:48:06,796 --> 00:48:09,056
we'll see that we are actually
getting valid data here.


1080
00:48:09,326 --> 00:48:12,066
So we have the avatar URL,
we have a comment text,


1081
00:48:12,066 --> 00:48:13,306
and we also have a date.


1082
00:48:13,306 --> 00:48:15,586
But for some reasons, it's
not showing up in the code.


1083
00:48:16,306 --> 00:48:18,136
So, let's take a look
at our JavaScript file.


1084
00:48:18,236 --> 00:48:21,286
I'm going to use the search
here in the top and I want


1085
00:48:21,286 --> 00:48:23,306
to search for comment code.


1086
00:48:23,366 --> 00:48:23,976
So let's see.


1087
00:48:24,746 --> 00:48:28,226
I think it's called Comment,
and you see the search bar,


1088
00:48:28,226 --> 00:48:30,676
such a nice list of
wherever the word Comment was


1089
00:48:30,676 --> 00:48:32,576
in our entire working directory.


1090
00:48:33,176 --> 00:48:34,656
So in this case, I want
to go to this method,


1091
00:48:35,146 --> 00:48:36,906
Comment, Prototype, Set Info.


1092
00:48:37,466 --> 00:48:41,526
And this [inaudible] is really
great because we can see--


1093
00:48:41,736 --> 00:48:43,306
we can compare to a
data that we're getting


1094
00:48:43,376 --> 00:48:44,596
and a data that we're expecting.


1095
00:48:45,596 --> 00:48:48,436
So seeing the top, we're
sending the image here


1096
00:48:48,436 --> 00:48:50,666
and we're sending the
text from the data,


1097
00:48:50,666 --> 00:48:52,126
and we're sending the timestamp.


1098
00:48:53,206 --> 00:48:55,196
But in reality, these
are the wrong variables.


1099
00:48:55,896 --> 00:48:56,886
Here is this avatar.


1100
00:48:57,126 --> 00:48:58,996
Up there is its image and so on.


1101
00:48:59,686 --> 00:49:00,946
So, this is a common scenario


1102
00:49:00,946 --> 00:49:02,786
where sometimes data might
change in the backend


1103
00:49:03,066 --> 00:49:04,646
and you're not trying to
update it on the front end.


1104
00:49:04,646 --> 00:49:07,126
So let's quickly go in
and make these changes


1105
00:49:07,126 --> 00:49:08,116
and see if it works.


1106
00:49:08,576 --> 00:49:13,676
This should be comment
and this should be date.


1107
00:49:13,676 --> 00:49:16,556
Again, I'm going to
press Command S to save.


1108
00:49:16,636 --> 00:49:23,886
I want to zoom back
out and take a look.


1109
00:49:25,966 --> 00:49:26,736
Refresh the page.


1110
00:49:27,616 --> 00:49:29,056
Let's click on the same image.


1111
00:49:29,396 --> 00:49:32,806
And there we go, the
color is showing up.


1112
00:49:33,846 --> 00:49:36,096
OK, so I think we're
almost done.


1113
00:49:36,096 --> 00:49:37,446
And let's take a look at
some more photos here.


1114
00:49:38,956 --> 00:49:41,096
Let's take a look at
our trip to Thailand.


1115
00:49:42,386 --> 00:49:43,096
How about this guy?


1116
00:49:44,126 --> 00:49:45,406
So again, the color
is looking good.


1117
00:49:45,756 --> 00:49:46,446
Let's scroll down.


1118
00:49:47,216 --> 00:49:54,906
So we'll notice that
something else is wrong.


1119
00:49:54,906 --> 00:49:56,156
So, just when we
thought we were done,


1120
00:49:56,766 --> 00:49:59,416
obviously another bug pops up,
that happens once in a while.


1121
00:50:00,316 --> 00:50:02,496
So the previous problem
was specific--


1122
00:50:02,636 --> 00:50:05,576
was happen to all the comments,
but this problem is specific


1123
00:50:05,816 --> 00:50:06,906
to an individual comments.


1124
00:50:07,286 --> 00:50:08,916
Now, we can use a [inaudible]
technique that we used


1125
00:50:08,916 --> 00:50:11,726
in the last demo, but let me
show something that much cooler.


1126
00:50:12,036 --> 00:50:15,746
So I'm going to go to
the search my resources


1127
00:50:16,096 --> 00:50:17,566
for a method called
render comments.


1128
00:50:17,856 --> 00:50:19,526
Now this is a method
that I wrote,


1129
00:50:19,526 --> 00:50:21,036
so I know what it's called.


1130
00:50:21,036 --> 00:50:22,446
So let's search for it.


1131
00:50:24,196 --> 00:50:26,396
So let's click the
right using the search.


1132
00:50:26,486 --> 00:50:29,776
I'm going to escape
out the quick console.


1133
00:50:30,476 --> 00:50:32,336
And let's take a
look at this method.


1134
00:50:32,446 --> 00:50:35,746
So this method is called when
the full screen view shows up


1135
00:50:35,786 --> 00:50:37,846
and it loops through
all the comment data,


1136
00:50:38,866 --> 00:50:42,526
it creates a new comment which
renders the HTML content.


1137
00:50:42,976 --> 00:50:44,096
And I will set the info on it


1138
00:50:44,226 --> 00:50:45,606
which the data we're
getting from server.


1139
00:50:46,446 --> 00:50:48,556
So what I want to do is I
want to click on the debugger


1140
00:50:49,186 --> 00:50:52,446
and I want to set a
breakpoints right at the point


1141
00:50:52,446 --> 00:50:53,586
when the data is being set.


1142
00:50:53,896 --> 00:50:56,586
This way I can inspect the
data right before it get sent


1143
00:50:56,586 --> 00:50:57,516
to the comments and rendered.


1144
00:50:58,436 --> 00:51:01,976
But the problem here is
that I don't want to have


1145
00:51:01,976 --> 00:51:04,876
to run this debugger for
every single comment.


1146
00:51:05,516 --> 00:51:08,016
So I have to go to the first
comment, the second comment


1147
00:51:08,016 --> 00:51:09,926
and so on until I
got to this one here.


1148
00:51:10,966 --> 00:51:11,946
So this is a great usage


1149
00:51:11,946 --> 00:51:13,526
of something called
conditional breakpoints.


1150
00:51:13,816 --> 00:51:15,006
And let me show you
how that works.


1151
00:51:15,896 --> 00:51:21,136
Let me turn on breakpoints here.


1152
00:51:21,336 --> 00:51:22,846
Zoom out a little bit.


1153
00:51:25,636 --> 00:51:29,056
So you see that, the breakpoint
that I click, that I use,


1154
00:51:29,056 --> 00:51:31,656
that I add by clicking
on the gutter here is


1155
00:51:31,656 --> 00:51:33,146
on the debug panel on the left.


1156
00:51:33,866 --> 00:51:36,896
So if I right click on this,
I can go to edit breakpoint.


1157
00:51:37,586 --> 00:51:39,926
Now, this allows me to add
a conditional expression


1158
00:51:39,926 --> 00:51:42,586
that will be evaluated right
before this method is reached


1159
00:51:42,586 --> 00:51:44,796
and-- the debugger
will only break on it


1160
00:51:44,936 --> 00:51:46,856
if this condition is
evaluated to be true.


1161
00:51:47,236 --> 00:51:48,926
So a conditional expression
could be anything that you put


1162
00:51:48,926 --> 00:51:49,936
and stuff in If statements.


1163
00:51:50,666 --> 00:51:51,996
So in this case, let's try


1164
00:51:51,996 --> 00:51:54,226
to find an identifiable
characteristic


1165
00:51:54,226 --> 00:51:57,706
about these comments that we
can use to add a condition.


1166
00:51:58,496 --> 00:52:00,986
So in this case we have
text "Too Much Fun".


1167
00:52:01,446 --> 00:52:04,456
So let's select that.


1168
00:52:04,586 --> 00:52:07,606
We'll just type in instead.


1169
00:52:07,776 --> 00:52:09,336
So let's use a regular
expression match


1170
00:52:09,336 --> 00:52:10,226
to see how this works.


1171
00:52:11,166 --> 00:52:19,076
So, toomuchfun.test, and we want
to test it against this line,


1172
00:52:19,246 --> 00:52:19,966
so let's try this again.


1173
00:52:20,356 --> 00:52:23,556
So we want to test it against
the data and the comment.


1174
00:52:24,046 --> 00:52:27,726
So let's do
commentinfo.comments,


1175
00:52:27,996 --> 00:52:30,756
remember the correct variable
name from the last mistake,


1176
00:52:31,816 --> 00:52:33,936
press Enter, then we're good.


1177
00:52:33,936 --> 00:52:35,626
So let's see how this works.


1178
00:52:36,146 --> 00:52:39,226
Let's click off this again.


1179
00:52:39,436 --> 00:52:41,476
And let's click on
the same photo here.


1180
00:52:43,866 --> 00:52:46,146
Now you notice that it correctly
stopped at the breakpoint,


1181
00:52:46,746 --> 00:52:48,716
but we zoom out you see that
it actually rendered all the


1182
00:52:48,716 --> 00:52:49,676
comments beforehand.


1183
00:52:50,036 --> 00:52:52,386
So this stop only at the
comment that was in question


1184
00:52:52,826 --> 00:52:53,636
which is really a great way.


1185
00:52:53,636 --> 00:52:55,986
If there was a thousand comments
here, that'll be a real pain


1186
00:52:55,986 --> 00:52:57,026
to go through each one of them.


1187
00:52:57,356 --> 00:52:59,226
So using conditional
breakpoints, you can easily get


1188
00:52:59,226 --> 00:53:02,066
to only the problem that
specific that you want to find.


1189
00:53:02,786 --> 00:53:06,176
So, using the popovers, we can
now easily go over the code


1190
00:53:06,176 --> 00:53:07,096
and see what's going on.


1191
00:53:08,316 --> 00:53:09,756
So here I have our
comments arrived.


1192
00:53:09,756 --> 00:53:12,476
I don't know about you but
this is the coolest thing ever.


1193
00:53:13,296 --> 00:53:14,516
Could I get some
applause for this?


1194
00:53:14,626 --> 00:53:15,176
This is great.


1195
00:53:15,176 --> 00:53:15,896
[ Applause ]


1196
00:53:15,896 --> 00:53:16,196
Thank you.


1197
00:53:16,196 --> 00:53:17,496
[ Applause ]


1198
00:53:17,496 --> 00:53:20,356
I mean, I can visually
go through the code


1199
00:53:20,356 --> 00:53:22,196
and just-- it's just so natural.


1200
00:53:22,986 --> 00:53:26,586
Let me get back to the info,
and as you can see, you know,


1201
00:53:26,696 --> 00:53:30,956
James wrote these comment, added
some rogue HTML into the comment


1202
00:53:30,956 --> 00:53:32,406
which is why it's getting
rendered in correctly.


1203
00:53:33,106 --> 00:53:34,706
Now, this is a really
serious issue.


1204
00:53:34,896 --> 00:53:36,766
This-- the sites won't allow
me to cross scription--


1205
00:53:36,766 --> 00:53:39,016
scripting attacks and this
is something that we'd have


1206
00:53:39,016 --> 00:53:41,626
to taught to our server about
to try to sanitize the content.


1207
00:53:42,126 --> 00:53:44,006
So, this is a serious issue


1208
00:53:44,006 --> 00:53:46,156
that using conditional
breakpoints helped us out.


1209
00:53:46,926 --> 00:53:48,476
And with that, back to Antoine.


1210
00:53:49,516 --> 00:53:53,816
[ Applause ]


1211
00:53:54,316 --> 00:53:55,446
>> Hey, thanks Brian.


1212
00:53:56,446 --> 00:54:01,526
So, the debugger sidebar is
the way you can always track


1213
00:54:01,896 --> 00:54:05,676
where your breakpoints are,
what this data's recall stack is


1214
00:54:05,676 --> 00:54:07,286
when you're breaking
into the debugger,


1215
00:54:07,476 --> 00:54:09,426
and using the scope
chain, you can always find


1216
00:54:09,426 --> 00:54:11,846
out these different values
of the local variables


1217
00:54:12,066 --> 00:54:12,856
and their occurring call.


1218
00:54:14,216 --> 00:54:15,836
And with conditional
breakpoints,


1219
00:54:16,186 --> 00:54:20,106
you can pinpoint specific
instance within a loop


1220
00:54:20,166 --> 00:54:23,696
or any kind of other condition
to just break what it matters.


1221
00:54:23,956 --> 00:54:26,216
And what I think is really
cool about this feature is


1222
00:54:26,216 --> 00:54:28,796
that imagine you're actually
debugging content that's not


1223
00:54:28,796 --> 00:54:29,536
even local.


1224
00:54:29,536 --> 00:54:32,166
It's content from the server,
there's no way you can edit,


1225
00:54:32,686 --> 00:54:36,326
edit the file to tweak the
breakpoint and just break


1226
00:54:36,326 --> 00:54:38,156
under certain conditions,
this is really


1227
00:54:38,156 --> 00:54:39,516
where the edit breakpoint,


1228
00:54:39,906 --> 00:54:43,016
conditional breakpoint setting
is just really vital 'cause


1229
00:54:43,296 --> 00:54:45,356
there would be no other
way to do it otherwise.


1230
00:54:46,456 --> 00:54:50,696
And the popovers, they just work
whether you're hovering a simple


1231
00:54:51,166 --> 00:54:53,486
property or even a
chain of properties,


1232
00:54:53,976 --> 00:54:56,576
it's just really fantastic
for real-time debugging.


1233
00:54:57,526 --> 00:55:00,416
And again, taking a
look at productivity,


1234
00:55:00,696 --> 00:55:01,766
there are some Command Line APIs


1235
00:55:01,766 --> 00:55:03,256
that would be really
useful to you.


1236
00:55:03,356 --> 00:55:05,966
So, for example, there are
0 currently selected node,


1237
00:55:05,966 --> 00:55:08,796
there are 124 last,
second to last,


1238
00:55:08,796 --> 00:55:11,556
and et cetera selected
node, comma and underscore,


1239
00:55:11,766 --> 00:55:13,866
dollar underscore, the
value of the last expression


1240
00:55:13,866 --> 00:55:16,776
in the debugger in the
console and even short hands


1241
00:55:16,776 --> 00:55:20,206
for often used methods
such as querySelector


1242
00:55:20,206 --> 00:55:21,856
and querySelectorAll
which you can go


1243
00:55:21,856 --> 00:55:23,256
with dollar or dollar-dollar.


1244
00:55:24,216 --> 00:55:26,706
And we have a whole list of
those in the documentation


1245
00:55:26,866 --> 00:55:28,716
which you should
really go and check out.


1246
00:55:28,946 --> 00:55:32,486
So this was it, the new style
sidebar panel made inspection


1247
00:55:32,486 --> 00:55:35,446
tweaking a breeze, performance
analysis with the new layouts,


1248
00:55:35,506 --> 00:55:37,006
layer sidebar as well


1249
00:55:37,006 --> 00:55:39,986
as the great timelines
view just made it so easy


1250
00:55:39,986 --> 00:55:42,406
to identify what went
wrong, get to the initiator,


1251
00:55:42,606 --> 00:55:44,916
look at the call stack,
and find exactly what piece


1252
00:55:44,916 --> 00:55:47,656
of JavaScript calls the
performance issue, and finally,


1253
00:55:47,946 --> 00:55:50,936
popovers, conditional
breakpoints, all new features


1254
00:55:50,936 --> 00:55:54,396
in Safari 7 that makes debugging
JavaScript code so much easier.


1255
00:55:56,016 --> 00:55:58,236
So you can keep up-to-date
with our development


1256
00:55:58,236 --> 00:56:00,876
with Web Inspector by
going to nightly.webkit.org


1257
00:56:00,876 --> 00:56:02,986
and you can download the
WebKit nightly and build


1258
00:56:02,986 --> 00:56:05,386
with the snapshot
of WebKit everyday.


1259
00:56:06,366 --> 00:56:08,016
And race bug as you
encounter them,


1260
00:56:08,016 --> 00:56:10,156
go to
bugs.webkit.org/new-inspector-


1261
00:56:10,156 --> 00:56:11,786
bug will always track
in them and trying


1262
00:56:11,786 --> 00:56:13,086
to fix them as soon as possible.


1263
00:56:13,746 --> 00:56:16,266
And if you have any issue you
want to discuss in person--


1264
00:56:16,556 --> 00:56:20,616
not exactly in person but live,
you can just connect to IRC


1265
00:56:20,616 --> 00:56:22,496
and freenode.net and go


1266
00:56:22,496 --> 00:56:25,866
to the #webkit-inspector
channel and find us there.


1267
00:56:26,306 --> 00:56:29,526
And finally, because we have
open source Web Inspector today,


1268
00:56:29,946 --> 00:56:32,426
you can contribute directly
to the features and the code


1269
00:56:32,426 --> 00:56:34,406
of Web Inspector to make it
just a little bit better.


1270
00:56:34,766 --> 00:56:36,956
And so, for more information,
you can type [inaudible]


1271
00:56:36,956 --> 00:56:40,126
or documentation again, you
will have to check it out,


1272
00:56:40,386 --> 00:56:41,936
developer.apple.com/mac,


1273
00:56:41,936 --> 00:56:45,736
look for the Safari Web
Inspector Guide, webkit.org,


1274
00:56:45,916 --> 00:56:47,506
[inaudible], great places
to find more information


1275
00:56:47,506 --> 00:56:48,676
and get answers to
your question.


1276
00:56:49,786 --> 00:56:53,256
These are some related sessions
about performance, CSS features,


1277
00:56:53,766 --> 00:56:56,836
and introductory talk to Web
Inspector if you miss that.


1278
00:56:57,156 --> 00:56:57,786
Thanks very much.


1279
00:56:58,176 --> 00:57:00,000
[ Applause ]

