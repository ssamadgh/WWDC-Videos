1
00:00:23,516 --> 00:00:25,926
[ Applause ]


2
00:00:26,426 --> 00:00:27,236
>> Welcome.


3
00:00:27,566 --> 00:00:28,896
Good afternoon everyone.


4
00:00:29,396 --> 00:00:31,066
I'm Sirisha from SiriKit


5
00:00:31,066 --> 00:00:31,726
Engineering.


6
00:00:32,095 --> 00:00:33,516
I'm joined by my colleague and


7
00:00:33,516 --> 00:00:36,046
friend Tin to talk about all the


8
00:00:36,046 --> 00:00:37,176
cool new features we are


9
00:00:37,176 --> 00:00:39,626
bringing this year in SiriKit.


10
00:00:41,106 --> 00:00:42,746
SiriKit was introduced last


11
00:00:42,746 --> 00:00:44,636
year, a brand new way for


12
00:00:44,636 --> 00:00:46,456
everyone to do things in their


13
00:00:46,456 --> 00:00:47,876
apps using their voice.


14
00:00:48,886 --> 00:00:50,686
The main goal of the release was


15
00:00:50,686 --> 00:00:51,966
to make sure to give you the


16
00:00:51,966 --> 00:00:54,516
ability so your services and


17
00:00:54,516 --> 00:00:56,126
content can be integrated with


18
00:00:56,126 --> 00:00:58,536
our SiriKit so users can now


19
00:00:58,826 --> 00:01:00,776
talk to their apps using Siri.


20
00:01:01,436 --> 00:01:05,116
To make this happen, we've


21
00:01:05,116 --> 00:01:07,406
opened up numerous domains like


22
00:01:07,716 --> 00:01:10,196
Workouts, Messages, Ride


23
00:01:10,196 --> 00:01:12,126
Booking, just to name a few.


24
00:01:12,806 --> 00:01:14,876
Every domain had one or more


25
00:01:14,876 --> 00:01:15,406
intents.


26
00:01:15,936 --> 00:01:18,386
And intents had a specific task


27
00:01:18,986 --> 00:01:21,416
like the Messaging domain.


28
00:01:21,896 --> 00:01:23,676
Users were able to send a


29
00:01:23,676 --> 00:01:25,836
message or search a message.


30
00:01:26,316 --> 00:01:28,266
Ride Booking, everybody were


31
00:01:28,266 --> 00:01:29,806
able to book ride in their


32
00:01:29,806 --> 00:01:30,656
preferred apps.


33
00:01:31,206 --> 00:01:34,236
Or paying bills in Payments


34
00:01:34,476 --> 00:01:35,076
domain.


35
00:01:36,516 --> 00:01:38,746
Because of these intents, we


36
00:01:38,746 --> 00:01:40,676
gave you the ability to pick and


37
00:01:40,676 --> 00:01:42,596
choose the intents that you want


38
00:01:42,596 --> 00:01:44,706
to register that best suited


39
00:01:44,706 --> 00:01:45,906
your app capabilities.


40
00:01:47,836 --> 00:01:51,896
In our release Watch 3.2 we


41
00:01:51,986 --> 00:01:53,866
started supporting SiriKit on


42
00:01:53,866 --> 00:01:54,976
watchOS platform.


43
00:01:55,526 --> 00:01:57,896
By writing a Watch extension you


44
00:01:57,896 --> 00:01:59,976
were able to take all the


45
00:01:59,976 --> 00:02:01,616
advantages of SiriKit Intent


46
00:02:01,686 --> 00:02:02,996
framework on the Watch.


47
00:02:03,556 --> 00:02:07,056
As our ongoing effort to make


48
00:02:07,056 --> 00:02:09,826
your experience seamless and


49
00:02:09,826 --> 00:02:12,516
easy, we've added our support to


50
00:02:12,516 --> 00:02:13,196
simulator.


51
00:02:13,946 --> 00:02:17,716
Starting iOS 10.3 and watchOS


52
00:02:17,746 --> 00:02:20,836
3.2, you were able to debug and


53
00:02:20,836 --> 00:02:22,326
test while writing SiriKit


54
00:02:22,326 --> 00:02:22,966
extension.


55
00:02:24,356 --> 00:02:26,456
This is a big year for us.


56
00:02:27,096 --> 00:02:29,256
Great reception and amazing


57
00:02:29,256 --> 00:02:30,806
feedback made this happen.


58
00:02:31,446 --> 00:02:32,796
Let's take a sneak peek about


59
00:02:32,956 --> 00:02:33,876
all the cool things we are


60
00:02:33,876 --> 00:02:34,876
bringing this year.


61
00:02:36,076 --> 00:02:39,646
A lot of new domains and many


62
00:02:39,646 --> 00:02:40,386
more intents.


63
00:02:41,446 --> 00:02:43,936
Brand new APIs to give you move


64
00:02:43,936 --> 00:02:46,156
control to customize the feel


65
00:02:46,156 --> 00:02:49,006
and look at your apps view in


66
00:02:49,006 --> 00:02:49,626
Siri.


67
00:02:50,936 --> 00:02:52,696
And lots of enhancements to our


68
00:02:52,696 --> 00:02:54,746
systems and APIs for a much


69
00:02:54,746 --> 00:02:56,436
improved user experience.


70
00:02:57,996 --> 00:02:59,776
So, let's talk through the


71
00:02:59,776 --> 00:03:00,656
domains first.


72
00:03:01,726 --> 00:03:03,566
We've added new intents to our


73
00:03:03,566 --> 00:03:04,746
Payments domain.


74
00:03:05,216 --> 00:03:08,396
We've add our support to Lists


75
00:03:08,396 --> 00:03:10,626
and Notes functionality.


76
00:03:11,576 --> 00:03:14,086
If your app uses visual codes,


77
00:03:14,436 --> 00:03:15,876
you can start integrating with


78
00:03:15,876 --> 00:03:17,986
SiriKit starting this fall.


79
00:03:19,736 --> 00:03:22,546
Payments was introduced in iOS


80
00:03:22,546 --> 00:03:22,896
10.


81
00:03:23,286 --> 00:03:25,356
When we introduced, we added our


82
00:03:25,356 --> 00:03:27,646
support to sending money and


83
00:03:27,646 --> 00:03:28,466
requesting money.


84
00:03:28,466 --> 00:03:33,156
In our 10.3 release we've added


85
00:03:33,156 --> 00:03:34,276
the support for bills.


86
00:03:34,826 --> 00:03:36,476
Users were able to search for


87
00:03:36,476 --> 00:03:37,986
bills and pay bills.


88
00:03:39,036 --> 00:03:40,876
We are extending our support


89
00:03:40,976 --> 00:03:43,276
further this year by adding our


90
00:03:43,276 --> 00:03:44,716
support for accounts.


91
00:03:45,476 --> 00:03:47,026
Users will now be able to


92
00:03:47,886 --> 00:03:49,466
transfer money from one account


93
00:03:49,466 --> 00:03:52,336
to another, or search for


94
00:03:52,336 --> 00:03:53,406
account information.


95
00:03:54,366 --> 00:03:55,576
Let's take a look at these.


96
00:03:56,406 --> 00:03:57,636
First I'm going to talk about


97
00:03:57,636 --> 00:03:58,626
the transfer intent.


98
00:03:58,626 --> 00:04:01,966
If you look at the screen, Siri


99
00:04:01,966 --> 00:04:04,476
is very capable and powerful to


100
00:04:04,476 --> 00:04:06,166
understand such long requests.


101
00:04:06,776 --> 00:04:08,116
For right now I'm just going to


102
00:04:08,116 --> 00:04:09,526
walk through line by line.


103
00:04:10,256 --> 00:04:12,166
Transfer $10 tomorrow.


104
00:04:12,226 --> 00:04:18,046
$10 will be mapped as amount.


105
00:04:19,166 --> 00:04:22,166
And tomorrow is converted to the


106
00:04:22,166 --> 00:04:22,906
exact date.


107
00:04:24,166 --> 00:04:26,026
Easy. The transaction properties


108
00:04:26,026 --> 00:04:27,856
are simple and map rightly.


109
00:04:28,686 --> 00:04:30,006
What about accounts?


110
00:04:31,016 --> 00:04:32,526
Accounts can be referred in many


111
00:04:32,526 --> 00:04:32,796
ways.


112
00:04:33,256 --> 00:04:35,336
I sometimes like to use it just


113
00:04:35,336 --> 00:04:36,616
by organization name.


114
00:04:37,206 --> 00:04:39,086
Or, like an account type like


115
00:04:39,086 --> 00:04:40,426
I've used here: checking,


116
00:04:40,896 --> 00:04:42,166
savings, credit.


117
00:04:43,006 --> 00:04:45,036
Siri understands all times of


118
00:04:45,136 --> 00:04:47,826
accounts and makes sure that it


119
00:04:47,826 --> 00:04:49,906
infers rightly and then gives it


120
00:04:49,906 --> 00:04:51,646
to your app.


121
00:04:51,646 --> 00:04:53,976
Well and good.


122
00:04:54,176 --> 00:04:55,556
What is this Rainbow Savings?


123
00:04:56,036 --> 00:04:58,386
This is the name I have used


124
00:04:58,666 --> 00:05:00,696
when registering my account in


125
00:05:00,696 --> 00:05:01,926
one of my apps.


126
00:05:02,466 --> 00:05:03,906
And I want to make sure that


127
00:05:03,906 --> 00:05:05,756
Siri understands my account


128
00:05:05,756 --> 00:05:06,556
nicknames, too.


129
00:05:07,066 --> 00:05:08,446
And how is this possible?


130
00:05:08,976 --> 00:05:10,216
When you registered


131
00:05:10,506 --> 00:05:13,056
user-specific data using our IN


132
00:05:13,056 --> 00:05:15,446
Vocabulary API, we will be able


133
00:05:15,446 --> 00:05:18,776
to understand user's specific


134
00:05:19,036 --> 00:05:19,836
information.


135
00:05:21,706 --> 00:05:22,826
You can look for more


136
00:05:22,826 --> 00:05:26,066
information of IN Vocabulary API


137
00:05:26,896 --> 00:05:28,916
in this link.


138
00:05:28,976 --> 00:05:30,746
So, let's talk about Search.


139
00:05:31,086 --> 00:05:33,336
Our second intent is a Search


140
00:05:33,336 --> 00:05:35,956
for Accounts intent, which will


141
00:05:36,026 --> 00:05:38,816
be able to list all the account


142
00:05:38,816 --> 00:05:41,176
types if the user just asks to


143
00:05:41,176 --> 00:05:42,366
list all the accounts.


144
00:05:42,986 --> 00:05:45,326
Just enough information to


145
00:05:45,326 --> 00:05:46,366
distinguish between the


146
00:05:46,366 --> 00:05:47,646
accounts, along with the


147
00:05:47,646 --> 00:05:48,266
balance.


148
00:05:48,836 --> 00:05:50,516
And if the user wants to know


149
00:05:50,516 --> 00:05:52,386
more about each account, they


150
00:05:52,386 --> 00:05:53,686
can just click on any of the


151
00:05:53,686 --> 00:05:55,636
item to get a detailed view.


152
00:05:56,446 --> 00:05:58,746
Search for Accounts intent, not


153
00:05:58,746 --> 00:06:00,756
just shows all the accounts, but


154
00:06:00,756 --> 00:06:02,836
also can be used to query for


155
00:06:02,836 --> 00:06:04,326
specific account information.


156
00:06:04,866 --> 00:06:05,856
Like here.


157
00:06:06,076 --> 00:06:08,536
What is the balance on my


158
00:06:08,536 --> 00:06:09,746
Rainbow Checking account?


159
00:06:10,586 --> 00:06:12,706
I'm asking specifically my


160
00:06:12,706 --> 00:06:14,706
balance on a specific account.


161
00:06:15,256 --> 00:06:17,746
And Siri perfectly understands


162
00:06:17,746 --> 00:06:20,196
it and then gives the user the


163
00:06:20,196 --> 00:06:21,256
required information.


164
00:06:21,756 --> 00:06:24,116
We don't only support the normal


165
00:06:24,116 --> 00:06:26,456
balance, but also we've added a


166
00:06:26,456 --> 00:06:27,776
couple of balance types.


167
00:06:28,106 --> 00:06:29,976
Like if your app supports


168
00:06:30,036 --> 00:06:32,356
airline mileages or reward


169
00:06:32,456 --> 00:06:32,866
points.


170
00:06:33,476 --> 00:06:36,006
Siri can understand them as


171
00:06:36,006 --> 00:06:36,296
well.


172
00:06:36,826 --> 00:06:38,656
How many miles do I have on my


173
00:06:38,656 --> 00:06:39,456
Sparkle card?


174
00:06:39,916 --> 00:06:41,706
Siri understands it and then


175
00:06:41,706 --> 00:06:42,686
passes it to your app.


176
00:06:43,156 --> 00:06:45,056
And thus giving the user the


177
00:06:45,056 --> 00:06:46,146
required information.


178
00:06:46,716 --> 00:06:51,976
So, INTransferMoneyIntent can be


179
00:06:51,976 --> 00:06:54,896
used to transfer money from one


180
00:06:55,316 --> 00:06:58,166
account to another.


181
00:06:58,166 --> 00:07:00,606
INSearchForAccountsIntent can be


182
00:07:00,606 --> 00:07:03,566
used to check balances, to list


183
00:07:03,566 --> 00:07:05,566
all the accounts or to check any


184
00:07:05,566 --> 00:07:07,226
specific account information.


185
00:07:07,716 --> 00:07:09,496
That's all we have for Payments


186
00:07:09,496 --> 00:07:10,066
this year.


187
00:07:10,186 --> 00:07:15,906
With our analysis, we found out


188
00:07:15,906 --> 00:07:18,386
that managing lists and notes is


189
00:07:18,386 --> 00:07:20,246
one of the very popular use


190
00:07:20,246 --> 00:07:22,126
cases in Siri users.


191
00:07:22,496 --> 00:07:24,796
And so, this year we're


192
00:07:24,796 --> 00:07:27,266
extending our support to support


193
00:07:27,526 --> 00:07:29,346
lists and notes.


194
00:07:29,406 --> 00:07:31,296
We've added all the APIs to make


195
00:07:31,296 --> 00:07:34,176
sure that users can create,


196
00:07:34,686 --> 00:07:37,396
edit, manage, their lists,


197
00:07:37,556 --> 00:07:39,356
notes, and reminders.


198
00:07:40,396 --> 00:07:42,816
Not just that, but also users


199
00:07:42,816 --> 00:07:44,556
will be able to search in their


200
00:07:44,556 --> 00:07:46,086
lists and notes.


201
00:07:46,456 --> 00:07:49,936
Let's take a look at them.


202
00:07:50,366 --> 00:07:52,266
This is an example to create a


203
00:07:52,266 --> 00:07:52,676
list.


204
00:07:53,216 --> 00:07:56,206
I can ask Siri to create a list


205
00:07:56,586 --> 00:07:58,826
by giving a title and also the


206
00:07:58,826 --> 00:07:59,336
contents.


207
00:07:59,726 --> 00:08:01,876
And Siri is powerful enough to


208
00:08:01,876 --> 00:08:03,106
distinguish between them,


209
00:08:03,446 --> 00:08:05,396
understand them, and pass on the


210
00:08:05,396 --> 00:08:06,986
right information, filling in


211
00:08:06,986 --> 00:08:09,276
the intent, giving it to you to


212
00:08:09,276 --> 00:08:10,466
create the view.


213
00:08:11,006 --> 00:08:15,606
This is one of my favorite


214
00:08:15,606 --> 00:08:17,546
intents: the joys of marking


215
00:08:17,596 --> 00:08:18,426
tasks done.


216
00:08:19,326 --> 00:08:21,416
SetTaskAttributeIntent can be


217
00:08:21,416 --> 00:08:22,836
used for this.


218
00:08:23,026 --> 00:08:25,256
This has a task type, which is


219
00:08:25,256 --> 00:08:27,176
completed, not completed.


220
00:08:27,176 --> 00:08:29,336
And that carries the information


221
00:08:29,336 --> 00:08:31,646
between Siri and the app to make


222
00:08:31,646 --> 00:08:34,015
sure that we do the action


223
00:08:34,176 --> 00:08:34,726
correctly.


224
00:08:35,296 --> 00:08:39,186
We've added brand new intent to


225
00:08:39,186 --> 00:08:40,376
support reminders.


226
00:08:41,046 --> 00:08:42,655
We can create reminders in many


227
00:08:42,655 --> 00:08:42,926
ways.


228
00:08:43,416 --> 00:08:45,396
Siri supports two types of


229
00:08:45,446 --> 00:08:48,556
reminders: spatial and temporal.


230
00:08:49,176 --> 00:08:50,956
Let's talk about spatial first.


231
00:08:50,956 --> 00:08:53,866
An example here: Remind me to


232
00:08:53,866 --> 00:08:55,656
leave work at 5 p.m. in


233
00:08:55,656 --> 00:08:56,556
UnicornNote.


234
00:08:56,556 --> 00:08:59,176
I'm asking Siri to remind me to


235
00:08:59,176 --> 00:09:00,676
print slide when I get to work.


236
00:09:00,676 --> 00:09:03,826
I'm making -- I want Siri to


237
00:09:04,166 --> 00:09:05,676
make sure that it understands


238
00:09:05,676 --> 00:09:07,296
the geolocation of the word and


239
00:09:07,546 --> 00:09:09,056
then pass on the information to


240
00:09:09,056 --> 00:09:11,266
you so you can create the right


241
00:09:11,266 --> 00:09:13,526
reminder for the geolocation.


242
00:09:14,076 --> 00:09:17,786
The next example: Remind me to


243
00:09:17,786 --> 00:09:21,456
leave work at 5 p.m. This is to


244
00:09:21,456 --> 00:09:24,426
make sure that the date trigger


245
00:09:24,426 --> 00:09:25,156
is created.


246
00:09:25,156 --> 00:09:27,566
If you look at both the


247
00:09:27,566 --> 00:09:29,596
examples, Siri is powerful


248
00:09:29,596 --> 00:09:31,616
enough to understand when I said


249
00:09:31,696 --> 00:09:33,496
"leave work at 5 p.m."


250
00:09:33,806 --> 00:09:36,146
to create a date reminder, but


251
00:09:36,146 --> 00:09:38,056
not a location reminder for


252
00:09:38,056 --> 00:09:38,806
leaving work.


253
00:09:39,256 --> 00:09:42,076
And in the before example, Siri


254
00:09:42,076 --> 00:09:44,036
created a location trigger when


255
00:09:44,036 --> 00:09:45,626
I said "arrive at work."


256
00:09:46,226 --> 00:09:48,336
Siri is very powerful in parsing


257
00:09:48,336 --> 00:09:50,236
these use cases and


258
00:09:50,236 --> 00:09:52,286
understanding them to create the


259
00:09:52,286 --> 00:09:54,646
right intent and pass it over to


260
00:09:55,176 --> 00:09:55,256
you.


261
00:09:57,356 --> 00:10:00,856
So, CreateTaskIntent can be used


262
00:10:01,236 --> 00:10:03,266
to create tasks, lists.


263
00:10:04,706 --> 00:10:07,406
AddTasksIntent for the reminders


264
00:10:07,676 --> 00:10:09,476
and adding tasks to the existing


265
00:10:09,476 --> 00:10:09,776
ones.


266
00:10:11,606 --> 00:10:14,516
SetTaskAttributeIntent to set a


267
00:10:14,516 --> 00:10:17,646
task or to mark it completed or


268
00:10:17,646 --> 00:10:18,976
to update it to a reminder.


269
00:10:22,716 --> 00:10:24,016
Let's talk about the notes.


270
00:10:25,006 --> 00:10:26,496
Notes can be created in many


271
00:10:26,496 --> 00:10:26,876
ways.


272
00:10:27,266 --> 00:10:29,186
I can create by using the title,


273
00:10:29,526 --> 00:10:31,816
the content and even under a


274
00:10:31,816 --> 00:10:32,366
folder.


275
00:10:32,776 --> 00:10:34,376
And Siri supports all these


276
00:10:34,376 --> 00:10:34,926
options.


277
00:10:35,326 --> 00:10:37,166
So when I ask Siri to create a


278
00:10:37,166 --> 00:10:39,976
note with just given title, it


279
00:10:39,976 --> 00:10:41,216
just creates a blank note.


280
00:10:42,056 --> 00:10:45,846
I can also ask Siri to create a


281
00:10:45,846 --> 00:10:47,656
note under a specific folder


282
00:10:47,796 --> 00:10:49,256
along with its content.


283
00:10:49,936 --> 00:10:52,076
Siri parses the whole user


284
00:10:52,076 --> 00:10:54,896
intent and then maps the


285
00:10:54,926 --> 00:10:57,106
appropriate title, group name,


286
00:10:57,186 --> 00:10:59,296
and content into the intent and


287
00:10:59,336 --> 00:11:01,116
then pass it over to you to


288
00:11:01,116 --> 00:11:02,926
create the right note.


289
00:11:06,296 --> 00:11:07,816
And adding to an existing note.


290
00:11:08,376 --> 00:11:10,036
This is possible with Siri, too.


291
00:11:11,226 --> 00:11:13,566
Here, Siri understands the


292
00:11:13,566 --> 00:11:14,696
target note as WWDC.


293
00:11:14,696 --> 00:11:17,666
And then the actual content.


294
00:11:17,946 --> 00:11:19,746
And then passes the information


295
00:11:20,006 --> 00:11:23,246
over to you to create the note.


296
00:11:23,976 --> 00:11:24,916
Let's take a look at the


297
00:11:24,916 --> 00:11:25,436
intents.


298
00:11:26,196 --> 00:11:28,516
CreateNoteIntent to create brand


299
00:11:28,516 --> 00:11:28,996
new notes.


300
00:11:30,376 --> 00:11:33,056
AppendToNoteIntent to add to an


301
00:11:33,056 --> 00:11:33,916
existing one.


302
00:11:34,626 --> 00:11:38,486
The next big intent in the Lists


303
00:11:38,486 --> 00:11:40,346
and Notes is Search.


304
00:11:41,666 --> 00:11:43,646
When you get asked to just show


305
00:11:43,646 --> 00:11:46,086
all the information, Siri


306
00:11:46,086 --> 00:11:48,376
understands and then passes the


307
00:11:48,376 --> 00:11:49,996
intent to your app.


308
00:11:50,096 --> 00:11:52,676
And Siri lists all the notes,


309
00:11:52,676 --> 00:11:55,156
lists, reminder, passed on by


310
00:11:55,156 --> 00:11:56,326
the app to us.


311
00:11:57,466 --> 00:11:59,486
We can display as is if you want


312
00:11:59,486 --> 00:12:00,106
us to.


313
00:12:00,356 --> 00:12:02,816
Or, you also have the option of


314
00:12:02,886 --> 00:12:04,746
mentioning it to be sorted by


315
00:12:04,746 --> 00:12:06,866
date, where Siri will go ahead


316
00:12:06,866 --> 00:12:08,796
and sort all the items by date.


317
00:12:09,126 --> 00:12:10,836
And then show it to the user.


318
00:12:10,946 --> 00:12:14,026
Not just showing all the items,


319
00:12:14,316 --> 00:12:17,106
but user can also query using a


320
00:12:17,106 --> 00:12:21,106
specific type, like show just


321
00:12:21,146 --> 00:12:23,536
the notes or just the lists.


322
00:12:24,026 --> 00:12:26,066
Or show the notes I created


323
00:12:26,066 --> 00:12:26,616
yesterday.


324
00:12:27,406 --> 00:12:29,456
Or even show my completed tasks.


325
00:12:30,076 --> 00:12:32,836
There are many types we support


326
00:12:32,836 --> 00:12:33,866
under this intent.


327
00:12:34,456 --> 00:12:37,016
And the intent itself is called


328
00:12:37,136 --> 00:12:39,566
SearchForNotebookItemIntent.


329
00:12:40,646 --> 00:12:42,926
And it supports all these types.


330
00:12:43,756 --> 00:12:46,386
So user can ask if using any one


331
00:12:46,386 --> 00:12:47,646
of these and Siri will


332
00:12:47,646 --> 00:12:49,926
understand perfectly and thus


333
00:12:49,986 --> 00:12:51,126
completing the action.


334
00:12:51,646 --> 00:12:55,026
And that's all the Notes and


335
00:12:55,026 --> 00:12:58,806
Lists new APIs we have.


336
00:12:59,296 --> 00:13:02,046
Visual codes like QR codes, Bar


337
00:13:02,046 --> 00:13:04,326
Codes, are becoming very popular


338
00:13:04,326 --> 00:13:04,906
these days.


339
00:13:05,376 --> 00:13:07,466
They're being used in numerous


340
00:13:07,466 --> 00:13:09,066
ways in the apps.


341
00:13:09,166 --> 00:13:12,906
Like they're used to just open a


342
00:13:12,906 --> 00:13:14,866
web page instead of typing a


343
00:13:14,966 --> 00:13:17,266
tedious URL, especially they're


344
00:13:17,266 --> 00:13:18,466
in foreign languages.


345
00:13:19,296 --> 00:13:21,076
Just showing a QR code opens a


346
00:13:21,076 --> 00:13:21,726
web page.


347
00:13:22,396 --> 00:13:24,846
Or using them to send payment or


348
00:13:24,846 --> 00:13:26,836
request payment just by showing


349
00:13:26,836 --> 00:13:27,246
a code.


350
00:13:27,866 --> 00:13:29,456
Paying at a gas station or


351
00:13:29,456 --> 00:13:30,406
paying to friends.


352
00:13:30,836 --> 00:13:32,986
Apps are using bar codes to


353
00:13:32,986 --> 00:13:34,146
perform specific tasks.


354
00:13:34,936 --> 00:13:38,116
And not just bar codes or QR


355
00:13:38,116 --> 00:13:38,576
codes.


356
00:13:38,946 --> 00:13:40,646
We are also having codes as


357
00:13:40,706 --> 00:13:43,566
contacts in networking apps to


358
00:13:43,566 --> 00:13:45,676
connect to each other instead of


359
00:13:45,676 --> 00:13:47,946
going finding a person and then


360
00:13:47,946 --> 00:13:48,576
connecting.


361
00:13:48,866 --> 00:13:50,746
By just showing a contact code,


362
00:13:51,306 --> 00:13:52,976
we are able to connect easily.


363
00:13:53,576 --> 00:13:56,466
And starting iOS 11 Siri will be


364
00:13:56,466 --> 00:13:58,356
supporting visual codes.


365
00:13:59,186 --> 00:14:01,166
Users will now be able to say


366
00:14:01,656 --> 00:14:03,726
"Show my UnicornChat code,"


367
00:14:03,996 --> 00:14:06,266
which means Siri understands


368
00:14:06,266 --> 00:14:07,416
that this is a visual code


369
00:14:07,416 --> 00:14:09,106
intent, and then pass on the


370
00:14:09,106 --> 00:14:11,036
information to your app.


371
00:14:11,326 --> 00:14:12,746
Whereas if the code could -- we


372
00:14:12,746 --> 00:14:14,006
support different types of


373
00:14:14,116 --> 00:14:16,516
codes, depending upon what app


374
00:14:16,576 --> 00:14:18,246
gives us, we share it back to


375
00:14:18,246 --> 00:14:18,756
the user.


376
00:14:18,866 --> 00:14:21,986
And the intent that can be used


377
00:14:22,056 --> 00:14:23,696
to this functionality is


378
00:14:24,076 --> 00:14:26,226
INGetVisualCodeIntent.


379
00:14:26,916 --> 00:14:28,936
It has one property type,


380
00:14:29,296 --> 00:14:31,926
visualCodeType, which supports


381
00:14:32,186 --> 00:14:34,076
-- it could be a contact or a


382
00:14:34,076 --> 00:14:36,586
request payment or send payment.


383
00:14:37,516 --> 00:14:39,846
By registering to this intent


384
00:14:40,146 --> 00:14:42,746
users will be able to ask Siri


385
00:14:42,746 --> 00:14:44,346
to show the visual codes of any


386
00:14:44,346 --> 00:14:46,246
of these types in their favorite


387
00:14:47,756 --> 00:14:47,856
apps.


388
00:14:48,266 --> 00:14:49,826
Now I invite my colleague and


389
00:14:49,826 --> 00:14:52,886
friend Tin over to show you this


390
00:14:52,886 --> 00:14:53,486
in action.


391
00:14:55,516 --> 00:14:58,936
[ Applause ]


392
00:14:59,436 --> 00:15:00,286
>> Thank you Sirisha.


393
00:15:01,186 --> 00:15:01,776
Hi everybody.


394
00:15:01,906 --> 00:15:02,686
My name is Tim.


395
00:15:02,686 --> 00:15:04,106
And I'm engineer on the Siri


396
00:15:04,106 --> 00:15:04,736
Client Team.


397
00:15:05,556 --> 00:15:07,546
So last year at WWDC we


398
00:15:07,946 --> 00:15:09,076
introduced an app called


399
00:15:09,226 --> 00:15:10,076
UnicornChat.


400
00:15:10,156 --> 00:15:10,906
It was great.


401
00:15:11,296 --> 00:15:13,196
Let our unicorn friends, like


402
00:15:13,196 --> 00:15:15,036
Celestra here, send messages to


403
00:15:15,036 --> 00:15:15,976
Sparkle Sparkly.


404
00:15:16,436 --> 00:15:17,046
And it was great.


405
00:15:17,626 --> 00:15:18,796
This year we want to add the


406
00:15:18,796 --> 00:15:20,436
brand new Visual Code Intent


407
00:15:20,436 --> 00:15:21,446
support to the app.


408
00:15:21,496 --> 00:15:22,846
And it's super simple.


409
00:15:23,516 --> 00:15:24,906
So the first thing we want to do


410
00:15:25,086 --> 00:15:25,926
is we want to make sure to


411
00:15:25,926 --> 00:15:27,806
modify our info.plist.


412
00:15:28,956 --> 00:15:30,816
If your app hasn't yet adopted


413
00:15:30,816 --> 00:15:32,996
SiriKit, all you need to do is


414
00:15:32,996 --> 00:15:34,106
to go and create in it


415
00:15:34,106 --> 00:15:35,946
IntentsExtensionTarget in your


416
00:15:35,946 --> 00:15:37,366
project, and you'll have the


417
00:15:37,366 --> 00:15:39,266
info.plist, which you can edit.


418
00:15:39,976 --> 00:15:42,016
Once you have it, go ahead and


419
00:15:42,016 --> 00:15:43,516
add under the Intents Support


420
00:15:43,516 --> 00:15:45,926
Key the new visuaCodeIntent.


421
00:15:47,716 --> 00:15:49,926
The next thing that's important


422
00:15:49,926 --> 00:15:51,366
to notice is your principal


423
00:15:51,366 --> 00:15:51,896
class.


424
00:15:52,396 --> 00:15:53,896
The principal class is where


425
00:15:54,096 --> 00:15:55,666
Siri will call into your app and


426
00:15:55,666 --> 00:15:57,136
ask you to begin handling your


427
00:15:57,136 --> 00:15:57,556
intent.


428
00:15:57,846 --> 00:15:58,726
And that's where we're going to


429
00:15:58,726 --> 00:16:00,456
begin modifying our application.


430
00:16:01,716 --> 00:16:04,706
I'm also going to modify the


431
00:16:04,856 --> 00:16:07,086
intents extension scheme and


432
00:16:07,126 --> 00:16:08,976
fill out this field Siri Intent


433
00:16:08,976 --> 00:16:09,376
Query.


434
00:16:09,506 --> 00:16:11,386
I can prepopulate it with text


435
00:16:11,546 --> 00:16:13,126
to show my UnicornChat code.


436
00:16:13,686 --> 00:16:15,316
This way every single time I


437
00:16:15,316 --> 00:16:16,896
build and run, Siri will


438
00:16:16,896 --> 00:16:18,086
prepopulate that text.


439
00:16:18,086 --> 00:16:19,076
I don't need to speak to it


440
00:16:19,076 --> 00:16:19,926
every single time.


441
00:16:20,016 --> 00:16:21,356
This will make debugging and


442
00:16:21,356 --> 00:16:22,786
development much faster.


443
00:16:23,696 --> 00:16:24,326
Let's code now.


444
00:16:24,946 --> 00:16:25,346
Thank you.


445
00:16:26,081 --> 00:16:28,081
[ Applause ]


446
00:16:28,146 --> 00:16:30,976
Let's take a look at the demo.


447
00:16:36,786 --> 00:16:39,026
So here I am in my principal


448
00:16:39,026 --> 00:16:40,616
class of my intents extension


449
00:16:40,676 --> 00:16:41,596
for UnicornChat.


450
00:16:41,656 --> 00:16:42,926
And we're already hailing the


451
00:16:42,926 --> 00:16:43,886
SendMessageIntent.


452
00:16:44,336 --> 00:16:45,736
So let's go ahead now and handle


453
00:16:45,736 --> 00:16:47,246
that VisualCodeIntent.


454
00:16:51,176 --> 00:16:52,886
It's pretty easy.


455
00:16:53,576 --> 00:16:55,136
If you're handling multiple


456
00:16:55,136 --> 00:16:56,696
intents within your application,


457
00:16:57,066 --> 00:16:58,426
it's a great idea to split them


458
00:16:58,426 --> 00:17:00,076
up across multiple classes.


459
00:17:00,646 --> 00:17:01,986
This separates your logic and


460
00:17:01,986 --> 00:17:03,526
makes things easier to test and


461
00:17:03,526 --> 00:17:03,916
debug.


462
00:17:03,916 --> 00:17:05,886
So let's go now into our


463
00:17:05,886 --> 00:17:07,496
VisualCodeIntentHandler class.


464
00:17:13,306 --> 00:17:14,866
As a reminder, you need to do


465
00:17:15,195 --> 00:17:16,215
three things when you're


466
00:17:16,215 --> 00:17:18,705
handling a SiriKit intent.


467
00:17:19,435 --> 00:17:20,665
The first thing you want to do


468
00:17:20,665 --> 00:17:21,955
is to resolve your intent.


469
00:17:22,486 --> 00:17:23,425
Resolving gives you an


470
00:17:23,425 --> 00:17:25,886
opportunity to customize Siri's


471
00:17:25,886 --> 00:17:27,076
properties and how it handles


472
00:17:27,116 --> 00:17:28,246
the properties of the intent.


473
00:17:29,256 --> 00:17:30,896
Second, is Confirm.


474
00:17:31,546 --> 00:17:33,276
Confirm gives you the place to


475
00:17:33,276 --> 00:17:35,616
tell Siri a ready signal, that


476
00:17:35,616 --> 00:17:36,356
you're ready to handle the


477
00:17:36,356 --> 00:17:37,566
intent, as well as do


478
00:17:37,566 --> 00:17:38,246
validation.


479
00:17:39,226 --> 00:17:40,656
Finally, you'll just go ahead


480
00:17:40,656 --> 00:17:41,636
and handle your intent.


481
00:17:42,086 --> 00:17:44,016
For this VisualCodeIntent, we'll


482
00:17:44,016 --> 00:17:45,566
return an image and tell Siri to


483
00:17:45,566 --> 00:17:46,376
display it.


484
00:17:47,126 --> 00:17:48,186
So let's go ahead and get


485
00:17:48,186 --> 00:17:48,556
started.


486
00:17:52,396 --> 00:17:55,346
I'll make my class conform to


487
00:17:55,346 --> 00:17:56,906
the INGetVisualCodeIntent


488
00:17:56,906 --> 00:17:57,706
handling protocol.


489
00:17:58,006 --> 00:18:00,266
And the compiler's telling me I


490
00:18:00,266 --> 00:18:01,846
need to implement some required


491
00:18:01,846 --> 00:18:02,306
methods.


492
00:18:02,946 --> 00:18:05,226
Go ahead and do that.


493
00:18:07,396 --> 00:18:09,326
So the only required method is


494
00:18:09,326 --> 00:18:10,166
the Handle method.


495
00:18:10,166 --> 00:18:12,146
But we strongly recommend you


496
00:18:12,146 --> 00:18:13,596
implement both Resolve and


497
00:18:13,596 --> 00:18:14,156
Confirm.


498
00:18:14,156 --> 00:18:15,426
This is going to give you the


499
00:18:15,426 --> 00:18:17,116
most control and customization


500
00:18:17,216 --> 00:18:18,846
over your user's behavior within


501
00:18:18,846 --> 00:18:19,266
Siri.


502
00:18:23,146 --> 00:18:23,986
I'm going to move this out of


503
00:18:23,986 --> 00:18:24,546
the way for now.


504
00:18:24,546 --> 00:18:26,236
And we'll implement Resolve


505
00:18:26,236 --> 00:18:26,676
first.


506
00:18:30,616 --> 00:18:32,806
Again, resolution is where you


507
00:18:32,806 --> 00:18:34,656
customize your behavior for


508
00:18:34,656 --> 00:18:36,196
Siri's properties of the intent.


509
00:18:36,646 --> 00:18:38,076
For the VisualCodeIntent,


510
00:18:38,186 --> 00:18:39,576
there's only one property, and


511
00:18:39,656 --> 00:18:40,886
that's the VisualCodeType.


512
00:18:41,556 --> 00:18:42,866
As Sirisha mentioned, it could


513
00:18:42,866 --> 00:18:44,946
be a contact code, a payment


514
00:18:44,946 --> 00:18:47,446
request code, payment send code.


515
00:18:48,266 --> 00:18:49,586
So let's implement our custom


516
00:18:49,586 --> 00:18:51,000
logic now.


517
00:19:01,826 --> 00:19:03,706
Here, if the user asks for a


518
00:19:03,746 --> 00:19:05,486
contact code, we'll tell Siri


519
00:19:05,486 --> 00:19:06,346
we're going to handle it


520
00:19:06,346 --> 00:19:08,176
successfully as a contact code


521
00:19:08,176 --> 00:19:08,466
type.


522
00:19:09,416 --> 00:19:10,856
If the user doesn't specify


523
00:19:10,856 --> 00:19:12,366
which kind of code they want,


524
00:19:12,906 --> 00:19:14,906
like they say "Show my code"


525
00:19:14,906 --> 00:19:16,826
using UnicornChat, Siri will


526
00:19:16,826 --> 00:19:19,196
populate the type as unknown.


527
00:19:19,566 --> 00:19:20,856
And here we can customize the


528
00:19:20,856 --> 00:19:22,796
behavior and also tell Siri we


529
00:19:22,796 --> 00:19:24,206
want to handle that as a contact


530
00:19:24,206 --> 00:19:24,656
code type.


531
00:19:25,936 --> 00:19:27,556
We won't support Payment Send or


532
00:19:27,556 --> 00:19:29,246
Payment Request in our demo app.


533
00:19:29,696 --> 00:19:30,816
So we'll tell Siri it's


534
00:19:30,816 --> 00:19:31,596
unsupported.


535
00:19:31,856 --> 00:19:33,816
And when we do so, if the user


536
00:19:33,816 --> 00:19:35,556
asks for a payment code, Siri


537
00:19:35,556 --> 00:19:36,866
will intelligently dial out to


538
00:19:36,866 --> 00:19:38,586
the user in all the languages


539
00:19:38,706 --> 00:19:39,566
that Siri supports.


540
00:19:39,856 --> 00:19:41,006
We don't have to write a single


541
00:19:41,006 --> 00:19:41,326
line.


542
00:19:41,326 --> 00:19:42,996
So that's the power of SiriKit.


543
00:19:45,016 --> 00:19:46,206
Now we're done resolving the


544
00:19:46,206 --> 00:19:46,706
properties.


545
00:19:47,266 --> 00:19:49,166
Let's go ahead and confirm this.


546
00:19:54,036 --> 00:19:56,036
So confirmation, again, is where


547
00:19:56,036 --> 00:19:57,586
we give Siri that ready signal.


548
00:19:57,726 --> 00:19:59,066
And it's a great place to do


549
00:19:59,066 --> 00:19:59,736
validation.


550
00:20:00,816 --> 00:20:02,436
So we want to make sure that our


551
00:20:02,636 --> 00:20:04,896
Unicorn user has a valid and


552
00:20:04,896 --> 00:20:06,246
active account before we show


553
00:20:06,246 --> 00:20:07,186
that contact code.


554
00:20:07,806 --> 00:20:09,376
If they do, we'll go ahead and


555
00:20:09,376 --> 00:20:11,606
return Ready response code to


556
00:20:11,606 --> 00:20:12,006
Siri.


557
00:20:12,006 --> 00:20:14,466
But what happens if the user


558
00:20:14,466 --> 00:20:15,636
doesn't have a valid account?


559
00:20:16,316 --> 00:20:17,846
Well, it'd be great to launch


560
00:20:17,846 --> 00:20:19,596
our app and be able to perhaps


561
00:20:19,636 --> 00:20:20,896
ask them to sign up or


562
00:20:20,896 --> 00:20:21,936
reactivate their account.


563
00:20:21,936 --> 00:20:23,526
And we can do that using a


564
00:20:23,526 --> 00:20:24,706
custom user activity.


565
00:20:29,106 --> 00:20:30,326
So we'll create a custom user


566
00:20:30,326 --> 00:20:31,876
activity with a custom user info


567
00:20:31,876 --> 00:20:33,166
dictionary with our error


568
00:20:33,166 --> 00:20:33,806
specified.


569
00:20:33,806 --> 00:20:35,356
And we'll turn to Siri


570
00:20:35,576 --> 00:20:37,346
failureRequiringAppLaunch and


571
00:20:37,346 --> 00:20:38,386
pass the user activity.


572
00:20:39,046 --> 00:20:41,666
Now, if the user asks for a code


573
00:20:41,666 --> 00:20:42,936
and they haven't signed up or


574
00:20:42,936 --> 00:20:45,086
their account's inactive, Siri


575
00:20:45,086 --> 00:20:47,036
will show an error and give the


576
00:20:47,036 --> 00:20:48,546
user an opportunity to launch


577
00:20:48,546 --> 00:20:49,196
the app.


578
00:20:49,196 --> 00:20:50,986
And if they launch the app, the


579
00:20:51,366 --> 00:20:53,036
user activity is passed on to


580
00:20:53,036 --> 00:20:53,346
the app.


581
00:20:53,386 --> 00:20:54,726
And then you can extract that


582
00:20:54,726 --> 00:20:56,286
information, ask them to sign


583
00:20:56,286 --> 00:20:56,496
up.


584
00:20:56,746 --> 00:20:57,896
Make sure they can connect with


585
00:20:57,896 --> 00:20:59,006
their Unicorn friends.


586
00:20:59,686 --> 00:21:02,926
So now we're done with Confirm.


587
00:21:03,336 --> 00:21:10,226
Let's go and handle this.


588
00:21:10,426 --> 00:21:12,236
Handle's very straightforward.


589
00:21:12,406 --> 00:21:13,246
We're just going to return a


590
00:21:13,246 --> 00:21:15,246
success code to Siri in the


591
00:21:15,246 --> 00:21:15,926
response.


592
00:21:15,926 --> 00:21:17,146
And we'll set the visual code


593
00:21:17,216 --> 00:21:18,776
image property on that response


594
00:21:19,026 --> 00:21:20,626
to be our contact code image.


595
00:21:21,486 --> 00:21:22,526
So this looks pretty good.


596
00:21:23,166 --> 00:21:24,966
Let's build and run now.


597
00:21:35,366 --> 00:21:36,866
It's prepopulated my request.


598
00:21:39,596 --> 00:21:40,396
And there we have it.


599
00:21:40,666 --> 00:21:41,886
Our brand new visual code.


600
00:21:42,016 --> 00:21:43,426
Looks great.


601
00:21:44,516 --> 00:21:46,676
[ Applause ]


602
00:21:47,176 --> 00:21:48,336
So let's switch back now to


603
00:21:48,336 --> 00:21:50,626
slides and recap.


604
00:22:06,046 --> 00:22:07,476
So when supporting intents, all


605
00:22:07,476 --> 00:22:08,886
you need to do is remember to


606
00:22:08,886 --> 00:22:10,356
modify your info.plist.


607
00:22:10,746 --> 00:22:12,226
Again, if you don't have an


608
00:22:12,226 --> 00:22:13,696
info.plist, just go ahead and


609
00:22:13,696 --> 00:22:15,256
create a new Intents Extension


610
00:22:15,256 --> 00:22:16,616
Target in your app and you can


611
00:22:16,616 --> 00:22:17,136
edit it.


612
00:22:17,826 --> 00:22:19,876
Next, make sure to modify your


613
00:22:19,876 --> 00:22:21,606
principal class, handle that


614
00:22:21,606 --> 00:22:22,046
intent.


615
00:22:22,866 --> 00:22:25,686
Finally, Resolve, Confirm and


616
00:22:25,686 --> 00:22:26,456
Handle your intent.


617
00:22:27,016 --> 00:22:27,726
Super simple.


618
00:22:27,726 --> 00:22:29,126
All right.


619
00:22:30,046 --> 00:22:32,346
I'd like to switch gears a


620
00:22:32,346 --> 00:22:33,426
little bit and talk about


621
00:22:33,816 --> 00:22:35,986
customizing your UI within Siri.


622
00:22:37,386 --> 00:22:39,896
As a reminder, there's two types


623
00:22:39,896 --> 00:22:40,916
of extensions in Siri.


624
00:22:41,626 --> 00:22:43,096
The first type is the Intents


625
00:22:43,096 --> 00:22:44,636
Extension, which you just saw.


626
00:22:44,946 --> 00:22:46,026
It's where you do your Resolve,


627
00:22:46,266 --> 00:22:47,926
Confirm, Handle, handle your


628
00:22:47,926 --> 00:22:48,576
business logic.


629
00:22:49,326 --> 00:22:50,186
This is required.


630
00:22:50,926 --> 00:22:52,826
The second type is an Intent UI


631
00:22:52,826 --> 00:22:54,506
extension where you can use to


632
00:22:54,506 --> 00:22:55,506
configure your view.


633
00:22:55,666 --> 00:22:56,656
And this is what we're going to


634
00:22:56,656 --> 00:23:00,646
be talking about now.


635
00:23:00,816 --> 00:23:02,606
So, in iOS 10, we let you


636
00:23:02,606 --> 00:23:04,046
customize parts of your view.


637
00:23:04,516 --> 00:23:06,116
Here's a RequestWriteIntent.


638
00:23:07,446 --> 00:23:09,786
And we allowed you to customize


639
00:23:09,836 --> 00:23:11,196
certain parts of the view like


640
00:23:11,236 --> 00:23:12,966
replacing the map with your own


641
00:23:12,966 --> 00:23:13,756
custom view here.


642
00:23:13,896 --> 00:23:15,476
We really like unicorns here.


643
00:23:16,956 --> 00:23:18,456
So, this was great.


644
00:23:18,856 --> 00:23:20,196
It lets you show additional


645
00:23:20,196 --> 00:23:22,746
information, your own style.


646
00:23:23,026 --> 00:23:24,846
But we noticed sometimes there


647
00:23:24,846 --> 00:23:25,446
are issues.


648
00:23:25,706 --> 00:23:26,996
There's duplicate information,


649
00:23:27,236 --> 00:23:29,096
like this pickup location, drop


650
00:23:29,096 --> 00:23:30,606
off location are duplicated.


651
00:23:31,236 --> 00:23:32,156
Same with the fare.


652
00:23:32,686 --> 00:23:34,086
This is because you didn't have


653
00:23:34,086 --> 00:23:36,016
full control over all the visual


654
00:23:36,016 --> 00:23:37,046
elements within Siri.


655
00:23:37,946 --> 00:23:39,476
Well, this year in iOS 11 we're


656
00:23:39,566 --> 00:23:40,716
going to give you that full


657
00:23:40,716 --> 00:23:41,216
control.


658
00:23:41,346 --> 00:23:42,986
And in order to do that, I'm


659
00:23:42,986 --> 00:23:43,846
going to explain it to you a


660
00:23:43,846 --> 00:23:45,956
little bit how Siri draws its


661
00:23:45,956 --> 00:23:46,396
views.


662
00:23:46,916 --> 00:23:50,966
Siri represents its views as a


663
00:23:50,966 --> 00:23:53,116
stacked series of UI elements,


664
00:23:53,676 --> 00:23:55,736
each of which is backed by data


665
00:23:55,996 --> 00:23:57,116
called a parameter.


666
00:23:57,356 --> 00:23:58,986
So for example, the map is


667
00:23:58,986 --> 00:24:00,646
backed by a pickup location


668
00:24:00,646 --> 00:24:02,486
parameter, so on and so forth


669
00:24:02,576 --> 00:24:03,596
for the rest of their views.


670
00:24:04,136 --> 00:24:05,886
The ride option name, drop off


671
00:24:05,886 --> 00:24:07,516
location and so on.


672
00:24:08,916 --> 00:24:10,126
Here's another example.


673
00:24:11,906 --> 00:24:13,916
Here Sparkle Sparkly is coming


674
00:24:13,916 --> 00:24:15,226
to pick us up in a majestic


675
00:24:15,226 --> 00:24:15,756
unicorn.


676
00:24:15,846 --> 00:24:17,986
And he's represented by -- this


677
00:24:17,986 --> 00:24:19,096
view is represented by two


678
00:24:19,096 --> 00:24:21,056
parameters, a ride driver and a


679
00:24:21,056 --> 00:24:22,066
ride vehicle parameter.


680
00:24:22,606 --> 00:24:24,526
So some views can be represented


681
00:24:24,526 --> 00:24:26,026
by multiple parameters or sets


682
00:24:26,026 --> 00:24:26,696
of parameters.


683
00:24:27,256 --> 00:24:32,506
In iOS 11 we expose this as a


684
00:24:32,506 --> 00:24:34,326
new class called INParameter.


685
00:24:34,656 --> 00:24:36,326
And this is a class representing


686
00:24:36,326 --> 00:24:36,846
that data.


687
00:24:37,906 --> 00:24:39,426
So here's the pickup location


688
00:24:39,516 --> 00:24:40,116
INParameter.


689
00:24:41,916 --> 00:24:43,196
It's constructed using a


690
00:24:43,196 --> 00:24:44,036
parameter class.


691
00:24:44,376 --> 00:24:45,006
In this case the


692
00:24:45,006 --> 00:24:45,916
RequestRideIntent.


693
00:24:47,066 --> 00:24:48,716
And then a key path which is a


694
00:24:48,716 --> 00:24:50,766
property -- a location to a


695
00:24:50,766 --> 00:24:52,726
property on that class.


696
00:24:52,726 --> 00:24:55,616
So the parameter represents a


697
00:24:55,616 --> 00:24:57,036
sort of key to the value.


698
00:24:57,036 --> 00:24:59,146
And we want to be able to get


699
00:24:59,146 --> 00:25:00,276
the actual value, too.


700
00:25:00,976 --> 00:25:02,926
So there's a new method also on


701
00:25:02,926 --> 00:25:04,126
the INInteraction called


702
00:25:04,486 --> 00:25:05,416
parameterValue.


703
00:25:06,486 --> 00:25:08,546
When you pass the parameter into


704
00:25:08,546 --> 00:25:10,646
the interaction, you'll get back


705
00:25:10,646 --> 00:25:11,516
the actual value.


706
00:25:11,596 --> 00:25:13,516
For the pickup location, it


707
00:25:13,516 --> 00:25:15,756
would be a CL placemark object.


708
00:25:17,306 --> 00:25:18,536
Different parameters will have


709
00:25:18,536 --> 00:25:20,136
different parameter value types.


710
00:25:20,476 --> 00:25:21,536
For example, the price range


711
00:25:21,536 --> 00:25:22,386
parameter would have an


712
00:25:22,566 --> 00:25:25,026
INPriceRange type.


713
00:25:27,126 --> 00:25:29,346
So, with this concept of


714
00:25:29,346 --> 00:25:30,606
parameters, we can go from


715
00:25:30,606 --> 00:25:32,496
giving you control over a single


716
00:25:32,496 --> 00:25:35,656
view to all of the views,


717
00:25:35,956 --> 00:25:38,076
customizing them for parameters.


718
00:25:38,076 --> 00:25:39,436
And we'll walk through that now.


719
00:25:40,026 --> 00:25:43,876
This is the principal class of


720
00:25:43,876 --> 00:25:45,266
the intents UI extension.


721
00:25:45,686 --> 00:25:47,206
It conforms to


722
00:25:47,206 --> 00:25:48,706
INUIHostedViewControlling.


723
00:25:48,866 --> 00:25:49,986
This is the same as before.


724
00:25:51,056 --> 00:25:52,556
And our new method is called


725
00:25:52,606 --> 00:25:54,236
configureViewFor parameters.


726
00:25:54,726 --> 00:25:56,106
So you'll be asked to configure


727
00:25:56,106 --> 00:25:58,586
your view for a set of


728
00:25:58,736 --> 00:25:59,366
parameters.


729
00:26:00,666 --> 00:26:02,336
You'll be given an interaction


730
00:26:02,336 --> 00:26:02,756
object.


731
00:26:03,776 --> 00:26:05,086
This will let you resolve those


732
00:26:05,086 --> 00:26:05,946
parameter values.


733
00:26:06,466 --> 00:26:09,336
You'll be given a context.


734
00:26:09,516 --> 00:26:10,676
This will tell you whether


735
00:26:10,676 --> 00:26:11,916
you're being drawn within maps


736
00:26:11,946 --> 00:26:12,666
or within Siri.


737
00:26:13,246 --> 00:26:15,686
And then finally, you'll be


738
00:26:15,686 --> 00:26:16,886
given a completion block.


739
00:26:17,426 --> 00:26:18,626
And you'll call this and it has


740
00:26:18,866 --> 00:26:19,696
three parameters.


741
00:26:20,906 --> 00:26:22,316
The first is a Boolean.


742
00:26:22,766 --> 00:26:24,516
You'll return True or False


743
00:26:24,516 --> 00:26:24,736
here.


744
00:26:25,076 --> 00:26:26,956
True meaning you wish to draw a


745
00:26:26,956 --> 00:26:28,656
custom view for this set of


746
00:26:28,656 --> 00:26:29,206
parameters.


747
00:26:29,606 --> 00:26:31,556
False means you want to let Siri


748
00:26:31,556 --> 00:26:32,776
draw its default view.


749
00:26:33,956 --> 00:26:36,156
Second is the set of parameters


750
00:26:36,156 --> 00:26:37,256
that you're handling if you


751
00:26:37,256 --> 00:26:38,436
choose to return True.


752
00:26:39,486 --> 00:26:41,316
Finally, you return a size for


753
00:26:41,316 --> 00:26:42,796
your view for Siri to draw.


754
00:26:44,216 --> 00:26:45,206
Let's walk through a concrete


755
00:26:45,206 --> 00:26:48,516
example and show you how we can


756
00:26:48,516 --> 00:26:50,116
customize a Request Ride


757
00:26:50,116 --> 00:26:52,076
Interaction using parameters.


758
00:26:52,226 --> 00:26:54,016
We'll make more unicorns.


759
00:26:56,226 --> 00:26:58,736
So, on top is Siri.


760
00:26:59,376 --> 00:27:00,686
Bottom is your Intents


761
00:27:00,686 --> 00:27:01,456
UIExtension.


762
00:27:02,516 --> 00:27:03,656
You're first going to get called


763
00:27:03,986 --> 00:27:05,506
with an empty set of parameters.


764
00:27:06,296 --> 00:27:07,366
This will give you a chance to


765
00:27:07,366 --> 00:27:08,786
draw additional information,


766
00:27:09,076 --> 00:27:11,226
handle parameters up front, and


767
00:27:12,606 --> 00:27:15,986
for this case in our example,


768
00:27:15,986 --> 00:27:17,396
will return False.


769
00:27:17,396 --> 00:27:19,286
Meaning we want to let Siri draw


770
00:27:19,286 --> 00:27:20,566
the default view for this


771
00:27:20,816 --> 00:27:21,276
parameter.


772
00:27:21,716 --> 00:27:22,936
And the default view for an


773
00:27:22,936 --> 00:27:24,326
empty set of parameters is


774
00:27:24,326 --> 00:27:25,126
actually no view.


775
00:27:25,646 --> 00:27:28,186
This is how it looks like in


776
00:27:28,186 --> 00:27:28,486
code.


777
00:27:36,416 --> 00:27:38,346
Now, Siri needs to keep calling


778
00:27:38,346 --> 00:27:39,946
configureView until it resolves


779
00:27:39,946 --> 00:27:41,976
all the parameters for the


780
00:27:41,976 --> 00:27:42,566
interaction.


781
00:27:43,016 --> 00:27:44,726
So the next view -- or the next


782
00:27:44,726 --> 00:27:45,856
set of parameters is the pickup


783
00:27:45,856 --> 00:27:46,416
location.


784
00:27:46,416 --> 00:27:47,656
So it's going to ask you to


785
00:27:47,656 --> 00:27:48,766
configure your view for this


786
00:27:48,816 --> 00:27:49,226
section.


787
00:27:49,836 --> 00:27:51,246
This time we're going to turn


788
00:27:51,386 --> 00:27:51,716
True.


789
00:27:51,866 --> 00:27:53,976
We're going to tell Siri we're


790
00:27:53,976 --> 00:27:54,856
going to handle that pickup


791
00:27:54,856 --> 00:27:55,406
location.


792
00:27:55,546 --> 00:27:57,226
And then the size for our custom


793
00:27:57,226 --> 00:27:57,496
view.


794
00:27:58,146 --> 00:28:00,356
When we do this, Siri will


795
00:28:00,356 --> 00:28:02,396
replace its default view with


796
00:28:02,396 --> 00:28:03,206
our custom view.


797
00:28:03,896 --> 00:28:06,096
And it will remove all instances


798
00:28:06,096 --> 00:28:07,316
of the default view it would


799
00:28:07,316 --> 00:28:07,966
have drawn.


800
00:28:09,236 --> 00:28:10,856
Finally, it will respect the


801
00:28:10,856 --> 00:28:12,256
size that we asked for.


802
00:28:12,836 --> 00:28:15,576
So here's how it looks like in


803
00:28:15,576 --> 00:28:15,796
code.


804
00:28:17,706 --> 00:28:18,686
We'll go ahead and define our


805
00:28:18,776 --> 00:28:19,916
pickup location parameter.


806
00:28:20,516 --> 00:28:24,576
We configure our view when we're


807
00:28:24,576 --> 00:28:25,646
asked to configure for the


808
00:28:25,646 --> 00:28:26,426
pickup location.


809
00:28:26,866 --> 00:28:28,686
And tell Siri True, and we're


810
00:28:28,686 --> 00:28:29,186
handling it.


811
00:28:29,186 --> 00:28:32,486
And finally we'll move our False


812
00:28:32,486 --> 00:28:34,306
completion to an else block.


813
00:28:38,476 --> 00:28:40,256
So Siri, again, is going to keep


814
00:28:40,256 --> 00:28:41,856
calling configureView until it


815
00:28:41,856 --> 00:28:42,886
resolves all the parameters.


816
00:28:43,316 --> 00:28:44,806
Then next is the ride option


817
00:28:44,806 --> 00:28:45,076
name.


818
00:28:45,676 --> 00:28:47,406
And not only can you tell Siri


819
00:28:47,506 --> 00:28:49,426
False, to let it draw a default


820
00:28:49,426 --> 00:28:51,086
view, or configure one parameter


821
00:28:51,086 --> 00:28:52,656
at a time, you can actually tell


822
00:28:52,656 --> 00:28:54,106
Siri you want to configure


823
00:28:54,516 --> 00:28:55,766
multiple parameters at a time.


824
00:28:55,816 --> 00:28:56,746
Or all the rest of the


825
00:28:56,746 --> 00:28:57,246
parameters.


826
00:28:57,896 --> 00:28:59,366
So here we're going to tell Siri


827
00:28:59,406 --> 00:29:00,256
we're going to handle the ride


828
00:29:00,256 --> 00:29:01,846
option name and then all the


829
00:29:01,846 --> 00:29:02,666
rest of the parameters in the


830
00:29:02,666 --> 00:29:02,956
view.


831
00:29:03,866 --> 00:29:05,556
And Siri will place all those


832
00:29:05,556 --> 00:29:07,556
parameters with our custom view.


833
00:29:08,216 --> 00:29:10,046
And Siri will no longer ask us


834
00:29:10,046 --> 00:29:11,306
to configure the view any


835
00:29:11,306 --> 00:29:12,956
further because we've told it


836
00:29:12,956 --> 00:29:16,906
we're handling the parameters.


837
00:29:17,456 --> 00:29:18,416
Here's how it looks like in


838
00:29:18,416 --> 00:29:18,676
code.


839
00:29:19,636 --> 00:29:21,116
We configure our parameters.


840
00:29:22,006 --> 00:29:24,026
We've commented this part out.


841
00:29:25,736 --> 00:29:27,106
Pick up location's just like


842
00:29:27,106 --> 00:29:27,486
before.


843
00:29:29,236 --> 00:29:31,436
Here we're handling the ride


844
00:29:31,436 --> 00:29:33,326
option name and all the rest of


845
00:29:33,326 --> 00:29:33,946
the parameters.


846
00:29:34,526 --> 00:29:38,486
And then our completion, False.


847
00:29:39,626 --> 00:29:42,036
So we go from this view, which


848
00:29:42,036 --> 00:29:44,296
has duplicate methods to be able


849
00:29:44,576 --> 00:29:47,626
to control all of the views and


850
00:29:47,626 --> 00:29:48,676
all the parameters for those


851
00:29:48,676 --> 00:29:49,116
views.


852
00:29:50,586 --> 00:29:52,066
And not only can we do this type


853
00:29:52,066 --> 00:29:54,286
of layout, we can do any type of


854
00:29:54,286 --> 00:29:55,346
custom layout we want.


855
00:29:55,856 --> 00:29:57,616
We can draw some custom views.


856
00:29:57,696 --> 00:29:59,166
We can have Siri draw the rest.


857
00:29:59,166 --> 00:30:01,286
You can draw all custom views.


858
00:30:01,406 --> 00:30:02,386
Have a custom header.


859
00:30:02,686 --> 00:30:03,866
So, it's super powerful.


860
00:30:05,066 --> 00:30:06,416
So let's take a look at this


861
00:30:06,766 --> 00:30:07,906
live in Xcode.


862
00:30:08,476 --> 00:30:10,836
Customize our Unicorn Ride app.


863
00:30:11,486 --> 00:30:13,906
We're going to use a pink theme.


864
00:30:14,116 --> 00:30:16,026
Unicorns love pink.


865
00:30:16,746 --> 00:30:18,736
And we're going to handle two


866
00:30:18,736 --> 00:30:19,126
views.


867
00:30:19,256 --> 00:30:20,496
We're going to handle the fare


868
00:30:20,496 --> 00:30:21,786
and special pricing parameters


869
00:30:21,906 --> 00:30:22,596
on the top view.


870
00:30:23,046 --> 00:30:24,436
And then pickup location, drop


871
00:30:24,436 --> 00:30:25,976
off location, ride option name


872
00:30:26,046 --> 00:30:26,676
on the bottom.


873
00:30:27,206 --> 00:30:30,736
And again, I'll use the Siri


874
00:30:30,736 --> 00:30:32,616
Intent Query feature to


875
00:30:32,616 --> 00:30:34,086
prepopulate a request.


876
00:30:34,086 --> 00:30:38,396
So let's take a look at a demo


877
00:30:38,396 --> 00:30:38,626
again.


878
00:30:48,416 --> 00:30:51,146
So here I am in my principal


879
00:30:51,146 --> 00:30:52,156
class for my Intents UI


880
00:30:52,156 --> 00:30:52,716
Extension.


881
00:30:53,266 --> 00:30:54,216
It conforms to the


882
00:30:54,256 --> 00:30:55,826
INUIHostedViewControlling


883
00:30:55,826 --> 00:30:56,336
protocol.


884
00:30:56,336 --> 00:30:58,956
And let's go ahead and implement


885
00:30:58,956 --> 00:31:00,966
that new configureView method.


886
00:31:03,056 --> 00:31:05,276
The first time around, I'll


887
00:31:05,276 --> 00:31:06,786
return False to every single


888
00:31:06,786 --> 00:31:07,096
thing.


889
00:31:07,276 --> 00:31:08,466
So Siri is going to draw its


890
00:31:08,466 --> 00:31:09,966
default views for all the


891
00:31:09,966 --> 00:31:10,496
parameters.


892
00:31:10,956 --> 00:31:12,476
We can also put brake points


893
00:31:12,476 --> 00:31:14,156
here during debugging to see


894
00:31:14,656 --> 00:31:15,746
which sets of parameters we're


895
00:31:15,746 --> 00:31:16,786
getting called for in which


896
00:31:16,786 --> 00:31:17,876
order for the interaction as


897
00:31:17,876 --> 00:31:18,226
well.


898
00:31:19,316 --> 00:31:20,866
Let's build and run this.


899
00:31:40,096 --> 00:31:40,716
All right.


900
00:31:41,166 --> 00:31:42,716
We've got our default view here


901
00:31:42,716 --> 00:31:44,546
because we've told Siri False to


902
00:31:44,546 --> 00:31:45,326
all the parameters.


903
00:31:46,126 --> 00:31:47,946
This isn't very Unicorny, so


904
00:31:47,946 --> 00:31:49,376
let's get started and make it


905
00:31:49,946 --> 00:31:50,606
more pink.


906
00:31:51,096 --> 00:31:52,246
Let's take care of that fare and


907
00:31:52,246 --> 00:31:53,546
special pricing parameters.


908
00:31:54,126 --> 00:31:57,366
So back in our controller.


909
00:31:58,816 --> 00:32:02,376
We'll define parameters that


910
00:32:02,376 --> 00:32:03,666
we're handling, fare and special


911
00:32:03,666 --> 00:32:04,036
pricing.


912
00:32:16,136 --> 00:32:16,916
We'll handle our parameters and


913
00:32:17,006 --> 00:32:18,376
then extract the real values for


914
00:32:18,376 --> 00:32:19,936
these parameters from the


915
00:32:19,936 --> 00:32:22,896
interaction object on that first


916
00:32:22,896 --> 00:32:24,136
call when Siri asks us to


917
00:32:24,136 --> 00:32:26,076
configure for an empty set of


918
00:32:27,436 --> 00:32:27,706
parameters.


919
00:32:35,136 --> 00:32:36,476
Next, we'll take our parameter


920
00:32:36,476 --> 00:32:38,456
values, go ahead and use it to


921
00:32:38,456 --> 00:32:39,966
configure our Unicorn Ride View.


922
00:32:40,506 --> 00:32:41,916
And then we'll tell Siri we're


923
00:32:41,916 --> 00:32:43,176
handling the custom view for


924
00:32:43,176 --> 00:32:44,756
these parameters, and then the


925
00:32:44,756 --> 00:32:45,216
size.


926
00:32:48,206 --> 00:32:50,636
Go ahead and move this to an


927
00:32:50,636 --> 00:32:51,196
else block.


928
00:32:51,666 --> 00:32:56,166
Let's build it around this.


929
00:33:12,316 --> 00:33:13,966
And it's looking a lot better.


930
00:33:14,056 --> 00:33:15,616
We got our pink view here


931
00:33:15,786 --> 00:33:16,906
handling the fare and special


932
00:33:16,906 --> 00:33:17,376
pricing.


933
00:33:17,796 --> 00:33:19,266
And because we've returned False


934
00:33:19,266 --> 00:33:20,306
to the rest of the parameters,


935
00:33:20,566 --> 00:33:22,146
Siri's drawing the default views


936
00:33:22,326 --> 00:33:24,106
for pickup location, drop off


937
00:33:24,106 --> 00:33:25,596
location, ride option name.


938
00:33:26,026 --> 00:33:27,496
So to fully customize our view,


939
00:33:27,766 --> 00:33:28,636
let's go ahead and take care of


940
00:33:28,636 --> 00:33:29,616
the rest of the parameters.


941
00:33:39,476 --> 00:33:41,316
Here we're just defining the


942
00:33:41,316 --> 00:33:43,146
rest of our parameters, just


943
00:33:43,196 --> 00:33:44,696
like before.


944
00:33:51,566 --> 00:33:52,746
Once again, we're configuring


945
00:33:52,746 --> 00:33:53,156
our view.


946
00:33:53,466 --> 00:33:54,546
When Siri asks for the pickup


947
00:33:54,546 --> 00:33:56,466
location, extracting the real


948
00:33:56,466 --> 00:33:58,266
values using the parameterValue


949
00:33:58,266 --> 00:33:59,396
method for the interaction.


950
00:34:08,686 --> 00:34:09,985
Finally we'll use those values,


951
00:34:10,266 --> 00:34:11,746
again, configure our Unicorn


952
00:34:11,746 --> 00:34:12,795
Ride View for these last


953
00:34:12,795 --> 00:34:14,326
parameters and tell Siri we're


954
00:34:14,326 --> 00:34:15,936
handling them with our custom


955
00:34:15,936 --> 00:34:16,315
size.


956
00:34:17,275 --> 00:34:18,096
This looks pretty good.


957
00:34:18,716 --> 00:34:20,396
So let's build and run this one


958
00:34:21,406 --> 00:34:21,476
now.


959
00:34:35,496 --> 00:34:37,456
And now we've got our fully


960
00:34:37,616 --> 00:34:39,985
Unicorny custom ride view.


961
00:34:40,996 --> 00:34:41,815
So that looks great.


962
00:34:43,516 --> 00:34:48,666
[ Applause ]


963
00:34:49,166 --> 00:34:50,335
Let's go back to the slides.


964
00:34:51,196 --> 00:34:55,246
Just to recap, when configuring


965
00:34:55,246 --> 00:34:57,696
your view for parameters, know


966
00:34:57,696 --> 00:34:59,036
that you'll be called multiple


967
00:34:59,036 --> 00:35:01,306
times to configure your view.


968
00:35:01,686 --> 00:35:02,766
You're first going to be called


969
00:35:03,046 --> 00:35:04,316
with an empty set of parameters.


970
00:35:04,656 --> 00:35:06,456
So again, you can draw


971
00:35:06,456 --> 00:35:08,346
additional info, your own custom


972
00:35:08,346 --> 00:35:08,686
header.


973
00:35:08,816 --> 00:35:09,566
Or you can even handle


974
00:35:09,566 --> 00:35:10,666
parameters up front here.


975
00:35:12,216 --> 00:35:13,966
You'll be called in order for a


976
00:35:13,966 --> 00:35:15,476
set of parameters for a given


977
00:35:15,476 --> 00:35:16,146
interaction.


978
00:35:16,686 --> 00:35:17,966
You'll be able to find the set


979
00:35:17,966 --> 00:35:19,346
of parameters in the order in an


980
00:35:19,346 --> 00:35:20,536
upcoming update to the


981
00:35:20,536 --> 00:35:21,876
documentation.


982
00:35:23,216 --> 00:35:25,056
Finally, just go ahead and


983
00:35:25,056 --> 00:35:26,756
handle your parameters, return


984
00:35:26,756 --> 00:35:28,166
the size up to Siri and draw


985
00:35:28,166 --> 00:35:28,506
your view.


986
00:35:29,676 --> 00:35:34,186
In an upcoming seed we're going


987
00:35:34,186 --> 00:35:34,876
to add a parameter to the


988
00:35:34,876 --> 00:35:36,776
configureView method called


989
00:35:36,776 --> 00:35:37,816
Interactive Behavior.


990
00:35:38,606 --> 00:35:40,216
So certain views and certain


991
00:35:40,216 --> 00:35:41,646
parameters have interactivity


992
00:35:41,646 --> 00:35:42,516
associated with them.


993
00:35:42,566 --> 00:35:44,396
So for example, the map, you can


994
00:35:44,396 --> 00:35:46,026
tap it, you'll get another view.


995
00:35:46,296 --> 00:35:47,346
That's like a next view.


996
00:35:48,066 --> 00:35:49,496
Certain views may launch your


997
00:35:49,496 --> 00:35:49,746
app.


998
00:35:50,326 --> 00:35:51,546
So the Interactive Behavior


999
00:35:51,546 --> 00:35:52,966
parameter will give you hints


1000
00:35:53,086 --> 00:35:55,066
about the type of interaction


1001
00:35:55,066 --> 00:35:56,136
that's available for these


1002
00:35:56,176 --> 00:35:56,686
parameters.


1003
00:35:56,846 --> 00:35:58,016
And you can use that to


1004
00:35:58,256 --> 00:35:59,846
customize your view as well.


1005
00:36:00,366 --> 00:36:02,776
There will also be another


1006
00:36:02,776 --> 00:36:04,666
method called Description of


1007
00:36:04,666 --> 00:36:06,166
Interface Parameters on your


1008
00:36:06,166 --> 00:36:07,906
Intents UIExtension Context,


1009
00:36:08,236 --> 00:36:09,176
which you can use during


1010
00:36:09,176 --> 00:36:11,056
debugging in order to printout


1011
00:36:11,406 --> 00:36:12,766
the order of parameters and the


1012
00:36:12,766 --> 00:36:15,626
set of parameters during a give


1013
00:36:16,416 --> 00:36:16,746
interaction.


1014
00:36:16,746 --> 00:36:18,726
So, this is the brand new


1015
00:36:19,216 --> 00:36:20,246
INInteraction API.


1016
00:36:20,766 --> 00:36:21,706
It's super powerful.


1017
00:36:21,706 --> 00:36:23,126
And we can't wait to see what


1018
00:36:23,126 --> 00:36:24,136
you guys build with it.


1019
00:36:24,526 --> 00:36:25,576
I'm going to hand it back to


1020
00:36:25,576 --> 00:36:26,746
Sirisha to talk about some


1021
00:36:26,746 --> 00:36:27,636
additional enhancements.


1022
00:36:28,016 --> 00:36:28,346
Thank you.


1023
00:36:29,516 --> 00:36:33,676
[ Applause ]


1024
00:36:34,176 --> 00:36:34,896
>> Thank you, Tin.


1025
00:36:35,886 --> 00:36:37,636
Along with adding more domains


1026
00:36:38,076 --> 00:36:39,696
and the powerful parameters Tin


1027
00:36:39,696 --> 00:36:41,296
just introduced, we've spent a


1028
00:36:41,296 --> 00:36:43,286
lot of time enhancing our


1029
00:36:43,286 --> 00:36:44,426
systems and APIs.


1030
00:36:44,426 --> 00:36:47,256
I'm not going to go over all of


1031
00:36:47,326 --> 00:36:48,816
them, but I want to talk about


1032
00:36:48,896 --> 00:36:49,706
two of them.


1033
00:36:50,586 --> 00:36:52,576
First, I'll cover Background


1034
00:36:52,576 --> 00:36:54,176
Workout App Intent Handling, an


1035
00:36:54,476 --> 00:36:57,406
ability to start workout apps in


1036
00:36:57,406 --> 00:36:57,976
background.


1037
00:36:59,336 --> 00:37:01,796
And Alternative App Names.


1038
00:37:02,176 --> 00:37:03,506
We'll get to it in a minute.


1039
00:37:05,106 --> 00:37:06,846
Workouts are very popular


1040
00:37:06,846 --> 00:37:07,406
intents.


1041
00:37:08,096 --> 00:37:09,866
Users love to use Siri to


1042
00:37:09,866 --> 00:37:11,086
control their workouts.


1043
00:37:11,556 --> 00:37:12,526
It's very easy.


1044
00:37:13,036 --> 00:37:15,446
The current implementation when


1045
00:37:15,446 --> 00:37:17,276
user requests any action on a


1046
00:37:17,276 --> 00:37:18,916
workout, Siri calls the


1047
00:37:18,916 --> 00:37:19,656
extension.


1048
00:37:20,186 --> 00:37:22,286
And then the extension hands it


1049
00:37:22,286 --> 00:37:23,836
over to the app.


1050
00:37:23,836 --> 00:37:26,046
And thus Siri asking permission


1051
00:37:26,046 --> 00:37:27,836
for the user if the device is


1052
00:37:27,836 --> 00:37:29,896
locked before launching the app.


1053
00:37:30,966 --> 00:37:32,676
We changed this a bit this year.


1054
00:37:33,366 --> 00:37:35,076
We wanted to make sure that


1055
00:37:35,076 --> 00:37:37,146
before launching the app we


1056
00:37:37,146 --> 00:37:38,936
launched the app instead of in


1057
00:37:39,096 --> 00:37:40,066
the foreground, but in the


1058
00:37:40,066 --> 00:37:40,696
background.


1059
00:37:41,206 --> 00:37:43,336
So users can now just talk to


1060
00:37:43,336 --> 00:37:45,236
Siri and have the app launched.


1061
00:37:45,846 --> 00:37:47,266
And this is for the Workout


1062
00:37:47,266 --> 00:37:49,146
Intents starting iOS 11.


1063
00:37:49,896 --> 00:37:50,786
Let's look in the code.


1064
00:37:51,916 --> 00:37:52,696
This is the current


1065
00:37:52,696 --> 00:37:53,616
implementation.


1066
00:37:53,946 --> 00:37:55,826
A sample code for a start


1067
00:37:55,826 --> 00:37:57,366
workout intent response.


1068
00:37:57,976 --> 00:38:00,226
The extension usually returns


1069
00:38:00,296 --> 00:38:03,156
continuing app, which when Siri


1070
00:38:03,156 --> 00:38:05,266
calls the application method in


1071
00:38:05,266 --> 00:38:06,886
the UI application delegate,


1072
00:38:08,086 --> 00:38:10,126
passing the NS userActivity,


1073
00:38:10,496 --> 00:38:12,266
prompting an app launch.


1074
00:38:13,686 --> 00:38:15,516
We've added two new things to


1075
00:38:15,516 --> 00:38:17,026
change the flow.


1076
00:38:18,176 --> 00:38:22,076
We have added a new intent


1077
00:38:22,076 --> 00:38:24,896
response code Handle an App.


1078
00:38:24,896 --> 00:38:27,126
So, you have a choice to return


1079
00:38:27,226 --> 00:38:29,276
Handle an App response code to


1080
00:38:29,276 --> 00:38:31,286
make sure that we call a new


1081
00:38:31,286 --> 00:38:32,376
application method.


1082
00:38:33,736 --> 00:38:35,116
We've added a new application


1083
00:38:35,116 --> 00:38:36,776
method on the UI Application


1084
00:38:36,776 --> 00:38:37,246
Delegate.


1085
00:38:37,556 --> 00:38:41,376
This takes IN Intent and a


1086
00:38:41,446 --> 00:38:42,586
completion handler.


1087
00:38:43,596 --> 00:38:45,576
So, when you pass in Handle an


1088
00:38:45,886 --> 00:38:47,276
App as an intent response code,


1089
00:38:47,576 --> 00:38:48,626
and implement the new


1090
00:38:48,626 --> 00:38:50,836
application method, we will call


1091
00:38:50,836 --> 00:38:52,236
the new application method,


1092
00:38:52,536 --> 00:38:54,406
prompting to launch the app in


1093
00:38:54,406 --> 00:38:55,066
the background.


1094
00:38:55,666 --> 00:38:57,046
This is very useful when the


1095
00:38:57,046 --> 00:38:59,826
users just want to start Workout


1096
00:38:59,826 --> 00:39:01,876
or pause, even through airports.


1097
00:39:02,026 --> 00:39:03,316
They don't even have to touch


1098
00:39:03,346 --> 00:39:03,916
the device.


1099
00:39:07,046 --> 00:39:07,866
Let's take a quick look at the


1100
00:39:07,866 --> 00:39:08,206
flow.


1101
00:39:08,206 --> 00:39:09,026
How does this look?


1102
00:39:09,806 --> 00:39:11,836
User wants to start a workout.


1103
00:39:12,576 --> 00:39:14,796
We launch the extension, call


1104
00:39:14,796 --> 00:39:15,676
the handle method.


1105
00:39:16,266 --> 00:39:19,286
And the extension returns the


1106
00:39:19,286 --> 00:39:21,346
new intent response code, Handle


1107
00:39:21,346 --> 00:39:23,116
an App.


1108
00:39:23,316 --> 00:39:25,006
And then Siri calls the


1109
00:39:25,006 --> 00:39:27,296
application, the new application


1110
00:39:27,436 --> 00:39:30,266
method, passing the IN Intent


1111
00:39:30,266 --> 00:39:31,826
and the completion handler.


1112
00:39:31,976 --> 00:39:33,416
And that completion block


1113
00:39:33,416 --> 00:39:35,316
inserts the intent response


1114
00:39:35,406 --> 00:39:35,656
code.


1115
00:39:36,436 --> 00:39:38,586
And then application will be


1116
00:39:38,586 --> 00:39:40,586
launched in the background and


1117
00:39:40,806 --> 00:39:42,656
passing the success back to Siri


1118
00:39:42,966 --> 00:39:44,196
with the completion of the


1119
00:39:44,296 --> 00:39:44,766
activity.


1120
00:39:45,406 --> 00:39:47,466
We believe this will make user's


1121
00:39:47,466 --> 00:39:49,516
experience more easy, more


1122
00:39:49,516 --> 00:39:51,546
seamless while controlling their


1123
00:39:51,546 --> 00:39:52,166
workouts.


1124
00:39:52,366 --> 00:39:53,766
And we're very excited for this.


1125
00:39:54,896 --> 00:39:57,296
The second enhancement I'm going


1126
00:39:57,296 --> 00:40:00,566
to talk about today is


1127
00:40:00,896 --> 00:40:04,186
alternative app names.


1128
00:40:04,806 --> 00:40:07,996
Usually user can actually call


1129
00:40:07,996 --> 00:40:09,616
an app in different names,


1130
00:40:10,076 --> 00:40:11,266
different varieties.


1131
00:40:12,056 --> 00:40:13,696
Like UnicornPay can be just


1132
00:40:13,696 --> 00:40:14,726
called as Unicorn.


1133
00:40:15,256 --> 00:40:17,336
UnicornPay or CornPay.


1134
00:40:17,856 --> 00:40:19,816
We want to make sure that we


1135
00:40:19,816 --> 00:40:21,596
understand all the variations of


1136
00:40:21,596 --> 00:40:24,686
the app names the user uses and


1137
00:40:25,366 --> 00:40:28,606
invoke the right app.


1138
00:40:28,816 --> 00:40:31,056
So, to make this happen, we've


1139
00:40:31,056 --> 00:40:32,446
introduced a new field


1140
00:40:32,866 --> 00:40:34,526
AlternativeAppName in the


1141
00:40:34,526 --> 00:40:34,876
.plist.


1142
00:40:35,386 --> 00:40:38,246
While registering in the .plist


1143
00:40:38,246 --> 00:40:39,826
you have the ability to fill in


1144
00:40:40,086 --> 00:40:41,916
all the app names that you think


1145
00:40:41,916 --> 00:40:43,756
a user might use to refer to


1146
00:40:43,756 --> 00:40:45,196
your app.


1147
00:40:45,196 --> 00:40:46,146
There is a field called


1148
00:40:46,146 --> 00:40:47,756
AlternativeAppNames which takes


1149
00:40:47,756 --> 00:40:49,336
the actual names and then the


1150
00:40:49,336 --> 00:40:51,276
pronunciation hint you can also


1151
00:40:51,276 --> 00:40:52,796
fill in, if you think that's


1152
00:40:52,796 --> 00:40:53,396
necessary.


1153
00:40:53,396 --> 00:40:56,016
This will help Siri understand


1154
00:40:56,086 --> 00:40:57,446
all the variation of the app


1155
00:40:57,446 --> 00:40:59,966
names and make sure to invoke


1156
00:41:00,226 --> 00:41:02,276
and call the right app the user


1157
00:41:02,276 --> 00:41:03,216
is expecting.


1158
00:41:06,556 --> 00:41:09,896
So far we've introduced new


1159
00:41:09,896 --> 00:41:13,086
domains, Lists and Notes, and


1160
00:41:13,086 --> 00:41:13,836
visual codes.


1161
00:41:14,976 --> 00:41:17,246
And new intents in our Payments


1162
00:41:17,246 --> 00:41:19,096
domain to support accounts.


1163
00:41:20,616 --> 00:41:23,486
Brand new APIs to give you more


1164
00:41:23,486 --> 00:41:25,536
control to customize the views.


1165
00:41:26,066 --> 00:41:27,926
My colleague Tin introduced


1166
00:41:27,926 --> 00:41:28,276
this.


1167
00:41:29,546 --> 00:41:31,686
And finally, the enhancements


1168
00:41:32,186 --> 00:41:34,126
like starting a workout app in


1169
00:41:34,126 --> 00:41:36,426
the background and also giving


1170
00:41:36,426 --> 00:41:38,606
you the ability to provide us


1171
00:41:38,606 --> 00:41:40,096
all the alternative app names


1172
00:41:40,406 --> 00:41:42,396
that you think a user can call.


1173
00:41:44,636 --> 00:41:46,406
Please visit our website


1174
00:41:46,406 --> 00:41:48,446
developer.apple.com for more


1175
00:41:48,446 --> 00:41:50,996
information under our session


1176
00:41:51,026 --> 00:41:51,866
214.


1177
00:41:52,936 --> 00:41:55,156
We have another session coming


1178
00:41:55,156 --> 00:41:56,696
up, Making Great SiriKit


1179
00:41:56,696 --> 00:41:59,106
Experiences, where our experts


1180
00:41:59,106 --> 00:42:00,686
will talk about methodologies,


1181
00:42:00,846 --> 00:42:03,376
techniques, helpful hints you


1182
00:42:03,376 --> 00:42:05,096
can use while you're writing in


1183
00:42:05,096 --> 00:42:06,086
Siri Extension.


1184
00:42:07,756 --> 00:42:09,526
Thank you all for joining us


1185
00:42:09,566 --> 00:42:10,016
today.


1186
00:42:10,236 --> 00:42:12,056
We're very excited to see all


1187
00:42:12,056 --> 00:42:13,086
the new things you're going to


1188
00:42:13,086 --> 00:42:14,786
bring using our new APIs.


1189
00:42:15,356 --> 00:42:15,736
Thank you.


1190
00:42:16,516 --> 00:42:24,690
[ Applause ]

