1
00:00:07,516 --> 00:00:17,500
[ Music ]


2
00:00:21,516 --> 00:00:25,546
[ Applause ]


3
00:00:26,046 --> 00:00:29,596
>> Hello. Welcome to the
Apple News Format Session.


4
00:00:29,646 --> 00:00:32,665
My name's Casey and today my
colleague Dan and I are going


5
00:00:32,665 --> 00:00:35,316
to show you how you can
create some beautiful


6
00:00:35,316 --> 00:00:38,836
and engaging articles for news
using the Apple News Format.


7
00:00:39,406 --> 00:00:40,966
By the end of today's session,


8
00:00:40,966 --> 00:00:42,936
you will have a detailed
understanding


9
00:00:43,026 --> 00:00:46,146
of all the design capabilities
of the Apple News Format,


10
00:00:47,116 --> 00:00:49,746
as well as an understanding
of all the code used


11
00:00:49,746 --> 00:00:50,816
to construct those stories.


12
00:00:51,866 --> 00:00:53,456
Believe it or not,
we're even going


13
00:00:53,456 --> 00:00:55,196
to identify some efficiencies


14
00:00:55,236 --> 00:00:56,786
between your design
and your markup.


15
00:00:57,726 --> 00:01:01,326
Dan's going to cover a variety
of features that will allow you


16
00:01:01,326 --> 00:01:04,256
to create some beautiful
layouts that are reminiscent


17
00:01:04,256 --> 00:01:08,016
of magazine-type style,
including features


18
00:01:08,016 --> 00:01:12,256
like drop caps, side bars,
galleries, and animations.


19
00:01:12,786 --> 00:01:16,056
With the Apple News Format,
your articles are going


20
00:01:16,056 --> 00:01:19,916
to look amazing on the iPad


21
00:01:20,036 --> 00:01:23,906
and they will effortlessly
adapt to every screen size.


22
00:01:24,086 --> 00:01:28,636
That's because the Apple News
Format is inherently responsive.


23
00:01:29,106 --> 00:01:32,406
It ensures that your stories are
always going to look their best.


24
00:01:33,406 --> 00:01:36,266
So, obviously there's a
lot of features to dive


25
00:01:36,266 --> 00:01:39,326
into here today, but first
it's really important


26
00:01:39,326 --> 00:01:40,856
that I give you a bit of context


27
00:01:40,856 --> 00:01:42,516
around the News Application
itself.


28
00:01:42,706 --> 00:01:46,066
And that's because
news is the foundation


29
00:01:46,066 --> 00:01:48,606
for how users are
going to discover


30
00:01:48,606 --> 00:01:49,906
and experience your stories.


31
00:01:50,306 --> 00:01:55,026
News is a news aggregator
application,


32
00:01:55,026 --> 00:01:59,566
it comes preinstalled on the iOS
in the US, UK, and Australia.


33
00:01:59,566 --> 00:02:01,326
Okay. That's really
stuffy though, right?


34
00:02:01,326 --> 00:02:02,346
News aggregator.


35
00:02:03,036 --> 00:02:06,886
I prefer to think of news as
a kind of matchmaker service.


36
00:02:07,776 --> 00:02:11,836
News helps readers find stories
that they're going to love.


37
00:02:12,076 --> 00:02:15,286
And that's really great news for
publishers, because that means


38
00:02:15,286 --> 00:02:18,006
that they get to find new fans.


39
00:02:18,206 --> 00:02:22,756
News makes its recommendations
based on channels and topics


40
00:02:22,756 --> 00:02:24,376
that a reader chooses to follow.


41
00:02:24,576 --> 00:02:26,796
And then it places
relevant stories


42
00:02:27,116 --> 00:02:29,126
into the readers For You feed.


43
00:02:30,226 --> 00:02:34,426
And that For You feed is
the key to content discovery


44
00:02:34,426 --> 00:02:36,386
for users, and publishers alike.


45
00:02:36,946 --> 00:02:40,316
As a reader, I can find anything
that interests me there,


46
00:02:40,316 --> 00:02:43,116
from CNN to craft beer.


47
00:02:43,726 --> 00:02:46,286
Oh, this is Eddy's For You Feed,


48
00:02:46,286 --> 00:02:51,276
so Formula 1 racing
and super cars.


49
00:02:52,056 --> 00:02:54,426
At any case, the point
is, is that there's


50
00:02:54,516 --> 00:02:56,836
such a breadth of
content in news.


51
00:02:56,836 --> 00:02:59,096
And that breadth, it
speaks to the fact


52
00:02:59,156 --> 00:03:01,196
that anybody can
publish to the News app.


53
00:03:01,996 --> 00:03:06,266
You can publish today and
begin to connect with readers


54
00:03:06,266 --> 00:03:07,336
and begin earning revenue.


55
00:03:07,336 --> 00:03:09,976
And you can do that using
several different methods.


56
00:03:09,976 --> 00:03:15,286
Including RSS, the News
Publisher Authoring Tool,


57
00:03:15,826 --> 00:03:16,916
and the Apple News Format.


58
00:03:17,556 --> 00:03:19,886
If you haven't checked it
out already, you should check


59
00:03:19,886 --> 00:03:23,056
out the Getting Started
in Apple News Session,


60
00:03:23,056 --> 00:03:24,256
it was earlier this week.


61
00:03:24,256 --> 00:03:25,686
It's available on video now.


62
00:03:25,976 --> 00:03:29,086
That session reviews all
three of these methods.


63
00:03:29,226 --> 00:03:32,466
This section focuses just
on the Apple News Format.


64
00:03:33,046 --> 00:03:35,756
And that's because the Apple
News Format is superhelpful


65
00:03:36,046 --> 00:03:38,246
for any number of things
you're going to want to do,


66
00:03:38,246 --> 00:03:40,746
including HAN authoring
articles,


67
00:03:41,316 --> 00:03:45,156
maybe creating a translation
layer on top of your CMS


68
00:03:45,156 --> 00:03:48,376
so that you can programmatically
deliver content, and articles,


69
00:03:48,376 --> 00:03:51,586
and stories from your CMS to
the Apple News Application.


70
00:03:52,196 --> 00:03:55,406
Or, even for contributing to
some of the plugins out there


71
00:03:55,406 --> 00:03:58,096
for platforms, like
WordPress or Drupal.


72
00:03:59,366 --> 00:04:02,006
Knowing the Apple News Format is
going to prove really helpful.


73
00:04:02,416 --> 00:04:04,636
And, it's just JSON.


74
00:04:05,876 --> 00:04:10,926
The Apple News Format uses
JSON to create powerful designs


75
00:04:10,926 --> 00:04:13,366
that are both performant
and responsive.


76
00:04:14,016 --> 00:04:18,326
JSON is also really great for
converting between formats,


77
00:04:18,625 --> 00:04:23,426
and it allows us to have
an extensible format.


78
00:04:23,426 --> 00:04:26,086
And that extensible nature


79
00:04:26,186 --> 00:04:29,426
of the Apple News
Format is superimportant


80
00:04:29,616 --> 00:04:33,216
because it allows us to
develop features at a quick pace


81
00:04:33,646 --> 00:04:35,456
without any additional
dependencies.


82
00:04:36,396 --> 00:04:39,216
So I feel like we've given you
a pretty good background here


83
00:04:39,216 --> 00:04:40,166
around News.


84
00:04:40,586 --> 00:04:43,786
So now we can really jump
into the nuts and bolts


85
00:04:43,856 --> 00:04:45,056
of the Apple News Format.


86
00:04:45,326 --> 00:04:46,566
Here's Dan to take it away.


87
00:04:48,176 --> 00:04:48,816
>> Thank you Casey.


88
00:04:49,866 --> 00:04:51,996
So now that you have
a sense of the world


89
00:04:51,996 --> 00:04:54,676
in which these articles
live, let's dig into the nuts


90
00:04:54,676 --> 00:04:56,356
and bolts of how you
actually make an article


91
00:04:56,676 --> 00:04:57,476
with Apple News Format.


92
00:04:57,476 --> 00:04:59,006
So what we're going to
do today is we're going


93
00:04:59,006 --> 00:05:01,916
to take this sample
article and we're going


94
00:05:01,916 --> 00:05:02,866
to tear it down to the skeleton.


95
00:05:02,866 --> 00:05:04,986
And then we're going
to build it back


96
00:05:04,986 --> 00:05:06,406
up so we understand
the fundamentals.


97
00:05:06,766 --> 00:05:08,986
We're going to make
it responsive.


98
00:05:09,056 --> 00:05:11,736
And then finally we're going
to add some animations.


99
00:05:12,956 --> 00:05:15,156
So here's our article skeleton.


100
00:05:15,996 --> 00:05:17,386
Let's dig into some of
the properties here.


101
00:05:18,416 --> 00:05:19,496
Our first property is title.


102
00:05:20,266 --> 00:05:22,116
And this is a title as
it will appear to users


103
00:05:22,116 --> 00:05:23,096
who are browsing the feed.


104
00:05:23,646 --> 00:05:27,396
Next, we have excerpt, our
first piece of metadata.


105
00:05:28,016 --> 00:05:29,586
And this is the snippet
of text that appears


106
00:05:29,646 --> 00:05:31,706
with the title also in the feed.


107
00:05:32,446 --> 00:05:34,836
And finally, you get to
define the thumbnail image,


108
00:05:35,066 --> 00:05:36,206
using a thumbnail URL.


109
00:05:37,066 --> 00:05:38,556
Now let's step back
for a second and talk


110
00:05:38,556 --> 00:05:40,296
about a few thumbnail
image tips.


111
00:05:40,806 --> 00:05:43,726
So first of all,
the accepted formats


112
00:05:43,916 --> 00:05:47,246
for thumbnails are JPEG and PNG.


113
00:05:47,516 --> 00:05:49,656
Second, definitely send
us high resolution art.


114
00:05:50,216 --> 00:05:52,866
We'll take care of
down-sampling on our backend.


115
00:05:54,176 --> 00:05:57,086
The pizel size is
300 by 300 pixels.


116
00:05:57,086 --> 00:05:59,836
If you go smaller than that your
image isn't going to show up.


117
00:05:59,836 --> 00:06:01,186
So definitely sent us your best.


118
00:06:01,316 --> 00:06:04,776
And we do have a few
moderate requirements in terms


119
00:06:04,776 --> 00:06:05,936
of width height ratios.


120
00:06:06,476 --> 00:06:08,986
So for thumbnail
images, you need to be


121
00:06:08,986 --> 00:06:10,986
at least as wide as 1 to 2.


122
00:06:11,786 --> 00:06:15,676
But no wider than 3 to 1.


123
00:06:15,876 --> 00:06:16,356
Moving on.


124
00:06:16,356 --> 00:06:18,366
Our last piece on metadata
that we're going to talk


125
00:06:18,366 --> 00:06:19,886
about today is cannonicalURL.


126
00:06:19,886 --> 00:06:22,956
And this is simply a web
version of your article.


127
00:06:23,616 --> 00:06:26,076
And if you have one, definitely
include this metadata.


128
00:06:26,566 --> 00:06:29,096
It's going to be really
important if a user say,


129
00:06:29,536 --> 00:06:30,906
shares your article to a friend


130
00:06:30,906 --> 00:06:32,246
who doesn't have
access to Apple News.


131
00:06:32,806 --> 00:06:34,286
Having that one version
to fall back


132
00:06:34,286 --> 00:06:36,056
on will make a much
better experience.


133
00:06:36,406 --> 00:06:39,546
So we talked about metadata.


134
00:06:40,196 --> 00:06:41,466
Let's dive into the content.


135
00:06:42,296 --> 00:06:44,596
So, content lives
in a top-level array


136
00:06:44,596 --> 00:06:46,486
in your article,
called components.


137
00:06:47,006 --> 00:06:50,576
And, each of your pieces
of content is represented


138
00:06:50,576 --> 00:06:53,336
by a JSON object which
is the component.


139
00:06:53,576 --> 00:06:57,246
Each one has a semantic
rule, like heading1, title,


140
00:06:57,356 --> 00:06:59,436
intro, byline, and body.


141
00:07:01,046 --> 00:07:02,646
Choosing the most
appropriate role


142
00:07:02,646 --> 00:07:04,736
for your content is
critical for accessibility.


143
00:07:04,736 --> 00:07:08,896
So we touched on semantics,


144
00:07:08,896 --> 00:07:10,876
but what if you want
to style your text?


145
00:07:11,376 --> 00:07:13,306
So this is where
component textiles come in.


146
00:07:14,396 --> 00:07:16,756
And component textiles is
a top-level dictionary.


147
00:07:16,756 --> 00:07:19,186
And we're going to
make our styles


148
00:07:19,186 --> 00:07:20,116
in three different layers.


149
00:07:20,116 --> 00:07:22,636
So the first one we're
going to do is we're going


150
00:07:22,636 --> 00:07:25,166
to make a default style, that's
going to lay the baseline styles


151
00:07:25,166 --> 00:07:26,386
for all of our text components.


152
00:07:26,766 --> 00:07:30,696
Then, we're going to define a
number of rule-specific styles


153
00:07:30,996 --> 00:07:33,006
that are going to
build on default.


154
00:07:33,776 --> 00:07:36,396
And finally we're going to
make it a non-default style.


155
00:07:36,486 --> 00:07:38,766
And this is for when you need
an exception for the rule.


156
00:07:39,416 --> 00:07:43,116
Okay, so here's our
default style.


157
00:07:43,726 --> 00:07:45,186
And let's take a look at
the properties inside.


158
00:07:45,696 --> 00:07:46,566
First we have font name.


159
00:07:47,566 --> 00:07:50,006
And one thing to keep in mind
is that font name is not,


160
00:07:50,436 --> 00:07:52,816
declare your font is not
quite the same as in say CSS.


161
00:07:53,586 --> 00:07:54,776
So keep two things in mind.


162
00:07:55,586 --> 00:07:58,846
First of all, when referencing
fonts, you need to call them


163
00:07:58,846 --> 00:08:01,956
by their postscript name,
not by their family name.


164
00:08:02,716 --> 00:08:06,046
And two, the fonts that you use
need to be available on iOS.


165
00:08:06,776 --> 00:08:09,766
So, if you wanted to channel
those sweet nineties design


166
00:08:09,766 --> 00:08:12,826
skills, you could make the real
use of the Chalkboard family,


167
00:08:13,076 --> 00:08:14,156
using these postscript names.


168
00:08:14,676 --> 00:08:17,936
Next we have text color.


169
00:08:18,406 --> 00:08:19,906
Text color takes a hex value.


170
00:08:19,906 --> 00:08:22,206
You can use the shorter
form if you want.


171
00:08:22,926 --> 00:08:25,276
Or if you need alpha, you can
use the 8-character version.


172
00:08:26,976 --> 00:08:28,146
Then we have font size.


173
00:08:28,356 --> 00:08:30,016
And font size is
declared in points.


174
00:08:30,666 --> 00:08:32,056
But we shorthand
that to an integer.


175
00:08:32,056 --> 00:08:34,426
Now, just because
it's in points,


176
00:08:34,426 --> 00:08:35,926
don't think of this
as an absolute value.


177
00:08:36,566 --> 00:08:40,356
The app's going to take your
font size and when users look


178
00:08:40,356 --> 00:08:43,775
at it on different devices, it's
going to make some adjustments


179
00:08:43,966 --> 00:08:44,976
to optimize legibility.


180
00:08:45,316 --> 00:08:49,076
And that said, a good
rule of thumb is try not


181
00:08:49,076 --> 00:08:51,076
to go below 16 points
for your body copy.


182
00:08:51,836 --> 00:08:56,056
On a similar note, line height's
also declared in points.


183
00:08:56,776 --> 00:08:58,546
And you want to define
your line height relative


184
00:08:58,546 --> 00:09:00,676
to the font size you've
chosen, we'll maintain


185
00:09:00,676 --> 00:09:02,056
that ratio across devices.


186
00:09:02,636 --> 00:09:05,446
And finally we have
length style.


187
00:09:05,686 --> 00:09:07,836
So this is where you get
to define some overrides


188
00:09:08,436 --> 00:09:12,316
for any links that appear in
the text in your component.


189
00:09:12,316 --> 00:09:13,646
Here [inaudible]
find a text color,


190
00:09:13,856 --> 00:09:15,426
but there's certainly
nothing stopping me


191
00:09:15,426 --> 00:09:16,236
from adding an underline.


192
00:09:16,236 --> 00:09:22,306
So now that we have
our default style,


193
00:09:22,476 --> 00:09:24,966
let's add our first
role specific default.


194
00:09:25,366 --> 00:09:28,816
So this one has a special
name, just like default.


195
00:09:28,816 --> 00:09:29,696
It's called default body.


196
00:09:29,696 --> 00:09:32,286
And this is going to lay
down the baseline styles


197
00:09:32,286 --> 00:09:35,946
for any body component, with
two new properties here.


198
00:09:35,946 --> 00:09:39,396
We have ParagraphSpacingBefore
and ParagraphSpacingAfter.


199
00:09:39,886 --> 00:09:42,596
And as you would hope, they
affect paragraph spacing.


200
00:09:42,596 --> 00:09:44,536
But what does it mean
to have paragraphs


201
00:09:44,536 --> 00:09:45,756
in a component based system.


202
00:09:47,356 --> 00:09:49,236
So let's take a look at
our first body component.


203
00:09:49,866 --> 00:09:52,176
And this one component actually
has two paragraphs inside of it.


204
00:09:53,406 --> 00:09:54,186
That's our first one.


205
00:09:54,526 --> 00:09:56,396
And that's our second one.


206
00:09:57,226 --> 00:10:00,206
And we divide them with two
new lines, markdown style.


207
00:10:01,176 --> 00:10:04,476
And speaking of which,
you may have noticed this


208
00:10:04,546 --> 00:10:05,516
format declaration.


209
00:10:06,086 --> 00:10:08,526
In Apple News Format, you get
to choose between plain text


210
00:10:08,576 --> 00:10:10,416
and markdown for
your text formatting.


211
00:10:11,456 --> 00:10:13,936
And in this case, we're taking
advantage of that right now


212
00:10:14,386 --> 00:10:19,336
with this markdown
style, links and text.


213
00:10:19,496 --> 00:10:21,326
Whether you choose plain
text or markdown though,


214
00:10:21,446 --> 00:10:23,466
you can use these
paragraph spacing properties


215
00:10:23,866 --> 00:10:26,396
to effect the spacing
between the paragraphs inside


216
00:10:26,396 --> 00:10:26,896
your component.


217
00:10:27,446 --> 00:10:33,296
So now that we've seen how to
make a role specific default,


218
00:10:33,336 --> 00:10:36,906
let's just quickly hammer
out the rest of them.


219
00:10:37,046 --> 00:10:39,556
So for our heading up top,
I've added some tracking,


220
00:10:39,896 --> 00:10:41,516
so to give some breathing
room to letters.


221
00:10:42,116 --> 00:10:45,356
Kicked up the size of the
title, added some color,


222
00:10:46,776 --> 00:10:48,386
lightened up the intro.


223
00:10:49,496 --> 00:10:51,396
So, subtle changes
for our byline,


224
00:10:51,686 --> 00:10:54,006
as well as for our
subheading, further down.


225
00:10:54,006 --> 00:10:57,026
So now that we got
that out of the way,


226
00:10:57,666 --> 00:10:59,036
let's move onto something
more interesting.


227
00:10:59,036 --> 00:11:00,576
Let's make our first
non-default style.


228
00:11:01,096 --> 00:11:02,976
And we're going to take this
opportunity to add a drop cap.


229
00:11:08,376 --> 00:11:14,166
So, one thing to keep in mind
is because we're doing this


230
00:11:14,166 --> 00:11:16,966
in three tiers, we've already
covered most of the styles


231
00:11:16,966 --> 00:11:18,296
that we want for
our body components


232
00:11:18,636 --> 00:11:20,126
in default and default body.


233
00:11:20,426 --> 00:11:23,196
So with this third layer,
with this custom style,


234
00:11:23,836 --> 00:11:26,316
all we're going to do is define
how the drop cap should look.


235
00:11:26,986 --> 00:11:29,636
And we're going to do that in
a special drop cap property.


236
00:11:30,736 --> 00:11:33,066
And inside of that you get to
define some style overrides


237
00:11:33,066 --> 00:11:34,056
for the first character


238
00:11:34,476 --> 00:11:35,916
in the first paragraph
of that component.


239
00:11:37,116 --> 00:11:38,346
And the interesting thing here,


240
00:11:38,686 --> 00:11:40,086
is this number of
lines property.


241
00:11:40,636 --> 00:11:42,986
This is where you get
to define how many lines


242
00:11:42,986 --> 00:11:44,526
of text your drop
cap should span.


243
00:11:45,726 --> 00:11:46,906
And as you can see
here, I'm just going


244
00:11:46,906 --> 00:11:50,626
with a very simple
two-line drop cap.


245
00:11:50,866 --> 00:11:51,796
So we made our style,


246
00:11:51,796 --> 00:11:54,066
but because there's no
semantic relationships


247
00:11:54,066 --> 00:11:57,026
between this component textile
and any particular component,


248
00:11:57,456 --> 00:11:58,216
we need to call it out.


249
00:11:59,356 --> 00:12:01,906
We do that by adding a textile
property to our component.


250
00:12:02,466 --> 00:12:04,776
And naming the name of
the style that is made.


251
00:12:04,776 --> 00:12:08,046
In this case it's called
body first drop cap.


252
00:12:08,266 --> 00:12:09,166
And once you do that,


253
00:12:09,376 --> 00:12:12,466
on the right you can see we
get our two-line drop cap.


254
00:12:14,086 --> 00:12:16,666
So, stepping back, compared
to our raw text dump


255
00:12:16,666 --> 00:12:19,146
at the beginning, now that
we have some textiles,


256
00:12:19,146 --> 00:12:20,056
things are looking a lot better.


257
00:12:20,666 --> 00:12:21,366
But it's a bit jumbled.


258
00:12:21,366 --> 00:12:23,176
We definitely need
some margins here.


259
00:12:23,496 --> 00:12:25,586
And this is where
component layouts come in.


260
00:12:26,786 --> 00:12:29,396
So, component layout is our
next top-level dictionary


261
00:12:29,396 --> 00:12:29,826
we're adding.


262
00:12:30,706 --> 00:12:32,156
And inside we can
set define layouts,


263
00:12:32,156 --> 00:12:34,146
which gives us the
ability to add top


264
00:12:34,146 --> 00:12:36,096
and bottom margins
to our components.


265
00:12:36,616 --> 00:12:38,416
We also do a few more things,
which we'll touch on layer.


266
00:12:39,946 --> 00:12:42,206
And we have flag component
layouts to a component


267
00:12:42,646 --> 00:12:43,966
by adding a layout property.


268
00:12:44,516 --> 00:12:49,336
Once we do that, we've got some
breathing room in our article,


269
00:12:49,836 --> 00:12:51,836
and topography, things
are looking a lot better.


270
00:12:52,036 --> 00:12:55,796
But, let's take advantage of
another simple and cool way


271
00:12:55,866 --> 00:12:58,316
to add more control over
our vertical spacing.


272
00:12:58,756 --> 00:12:59,526
Let's add a divider.


273
00:13:00,336 --> 00:13:02,346
And let's put it between
our heading, up top,


274
00:13:02,346 --> 00:13:06,026
and the title of the article.


275
00:13:06,026 --> 00:13:06,746
So, there's our divider.


276
00:13:07,216 --> 00:13:09,816
And you can see we have some
control over the stroke.


277
00:13:09,816 --> 00:13:11,426
We can change the
width and the color.


278
00:13:12,256 --> 00:13:14,276
But, personally what I
think is really cool,


279
00:13:14,886 --> 00:13:16,356
here is what's happening
in the layout.


280
00:13:17,236 --> 00:13:18,386
So take a look at the divider


281
00:13:18,386 --> 00:13:20,416
and see how it extends
all the way


282
00:13:20,416 --> 00:13:21,466
to the right side of the screen.


283
00:13:21,466 --> 00:13:24,076
This is nothing that's
inherent to divider.


284
00:13:24,606 --> 00:13:27,086
It's something that we're doing
inside the component layout.


285
00:13:27,466 --> 00:13:30,416
We're using a special property
called ignoreDocumentMargin.


286
00:13:31,226 --> 00:13:33,346
And you can see I've
given it a value of right,


287
00:13:33,926 --> 00:13:37,416
which means just
ignore the margin


288
00:13:37,416 --> 00:13:42,836
and go all the way to the edge.


289
00:13:42,996 --> 00:13:45,596
So now we've got
component textiles,


290
00:13:45,596 --> 00:13:47,246
we've got component
layouts, we have a divider.


291
00:13:47,756 --> 00:13:49,556
Things are looking
pretty good from,


292
00:13:49,666 --> 00:13:51,116
you know, a text perspective.


293
00:13:52,066 --> 00:13:53,366
Now it's time to
add some fun stuff.


294
00:13:54,456 --> 00:13:58,856
And, the best way to start
that is with a photo.


295
00:13:59,026 --> 00:14:00,086
So, got my photo component.


296
00:14:00,866 --> 00:14:02,506
Below that I added
a caption component.


297
00:14:02,906 --> 00:14:06,196
But, inside the footer
component,


298
00:14:06,196 --> 00:14:09,416
you might see this caption
property, which appears


299
00:14:09,416 --> 00:14:11,246
to be sort of replicating
the caption component.


300
00:14:11,776 --> 00:14:14,726
And what's really happening
here is we're defining a caption


301
00:14:14,726 --> 00:14:16,996
as it will appear if
the user taps the photo,


302
00:14:16,996 --> 00:14:19,786
goes into full screen view,
as you can see on the right.


303
00:14:21,366 --> 00:14:23,526
This is also a critical
thing to include for reasons


304
00:14:23,526 --> 00:14:27,106
of accessibility, as the caption
here is what will be read


305
00:14:27,106 --> 00:14:28,086
to VoiceOver users.


306
00:14:31,116 --> 00:14:33,406
Next, returning to our layout,


307
00:14:34,396 --> 00:14:36,146
you can see that this
photo is full bleed,


308
00:14:36,146 --> 00:14:37,986
it's going all the way from
the left side of the screen


309
00:14:37,986 --> 00:14:38,886
to the right side of the screen.


310
00:14:39,046 --> 00:14:41,016
And again, this is not
something that's inherent


311
00:14:41,016 --> 00:14:43,426
to the photo component,
we're making use


312
00:14:43,426 --> 00:14:45,466
of the ignoreDocumentMargin
property again.


313
00:14:46,326 --> 00:14:48,636
This time though, instead
of a value of right,


314
00:14:48,636 --> 00:14:49,626
I've given a value of true,


315
00:14:49,816 --> 00:14:51,766
which just means
ignore both margins.


316
00:14:52,306 --> 00:14:56,246
And then finally,
we have our URL,


317
00:14:56,416 --> 00:14:57,746
which points to the image asset.


318
00:14:58,436 --> 00:15:00,906
And I'll step back and talk
about some requirements


319
00:15:00,906 --> 00:15:02,926
for images that appear
inside the article view.


320
00:15:02,926 --> 00:15:07,456
So images can be referenced
both locally or remote,


321
00:15:07,696 --> 00:15:10,746
just use the correct scheme.


322
00:15:10,956 --> 00:15:12,506
Again, just like
with thumbnail URL,


323
00:15:12,666 --> 00:15:14,256
definitely send us
high resolution art.


324
00:15:14,766 --> 00:15:16,976
We'll take care of down
sampling on a per device basis.


325
00:15:17,546 --> 00:15:22,396
For images inside the article
view, you can use JPEG, PNG,


326
00:15:22,396 --> 00:15:25,976
as well as GIF, and we
definitely support anime GIFs.


327
00:15:26,686 --> 00:15:30,456
So, that's photo.


328
00:15:30,456 --> 00:15:31,776
But what if you have
a number of photos


329
00:15:31,776 --> 00:15:33,376
that all go together
thematically?


330
00:15:34,056 --> 00:15:36,746
This is where the gallery
component comes in.


331
00:15:37,236 --> 00:15:38,886
And implementation
is a piece of cake.


332
00:15:39,276 --> 00:15:41,106
You simply specify
a role of gallery.


333
00:15:41,996 --> 00:15:43,276
You feed it an array of images.


334
00:15:44,046 --> 00:15:45,816
And what you get is a
great user experience


335
00:15:46,026 --> 00:15:47,166
where the user can engage


336
00:15:47,166 --> 00:15:49,556
with the slide show
in the article view.


337
00:15:49,906 --> 00:15:51,846
They can tap, go to
full screen view,


338
00:15:52,256 --> 00:15:53,616
see the image specific captions.


339
00:15:54,506 --> 00:15:56,566
And when they're done, the
swipe out and continue reading.


340
00:15:57,176 --> 00:16:02,796
Now, building on that we have an
alternative to standard gallery,


341
00:16:03,146 --> 00:16:04,296
called the mosaic gallery.


342
00:16:05,156 --> 00:16:06,886
And this has the
same implementation,


343
00:16:07,326 --> 00:16:09,426
except you switch the roll
from gallery to mosaic,


344
00:16:09,966 --> 00:16:12,436
and what you get is this
really cool composite image


345
00:16:13,086 --> 00:16:14,846
of your images that you
can see on the right.


346
00:16:15,346 --> 00:16:18,156
And best of all, users
retain the ability to tap


347
00:16:18,326 --> 00:16:21,396
into the gallery and get this
same full screen experience.


348
00:16:22,116 --> 00:16:25,676
Next, we have social
media embeds.


349
00:16:26,246 --> 00:16:27,806
Apple New Format has
support for a number


350
00:16:27,806 --> 00:16:29,886
of these including
Facebook, Vine,


351
00:16:30,356 --> 00:16:31,466
and as you can see here Twitter.


352
00:16:32,256 --> 00:16:35,046
And implementation is really
as simple as knowing the URL


353
00:16:35,046 --> 00:16:36,846
of the thing that
you want to embed.


354
00:16:37,406 --> 00:16:43,236
Next, getting into
more involved embeds,


355
00:16:43,276 --> 00:16:44,606
we have support for Apple Maps.


356
00:16:45,286 --> 00:16:48,756
And here's a really good example
from Travel making cool use


357
00:16:48,756 --> 00:16:49,806
of the Apple Maps feature.


358
00:16:50,796 --> 00:16:52,896
Including one of these
is a great when you want


359
00:16:52,896 --> 00:16:56,006
to show your user a location
but give them the opportunity


360
00:16:56,006 --> 00:16:57,926
to get some context
on their own terms.


361
00:16:58,106 --> 00:17:00,446
So if you're adding all
of these great features


362
00:17:00,446 --> 00:17:02,906
and interesting content, you
might be looking for a way


363
00:17:02,906 --> 00:17:05,366
to monetize your efforts and
that's where ads come in.


364
00:17:05,606 --> 00:17:08,276
So let's just touch real
quickly on the two ways


365
00:17:08,276 --> 00:17:10,665
that you can add ads into your
Apple News Format Article.


366
00:17:11,786 --> 00:17:15,016
So first if you need control,
ad components are the way to go.


367
00:17:15,106 --> 00:17:19,116
So you literally place these in
your content, at opportunities


368
00:17:19,116 --> 00:17:20,336
where you think it
would be appropriate


369
00:17:20,336 --> 00:17:21,126
to have an ad appear.


370
00:17:21,736 --> 00:17:24,175
If you don't need that
much control, though,


371
00:17:24,976 --> 00:17:27,806
the easier option is to use
the Dynamic ads feature.


372
00:17:28,476 --> 00:17:29,956
And with this, all
you really have


373
00:17:29,956 --> 00:17:32,876
to do is specify the frequency
with which you'd like ads


374
00:17:32,876 --> 00:17:35,476
to appear, and the app will
handle placement for you.


375
00:17:36,296 --> 00:17:39,306
And so far what we have is a
really good mobile experience


376
00:17:39,306 --> 00:17:42,446
for the phone, but what happens
when we put this on the iPad?


377
00:17:43,826 --> 00:17:46,086
So our mobile first
approach, at this point,


378
00:17:46,086 --> 00:17:48,646
has left us with a few
design opportunities.


379
00:17:49,256 --> 00:17:53,246
We could be definitely making
better use of white space.


380
00:17:54,476 --> 00:17:56,776
And this is kind of like a
big, boring block of text.


381
00:17:56,776 --> 00:17:58,546
It would be nice to
add some visual variety


382
00:17:58,546 --> 00:17:59,716
to keep our readers engaged.


383
00:18:01,086 --> 00:18:03,446
And, we have a really
bad line length problem,


384
00:18:03,866 --> 00:18:06,786
especially when you put the
iPad into landscape orientation.


385
00:18:07,946 --> 00:18:10,086
So the solution to all
these problems lies


386
00:18:10,086 --> 00:18:11,736
in the Apple News
Format column system.


387
00:18:12,486 --> 00:18:15,936
And this is really our
take on the classic problem


388
00:18:15,936 --> 00:18:18,666
of the digital age, which is how
do you design for many screens.


389
00:18:19,566 --> 00:18:22,586
And of course there are
some existing methodologies.


390
00:18:23,066 --> 00:18:24,546
Notably, responsive design,


391
00:18:25,036 --> 00:18:26,626
which you react to
your screen size.


392
00:18:27,636 --> 00:18:30,246
There's mobile first design, in
which you enhance the experience


393
00:18:30,246 --> 00:18:31,296
as you gain more real estate.


394
00:18:31,876 --> 00:18:34,026
And these are both tried
and true approaches,


395
00:18:34,666 --> 00:18:37,596
but making them actually
work is tough.


396
00:18:37,596 --> 00:18:39,066
It's not easy.


397
00:18:39,066 --> 00:18:40,036
And sometimes you end


398
00:18:40,146 --> 00:18:42,816
up basically redesigning
your article, or your content


399
00:18:42,866 --> 00:18:44,636
for different situations.


400
00:18:44,986 --> 00:18:47,296
And with Apple News
Format, we really want you


401
00:18:47,296 --> 00:18:48,476
to design your article once.


402
00:18:48,986 --> 00:18:51,486
But more than that,
we want you to design


403
00:18:51,486 --> 00:18:52,666
for the richest experience.


404
00:18:53,366 --> 00:18:55,626
We want you to focus on the
big, beautiful version of it.


405
00:18:56,216 --> 00:18:59,126
And we don't want you to get
caught up in media queries,


406
00:18:59,126 --> 00:19:02,926
and breakpoints because the app
is inherently designed to handle


407
00:19:02,926 --> 00:19:04,106
that kind of scaling for you.


408
00:19:04,816 --> 00:19:07,706
So how does it work?


409
00:19:08,626 --> 00:19:11,596
Well, it starts with an iPad
in landscape orientation.


410
00:19:12,366 --> 00:19:12,886
Then what we're going


411
00:19:12,886 --> 00:19:16,626
to as content creators is
divide the screen into columns.


412
00:19:17,206 --> 00:19:21,086
Now, here I've divided it into
10, but as a content creator,


413
00:19:21,086 --> 00:19:22,746
you get to choose how many
columns you want to use.


414
00:19:23,116 --> 00:19:25,206
There's no hard and
fast mind on how many,


415
00:19:25,356 --> 00:19:28,416
just keep in mind the
more columns you add,


416
00:19:29,086 --> 00:19:33,226
the more complexity you're
adding to your design.


417
00:19:33,396 --> 00:19:35,736
So, once we've decided how
many columns in total we want


418
00:19:35,736 --> 00:19:37,596
for our article, next we have


419
00:19:37,716 --> 00:19:39,956
to assign some columns
spans to the content.


420
00:19:41,256 --> 00:19:44,286
So, in this example
here, our main block


421
00:19:44,286 --> 00:19:47,946
of body content is consuming
the first 7 of our 10 columns.


422
00:19:49,306 --> 00:19:51,836
And the caption on the
right is consuming the last.


423
00:19:51,836 --> 00:19:56,966
So then when we take that
design, and we start looking


424
00:19:56,966 --> 00:19:58,926
at it on different
orientations, different devices,


425
00:19:59,296 --> 00:20:02,266
what we see is that the app
automatically collapses the


426
00:20:02,266 --> 00:20:04,736
number of available columns
to fit the screen size.


427
00:20:05,326 --> 00:20:07,576
And then likewise,
where the real magic is,


428
00:20:08,156 --> 00:20:12,696
is how intelligently
decides, figure that how


429
00:20:12,696 --> 00:20:15,456
to adapt the components to
that new amount of real estate.


430
00:20:16,286 --> 00:20:18,596
So as you can see like when
you go to the iPad in portrait,


431
00:20:19,136 --> 00:20:21,546
things get narrower,
but then on the phone


432
00:20:21,546 --> 00:20:22,566
where that wouldn't
be appropriate,


433
00:20:23,336 --> 00:20:24,786
everything falls back
into a stacking order.


434
00:20:25,266 --> 00:20:30,666
So at this point,
you could be tempted


435
00:20:30,666 --> 00:20:31,756
to start doing some arithmetic.


436
00:20:31,756 --> 00:20:34,286
Figuring out for such and
such screen width, with such


437
00:20:34,286 --> 00:20:38,836
and such layout, what
would the column spans be?


438
00:20:39,036 --> 00:20:40,916
That can get very complicated
and kind of annoying.


439
00:20:41,526 --> 00:20:43,946
That's really not in the
spirit of Apple News Format.


440
00:20:44,226 --> 00:20:45,106
Because we want you to focus


441
00:20:45,106 --> 00:20:47,426
on the visual effects
of your designs.


442
00:20:48,356 --> 00:20:51,046
To help you do that, we
made a great OS X app called


443
00:20:51,046 --> 00:20:51,706
News Preview.


444
00:20:52,436 --> 00:20:57,296
So as a designer, or developer,
or both, you need to be able


445
00:20:57,296 --> 00:20:59,356
to iterate quickly in your
designs, and competently


446
00:20:59,356 --> 00:21:00,206
and know they're
going to look great.


447
00:21:00,206 --> 00:21:02,006
And that's where News
Preview comes in.


448
00:21:02,006 --> 00:21:05,086
Because it allows you to
see, get a visual update


449
00:21:05,086 --> 00:21:06,346
on how your articles
are going to look,


450
00:21:07,386 --> 00:21:09,336
while you're messing
around with the code.


451
00:21:09,876 --> 00:21:12,516
And best of all it
leverages the Xcode simulator


452
00:21:12,716 --> 00:21:14,166
so you can see multiple devices,


453
00:21:14,166 --> 00:21:16,756
multiple orientations
all updating live,


454
00:21:16,956 --> 00:21:18,096
simultaneously while you work.


455
00:21:19,366 --> 00:21:21,146
And it's available for
all Apple developers


456
00:21:21,146 --> 00:21:24,586
at developer.apple.com.


457
00:21:25,076 --> 00:21:27,886
So, returning to our JSON,
we talked about the concepts


458
00:21:27,886 --> 00:21:30,766
of the column system, now let's
put how we actually make these


459
00:21:30,766 --> 00:21:32,376
happen, in the article JSON.


460
00:21:32,376 --> 00:21:36,146
So now we're going to go
back to our article skeleton,


461
00:21:36,486 --> 00:21:36,956
we're going to look


462
00:21:36,956 --> 00:21:38,296
at a top-level property
called layout.


463
00:21:38,936 --> 00:21:40,376
And this is your
document layout.


464
00:21:40,786 --> 00:21:41,926
It's got four properties.


465
00:21:42,796 --> 00:21:45,296
And with these properties,
what you're saying is


466
00:21:45,396 --> 00:21:49,146
for a given width, say 1024,
for an iPad in landscape,


467
00:21:50,376 --> 00:21:53,086
I want to divide the
screen into 10 columns


468
00:21:53,726 --> 00:21:54,896
with a 20-point gutter
in between.


469
00:21:54,896 --> 00:21:57,346
And then to the left
and to the right,


470
00:21:57,346 --> 00:21:59,066
I'm going to have
an 85-point margin.


471
00:21:59,066 --> 00:22:01,426
And of course these
numbers are configurable,


472
00:22:01,486 --> 00:22:03,476
this is what was
chosen for this demo.


473
00:22:05,516 --> 00:22:07,676
Next, once we have
our document layout,


474
00:22:08,066 --> 00:22:09,846
now we need to start
applying some column spans


475
00:22:09,846 --> 00:22:11,036
to our individual components.


476
00:22:11,646 --> 00:22:15,656
And, because of the very obvious
line length legibility problem


477
00:22:15,656 --> 00:22:17,896
we had with our body components,
I'm going to focus on those.


478
00:22:18,646 --> 00:22:21,966
So, we see here on our
first body component,


479
00:22:21,966 --> 00:22:23,766
we're using a layout
named noMarginLayout.


480
00:22:24,056 --> 00:22:25,486
So let's take a look
at that definition.


481
00:22:25,486 --> 00:22:29,116
And let's add two
new properties.


482
00:22:29,896 --> 00:22:32,336
Our first new property
is columnStart.


483
00:22:32,986 --> 00:22:35,866
And this simply says, going from
left to right on the screen,


484
00:22:36,316 --> 00:22:38,816
what's the first column that
this content should occupy.


485
00:22:39,656 --> 00:22:41,346
I've chosen zero
my first column.


486
00:22:41,796 --> 00:22:46,236
Then we have columnSpan, which
unsurprisingly is where you get


487
00:22:46,236 --> 00:22:49,256
to say how many columns in
total this content should span.


488
00:22:50,096 --> 00:22:52,786
And I've set it to 10, which
is also the total number


489
00:22:52,786 --> 00:22:54,426
of columns in our document.


490
00:22:55,196 --> 00:22:56,436
And you probably won't
be surprised to see


491
00:22:56,436 --> 00:22:57,776
that nothing changed
in our article.


492
00:22:58,576 --> 00:23:01,766
The default is for all
components to expand


493
00:23:01,766 --> 00:23:03,186
to the full-width
of their containers.


494
00:23:04,636 --> 00:23:05,766
So let's make it
more interesting.


495
00:23:06,376 --> 00:23:09,906
Let's implement a centered
layout for our 10-column layout.


496
00:23:11,076 --> 00:23:12,346
That looks a lot better already.


497
00:23:13,126 --> 00:23:14,586
So, what's going on here?


498
00:23:15,706 --> 00:23:18,186
I've set it so that
the first column


499
00:23:18,186 --> 00:23:20,766
that our body content
occupies is the third column


500
00:23:21,186 --> 00:23:22,146
in our 10-column layout.


501
00:23:22,776 --> 00:23:24,236
And of course if you start


502
00:23:24,236 --> 00:23:26,096
from zero the third
column has an index of two.


503
00:23:26,456 --> 00:23:29,906
And then I've reduced
the width of the content


504
00:23:29,906 --> 00:23:32,016
so it only occupies six
out of our 10 columns.


505
00:23:32,626 --> 00:23:34,536
And that looks pretty good.


506
00:23:34,726 --> 00:23:38,836
But personally, I like a more
asymmetric design, so I'm going


507
00:23:38,836 --> 00:23:42,026
to go ahead and kick it
over to left and switch it


508
00:23:42,026 --> 00:23:43,876
to occupy the first
seven columns.


509
00:23:43,876 --> 00:23:48,436
Now, if we take this
and we start applying it


510
00:23:48,436 --> 00:23:49,466
to our other components,


511
00:23:50,426 --> 00:23:52,646
starting to see our design
really come together.


512
00:23:53,646 --> 00:23:55,836
We switch the orientation
it still looks great.


513
00:23:56,836 --> 00:23:58,686
And we've retained that
awesome level of experience


514
00:23:58,686 --> 00:24:01,176
that we had from the start.


515
00:24:02,316 --> 00:24:05,186
So our one designed scaled
seamlessly across devices.


516
00:24:05,186 --> 00:24:06,406
A piece of cake.


517
00:24:06,406 --> 00:24:10,746
And now let's take that
foundation, let's build on it.


518
00:24:11,016 --> 00:24:12,846
So before we were talking
about the fact that we had kind


519
00:24:12,846 --> 00:24:14,616
of a long block of
text, a little boring.


520
00:24:14,616 --> 00:24:16,716
We can use some visual variety.


521
00:24:16,916 --> 00:24:18,266
And of course the
classic solution


522
00:24:18,266 --> 00:24:20,116
to that problem is
to add a pullquote.


523
00:24:20,676 --> 00:24:24,656
So let's extract some text
from one of our body components


524
00:24:24,656 --> 00:24:26,496
and let's drop a pullquote in.


525
00:24:27,716 --> 00:24:32,436
Next, let's use our component
layout and take that pullquote


526
00:24:32,436 --> 00:24:35,996
and just like push it
over into the margin.


527
00:24:36,116 --> 00:24:38,616
So I chose a column start
and a column span value


528
00:24:38,876 --> 00:24:43,526
to allow the pullquote to
clear all the body components.


529
00:24:43,526 --> 00:24:46,396
And what you can see is
it successfully did that


530
00:24:46,396 --> 00:24:48,206
and then it sort of floated
up until it hit and obstacle,


531
00:24:48,866 --> 00:24:50,276
which isn't quite the
look we were going for.


532
00:24:51,076 --> 00:24:53,956
So what we need is we need
to make a visual relationship


533
00:24:54,476 --> 00:24:56,426
between our pullquote
and something.


534
00:24:56,996 --> 00:24:59,496
And fortunately, we have an
inherent semantic relationship


535
00:25:00,016 --> 00:25:02,356
between the pullquote
and the text


536
00:25:02,356 --> 00:25:03,316
from which it was extracted.


537
00:25:03,846 --> 00:25:06,576
So, what we're going
to do is we're going


538
00:25:06,576 --> 00:25:10,036
to use something called
anchoring in Apple New Format,


539
00:25:10,396 --> 00:25:13,846
and we're going to anchor our
pullquote to the body component


540
00:25:13,916 --> 00:25:15,766
that contains the
text that we've pulled


541
00:25:15,766 --> 00:25:16,676
out for the pullquote.


542
00:25:17,516 --> 00:25:20,336
Step one in doing this is we're
going to add an identifier


543
00:25:20,336 --> 00:25:23,146
to our body component
so we can call it out.


544
00:25:23,696 --> 00:25:25,416
Then we're going to
add an anchor property


545
00:25:25,916 --> 00:25:26,996
to our pullquote component.


546
00:25:27,426 --> 00:25:30,186
And inside of there, that's
where we're going to call


547
00:25:30,186 --> 00:25:31,406
out the identifier we just made.


548
00:25:32,356 --> 00:25:34,856
And then we get to
define how do we want


549
00:25:34,856 --> 00:25:36,006
to align these two things.


550
00:25:36,666 --> 00:25:38,636
So in this case what
we're saying is we want


551
00:25:38,636 --> 00:25:41,976
to align the top of our
origin, the pullquote,


552
00:25:42,926 --> 00:25:45,386
to the top of our target,
the body component.


553
00:25:47,036 --> 00:25:49,896
And once we do that, we
get a pretty cool effect.


554
00:25:50,056 --> 00:25:51,796
We've got the pullquote
hanging out in the margin,


555
00:25:52,086 --> 00:25:54,026
right next to it the most
relevant piece of content


556
00:25:54,026 --> 00:25:54,596
that it could be near.


557
00:25:55,086 --> 00:25:57,126
We have much more
interesting use of white space.


558
00:25:57,626 --> 00:26:00,656
But because we have an
inherent textual relationship


559
00:26:00,936 --> 00:26:02,066
between the pullquote
and the text


560
00:26:02,276 --> 00:26:03,586
from which it was extracted,


561
00:26:03,726 --> 00:26:05,816
we can actually take
this another step further


562
00:26:06,546 --> 00:26:09,186
and actually anchor
to the text itself.


563
00:26:09,596 --> 00:26:12,846
So this is going to
be a two-step process.


564
00:26:13,076 --> 00:26:16,146
First what we're going to do is
go back to our pullquote layout,


565
00:26:16,146 --> 00:26:18,306
and we're going to update it


566
00:26:18,306 --> 00:26:20,866
so that it overlaps the body
components by one column.


567
00:26:21,456 --> 00:26:24,766
And then we're going to
call out the range of text


568
00:26:24,886 --> 00:26:26,606
from which the pullquote
was extracted.


569
00:26:27,926 --> 00:26:31,676
And once we do that, we get this
really cool sort of embedded


570
00:26:31,676 --> 00:26:33,936
into the text pullquote look.


571
00:26:35,036 --> 00:26:38,896
And then of course when
we take that and put it


572
00:26:38,896 --> 00:26:39,886
on other orientations


573
00:26:39,886 --> 00:26:41,986
and devices it always
does the right thing,


574
00:26:42,066 --> 00:26:45,586
whether it's reducing the width,
or in the case of the phone,


575
00:26:46,056 --> 00:26:47,896
falling back into a
logical stacking order.


576
00:26:48,776 --> 00:26:54,966
So, at this point, things
are really coming together.


577
00:26:55,376 --> 00:26:57,956
We could probably call it
quits and start using this


578
00:26:58,236 --> 00:26:59,636
as a template for our content.


579
00:27:00,116 --> 00:27:03,506
But if we look at the experience
of scrolling through our article


580
00:27:03,506 --> 00:27:07,276
so far, it's kind of
missing something.


581
00:27:08,586 --> 00:27:12,136
For instance, check out this
cool article from Harper's.


582
00:27:12,876 --> 00:27:15,926
Now, watch how the body
content sort of slides


583
00:27:15,926 --> 00:27:17,306
up over the lead image.


584
00:27:17,596 --> 00:27:20,706
And how as you get to each
photo the fades in just


585
00:27:20,706 --> 00:27:21,646
as it gets to the view port.


586
00:27:22,806 --> 00:27:23,636
It's a really cool effect,


587
00:27:23,636 --> 00:27:25,456
so I think we can take
some inspiration from them.


588
00:27:26,196 --> 00:27:28,216
So let's add some
motion to our article.


589
00:27:28,216 --> 00:27:32,426
What we're going to do today is
we're going to take advantage


590
00:27:32,426 --> 00:27:34,636
of a really cool Apple News
Format feature called a


591
00:27:34,636 --> 00:27:35,346
scene animation.


592
00:27:35,346 --> 00:27:40,926
So, step one in doing this,
we're going to take our photo


593
00:27:41,096 --> 00:27:41,906
and we're going to move it


594
00:27:41,906 --> 00:27:43,716
so that it's the first
component in our article.


595
00:27:43,716 --> 00:27:46,256
Now, next what we're
going to do is we're going


596
00:27:46,256 --> 00:27:47,606
to do a little transformation.


597
00:27:47,986 --> 00:27:49,426
We're going to take this photo.


598
00:27:49,426 --> 00:27:51,636
We're going to change it
from being a photo component


599
00:27:52,086 --> 00:27:54,376
to being a background
fill on a container.


600
00:27:55,926 --> 00:27:57,696
So to do that first, we're
going to add a container.


601
00:27:57,966 --> 00:28:00,256
And we're using a semantic
container component


602
00:28:00,256 --> 00:28:00,676
called header.


603
00:28:01,766 --> 00:28:03,366
Now, nothing actually changed


604
00:28:03,366 --> 00:28:04,766
because we just have an
empty container there.


605
00:28:04,926 --> 00:28:07,676
So for debugging purposes,
I'm going to go ahead


606
00:28:07,676 --> 00:28:09,916
and add some height and
add a background color


607
00:28:10,106 --> 00:28:11,126
so we can see our container.


608
00:28:12,446 --> 00:28:14,056
There. Now we've got
a lovely gray box.


609
00:28:14,986 --> 00:28:16,546
A few things to note
in the JSON here.


610
00:28:16,936 --> 00:28:19,076
First of all, I added
the background color


611
00:28:19,376 --> 00:28:21,176
with a new property
called style.


612
00:28:21,866 --> 00:28:23,826
This allows us to find
a component style.


613
00:28:24,616 --> 00:28:25,996
And component styles
give you access


614
00:28:26,026 --> 00:28:27,496
to some higher level
design elements


615
00:28:27,496 --> 00:28:30,576
like background fills
and borders.


616
00:28:31,156 --> 00:28:34,146
The next interesting
thing here is the fact


617
00:28:34,146 --> 00:28:37,306
that it actually
defined our style inline,


618
00:28:37,476 --> 00:28:39,636
which is something I
haven't done before.


619
00:28:40,256 --> 00:28:43,316
On a technical level,
there's really no difference


620
00:28:43,316 --> 00:28:47,176
between defining things
inline, versus calling them


621
00:28:47,376 --> 00:28:50,056
out elsewhere as
a main reference.


622
00:28:50,506 --> 00:28:53,186
It's really just a matter of
organization and convenience.


623
00:28:53,576 --> 00:28:55,746
And then we have our height.


624
00:28:56,406 --> 00:28:59,066
So I've manipulated the
height on the container


625
00:28:59,226 --> 00:29:03,026
with a property called
minimumHeight inside our


626
00:29:03,026 --> 00:29:03,716
component layout.


627
00:29:04,936 --> 00:29:08,866
And I gave it a value of 44vmax.


628
00:29:09,016 --> 00:29:11,446
And what that means is we
want this container to be


629
00:29:11,446 --> 00:29:15,206
at least 44 percent of
the longest viewport side.


630
00:29:16,306 --> 00:29:20,086
And this vmax unit is one of
several special sizing units


631
00:29:20,086 --> 00:29:24,156
that are available
in Apple News Format.


632
00:29:24,206 --> 00:29:28,266
So, now that we have our lovely
size gray box, let's go ahead


633
00:29:28,266 --> 00:29:31,446
and switch it from
being a background color


634
00:29:31,616 --> 00:29:32,706
to being an image fill.


635
00:29:33,736 --> 00:29:34,786
And doing this is
a piece of cake.


636
00:29:35,196 --> 00:29:38,296
We just add a fill
property to our style.


637
00:29:38,436 --> 00:29:42,216
And now that we have that,
we can get rid of our photo.


638
00:29:42,286 --> 00:29:43,956
And we've completed
our transformation,


639
00:29:43,956 --> 00:29:46,096
we're a little be closer
to our scene animation.


640
00:29:46,746 --> 00:29:49,566
Next step, we need to
actually establish a scene.


641
00:29:49,966 --> 00:29:52,236
And the way we're
going to do that is


642
00:29:52,236 --> 00:29:56,136
by actually dividing our entire
article into two containers,


643
00:29:56,706 --> 00:29:58,336
semantic containers
called sections.


644
00:29:59,846 --> 00:30:02,966
So our first section is
going to be our scene,


645
00:30:02,966 --> 00:30:04,076
where the animation
is going to happen.


646
00:30:04,206 --> 00:30:06,206
So I'm going to put our
header container in there.


647
00:30:06,626 --> 00:30:09,486
And then everything else in
the article, I'm going to dump


648
00:30:09,486 --> 00:30:10,566
into our second section.


649
00:30:12,916 --> 00:30:14,546
Now to make our scene
actually happen.


650
00:30:14,886 --> 00:30:17,036
So, again, this is pretty easy.


651
00:30:17,036 --> 00:30:20,376
You simply add a scene
property to the first section.


652
00:30:20,896 --> 00:30:23,376
And then you define what
kind of animation you want.


653
00:30:23,956 --> 00:30:26,086
And here, I'm using one
called fading sticky header.


654
00:30:26,736 --> 00:30:28,046
And what that means
is it's going


655
00:30:28,046 --> 00:30:31,076
to take our header container,
and as the user scrolls,


656
00:30:31,076 --> 00:30:32,806
it's going to stick to
the top of the viewport,


657
00:30:32,806 --> 00:30:35,256
the rest of the article is
going to slide up over it.


658
00:30:35,256 --> 00:30:38,876
And then the background fill
on the header is going to fade.


659
00:30:39,056 --> 00:30:39,746
Let's see it in action.


660
00:30:40,976 --> 00:30:41,716
So here's our article.


661
00:30:42,046 --> 00:30:45,406
User scrolls, and the text
slides up over the image


662
00:30:45,406 --> 00:30:46,296
and starts to fade away.


663
00:30:47,246 --> 00:30:48,896
That's the gist of the effect,


664
00:30:49,386 --> 00:30:51,566
but it's not quite
what I was going for.


665
00:30:52,176 --> 00:30:55,016
We have that naked text
is sort of sliding up over


666
00:30:55,016 --> 00:30:55,896
and becoming illegible.


667
00:30:56,876 --> 00:30:57,756
Not the effect I want.


668
00:30:58,576 --> 00:31:00,416
Fortunately, the solution
is really, really easy.


669
00:31:01,016 --> 00:31:02,976
All we need to do is
add a background color


670
00:31:03,166 --> 00:31:04,056
to our second section.


671
00:31:04,056 --> 00:31:08,266
We're just going to let the
rest of the content retain


672
00:31:08,266 --> 00:31:10,016
that white background
and slide up over neatly.


673
00:31:10,506 --> 00:31:11,856
So again, let's see
it in action.


674
00:31:12,526 --> 00:31:16,096
So we still get our animation
with a fading background


675
00:31:16,666 --> 00:31:17,546
but it's still legible.


676
00:31:17,896 --> 00:31:18,976
Much better experience.


677
00:31:20,066 --> 00:31:22,096
So now that we've
dialed in our animation,


678
00:31:22,886 --> 00:31:24,366
we need to pay a
little more attention


679
00:31:24,366 --> 00:31:25,516
to some design elements.


680
00:31:25,996 --> 00:31:29,016
In our top of article experience
just to make it look nice.


681
00:31:29,586 --> 00:31:33,906
And the first issue I'd
like to tackle is the fact


682
00:31:33,906 --> 00:31:35,456
that when we moved our photo,


683
00:31:36,006 --> 00:31:38,726
suddenly the captions got
this awkwardness and a bunch


684
00:31:38,726 --> 00:31:41,126
of things between it and
the thing it describes.


685
00:31:41,796 --> 00:31:44,676
And there are a few different
approaches to this problem.


686
00:31:45,246 --> 00:31:47,846
The one I'm going to use today
is to take our anchoring skills


687
00:31:48,636 --> 00:31:51,056
and sort of kick it
out into the margin.


688
00:31:51,546 --> 00:31:55,046
So this has the effect of
making the association clearer


689
00:31:55,046 --> 00:31:56,326
with a clean vertical line.


690
00:31:56,816 --> 00:31:59,186
But also, it makes our white
space a bit more interesting


691
00:31:59,186 --> 00:31:59,516
up top.


692
00:32:00,186 --> 00:32:04,246
And then the next thing
I want to do is I want


693
00:32:04,246 --> 00:32:06,686
to take advantage of the fact
that we're using a container


694
00:32:06,686 --> 00:32:08,746
with an image fill up top
now instead of a photo.


695
00:32:08,746 --> 00:32:11,556
And one of the coolest
things about that is you get


696
00:32:11,556 --> 00:32:13,076
to put things inside
of containers.


697
00:32:13,366 --> 00:32:14,016
Mainly text.


698
00:32:14,666 --> 00:32:16,706
Meaning we can layer some
text on top of the image,


699
00:32:17,246 --> 00:32:20,406
and add a much more interesting
look to our top of article.


700
00:32:22,936 --> 00:32:27,566
So, I've taken our title and the
caption, the heading above it,


701
00:32:27,566 --> 00:32:30,746
and I've put them into
our header container,


702
00:32:32,196 --> 00:32:34,096
which looks pretty cool,
except that now they're sort


703
00:32:34,096 --> 00:32:35,166
of awkwardly floating up top.


704
00:32:35,506 --> 00:32:38,066
It'd be nice if I could align
them to the bottom of that.


705
00:32:38,066 --> 00:32:41,546
And I can, using another
ability of the anchor property.


706
00:32:42,836 --> 00:32:46,296
So if you use an anchor
on an object that's inside


707
00:32:46,296 --> 00:32:48,546
of a container, you get
to adjust the alignment


708
00:32:48,546 --> 00:32:50,056
of it relative to its container.


709
00:32:50,666 --> 00:32:52,786
So in this case I'm using
a target anchor position


710
00:32:52,786 --> 00:32:53,166
at bottom.


711
00:32:53,656 --> 00:32:56,596
And as you can see, my
text sticks to the bottom


712
00:32:56,596 --> 00:32:57,406
of the header container.


713
00:32:57,966 --> 00:33:02,586
And it looks a heck
of a lot better.


714
00:33:02,766 --> 00:33:04,306
So, we're really, really close.


715
00:33:04,816 --> 00:33:07,436
We've got some interesting
layering of text over images,


716
00:33:07,436 --> 00:33:08,926
we've got nice white
space usage,


717
00:33:08,926 --> 00:33:10,076
we've got good topography.


718
00:33:10,696 --> 00:33:12,786
The last thing I want to
do before I call our top


719
00:33:12,786 --> 00:33:15,136
of article experience
done is I want


720
00:33:15,136 --> 00:33:16,426
to add some inline text styles.


721
00:33:17,046 --> 00:33:20,466
So we're going to go one more
time to your article skeleton.


722
00:33:20,466 --> 00:33:22,916
And we're going to add a
new top-level dictionary


723
00:33:22,916 --> 00:33:23,846
called textStyles.


724
00:33:24,696 --> 00:33:27,196
And textStyles is similar
to componentTextStyles,


725
00:33:27,746 --> 00:33:30,746
except that instead of styling
all the text in a component,


726
00:33:31,136 --> 00:33:33,116
textStyles allows you to
do style to just a range


727
00:33:33,116 --> 00:33:35,956
of text and make two styles.


728
00:33:37,026 --> 00:33:39,466
One for gray text,
and one for bold text.


729
00:33:40,066 --> 00:33:42,906
And to apply these I'm
going to take advantage


730
00:33:42,906 --> 00:33:45,146
of a really cool
markdown extension we have


731
00:33:45,146 --> 00:33:45,956
in Apple News Format.


732
00:33:47,246 --> 00:33:49,526
So here's the two components
that I want to effect.


733
00:33:49,786 --> 00:33:52,596
We've got our title component
and our first body component.


734
00:33:53,236 --> 00:33:59,266
And to apply my stiles, all I
do is a wrap the text I want


735
00:33:59,266 --> 00:34:02,686
to effect in square
brackets and I follow


736
00:34:02,686 --> 00:34:05,796
that with the style I want
to apply in curly braces.


737
00:34:07,236 --> 00:34:10,366
And once you do that, as you can
see in the case of the title,


738
00:34:10,556 --> 00:34:14,136
I've given some gray text
color to a few of the words.


739
00:34:15,005 --> 00:34:18,136
And then I've got a
nice run in bold look


740
00:34:18,346 --> 00:34:19,496
for our first body component.


741
00:34:20,196 --> 00:34:23,496
So, now I'm satisfied.


742
00:34:23,706 --> 00:34:26,346
Ready to call our top of
article experience done.


743
00:34:27,235 --> 00:34:29,335
There's just one more tweak I'd


744
00:34:29,335 --> 00:34:31,146
like to make before I call
the whole article done.


745
00:34:31,146 --> 00:34:33,166
I want to add some
motion to a few elements


746
00:34:33,166 --> 00:34:34,216
that are further
down in the article.


747
00:34:34,636 --> 00:34:36,696
So, for instance the
pullquote there on the right.


748
00:34:37,186 --> 00:34:39,016
It'd be cool if that
slid in from the right.


749
00:34:40,646 --> 00:34:43,275
And it would also be cool
if the galleries slide in.


750
00:34:44,146 --> 00:34:46,056
But as for the mosaic
and the captions,


751
00:34:46,156 --> 00:34:48,416
I think it would be cool as
if those faded in as you got


752
00:34:48,466 --> 00:34:49,426
to them in the viewport.


753
00:34:50,956 --> 00:34:52,856
So implementing this
is really, really easy.


754
00:34:53,646 --> 00:34:54,406
Here's our pullquote.


755
00:34:55,335 --> 00:34:59,066
And all I have to do to
add the animation is add an


756
00:34:59,066 --> 00:34:59,936
animation property.


757
00:35:00,826 --> 00:35:02,226
Inside I declare
what kind I want.


758
00:35:02,226 --> 00:35:03,896
I want a move in
animation this time.


759
00:35:05,066 --> 00:35:07,236
With move in, I get to say from
which direction it comes in.


760
00:35:07,236 --> 00:35:09,076
I'm going to have it
slide in from the right.


761
00:35:09,076 --> 00:35:11,936
Now, I'm going to
take that same thing


762
00:35:12,276 --> 00:35:13,266
and apply it to our gallery.


763
00:35:13,266 --> 00:35:15,876
Then I'm going to add
a fade in animation


764
00:35:15,876 --> 00:35:18,896
to the mosaic, and
our two captions.


765
00:35:19,116 --> 00:35:20,666
And let's see it
all come together.


766
00:35:21,076 --> 00:35:23,196
So we've got our
scene animation,


767
00:35:23,686 --> 00:35:24,446
here comes the pullquote.


768
00:35:26,216 --> 00:35:29,306
Slide in. You can put
the gallery mosaic,


769
00:35:29,416 --> 00:35:30,386
caption, fade, fade.


770
00:35:31,466 --> 00:35:32,246
Looks a whole lot better.


771
00:35:33,216 --> 00:35:35,996
With just a few animations
we made the act of scrolling


772
00:35:35,996 --> 00:35:38,216
through the article more
fun and more dynamic.


773
00:35:39,146 --> 00:35:41,056
And that seems like a
pretty appropriate place


774
00:35:41,646 --> 00:35:42,636
to end our crash course


775
00:35:42,636 --> 00:35:44,166
on the finer points
of Apple News Format.


776
00:35:44,626 --> 00:35:46,206
So, we covered a lot.


777
00:35:46,546 --> 00:35:48,296
We added some text
and graphical content.


778
00:35:48,426 --> 00:35:52,596
We saw how to make layouts
that work across all devices.


779
00:35:53,856 --> 00:35:56,026
We used anchoring to make
visual relationships.


780
00:35:57,206 --> 00:35:58,116
And with just a few lines


781
00:35:58,116 --> 00:35:59,956
of code we added some
really cool animations.


782
00:35:59,956 --> 00:36:03,166
Of course this is just the tip
of the iceberg, I encourage you


783
00:36:03,166 --> 00:36:04,946
to download the tools,
check out the docs,


784
00:36:04,946 --> 00:36:06,026
and play around with
it yourself.


785
00:36:06,026 --> 00:36:09,286
We love to see what our
content creators come up with.


786
00:36:10,516 --> 00:36:10,976
Back to Casey.


787
00:36:11,516 --> 00:36:16,656
[ Applause ]


788
00:36:17,156 --> 00:36:19,016
>> Hey, Dan gave you
a great introduction


789
00:36:19,016 --> 00:36:20,176
to the Apple News Format


790
00:36:20,376 --> 00:36:22,446
and showed you how you can
use the News Preview Tool


791
00:36:22,446 --> 00:36:26,406
to create stories that are going
to look great on every device.


792
00:36:26,406 --> 00:36:30,396
I hope we've inspired you today
to sign up with news publisher.


793
00:36:30,396 --> 00:36:32,926
Check out the documentation,
publish your stories,


794
00:36:32,926 --> 00:36:36,046
earn revenue, help writers
get exposure, and contribute


795
00:36:36,046 --> 00:36:37,486
to plugins for the platform.


796
00:36:37,726 --> 00:36:40,456
This link will take you to
everywhere you need to go


797
00:36:40,456 --> 00:36:42,466
in order to have those
materials to get started,


798
00:36:42,466 --> 00:36:46,046
including your documentation
and some of the example code


799
00:36:46,046 --> 00:36:47,386
that Dan showed you today.


800
00:36:48,286 --> 00:36:52,386
Be sure you check out that other
News Session that covered all


801
00:36:52,386 --> 00:36:54,326
of our different ways that
you can get published.


802
00:36:54,706 --> 00:36:57,416
And thank you for
coming here this week.


803
00:36:57,416 --> 00:36:59,856
It's been great having you
here, and that's a wrap.


804
00:37:00,516 --> 00:37:03,500
[ Applause ]

