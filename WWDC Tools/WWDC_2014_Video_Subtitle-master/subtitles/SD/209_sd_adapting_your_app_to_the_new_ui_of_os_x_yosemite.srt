1
00:00:12,176 --> 00:00:12,916
>> Good afternoon.


2
00:00:13,346 --> 00:00:13,526
Welcome.


3
00:00:15,516 --> 00:00:18,246
[ Applause ]


4
00:00:18,746 --> 00:00:19,796
So I'm Patrick Heynen.


5
00:00:19,796 --> 00:00:21,886
I'm a manager in the
Cocoa Frameworks group,


6
00:00:21,886 --> 00:00:25,406
and welcome to Adapting to
the New UI of OS X Yosemite.


7
00:00:25,866 --> 00:00:26,676
Let's get started.


8
00:00:27,526 --> 00:00:30,576
So Yosemite, yeah.


9
00:00:30,576 --> 00:00:32,766
So it brings a pretty
fresh look to the Mac.


10
00:00:32,826 --> 00:00:35,116
The astute observers among you
might have noticed there's been


11
00:00:35,116 --> 00:00:36,726
some changes in the
visual department.


12
00:00:37,436 --> 00:00:41,336
Well, we're here to help you
understand what has changed


13
00:00:41,336 --> 00:00:44,366
and why, sort of break it all
down for you, walk through it


14
00:00:44,716 --> 00:00:46,206
and to get a better
understanding of it,


15
00:00:46,206 --> 00:00:49,436
and then most importantly,
how to get the most


16
00:00:49,496 --> 00:00:52,386
out of this new UI in
your Cocoa applications.


17
00:00:53,226 --> 00:00:55,536
So, how are we going to do this?


18
00:00:55,686 --> 00:00:57,486
Well, first we're going to talk


19
00:00:57,486 --> 00:00:59,906
about some fundamental
design principles that went


20
00:00:59,906 --> 00:01:02,716
into the choices that
resulted in the current design


21
00:01:02,716 --> 00:01:04,075
that you see in OS X Yosemite.


22
00:01:05,836 --> 00:01:06,836
Then we're going to take --


23
00:01:06,836 --> 00:01:10,486
get into the tour bus and
just take a tour of Yosemite


24
00:01:10,486 --> 00:01:11,946
and all the key pieces of --


25
00:01:12,066 --> 00:01:13,966
that have changed
that are relevant


26
00:01:13,966 --> 00:01:16,256
for Cocoa app developers, from
a developer's point of view.


27
00:01:17,556 --> 00:01:19,856
Then we're going to talk
about vibrancy, which is one


28
00:01:19,856 --> 00:01:22,456
of these important elements,
and just deconstruct that


29
00:01:22,456 --> 00:01:26,026
and get a conceptual basis for
understanding what role it plays


30
00:01:26,026 --> 00:01:27,696
and how it works and
what it does for you.


31
00:01:29,006 --> 00:01:31,606
Then talk about some
elements that you might bring


32
00:01:31,606 --> 00:01:34,016
to your applications:
fonts, colors or artwork


33
00:01:34,016 --> 00:01:36,266
and how they should -- --
what their role is and how --


34
00:01:36,266 --> 00:01:37,866
some of the things that
we've done to make working


35
00:01:37,866 --> 00:01:40,656
with them easier in Yosemite.


36
00:01:41,376 --> 00:01:42,746
And last, but definitely
not least,


37
00:01:42,746 --> 00:01:44,706
we'll talk about app
compatibility and how


38
00:01:44,706 --> 00:01:46,206
to mitigate the risk


39
00:01:46,206 --> 00:01:49,076
of introducing this big design
change and having your app work


40
00:01:49,496 --> 00:01:51,726
across different scenarios.


41
00:01:52,316 --> 00:01:54,936
Okay, so with that, I'm going
to hand it over to my colleague,


42
00:01:54,936 --> 00:01:55,586
and we're going to get right


43
00:01:55,586 --> 00:01:58,816
into the design portion
of this talk.


44
00:01:59,726 --> 00:02:00,206
Mike?


45
00:02:00,636 --> 00:02:01,356
>> Thank you, Patrick.


46
00:02:02,146 --> 00:02:02,726
Hi, everyone.


47
00:02:03,226 --> 00:02:05,686
[Applause]


48
00:02:06,186 --> 00:02:07,096
So I'm Mike Stern.


49
00:02:07,096 --> 00:02:09,506
I'm User Experience
Evangelist with Apple,


50
00:02:10,205 --> 00:02:13,096
and I am not an engineer.


51
00:02:13,566 --> 00:02:14,326
I'm a designer.


52
00:02:14,496 --> 00:02:16,946
So what am I doing here at
this engineering session?


53
00:02:17,466 --> 00:02:19,436
Well, we're talking about
the new design of OS X,


54
00:02:19,436 --> 00:02:22,036
and I thought I would just come
here for a few minutes and talk


55
00:02:22,036 --> 00:02:24,816
about some of the high-level
principles or design themes


56
00:02:24,816 --> 00:02:29,146
that guided and inspired
the design of OS X Yosemite.


57
00:02:30,246 --> 00:02:32,806
Now, yesterday, we
announced OS X Yosemite,


58
00:02:34,036 --> 00:02:39,336
and OS X Yosemite is the
tenth release to OS X.


59
00:02:40,356 --> 00:02:45,136
And in that time span, there's
been a few really major UI


60
00:02:45,136 --> 00:02:46,336
releases for OS X.


61
00:02:46,336 --> 00:02:50,016
And as with every one
of those releases,


62
00:02:50,016 --> 00:02:53,446
elements like the
menu bar, windows,


63
00:02:54,316 --> 00:03:00,006
the dock have been
refined to be friendlier,


64
00:03:00,156 --> 00:03:02,306
easier to use, more
approachable.


65
00:03:02,736 --> 00:03:07,166
But they've also been redesigned
to have greater utility


66
00:03:07,166 --> 00:03:09,366
and power and support
more sophisticated


67
00:03:09,366 --> 00:03:11,166
and advanced workflows.


68
00:03:11,496 --> 00:03:14,326
Now, Yosemite is
just another step


69
00:03:14,326 --> 00:03:18,616
in a continuous process
of evolving OS X.


70
00:03:19,236 --> 00:03:21,756
So let's dive in and talk
about some of the principles


71
00:03:21,756 --> 00:03:24,576
that were really core to
this particular redesign.


72
00:03:25,156 --> 00:03:27,026
The first one is simplicity.


73
00:03:27,756 --> 00:03:30,026
Now, let's take a look
at these app icons.


74
00:03:32,356 --> 00:03:35,986
In particular, let's look
at the calendar icon.


75
00:03:36,726 --> 00:03:39,246
Now, as before, calendar
was redesigned,


76
00:03:39,896 --> 00:03:42,806
but it still very much
looks like a realistic,


77
00:03:42,806 --> 00:03:45,636
three-dimensional object,
with realistic highlights,


78
00:03:45,636 --> 00:03:49,246
realistic shadows, and even
the texture of the paper.


79
00:03:50,176 --> 00:03:53,006
But some of the elements of
the previous icon were removed,


80
00:03:53,146 --> 00:03:56,136
like the mini-calendar
view or the metal rings.


81
00:03:56,926 --> 00:03:59,656
Those elements weren't
really necessary


82
00:04:00,126 --> 00:04:03,486
to depict a daily desk calendar,
and by removing those elements,


83
00:04:03,486 --> 00:04:05,716
the new icon is more simple.


84
00:04:05,716 --> 00:04:06,616
It's less cluttered.


85
00:04:06,826 --> 00:04:08,096
It's more straightforward.


86
00:04:08,556 --> 00:04:12,396
And simplicity also influenced
the decision to go away


87
00:04:12,396 --> 00:04:14,836
from using Lucida
Grande as the system font


88
00:04:14,926 --> 00:04:17,116
and towards using
Helvetica Neue.


89
00:04:18,435 --> 00:04:21,495
Helvetica Neue is
a simpler typeface.


90
00:04:21,666 --> 00:04:26,316
Lucida Grande is designed to
evoke handwritten letterforms.


91
00:04:26,876 --> 00:04:30,366
Helvetica Neue, on the other
hand, is designed to clearly


92
00:04:30,366 --> 00:04:34,226
and simply depict the
letterforms and numbers,


93
00:04:34,476 --> 00:04:35,926
without any ornamentation.


94
00:04:36,356 --> 00:04:38,696
So it's a more appropriate
typeface to use


95
00:04:38,696 --> 00:04:40,136
for the new design language.


96
00:04:40,236 --> 00:04:41,496
So what does that mean?


97
00:04:42,066 --> 00:04:43,886
Well, here's a comparison.


98
00:04:44,166 --> 00:04:47,226
You can see that the S is a
little bit more geometric.


99
00:04:47,226 --> 00:04:48,296
It's a little simpler.


100
00:04:49,016 --> 00:04:51,546
There's less variation
between the thickness


101
00:04:51,546 --> 00:04:53,126
of the stroke weight,
between the thin


102
00:04:53,126 --> 00:04:55,196
and the thick parts
of the letter.


103
00:04:56,476 --> 00:05:01,416
The shoulder here, for the
n has a smoother form to it.


104
00:05:01,466 --> 00:05:03,076
It's less of an abrupt
transition.


105
00:05:03,776 --> 00:05:07,826
And fonts have a more
consistent width to them.


106
00:05:07,946 --> 00:05:10,786
Now, the next theme
is about consistency.


107
00:05:12,066 --> 00:05:13,886
Again, let's go back
to the app icons.


108
00:05:14,846 --> 00:05:18,776
Now, from the beginning of OS X,
app icons were rendered to look


109
00:05:18,776 --> 00:05:22,116
like they were three-dimensional
objects that was sitting


110
00:05:22,116 --> 00:05:23,526
on a table in front of you.


111
00:05:24,086 --> 00:05:25,436
And they were rotated a bit,


112
00:05:25,636 --> 00:05:28,826
so they could be easily
distinguished from documents


113
00:05:28,826 --> 00:05:31,356
or folders, plug-ins
and utilities.


114
00:05:32,076 --> 00:05:33,706
But over time, there
was a little bit


115
00:05:33,706 --> 00:05:35,986
of a divergence going
on, with every app sort


116
00:05:35,986 --> 00:05:37,066
of doing its own thing.


117
00:05:37,616 --> 00:05:39,256
And that lead to some variation,


118
00:05:39,256 --> 00:05:42,256
like icons that have a
really strong perspective


119
00:05:42,256 --> 00:05:43,416
and keystoning effects.


120
00:05:44,376 --> 00:05:46,736
Or instead of looking like they
were lying flat on the table,


121
00:05:46,736 --> 00:05:51,266
they looked to be
sitting upright.


122
00:05:51,356 --> 00:05:57,226
OS X brings a harmonization
of the style of all the icons.


123
00:05:57,786 --> 00:05:59,836
So here, the realistic-looking
icons --


124
00:05:59,836 --> 00:06:01,756
you can see, they all
have the same perspective,


125
00:06:02,126 --> 00:06:04,526
same light source,
same rendering.


126
00:06:05,196 --> 00:06:07,726
And the graphical
icons, these round icons,


127
00:06:07,726 --> 00:06:10,316
are also internally
consistent with each other.


128
00:06:11,606 --> 00:06:12,746
The symbols at the center


129
00:06:12,746 --> 00:06:14,626
of them have the
same embossed effect.


130
00:06:15,286 --> 00:06:17,156
The shape -- the convex shape


131
00:06:17,226 --> 00:06:19,906
of the form is consistent
across all of them.


132
00:06:20,226 --> 00:06:22,296
And let's go back to type.


133
00:06:22,976 --> 00:06:25,026
Again, Helvetica Neue
is the new system font.


134
00:06:25,616 --> 00:06:27,076
And one of the things
that this solved


135
00:06:27,076 --> 00:06:29,576
for us was an inconsistency
that existed before.


136
00:06:30,286 --> 00:06:33,246
Over time, some apps,
like Notes had started,


137
00:06:33,246 --> 00:06:35,546
to use Helvetica Neue
as a content font.


138
00:06:36,116 --> 00:06:41,136
And apps like iTunes,
iPhoto, iMovie, Final Cut Pro


139
00:06:41,136 --> 00:06:43,356
and Logic were using
Helvetica Neue


140
00:06:43,356 --> 00:06:46,056
as a content font as
well as a UI font.


141
00:06:47,086 --> 00:06:49,676
And this led to a sort
of unfortunate mismatch


142
00:06:49,676 --> 00:06:53,186
between the system and
those individual apps.


143
00:06:55,956 --> 00:06:57,616
So by changing to
Helvetica Neue,


144
00:06:57,616 --> 00:06:59,086
now we have this consistency


145
00:06:59,086 --> 00:07:01,576
across the entire
Mac experience.


146
00:07:02,086 --> 00:07:05,296
And another side benefit to
that is there's more consistency


147
00:07:05,296 --> 00:07:06,976
between Mac and iOS.


148
00:07:07,746 --> 00:07:11,126
And the third major
principle or theme


149
00:07:11,126 --> 00:07:13,036
of this redesign is about depth.


150
00:07:13,906 --> 00:07:16,516
We believe that software
interfaces should feel,


151
00:07:16,686 --> 00:07:19,346
physically -- to have
physical dimensionality,


152
00:07:19,346 --> 00:07:21,126
and that that should
be really plausible.


153
00:07:22,566 --> 00:07:25,346
That dimensionality helps you
to focus on the things that are


154
00:07:25,346 --> 00:07:28,436
in the foreground and pay
less attention to those things


155
00:07:28,436 --> 00:07:29,436
which are in the background.


156
00:07:30,306 --> 00:07:33,896
Now, in iOS, depth in conveyed
through using translucency,


157
00:07:34,616 --> 00:07:37,716
for example, the Notification
Center or the control center.


158
00:07:38,356 --> 00:07:40,016
And the elements that are


159
00:07:40,016 --> 00:07:43,376
within those UIs also
have translucency --


160
00:07:43,376 --> 00:07:45,236
meaning some of that
background color is allowed


161
00:07:45,236 --> 00:07:46,616
to come through.


162
00:07:47,706 --> 00:07:51,076
Now, OS X picks up on this
and uses the same kind


163
00:07:51,076 --> 00:07:54,066
of translucent effect for
the Notification Center


164
00:07:54,846 --> 00:07:55,996
and other parts of the UI.


165
00:07:56,986 --> 00:08:00,246
Now, in iOS, of course,
we use motion effects


166
00:08:00,246 --> 00:08:01,456
to show depth, as well.


167
00:08:01,456 --> 00:08:03,656
So when you move the
device around in your hand,


168
00:08:03,656 --> 00:08:05,246
things have a sense of parallax.


169
00:08:05,856 --> 00:08:08,756
And that's great for
something that weighs as light


170
00:08:08,756 --> 00:08:11,256
as an iPhone or an
iPad, but we're not


171
00:08:11,256 --> 00:08:13,246
about to encourage people
to pick up their iMac


172
00:08:13,246 --> 00:08:15,356
and start moving it around
to get the same effect.


173
00:08:16,256 --> 00:08:19,736
So it's still really important
to use things like gradients


174
00:08:21,166 --> 00:08:24,456
or drop shadows to
convey that sense of space


175
00:08:24,456 --> 00:08:27,336
and to correctly order
things in the Z axis.


176
00:08:31,336 --> 00:08:35,066
And the last major principle
for this redesign is around --


177
00:08:35,066 --> 00:08:37,606
designing around content,
to be content-focused.


178
00:08:38,306 --> 00:08:39,916
Content is what's
most important,


179
00:08:39,916 --> 00:08:41,296
not the user interface.


180
00:08:42,106 --> 00:08:46,476
So for example, one way
to be content-focused is


181
00:08:46,476 --> 00:08:48,656
to just allow there to be
more space for content.


182
00:08:48,656 --> 00:08:50,556
So now there's this
unified toolbar


183
00:08:51,106 --> 00:08:57,296
that does what a titlebar and
a toolbar had done before.


184
00:09:00,436 --> 00:09:03,566
By unifying those elements,
there's now more physical space


185
00:09:03,786 --> 00:09:05,606
for the thing that
you really care about,


186
00:09:06,076 --> 00:09:07,806
which is the webpage itself.


187
00:09:09,696 --> 00:09:12,766
And deferring to content
or allowing content


188
00:09:12,766 --> 00:09:14,326
to be the focus is also


189
00:09:14,606 --> 00:09:17,846
about having a user interface
that's less heavy, less strong.


190
00:09:17,846 --> 00:09:20,466
So we've stripped away a lot of
the textures and the highlights


191
00:09:20,466 --> 00:09:23,186
and the shadows, to have
a simpler appearance.


192
00:09:23,606 --> 00:09:26,666
That, in combination with the
translucent window chrome --


193
00:09:26,666 --> 00:09:28,056
the toolbar, in this case --


194
00:09:28,346 --> 00:09:30,366
allows the content to
really come through


195
00:09:30,366 --> 00:09:32,946
and affect the appearance
of the entire screen.


196
00:09:33,976 --> 00:09:38,216
Again, it allows your content
to be the center of your focus.


197
00:09:39,106 --> 00:09:43,206
So that's all I really
have for you today.


198
00:09:43,206 --> 00:09:44,816
And now I'd like to hand it off


199
00:09:44,816 --> 00:09:47,326
to our tour bus driver,
Rachel Goldeen.


200
00:09:47,466 --> 00:09:47,976
Thank you very much.


201
00:09:48,041 --> 00:09:50,041
[Applause]


202
00:09:50,066 --> 00:09:50,546
>> Thanks.


203
00:09:52,616 --> 00:09:53,966
Thanks, Mike.


204
00:09:54,066 --> 00:09:55,096
Good afternoon.


205
00:09:55,096 --> 00:09:55,996
Thanks for being here.


206
00:09:56,616 --> 00:09:57,846
As they mentioned, I'm going


207
00:09:57,846 --> 00:09:59,636
to give you a little
developer's tour


208
00:09:59,636 --> 00:10:02,876
of the new UI in OS X Yosemite.


209
00:10:04,026 --> 00:10:08,416
Let's start off here by taking
a look at Finder, and I'm going


210
00:10:08,416 --> 00:10:11,356
to give you actually a
mini-tour before the tour


211
00:10:11,356 --> 00:10:12,456
of the things that I'll cover.


212
00:10:13,186 --> 00:10:16,556
We'll take a look at
the toolbars, again;


213
00:10:16,866 --> 00:10:22,116
the window control buttons; the
new kind of segmented control;


214
00:10:22,666 --> 00:10:26,476
the sidebar, which
is translucent now;


215
00:10:27,136 --> 00:10:32,886
and then we'll move over
to Safari to take a look


216
00:10:32,976 --> 00:10:36,666
at what Mike just mentioned: the
combined toolbar and titlebar.


217
00:10:39,086 --> 00:10:41,366
And then we'll take a
look at system preferences


218
00:10:41,366 --> 00:10:46,706
to show us an example of our
animated controls: search field,


219
00:10:48,186 --> 00:10:52,536
radio buttons, popup
menus and checkboxes.


220
00:10:53,066 --> 00:10:59,796
And after that, we will go over
to Notification Center and look


221
00:10:59,796 --> 00:11:03,686
at our new Vibrant Dark
appearance that's used here.


222
00:11:05,326 --> 00:11:06,876
And then the context menu,


223
00:11:06,876 --> 00:11:11,546
which uses the Vibrant Light
appearance, as do popovers.


224
00:11:12,216 --> 00:11:13,486
All right.


225
00:11:13,686 --> 00:11:14,646
Back to the top.


226
00:11:15,676 --> 00:11:16,756
Translucent toolbars.


227
00:11:18,086 --> 00:11:20,886
For anyone who's gone and
installed Yosemite already,


228
00:11:20,886 --> 00:11:22,666
I'm sure you've played
around with this and seen,


229
00:11:22,666 --> 00:11:26,466
as you scroll things up,
you can just see them coming


230
00:11:26,466 --> 00:11:28,296
through the toolbar,
and it gives you a sense


231
00:11:28,296 --> 00:11:30,396
of your content sliding
under the toolbar.


232
00:11:31,446 --> 00:11:32,846
How do you get it?


233
00:11:33,006 --> 00:11:37,126
Well, all you have to
have is an NSScrollView


234
00:11:37,336 --> 00:11:39,026
that is adjacent to the toolbar.


235
00:11:39,616 --> 00:11:43,106
And then it happens
automatically for ya.


236
00:11:43,606 --> 00:11:47,836
But if you don't have
that, you can still get it


237
00:11:47,836 --> 00:11:51,846
by using this new window style
mask NSFullSizeContentView


238
00:11:51,846 --> 00:11:52,686
WindowMask.


239
00:11:52,966 --> 00:11:56,926
Simply [inaudible] that in with
your existing window style mask,


240
00:11:57,566 --> 00:12:00,806
and you'll get the transparent,
translucent toolbar style.


241
00:12:02,056 --> 00:12:06,286
This can be useful for things
such as toolbars or titlebars


242
00:12:06,286 --> 00:12:10,056
that show and hide over content
that is not in a scroll view,


243
00:12:10,056 --> 00:12:14,246
or the scroll view's
not right at the top.


244
00:12:14,246 --> 00:12:17,306
Lots more details about this
in tomorrow's advanced session,


245
00:12:17,306 --> 00:12:20,796
"Adopting Advanced Features of
the New UI of OS X Yosemite."


246
00:12:23,516 --> 00:12:24,186
All right.


247
00:12:24,856 --> 00:12:26,286
Tinted Sliders, hiding away


248
00:12:26,286 --> 00:12:28,036
in the bottom right
corner of this window.


249
00:12:29,656 --> 00:12:32,726
These are a little
new thing on Yosemite.


250
00:12:33,106 --> 00:12:35,546
And to get those, you just need


251
00:12:35,546 --> 00:12:39,876
to have a non-directional
slider, which is a slider


252
00:12:39,876 --> 00:12:41,786
that has zero tick marks.


253
00:12:44,676 --> 00:12:45,366
All right.


254
00:12:47,066 --> 00:12:50,556
Now, let's take a look at the
new window control buttons.


255
00:12:52,306 --> 00:12:55,306
As well as being flatter,
you'll also notice


256
00:12:55,306 --> 00:12:58,286
that the full-screen button has
moved into the green button.


257
00:12:58,896 --> 00:13:01,196
If you're sad about that,


258
00:13:01,366 --> 00:13:04,506
and you'd like the zoom behavior
back, hold the Option key,


259
00:13:04,506 --> 00:13:05,676
and you'll get zoom behavior.


260
00:13:06,266 --> 00:13:08,496
I'd also like to point
out that any window


261
00:13:08,496 --> 00:13:10,976
that can't go full-screen
reverts


262
00:13:10,976 --> 00:13:12,196
to the old zoom behavior.


263
00:13:12,796 --> 00:13:19,126
And then, next, the new kind of
separated, segmented control.


264
00:13:19,926 --> 00:13:23,946
These are useful for things like
navigation, like this backwards


265
00:13:23,946 --> 00:13:26,066
and forwards button
here or other kind


266
00:13:26,066 --> 00:13:28,786
of incremental step
operation, such as zooming.


267
00:13:29,306 --> 00:13:33,336
And this is easy to get by
setting the segmentStyle


268
00:13:33,706 --> 00:13:35,836
to NSSegmentStyleSeparated.


269
00:13:36,756 --> 00:13:40,146
And it's nice to know that the
style will automatically adjust,


270
00:13:40,556 --> 00:13:42,896
whether it's in a
toolbar or in a window.


271
00:13:43,486 --> 00:13:49,396
Now, I'm going to bring another
window onto Finder, here.


272
00:13:49,676 --> 00:13:52,336
And we'll take a look at some
of the subtle differences


273
00:13:52,416 --> 00:13:55,096
that happen between active
and inactive windows.


274
00:13:55,696 --> 00:14:00,276
When a window comes
forward and becomes active,


275
00:14:00,826 --> 00:14:02,146
the sidebar is translucent.


276
00:14:03,406 --> 00:14:05,746
But when it goes to the
background, and it's inactive,


277
00:14:06,326 --> 00:14:07,296
the sidebar is opaque.


278
00:14:08,036 --> 00:14:10,746
So it's nice to know that
the translucency is only


279
00:14:10,746 --> 00:14:11,886
in the active windows.


280
00:14:12,546 --> 00:14:16,236
And let's take a closer
look here, at the toolbar.


281
00:14:17,046 --> 00:14:18,086
A couple of things to note --


282
00:14:18,346 --> 00:14:21,696
it's a good chance to
say that the metrics --


283
00:14:21,776 --> 00:14:25,276
we've tried to keep them as much
the same as possible so that all


284
00:14:25,276 --> 00:14:27,916
of your old controls that
are automatically moved


285
00:14:27,916 --> 00:14:30,766
to the new look, even
without recompiling,


286
00:14:31,246 --> 00:14:33,006
should all fit in
the same space.


287
00:14:34,026 --> 00:14:36,526
And there's also some
subtle things that happen


288
00:14:36,586 --> 00:14:38,576
when you use template images.


289
00:14:39,206 --> 00:14:41,456
These are a great
way to take advantage


290
00:14:41,456 --> 00:14:44,076
of our automatic
adjustment for state changes.


291
00:14:44,496 --> 00:14:47,066
And so I'm going to send
this window to the back,


292
00:14:47,386 --> 00:14:51,346
and you can see the state
changes in the template images,


293
00:14:51,996 --> 00:14:56,176
particularly that selected
part of that segmented control.


294
00:14:56,176 --> 00:14:56,886
Look at the image.


295
00:14:57,076 --> 00:15:00,076
You see it completely
change color.


296
00:15:00,836 --> 00:15:04,226
So you can take advantage of
that by using template images.


297
00:15:04,816 --> 00:15:09,476
And let's take a look again
at the translucent sidebar.


298
00:15:10,316 --> 00:15:13,306
Once again, opaque
here; translucent here.


299
00:15:14,056 --> 00:15:17,226
And how do you get
translucent sidebars?


300
00:15:17,736 --> 00:15:18,196
Guess what?


301
00:15:19,036 --> 00:15:23,846
They're for free, if you've used
an NSOutlineView or NSTableView,


302
00:15:25,096 --> 00:15:29,186
and you set the highlight style
to Source List, which you can do


303
00:15:29,186 --> 00:15:33,706
in Interface Builder or in code.


304
00:15:33,906 --> 00:15:34,456
All right.


305
00:15:34,456 --> 00:15:38,686
And to just show how easy it
was, I downloaded a SidebarDemo,


306
00:15:38,686 --> 00:15:43,296
which was put together for OS X
Lion, 10.7, and out of the box,


307
00:15:43,296 --> 00:15:44,736
it had translucent sidebars.


308
00:15:47,466 --> 00:15:51,946
Now, moving over to Safari to
take a look at the new kind


309
00:15:51,946 --> 00:15:53,846
of toolbar that has
a hidden titlebar.


310
00:15:56,236 --> 00:16:00,606
Hidden window titles are
achieved using this new NSWindow


311
00:16:00,606 --> 00:16:02,236
property: titleVisibility.


312
00:16:02,706 --> 00:16:05,286
And you can set the
title visibility


313
00:16:05,286 --> 00:16:07,806
to NSWindowTitleHidden in order


314
00:16:07,806 --> 00:16:09,596
to get the effect
that Safari has.


315
00:16:10,186 --> 00:16:11,486
And I'd like to point out to you


316
00:16:11,486 --> 00:16:14,196
that Safari has some special
things that makes this work,


317
00:16:14,906 --> 00:16:17,856
one of which is that they
have put the window title


318
00:16:18,136 --> 00:16:20,696
into the combined
URL and search field.


319
00:16:21,246 --> 00:16:23,156
And so you can still
see the window title,


320
00:16:23,186 --> 00:16:24,506
even though there's no titlebar.


321
00:16:25,136 --> 00:16:28,666
Also, as Andreas pointed out
yesterday, they've let room


322
00:16:28,666 --> 00:16:31,366
for users to click in
the toolbar in order


323
00:16:31,366 --> 00:16:32,646
to move the window around.


324
00:16:32,646 --> 00:16:34,366
So you want to make sure
you have room for that,


325
00:16:34,886 --> 00:16:36,256
if you're going to
use this new style.


326
00:16:38,816 --> 00:16:40,666
Moving on to animated controls.


327
00:16:42,136 --> 00:16:47,126
Search fields now animate
very much like they do on iOS,


328
00:16:47,306 --> 00:16:50,476
with the magnifying glass and
the placeholder text moving


329
00:16:50,476 --> 00:16:54,506
to the left when you click.


330
00:16:54,506 --> 00:16:58,096
Radio buttons have an animation,
and one of the nice things


331
00:16:58,096 --> 00:17:00,666
about them is: as you
select a radio button,


332
00:17:01,506 --> 00:17:04,316
the other one deselects and
animates out simultaneously.


333
00:17:04,915 --> 00:17:06,965
It's a nice little touch.


334
00:17:11,185 --> 00:17:14,006
Checkboxes, as well,
are now animated.


335
00:17:15,236 --> 00:17:17,306
And this is a good time
for me to point out that


336
00:17:17,306 --> 00:17:20,126
that first preference there --
double-click a window's titlebar


337
00:17:20,126 --> 00:17:24,965
to minimize -- if you leave it
unchecked, which is the default,


338
00:17:25,356 --> 00:17:28,086
double-clicking a window's
titlebar will zoom.


339
00:17:28,086 --> 00:17:30,096
So that's a little
hidden feature for ya.


340
00:17:30,746 --> 00:17:34,146
And last, popup buttons.


341
00:17:35,316 --> 00:17:40,716
When you select a popup
button and choose an item


342
00:17:40,716 --> 00:17:42,786
from the menu, it'll
animate back


343
00:17:42,786 --> 00:17:44,906
into place in the popup button.


344
00:17:47,976 --> 00:17:48,636
All right.


345
00:17:49,146 --> 00:17:54,256
Moving on to Notification Center
and the Vibrant Dark appearance.


346
00:17:55,416 --> 00:17:58,346
Let's take a little bit of a
closer look as what happens


347
00:17:58,346 --> 00:17:59,666
when the background changes.


348
00:18:00,466 --> 00:18:03,316
I want you to pay particular
attention to those tabs


349
00:18:03,316 --> 00:18:05,506
at the top that say
Today and Notifications


350
00:18:05,956 --> 00:18:08,096
and see how they change
as the background changes.


351
00:18:09,316 --> 00:18:12,326
It looks very close to
standard transparency,


352
00:18:12,916 --> 00:18:16,116
but we're actually using special
blend modes to pull the color


353
00:18:16,116 --> 00:18:21,966
in a little more than just
plain old transparency.


354
00:18:22,266 --> 00:18:23,036
How did they get it?


355
00:18:23,566 --> 00:18:27,706
They used this new NSView
subclass -- NSVisualEffectView,


356
00:18:28,796 --> 00:18:31,776
as well as the new
Vibrant Dark appearance,


357
00:18:31,776 --> 00:18:33,176
which is an NSAppearance.


358
00:18:34,446 --> 00:18:37,276
So you can create an
NSVisualEffectView,


359
00:18:38,756 --> 00:18:43,766
get the NSApperanceName
VibrantDark appearance and set


360
00:18:43,806 --> 00:18:46,746
that on the effectView in
order to achieve this look.


361
00:18:48,886 --> 00:18:53,906
Similarly, here's an example of
the Vibrant Light appearance.


362
00:18:55,176 --> 00:18:58,256
Same deal: NSVisualEffectView,


363
00:18:58,746 --> 00:19:00,936
but this time using the
VibrantLight appearance,


364
00:19:01,476 --> 00:19:03,906
and you set that
on your effectView,


365
00:19:03,906 --> 00:19:08,706
and you get this new
Vibrant Light appearance.


366
00:19:08,706 --> 00:19:10,846
Lots more about
NSVisualEffectView


367
00:19:10,846 --> 00:19:12,936
and Vibrancy in tomorrow's talk.


368
00:19:13,576 --> 00:19:18,406
And now, I will hand it back to
Patrick, who will talk to you


369
00:19:18,406 --> 00:19:20,306
in more depth about vibrancy.


370
00:19:20,566 --> 00:19:21,656
Thank you very much.


371
00:19:21,656 --> 00:19:23,496
[Applause]


372
00:19:23,496 --> 00:19:24,056
>> Thank you, Rachel.


373
00:19:24,376 --> 00:19:24,776
Thank you.


374
00:19:27,636 --> 00:19:29,006
Okay, so vibrancy.


375
00:19:29,356 --> 00:19:32,536
So as Rachel mentioned, it's
not just plain old translucency.


376
00:19:32,536 --> 00:19:33,556
What is this vibrancy?


377
00:19:33,806 --> 00:19:37,556
Well, it's a pretty important
visual building block for OS X,


378
00:19:37,556 --> 00:19:40,746
as you -- and it makes its way
into many different applications


379
00:19:40,746 --> 00:19:43,686
and many different areas,
both in light and dark.


380
00:19:43,686 --> 00:19:45,966
Most prominently in
Notification Center,


381
00:19:45,966 --> 00:19:48,186
but also other places in the OS.


382
00:19:48,716 --> 00:19:50,446
So what is it?


383
00:19:50,576 --> 00:19:51,706
What is this vibrancy thing?


384
00:19:51,776 --> 00:19:54,986
Well, I'm going to try --
and bear with me here, but --


385
00:19:54,986 --> 00:19:57,196
I'm going to try to deconstruct
it and break it down and sort


386
00:19:57,196 --> 00:19:59,756
of explain conceptually what it
is and what it's trying to do,


387
00:19:59,756 --> 00:20:02,156
what its goal is, to
help give you a framework


388
00:20:02,156 --> 00:20:03,866
for understanding what
happens technically


389
00:20:03,976 --> 00:20:04,866
with your application.


390
00:20:05,576 --> 00:20:09,336
So vibrancy is advanced
blending on dynamic


391
00:20:09,336 --> 00:20:10,806
or adaptive backgrounds.


392
00:20:11,476 --> 00:20:14,486
So what's advanced about it?


393
00:20:14,486 --> 00:20:17,366
Well, I'm about to -- in
the words -- the words of E.


394
00:20:17,366 --> 00:20:17,496
E.


395
00:20:17,606 --> 00:20:21,406
Cummings, I think -- I'm
going to try to make the case


396
00:20:21,406 --> 00:20:24,176
that with vibrancy, two plus
two can not only equal four,


397
00:20:24,176 --> 00:20:26,366
but we can actually
make it equal to five.


398
00:20:26,966 --> 00:20:29,926
In fact, it's all
about making --


399
00:20:30,016 --> 00:20:32,246
vibrancy can actually make
the whole greater than the sum


400
00:20:32,246 --> 00:20:33,746
of the parts and things
that you put into it.


401
00:20:33,746 --> 00:20:35,516
It actually can end up with
something more interesting


402
00:20:35,516 --> 00:20:37,056
than the two things
you put into it.


403
00:20:37,186 --> 00:20:38,706
So what two things
am I talking about?


404
00:20:38,706 --> 00:20:41,356
Well, it's really all
about combining foreground


405
00:20:41,356 --> 00:20:42,176
and background elements.


406
00:20:42,176 --> 00:20:44,346
Most of UI graphics is all


407
00:20:44,346 --> 00:20:46,816
about combining some foreground
content onto a background,


408
00:20:46,816 --> 00:20:49,496
whether it's a button
onto a window background,


409
00:20:49,496 --> 00:20:52,356
whether it's a piece
of text onto a button


410
00:20:52,356 --> 00:20:53,636
or a window content background.


411
00:20:53,746 --> 00:20:55,786
It's all about combining
those individual pixels


412
00:20:55,786 --> 00:20:56,606
in interesting ways.


413
00:20:57,046 --> 00:20:58,776
Well, so let's do that.


414
00:20:58,776 --> 00:21:00,426
We have this beautiful
poppy background.


415
00:21:00,826 --> 00:21:02,756
And let's do -- and
traditionally, let's --


416
00:21:02,896 --> 00:21:06,176
we have here a gray, a
mid-tone gray circle that we put


417
00:21:06,176 --> 00:21:07,346
on top of this background.


418
00:21:07,776 --> 00:21:09,146
And we can just put it on there.


419
00:21:09,146 --> 00:21:10,356
Now, it's okay, but it kind


420
00:21:10,356 --> 00:21:11,476
of doesn't really
blend well at all.


421
00:21:11,476 --> 00:21:13,756
It kind of sticks out,
in fact, in this image.


422
00:21:13,926 --> 00:21:16,946
Now, traditionally, the tool
we would have at our disposal,


423
00:21:17,176 --> 00:21:19,916
to kind of combine it or blend
it in some interesting way,


424
00:21:19,916 --> 00:21:23,146
would be transparency or
using alpha or opacity.


425
00:21:23,546 --> 00:21:26,046
So here, I faded
this gray circle


426
00:21:26,046 --> 00:21:28,806
by about 25 percent,
maybe a little less.


427
00:21:28,896 --> 00:21:30,566
I'm not a designer.


428
00:21:31,436 --> 00:21:35,156
So -- but you'll notice
there's a problem with this.


429
00:21:35,156 --> 00:21:38,376
And it leaves a little
bit on the table in terms


430
00:21:38,376 --> 00:21:39,766
of the resulting esthetics.


431
00:21:39,766 --> 00:21:41,286
Because what happens
with transparency is,


432
00:21:41,286 --> 00:21:42,956
all you're doing is you're
taking that foreground


433
00:21:42,956 --> 00:21:43,876
and the background --


434
00:21:43,916 --> 00:21:46,086
you're just taking a
fractional midpoint


435
00:21:46,086 --> 00:21:47,766
in between and combining those.


436
00:21:47,946 --> 00:21:49,686
And what it really ends
up being like, is like --


437
00:21:49,686 --> 00:21:51,106
is if you were taking
that foreground element


438
00:21:51,106 --> 00:21:53,236
and punching a screen,
like punching


439
00:21:53,236 --> 00:21:54,486
and building little holes in it,


440
00:21:54,486 --> 00:21:55,736
and letting the background
seep through.


441
00:21:56,136 --> 00:21:58,456
With the end effect that the
background that does show


442
00:21:58,456 --> 00:22:00,376
through that foreground
element ends up getting kind


443
00:22:00,376 --> 00:22:01,986
of murky and muddy and hazy.


444
00:22:01,986 --> 00:22:05,056
And as you make it more
opaque, it just kind


445
00:22:05,056 --> 00:22:06,046
of gets darker and muddier.


446
00:22:06,046 --> 00:22:08,386
And it really doesn't -- the
background doesn't really get


447
00:22:08,386 --> 00:22:09,816
to combine in an
interesting way.


448
00:22:10,516 --> 00:22:12,126
Well, what if we did
this differently?


449
00:22:12,456 --> 00:22:14,256
What if we -- and the other
thing I want to point out is


450
00:22:14,256 --> 00:22:16,586
that we're not really
doing anything


451
00:22:16,586 --> 00:22:18,616
with the color information
of either the foreground


452
00:22:18,616 --> 00:22:20,556
or the background when
we combine them this way.


453
00:22:20,946 --> 00:22:24,026
Well, what if we approached
the problem differently?


454
00:22:24,026 --> 00:22:26,566
What if we actually took
the color information


455
00:22:26,566 --> 00:22:28,686
of the foreground pixel
and the background element


456
00:22:29,076 --> 00:22:30,856
and combined them in
an interesting way,


457
00:22:31,256 --> 00:22:32,186
where we actually were trying


458
00:22:32,186 --> 00:22:34,616
to preserve the color
tonality of the background?


459
00:22:35,046 --> 00:22:37,526
And just using the actual
foreground color as a hint


460
00:22:37,526 --> 00:22:39,856
as to how much of
that color to preserve


461
00:22:39,856 --> 00:22:41,526
in a general sort
of intensity level.


462
00:22:41,926 --> 00:22:44,656
So that's -- what
I'm illustrating here


463
00:22:44,656 --> 00:22:47,576
in this slide is actually
sort of a burn effect,


464
00:22:47,886 --> 00:22:50,506
a burn blend of a foreground.


465
00:22:50,506 --> 00:22:53,836
Same circle, same
actual gray value here.


466
00:22:53,836 --> 00:22:55,946
I have changed nothing about
the foreground element.


467
00:22:55,946 --> 00:22:57,976
It's still that same
gray circle.


468
00:22:58,026 --> 00:23:00,196
It's just that now I've
combined it with the background


469
00:23:00,196 --> 00:23:03,336
in a more interesting way,
where I'm using the gray value


470
00:23:03,336 --> 00:23:06,356
to actually direct how much of
the color information to keep


471
00:23:06,356 --> 00:23:10,956
from the background, as well
as the general tonality.


472
00:23:11,486 --> 00:23:13,886
What's nice about this is you
really preserve the character


473
00:23:13,886 --> 00:23:15,086
of the background,
as you can see.


474
00:23:15,656 --> 00:23:18,506
And what's also very nice
about this is it kind


475
00:23:18,506 --> 00:23:20,826
of works really well
as things change.


476
00:23:20,826 --> 00:23:24,036
Now, we're changing the
lightness quite a bit,


477
00:23:24,036 --> 00:23:26,346
as we go between the edge of
that poppy and the center,


478
00:23:26,796 --> 00:23:29,046
but get this sort of
general contrast ratio


479
00:23:29,046 --> 00:23:31,976
and general look
of that composite.


480
00:23:31,976 --> 00:23:34,166
It's actually preserved
pretty well by that blend.


481
00:23:34,486 --> 00:23:38,266
And in fact, this
design is very resilient


482
00:23:38,576 --> 00:23:40,516
to completely changing
the background


483
00:23:40,516 --> 00:23:41,426
out for something different.


484
00:23:41,516 --> 00:23:43,246
So once again, I
have changed nothing


485
00:23:43,246 --> 00:23:44,516
about the foreground
element here.


486
00:23:44,516 --> 00:23:45,336
I've just changed it out,


487
00:23:45,336 --> 00:23:47,066
and now we have this
lotus flower background.


488
00:23:47,666 --> 00:23:50,886
And you'll see that the
actual combination is sort


489
00:23:50,886 --> 00:23:53,856
of roughly the same overall
character, as a result.


490
00:23:54,706 --> 00:23:58,356
Well, so okay, so this is a good
illustration of the basic sort


491
00:23:58,356 --> 00:24:00,296
of foreground and
background blending,


492
00:24:00,296 --> 00:24:02,106
using sort of a more
advanced blend.


493
00:24:02,716 --> 00:24:04,586
But now, how do we build
this up into what we see


494
00:24:04,586 --> 00:24:08,786
in OS X Yosemite today, to get
these translucent materials?


495
00:24:08,786 --> 00:24:10,416
Well, now we need to combine


496
00:24:10,686 --> 00:24:12,026
with a different
kind of background.


497
00:24:12,026 --> 00:24:14,866
So let's build up this
light material here.


498
00:24:14,866 --> 00:24:16,026
Well first, we just want


499
00:24:16,026 --> 00:24:21,246
to put a nice light tint layer
that's transparent over the,


500
00:24:21,296 --> 00:24:24,346
over the background, to give us
a nice sort of light substrate


501
00:24:24,346 --> 00:24:25,356
onto which to draw our UI.


502
00:24:25,356 --> 00:24:27,076
(Because we don't want
to draw our UI directly


503
00:24:27,076 --> 00:24:28,216
onto your desktop
picture, of course.)


504
00:24:28,626 --> 00:24:31,686
And then all we need to do


505
00:24:31,686 --> 00:24:34,806
to make it better is
just blur it a little bit


506
00:24:34,806 --> 00:24:37,706
and to keep the overall color
tonality and the rough shape


507
00:24:37,856 --> 00:24:41,146
of your background
but still preserve --


508
00:24:41,506 --> 00:24:45,266
but give a smoother rendering
of the overall result.


509
00:24:45,636 --> 00:24:47,896
Now, you notice, as I went
through and built this up,


510
00:24:48,026 --> 00:24:49,796
I've changed nothing about
the foreground element.


511
00:24:49,796 --> 00:24:52,206
All I've done is I've changed
that background, that it's --


512
00:24:52,206 --> 00:24:53,336
that it's being blended onto.


513
00:24:53,836 --> 00:24:55,266
And the nice thing
about this is,


514
00:24:55,716 --> 00:24:58,126
is it still preserves
that same character.


515
00:24:58,246 --> 00:25:01,096
As I'm going across and as
the background is changing,


516
00:25:01,656 --> 00:25:05,216
the overall composition
really preserves its character


517
00:25:05,216 --> 00:25:06,806
and still gives you
some of that --


518
00:25:06,806 --> 00:25:09,776
the important color
information in the,


519
00:25:09,776 --> 00:25:11,546
of the background
that's underneath


520
00:25:11,946 --> 00:25:13,336
and lets it shine through.


521
00:25:14,466 --> 00:25:19,156
So in fact, I'd like to argue
the whole can be greater


522
00:25:19,156 --> 00:25:21,236
than the sum of the parts
when you're doing --


523
00:25:21,236 --> 00:25:23,676
when you combine using
the right blend modes --


524
00:25:24,386 --> 00:25:28,056
and solve some tricky
design problems.


525
00:25:28,276 --> 00:25:31,426
So what are these vibrant
materials of which we speak?


526
00:25:31,426 --> 00:25:34,096
So Rachel enumerated
some of the areas.


527
00:25:34,096 --> 00:25:37,966
So we have built up a
couple of different styles,


528
00:25:38,326 --> 00:25:40,936
one of which can be seen
in menus and popovers.


529
00:25:41,236 --> 00:25:43,226
Then there's the
general Light appearance,


530
00:25:43,226 --> 00:25:45,816
which is what you see in the
sidebars and source lists.


531
00:25:46,306 --> 00:25:48,716
Then there's the
translucent titlebars.


532
00:25:48,716 --> 00:25:50,046
That's another vibrant material.


533
00:25:50,906 --> 00:25:54,086
And of course, the Dark
appearance, which you saw


534
00:25:54,856 --> 00:25:55,956
in Notification Center.


535
00:25:56,486 --> 00:26:00,916
There are a couple of key
new vibrant system behaviors.


536
00:26:00,916 --> 00:26:04,166
What I mean by this is areas
where your application --


537
00:26:04,166 --> 00:26:05,466
even without taking any steps,


538
00:26:05,466 --> 00:26:06,856
you'll just automatically
benefit


539
00:26:06,856 --> 00:26:09,676
from this new composition
style that we're using.


540
00:26:10,076 --> 00:26:11,746
One of which of course
is source lists.


541
00:26:12,246 --> 00:26:14,356
Then there's the
translucent titlebar.


542
00:26:14,866 --> 00:26:19,416
Menus and popovers automatically
get this, as their background.


543
00:26:20,406 --> 00:26:24,086
And of course, menu bar and
status items in menu bars.


544
00:26:25,396 --> 00:26:29,756
So how do you use
vibrancy in your apps?


545
00:26:29,906 --> 00:26:31,056
How do you use it effectively?


546
00:26:31,606 --> 00:26:35,736
Well, once again, it's all
about combining foreground


547
00:26:35,736 --> 00:26:37,666
with background in
an appropriate way,


548
00:26:37,666 --> 00:26:38,876
in an appropriate
and interesting way.


549
00:26:39,466 --> 00:26:43,626
Well, NSVisualEffectView
is the view


550
00:26:43,626 --> 00:26:45,816
that actually is performing
the role of this background.


551
00:26:45,816 --> 00:26:47,916
This is the thing that we
built up in the slides before,


552
00:26:47,916 --> 00:26:50,596
with that white and the
blur and the translucency.


553
00:26:50,596 --> 00:26:52,076
This provides us the
substrate onto --


554
00:26:52,076 --> 00:26:56,626
the canvas onto which
we are going to draw.


555
00:26:56,726 --> 00:27:00,156
And it's offered in light and
dark basic material flavors.


556
00:27:00,386 --> 00:27:01,526
This is stuff that you've --


557
00:27:01,706 --> 00:27:05,566
that Rachel briefly
demonstrated a moment ago.


558
00:27:06,116 --> 00:27:09,196
And the important thing
about NSVisualEffectView


559
00:27:09,196 --> 00:27:11,686
and what it does to your
applications, is it takes care


560
00:27:11,686 --> 00:27:15,706
of all of the steps
needed to make sure that,


561
00:27:16,196 --> 00:27:18,286
as the content -- either
underneath your window


562
00:27:18,286 --> 00:27:21,746
or underneath the view, inside
of the window as it changes --


563
00:27:21,746 --> 00:27:24,886
as you scroll things around,
as you drag windows around,


564
00:27:24,886 --> 00:27:26,016
as your background changes --


565
00:27:26,266 --> 00:27:27,676
it's going to automatically
update


566
00:27:27,946 --> 00:27:29,486
as the content underneath
changes.


567
00:27:29,786 --> 00:27:30,946
You don't have to worry
about any of that;


568
00:27:30,946 --> 00:27:33,976
all of that is handled for you.


569
00:27:34,376 --> 00:27:36,506
So let's move on
to NSAppearance.


570
00:27:37,146 --> 00:27:39,526
So NSAppearance is --
in this equation --


571
00:27:39,526 --> 00:27:42,066
is the one that's taking the
role of the foreground element.


572
00:27:42,066 --> 00:27:45,206
And it's going to drive
both the selection


573
00:27:45,206 --> 00:27:47,796
of the foreground content,
as well as drive some


574
00:27:47,796 --> 00:27:48,736
of the blending behavior.


575
00:27:49,016 --> 00:27:53,766
So it's offered in two
appearance variants:


576
00:27:53,916 --> 00:27:55,466
NSAppearanceName VibrantLight


577
00:27:55,776 --> 00:27:57,786
and then NSAppearanceName
VibrantDark.


578
00:27:59,756 --> 00:28:05,416
And what its role in life is,
is to provide sort of a panoply


579
00:28:05,416 --> 00:28:08,736
of colors, controls and
template image treatments


580
00:28:09,096 --> 00:28:11,816
that are appropriate and
suitable for vibrant rendering


581
00:28:11,816 --> 00:28:12,396
when deployed


582
00:28:12,396 --> 00:28:14,396
in VisualEffectViews
on vibrant surfaces.


583
00:28:15,056 --> 00:28:17,636
Now, this is important because,


584
00:28:17,716 --> 00:28:21,236
as you saw in the earlier
section on vibrancy,


585
00:28:21,776 --> 00:28:23,406
selecting the foreground
element --


586
00:28:23,406 --> 00:28:25,516
now the way things
combine is very different


587
00:28:25,516 --> 00:28:26,096
than traditionally.


588
00:28:26,096 --> 00:28:27,636
So selecting something
appropriate


589
00:28:27,636 --> 00:28:29,426
for vibrant rendering
is very critical.


590
00:28:29,986 --> 00:28:33,056
And so we need alternate sets
of these design values --


591
00:28:33,056 --> 00:28:34,866
alternate versions of
these foreground elements,


592
00:28:35,156 --> 00:28:38,056
to get the right result
on these vibrant surfaces.


593
00:28:38,936 --> 00:28:42,356
So as I said, it's really the --


594
00:28:42,356 --> 00:28:44,046
NSAppearance can really
be thought of as the thing


595
00:28:44,076 --> 00:28:46,836
that helps select and identifies
your foreground content source


596
00:28:46,836 --> 00:28:48,306
and makes it appropriate
and locked


597
00:28:48,306 --> 00:28:51,246
in for vibrant rendering
for that material.


598
00:28:52,296 --> 00:28:56,646
And once it's in effect, then
AppKit can automatically pick


599
00:28:56,646 --> 00:28:57,806
up the appropriate colors,


600
00:28:57,806 --> 00:28:59,486
pick up the appropriate
template treatments --


601
00:28:59,566 --> 00:29:00,836
pick them all up and do the --


602
00:29:00,836 --> 00:29:02,786
and pick up the right
blend modes, especially,


603
00:29:03,126 --> 00:29:07,516
appropriate for the view and the
material you're rendering onto.


604
00:29:09,236 --> 00:29:10,686
Okay. So how do you do this?


605
00:29:10,686 --> 00:29:12,856
Well, let's actually
try to do a demo here.


606
00:29:13,846 --> 00:29:14,616
Little bit exciting.


607
00:29:19,186 --> 00:29:21,556
Demo one. Okay.


608
00:29:22,206 --> 00:29:28,816
So -- so what we're going to do
here is -- we have a very, very,


609
00:29:28,816 --> 00:29:33,656
very simple application that's
basically just an image editor


610
00:29:33,656 --> 00:29:36,146
-- an image editor with some
adjustment sliders here.


611
00:29:36,146 --> 00:29:38,706
And what I'm going to try to
show you is how simple it is


612
00:29:38,706 --> 00:29:43,136
to just add some
vibrancy into your UI


613
00:29:43,136 --> 00:29:44,936
and how little effort it takes.


614
00:29:44,936 --> 00:29:46,726
So all we're going to
do is we're going --


615
00:29:46,726 --> 00:29:48,056
what we're going to try to
do is we're going to try


616
00:29:48,056 --> 00:29:51,226
to take a VisualEffectView
and put it inside


617
00:29:51,226 --> 00:29:53,896
of that little inspector and
re-host the controls inside


618
00:29:54,406 --> 00:29:56,646
of it to give it a
vibrant appearance.


619
00:29:57,406 --> 00:29:59,116
So let me go ahead and do that.


620
00:29:59,966 --> 00:30:03,826
So the first thing I'm
going to do is I'm going


621
00:30:03,826 --> 00:30:07,286
to create a VisualEffectView,
initialize it


622
00:30:07,286 --> 00:30:09,936
with the inspector's
frame, and then I'm going


623
00:30:09,936 --> 00:30:14,286
to set its appearance to be
the VibrantDark appearance.


624
00:30:14,566 --> 00:30:17,146
Now, the next -- and then the
only other thing I really need


625
00:30:17,146 --> 00:30:18,376
to do is I need to
re-host the --


626
00:30:18,376 --> 00:30:21,996
take out the existing
content, the controls


627
00:30:21,996 --> 00:30:24,316
out of the existing
contentView and put them


628
00:30:24,766 --> 00:30:27,376
into this new fxView and then,


629
00:30:27,376 --> 00:30:30,166
place it as the contentView
of the window.


630
00:30:30,216 --> 00:30:31,386
So that's all I'm doing here.


631
00:30:31,386 --> 00:30:33,696
This isn't really directly
relevant to the demo,


632
00:30:33,696 --> 00:30:36,256
but I just put it
here for full honesty


633
00:30:36,256 --> 00:30:38,236
and full disclosure here.


634
00:30:38,826 --> 00:30:44,516
So a key thing to see here
is the appearance being put


635
00:30:44,516 --> 00:30:48,446
on here, and you
see, presto change-o,


636
00:30:48,516 --> 00:30:51,276
I have not only some nice,
dark vibrant material,


637
00:30:51,276 --> 00:30:53,316
but I also have, you know,


638
00:30:53,316 --> 00:30:55,166
alternate slider --
alternate controls.


639
00:30:55,166 --> 00:30:57,636
That app can automatically
select different artwork that's


640
00:30:57,636 --> 00:30:59,536
appropriate for vibrant
rendering, specifically


641
00:30:59,536 --> 00:31:00,646
for the dark material.


642
00:31:01,236 --> 00:31:02,976
The text colors have inverted,


643
00:31:03,386 --> 00:31:05,486
and everything is
updating dynamically.


644
00:31:05,866 --> 00:31:08,556
And all it took was deploying
that VisualEffectView.


645
00:31:10,496 --> 00:31:13,356
Okay. So back to the podium.


646
00:31:19,026 --> 00:31:22,316
Okay. And that was a very,
very cursory demonstration.


647
00:31:22,476 --> 00:31:26,816
For a lot more details
about all the ins and outs


648
00:31:26,816 --> 00:31:30,556
of VisualEffectView and some
of the more advanced techniques


649
00:31:30,846 --> 00:31:32,886
of using them to
build some of the --


650
00:31:32,966 --> 00:31:35,256
build UI similar to some
of the things that we have


651
00:31:35,256 --> 00:31:39,566
in our system, please go to
the in-depth talk tomorrow:


652
00:31:39,566 --> 00:31:42,876
"Adopting Advanced Features of
the New UI in OS X Yosemite."


653
00:31:44,856 --> 00:31:50,866
Okay. So let's move on to
fonts, colors and artwork.


654
00:31:51,036 --> 00:31:54,676
These are the elements that are
typically the things that you


655
00:31:54,676 --> 00:31:55,956
as an app developer
might choose --


656
00:31:55,956 --> 00:31:57,606
make some specific
design choices


657
00:31:57,606 --> 00:31:58,646
and provide material for.


658
00:32:01,076 --> 00:32:03,916
So let's talk about fonts first.


659
00:32:04,356 --> 00:32:06,526
So what's new in fonts?


660
00:32:06,526 --> 00:32:09,296
Well, how about the system font?


661
00:32:09,416 --> 00:32:10,646
That's not that big
at all, is it?


662
00:32:11,356 --> 00:32:12,586
It's not a big change at all.


663
00:32:13,246 --> 00:32:14,556
Actually, it is.


664
00:32:14,556 --> 00:32:17,086
So this is -- here's
an illustration


665
00:32:17,306 --> 00:32:19,626
of the Mavericks menu bar,
which is Lucida Grande.


666
00:32:19,626 --> 00:32:23,446
And here's what it looks like
today with Helvetica Neue.


667
00:32:24,346 --> 00:32:27,366
It's actually a pretty
significant difference.


668
00:32:27,366 --> 00:32:29,216
It can be seen even
more dramatically


669
00:32:29,216 --> 00:32:31,846
if you compare the
two side-by-side.


670
00:32:31,846 --> 00:32:33,466
You'll notice it's quite --


671
00:32:33,466 --> 00:32:36,066
the sizing characteristics
are a little bit different,


672
00:32:36,066 --> 00:32:39,486
but in general, it is a
lot crisper typographically


673
00:32:39,486 --> 00:32:40,966
and sort of a cleaner layout.


674
00:32:42,876 --> 00:32:47,886
So let's talk about
this new system font.


675
00:32:48,346 --> 00:32:53,086
So it's Helvetica Neue, but
it is not just plain old,


676
00:32:53,086 --> 00:32:54,626
your mother's Helvetica Neue.


677
00:32:54,626 --> 00:32:58,036
It is a specially optimized
version of Helvetica Neue


678
00:32:58,036 --> 00:33:00,736
that has been optimized
for OS X.


679
00:33:01,066 --> 00:33:02,486
And what do I mean by optimized?


680
00:33:02,486 --> 00:33:06,836
Well, any time you put a font
-- for updating a system font,


681
00:33:06,836 --> 00:33:10,856
one of the key two things
to balance are aesthetics


682
00:33:11,176 --> 00:33:12,466
and layout compatibility.


683
00:33:12,936 --> 00:33:15,216
Now, if aesthetics were
all we were concerned with,


684
00:33:15,256 --> 00:33:18,326
we would just render the font
exactly how the type designer


685
00:33:18,326 --> 00:33:20,596
originally envisioned it
and try to do our best job


686
00:33:20,596 --> 00:33:22,606
in rendering the
individual letterforms,


687
00:33:22,906 --> 00:33:23,696
and leave it at that.


688
00:33:24,226 --> 00:33:26,866
Well, the problem is, if we're
switching the system font,


689
00:33:26,866 --> 00:33:29,436
this means we're updating the
typography in applications


690
00:33:29,436 --> 00:33:31,696
that haven't been modified and
may not even be aware of it.


691
00:33:32,146 --> 00:33:34,136
So we have to think
about things where, like,


692
00:33:34,136 --> 00:33:36,696
the layout may change, because
ultimately these fonts have


693
00:33:36,696 --> 00:33:38,066
different size characteristics.


694
00:33:38,906 --> 00:33:41,026
So the version of Helvetica Neue


695
00:33:41,026 --> 00:33:43,136
that we've deployed has been
specifically tuned to sort


696
00:33:43,136 --> 00:33:45,706
of balance this tradeoff, to try
to strike a good balance there,


697
00:33:45,706 --> 00:33:47,716
to make sure that we still
get the aesthetic win


698
00:33:47,716 --> 00:33:49,956
that we're really looking for
with this clean typography.


699
00:33:50,406 --> 00:33:53,176
But not at the cost of
application compatibility.


700
00:33:54,226 --> 00:33:57,016
So let me go into that with a
little more detail and explain.


701
00:33:57,796 --> 00:34:01,576
So here's -- here's an
emulation of the Finder item --


702
00:34:01,576 --> 00:34:05,036
app menu item that you
might see on the menu bar.


703
00:34:05,366 --> 00:34:07,446
And this is it rendered
in Lucida Grande.


704
00:34:08,335 --> 00:34:12,005
And you can see here,
sort of approximations


705
00:34:12,005 --> 00:34:14,025
of the interglyph spacing, here.


706
00:34:14,766 --> 00:34:17,065
And now, as I switch
this to Helvetica Neue,


707
00:34:17,065 --> 00:34:19,815
there are some interesting
things going on here.


708
00:34:19,946 --> 00:34:24,025
Because you notice the overall
thing is shorter, but actually,


709
00:34:24,326 --> 00:34:27,755
if you look carefully, some of
the letters actually got bigger,


710
00:34:27,755 --> 00:34:28,985
and some of them got shorter.


711
00:34:29,096 --> 00:34:31,136
So it's not a straightforward
thing as saying, "Oh, yeah,


712
00:34:31,136 --> 00:34:33,045
Helvetica is -- everything
is just going to get shrunk


713
00:34:33,045 --> 00:34:33,846
by a certain percentage."


714
00:34:33,846 --> 00:34:35,565
No, it's much more
subtle than that.


715
00:34:35,565 --> 00:34:36,485
It can be content-dependent.


716
00:34:36,485 --> 00:34:37,656
Some things are getting winder.


717
00:34:38,016 --> 00:34:39,216
Some things are getting shorter.


718
00:34:39,436 --> 00:34:40,646
Some things are getting
more consistent,


719
00:34:40,646 --> 00:34:41,636
where they were inconsistent


720
00:34:41,636 --> 00:34:44,226
in Lucida Grande (between
the capital letter sizes


721
00:34:44,346 --> 00:34:46,746
and the lowercase letter sizes).


722
00:34:47,156 --> 00:34:48,886
So it's a complicated equation.


723
00:34:48,886 --> 00:34:50,335
So that's why it was important


724
00:34:50,636 --> 00:34:53,916
to optimize these
metrics appropriately,


725
00:34:54,206 --> 00:34:57,806
so that they solve this
compatibility problem


726
00:34:57,916 --> 00:34:58,776
in a useful way.


727
00:34:58,776 --> 00:35:00,456
Here, you can see the
two on top of each other,


728
00:35:00,456 --> 00:35:02,716
and you can see more
dramatically this difference.


729
00:35:02,716 --> 00:35:05,426
You see the F, in
particular, is actually shorter


730
00:35:05,426 --> 00:35:08,036
in Lucida Grande, and
it's wider -- sorry.


731
00:35:08,376 --> 00:35:12,946
It's thinner in Lucida Grande
and wider in Helvetica Neue.


732
00:35:12,946 --> 00:35:15,556
But almost all the other
letterforms, except maybe the D,


733
00:35:15,856 --> 00:35:17,916
are actually considerably
shorter.


734
00:35:18,776 --> 00:35:22,656
So layout compatibility
-- that's a big topic.


735
00:35:22,656 --> 00:35:23,626
It's an important topic.


736
00:35:24,426 --> 00:35:28,886
And what do we do about it?


737
00:35:29,226 --> 00:35:34,086
Well, for unmodified
applications, one technique


738
00:35:34,086 --> 00:35:39,106
that we've applied is to
apply layout compression


739
00:35:39,146 --> 00:35:42,216
if there's a danger of
the texturing clipping,


740
00:35:42,636 --> 00:35:43,656
given the existing balance.


741
00:35:43,656 --> 00:35:46,026
So for example, if you have a
text field that was sized just


742
00:35:46,026 --> 00:35:50,516
so to just fit just perfectly
on Mavericks, you know,


743
00:35:50,516 --> 00:35:53,406
there's a chance that
that same text field,


744
00:35:53,766 --> 00:35:59,626
if no measures were taken, would
get clipped with the new font.


745
00:35:59,836 --> 00:36:01,376
Because some string choice


746
00:36:01,376 --> 00:36:03,876
in there was causing the
overall layout to be longer.


747
00:36:04,546 --> 00:36:07,776
Well, in those circumstances,
we're just going to apply a bit


748
00:36:07,776 --> 00:36:11,006
of an interglyph compression, to
try to make sure that it fits,


749
00:36:11,006 --> 00:36:12,636
so you at least see
all the information,


750
00:36:12,636 --> 00:36:13,996
that there's no information
loss.


751
00:36:15,706 --> 00:36:19,336
And as I'm -- and this
is active for apps built


752
00:36:19,336 --> 00:36:20,956
against 10.9 or earlier only.


753
00:36:20,956 --> 00:36:22,636
So this is an important
takeaway here,


754
00:36:22,636 --> 00:36:25,496
because this compression
mitigation


755
00:36:25,496 --> 00:36:28,456
that we do does not apply if
your app is targeted and built


756
00:36:28,456 --> 00:36:32,196
against the 10.10 SDK.


757
00:36:32,656 --> 00:36:34,796
So what does this mean?


758
00:36:34,796 --> 00:36:36,266
This means that you
don't have to worry


759
00:36:36,266 --> 00:36:39,556
about your existing applications
having problems with your users.


760
00:36:39,556 --> 00:36:41,846
But when you're going
forward, we encourage you


761
00:36:41,846 --> 00:36:46,186
to really look carefully at
your text in your applications


762
00:36:46,186 --> 00:36:48,096
and make sure that you're
using either auto layout


763
00:36:48,096 --> 00:36:50,446
or that you're really sort
of comparing and testing,


764
00:36:50,446 --> 00:36:51,576
making sure that the widths


765
00:36:51,576 --> 00:36:54,536
of all your text elements
is optimized accordingly.


766
00:36:55,926 --> 00:36:59,616
And I also want to mention
that this compression technique


767
00:36:59,656 --> 00:37:02,316
that we apply is not a
silver bullet by any means.


768
00:37:03,036 --> 00:37:05,726
And one shouldn't think
of it as the cure-all.


769
00:37:06,426 --> 00:37:09,336
And the reason is, is because
layout compression does not come


770
00:37:09,336 --> 00:37:10,676
without a significant cost,


771
00:37:10,676 --> 00:37:13,616
which is that it can
really affect legibility.


772
00:37:14,226 --> 00:37:18,676
And that's especially true
on 1x non-retina displays,


773
00:37:18,676 --> 00:37:21,416
where there's few pixels to
work with for every glyph.


774
00:37:21,416 --> 00:37:22,946
And every pixel's doing
a heck of a lot of work,


775
00:37:22,946 --> 00:37:24,366
and if you're compressing
things together,


776
00:37:24,366 --> 00:37:26,276
it can really make
things suffer in terms


777
00:37:26,276 --> 00:37:27,566
of the information legibility.


778
00:37:29,616 --> 00:37:31,496
So how do you use
this new system font?


779
00:37:31,716 --> 00:37:35,626
How do you make sure your app
is using the appropriate type?


780
00:37:36,786 --> 00:37:40,106
Well, thankfully, we
have a whole bunch


781
00:37:40,106 --> 00:37:42,346
of system font selectors
to choose from.


782
00:37:42,696 --> 00:37:44,826
And that's what we encourage
you to use, to make sure


783
00:37:44,826 --> 00:37:46,706
that you're using
the right things.


784
00:37:46,706 --> 00:37:49,466
So if you're doing this
in Interface Builder,


785
00:37:49,836 --> 00:37:51,586
rest assured that,
you know, if --


786
00:37:51,586 --> 00:37:53,946
as long as you stick with
the standard font selections


787
00:37:53,946 --> 00:37:55,556
in the font popups that show


788
00:37:55,556 --> 00:37:56,996
up in Interface Builder,
you should be okay.


789
00:37:57,306 --> 00:37:59,666
Otherwise, we encourage you to
use the system font selectors.


790
00:37:59,666 --> 00:38:01,066
These are the ones
that are in NSFont.


791
00:38:01,396 --> 00:38:03,946
An example -- there's many
more, but I'm just picking a few


792
00:38:03,946 --> 00:38:06,996
to highlight here --
NSFont systemFontOfSize,


793
00:38:07,226 --> 00:38:10,076
NS boldSystemFontOfSize
and a new one,


794
00:38:10,076 --> 00:38:11,676
actually, labelFontOfSize.


795
00:38:11,736 --> 00:38:12,856
Actually, that's not, uh,


796
00:38:12,856 --> 00:38:14,146
I don't think that's
necessarily new.


797
00:38:14,146 --> 00:38:16,976
(There's another label
thing coming that's a little


798
00:38:16,976 --> 00:38:17,316
bit newer.)


799
00:38:18,106 --> 00:38:21,706
So all of these selectors
will make sure


800
00:38:21,706 --> 00:38:24,436
that the appropriate UI font
-- the one that's optimized --


801
00:38:24,686 --> 00:38:26,386
has been selected and
is going to be used


802
00:38:26,386 --> 00:38:28,476
as appropriate for UI.


803
00:38:29,036 --> 00:38:32,036
Important takeaway here, and
if you remember nothing else


804
00:38:32,296 --> 00:38:33,816
about this font sections
talk is:


805
00:38:33,876 --> 00:38:37,136
please do not explicitly set
your font, either in code


806
00:38:37,136 --> 00:38:40,516
or in IB, to Helvetica Neue,
you know, as a literal string.


807
00:38:40,516 --> 00:38:43,406
Because that's the actual
document content font.


808
00:38:43,406 --> 00:38:44,886
That's the not-optimized
version.


809
00:38:44,886 --> 00:38:46,696
You'll get very unexpected
results,


810
00:38:46,816 --> 00:38:50,196
and it may make your application
less compatible going forward,


811
00:38:50,196 --> 00:38:53,666
as we continue to improve
upon the typography of OS X.


812
00:38:56,646 --> 00:38:58,936
Okay. So colors.


813
00:38:59,456 --> 00:39:03,086
So colors are an often
underappreciated element of UI,


814
00:39:03,086 --> 00:39:06,826
which is a shame, because if you
actually look at most windows


815
00:39:06,826 --> 00:39:09,586
on most applications, about
90 percent of the pixels --


816
00:39:09,586 --> 00:39:13,056
if that, you know -- are
actually composed of color fill.


817
00:39:13,056 --> 00:39:14,726
So they're actually a
pretty important part


818
00:39:14,726 --> 00:39:16,966
of building your UI.


819
00:39:16,966 --> 00:39:18,336
And it's especially
important now,


820
00:39:18,336 --> 00:39:21,256
in this day of multiple
appearances


821
00:39:21,666 --> 00:39:24,486
in different sections
of your applications.


822
00:39:25,986 --> 00:39:29,876
So we have system
colors in Cocoa,


823
00:39:29,876 --> 00:39:34,386
and these are what we urge
you to gravitate towards.


824
00:39:35,196 --> 00:39:37,306
And by system colors,
I mean two things.


825
00:39:37,306 --> 00:39:39,586
I mean literally the colors
provided by the system,


826
00:39:39,856 --> 00:39:42,176
in terms of the color selectors
in NS color [inaudible],


827
00:39:42,176 --> 00:39:45,226
but I also would like to
emphasize that you should think


828
00:39:45,226 --> 00:39:48,806
of colors as a system of colors,
not just as a set of numbers


829
00:39:48,806 --> 00:39:50,956
that you might pick out, you
know, from a designer like,


830
00:39:50,956 --> 00:39:54,706
oh, RGB 128, 142, 136.


831
00:39:54,826 --> 00:39:57,166
No. Think of them as
a system, as in like,


832
00:39:57,436 --> 00:39:58,816
"what is the semantic color


833
00:39:58,816 --> 00:40:00,506
that would be appropriate
to use here?"


834
00:40:00,896 --> 00:40:05,236
And this is where system colors
can really help, because many


835
00:40:05,236 --> 00:40:07,056
of the standard colors
-- like for example,


836
00:40:07,056 --> 00:40:08,596
NSColor controlTextColor,


837
00:40:08,826 --> 00:40:13,016
NSColor
secondarySelectedControlColor


838
00:40:13,016 --> 00:40:15,236
and, you know, there's a
whole host of others --


839
00:40:15,416 --> 00:40:18,716
have been adapted, have
been optimized to make sure


840
00:40:18,716 --> 00:40:20,296
that they work in all areas


841
00:40:20,296 --> 00:40:22,256
and under all appearances
in the new UI.


842
00:40:22,256 --> 00:40:25,326
And they may also change in the
future, so it's just a good way


843
00:40:25,326 --> 00:40:26,866
to bulletproof yourself.


844
00:40:28,216 --> 00:40:35,506
For textual elements in
your UI, we also would


845
00:40:35,506 --> 00:40:38,826
like to encourage you thinking
of laying out your UI in sort


846
00:40:38,826 --> 00:40:40,676
of an information hierarchy.


847
00:40:41,576 --> 00:40:46,156
And by that, I mean you might
have some sort of primary sort


848
00:40:46,206 --> 00:40:47,966
of information elements
or labels and then,


849
00:40:47,966 --> 00:40:50,116
you might have some secondary
supporting information.


850
00:40:50,116 --> 00:40:52,986
You'll see this pattern in
many different applications


851
00:40:53,476 --> 00:40:54,106
in Yosemite.


852
00:40:54,926 --> 00:40:58,606
And we've introduced some new
color selectors specifically


853
00:40:58,606 --> 00:40:59,556
to help with this.


854
00:41:00,136 --> 00:41:02,516
The two color selectors
are labelColor


855
00:41:02,946 --> 00:41:04,316
and secondaryLabelColor.


856
00:41:04,936 --> 00:41:07,866
And the nice thing about these
is they've been specifically


857
00:41:07,866 --> 00:41:10,256
designed to work well
on almost any context


858
00:41:10,256 --> 00:41:12,506
that you might put them on,
whether it be menus (which have


859
00:41:12,506 --> 00:41:14,526
that light vibrant
appearance), regular windows,


860
00:41:15,216 --> 00:41:18,306
Notification Center
and its dark UI.


861
00:41:18,306 --> 00:41:22,136
No matter what you do,
it will look correct.


862
00:41:24,456 --> 00:41:25,786
So what about control text?


863
00:41:25,786 --> 00:41:27,796
What about button text,
or other things like that?


864
00:41:28,746 --> 00:41:33,246
Well, the good news there
is the control text --


865
00:41:33,246 --> 00:41:34,396
Cocoa is going to make sure


866
00:41:34,396 --> 00:41:36,986
that control text
automatically adapts


867
00:41:37,456 --> 00:41:39,306
to any particular control state


868
00:41:40,436 --> 00:41:43,106
that your control
may find itself in.


869
00:41:43,106 --> 00:41:46,346
So actually, I would
encourage you to --


870
00:41:46,456 --> 00:41:49,296
unless you have a really
compelling, overriding reason


871
00:41:49,296 --> 00:41:53,306
to do so, please let the
Kit provide the coloring


872
00:41:53,306 --> 00:41:56,626
for any textual elements
on your buttons and images.


873
00:41:56,626 --> 00:41:57,716
(I'll get to images
in a second.)


874
00:41:57,966 --> 00:42:01,426
Because there really are such
a wide range of interaction


875
00:42:01,426 --> 00:42:04,546
and control states, and our
designers have very carefully


876
00:42:04,546 --> 00:42:07,326
selected colors and stylings
for each one of these


877
00:42:07,326 --> 00:42:08,986
across all the different
appearances.


878
00:42:09,756 --> 00:42:12,496
And doing so, this
will let the --


879
00:42:12,496 --> 00:42:16,676
the Kit provide the optimal
appearance, including adapting


880
00:42:16,676 --> 00:42:18,016
to the vibrant NSAppearances.


881
00:42:18,016 --> 00:42:21,276
Here you can see in the
example of what label color


882
00:42:21,276 --> 00:42:24,436
and secondary label color
look like across the Light


883
00:42:24,436 --> 00:42:26,556
and the Dark vibrant
appearances.


884
00:42:26,926 --> 00:42:28,166
And you can see that they sort


885
00:42:28,166 --> 00:42:29,656
of preserve their
design intent --


886
00:42:29,656 --> 00:42:30,876
they're being primary
and secondary.


887
00:42:31,126 --> 00:42:32,116
They're both vibrant --


888
00:42:32,256 --> 00:42:34,736
the secondary one is a
little bit more so; that is,


889
00:42:35,156 --> 00:42:37,006
it's letting a little more
of the background through.


890
00:42:37,006 --> 00:42:38,176
It's a little more translucent.


891
00:42:38,176 --> 00:42:39,776
It's picking up a little
more color of the background.


892
00:42:40,426 --> 00:42:44,196
But it will preserve -- it will
be a right design choice on any


893
00:42:44,196 --> 00:42:47,176
of these appearances, including
the non-vibrant appearance,


894
00:42:47,226 --> 00:42:49,196
the regular aqua one.


895
00:42:52,046 --> 00:42:56,956
Okay. So the last item here,
in this section: artwork.


896
00:42:57,996 --> 00:43:00,896
So artwork is one of the
other important elements


897
00:43:00,896 --> 00:43:03,826
that you might want to
integrate into your application.


898
00:43:05,136 --> 00:43:06,966
And for this -- the thing I want


899
00:43:07,066 --> 00:43:11,736
to mainly highlight
is template images.


900
00:43:12,546 --> 00:43:14,906
Template images can
be an excellent way


901
00:43:14,906 --> 00:43:17,656
to get maximum flexibility
out of your artwork


902
00:43:18,036 --> 00:43:21,536
and have it be resilient
across a wide range


903
00:43:21,536 --> 00:43:23,356
of UI scenarios in
your application.


904
00:43:24,086 --> 00:43:25,256
So what are template images?


905
00:43:25,626 --> 00:43:26,446
A brief review.


906
00:43:26,716 --> 00:43:28,616
Template images are
image resources


907
00:43:28,616 --> 00:43:32,486
where the image content itself
is just providing the shape


908
00:43:33,396 --> 00:43:36,466
of the control, of the element
that you want to depict.


909
00:43:37,116 --> 00:43:39,086
It's providing no
color information.


910
00:43:39,086 --> 00:43:40,846
It's -- I mean, you can put
color in there, but it's going


911
00:43:40,846 --> 00:43:42,886
to get ignored, because it's
basically just the shape


912
00:43:42,956 --> 00:43:44,216
that is critical.


913
00:43:44,936 --> 00:43:48,396
And then what happens is, that
makes it possible for AppKit


914
00:43:48,396 --> 00:43:51,416
to transform it, with a
context specific appearance.


915
00:43:51,416 --> 00:43:52,986
It can take that shape,
and it can render it


916
00:43:52,986 --> 00:43:55,016
in a translucent gray
when it's disabled,


917
00:43:55,016 --> 00:43:57,096
or it can render it bright
blue when it's selected.


918
00:43:57,546 --> 00:44:00,046
And it can make all these
design choices and style it


919
00:44:00,246 --> 00:44:02,336
in a way that's appropriate
for a specific appearance


920
00:44:02,336 --> 00:44:04,906
and for a specific
interaction state.


921
00:44:09,896 --> 00:44:12,646
Okay. App compatibility.


922
00:44:15,106 --> 00:44:19,816
So Mac OS X Yosemite does
bring some big changes


923
00:44:19,816 --> 00:44:20,816
to your app's look and feel.


924
00:44:21,706 --> 00:44:24,076
And even for apps that really
haven't made any changes,


925
00:44:24,656 --> 00:44:28,336
the visual differences
can be quite significant.


926
00:44:29,256 --> 00:44:30,426
This is Dictionary here,


927
00:44:30,426 --> 00:44:32,526
and even though this is a pretty
straightforward application,


928
00:44:32,526 --> 00:44:37,816
you can see that the differences
are notable, both in terms


929
00:44:37,816 --> 00:44:39,686
of the general aesthetics,
as well as the layout


930
00:44:40,466 --> 00:44:41,456
of some of the elements.


931
00:44:42,346 --> 00:44:47,556
Well, so what does this mean
for your app, and how to think


932
00:44:47,556 --> 00:44:52,316
about having your
app work on Yosemite?


933
00:44:52,966 --> 00:44:55,856
Well, first and foremost, we'd
really like to encourage you


934
00:44:55,856 --> 00:44:59,116
to make your app as awesome
as it can be on Yosemite


935
00:44:59,116 --> 00:45:03,466
and take advantage of as many
of these new UI experiences


936
00:45:03,466 --> 00:45:05,616
that we've provided the
building blocks for, including


937
00:45:05,706 --> 00:45:10,436
but definitely not limited to
VisualEffectView and vibrancy.


938
00:45:11,276 --> 00:45:13,466
But what about deploying
on Mavericks?


939
00:45:14,086 --> 00:45:17,816
You know, it's quite legitimate
to want to have an application


940
00:45:17,816 --> 00:45:20,856
that works both on
Mavericks and on Yosemite,


941
00:45:21,306 --> 00:45:26,096
so that you can have --
support all of your customers.


942
00:45:27,106 --> 00:45:31,886
Well, having it both ways
can be quite challenging,


943
00:45:32,596 --> 00:45:38,366
given the changes that we've
made in the design of OS X.


944
00:45:38,366 --> 00:45:41,866
As a case study, I'd
like to show Xcode here.


945
00:45:41,866 --> 00:45:44,556
Now, this is Xcode
running on Mavericks.


946
00:45:45,556 --> 00:45:48,896
And notice the tab, which was
carefully designed to blend


947
00:45:48,896 --> 00:45:50,486
in very well with the
titlebar material.


948
00:45:50,486 --> 00:45:54,886
Well, here we go in Yosemite and
change the titlebar material,


949
00:45:54,886 --> 00:45:56,466
and suddenly, everything
doesn't match.


950
00:45:57,416 --> 00:45:59,956
Well, that -- this is an
illustration of the challenges


951
00:45:59,956 --> 00:46:01,466
that an app can face
if they have


952
00:46:01,526 --> 00:46:06,506
to support both the old UI
language as well as the new.


953
00:46:07,016 --> 00:46:09,546
Well, we all know this had a
happy ending because this is


954
00:46:09,546 --> 00:46:11,526
in fact what the Xcode
that you're living


955
00:46:11,526 --> 00:46:14,206
with right now looks
like Yosemite,


956
00:46:14,496 --> 00:46:17,726
because Xcode actually did make
an optimization to make sure


957
00:46:17,726 --> 00:46:22,076
that it looked perfect
for Yosemite release.


958
00:46:24,296 --> 00:46:29,686
So what techniques can you use
to set yourself up for success,


959
00:46:30,206 --> 00:46:33,256
in the face of these
big design changes?


960
00:46:33,896 --> 00:46:35,976
Well, first and foremost,
we encourage you to stick


961
00:46:35,976 --> 00:46:37,796
with the system, and
what we mean by that is,


962
00:46:38,196 --> 00:46:42,026
where possible -- unless you
have an overriding reason to do


963
00:46:42,026 --> 00:46:44,786
so -- stick with
standard controls,


964
00:46:44,786 --> 00:46:46,226
stick with standard
template images,


965
00:46:46,526 --> 00:46:50,216
stick with the system colors,
stick with system fonts.


966
00:46:50,866 --> 00:46:53,486
All of those things will
be automatically managed


967
00:46:53,486 --> 00:46:57,086
and adapted appropriately by
AppKit across both platforms


968
00:46:57,376 --> 00:46:58,386
and will look reasonable.


969
00:46:58,426 --> 00:47:01,486
Like for example, the entire
titlebar or all the control --


970
00:47:01,596 --> 00:47:03,476
all the font selectors,
all the colors.


971
00:47:03,736 --> 00:47:05,166
They'll automatically
resolve themselves


972
00:47:05,166 --> 00:47:07,006
to the appropriate
thing on each platform.


973
00:47:07,436 --> 00:47:10,956
Now, there are many cases where
that may not be sufficient,


974
00:47:11,216 --> 00:47:13,396
and where you actually do
have to write different code.


975
00:47:13,396 --> 00:47:17,706
Like, for example, the
selective tab change in Xcode.


976
00:47:18,386 --> 00:47:22,406
Well, you can also use runtime
checks to tailor your code


977
00:47:22,406 --> 00:47:24,056
and resources for each design.


978
00:47:26,406 --> 00:47:28,726
So let's go through
two techniques.


979
00:47:28,726 --> 00:47:31,546
There are more, but these
are two primary ones I wanted


980
00:47:31,546 --> 00:47:34,326
to show you for what
you might be able to do.


981
00:47:34,376 --> 00:47:36,096
Well, the first thing
could be a symbol check.


982
00:47:36,476 --> 00:47:38,496
So let's say you have an
application that's actually got


983
00:47:38,496 --> 00:47:40,516
a deployment target of 10.9.


984
00:47:40,516 --> 00:47:42,966
And you want to potentially
introduce some vibrant UI,


985
00:47:42,966 --> 00:47:45,066
but you know you can't
just directly reference


986
00:47:45,066 --> 00:47:48,036
that stuff on, you know, on
10.9, because it doesn't exist.


987
00:47:48,626 --> 00:47:50,966
Well, what you can
do is you can do --


988
00:47:51,286 --> 00:47:53,686
using the standard
weak-linking behavior,


989
00:47:54,066 --> 00:47:56,376
as soon as you have a
deployment target set to 10.9,


990
00:47:56,376 --> 00:47:59,196
you can always just check to
see if an important symbol --


991
00:47:59,196 --> 00:47:59,826
like in this case,


992
00:47:59,826 --> 00:48:02,436
NSAppearanceNameVibrantDark
-- is non-nil.


993
00:48:02,436 --> 00:48:06,066
And only if it's non-nil, then
you go ahead and use that code


994
00:48:06,066 --> 00:48:08,446
and set up a VisualEffectView,
for example,


995
00:48:08,786 --> 00:48:11,516
for a piece of your UI that
can be vibrant in Mavericks.


996
00:48:11,776 --> 00:48:13,276
Now, the nice thing
about this code is


997
00:48:13,276 --> 00:48:16,686
that it automatically
brings in the vibrancy


998
00:48:16,686 --> 00:48:19,746
when that application
is running on Yosemite


999
00:48:20,456 --> 00:48:24,846
but does whatever it needed
to do before on Mavericks.


1000
00:48:25,776 --> 00:48:28,456
Another approach is
to do a version check,


1001
00:48:28,546 --> 00:48:31,666
to sort of check what
runtime environment am I on?


1002
00:48:31,666 --> 00:48:33,056
This is a little
more straightforward,


1003
00:48:33,056 --> 00:48:34,736
a little more old-school.


1004
00:48:34,736 --> 00:48:36,746
So this is the standard
technique that we recommend


1005
00:48:36,746 --> 00:48:40,136
for doing that, at least
for Cocoa applications,


1006
00:48:40,206 --> 00:48:41,866
trying to do Cocoa-type work.


1007
00:48:42,386 --> 00:48:44,546
Compare the
NSAppKitVersionNumber


1008
00:48:44,926 --> 00:48:46,466
against the pre-published
constants.


1009
00:48:46,466 --> 00:48:49,446
Make sure you get that
greater-than sign correct.


1010
00:48:49,626 --> 00:48:50,456
Don't put it the other way;


1011
00:48:50,456 --> 00:48:52,186
you'll end up with
rather surprising results.


1012
00:48:52,686 --> 00:48:55,056
And then this would allow
you to, for example,


1013
00:48:55,056 --> 00:48:56,916
select different
image resources or go


1014
00:48:56,916 --> 00:49:02,736
into totally different code
constructions across one version


1015
00:49:02,736 --> 00:49:03,976
of the OS versus the other.


1016
00:49:07,536 --> 00:49:08,646
Oh, I missed that build.


1017
00:49:09,926 --> 00:49:15,296
So in general, what we'd
really like to encourage you


1018
00:49:15,296 --> 00:49:21,026
to do is look for opportunities
to freshen your design


1019
00:49:21,026 --> 00:49:22,806
in as many places as possible


1020
00:49:23,616 --> 00:49:25,236
and freshen your
design everywhere.


1021
00:49:26,256 --> 00:49:29,436
We really think that a majority
of your customers are going


1022
00:49:29,436 --> 00:49:31,246
to -- a majority of your
users, I should say --


1023
00:49:31,576 --> 00:49:34,316
are going to be on
the Yosemite design,


1024
00:49:34,356 --> 00:49:37,416
in Yosemite in the
very near future.


1025
00:49:37,796 --> 00:49:40,906
And it's going to be -- and if
you do have to make a choice


1026
00:49:41,786 --> 00:49:45,606
about updating your
design and you're worried


1027
00:49:45,946 --> 00:49:50,556
about changing things on
older platforms, I would also


1028
00:49:50,556 --> 00:49:52,726
like to encourage you
to: when in doubt,


1029
00:49:52,726 --> 00:49:53,926
favor the new visual style.


1030
00:49:53,926 --> 00:49:56,266
What I mean by that -- and
actually, Xcode is an example


1031
00:49:56,266 --> 00:50:01,146
of this as a case study --
It's okay to go and bring some


1032
00:50:01,146 --> 00:50:03,566
of the elements that have
been introduced in --


1033
00:50:03,866 --> 00:50:06,336
elements that have been
introduced into Yosemite


1034
00:50:06,336 --> 00:50:09,136
and bring them back into
your Mavericks app UI


1035
00:50:09,136 --> 00:50:09,896
design language.


1036
00:50:10,406 --> 00:50:13,166
So for example -- and I
don't mean like, obviously,


1037
00:50:13,166 --> 00:50:14,256
the whole translucency thing,


1038
00:50:14,256 --> 00:50:16,846
because that doesn't
work on Mavericks.


1039
00:50:17,126 --> 00:50:19,906
But in terms of button
shapes, button glyphs --


1040
00:50:20,256 --> 00:50:23,986
your icon, for example
-- it is totally okay,


1041
00:50:23,986 --> 00:50:26,426
and it actually works out
reasonably well to take some


1042
00:50:26,426 --> 00:50:30,396
of these simpler, cleaner
design styles that are featured


1043
00:50:30,396 --> 00:50:34,666
in Yosemite and to have
them show up on your buttons


1044
00:50:34,666 --> 00:50:37,496
or in your window titlebar in
your application on Mavericks.


1045
00:50:37,746 --> 00:50:39,196
So that can help
relieve some pressure.


1046
00:50:43,406 --> 00:50:47,036
So we're getting close
to wrapping up here.


1047
00:50:47,296 --> 00:50:49,656
So I just want to recap
what we talked about today.


1048
00:50:50,326 --> 00:50:52,876
So we have this -- there's a
brand new user interface design


1049
00:50:52,876 --> 00:50:53,566
for OS X.


1050
00:50:53,566 --> 00:50:54,536
We've walked through that.


1051
00:50:55,106 --> 00:50:56,626
We've talked a little
bit in trying


1052
00:50:56,626 --> 00:50:59,726
to understand the components of
vibrancy and what role it plays


1053
00:50:59,726 --> 00:51:00,696
and what it does for you.


1054
00:51:01,766 --> 00:51:04,216
And we talked about
adapting your applications


1055
00:51:04,936 --> 00:51:07,116
to these new features.


1056
00:51:08,196 --> 00:51:11,566
Please -- put yet another plug
in for the advanced session,


1057
00:51:11,906 --> 00:51:16,166
for more in-depth exploration
of using NSVisualEffectView,


1058
00:51:16,466 --> 00:51:20,866
using vibrant materials and
some of the tips and tricks


1059
00:51:20,866 --> 00:51:26,556
of getting these UIs
together with alacrity.


1060
00:51:28,896 --> 00:51:31,436
So in summary: lots
of excitement,


1061
00:51:31,436 --> 00:51:34,026
lots of exciting design
changes coming to OS X.


1062
00:51:34,026 --> 00:51:37,356
And if there's one message
I'd like to leave with you,


1063
00:51:37,356 --> 00:51:39,536
it is that the Cocoa
frameworks can help guide you


1064
00:51:39,536 --> 00:51:40,826
through all this change,


1065
00:51:40,886 --> 00:51:43,336
and please avail
yourselves of their services.


1066
00:51:44,366 --> 00:51:47,406
For more information, we
have our excellent Developer


1067
00:51:47,446 --> 00:51:48,716
Evangelist right over here


1068
00:51:48,716 --> 00:51:50,586
with the fancy sneakers,
Jake Behrens.


1069
00:51:51,496 --> 00:51:54,566
And I encourage you to email
him if you have any questions.


1070
00:51:54,606 --> 00:51:56,656
And there are many
related sessions,


1071
00:51:57,146 --> 00:51:58,836
including the "What's
New in Cocoa,"


1072
00:51:58,836 --> 00:52:00,096
which happened earlier today --


1073
00:52:00,096 --> 00:52:02,566
uh, actually -- yeah,
earlier today.


1074
00:52:02,796 --> 00:52:04,666
Today is Tuesday.


1075
00:52:04,666 --> 00:52:06,676
There's also the
advanced talk tomorrow.


1076
00:52:06,676 --> 00:52:10,266
I also want to point out the
"Creating Extensions for iOS


1077
00:52:10,266 --> 00:52:13,986
and OS X," which happened
actually, it's concluding --


1078
00:52:13,986 --> 00:52:15,436
it happened just an hour ago.


1079
00:52:15,736 --> 00:52:17,286
And the reason I mention
that is I think they talk


1080
00:52:17,286 --> 00:52:19,266
about Notification Center
extensions, which is one


1081
00:52:19,266 --> 00:52:21,606
of the places where you use
the Dark Vibrant appearance.


1082
00:52:22,446 --> 00:52:27,346
And there are also some there--
ah, are some Xcode sessions,


1083
00:52:27,346 --> 00:52:29,356
some Interface Builder sessions
that I encourage you to go to,


1084
00:52:29,356 --> 00:52:32,436
where they're not going to touch
directly on some of this stuff,


1085
00:52:32,436 --> 00:52:35,306
but it's very important to
see some of the new features


1086
00:52:35,306 --> 00:52:37,456
that have been exposed in the
new UI and Interface Builder.


1087
00:52:38,096 --> 00:52:41,846
And if you haven't gotten enough
of my not-an-engineer colleague,


1088
00:52:41,846 --> 00:52:45,726
Mike Stern, he's having a
talk right following this one,


1089
00:52:45,726 --> 00:52:47,676
called Designing
Intuitive User Experiences.


1090
00:52:48,056 --> 00:52:51,476
And you can get more
design wisdom.


1091
00:52:52,616 --> 00:52:54,606
And with that, I'd like
to wrap up and thank you.


1092
00:52:55,516 --> 00:52:59,500
[ Applause ]

