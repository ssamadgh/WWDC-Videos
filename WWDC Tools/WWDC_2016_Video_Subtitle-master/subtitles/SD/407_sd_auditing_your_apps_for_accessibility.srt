1
00:00:07,516 --> 00:00:17,500
[ Music ]


2
00:00:24,516 --> 00:00:26,696
[ Applause ]


3
00:00:27,196 --> 00:00:27,696
>> Good morning.


4
00:00:29,086 --> 00:00:30,796
My name is Susumu Harada.


5
00:00:30,796 --> 00:00:32,756
I'm an engineer on the
Accessibility Team.


6
00:00:33,146 --> 00:00:35,166
And I'm here today with
my colleague Patti.


7
00:00:35,576 --> 00:00:39,216
And we're really excited to
introduce to you a new tool


8
00:00:39,216 --> 00:00:43,206
that will make it easier than
ever for you to find, diagnose


9
00:00:43,346 --> 00:00:45,906
and fix accessibility
issues in your apps.


10
00:00:47,236 --> 00:00:49,296
So, some of you may be
new to accessibility.


11
00:00:49,526 --> 00:00:51,426
So let me quickly go
over what it means


12
00:00:51,426 --> 00:00:54,186
to make your app accessible
and some of the issues


13
00:00:54,186 --> 00:00:56,616
that you may encounter
as you develop your apps.


14
00:00:58,336 --> 00:01:01,176
So, accessibility
is about making sure


15
00:01:01,426 --> 00:01:05,446
that everyone can enjoy
the products and services


16
00:01:05,446 --> 00:01:07,346
and the great apps
that you all create,


17
00:01:07,596 --> 00:01:10,876
regardless of their abilities.


18
00:01:10,876 --> 00:01:12,816
Now, some users may
have difficulty


19
00:01:12,816 --> 00:01:16,076
with their vision
or their hearing.


20
00:01:16,646 --> 00:01:21,326
And some may experience
physical and motor challenges,


21
00:01:22,816 --> 00:01:24,586
or cognitive and
learning difficulties.


22
00:01:25,166 --> 00:01:29,586
So, to support this
wide diversity of users,


23
00:01:30,106 --> 00:01:32,886
we at Apple have worked
hard to make a number


24
00:01:32,886 --> 00:01:34,056
of assistive technologies


25
00:01:34,396 --> 00:01:38,056
that help augment various users'
abilities, such as VoiceOver


26
00:01:38,086 --> 00:01:40,656
for people with visual
impairments, or Switch control


27
00:01:40,656 --> 00:01:42,416
for people with motor
difficulties.


28
00:01:42,746 --> 00:01:48,806
And we also made sure that these
are available on all devices


29
00:01:48,806 --> 00:01:51,226
across all of our
platforms, from macOS


30
00:01:51,226 --> 00:01:54,266
and iOS to watchOS and tvOS.


31
00:01:54,926 --> 00:01:59,146
And while these assistive
technologies are great,


32
00:01:59,146 --> 00:02:01,126
enabling tools, the heart


33
00:02:01,126 --> 00:02:03,996
of our users' experience are
the great apps that you create.


34
00:02:04,506 --> 00:02:08,936
So to better get a sense
for how your apps interact


35
00:02:08,936 --> 00:02:11,576
with our assistive technologies
and the kinds of issues


36
00:02:11,576 --> 00:02:14,576
that you may run into, let's
take a look at a quick example.


37
00:02:15,836 --> 00:02:18,816
So here I have a simple app that
I created called Math Learner.


38
00:02:19,236 --> 00:02:22,326
And it just presents a user with
an equation at the top to solve


39
00:02:22,646 --> 00:02:24,396
and four answer buttons
on the bottom.


40
00:02:24,956 --> 00:02:27,376
And the user can tap
on an answer button


41
00:02:27,436 --> 00:02:29,936
and you get a feedback whether
or not the answer is correct.


42
00:02:30,406 --> 00:02:31,746
It's pretty straightforward.


43
00:02:31,936 --> 00:02:33,546
And it looks like its
functioning properly.


44
00:02:34,176 --> 00:02:38,446
But how might a user who is
blind use this application?


45
00:02:39,796 --> 00:02:44,266
So, obviously without any
assistive technology they won't


46
00:02:44,266 --> 00:02:45,366
be able to see the screen.


47
00:02:45,676 --> 00:02:47,076
So, it's pretty useless.


48
00:02:47,776 --> 00:02:51,226
But fortunately, they can
use our screen reader called


49
00:02:51,226 --> 00:02:53,736
VoiceOver to have
the information


50
00:02:53,736 --> 00:02:55,226
on the screen read out to them.


51
00:02:55,386 --> 00:02:58,336
And they can use various
gestures to navigate around


52
00:02:58,336 --> 00:03:00,306
and interact with different
controls on the screen.


53
00:03:00,856 --> 00:03:02,676
So, if this app is
fully accessible,


54
00:03:03,086 --> 00:03:05,706
when the user touches on the
screen showing the equation,


55
00:03:06,336 --> 00:03:09,276
VoiceOver will read
out: "5 plus 3 equals."


56
00:03:10,146 --> 00:03:14,606
Great. So what does the
assistive technology


57
00:03:14,606 --> 00:03:16,956
like VoiceOver need
from your app in order


58
00:03:16,956 --> 00:03:18,806
to present the interface
in a meaningful way?


59
00:03:18,806 --> 00:03:21,366
So, there are several key
pieces of information.


60
00:03:21,786 --> 00:03:24,476
But first it needs to know


61
00:03:24,476 --> 00:03:27,396
where all the important
elements are on the screen.


62
00:03:28,836 --> 00:03:31,646
And for each of those elements
it needs to know their traits


63
00:03:31,646 --> 00:03:35,616
or their types such as what is a
button, heading or static text.


64
00:03:36,106 --> 00:03:41,116
And finally, it also needs
to know a descriptive label


65
00:03:41,366 --> 00:03:44,476
that uniquely identifies that
element so it can be described


66
00:03:44,506 --> 00:03:46,006
to the user in an
understandable way.


67
00:03:46,006 --> 00:03:51,916
So with these key pieces
of information VoiceOver


68
00:03:51,916 --> 00:03:54,626
and other assistive technologies
can present the interface


69
00:03:54,716 --> 00:03:57,586
to the user in a
very usable manner.


70
00:03:57,586 --> 00:04:02,526
And all the accessibility
information is provided


71
00:04:02,526 --> 00:04:04,896
by the app through
our accessibility API.


72
00:04:05,856 --> 00:04:07,596
And we at Apple have
worked very hard


73
00:04:07,666 --> 00:04:10,946
to build accessibility support
right into our UI frameworks


74
00:04:11,406 --> 00:04:14,866
so that if you build your apps
using standard controls all


75
00:04:14,866 --> 00:04:17,305
of this accessibility
information will be filled


76
00:04:17,305 --> 00:04:19,206
in for you automatically
by the framer.


77
00:04:19,206 --> 00:04:22,416
And you don't have
to do any extra work.


78
00:04:23,086 --> 00:04:25,596
But of course, your apps
will ultimately contain


79
00:04:25,596 --> 00:04:26,416
custom controls.


80
00:04:26,416 --> 00:04:28,836
And when they do, you
may need to provide some


81
00:04:28,836 --> 00:04:30,736
of this accessibility
information yourself.


82
00:04:31,856 --> 00:04:34,506
And if you don't, you might end
up with an inaccessible app.


83
00:04:35,176 --> 00:04:38,986
So let's see what the impact
of that might be like.


84
00:04:38,986 --> 00:04:41,146
So, if I had implemented
that equation view


85
00:04:41,146 --> 00:04:45,136
at the top using complete custom
drawing code like CA Layers


86
00:04:45,136 --> 00:04:48,566
or OpenGL, so they don't have
any accessibility information


87
00:04:48,566 --> 00:04:49,186
by default.


88
00:04:49,186 --> 00:04:51,666
So unless I explicitly
provide them,


89
00:04:52,776 --> 00:04:55,336
they might be completely
invisible to VoiceOver


90
00:04:55,336 --> 00:04:56,656
and other assistive
technologies.


91
00:04:57,176 --> 00:05:00,136
And with these four
buttons at the bottom,


92
00:05:00,446 --> 00:05:03,316
if I used custom views
that act like buttons,


93
00:05:03,706 --> 00:05:06,046
but forgot to indicate
their accessibility trait


94
00:05:06,196 --> 00:05:09,066
as being a button,
then VoiceOver


95
00:05:09,066 --> 00:05:10,786
and their users will
have no idea


96
00:05:10,786 --> 00:05:12,566
that they can press on these.


97
00:05:14,036 --> 00:05:16,066
And finally, for the
Help button here,


98
00:05:16,516 --> 00:05:18,876
if I implemented it using
custom drawing code,


99
00:05:19,236 --> 00:05:23,616
and forgot to supply the
accessibility to the label,


100
00:05:23,616 --> 00:05:26,126
VoiceOver will have no idea
how to describe it to the user.


101
00:05:26,356 --> 00:05:28,866
And the user will have no
idea what that button is for.


102
00:05:29,936 --> 00:05:32,916
So you can see how if you're
missing some key accessibility


103
00:05:32,916 --> 00:05:36,016
information the user
experience for someone relying


104
00:05:36,016 --> 00:05:40,946
on assistive technology
could be pretty bad.


105
00:05:41,076 --> 00:05:42,966
So obviously it's very important


106
00:05:42,966 --> 00:05:46,326
to make sure your app is
fully accessible, to make sure


107
00:05:46,326 --> 00:05:48,216
that it has a positive
user experience.


108
00:05:49,536 --> 00:05:51,206
But there's also
another added benefit


109
00:05:51,206 --> 00:05:52,936
to making sure your
app is accessible.


110
00:05:53,026 --> 00:05:55,646
And that is a fully
accessible app --


111
00:05:56,216 --> 00:05:59,626
with a fully accessible app you
can write automated UI tests


112
00:05:59,626 --> 00:06:02,966
for it using Xcode's
UI Testing Support.


113
00:06:03,836 --> 00:06:06,306
And for more information on
how to do that, I encourage you


114
00:06:06,306 --> 00:06:08,676
to check out UI Testing
With Xcode session


115
00:06:08,676 --> 00:06:10,706
from last year's WWDC.


116
00:06:13,746 --> 00:06:15,506
Great. So, how can you make sure


117
00:06:15,506 --> 00:06:17,576
that your app is
providing all the necessary


118
00:06:17,576 --> 00:06:18,756
accessibility information?


119
00:06:19,316 --> 00:06:22,556
Well, one method that
we've been recommending is


120
00:06:22,636 --> 00:06:25,506
to use the actual assistive
technologies like VoiceOver


121
00:06:25,506 --> 00:06:27,266
and Switch control
with your apps.


122
00:06:27,816 --> 00:06:29,876
Now, this is still
the ideal method,


123
00:06:30,176 --> 00:06:33,346
since you can mirror the
actual user experience


124
00:06:33,436 --> 00:06:36,836
and also catch usability
issues beyond whether or not


125
00:06:36,836 --> 00:06:37,966
that something is accessible.


126
00:06:38,976 --> 00:06:41,766
But it does require that
you be familiar with how


127
00:06:41,766 --> 00:06:42,876
to use these technologies.


128
00:06:43,946 --> 00:06:46,376
And especially if your app
supports multiple platforms,


129
00:06:47,006 --> 00:06:49,026
you might find it quite
challenging to have


130
00:06:49,066 --> 00:06:51,796
to repeatedly deploy your
app on a specific device,


131
00:06:52,296 --> 00:06:54,766
run through it using each of
the assistive technologies


132
00:06:55,116 --> 00:06:57,706
and repeat the process
across each of our platforms.


133
00:06:58,266 --> 00:07:02,936
And all those platforms also
have a number accessibility


134
00:07:03,066 --> 00:07:04,956
settings that the
user can configure


135
00:07:05,416 --> 00:07:07,646
such the Dynamic Type font size.


136
00:07:08,106 --> 00:07:12,906
And you as a developer might
find it a little tedious to have


137
00:07:12,966 --> 00:07:15,696
to go and switch back and forth


138
00:07:15,736 --> 00:07:17,596
between changing the
accessibility setting,


139
00:07:17,916 --> 00:07:21,626
going back to your app,
verifying its effect on your app


140
00:07:21,626 --> 00:07:22,666
and repeating the process.


141
00:07:24,086 --> 00:07:25,916
So, we've heard all
your feedback.


142
00:07:26,186 --> 00:07:30,486
And today we're very excited
to announce a new, an easier,


143
00:07:30,486 --> 00:07:32,006
and more streamlined alternative


144
00:07:32,196 --> 00:07:35,846
to auditing your apps using the
new Accessibility Inspector.


145
00:07:39,046 --> 00:07:40,956
And in the new Accessibility
Inspector,


146
00:07:42,026 --> 00:07:43,816
with just a single
press of a button,


147
00:07:44,356 --> 00:07:45,966
it can automatically
audit your app


148
00:07:46,186 --> 00:07:47,666
for common accessibility issues.


149
00:07:48,036 --> 00:07:49,066
It's super easy.


150
00:07:49,196 --> 00:07:52,226
And it even suggests to you
how to fix those issues.


151
00:07:52,816 --> 00:07:57,136
And in the Interactive
Inspection mode you can really


152
00:07:57,136 --> 00:07:59,156
easily, point at any
element on your app


153
00:07:59,156 --> 00:08:01,606
and get very detailed
accessibility information


154
00:08:01,606 --> 00:08:02,086
about them.


155
00:08:02,686 --> 00:08:05,666
And this works whether your
app is running on a simulator


156
00:08:05,666 --> 00:08:07,256
or on a connected device.


157
00:08:07,826 --> 00:08:13,796
And we also offer a live
preview feature for settings,


158
00:08:14,416 --> 00:08:15,926
which lets you really easily go


159
00:08:15,926 --> 00:08:17,416
and change an accessibility
setting


160
00:08:17,556 --> 00:08:19,876
and immediately see
its effect on your app


161
00:08:20,176 --> 00:08:23,766
without having to
leave your app.


162
00:08:24,026 --> 00:08:26,246
And we're really
excited to announce


163
00:08:26,446 --> 00:08:30,166
that this Accessibility
Inspector now supports all


164
00:08:30,166 --> 00:08:30,906
of our platforms.


165
00:08:31,436 --> 00:08:35,416
This means that with a single
Accessibility Inspector app


166
00:08:35,416 --> 00:08:39,506
on your desktop you can audit
and inspect your apps running


167
00:08:39,506 --> 00:08:44,096
on macOS and iOS,
watchOS and even tvOS.


168
00:08:44,476 --> 00:08:48,306
And you can do this simply
by launching your app


169
00:08:48,306 --> 00:08:50,056
on the simulator or on a device


170
00:08:50,556 --> 00:08:53,126
and choosing the respective
target from the inspector.


171
00:08:53,626 --> 00:08:54,306
It's that easy.


172
00:08:54,896 --> 00:09:01,246
And we hope that with this
feature it'll make it easier


173
00:09:01,246 --> 00:09:03,826
than ever for you to test
an audit for your accessibly


174
00:09:03,826 --> 00:09:05,126
across all of our platforms.


175
00:09:05,656 --> 00:09:09,676
So, to give you a demo of
all these exciting features


176
00:09:09,676 --> 00:09:11,076
and the new accessibly
inspector,


177
00:09:11,646 --> 00:09:14,456
I'd like to hand
it over to Patti.


178
00:09:15,516 --> 00:09:20,046
[ Applause ]


179
00:09:20,546 --> 00:09:22,276
>> Hi. I'm Patty Hoa.


180
00:09:22,276 --> 00:09:25,306
And I'm super excited to
be the one to tell you all


181
00:09:25,306 --> 00:09:28,146
about our new Accessibility
Inspector.


182
00:09:28,556 --> 00:09:30,666
So, we've been working
really hard


183
00:09:30,666 --> 00:09:32,066
to incorporate all
your feedback.


184
00:09:32,656 --> 00:09:37,856
And so I can't wait to
show you what we have.


185
00:09:38,476 --> 00:09:42,516
So, to note, Accessibility
Inspector is now part


186
00:09:42,516 --> 00:09:43,906
of the developer package.


187
00:09:44,256 --> 00:09:46,686
That means you can
simply go into Xcode


188
00:09:47,116 --> 00:09:50,306
under the Open Developer
Tools section in the minibar


189
00:09:50,926 --> 00:09:53,076
and launch the Accessibility
Inspector.


190
00:09:53,986 --> 00:09:57,726
So here is a screenshot of
our new Accessibly Inspector.


191
00:09:57,726 --> 00:10:00,786
I want to bring your attention
to the top section first.


192
00:10:01,376 --> 00:10:05,386
On the left we have what
we call the Target Chooser.


193
00:10:05,966 --> 00:10:10,356
That allows you to inspect all
the different Apple devices


194
00:10:10,396 --> 00:10:12,946
that we have, including
your iPhone, your iPad,


195
00:10:13,706 --> 00:10:15,356
your desktop machine,
your watch,


196
00:10:15,396 --> 00:10:17,226
your TV and the simulators.


197
00:10:17,786 --> 00:10:22,996
In the middle we have what we
call the Inspection Pointer.


198
00:10:23,536 --> 00:10:25,276
Now, when you have this enabled,


199
00:10:25,676 --> 00:10:29,676
then the tool can
now inspect what is


200
00:10:29,676 --> 00:10:31,476
under your finger
on your device.


201
00:10:32,266 --> 00:10:35,906
Or if you're in a simulator
or the desktop, it is what is


202
00:10:36,226 --> 00:10:37,396
under your mouse cursor.


203
00:10:37,396 --> 00:10:41,966
Then on the right we
have these three buttons.


204
00:10:43,546 --> 00:10:46,276
These are three major
features of the tool.


205
00:10:46,936 --> 00:10:48,646
And this is what I'll
be spending the rest


206
00:10:48,646 --> 00:10:51,406
of the session telling you
more details and give you demos


207
00:10:51,406 --> 00:10:52,606
of these three features.


208
00:10:53,256 --> 00:10:54,726
So what are these
three features?


209
00:10:55,646 --> 00:10:57,266
First, we have Inspection.


210
00:10:58,056 --> 00:11:01,056
The Inspection feature
allows you to debug


211
00:11:01,056 --> 00:11:04,816
and analyze the accessibility
state of your app.


212
00:11:05,296 --> 00:11:07,866
Then we have the Audit
feature to help you


213
00:11:07,866 --> 00:11:10,586
to find accessibility
issues in your app.


214
00:11:12,296 --> 00:11:15,696
And last we have the Settings
feature that helps you


215
00:11:15,696 --> 00:11:20,236
to quickly test how accessibly
settings affect your app.


216
00:11:21,376 --> 00:11:25,046
So the first one I want to talk
about is the Audit feature.


217
00:11:26,336 --> 00:11:29,456
So, ultimately your goal is


218
00:11:29,516 --> 00:11:32,556
to make sure your app is
accessible to everyone.


219
00:11:33,206 --> 00:11:36,396
And to do that you need
to first audit your app.


220
00:11:36,736 --> 00:11:39,186
Now, earlier Susumu
mentioned it would be awesome


221
00:11:39,186 --> 00:11:43,406
if you could actually run with
VoiceOver or Switch control


222
00:11:43,586 --> 00:11:44,786
and audit your app that way.


223
00:11:45,796 --> 00:11:48,466
Or you could also hire an
accessibility consultant


224
00:11:48,466 --> 00:11:50,056
to do the evaluation
on your behalf.


225
00:11:50,746 --> 00:11:54,196
But today, I'm going to show
you a more cost effective way


226
00:11:54,406 --> 00:11:55,666
to get that solution.


227
00:11:55,666 --> 00:12:03,406
And that is simply use our
Audit feature of the tool.


228
00:12:04,416 --> 00:12:07,736
And so, in our Audit tab we
have this Run Audit button.


229
00:12:08,176 --> 00:12:10,346
And the best way to
show you and tell you


230
00:12:10,346 --> 00:12:12,266
about this feature is
to give you a demo.


231
00:12:22,056 --> 00:12:25,076
So I have here on the
screen a running version


232
00:12:25,076 --> 00:12:29,896
of the iOS version of the
Math Learner app running


233
00:12:29,896 --> 00:12:30,696
in the simulator.


234
00:12:30,696 --> 00:12:33,656
And so you could play a game.


235
00:12:33,656 --> 00:12:34,486
We have equation.


236
00:12:34,756 --> 00:12:36,626
We could pick one
of these choices.


237
00:12:37,266 --> 00:12:38,026
Not that one.


238
00:12:38,026 --> 00:12:38,836
This one. There.


239
00:12:38,836 --> 00:12:43,106
So that's how you play the game.


240
00:12:44,006 --> 00:12:47,026
Okay. So now I want to launch
the Accessibility Inspector.


241
00:12:48,606 --> 00:12:51,446
So, I simply go to Xcode.


242
00:12:51,796 --> 00:12:59,256
And on the top, under
Open Developer Tool,


243
00:12:59,256 --> 00:13:02,356
we're going to launch the
Accessibility Inspector.


244
00:13:02,966 --> 00:13:08,316
So the first thing you
want to tell the tool is


245
00:13:08,426 --> 00:13:10,126
which device you
want to inspect.


246
00:13:11,486 --> 00:13:15,166
So in our Target Chooser, I'm
going to pick the Simulator.


247
00:13:18,816 --> 00:13:21,616
And then we'll click
on this Audit tab here.


248
00:13:21,616 --> 00:13:24,826
And here's that Run Audit
button I told you about.


249
00:13:25,486 --> 00:13:29,106
So I'm going to go
ahead and click that.


250
00:13:29,326 --> 00:13:32,566
In a split second we've
just audited this app.


251
00:13:33,066 --> 00:13:35,556
And here are the
issues it found.


252
00:13:36,206 --> 00:13:38,976
You can now select that.


253
00:13:39,326 --> 00:13:40,926
As you cycle through
these issues,


254
00:13:41,206 --> 00:13:44,396
you'll note that there's a
corresponding red highlight


255
00:13:44,466 --> 00:13:46,476
over the area where
the problem resides.


256
00:13:47,066 --> 00:13:52,116
And of course, if you're
inspecting an actual device


257
00:13:52,116 --> 00:13:56,916
like iPhone or iPad, this is
probably the view you have.


258
00:13:57,396 --> 00:14:00,706
So, now if you want to
know where the issue is,


259
00:14:00,926 --> 00:14:03,466
you will have to take your
eye focus away from the tool


260
00:14:03,836 --> 00:14:06,186
and look on your iPad or iPhone.


261
00:14:06,846 --> 00:14:10,966
So what we have here is
a little nice features,


262
00:14:11,086 --> 00:14:13,816
just give you a little
preview, a screenshot,


263
00:14:14,176 --> 00:14:16,946
of that same element that
has the issue right here


264
00:14:16,946 --> 00:14:17,326
in the tools.


265
00:14:17,326 --> 00:14:20,346
So you could keep your eye
focused on the tool itself.


266
00:14:22,136 --> 00:14:22,716
All right.


267
00:14:22,806 --> 00:14:24,006
So we have these issues.


268
00:14:24,976 --> 00:14:27,466
So what's the next thing
you'd probably want to do?


269
00:14:27,466 --> 00:14:29,096
Go fix it.


270
00:14:29,546 --> 00:14:30,876
So let's pick one of
these issues here.


271
00:14:31,986 --> 00:14:33,166
Element has no description.


272
00:14:33,166 --> 00:14:38,056
And click on the disclosure
triangle here to expand


273
00:14:38,166 --> 00:14:39,116
to get more information.


274
00:14:41,666 --> 00:14:42,086
All right.


275
00:14:42,246 --> 00:14:44,586
So element has no description.


276
00:14:45,056 --> 00:14:46,836
What does that correspond
to the code?


277
00:14:46,836 --> 00:14:49,366
Do you know which
piece of code to write?


278
00:14:50,576 --> 00:14:53,356
Well, if you went online,
read all documentation


279
00:14:53,356 --> 00:14:56,456
about the accessibility API
that might give you some hint


280
00:14:56,496 --> 00:14:57,816
on how to fix this issue.


281
00:14:58,486 --> 00:15:00,906
But today I'm going to show you
a faster way to get that answer.


282
00:15:01,896 --> 00:15:03,506
Simply click on this
question mark here.


283
00:15:04,836 --> 00:15:07,546
And the tool will tell
you which API to fix up.


284
00:15:08,356 --> 00:15:11,456
It says: Consider setting
the accessibility label.


285
00:15:12,616 --> 00:15:15,556
So, at this point, if you
know how the API works,


286
00:15:15,756 --> 00:15:18,596
you would just go right into
your code and change it.


287
00:15:19,276 --> 00:15:22,596
But if you want more information
about how this API operates,


288
00:15:23,296 --> 00:15:24,886
you could click on
this hyperlink,


289
00:15:25,846 --> 00:15:27,626
which then will take you to --


290
00:15:27,936 --> 00:15:30,476
eventually take you to
documentation like this


291
00:15:30,476 --> 00:15:34,836
where you could find more
information about the API.


292
00:15:37,256 --> 00:15:38,296
All right?


293
00:15:38,296 --> 00:15:41,546
Since now I know which API
to override, let's go right


294
00:15:41,546 --> 00:15:43,366
into the code and fix it up.


295
00:15:50,166 --> 00:15:53,056
So, what I'm fixing
is those button views


296
00:15:53,386 --> 00:15:54,216
with the dots in there.


297
00:15:54,876 --> 00:15:58,986
And the way it's implemented,
it's simply a custom UI view.


298
00:15:59,866 --> 00:16:03,546
So now I'm simply going


299
00:16:03,666 --> 00:16:07,536
to override the accessibility
label here.


300
00:16:08,226 --> 00:16:16,346
And I'm going to return a string
that describes those dots.


301
00:16:16,346 --> 00:16:20,796
And of course, you should
always return localized string.


302
00:16:22,336 --> 00:16:24,616
Okay? So now I have my
method written here.


303
00:16:25,936 --> 00:16:29,246
I'm going to save it,
run and rerun that.


304
00:16:41,286 --> 00:16:43,076
Okay, let's go back to Addition.


305
00:16:43,336 --> 00:16:47,906
And let's clear out
the old issues we have.


306
00:16:49,416 --> 00:16:52,966
And rerun the Audit.


307
00:16:53,516 --> 00:16:55,486
With that simple
change in the code,


308
00:16:56,066 --> 00:16:58,096
we've just fixed up
a bunch of issues.


309
00:16:58,396 --> 00:16:58,946
Isn't that great?


310
00:17:00,516 --> 00:17:06,546
[ Applause ]


311
00:17:07,046 --> 00:17:07,316
All right.


312
00:17:07,756 --> 00:17:12,286
So, note that this same powerful
audit feature can be utilized


313
00:17:12,286 --> 00:17:15,146
by other teams of your
member, like QAs who may want


314
00:17:15,146 --> 00:17:17,026
to do an assessment
on your behalf.


315
00:17:17,705 --> 00:17:22,356
And of course, then they will
want to report those bugs.


316
00:17:23,986 --> 00:17:27,185
So, to speed up the process
in reporting those bugs,


317
00:17:27,796 --> 00:17:30,066
they can now just,
after they run Audit,


318
00:17:30,236 --> 00:17:33,506
they could simply copy and
paste it into the bug report.


319
00:17:34,186 --> 00:17:38,366
And of course, every good bug
report should have a screenshot.


320
00:17:39,716 --> 00:17:42,736
So we have here this
Quick Look button here.


321
00:17:44,006 --> 00:17:48,046
If I click on that, you should
get a nice big screenshot


322
00:17:48,496 --> 00:17:49,766
of your entire screen,


323
00:17:50,336 --> 00:17:53,426
plus where the problem
resides in this blue outline.


324
00:17:54,016 --> 00:17:55,666
So again, you could
just copy that


325
00:17:57,386 --> 00:17:58,976
and paste it into
your bug report.


326
00:17:59,186 --> 00:18:00,746
And now you're ready
to send off that bug.


327
00:18:02,516 --> 00:18:07,500
[ Applause ]


328
00:18:17,436 --> 00:18:17,726
All right.


329
00:18:17,846 --> 00:18:22,696
So what you've just seen is how
the Audit feature can help you


330
00:18:22,736 --> 00:18:25,936
auto-detect problems
in your app.


331
00:18:25,936 --> 00:18:27,646
It could give you
suggested solution.


332
00:18:27,986 --> 00:18:30,526
And even speed up the process
of reporting those bugs.


333
00:18:32,906 --> 00:18:36,006
As powerful and as
great as this feature is


334
00:18:36,046 --> 00:18:39,676
in helping you detect
issues in your app,


335
00:18:39,676 --> 00:18:44,436
similar to the compile
warnings in Xcode,


336
00:18:45,776 --> 00:18:49,906
having no warning does not
mean your app doesn't have


337
00:18:50,116 --> 00:18:50,706
any problem.


338
00:18:51,586 --> 00:18:53,306
So that's why it's
important for you to do some


339
00:18:53,306 --> 00:18:55,366
of that manual auditing
yourself.


340
00:18:55,886 --> 00:19:00,826
And to show you why
this is important,


341
00:19:01,206 --> 00:19:03,046
let me give you an example.


342
00:19:03,686 --> 00:19:07,136
So, suppose you have a button


343
00:19:07,786 --> 00:19:09,566
and its function
is to send a mail.


344
00:19:10,446 --> 00:19:13,046
Of course, the button comes
with a bunch of properties.


345
00:19:14,676 --> 00:19:16,956
One thing we tend to
like to do when we want


346
00:19:16,956 --> 00:19:19,966
to create a new button
is we simply take one


347
00:19:19,966 --> 00:19:22,596
of these existing button
and we duplicate it.


348
00:19:22,596 --> 00:19:25,836
And of course, that
means all the properties


349
00:19:26,156 --> 00:19:27,566
of that button gets transferred.


350
00:19:28,876 --> 00:19:31,016
And we go and tweak
some of the properties


351
00:19:31,016 --> 00:19:35,296
like the actions and the icons.


352
00:19:36,026 --> 00:19:37,136
That's fine.


353
00:19:37,956 --> 00:19:38,896
That's all good.


354
00:19:39,006 --> 00:19:44,176
Except if you forget to
update some of the property,


355
00:19:44,176 --> 00:19:45,056
that could be a problem.


356
00:19:45,356 --> 00:19:46,486
Especially in this case,


357
00:19:46,536 --> 00:19:48,656
it's the accessibility
label property.


358
00:19:50,566 --> 00:19:52,816
For assistive clients
like VoiceOver,


359
00:19:53,486 --> 00:19:56,476
the accessibility label
property is super important.


360
00:19:56,476 --> 00:19:59,226
Because that's the only
piece of information it has


361
00:19:59,226 --> 00:20:01,386
about how this button functions.


362
00:20:02,946 --> 00:20:06,926
So, if an assistive client
like VoiceOver were to land


363
00:20:06,926 --> 00:20:10,366
on this button, and you haven't
updated the accessibility label,


364
00:20:10,366 --> 00:20:11,926
it still says Send Mail.


365
00:20:11,926 --> 00:20:14,866
But they're going to
press a button thinking


366
00:20:14,866 --> 00:20:15,806
that they're sending a mail.


367
00:20:15,916 --> 00:20:18,466
In fact, they've just
deleted that mail.


368
00:20:18,466 --> 00:20:20,596
So that's not a great outcome.


369
00:20:21,226 --> 00:20:27,636
And so for that, we're
here to help you go


370
00:20:27,636 --> 00:20:30,086
through that manual
auditing using the tool.


371
00:20:30,466 --> 00:20:32,466
And that's why I want to
talk about Inspection.


372
00:20:36,316 --> 00:20:38,916
So let me give you some
highlights of Inspection


373
00:20:38,916 --> 00:20:40,266
and show you how that helps you


374
00:20:40,346 --> 00:20:42,186
through the manual
auditing process.


375
00:20:42,646 --> 00:20:44,836
So, suppose we have
a button here


376
00:20:44,876 --> 00:20:45,916
that has eight dots in there.


377
00:20:46,776 --> 00:20:52,866
In the Inspection tab on the top
section there's the Quick Look.


378
00:20:52,866 --> 00:20:58,846
And on the left side we have
the place where we describe,


379
00:20:59,226 --> 00:21:02,186
or give you a summary of how
this element's being described.


380
00:21:02,546 --> 00:21:06,606
So in this case the eight-dot
button, we'll just say 8.


381
00:21:07,196 --> 00:21:09,646
And to the right there's
the Navigation button


382
00:21:09,646 --> 00:21:11,846
that allows you to
easily navigate


383
00:21:11,846 --> 00:21:16,346
to the neighboring UI
elements from this element,


384
00:21:16,536 --> 00:21:18,056
from this button here.


385
00:21:19,076 --> 00:21:22,026
Then below we have
the basic section


386
00:21:22,876 --> 00:21:26,966
that contains properties that's
used to describe this element.


387
00:21:27,676 --> 00:21:30,436
So for example, we have
Label, which corresponds


388
00:21:30,436 --> 00:21:31,796
to Accessibility Label.


389
00:21:32,066 --> 00:21:33,486
And returns the value 8.


390
00:21:33,596 --> 00:21:34,856
And we have Trait.


391
00:21:35,016 --> 00:21:37,096
In this case, it's a
button, so it returns Button.


392
00:21:38,776 --> 00:21:41,076
And as this button
is interactable,


393
00:21:42,156 --> 00:21:45,286
you'll look into the
Action section and see


394
00:21:45,286 --> 00:21:48,216
that there's Activate
Action for this.


395
00:21:48,656 --> 00:21:52,006
And so you could simply click
on the Perform button to verify


396
00:21:52,346 --> 00:21:53,316
that this action works.


397
00:21:56,256 --> 00:21:58,146
So that's a highlight
of Inspection.


398
00:21:58,256 --> 00:22:03,346
Let me go ahead and
give you a demo of that.


399
00:22:12,096 --> 00:22:12,866
All right.


400
00:22:12,866 --> 00:22:15,846
So we're back here on our app.


401
00:22:15,846 --> 00:22:18,226
And now we're going to go
into the Inspection tab.


402
00:22:19,486 --> 00:22:23,116
So remember earlier I mentioned
there's this Inspection Pointer.


403
00:22:23,786 --> 00:22:26,366
Right now it's enabled, which
means when I take my mouse


404
00:22:26,456 --> 00:22:32,316
over the items in the simulator,
the tool will start inspecting


405
00:22:32,316 --> 00:22:33,626
that element under the cursor.


406
00:22:34,156 --> 00:22:35,976
And you can see that
green highlight.


407
00:22:36,976 --> 00:22:41,726
So on the simulator in desktop,
if you simply do a single click


408
00:22:42,256 --> 00:22:46,576
on that item, it will turn
off the Inspection Pointer,


409
00:22:47,016 --> 00:22:49,466
which then allows you
to now move your mouse


410
00:22:49,466 --> 00:22:51,946
around without affecting
what is being inspected.


411
00:22:52,966 --> 00:22:55,296
So right now we're
inspecting the addition.


412
00:22:55,296 --> 00:22:56,866
And you see a description
for that.


413
00:22:57,676 --> 00:23:01,106
Now, I could click on the
Go To Next Element button.


414
00:23:01,706 --> 00:23:04,466
And you'll see the highlight
goes down to these buttons here.


415
00:23:04,976 --> 00:23:08,166
Click again and we
go to the next one.


416
00:23:08,166 --> 00:23:09,466
And also you get a description.


417
00:23:09,466 --> 00:23:10,326
This is the four-dot.


418
00:23:11,726 --> 00:23:16,846
Note that we completely
bypass something important:


419
00:23:17,096 --> 00:23:17,816
The equation.


420
00:23:19,016 --> 00:23:21,686
So simply doing this
navigation you could kind


421
00:23:21,686 --> 00:23:24,206
of find issues along the way.


422
00:23:24,206 --> 00:23:26,896
In this case we might have a
problem with this equation.


423
00:23:27,896 --> 00:23:29,136
Let's keep going.


424
00:23:30,506 --> 00:23:32,886
So, we're on the
eight dots, nine dots.


425
00:23:34,116 --> 00:23:36,046
And down to this
Help button here.


426
00:23:36,376 --> 00:23:39,376
Except the description
doesn't look so great, does it?


427
00:23:39,466 --> 00:23:41,536
IMG 0151. Hmm.


428
00:23:41,966 --> 00:23:42,686
Doesn't sound right.


429
00:23:42,686 --> 00:23:45,556
So, again, that may be
another potential area


430
00:23:46,226 --> 00:23:48,156
where you need to fix it up.


431
00:23:48,616 --> 00:23:52,206
So, if you could simply use
this Quick Look section,


432
00:23:52,626 --> 00:23:57,586
navigate through all the
UIs in your app and verify


433
00:23:57,586 --> 00:23:59,586
that all the description
sounds good,


434
00:24:00,256 --> 00:24:01,226
then you're on the right track.


435
00:24:02,186 --> 00:24:06,266
And of course, if you have
any UI that is interactable,


436
00:24:06,326 --> 00:24:08,946
like these buttons,
you will simply go


437
00:24:08,946 --> 00:24:14,186
to the Action Section and, in
this case I'm going to click


438
00:24:14,186 --> 00:24:16,566
on the Perform button
to activate that button


439
00:24:16,926 --> 00:24:19,176
to verify the action works.


440
00:24:19,716 --> 00:24:21,376
All right.


441
00:24:21,766 --> 00:24:25,376
So what I've just shown you is
how you could use the Inspection


442
00:24:25,896 --> 00:24:30,776
to help you along with your
manual auditing of your app.


443
00:24:30,906 --> 00:24:36,706
Now the Inspection is also great
to help you do some debugging


444
00:24:36,746 --> 00:24:39,726
and analysis of the
accessibility state of your app.


445
00:24:40,956 --> 00:24:43,806
An example of that is
understanding how the


446
00:24:43,806 --> 00:24:47,556
accessibility hierarchy works,
which becomes quite important,


447
00:24:47,556 --> 00:24:49,926
especially on an OS X app


448
00:24:49,926 --> 00:24:52,626
where the corresponding
view hierarchy tend


449
00:24:52,846 --> 00:24:53,886
to be more complex.


450
00:24:54,806 --> 00:24:57,186
So to show you how this
feature works, let me go ahead


451
00:24:57,186 --> 00:25:00,326
and launch the OS X
version of the same app.


452
00:25:07,426 --> 00:25:07,736
All right?


453
00:25:07,916 --> 00:25:11,626
So I have here the OS X
version of the same app.


454
00:25:11,916 --> 00:25:13,506
And let's do something a
little bit more complex,


455
00:25:13,736 --> 00:25:14,856
multiplication.


456
00:25:16,046 --> 00:25:17,926
And so then when you
play, 3 times 6 --


457
00:25:17,926 --> 00:25:19,856
>> Sorry, try again.


458
00:25:19,856 --> 00:25:20,766
>> -- that, how about this?


459
00:25:20,766 --> 00:25:22,176
>> Incorrect.


460
00:25:22,176 --> 00:25:22,876
Try again.


461
00:25:22,876 --> 00:25:24,026
>> -- 6. 18.


462
00:25:24,026 --> 00:25:24,476
>> Correct.


463
00:25:25,546 --> 00:25:27,076
>> Okay, so you play
the same game.


464
00:25:27,076 --> 00:25:28,646
And you know, this app works.


465
00:25:29,116 --> 00:25:32,446
We have the same version
app running on iOS and OS X.


466
00:25:32,446 --> 00:25:32,616
All right.


467
00:25:33,436 --> 00:25:38,156
So the first thing you
want to do is tell the tool


468
00:25:38,156 --> 00:25:41,046
that you're inspecting
this new app.


469
00:25:42,006 --> 00:25:45,136
So, we're going to go
and select my MacBook Pro


470
00:25:45,136 --> 00:25:48,056
because we're inspecting the
desktop itself right now.


471
00:25:48,266 --> 00:25:50,096
And in this case we
could also select


472
00:25:50,156 --> 00:25:51,516
which app we want to inspect.


473
00:25:51,896 --> 00:25:53,216
So I'm going to pick
the Math Learner.


474
00:25:53,776 --> 00:25:59,076
And again, we could run Audit
and see what issues we find.


475
00:25:59,466 --> 00:26:00,726
And it found a bunch of issues.


476
00:26:01,806 --> 00:26:05,616
I want to bring your attention
to these four issues here.


477
00:26:06,366 --> 00:26:08,276
It says: "Potentially
inaccessible element."


478
00:26:08,756 --> 00:26:11,286
So the way these answer
choices were implemented,


479
00:26:11,286 --> 00:26:14,136
they were simply custom NSview.


480
00:26:14,666 --> 00:26:17,206
That's drawing those
text via CA text layers.


481
00:26:18,106 --> 00:26:21,246
Now, by default, CA layers
have no accessibility support.


482
00:26:21,876 --> 00:26:23,206
Which means if you create them,


483
00:26:24,086 --> 00:26:27,266
clients like VoiceOver is not
going to be able to see them.


484
00:26:27,266 --> 00:26:29,066
And so the tool is
telling you that right now,


485
00:26:29,376 --> 00:26:30,596
that these are not accessible.


486
00:26:30,596 --> 00:26:33,336
So to understand
how to fix this up,


487
00:26:33,336 --> 00:26:36,626
it helps to know how the
accessibility hierarchy works.


488
00:26:38,196 --> 00:26:39,626
So let's go to the Inspection.


489
00:26:40,166 --> 00:26:43,916
And again, I'm going to
turn on Inspection Pointer.


490
00:26:44,976 --> 00:26:47,866
And so if I bring my
mouse over and, again,


491
00:26:47,866 --> 00:26:49,646
it's going to inspect
whatever's under my mouse.


492
00:26:50,156 --> 00:26:50,966
What I'm interested


493
00:26:50,966 --> 00:26:53,566
in to inspect right now
is the entire window.


494
00:26:54,496 --> 00:26:56,656
And the reason is
because I want to know


495
00:26:56,916 --> 00:26:59,936
who are the children
of this window.


496
00:27:00,566 --> 00:27:04,686
So, the way I could I look
at that is I could look


497
00:27:05,266 --> 00:27:07,066
under the hierarchy
section here.


498
00:27:07,646 --> 00:27:12,756
And then here are all the
children of this window.


499
00:27:13,346 --> 00:27:16,366
So, I'm on the equation.


500
00:27:16,366 --> 00:27:17,656
You can see that red highlight.


501
00:27:18,426 --> 00:27:19,746
On the image.


502
00:27:20,726 --> 00:27:21,966
Some status text.


503
00:27:21,966 --> 00:27:25,136
And a bunch of stuff in
the Tool Bar section.


504
00:27:25,906 --> 00:27:30,516
So right now, those four crucial
answer choice buttons do not


505
00:27:30,516 --> 00:27:32,446
exist as children of the window.


506
00:27:33,816 --> 00:27:35,496
And so we know we need
to go and fix it up.


507
00:27:35,956 --> 00:27:38,106
But today I'm not going to
show you how to fix it up.


508
00:27:39,076 --> 00:27:41,256
Instead, I'm going to refer you


509
00:27:41,256 --> 00:27:44,926
to our sample code
accessibility UI example.


510
00:27:45,506 --> 00:27:47,916
It's something to download
from developer.apple.com.


511
00:27:48,696 --> 00:27:51,006
This sample app contains
a whole library


512
00:27:51,006 --> 00:27:52,696
with different UI scenarios


513
00:27:53,086 --> 00:27:56,116
and how you could add
accessibly support for those.


514
00:27:56,906 --> 00:27:58,166
So I encourage you to do that.


515
00:27:58,986 --> 00:28:01,676
And once you fix it up, I expect


516
00:28:01,786 --> 00:28:05,986
that those four answer choice
buttons should then appear


517
00:28:05,986 --> 00:28:08,136
as children of this window.


518
00:28:08,356 --> 00:28:11,516
So you could verify
it in this hierarchy.


519
00:28:17,156 --> 00:28:18,866
So, what I've shown you


520
00:28:18,866 --> 00:28:21,816
so far is how you can use
the Inspection feature


521
00:28:21,816 --> 00:28:24,296
to help you do some of
that manual auditing.


522
00:28:25,106 --> 00:28:27,416
And also how you could
use Inspection feature


523
00:28:27,716 --> 00:28:30,136
to do some more debugging
and analysis


524
00:28:30,136 --> 00:28:31,966
of the accessibility
state of your app.


525
00:28:33,136 --> 00:28:39,246
The next thing I want to
talk about is Settings.


526
00:28:39,726 --> 00:28:43,336
So, on every OS platform
we have many,


527
00:28:43,336 --> 00:28:45,106
many accessibility settings.


528
00:28:45,536 --> 00:28:47,126
That comes built right in.


529
00:28:48,026 --> 00:28:54,486
So for example, on the
iPhone, in the Settings app


530
00:28:54,756 --> 00:28:58,786
under General Accessibility
you're going to find many,


531
00:28:58,786 --> 00:29:01,546
many wonderful accessibility
features built right in.


532
00:29:02,106 --> 00:29:04,146
And settings like Toggle.


533
00:29:04,786 --> 00:29:09,006
So let's say if you want to
know how Dynamic Font affects


534
00:29:09,006 --> 00:29:09,926
your app.


535
00:29:09,926 --> 00:29:15,206
You could go in, adjust the font
size to something really large.


536
00:29:16,086 --> 00:29:16,806
Then go back to your app.


537
00:29:18,066 --> 00:29:21,526
And then visually verify how a
large font looks in your app.


538
00:29:22,256 --> 00:29:24,016
Then you could go back
to the Settings app.


539
00:29:25,856 --> 00:29:27,926
Readjust to something
really small.


540
00:29:28,456 --> 00:29:35,406
Then see how a small
font appears in your app.


541
00:29:35,686 --> 00:29:38,936
Now, you could see that this
could become quite tedious


542
00:29:38,936 --> 00:29:41,936
if you have to constantly
switch back and forth


543
00:29:42,306 --> 00:29:45,746
between the Settings
app and your app.


544
00:29:45,746 --> 00:29:47,906
And how do you know


545
00:29:47,906 --> 00:29:51,526
which accessibility settings
are important to test?


546
00:29:53,096 --> 00:29:58,376
Well, our tool will
answer that for you.


547
00:29:59,036 --> 00:30:02,096
So, here's our Settings tab.


548
00:30:02,446 --> 00:30:06,686
Our Settings tab
now present you some


549
00:30:06,686 --> 00:30:09,716
of the most common
accessibility settings


550
00:30:09,776 --> 00:30:10,876
that we want you to test.


551
00:30:12,586 --> 00:30:14,546
In addition, since it's
built right into the tool,


552
00:30:15,226 --> 00:30:16,576
you no longer have to
switch back and forth


553
00:30:16,576 --> 00:30:19,176
between the Settings
app and your app.


554
00:30:20,516 --> 00:30:25,016
[ Applause ]


555
00:30:25,516 --> 00:30:28,266
And here's a demo to
show you that can work.


556
00:30:29,316 --> 00:30:31,896
So in the Settings tab, now
you can invert the colors.


557
00:30:32,406 --> 00:30:36,416
And immediately see the
effect it has on your app.


558
00:30:37,356 --> 00:30:39,526
And we could do the same
thing with the font size.


559
00:30:40,076 --> 00:30:40,706
Adjust it.


560
00:30:41,886 --> 00:30:43,486
And see it directly.


561
00:30:54,716 --> 00:30:59,836
So, what you've just seen is
how cool the Settings feature is


562
00:31:00,336 --> 00:31:01,556
to make it easier for you.


563
00:31:02,226 --> 00:31:04,646
So, today I've shown you
our three major features.


564
00:31:05,966 --> 00:31:09,096
The first is the Audit
feature, that help you


565
00:31:09,096 --> 00:31:11,866
to autodetect accessibility
issues in your app,


566
00:31:13,226 --> 00:31:14,866
give you suggestions
on how to fix it.


567
00:31:15,526 --> 00:31:17,746
And make it faster for you
to report those issues.


568
00:31:20,576 --> 00:31:23,616
Then we saw how great
the Inspection feature is


569
00:31:23,976 --> 00:31:26,356
to guide you through that
process of manual auditing


570
00:31:27,166 --> 00:31:29,406
and allow you to do
debugging analysis


571
00:31:29,456 --> 00:31:32,296
of the accessibility
state of your app.


572
00:31:32,606 --> 00:31:35,076
And last, you just saw
the Settings feature


573
00:31:35,076 --> 00:31:37,006
that will make it
much easier for you


574
00:31:37,006 --> 00:31:41,346
to test how accessibility
settings changes affect


575
00:31:41,536 --> 00:31:41,816
your app.


576
00:31:43,406 --> 00:31:49,476
And that is the quick look
of Accessibility Inspector.


577
00:31:50,516 --> 00:31:55,736
[ Applause ]


578
00:31:56,236 --> 00:31:58,806
>> Great. Thank you Patti.


579
00:31:58,966 --> 00:32:01,076
So we really look
forward to having all


580
00:32:01,076 --> 00:32:02,976
of you try the new
Accessibility Inspector.


581
00:32:04,356 --> 00:32:08,836
And we hope that you now
feel motivated to keep users


582
00:32:08,836 --> 00:32:12,416
of all abilities in mind when
designing your next great app.


583
00:32:13,296 --> 00:32:15,026
And to help you do that,


584
00:32:15,026 --> 00:32:17,936
we introduced you today the
new Accessibility Inspector


585
00:32:17,936 --> 00:32:21,496
that we hope will make it easier
than ever for you to find,


586
00:32:21,626 --> 00:32:24,446
diagnose and fix accessibility
issues in your app.


587
00:32:24,956 --> 00:32:30,046
And it integrates seamlessly
with your development workflow


588
00:32:30,746 --> 00:32:34,156
so that you can easily
inspect and audit your apps,


589
00:32:34,336 --> 00:32:36,716
whether it's running on a
simulator or on a device.


590
00:32:38,026 --> 00:32:41,606
And we're really excited
to support all platforms


591
00:32:41,806 --> 00:32:45,126
from macOS, iOS, to
watchOS and tvOS.


592
00:32:46,506 --> 00:32:49,706
So we hope that with this
great new tool you will go out


593
00:32:49,706 --> 00:32:51,976
and create wonderful
apps that can be enjoyed


594
00:32:51,976 --> 00:32:53,776
by all users of all abilities.


595
00:32:55,716 --> 00:32:58,286
So you can find more information
about this talk along


596
00:32:58,286 --> 00:33:00,366
with the video and the
transcript at this URL.


597
00:33:01,836 --> 00:33:03,436
And we'd love to
hear your feedback.


598
00:33:03,936 --> 00:33:04,916
So we'd love to hear from you


599
00:33:04,916 --> 00:33:06,986
about how we can better
support your workflow.


600
00:33:07,336 --> 00:33:10,146
And any issues you might
encounter while using this


601
00:33:10,256 --> 00:33:11,496
Inspector to audit your apps.


602
00:33:11,496 --> 00:33:15,076
So you can send us
enhancements and bug requests --


603
00:33:15,206 --> 00:33:16,986
or bug reports, sorry,
not requests,


604
00:33:17,816 --> 00:33:20,946
bug reports at
bugreport.apple.com.


605
00:33:21,456 --> 00:33:24,146
And also participate
in our developer forum


606
00:33:24,146 --> 00:33:28,466
at forums.developer.apple.com.


607
00:33:28,546 --> 00:33:30,336
And in case you missed
it yesterday,


608
00:33:30,336 --> 00:33:32,846
we highly encourage you to
go back and watch the videos


609
00:33:32,846 --> 00:33:35,556
of these great sessions,
including the "What's New


610
00:33:35,556 --> 00:33:38,666
in Accessibility" talk and the
"Inclusive App Design" talk.


611
00:33:39,746 --> 00:33:42,346
And this evening we have
the Accessible Technology


612
00:33:42,346 --> 00:33:43,846
and Inclusive Design
get-together


613
00:33:44,346 --> 00:33:45,566
in Buena Vista Park.


614
00:33:45,736 --> 00:33:47,676
Not the real park, but the
one on the first floor.


615
00:33:48,216 --> 00:33:49,196
So we'd love to see you there.


616
00:33:49,726 --> 00:33:50,726
So thank you very much.


617
00:33:50,726 --> 00:33:52,156
And enjoy the rest
of the conference.


618
00:33:53,516 --> 00:34:00,750
[ Applause ]

