1
00:00:07,516 --> 00:00:17,776
[ Music ]


2
00:00:18,276 --> 00:00:19,586
>> In this session we are going


3
00:00:19,586 --> 00:00:20,826
to tell you all about Quick


4
00:00:20,826 --> 00:00:21,006
Look.


5
00:00:21,646 --> 00:00:22,806
Welcome to previews from the


6
00:00:22,806 --> 00:00:23,366
ground up.


7
00:00:24,096 --> 00:00:26,046
My name is Raffael and I'm going


8
00:00:26,046 --> 00:00:27,816
to present together with Maxime,


9
00:00:28,186 --> 00:00:29,576
both software engineers at


10
00:00:29,576 --> 00:00:29,946
Apple.


11
00:00:30,456 --> 00:00:34,256
We are going to start with a


12
00:00:34,256 --> 00:00:36,286
brief overview of what Quick


13
00:00:36,286 --> 00:00:36,826
Look is.


14
00:00:37,896 --> 00:00:39,326
Then we're going to show you how


15
00:00:39,326 --> 00:00:41,656
to adopt the Quick Look Preview


16
00:00:41,656 --> 00:00:43,366
Controller in your application.


17
00:00:43,726 --> 00:00:45,816
And then we're going to explain


18
00:00:45,816 --> 00:00:47,566
how to provide custom Quick Look


19
00:00:47,566 --> 00:00:51,216
previews and custom thumbnails


20
00:00:51,416 --> 00:00:52,976
for your own file formats.


21
00:00:55,536 --> 00:00:57,376
Let's jump right into it, what's


22
00:00:57,376 --> 00:00:57,866
Quick Look?


23
00:01:00,156 --> 00:01:01,486
Quick Look is all about


24
00:01:01,486 --> 00:01:03,786
previewing documents, it allows


25
00:01:03,786 --> 00:01:05,426
you to present documents without


26
00:01:05,426 --> 00:01:06,006
the hassle.


27
00:01:07,026 --> 00:01:08,936
More precisely, Quick Look is an


28
00:01:09,126 --> 00:01:10,726
iOS framework that provides


29
00:01:10,726 --> 00:01:12,826
multiple core features to you as


30
00:01:12,826 --> 00:01:13,466
a developer.


31
00:01:15,036 --> 00:01:16,236
It allows you to preview


32
00:01:16,236 --> 00:01:18,246
documents of several commonly


33
00:01:18,246 --> 00:01:21,716
used file formats, to provide


34
00:01:21,716 --> 00:01:23,926
custom previews for files of


35
00:01:23,926 --> 00:01:27,596
your very own file format, and


36
00:01:27,596 --> 00:01:29,236
to provide thumbnails to the


37
00:01:29,236 --> 00:01:31,296
system for files of your own


38
00:01:31,296 --> 00:01:32,326
custom file format.


39
00:01:35,786 --> 00:01:37,146
Quick Look is in fact already


40
00:01:37,146 --> 00:01:38,816
used by many of Apple's first


41
00:01:38,816 --> 00:01:39,886
party applications.


42
00:01:41,006 --> 00:01:43,896
For example, in files to present


43
00:01:43,896 --> 00:01:45,616
your documents that you have in


44
00:01:45,616 --> 00:01:45,976
the Cloud.


45
00:01:51,046 --> 00:01:53,346
Or in Mail and Notes to preview


46
00:01:53,346 --> 00:01:53,976
your attachments.


47
00:02:01,356 --> 00:02:03,266
And in Messages to show your


48
00:02:03,266 --> 00:02:04,676
pictures and videos that you've


49
00:02:04,676 --> 00:02:04,976
sent.


50
00:02:12,046 --> 00:02:13,286
So who is this session for?


51
00:02:13,686 --> 00:02:15,546
Well if you want to know how to


52
00:02:15,546 --> 00:02:17,106
present documents in your


53
00:02:17,106 --> 00:02:18,836
application without having to


54
00:02:18,836 --> 00:02:19,976
implement all the common


55
00:02:19,976 --> 00:02:21,696
features the users are used to


56
00:02:22,526 --> 00:02:23,676
you're in the right session.


57
00:02:24,986 --> 00:02:26,836
You also might own a custom file


58
00:02:26,836 --> 00:02:29,176
format which iOS doesn't support


59
00:02:29,176 --> 00:02:30,796
natively and you want to make


60
00:02:30,796 --> 00:02:32,306
sure that your file format is


61
00:02:32,306 --> 00:02:34,136
properly handled by iOS with


62
00:02:34,136 --> 00:02:35,776
custom thumbnails and previews


63
00:02:36,046 --> 00:02:37,356
stay here if you want to learn


64
00:02:37,356 --> 00:02:38,176
more about this.


65
00:02:39,776 --> 00:02:40,816
And no matter if you're a


66
00:02:40,816 --> 00:02:43,046
newcomer to iOS or if you


67
00:02:43,046 --> 00:02:45,026
already have an app we're going


68
00:02:45,026 --> 00:02:46,616
to guide you step-by-step.


69
00:02:49,356 --> 00:02:50,626
By the way, if you haven't


70
00:02:50,626 --> 00:02:51,906
checked it out yet you should


71
00:02:51,906 --> 00:02:53,526
definitely take a look at last


72
00:02:53,526 --> 00:02:55,286
year's session, Building Great


73
00:02:55,336 --> 00:02:57,876
Document-based Apps in iOS in


74
00:02:57,876 --> 00:02:59,586
which we have introduced the UA


75
00:02:59,586 --> 00:03:01,256
document browser view controller


76
00:03:01,506 --> 00:03:03,286
and also have covered the basics


77
00:03:03,286 --> 00:03:04,656
of Quick Look preview and


78
00:03:04,656 --> 00:03:06,086
thumbnail extensions briefly.


79
00:03:07,516 --> 00:03:09,046
There's also going to be a


80
00:03:09,046 --> 00:03:10,426
document browser one-on-one


81
00:03:10,426 --> 00:03:11,986
session this year which we


82
00:03:11,986 --> 00:03:13,606
highly encourage you to attend


83
00:03:14,016 --> 00:03:15,506
if you're interested in file


84
00:03:15,506 --> 00:03:16,896
handling on iOS.


85
00:03:21,246 --> 00:03:22,416
Quick Look has been around for


86
00:03:22,416 --> 00:03:23,426
quite a while already.


87
00:03:23,886 --> 00:03:25,146
It's been introduced with the


88
00:03:25,146 --> 00:03:26,536
iOS 4 SDK.


89
00:03:28,046 --> 00:03:29,386
The main class you're interested


90
00:03:29,386 --> 00:03:30,786
in is to [inaudible] preview


91
00:03:30,786 --> 00:03:32,476
controller which is a view


92
00:03:32,476 --> 00:03:34,356
controller to preview documents.


93
00:03:36,266 --> 00:03:38,386
It uses the classic data source


94
00:03:38,386 --> 00:03:40,086
and delegate pattern that you


95
00:03:40,086 --> 00:03:41,706
already know from your UIKit and


96
00:03:41,706 --> 00:03:42,526
other frameworks.


97
00:03:42,976 --> 00:03:46,156
And presenting Quick Look with a


98
00:03:46,156 --> 00:03:47,516
beautiful [inaudible] transition


99
00:03:47,516 --> 00:03:49,256
couldn't be easier with the API


100
00:03:49,256 --> 00:03:49,976
that we give you.


101
00:03:55,046 --> 00:03:56,076
Why would you want to use Quick


102
00:03:56,236 --> 00:03:56,326
Look?


103
00:03:56,606 --> 00:03:58,326
Well if you have a similar use


104
00:03:58,326 --> 00:04:00,986
case to files, mail or the other


105
00:04:00,986 --> 00:04:02,356
apps we've shown you before


106
00:04:02,986 --> 00:04:04,296
Quick Look is the perfect choice


107
00:04:04,296 --> 00:04:04,696
for you.


108
00:04:05,886 --> 00:04:07,146
Quick Look comes with everything


109
00:04:07,146 --> 00:04:08,426
you need out of the box.


110
00:04:10,306 --> 00:04:11,896
It supports the commonly used


111
00:04:11,896 --> 00:04:14,436
file types and it provides that


112
00:04:14,436 --> 00:04:16,495
native user experience that your


113
00:04:16,495 --> 00:04:18,055
users are used to from other


114
00:04:18,055 --> 00:04:19,656
first party iOS apps.


115
00:04:21,616 --> 00:04:22,976
We made sure Quick Look has a


116
00:04:22,976 --> 00:04:24,586
create performance on all


117
00:04:24,586 --> 00:04:26,056
devices, so that all the


118
00:04:26,056 --> 00:04:27,736
animations and gestures are


119
00:04:27,736 --> 00:04:28,166
fluid.


120
00:04:30,006 --> 00:04:31,106
And you might be dealing with


121
00:04:31,106 --> 00:04:32,976
files from untrusted sources,


122
00:04:33,046 --> 00:04:34,556
but don't worry we got your


123
00:04:34,556 --> 00:04:34,936
back.


124
00:04:35,466 --> 00:04:36,396
Quick Look comes with a


125
00:04:36,396 --> 00:04:38,046
sophisticated security model


126
00:04:38,046 --> 00:04:39,376
that keeps your application


127
00:04:39,376 --> 00:04:39,816
safe.


128
00:04:44,136 --> 00:04:45,056
Let's take a look at the


129
00:04:45,056 --> 00:04:46,296
supported file types.


130
00:04:47,196 --> 00:04:48,966
As you can see all the common


131
00:04:48,966 --> 00:04:49,986
types are in here.


132
00:04:50,406 --> 00:04:52,676
Media files such as images,


133
00:04:52,676 --> 00:04:54,506
audio files and videos,


134
00:04:54,876 --> 00:04:56,916
documents such as PDFs and


135
00:04:56,916 --> 00:04:58,926
office files, but also zip


136
00:04:58,926 --> 00:04:59,526
archives.


137
00:05:00,556 --> 00:05:02,786
Previewing a zip archive lets


138
00:05:02,786 --> 00:05:04,586
you look into the contents of


139
00:05:04,586 --> 00:05:06,346
the archive and view the


140
00:05:06,346 --> 00:05:08,466
contained files individually and


141
00:05:08,466 --> 00:05:09,516
share them for example.


142
00:05:11,446 --> 00:05:13,176
Now if your custom file format


143
00:05:13,176 --> 00:05:14,726
is missing in this list don't


144
00:05:14,726 --> 00:05:15,136
worry.


145
00:05:16,096 --> 00:05:17,786
Last year we introduced a new


146
00:05:17,786 --> 00:05:19,456
extension point for implementing


147
00:05:19,456 --> 00:05:21,046
Quick Look preview extensions.


148
00:05:21,916 --> 00:05:23,726
Preview extensions allow you as


149
00:05:23,726 --> 00:05:25,886
a developer to create a preview


150
00:05:25,886 --> 00:05:27,746
for files of your very own


151
00:05:27,746 --> 00:05:28,876
custom file format.


152
00:05:28,876 --> 00:05:31,176
We will cover this in the second


153
00:05:31,176 --> 00:05:31,976
part of the session.


154
00:05:32,476 --> 00:05:35,776
And this year with iOS 12 we


155
00:05:35,776 --> 00:05:37,376
have also added support for the


156
00:05:37,376 --> 00:05:41,196
new AR file format USDC, so with


157
00:05:41,196 --> 00:05:43,156
just a few lines of code you get


158
00:05:43,156 --> 00:05:44,856
a fully immersive augmented


159
00:05:44,856 --> 00:05:46,586
reality experience in your


160
00:05:46,586 --> 00:05:47,276
application.


161
00:05:48,746 --> 00:05:50,166
Okay, now let's talk about user


162
00:05:50,166 --> 00:05:50,896
experience.


163
00:05:51,556 --> 00:05:53,086
For each of the file types shown


164
00:05:53,086 --> 00:05:55,056
before we made sure that Quick


165
00:05:55,056 --> 00:05:56,606
Look provides the best possible


166
00:05:56,606 --> 00:05:58,866
preview on your mobile devices.


167
00:06:00,476 --> 00:06:01,936
For example, when previewing


168
00:06:01,936 --> 00:06:04,266
images you're able to zoom into


169
00:06:04,266 --> 00:06:05,796
the images conveniently.


170
00:06:06,246 --> 00:06:08,706
You're also able to close Quick


171
00:06:08,706 --> 00:06:10,466
Look with a swipe down gesture.


172
00:06:11,006 --> 00:06:14,596
In PDF documents you get a


173
00:06:14,596 --> 00:06:16,156
sidebar with thumbnails for


174
00:06:16,156 --> 00:06:17,286
easier navigation.


175
00:06:18,356 --> 00:06:20,366
In spreadsheets you can switch


176
00:06:20,366 --> 00:06:22,256
through the individual pages of


177
00:06:22,256 --> 00:06:22,956
the document.


178
00:06:24,396 --> 00:06:26,476
And in media files we show a


179
00:06:26,476 --> 00:06:28,176
scrubber that allows you to go


180
00:06:28,176 --> 00:06:29,656
back and forth and so on.


181
00:06:29,776 --> 00:06:30,626
You get the idea.


182
00:06:32,556 --> 00:06:33,896
So when you choose Quick Look


183
00:06:34,246 --> 00:06:36,046
your users get all the gestures


184
00:06:36,046 --> 00:06:37,586
they are used to from other


185
00:06:37,586 --> 00:06:37,976
applications.


186
00:06:43,386 --> 00:06:44,516
So what are some common use


187
00:06:44,516 --> 00:06:46,126
cases for using Quick Look?


188
00:06:47,196 --> 00:06:49,046
For example, you might want to


189
00:06:49,046 --> 00:06:51,136
let the users zoom into photos


190
00:06:51,136 --> 00:06:54,386
or you want to be able to flick


191
00:06:54,386 --> 00:06:55,876
through a collection of photos


192
00:06:56,046 --> 00:06:56,746
left and right.


193
00:06:57,826 --> 00:07:00,096
You want to play audio or video


194
00:07:00,096 --> 00:07:02,046
files without having to deal


195
00:07:02,046 --> 00:07:03,546
with lower-level frameworks.


196
00:07:03,546 --> 00:07:06,996
Or you want to present for


197
00:07:06,996 --> 00:07:08,946
example a scrollable and


198
00:07:08,946 --> 00:07:11,106
zoomable user agreement PDF to


199
00:07:11,106 --> 00:07:11,646
the user.


200
00:07:12,876 --> 00:07:14,026
Use Quick Look for this.


201
00:07:16,686 --> 00:07:17,876
But Quick Look shouldn't be


202
00:07:17,876 --> 00:07:19,956
misused, here's when not to use


203
00:07:19,956 --> 00:07:20,446
Quick Look.


204
00:07:21,936 --> 00:07:22,946
Quick Look is all about


205
00:07:22,946 --> 00:07:24,896
previewing but doesn't provide


206
00:07:24,896 --> 00:07:25,826
editing features.


207
00:07:26,766 --> 00:07:27,866
So if you need to provide


208
00:07:27,866 --> 00:07:29,806
functionality such as image


209
00:07:29,806 --> 00:07:32,746
editing, PDF management or movie


210
00:07:32,746 --> 00:07:34,376
trimming you need to choose a


211
00:07:34,376 --> 00:07:34,976
different approach.


212
00:07:39,046 --> 00:07:40,676
Similarly, if you need more


213
00:07:40,676 --> 00:07:42,336
advanced playback control for


214
00:07:42,336 --> 00:07:43,906
your videos Quick Look is


215
00:07:43,906 --> 00:07:45,426
probably not the best choice,


216
00:07:46,016 --> 00:07:47,896
you can use AVPlayer instead.


217
00:07:49,116 --> 00:07:50,016
Quick Look is meant to be


218
00:07:50,016 --> 00:07:51,346
presented full screen.


219
00:07:51,716 --> 00:07:53,276
If you simply want to present an


220
00:07:53,276 --> 00:07:55,456
image, a video or a document


221
00:07:55,636 --> 00:07:57,356
embedded in your layout together


222
00:07:57,356 --> 00:07:58,936
with other views surrounding it


223
00:07:59,616 --> 00:08:00,886
you probably want to use


224
00:08:00,886 --> 00:08:04,506
UAImageView, AVPlayer, WKWebView


225
00:08:04,576 --> 00:08:06,086
or other kind of views instead.


226
00:08:08,816 --> 00:08:10,316
Also note that it's not


227
00:08:10,316 --> 00:08:12,436
supported to customize the view


228
00:08:12,436 --> 00:08:13,856
hierarchy of Quick Look.


229
00:08:14,416 --> 00:08:16,316
Please don't try to add views on


230
00:08:16,316 --> 00:08:17,696
top of the previews the


231
00:08:17,696 --> 00:08:20,036
navigational toolbar, this is


232
00:08:20,036 --> 00:08:20,976
simply not supported.


233
00:08:26,166 --> 00:08:27,826
So now that we've introduced


234
00:08:27,826 --> 00:08:29,596
Quick Look, let's take a look at


235
00:08:29,596 --> 00:08:31,286
how to actually make use of our


236
00:08:31,286 --> 00:08:31,976
APIs.


237
00:08:37,275 --> 00:08:38,655
If you want to present documents


238
00:08:38,655 --> 00:08:40,966
to the user as a first step you


239
00:08:40,966 --> 00:08:42,166
instantiate a new


240
00:08:42,166 --> 00:08:44,296
QLPreviewController which is


241
00:08:44,296 --> 00:08:46,186
basically a UIViewController.


242
00:08:48,176 --> 00:08:49,726
Next, in order to tell the


243
00:08:49,726 --> 00:08:50,886
preview controller which


244
00:08:50,886 --> 00:08:53,006
documents to preview, you need


245
00:08:53,006 --> 00:08:54,726
to assign a data source to it.


246
00:08:55,676 --> 00:08:57,156
The data source is an object


247
00:08:57,156 --> 00:08:58,046
that conforms to the


248
00:08:58,046 --> 00:08:59,986
QLPreviewController data source


249
00:08:59,986 --> 00:09:00,426
protocol.


250
00:09:00,426 --> 00:09:02,496
We'll take a look at this in a


251
00:09:02,496 --> 00:09:02,906
second.


252
00:09:03,396 --> 00:09:07,116
And as a third and last step,


253
00:09:07,586 --> 00:09:09,006
all you have to do is present


254
00:09:09,006 --> 00:09:09,786
the view controller.


255
00:09:15,046 --> 00:09:16,296
Let's take a closer look at how


256
00:09:16,296 --> 00:09:17,436
the data source works.


257
00:09:18,376 --> 00:09:20,236
Your data source has to conform


258
00:09:20,236 --> 00:09:22,106
to the QLPreviewController data


259
00:09:22,106 --> 00:09:22,956
source protocol.


260
00:09:24,026 --> 00:09:25,706
This is a protocol that requires


261
00:09:25,706 --> 00:09:26,426
two methods.


262
00:09:26,776 --> 00:09:28,666
First, you need to return the


263
00:09:28,666 --> 00:09:30,406
number of items that your


264
00:09:30,406 --> 00:09:31,456
preview controller should


265
00:09:31,456 --> 00:09:31,946
preview.


266
00:09:32,956 --> 00:09:34,336
It should provide more than one


267
00:09:34,336 --> 00:09:36,166
item the users will be able to


268
00:09:36,166 --> 00:09:37,926
swipe left and right to flick


269
00:09:37,926 --> 00:09:38,936
through the documents.


270
00:09:41,156 --> 00:09:43,216
Next, Quick Look then will ask


271
00:09:43,216 --> 00:09:44,186
you for one or more


272
00:09:44,186 --> 00:09:46,446
QLPreviewItems depending on what


273
00:09:46,446 --> 00:09:47,706
number you've previously


274
00:09:47,706 --> 00:09:48,176
returned.


275
00:09:50,516 --> 00:09:52,636
Okay what's a QLPreviewItem?


276
00:09:53,456 --> 00:09:54,966
It's a protocol that acts as an


277
00:09:54,966 --> 00:09:56,736
abstraction for your documents.


278
00:09:57,386 --> 00:09:59,326
For Quick Look a preview item is


279
00:09:59,326 --> 00:10:02,136
basically the URL, where to find


280
00:10:02,136 --> 00:10:04,596
the document on disk and


281
00:10:04,596 --> 00:10:06,936
optionally a title that Quick


282
00:10:06,936 --> 00:10:08,336
Look will show in the navigation


283
00:10:08,336 --> 00:10:08,566
bar.


284
00:10:09,136 --> 00:10:12,216
The class representing documents


285
00:10:12,216 --> 00:10:14,206
in your app needs to conform to


286
00:10:14,206 --> 00:10:15,746
the QLPreviewItem protocol.


287
00:10:16,586 --> 00:10:19,266
But by the way, NSURL already


288
00:10:19,266 --> 00:10:21,376
conforms to the QLPreviewItem


289
00:10:21,376 --> 00:10:23,396
protocol, so if you don't need


290
00:10:23,396 --> 00:10:25,246
custom titles you can simply


291
00:10:25,246 --> 00:10:27,896
return NSURL instances in your


292
00:10:27,896 --> 00:10:29,806
data source without implementing


293
00:10:29,806 --> 00:10:30,936
the protocol yourself.


294
00:10:31,466 --> 00:10:34,896
Let's take a look at an example.


295
00:10:36,426 --> 00:10:38,136
In this scenario our view


296
00:10:38,136 --> 00:10:39,576
controller that presents Quick


297
00:10:39,576 --> 00:10:41,766
Look acts as the data source of


298
00:10:41,766 --> 00:10:43,166
the QLPreviewController.


299
00:10:44,496 --> 00:10:46,566
Therefore, we let it conform to


300
00:10:46,566 --> 00:10:48,236
the QLPreviewController data


301
00:10:48,236 --> 00:10:50,346
source in an extension and we


302
00:10:50,346 --> 00:10:51,586
implement the two methods.


303
00:10:53,276 --> 00:10:54,986
Here we are using an area of


304
00:10:54,986 --> 00:10:57,046
file URLs that acts as the


305
00:10:57,046 --> 00:10:57,396
model.


306
00:10:57,986 --> 00:10:59,516
We return the number of URLs


307
00:10:59,516 --> 00:11:02,096
that we have in the number of


308
00:11:02,096 --> 00:11:03,646
preview items in controller


309
00:11:03,646 --> 00:11:04,086
method.


310
00:11:04,586 --> 00:11:07,626
And then each URL respectively


311
00:11:07,796 --> 00:11:10,006
referenced by the index in the


312
00:11:10,006 --> 00:11:12,216
previewController controller


313
00:11:12,216 --> 00:11:13,896
previewItemAt index method.


314
00:11:19,046 --> 00:11:20,866
Okay we've set up our preview


315
00:11:20,866 --> 00:11:22,426
controller and it knows what


316
00:11:22,426 --> 00:11:24,336
files to preview, so we are


317
00:11:24,336 --> 00:11:25,656
ready to actually present the


318
00:11:25,656 --> 00:11:26,376
view controller.


319
00:11:27,386 --> 00:11:28,616
There are two ways for doing


320
00:11:28,616 --> 00:11:28,836
that.


321
00:11:29,586 --> 00:11:30,766
You can either present the


322
00:11:30,766 --> 00:11:32,496
preview controller modally on


323
00:11:32,496 --> 00:11:34,866
top of the current context or


324
00:11:34,866 --> 00:11:36,456
you push the preview controller


325
00:11:36,916 --> 00:11:38,626
into a UINavigationController.


326
00:11:39,726 --> 00:11:41,746
Both ways work great and you


327
00:11:41,746 --> 00:11:43,646
need to decide what fits best in


328
00:11:43,646 --> 00:11:44,586
your situation.


329
00:11:44,586 --> 00:11:47,016
To present it modally you do


330
00:11:47,016 --> 00:11:48,066
what you do with any view


331
00:11:48,066 --> 00:11:49,716
controller you call present.


332
00:11:51,666 --> 00:11:53,296
Here's an example of what a


333
00:11:53,296 --> 00:11:54,716
modal presentation can look


334
00:11:54,716 --> 00:11:54,996
like.


335
00:11:57,176 --> 00:11:58,046
If you have a


336
00:11:58,046 --> 00:11:59,876
UINavigationController and


337
00:11:59,876 --> 00:12:01,396
prefer to push the preview


338
00:12:01,396 --> 00:12:03,386
controller instead you use


339
00:12:03,386 --> 00:12:03,976
pushViewController.


340
00:12:08,146 --> 00:12:08,976
This is what it looks like.


341
00:12:16,046 --> 00:12:17,286
The QLPreviewController class


342
00:12:17,286 --> 00:12:18,866
provides a few more methods that


343
00:12:18,866 --> 00:12:19,906
I would like to highlight.


344
00:12:20,956 --> 00:12:22,826
First, if you want to know if


345
00:12:22,826 --> 00:12:24,296
Quick Look is capable of


346
00:12:24,366 --> 00:12:25,986
previewing a certain document


347
00:12:26,706 --> 00:12:28,756
use the canPreview item class


348
00:12:28,756 --> 00:12:32,026
method, this will return true if


349
00:12:32,026 --> 00:12:33,726
the document matches any of the


350
00:12:33,726 --> 00:12:36,376
supported default file types or


351
00:12:36,376 --> 00:12:37,756
if there is a preview extension


352
00:12:37,756 --> 00:12:39,226
available that can handle the


353
00:12:39,226 --> 00:12:39,666
file.


354
00:12:41,856 --> 00:12:43,766
The data source we've already


355
00:12:43,766 --> 00:12:44,216
covered.


356
00:12:46,816 --> 00:12:49,216
Reload data reloads the list of


357
00:12:49,216 --> 00:12:50,356
documents your preview


358
00:12:50,356 --> 00:12:51,556
controller should present.


359
00:12:52,236 --> 00:12:54,406
If this list ever changes while


360
00:12:54,406 --> 00:12:55,486
the preview controller is


361
00:12:55,486 --> 00:12:57,626
currently presented use this


362
00:12:57,626 --> 00:12:59,236
method to trigger a reload.


363
00:13:01,796 --> 00:13:03,446
If you need to obtain the index


364
00:13:03,446 --> 00:13:05,236
of the currently previewed item


365
00:13:05,236 --> 00:13:07,146
in your list of preview items


366
00:13:07,956 --> 00:13:09,546
remember the user can swipe left


367
00:13:09,546 --> 00:13:10,696
and right to switch to a


368
00:13:10,696 --> 00:13:12,766
different one, use the current


369
00:13:12,766 --> 00:13:14,436
previewItemIndex variable.


370
00:13:15,646 --> 00:13:17,206
This is both a getter and a


371
00:13:17,206 --> 00:13:19,486
setter, so if you want Quick


372
00:13:19,486 --> 00:13:20,986
Look to start with a particular


373
00:13:20,986 --> 00:13:22,746
item when it's being presented


374
00:13:22,746 --> 00:13:24,836
set the index to the right


375
00:13:24,836 --> 00:13:25,256
value.


376
00:13:25,666 --> 00:13:29,946
Last but not least, preview


377
00:13:29,946 --> 00:13:31,816
controllers also have a


378
00:13:31,816 --> 00:13:32,376
delegate.


379
00:13:33,066 --> 00:13:34,126
Let's take a look at the


380
00:13:34,126 --> 00:13:35,536
QLPreviewController delegate


381
00:13:35,536 --> 00:13:35,936
protocol now.


382
00:13:41,056 --> 00:13:42,506
If you assign a delegate to your


383
00:13:42,506 --> 00:13:44,366
preview controller you get more


384
00:13:44,366 --> 00:13:46,046
ways to control how Quick Look


385
00:13:46,046 --> 00:13:46,626
behaves.


386
00:13:47,736 --> 00:13:49,226
It also lets you react to Quick


387
00:13:49,226 --> 00:13:50,496
Look presentation events.


388
00:13:51,316 --> 00:13:52,836
Note that all of the methods in


389
00:13:52,836 --> 00:13:54,946
the QLPreviewController delegate


390
00:13:54,946 --> 00:13:55,616
are optional.


391
00:13:56,226 --> 00:13:57,636
You don't have to implement them


392
00:13:57,726 --> 00:13:59,096
and in fact you don't even have


393
00:13:59,096 --> 00:14:00,556
to assign a delegate at all.


394
00:14:02,376 --> 00:14:04,076
The protocol hosts a bunch of


395
00:14:04,076 --> 00:14:05,506
methods you can implement.


396
00:14:06,306 --> 00:14:07,986
The first two methods lets you


397
00:14:07,986 --> 00:14:09,566
react to the event that Quick


398
00:14:09,566 --> 00:14:11,086
Look is about to be dismissed by


399
00:14:11,086 --> 00:14:13,246
the user and also that the


400
00:14:13,246 --> 00:14:13,976
dismissing is now complete.


401
00:14:18,046 --> 00:14:19,036
You might want to use these


402
00:14:19,036 --> 00:14:20,636
methods to update the view


403
00:14:20,636 --> 00:14:22,126
controller that is presenting


404
00:14:22,126 --> 00:14:22,976
Quick Look right now.


405
00:14:27,176 --> 00:14:29,456
Next, the preview controller


406
00:14:29,456 --> 00:14:31,856
should open URL for item method


407
00:14:32,386 --> 00:14:34,026
allows you to prevent Quick Look


408
00:14:34,026 --> 00:14:35,966
to follow a link contained in


409
00:14:35,966 --> 00:14:37,136
previewed documents.


410
00:14:38,006 --> 00:14:39,846
With this method you can for


411
00:14:39,846 --> 00:14:41,736
example prevent the user from


412
00:14:41,736 --> 00:14:43,806
leaving your app when tapping a


413
00:14:43,806 --> 00:14:45,886
URL or a phone number contained


414
00:14:45,886 --> 00:14:46,206
in a PDF.


415
00:14:46,206 --> 00:14:51,086
And last but not least, as


416
00:14:51,086 --> 00:14:52,246
promised before the


417
00:14:52,246 --> 00:14:53,936
QLPreviewController delegate


418
00:14:53,936 --> 00:14:56,356
protocol also provides API to


419
00:14:56,476 --> 00:14:58,896
get a smooth zoom animation when


420
00:14:58,896 --> 00:15:00,106
Quick Look is presented and


421
00:15:00,106 --> 00:15:00,636
dismissed.


422
00:15:01,716 --> 00:15:03,616
With these methods a thumbnail


423
00:15:03,616 --> 00:15:05,396
that is on screen in your user


424
00:15:05,396 --> 00:15:07,706
interface can transition into a


425
00:15:07,706 --> 00:15:09,536
full Quick Look preview when


426
00:15:09,536 --> 00:15:10,086
tapping it.


427
00:15:13,056 --> 00:15:15,466
Imagine an email attachment or a


428
00:15:15,466 --> 00:15:17,356
photo inside a conversation view


429
00:15:17,586 --> 00:15:20,526
which you can tap to show it


430
00:15:20,526 --> 00:15:22,096
full screen with Quick Look.


431
00:15:25,406 --> 00:15:27,356
We made it super easy for you to


432
00:15:27,356 --> 00:15:28,906
get this cross fade zoom


433
00:15:28,906 --> 00:15:30,756
animation in your application.


434
00:15:32,276 --> 00:15:33,936
If you implement one of the two


435
00:15:33,936 --> 00:15:35,496
approaches in your delegate


436
00:15:35,936 --> 00:15:37,236
Quick Look will ask for the


437
00:15:37,236 --> 00:15:38,986
information that is needed for


438
00:15:38,986 --> 00:15:40,096
performing the zoom.


439
00:15:41,026 --> 00:15:42,126
This is basically the


440
00:15:42,126 --> 00:15:44,386
rectangular area the animation


441
00:15:44,386 --> 00:15:45,636
should start from when


442
00:15:45,636 --> 00:15:48,246
presenting or end in when


443
00:15:48,246 --> 00:15:49,226
dismissing Quick Look.


444
00:15:51,176 --> 00:15:54,666
Either you provide the frame and


445
00:15:54,666 --> 00:15:58,586
the image of the thumbnail or


446
00:15:58,686 --> 00:16:00,266
and this is the preferred way of


447
00:16:00,266 --> 00:16:02,416
doing it, you use our mode and


448
00:16:02,416 --> 00:16:04,136
method in which you simply


449
00:16:04,136 --> 00:16:05,946
return the thumbnail as a view.


450
00:16:06,916 --> 00:16:08,306
With this approach you don't


451
00:16:08,306 --> 00:16:09,916
have to worry about coordinates


452
00:16:10,436 --> 00:16:11,306
Quick Look will do all the heavy


453
00:16:11,306 --> 00:16:11,976
lifting for you.


454
00:16:17,126 --> 00:16:18,176
And this is what it can look


455
00:16:18,176 --> 00:16:18,416
like.


456
00:16:19,986 --> 00:16:21,006
Note how the thumbnail


457
00:16:21,006 --> 00:16:22,916
transitions into the full-screen


458
00:16:22,916 --> 00:16:23,896
Quick Look preview.


459
00:16:26,126 --> 00:16:27,716
All right now it's time for a


460
00:16:27,716 --> 00:16:29,206
demo in which we would like to


461
00:16:29,206 --> 00:16:30,646
show you what we've just


462
00:16:30,646 --> 00:16:31,016
covered.


463
00:16:33,156 --> 00:16:35,666
Okay, here's an iOS project and


464
00:16:35,666 --> 00:16:37,226
instead of talking about it


465
00:16:37,226 --> 00:16:38,696
let's just press the play button


466
00:16:38,906 --> 00:16:40,016
to see what we've already


467
00:16:40,016 --> 00:16:41,546
prepared and what we are dealing


468
00:16:41,546 --> 00:16:41,926
with here.


469
00:16:51,046 --> 00:16:51,926
We are calling this Wildlife


470
00:16:51,926 --> 00:16:53,766
Explorer and it's a very simple


471
00:16:53,766 --> 00:16:53,976
app.


472
00:16:54,766 --> 00:16:56,516
It basically displays a grid of


473
00:16:56,516 --> 00:16:58,766
photos and each of these photos


474
00:16:58,766 --> 00:17:00,516
that we see here acts as a


475
00:17:00,516 --> 00:17:02,276
thumbnail for what's behind it


476
00:17:02,276 --> 00:17:03,126
once you tap it.


477
00:17:03,256 --> 00:17:05,496
For example, tapping the


478
00:17:05,496 --> 00:17:07,286
elephant should show a large


479
00:17:07,286 --> 00:17:08,866
photo of the elephant in full


480
00:17:08,866 --> 00:17:11,826
screen and tapping the giraffe


481
00:17:12,066 --> 00:17:13,945
should preview an entire PDF


482
00:17:13,945 --> 00:17:15,715
about all sorts of giraffes.


483
00:17:17,215 --> 00:17:18,906
Right now we can't do anything


484
00:17:18,906 --> 00:17:20,445
else than just looking at it,


485
00:17:21,156 --> 00:17:23,126
tapping won't do anything yet so


486
00:17:23,126 --> 00:17:23,806
let's fix this.


487
00:17:28,306 --> 00:17:30,406
Now this application is fairly


488
00:17:30,406 --> 00:17:31,376
simply structured.


489
00:17:32,546 --> 00:17:33,916
For displaying the grid of


490
00:17:33,916 --> 00:17:35,166
photos we use a


491
00:17:35,166 --> 00:17:36,356
CollectionViewController.


492
00:17:38,886 --> 00:17:41,686
When initializing it we obtain a


493
00:17:41,686 --> 00:17:43,996
list of URLs of documents that


494
00:17:43,996 --> 00:17:45,656
are bundled with the application


495
00:17:45,656 --> 00:17:46,776
like the elephant we've just


496
00:17:46,776 --> 00:17:46,946
seen.


497
00:17:51,196 --> 00:17:53,276
We use that list to initialize


498
00:17:53,276 --> 00:17:54,866
what we call a document data


499
00:17:54,866 --> 00:17:55,396
source.


500
00:17:56,666 --> 00:17:58,626
This object serves as the model


501
00:17:58,626 --> 00:17:59,966
for the collection view in the


502
00:17:59,966 --> 00:18:01,296
implementation of the


503
00:18:01,296 --> 00:18:03,506
UICollectionViewDataSource


504
00:18:03,506 --> 00:18:03,976
protocol.


505
00:18:12,106 --> 00:18:13,896
Here we return the number of


506
00:18:13,896 --> 00:18:15,696
documents we have just gathered


507
00:18:16,096 --> 00:18:17,896
and then create a cell for each


508
00:18:17,896 --> 00:18:19,316
of the documents with a


509
00:18:19,316 --> 00:18:20,896
thumbnail as the image of the


510
00:18:20,896 --> 00:18:22,076
cell respectively.


511
00:18:22,526 --> 00:18:25,756
And that's pretty much the core


512
00:18:25,756 --> 00:18:27,166
of the application so far.


513
00:18:28,266 --> 00:18:29,736
Now let's add what we've talked


514
00:18:29,736 --> 00:18:30,476
about before.


515
00:18:31,216 --> 00:18:32,786
When tapping a cell we would


516
00:18:32,786 --> 00:18:34,246
like to show Quick Look with the


517
00:18:34,246 --> 00:18:35,146
right document.


518
00:18:36,286 --> 00:18:37,886
We've already made sure that we


519
00:18:37,886 --> 00:18:39,196
have a method that is called


520
00:18:39,196 --> 00:18:40,856
when the user has just tapped a


521
00:18:40,856 --> 00:18:40,966
cell.


522
00:18:47,056 --> 00:18:48,676
To show Quick Look we create a


523
00:18:48,676 --> 00:18:50,896
new QLPreviewController in here


524
00:18:51,286 --> 00:18:51,976
and configure it.


525
00:19:03,396 --> 00:19:05,796
We create a new controller, we


526
00:19:05,796 --> 00:19:07,426
assign the document data source


527
00:19:07,426 --> 00:19:09,676
to it as the data source and


528
00:19:09,856 --> 00:19:11,446
then make sure Quick Look shows


529
00:19:11,446 --> 00:19:12,936
the correct preview when it's


530
00:19:12,936 --> 00:19:15,016
presented by setting the right


531
00:19:15,116 --> 00:19:15,976
CurrentPreviewItemIndex.


532
00:19:20,056 --> 00:19:22,316
Great, now Xcode is already


533
00:19:22,316 --> 00:19:23,986
complaining about our new code,


534
00:19:23,986 --> 00:19:25,486
it doesn't know


535
00:19:25,486 --> 00:19:27,106
QLPreviewController yet.


536
00:19:27,826 --> 00:19:29,106
We need to import Quick Look


537
00:19:29,106 --> 00:19:31,396
first and therefore we return to


538
00:19:31,396 --> 00:19:32,666
the top of the file and import


539
00:19:32,716 --> 00:19:32,976
Quick Look.


540
00:19:44,046 --> 00:19:46,456
Done. The next thing Xcode


541
00:19:46,456 --> 00:19:47,946
complains about is the data


542
00:19:47,946 --> 00:19:48,446
source.


543
00:19:49,166 --> 00:19:50,766
The document data source that we


544
00:19:50,766 --> 00:19:52,016
assigned to the new preview


545
00:19:52,016 --> 00:19:53,556
controller doesn't seem to


546
00:19:53,556 --> 00:19:54,416
conform to the


547
00:19:54,416 --> 00:19:56,226
QLPreviewController data source


548
00:19:56,226 --> 00:19:57,946
protocol yet which we have


549
00:19:57,946 --> 00:19:58,946
talked about earlier.


550
00:20:00,656 --> 00:20:02,766
To fix this let's switch to the


551
00:20:02,766 --> 00:20:04,366
implementation of the document


552
00:20:04,366 --> 00:20:04,976
data source.


553
00:20:10,246 --> 00:20:11,606
The document data source is a


554
00:20:11,606 --> 00:20:13,486
very simple kind of object, it


555
00:20:13,576 --> 00:20:15,926
simply owns an area of URLs so


556
00:20:15,926 --> 00:20:16,246
far.


557
00:20:17,256 --> 00:20:18,286
We need to add the


558
00:20:18,286 --> 00:20:20,086
QLPreviewController data source


559
00:20:20,086 --> 00:20:21,646
protocol to the list of


560
00:20:21,646 --> 00:20:23,206
protocols that this class


561
00:20:23,206 --> 00:20:23,936
implements.


562
00:20:33,246 --> 00:20:34,566
Next, we implement the missing


563
00:20:34,566 --> 00:20:34,956
methods.


564
00:20:45,096 --> 00:20:46,456
As you can see the way we use


565
00:20:46,456 --> 00:20:48,376
the document data source here is


566
00:20:48,376 --> 00:20:50,216
very similar to the way we use


567
00:20:50,216 --> 00:20:51,326
it for the collection view.


568
00:20:51,586 --> 00:20:54,066
In the numberOfPreviewItems


569
00:20:54,066 --> 00:20:56,046
method we return the number of


570
00:20:56,046 --> 00:20:57,516
URLs that we have gathered


571
00:20:57,516 --> 00:20:58,986
before from our documents


572
00:20:58,986 --> 00:20:59,326
folder.


573
00:20:59,806 --> 00:21:03,626
And then Quick Look asks for the


574
00:21:03,626 --> 00:21:06,126
individual QLPreviewItems and we


575
00:21:06,126 --> 00:21:08,146
return the right URL referenced


576
00:21:08,146 --> 00:21:08,896
by the index.


577
00:21:13,066 --> 00:21:14,106
Great, the data source has been


578
00:21:14,106 --> 00:21:15,866
properly set up so we can go


579
00:21:15,866 --> 00:21:17,496
ahead and actually present the


580
00:21:17,496 --> 00:21:18,416
preview controller.


581
00:21:19,456 --> 00:21:20,836
Therefore, we return to the


582
00:21:20,836 --> 00:21:23,036
didTapCollectionCell method and


583
00:21:23,036 --> 00:21:23,976
add the missing method call.


584
00:21:34,046 --> 00:21:34,886
Let's check out how this looks


585
00:21:34,886 --> 00:21:34,976
like.


586
00:21:46,046 --> 00:21:47,456
All right we are back in grid


587
00:21:47,666 --> 00:21:49,516
and now when tapping a cell


588
00:21:49,846 --> 00:21:51,766
Quick Look appears displaying


589
00:21:51,766 --> 00:21:53,186
the right document in full


590
00:21:53,186 --> 00:21:53,656
screen.


591
00:21:55,326 --> 00:21:57,406
Note how easy it is to present


592
00:21:57,406 --> 00:21:59,936
images and even PDFs in full


593
00:21:59,936 --> 00:22:01,826
screen with all of the gestures


594
00:22:01,826 --> 00:22:03,346
that you are used to.


595
00:22:04,126 --> 00:22:06,256
We can zoom into the document


596
00:22:06,606 --> 00:22:09,276
with two fingers, we can select


597
00:22:09,276 --> 00:22:11,576
text, and even copy it.


598
00:22:13,846 --> 00:22:16,356
And once we are done we can use


599
00:22:16,356 --> 00:22:18,706
a pinch gesture to dismiss Quick


600
00:22:18,706 --> 00:22:18,976
Look again.


601
00:22:23,046 --> 00:22:24,416
So what we are using here to


602
00:22:24,416 --> 00:22:25,976
present Quick Look is a modal


603
00:22:25,976 --> 00:22:26,986
presentation style.


604
00:22:27,946 --> 00:22:29,406
As I've explained earlier, we


605
00:22:29,406 --> 00:22:31,156
can also present Quick Look with


606
00:22:31,156 --> 00:22:32,136
a push animation.


607
00:22:33,426 --> 00:22:35,026
Therefore, we simply tell the


608
00:22:35,026 --> 00:22:36,556
application's navigation


609
00:22:36,556 --> 00:22:38,206
controller to present the


610
00:22:38,206 --> 00:22:40,116
preview controller by pushing it


611
00:22:40,116 --> 00:22:40,976
on top of the current one.


612
00:22:52,106 --> 00:22:52,786
Let's take a look.


613
00:23:05,076 --> 00:23:06,336
As you can see, this is a


614
00:23:06,336 --> 00:23:07,896
different style of presenting


615
00:23:07,896 --> 00:23:09,506
Quick Look and it works just as


616
00:23:09,506 --> 00:23:10,976
fine as presenting it modally.


617
00:23:17,066 --> 00:23:19,226
Okay Quick Look works and now


618
00:23:19,226 --> 00:23:20,356
the last thing I would like to


619
00:23:20,356 --> 00:23:22,126
show you is how to use the Quick


620
00:23:22,126 --> 00:23:23,766
Look delegate in order to get a


621
00:23:23,766 --> 00:23:25,576
beautiful zoom animation when


622
00:23:25,576 --> 00:23:28,616
tapping a thumbnail in our grid.


623
00:23:28,706 --> 00:23:30,456
First, we switch back to the


624
00:23:30,456 --> 00:23:32,286
modal presentation style which


625
00:23:32,286 --> 00:23:33,276
is needed for the zoom


626
00:23:33,276 --> 00:23:33,976
transition to work.


627
00:23:39,046 --> 00:23:40,286
Then we need to assign a


628
00:23:40,286 --> 00:23:41,496
delegate to the preview


629
00:23:41,496 --> 00:23:43,706
controller and in this case, we


630
00:23:43,706 --> 00:23:44,496
assign self.


631
00:23:54,046 --> 00:23:55,646
However, self doesn't conform to


632
00:23:55,646 --> 00:23:57,536
the QLPreviewController delegate


633
00:23:57,536 --> 00:23:59,506
yet, so let's add it to the list


634
00:23:59,506 --> 00:23:59,976
of protocols.


635
00:24:12,236 --> 00:24:14,556
And now as the last step we


636
00:24:14,556 --> 00:24:16,446
implement the magic method which


637
00:24:16,446 --> 00:24:18,156
tells Quick Look which view to


638
00:24:18,156 --> 00:24:20,176
use as the source for the zoom


639
00:24:20,176 --> 00:24:22,156
animation when it is about to be


640
00:24:22,156 --> 00:24:22,756
presented.


641
00:24:34,366 --> 00:24:36,506
As you can see, we are using the


642
00:24:36,506 --> 00:24:38,816
image view of the most recently


643
00:24:38,816 --> 00:24:40,356
tapped cell which we keep a


644
00:24:40,356 --> 00:24:42,356
reference of and return it to


645
00:24:42,356 --> 00:24:42,896
Quick Look.


646
00:24:44,196 --> 00:24:45,646
That's literally all we have to


647
00:24:45,646 --> 00:24:47,316
do to make the zoom animation


648
00:24:47,316 --> 00:24:47,666
work.


649
00:24:48,066 --> 00:24:49,836
Quick Look will call this method


650
00:24:49,836 --> 00:24:51,626
when it's presented and when


651
00:24:51,626 --> 00:24:52,416
it's dismissed.


652
00:24:52,996 --> 00:24:53,916
Let's try it out.


653
00:25:03,046 --> 00:25:04,506
Now when we tap a thumbnail


654
00:25:05,116 --> 00:25:06,576
notice how the thumbnail is


655
00:25:06,576 --> 00:25:07,976
animating to the full-screen


656
00:25:07,976 --> 00:25:08,446
preview.


657
00:25:09,756 --> 00:25:11,646
Also observe no matter how we


658
00:25:11,646 --> 00:25:13,726
dismiss the preview it


659
00:25:13,766 --> 00:25:15,406
beautifully transitions back to


660
00:25:15,406 --> 00:25:15,946
the right origin.


661
00:25:22,306 --> 00:25:24,586
Great, that's it for the demo,


662
00:25:25,206 --> 00:25:26,106
back to the slides.


663
00:25:26,616 --> 00:25:28,116
And now I would like to hand it


664
00:25:28,116 --> 00:25:30,036
over to Maxime who is going to


665
00:25:30,036 --> 00:25:31,996
tell you all about previews and


666
00:25:31,996 --> 00:25:33,076
thumbnail extensions.


667
00:25:34,336 --> 00:25:35,506
>> Thank you Raffael.


668
00:25:36,186 --> 00:25:37,916
So as you have seen, Quick Look


669
00:25:37,996 --> 00:25:39,486
makes it super easy to add a


670
00:25:39,486 --> 00:25:41,036
powerful previewing feature to


671
00:25:41,036 --> 00:25:41,506
your app.


672
00:25:42,196 --> 00:25:43,756
But there is more to talk about.


673
00:25:44,486 --> 00:25:45,556
The first thing I want to show


674
00:25:45,556 --> 00:25:47,326
you is how to extend Quick


675
00:25:47,326 --> 00:25:48,826
Look's previewing capabilities


676
00:25:48,896 --> 00:25:50,766
by providing a preview for your


677
00:25:50,766 --> 00:25:51,676
own file format.


678
00:25:54,006 --> 00:25:55,476
We have listed the file types


679
00:25:55,476 --> 00:25:56,636
that Quick Look supports


680
00:25:56,636 --> 00:25:57,536
natively before.


681
00:25:59,216 --> 00:26:02,936
However, since iOS 11 this list


682
00:26:03,046 --> 00:26:04,836
can be extended by bundling a


683
00:26:04,836 --> 00:26:06,646
preview extension with your iOS


684
00:26:06,646 --> 00:26:08,886
app which allows you as a


685
00:26:08,886 --> 00:26:10,876
developer to provide previews


686
00:26:10,876 --> 00:26:12,326
for your custom file formats.


687
00:26:12,636 --> 00:26:15,666
You should provide a preview if


688
00:26:15,666 --> 00:26:16,886
you're in a custom fil format


689
00:26:17,166 --> 00:26:18,536
and you'd like this one to be


690
00:26:18,536 --> 00:26:20,436
previewed by Quick Look just


691
00:26:20,436 --> 00:26:22,466
like any other native type.


692
00:26:23,656 --> 00:26:25,146
File types that are meant to be


693
00:26:25,146 --> 00:26:27,126
shared are usually good types to


694
00:26:27,126 --> 00:26:28,656
create an extension for,


695
00:26:29,576 --> 00:26:31,046
especially if you want your


696
00:26:31,046 --> 00:26:32,886
users to preview the content


697
00:26:32,936 --> 00:26:35,106
easily after receiving a file in


698
00:26:35,106 --> 00:26:37,516
an app like Mail, Messages or in


699
00:26:37,516 --> 00:26:38,256
a Note for instance.


700
00:26:38,766 --> 00:26:40,536
And then everything works


701
00:26:40,536 --> 00:26:43,176
together and your application


702
00:26:43,176 --> 00:26:44,096
that is using a


703
00:26:44,096 --> 00:26:45,896
QLPreviewController with a file


704
00:26:46,196 --> 00:26:48,026
that is not natively supported


705
00:26:48,476 --> 00:26:49,806
will benefit from your preview


706
00:26:49,806 --> 00:26:50,326
extension.


707
00:26:52,606 --> 00:26:54,796
Here is an example of what you


708
00:26:54,796 --> 00:26:56,456
can achieve thanks to a preview


709
00:26:56,456 --> 00:26:56,916
extension.


710
00:26:57,346 --> 00:26:59,876
We have built a sample app that


711
00:26:59,876 --> 00:27:01,386
can be downloaded from Apple's


712
00:27:01,386 --> 00:27:02,956
website that allows one to


713
00:27:02,956 --> 00:27:05,316
create customized and interact


714
00:27:05,316 --> 00:27:05,936
with Particles.


715
00:27:07,086 --> 00:27:08,406
Since we wanted to share our


716
00:27:08,406 --> 00:27:11,286
cool Particles to other users we


717
00:27:11,286 --> 00:27:13,956
created a new file format, the


718
00:27:13,956 --> 00:27:16,636
particles file format.


719
00:27:16,636 --> 00:27:18,076
Each file represents a particle


720
00:27:18,076 --> 00:27:20,316
system and you can configure all


721
00:27:20,316 --> 00:27:22,856
sorts of [inaudible] systems.


722
00:27:24,466 --> 00:27:26,956
Now let's say you share a


723
00:27:27,296 --> 00:27:28,706
particles file with your


724
00:27:28,706 --> 00:27:29,146
friends.


725
00:27:30,026 --> 00:27:31,656
When previewing them in messages


726
00:27:31,786 --> 00:27:33,106
or as an email attachment for


727
00:27:33,106 --> 00:27:34,906
instance [inaudible] get to see


728
00:27:35,206 --> 00:27:36,996
is a blank screen, that is


729
00:27:36,996 --> 00:27:40,256
certainly not what we want.


730
00:27:40,416 --> 00:27:42,176
But by implementing your preview


731
00:27:42,176 --> 00:27:43,696
extension for our particles file


732
00:27:43,696 --> 00:27:45,196
format it will replace that


733
00:27:45,196 --> 00:27:46,476
blank screen with a beautifully


734
00:27:46,476 --> 00:27:47,926
rendered three-dimensional


735
00:27:48,236 --> 00:27:49,586
interactive particle system.


736
00:27:49,586 --> 00:27:49,976
How good is that?


737
00:27:54,046 --> 00:27:55,136
I am sure you now want to learn


738
00:27:55,346 --> 00:27:56,546
how you can make your own


739
00:27:56,546 --> 00:27:58,016
preview extension for your file


740
00:27:58,016 --> 00:27:58,586
formats.


741
00:28:00,276 --> 00:28:02,666
First, you will need to add a


742
00:28:02,666 --> 00:28:04,556
new target in your existing


743
00:28:04,556 --> 00:28:05,696
application project.


744
00:28:06,786 --> 00:28:08,736
To do so you will have to select


745
00:28:08,736 --> 00:28:10,116
the Quick Look Preview Extension


746
00:28:10,156 --> 00:28:13,986
template in Xcode.


747
00:28:13,986 --> 00:28:16,486
After that several files will be


748
00:28:16,486 --> 00:28:17,956
generated for you by Xcode.


749
00:28:19,226 --> 00:28:20,936
The PreviewViewController class


750
00:28:20,936 --> 00:28:22,426
with a basic implementation.


751
00:28:23,296 --> 00:28:25,186
This is where you will have to


752
00:28:25,186 --> 00:28:26,476
add code for your preview.


753
00:28:27,066 --> 00:28:29,816
The storyboard that has the


754
00:28:29,816 --> 00:28:31,646
PreviewViewController as its


755
00:28:31,646 --> 00:28:32,216
entry point.


756
00:28:32,686 --> 00:28:35,696
And an Info.plist that's the


757
00:28:35,696 --> 00:28:36,966
first thing you will want to


758
00:28:37,436 --> 00:28:37,626
edit.


759
00:28:37,626 --> 00:28:42,586
Let's take a closer look at it.


760
00:28:42,796 --> 00:28:45,066
To get started the attribute we


761
00:28:45,066 --> 00:28:46,776
are the most interested in is


762
00:28:46,776 --> 00:28:48,836
named QLSupportedContentTypes.


763
00:28:49,706 --> 00:28:50,786
This is the one that is


764
00:28:50,816 --> 00:28:52,256
highlighted on the screen shot.


765
00:28:53,706 --> 00:28:55,066
This is an array in which you


766
00:28:55,066 --> 00:28:56,346
list all the file types for


767
00:28:56,346 --> 00:28:57,756
which your extension can provide


768
00:28:57,756 --> 00:28:58,136
previews.


769
00:28:59,366 --> 00:29:00,946
Please note that you can only


770
00:29:00,946 --> 00:29:02,716
provide previews for UTIs you


771
00:29:02,756 --> 00:29:03,996
own and export.


772
00:29:05,356 --> 00:29:07,146
When Quick Look can't natively


773
00:29:07,146 --> 00:29:09,246
preview a file type it will make


774
00:29:09,246 --> 00:29:10,826
use of the content types added


775
00:29:10,826 --> 00:29:13,986
to this array and select an


776
00:29:13,986 --> 00:29:15,306
extension that can handle


777
00:29:15,506 --> 00:29:16,106
previewing it.


778
00:29:16,906 --> 00:29:18,246
So make sure to list all file


779
00:29:18,246 --> 00:29:19,426
types [inaudible] extension


780
00:29:19,426 --> 00:29:19,946
support.


781
00:29:21,056 --> 00:29:22,526
Let's see how we achieve this


782
00:29:22,746 --> 00:29:24,176
with our Particles app.


783
00:29:24,426 --> 00:29:29,576
As you can see Particles


784
00:29:29,576 --> 00:29:30,896
declares and exports a new


785
00:29:31,276 --> 00:29:32,176
particles file type.


786
00:29:32,326 --> 00:29:34,806
Its identifier is [inaudible]


787
00:29:35,486 --> 00:29:37,986
example.applesample


788
00:29:37,986 --> 00:29:39,996
code.particles.particles.


789
00:29:41,296 --> 00:29:43,006
Since we wanted our extension to


790
00:29:43,006 --> 00:29:45,196
support particles previews we


791
00:29:45,196 --> 00:29:47,016
added this identifier to the


792
00:29:47,016 --> 00:29:48,836
QLSupportedContentTypes of its


793
00:29:48,836 --> 00:29:49,566
Info.plist.


794
00:29:50,256 --> 00:29:52,196
By the way, if you're interested


795
00:29:52,196 --> 00:29:54,756
in UTIs you should check out the


796
00:29:54,756 --> 00:29:56,646
Documents Manager session of


797
00:29:56,646 --> 00:29:56,956
this year.


798
00:30:00,376 --> 00:30:01,696
When a new preview has to be


799
00:30:01,696 --> 00:30:03,066
generated for a file type


800
00:30:03,066 --> 00:30:04,096
[inaudible] Quick Look will


801
00:30:04,776 --> 00:30:06,156
create a new


802
00:30:06,156 --> 00:30:07,986
PreviewViewController instance


803
00:30:08,456 --> 00:30:09,026
and calls it


804
00:30:09,086 --> 00:30:10,636
preparePreviewOfFile at URL


805
00:30:10,636 --> 00:30:12,056
completionHandler method.


806
00:30:14,976 --> 00:30:16,716
This method is part of the


807
00:30:16,716 --> 00:30:18,876
QLPreviewingController protocol


808
00:30:19,216 --> 00:30:20,826
and is mandatory to provide


809
00:30:20,826 --> 00:30:22,296
previews for a file.


810
00:30:23,156 --> 00:30:25,296
Quick Look will display


811
00:30:25,336 --> 00:30:26,116
[inaudible] while waiting for


812
00:30:26,116 --> 00:30:27,486
your extension to be ready to


813
00:30:27,486 --> 00:30:28,266
display the preview.


814
00:30:28,756 --> 00:30:31,026
All you have to take care of is


815
00:30:31,026 --> 00:30:32,116
loading the contents of your


816
00:30:32,116 --> 00:30:34,276
preview and calling the


817
00:30:34,276 --> 00:30:36,196
completion handler as soon as


818
00:30:36,196 --> 00:30:38,886
your extension is ready.


819
00:30:39,026 --> 00:30:40,216
All right that's it for the


820
00:30:40,216 --> 00:30:42,676
preview extensions, let's go one


821
00:30:42,676 --> 00:30:43,216
step further.


822
00:30:44,016 --> 00:30:46,046
Similarly to previews you can


823
00:30:46,046 --> 00:30:47,266
also provide thumbnails for


824
00:30:47,266 --> 00:30:48,926
files of your own file format.


825
00:30:49,316 --> 00:30:51,506
Let's talk about Quick Look


826
00:30:51,506 --> 00:30:52,356
thumbnail extensions.


827
00:30:52,916 --> 00:30:56,776
A thumbnail is an image of a


828
00:30:56,776 --> 00:30:58,806
limited size that represents the


829
00:30:58,806 --> 00:31:00,806
contents of a file.


830
00:31:01,116 --> 00:31:03,206
There is throughout iOS and


831
00:31:03,206 --> 00:31:05,856
macOS to allow users to identify


832
00:31:05,856 --> 00:31:08,216
files officially without having


833
00:31:08,216 --> 00:31:09,316
to open them to the file


834
00:31:09,316 --> 00:31:09,876
contents.


835
00:31:11,366 --> 00:31:12,796
For instance you can see on the


836
00:31:12,796 --> 00:31:15,016
screenshot how iOS makes uses of


837
00:31:15,016 --> 00:31:17,706
them in the file tap.


838
00:31:17,706 --> 00:31:19,326
iOS can generate thumbnails for


839
00:31:19,326 --> 00:31:21,356
different file types, images,


840
00:31:21,356 --> 00:31:24,426
videos, PDFs, text files, and


841
00:31:24,426 --> 00:31:25,266
USDZ files.


842
00:31:26,126 --> 00:31:28,276
Now you may have noticed the


843
00:31:28,276 --> 00:31:29,966
blank icons on the left.


844
00:31:31,186 --> 00:31:32,816
This is because these are


845
00:31:32,956 --> 00:31:35,726
particles files and iOS doesn't


846
00:31:35,726 --> 00:31:37,346
know how to generate thumbnails


847
00:31:37,346 --> 00:31:38,466
for this file natively.


848
00:31:38,796 --> 00:31:41,786
But don't worry we are going to


849
00:31:41,786 --> 00:31:43,756
show you how to create a


850
00:31:43,756 --> 00:31:45,376
thumbnail extension that you can


851
00:31:45,376 --> 00:31:46,746
use to improve this situation


852
00:31:46,746 --> 00:31:47,986
for your custom file types


853
00:31:47,986 --> 00:31:48,296
easily.


854
00:31:49,296 --> 00:31:50,996
Look at how great these


855
00:31:50,996 --> 00:31:52,516
thumbnails look for particles


856
00:31:52,516 --> 00:31:54,346
files thanks to the thumbnail


857
00:31:54,346 --> 00:31:55,876
extension we have added to our


858
00:31:55,876 --> 00:31:55,976
app.


859
00:32:01,166 --> 00:32:02,426
Thumbnails provided by this


860
00:32:02,426 --> 00:32:04,906
extension appear in the Files


861
00:32:04,906 --> 00:32:06,416
app, as well as in any


862
00:32:06,416 --> 00:32:07,616
UIDocumentBrowswer


863
00:32:07,616 --> 00:32:09,526
ViewController-based app.


864
00:32:10,576 --> 00:32:12,256
They also appear in the Quick


865
00:32:12,256 --> 00:32:14,076
Look list, that you can see when


866
00:32:14,076 --> 00:32:15,746
tapping the list button when


867
00:32:15,746 --> 00:32:17,106
previewing multiple files in


868
00:32:17,106 --> 00:32:17,546
Quick Look.


869
00:32:17,546 --> 00:32:20,166
If you have custom file types


870
00:32:20,166 --> 00:32:22,136
that the user can share and


871
00:32:22,136 --> 00:32:24,276
interact with you will likely


872
00:32:24,276 --> 00:32:25,396
want to provide a certain


873
00:32:25,396 --> 00:32:26,416
extension with your app.


874
00:32:27,166 --> 00:32:28,786
Let's now see how you can do so.


875
00:32:31,796 --> 00:32:33,436
Creating a thumbnail extension


876
00:32:33,466 --> 00:32:34,996
is as just creating a preview


877
00:32:34,996 --> 00:32:35,466
extension.


878
00:32:36,856 --> 00:32:39,626
To do so add a new target in


879
00:32:39,626 --> 00:32:40,936
your existing application


880
00:32:40,936 --> 00:32:42,536
project and select the Thumbnail


881
00:32:42,536 --> 00:32:43,986
Extension template.


882
00:32:46,326 --> 00:32:48,226
Xcode will generate for you two


883
00:32:48,226 --> 00:32:50,126
files, the ThumbnailProvider


884
00:32:50,126 --> 00:32:51,316
class with a basic


885
00:32:51,316 --> 00:32:52,046
implementation.


886
00:32:53,326 --> 00:32:54,716
This is where you will have to


887
00:32:54,716 --> 00:32:56,296
add the code that takes care of


888
00:32:56,296 --> 00:32:57,456
generating thumbnails.


889
00:32:58,476 --> 00:33:00,596
And an Info.plist this is just


890
00:33:00,596 --> 00:33:01,806
like for the preview extension,


891
00:33:02,356 --> 00:33:03,856
the first thing you will have to


892
00:33:03,856 --> 00:33:05,266
edit after creating your


893
00:33:05,266 --> 00:33:05,796
extension.


894
00:33:10,046 --> 00:33:11,296
As in the Info.plist of the


895
00:33:11,296 --> 00:33:12,926
preview extensions the


896
00:33:12,926 --> 00:33:14,096
Info.plist of the thumbnail


897
00:33:14,096 --> 00:33:15,406
extensions have a


898
00:33:15,406 --> 00:33:17,326
QLSupportedContentTypes array


899
00:33:17,936 --> 00:33:19,336
that needs to be filled with the


900
00:33:19,336 --> 00:33:20,766
content types that your


901
00:33:20,856 --> 00:33:23,096
extension supports.


902
00:33:24,096 --> 00:33:26,866
So make sure to include in


903
00:33:26,866 --> 00:33:29,086
QLSupportedContentTypes all the


904
00:33:29,086 --> 00:33:30,756
content types for which your


905
00:33:30,756 --> 00:33:32,076
extension can generate


906
00:33:32,076 --> 00:33:32,626
thumbnails.


907
00:33:33,766 --> 00:33:35,646
After setting up your extension


908
00:33:35,836 --> 00:33:37,466
you will be able to start


909
00:33:37,466 --> 00:33:38,336
implementing your


910
00:33:38,476 --> 00:33:40,206
QLThumbnailProvider subclass.


911
00:33:40,596 --> 00:33:42,506
You have two ways to provide a


912
00:33:42,506 --> 00:33:44,976
thumbnail for a file.


913
00:33:45,116 --> 00:33:46,396
You can [inaudible] use it


914
00:33:46,936 --> 00:33:49,336
CoreGraphics or UIKit


915
00:33:49,336 --> 00:33:52,266
[inaudible] techniques or you


916
00:33:52,266 --> 00:33:54,286
can return an image file URL.


917
00:33:55,536 --> 00:33:59,296
You will have to override the


918
00:33:59,296 --> 00:34:00,866
provideThumbnail for request


919
00:34:00,866 --> 00:34:02,316
handler method in your


920
00:34:02,536 --> 00:34:04,326
QLThumbnailProvider subclass.


921
00:34:05,546 --> 00:34:07,816
We extensively covered this part


922
00:34:07,816 --> 00:34:09,795
of the Quick Look API in your


923
00:34:09,826 --> 00:34:14,376
session for WWDC 2017, Building


924
00:34:14,376 --> 00:34:16,106
Great Document-Based Apps in iOS


925
00:34:16,106 --> 00:34:16,556
11.


926
00:34:17,076 --> 00:34:18,166
So if you'd like to provide


927
00:34:18,166 --> 00:34:19,485
thumbnails for your custom file


928
00:34:19,485 --> 00:34:21,966
types I highly encourage you to


929
00:34:21,966 --> 00:34:23,666
check it out.


930
00:34:23,936 --> 00:34:25,485
In a nutshell, you will need to


931
00:34:25,485 --> 00:34:26,936
make use of the parameters


932
00:34:26,936 --> 00:34:28,166
contained in the


933
00:34:28,275 --> 00:34:29,866
QLFileThumbnailRequest of the


934
00:34:29,866 --> 00:34:30,286
method.


935
00:34:31,856 --> 00:34:34,126
The URL of the file, the maximum


936
00:34:34,126 --> 00:34:35,176
and minimum sizes of the


937
00:34:35,176 --> 00:34:37,295
thumbnail, and its scale.


938
00:34:39,596 --> 00:34:41,565
For each thumbnail request the


939
00:34:41,565 --> 00:34:43,646
API expects you to create a


940
00:34:43,646 --> 00:34:45,315
QLThumbnailReply object.


941
00:34:45,916 --> 00:34:48,025
This object will have to take


942
00:34:48,025 --> 00:34:49,335
care of generating the


943
00:34:49,335 --> 00:34:49,886
thumbnail.


944
00:34:50,826 --> 00:34:51,886
You will have to provide it to


945
00:34:51,886 --> 00:34:53,116
Quick Look through the


946
00:34:53,116 --> 00:34:55,286
completion handler of the


947
00:34:57,456 --> 00:34:57,636
method.


948
00:34:57,766 --> 00:34:59,166
All right let's see all of this


949
00:34:59,166 --> 00:35:00,306
in action it's demo time.


950
00:35:00,806 --> 00:35:03,956
Let's start by taking a look at


951
00:35:04,096 --> 00:35:05,556
how things look like after


952
00:35:05,556 --> 00:35:06,866
installing the Particles app


953
00:35:06,866 --> 00:35:07,986
without any Quick Look


954
00:35:07,986 --> 00:35:08,566
extension.


955
00:35:09,556 --> 00:35:11,466
All right we don't have any file


956
00:35:11,466 --> 00:35:13,686
yet, let's create a new one by


957
00:35:13,686 --> 00:35:15,056
pressing the + button.


958
00:35:17,116 --> 00:35:18,686
What you can see here is the


959
00:35:18,686 --> 00:35:19,686
particle editor.


960
00:35:20,126 --> 00:35:21,786
Let's create a file particle


961
00:35:21,786 --> 00:35:23,946
system, we change the color a


962
00:35:23,946 --> 00:35:25,426
bit, and save the document.


963
00:35:27,096 --> 00:35:30,336
Well as you can see we don't get


964
00:35:30,336 --> 00:35:31,716
to see the beautiful particle


965
00:35:31,716 --> 00:35:33,046
system we just designed.


966
00:35:33,406 --> 00:35:35,716
[Inaudible] of that by adding a


967
00:35:35,716 --> 00:35:37,126
thumbnail extension to our


968
00:35:37,126 --> 00:35:37,716
application.


969
00:35:38,476 --> 00:35:40,586
Now let's save the file to a


970
00:35:41,076 --> 00:35:41,966
[inaudible] and see how the


971
00:35:41,966 --> 00:35:44,046
preview looks like in Quick


972
00:35:46,816 --> 00:35:46,916
Look.


973
00:35:47,076 --> 00:35:49,436
All right let's open the file


974
00:35:49,436 --> 00:35:50,056
format.


975
00:35:52,316 --> 00:35:54,746
All we see is a blank screen, we


976
00:35:54,746 --> 00:35:56,246
can do better, let's improve


977
00:35:56,246 --> 00:35:56,626
this too.


978
00:35:57,556 --> 00:35:59,066
Let's switch to Xcode and


979
00:35:59,066 --> 00:36:00,706
implement a preview and a


980
00:36:00,706 --> 00:36:01,606
thumbnail extension.


981
00:36:02,826 --> 00:36:04,526
We already have an existing


982
00:36:04,526 --> 00:36:06,546
project containing the extension


983
00:36:06,546 --> 00:36:06,926
setup.


984
00:36:07,956 --> 00:36:09,516
We are going to use these as a


985
00:36:09,516 --> 00:36:11,036
starting point and add the two


986
00:36:11,036 --> 00:36:11,736
extensions.


987
00:36:12,556 --> 00:36:14,266
As mentioned previously we need


988
00:36:14,266 --> 00:36:16,326
the Info.plist of our extensions


989
00:36:16,326 --> 00:36:17,936
to be configured so that the


990
00:36:17,936 --> 00:36:19,436
system knows we are able to


991
00:36:19,436 --> 00:36:21,196
provide previews and thumbnails


992
00:36:21,196 --> 00:36:22,316
for particles files.


993
00:36:23,476 --> 00:36:25,786
So Particles app defines its own


994
00:36:25,786 --> 00:36:28,236
file format in the exported UTIs


995
00:36:28,236 --> 00:36:29,576
section of the application


996
00:36:29,576 --> 00:36:30,076
target.


997
00:36:30,936 --> 00:36:32,246
We need to configure the


998
00:36:32,246 --> 00:36:34,256
extensions to use that UTI in


999
00:36:34,256 --> 00:36:35,156
the Info.plist.


1000
00:36:35,336 --> 00:36:38,676
As you can see the


1001
00:36:38,676 --> 00:36:40,186
QLSupportedContentTypes of the


1002
00:36:40,186 --> 00:36:41,376
Info.plist of the preview


1003
00:36:41,376 --> 00:36:43,346
extension does contain the


1004
00:36:43,346 --> 00:36:44,756
identifier of the UTI of the


1005
00:36:44,756 --> 00:36:45,746
particles file format.


1006
00:36:46,226 --> 00:36:49,606
And this is also the case of the


1007
00:36:49,606 --> 00:36:50,886
Info.plist of the thumbnail


1008
00:36:50,886 --> 00:36:51,446
extension.


1009
00:36:51,966 --> 00:36:54,256
So the only thing left to do is


1010
00:36:54,526 --> 00:36:55,586
to actually implement these


1011
00:36:55,586 --> 00:36:56,226
extensions.


1012
00:36:56,766 --> 00:36:57,716
Let's start with the preview


1013
00:36:57,716 --> 00:36:58,226
extension.


1014
00:36:59,276 --> 00:37:02,296
As mentioned in the presentation


1015
00:37:02,626 --> 00:37:03,796
we need to implement this


1016
00:37:03,796 --> 00:37:05,976
method, preparePreviewOfFile at


1017
00:37:05,976 --> 00:37:07,166
URL completionHandler.


1018
00:37:07,536 --> 00:37:10,506
Our main app Particles already


1019
00:37:10,506 --> 00:37:12,316
has a view controller class


1020
00:37:12,626 --> 00:37:13,686
which [inaudible] the particle


1021
00:37:13,686 --> 00:37:14,526
system on screen.


1022
00:37:15,546 --> 00:37:16,866
We are going to reduce


1023
00:37:16,866 --> 00:37:17,766
[inaudible] controller in our


1024
00:37:17,766 --> 00:37:18,346
extension.


1025
00:37:19,406 --> 00:37:21,126
We are going to create a helper


1026
00:37:21,126 --> 00:37:22,716
method that will take care of


1027
00:37:22,716 --> 00:37:24,176
loading such a view controller


1028
00:37:24,366 --> 00:37:25,826
and adding it to the view


1029
00:37:25,826 --> 00:37:26,316
hierarchy.


1030
00:37:28,046 --> 00:37:30,726
As you can see present


1031
00:37:30,726 --> 00:37:32,156
particleViewController for a


1032
00:37:32,156 --> 00:37:33,656
document simply creates a


1033
00:37:33,656 --> 00:37:35,526
particleViewController and


1034
00:37:35,526 --> 00:37:37,146
passes it to the document it


1035
00:37:37,146 --> 00:37:38,426
received so that the


1036
00:37:38,426 --> 00:37:39,806
particleViewController can


1037
00:37:39,806 --> 00:37:41,566
render the particles that the


1038
00:37:41,566 --> 00:37:42,586
document represents.


1039
00:37:44,126 --> 00:37:45,426
We still need to call this


1040
00:37:45,426 --> 00:37:46,896
method from preparePreviewOfFile


1041
00:37:46,896 --> 00:37:50,286
at URL, so let's do it.


1042
00:37:51,336 --> 00:37:54,136
We first create a document that


1043
00:37:54,136 --> 00:37:55,146
is a subclass of [inaudible]


1044
00:37:55,226 --> 00:37:56,096
document.


1045
00:37:57,136 --> 00:37:59,876
We open it and once it is open


1046
00:37:59,876 --> 00:38:01,846
and usable we call our helper


1047
00:38:01,846 --> 00:38:03,496
method that will displace a


1048
00:38:03,496 --> 00:38:04,566
particleViewController.


1049
00:38:05,696 --> 00:38:08,206
Finally, we may not forget to


1050
00:38:08,206 --> 00:38:09,606
close the completion handler to


1051
00:38:09,606 --> 00:38:11,796
notify Quick Look that our view


1052
00:38:11,796 --> 00:38:13,186
controller is loaded and ready


1053
00:38:13,186 --> 00:38:13,976
to appear on screen.


1054
00:38:15,306 --> 00:38:17,226
Our preview extension is now


1055
00:38:17,226 --> 00:38:17,606
ready.


1056
00:38:18,376 --> 00:38:19,446
Let's implement the thumbnail


1057
00:38:19,446 --> 00:38:19,986
extension.


1058
00:38:21,586 --> 00:38:24,466
All we have to do here is to


1059
00:38:24,466 --> 00:38:26,086
implement the provideThumbnail


1060
00:38:26,086 --> 00:38:27,456
for request handler method.


1061
00:38:28,776 --> 00:38:30,546
So request provides several


1062
00:38:30,546 --> 00:38:32,016
properties that you need to


1063
00:38:32,016 --> 00:38:33,256
consider when rendering a


1064
00:38:33,256 --> 00:38:33,686
thumbnail.


1065
00:38:35,886 --> 00:38:37,696
In this example we will make use


1066
00:38:37,696 --> 00:38:39,886
of the file URL as the maximum


1067
00:38:39,886 --> 00:38:40,726
size of the thumbnail.


1068
00:38:41,966 --> 00:38:43,926
Note that there are also a scale


1069
00:38:43,926 --> 00:38:45,826
and minimum size properties, but


1070
00:38:45,926 --> 00:38:47,056
in the case of our particle


1071
00:38:47,056 --> 00:38:48,316
system we don't use them.


1072
00:38:49,716 --> 00:38:51,496
We then create a drawing block


1073
00:38:51,826 --> 00:38:52,896
that we are going to provide


1074
00:38:52,896 --> 00:38:54,386
later [inaudible] completion


1075
00:38:54,386 --> 00:38:54,676
block.


1076
00:38:56,596 --> 00:38:58,836
In this case, we call the helper


1077
00:38:58,836 --> 00:39:00,476
method that will take care of


1078
00:39:00,476 --> 00:39:01,246
drawing the thumbnail,


1079
00:39:02,056 --> 00:39:03,606
drawThumbnail for fileURL,


1080
00:39:04,126 --> 00:39:04,866
contextSize.


1081
00:39:05,336 --> 00:39:06,676
We are going to implement this


1082
00:39:06,676 --> 00:39:08,136
helper method in a second.


1083
00:39:08,706 --> 00:39:10,296
You may have noticed that our


1084
00:39:10,296 --> 00:39:11,716
drawing block returns a Boolean,


1085
00:39:12,576 --> 00:39:13,926
this flag indicates if the


1086
00:39:13,926 --> 00:39:15,196
thumbnail was successfully drawn


1087
00:39:15,196 --> 00:39:17,266
or not once this block will be


1088
00:39:17,266 --> 00:39:18,376
used to generate the thumbnail.


1089
00:39:19,396 --> 00:39:21,376
Let's now see how we draw our


1090
00:39:21,376 --> 00:39:22,236
particle thumbnails.


1091
00:39:24,316 --> 00:39:26,746
To draw the thumbnails we make


1092
00:39:26,746 --> 00:39:29,316
use of the URL of the file and


1093
00:39:29,316 --> 00:39:30,736
of the size of the context we


1094
00:39:30,736 --> 00:39:31,276
will draw into.


1095
00:39:32,196 --> 00:39:33,856
In this case, we all know the


1096
00:39:33,856 --> 00:39:35,256
maximum size of the thumbnail


1097
00:39:35,256 --> 00:39:37,116
request since we can generate


1098
00:39:37,116 --> 00:39:38,526
particle thumbnails of any size.


1099
00:39:39,376 --> 00:39:41,756
Our method first creates a


1100
00:39:41,756 --> 00:39:43,426
document that represents the


1101
00:39:43,426 --> 00:39:45,776
file and attempts to open it.


1102
00:39:46,226 --> 00:39:48,296
If this fails it returns false


1103
00:39:48,336 --> 00:39:49,506
to indicate that it could not


1104
00:39:49,506 --> 00:39:50,276
generate a thumbnail.


1105
00:39:50,906 --> 00:39:54,066
After opening the file it then


1106
00:39:54,186 --> 00:39:56,036
creates a particleViewController


1107
00:39:56,626 --> 00:39:57,576
that will be used to render the


1108
00:39:57,576 --> 00:39:57,966
particles file.


1109
00:39:59,506 --> 00:40:01,136
Then it takes a snapshot of the


1110
00:40:01,136 --> 00:40:02,666
particleViewController and uses


1111
00:40:02,666 --> 00:40:05,466
it to draw the thumbnail.


1112
00:40:05,506 --> 00:40:06,766
We close the document before


1113
00:40:06,766 --> 00:40:08,196
returning true to indicate that


1114
00:40:08,196 --> 00:40:09,516
we successfully have generated a


1115
00:40:09,516 --> 00:40:09,886
thumbnail.


1116
00:40:11,766 --> 00:40:13,116
Now that we have [inaudible] to


1117
00:40:13,116 --> 00:40:15,736
generate thumbnails we need to


1118
00:40:15,736 --> 00:40:16,736
create our [inaudible] reply.


1119
00:40:17,296 --> 00:40:20,476
We created out of the context


1120
00:40:20,476 --> 00:40:23,076
size, which in this case is the


1121
00:40:23,076 --> 00:40:25,076
maximum size and the drawing


1122
00:40:25,076 --> 00:40:25,486
block.


1123
00:40:27,516 --> 00:40:29,886
Also we have our reply object we


1124
00:40:29,886 --> 00:40:32,346
provided through the completion


1125
00:40:32,346 --> 00:40:33,356
handler [inaudible] parameter,


1126
00:40:33,936 --> 00:40:35,806
which in this case is new since


1127
00:40:35,806 --> 00:40:36,946
we always add them to draw


1128
00:40:36,946 --> 00:40:38,566
thumbnails for particles


1129
00:40:39,676 --> 00:40:40,956
documents.


1130
00:40:40,956 --> 00:40:41,926
If [inaudible] while drawing it


1131
00:40:42,386 --> 00:40:43,486
the thumbnail block success


1132
00:40:43,486 --> 00:40:45,486
value will indicate it, so the


1133
00:40:45,486 --> 00:40:46,866
thumbnail can be discounted


1134
00:40:47,596 --> 00:40:47,736
later.


1135
00:40:48,266 --> 00:40:49,796
We are finally all set, let's


1136
00:40:49,796 --> 00:40:50,916
run this code and see how this


1137
00:40:50,916 --> 00:40:51,326
looks like.


1138
00:40:52,406 --> 00:40:54,726
Wow. We now see a beautiful


1139
00:40:54,726 --> 00:40:56,616
thumbnail for our fire particles


1140
00:40:56,616 --> 00:40:56,926
file.


1141
00:40:57,446 --> 00:40:59,026
This looks so much better than


1142
00:40:59,026 --> 00:40:59,386
before.


1143
00:41:00,426 --> 00:41:02,676
Now let's check our preview


1144
00:41:02,676 --> 00:41:03,296
extension.


1145
00:41:04,966 --> 00:41:05,376
Okay.


1146
00:41:05,376 --> 00:41:07,076
So we are in Note and Quick Look


1147
00:41:07,076 --> 00:41:08,126
is still showing the blank


1148
00:41:08,126 --> 00:41:09,726
screen from the previous time we


1149
00:41:09,726 --> 00:41:11,006
tried to previewing your file.


1150
00:41:11,676 --> 00:41:13,016
Let's dismiss Quick Look and


1151
00:41:13,016 --> 00:41:13,706
present it again.


1152
00:41:16,186 --> 00:41:18,556
We now see our great particles


1153
00:41:18,556 --> 00:41:20,796
preview, note how easy it was to


1154
00:41:20,796 --> 00:41:23,526
make our custom file format


1155
00:41:24,816 --> 00:41:25,186
[inaudible] in iOS.


1156
00:41:25,186 --> 00:41:26,556
And that's it for the demo.


1157
00:41:27,086 --> 00:41:29,116
So what have we learned today?


1158
00:41:29,806 --> 00:41:32,176
First, we have shown you how


1159
00:41:32,326 --> 00:41:33,956
easy it is to add powerful


1160
00:41:33,956 --> 00:41:35,696
previewing capabilities to your


1161
00:41:35,696 --> 00:41:37,306
application by using the


1162
00:41:37,306 --> 00:41:38,956
QLPreviewController of Quick


1163
00:41:38,956 --> 00:41:39,276
Look.


1164
00:41:40,276 --> 00:41:42,926
Then we have taken a look at


1165
00:41:42,926 --> 00:41:44,316
Quick Look's extension points.


1166
00:41:45,196 --> 00:41:47,236
Preview extension allows you to


1167
00:41:47,236 --> 00:41:48,876
have your custom files preview


1168
00:41:48,876 --> 00:41:50,306
by Quick Look just like any


1169
00:41:50,306 --> 00:41:51,386
native file type.


1170
00:41:52,396 --> 00:41:54,326
While the thumbnail extension is


1171
00:41:54,326 --> 00:41:56,136
used to provide thumbnails of


1172
00:41:56,176 --> 00:41:57,976
your own file types to iOS when


1173
00:41:57,976 --> 00:41:58,276
needed.


1174
00:41:59,086 --> 00:42:01,526
Together these extensions make


1175
00:42:01,526 --> 00:42:02,826
your file formats first-class


1176
00:42:02,826 --> 00:42:06,216
citizens in iOS.


1177
00:42:06,356 --> 00:42:08,036
And that's it for this Quick


1178
00:42:08,036 --> 00:42:08,576
Look session.


1179
00:42:09,186 --> 00:42:10,286
If you would like to have more


1180
00:42:10,286 --> 00:42:12,346
information you can check out


1181
00:42:12,346 --> 00:42:13,246
Apple's website.


1182
00:42:13,646 --> 00:42:14,976
Thank you for your attention.

