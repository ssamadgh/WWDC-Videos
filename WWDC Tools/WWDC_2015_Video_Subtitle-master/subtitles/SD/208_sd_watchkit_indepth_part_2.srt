1
00:00:24,516 --> 00:00:27,386
[Applause]


2
00:00:27,886 --> 00:00:28,786
>> NATHAN DEVRIES:
Good morning, everyone.


3
00:00:30,666 --> 00:00:31,946
My name is Nathan deVries,


4
00:00:32,165 --> 00:00:35,586
and shortly you'll meet
my colleague Chloe Chang.


5
00:00:35,586 --> 00:00:37,976
We are here to present
WatchKit in depth part 2.


6
00:00:37,976 --> 00:00:41,376
In the previous session, part 1,


7
00:00:41,376 --> 00:00:43,386
we talked about the
architectural differences


8
00:00:43,466 --> 00:00:45,646
between watchOS 1 and watchOS 2


9
00:00:45,996 --> 00:00:47,696
and how it relates
to your applications.


10
00:00:48,376 --> 00:00:50,546
In this talk we will be
looking a little bit more


11
00:00:50,546 --> 00:00:52,716
into the new APIs enabled


12
00:00:52,716 --> 00:00:55,786
by this new architectural
change bringing your watch app


13
00:00:56,006 --> 00:00:57,606
and extension to the watch.


14
00:00:59,186 --> 00:01:01,266
Now, to start with, I will
be talking a little bit


15
00:01:01,266 --> 00:01:02,726
about something that's
pretty exciting.


16
00:01:03,226 --> 00:01:06,226
We are enabling Digital Crown
experiences in your own apps


17
00:01:06,556 --> 00:01:07,676
so this will be great.


18
00:01:09,126 --> 00:01:11,136
Next, we will be
talking a little bit


19
00:01:11,136 --> 00:01:15,216
about media playback both for
short video and audio content


20
00:01:15,546 --> 00:01:18,806
as well as long form
music, podcasts,


21
00:01:18,806 --> 00:01:19,886
et cetera, in the background.


22
00:01:20,256 --> 00:01:21,386
This is also a great new API.


23
00:01:23,456 --> 00:01:25,486
Next, we will be talking
about audio recording.


24
00:01:25,766 --> 00:01:27,916
You can now record audio
straight from your wrist


25
00:01:28,246 --> 00:01:31,366
and send the short clips of
audio to friends, to a server,


26
00:01:31,366 --> 00:01:33,726
share them on the
internet, and so on.


27
00:01:35,116 --> 00:01:36,926
And lastly, we're going
to be talking a little bit


28
00:01:36,926 --> 00:01:40,416
about storing sensitive
data on the watch.


29
00:01:40,736 --> 00:01:43,776
Now that your watch is
fully responsible for all


30
00:01:43,776 --> 00:01:46,106
of the data it shows,
it's important to keep


31
00:01:46,106 --> 00:01:49,116
in mind the sensitive
data you might be storing.


32
00:01:50,086 --> 00:01:51,146
So let's get started.


33
00:01:52,946 --> 00:01:56,556
The Digital Crown is a brand
new user input mechanism


34
00:01:56,596 --> 00:02:02,246
that allows you to fluidly and
very tactilely scroll through


35
00:02:02,246 --> 00:02:05,536
and pick elements on the
screen using the Digital Crown.


36
00:02:06,286 --> 00:02:09,126
It's a really fantastic way
to interact with the device.


37
00:02:10,015 --> 00:02:11,966
Let's take a look at some
of the core interactions


38
00:02:11,966 --> 00:02:13,866
that are enabled by
the Digital Crown.


39
00:02:14,626 --> 00:02:17,736
To start with, the one that
you will be most familiar


40
00:02:17,736 --> 00:02:19,826
with is, of course, scrolling.


41
00:02:20,926 --> 00:02:24,096
Place your finger on the Crown,
turn slowly to scroll slowly


42
00:02:24,346 --> 00:02:26,506
or flick quickly to
scroll with momentum.


43
00:02:26,706 --> 00:02:28,456
It's a really natural
experience.


44
00:02:28,906 --> 00:02:31,316
It feels like when we did
Multi-Touch scrolling.


45
00:02:32,696 --> 00:02:35,916
Next, you can use the Digital
Crown to choose options.


46
00:02:36,416 --> 00:02:38,316
This is a similar
picker style to S iOS,


47
00:02:38,316 --> 00:02:41,406
but on the watch you can
use the Digital Crown.


48
00:02:42,206 --> 00:02:45,306
Here I'm selecting my age
in the activity set up UI


49
00:02:46,066 --> 00:02:49,256
where I have a sheet that shows
three different pickers allowing


50
00:02:49,256 --> 00:02:54,806
me to have a concise and precise
UI for choosing my age all


51
00:02:54,806 --> 00:02:55,966
in a single modal sheet.


52
00:02:56,526 --> 00:03:03,586
Next, we have a different way
of presenting option picking.


53
00:03:04,146 --> 00:03:06,026
In many cases, the options


54
00:03:06,026 --> 00:03:10,356
that you are choosing have a
more special or specific way


55
00:03:10,356 --> 00:03:11,406
of presenting the data.


56
00:03:11,696 --> 00:03:14,756
In this case, I'm setting
a timer of 45 minutes,


57
00:03:15,246 --> 00:03:18,106
so we think that setting
time it makes sense to lay


58
00:03:18,106 --> 00:03:20,436
out the information in a
way that's specific to time.


59
00:03:21,066 --> 00:03:23,186
In this case, it's
a 60 second dial,


60
00:03:23,586 --> 00:03:26,706
so turning the Crown shows you
progress as you are rotating


61
00:03:26,806 --> 00:03:28,076
through each of those minutes.


62
00:03:29,026 --> 00:03:31,456
In each of your applications,
you will need to find ways


63
00:03:31,666 --> 00:03:34,806
to present the options that
you are presenting to the user


64
00:03:34,806 --> 00:03:36,456
in ways that are
relevant to the data.


65
00:03:36,676 --> 00:03:37,616
So keep this in mind.


66
00:03:38,536 --> 00:03:42,866
Lastly, because the Crown
provides smooth, precise


67
00:03:43,326 --> 00:03:48,566
and continuous movement, here
we can use the Crown to rotate


68
00:03:48,656 --> 00:03:51,206
through continuous
values like volume


69
00:03:51,206 --> 00:03:52,256
in the now playing glance.


70
00:03:53,466 --> 00:03:56,356
So these are a few of the
core interactions enabled


71
00:03:56,356 --> 00:04:00,026
by the Crown, and we are excited
to be able to provide those


72
00:04:00,026 --> 00:04:01,076
to your application too.


73
00:04:02,536 --> 00:04:06,386
So stepping back a little bit
from the core interactions,


74
00:04:06,386 --> 00:04:08,506
what are some of the
benefits of the Digital Crown?


75
00:04:08,506 --> 00:04:11,136
Well, we believe that the
Digital Crown is an incredibly


76
00:04:11,136 --> 00:04:14,816
intuitive experience when you
first put on an Apple Watch,


77
00:04:15,186 --> 00:04:18,596
the first thing you reach
for is the Digital Crown.


78
00:04:18,926 --> 00:04:21,726
People love to play with it,
and it's a very natural way


79
00:04:21,726 --> 00:04:23,616
to interact with
content on the screen.


80
00:04:24,146 --> 00:04:29,316
Next, and very importantly,
it keeps the UI visible,


81
00:04:29,766 --> 00:04:31,646
by not obstructing the
screen with your finger,


82
00:04:31,956 --> 00:04:33,616
you can see what you
are interacting with.


83
00:04:33,726 --> 00:04:37,146
So exposing different
interactions using the Digital


84
00:04:37,146 --> 00:04:40,866
Crown allows your users to
clearly navigate the system.


85
00:04:43,016 --> 00:04:45,806
Thirdly, it's a very
precise input mechanism.


86
00:04:46,306 --> 00:04:48,646
If we look back at
the timer example,


87
00:04:49,066 --> 00:04:52,576
you can't imagine trying to
tune between 0 and 60 minutes


88
00:04:52,576 --> 00:04:54,566
of a timer using touch alone.


89
00:04:54,956 --> 00:04:57,556
With the Crown you can
very precisely tune a 2,


90
00:04:57,656 --> 00:05:00,596
3 or 4-minute timer
or zip through


91
00:05:00,596 --> 00:05:03,106
and create a 60-minute
timer very quickly,


92
00:05:03,236 --> 00:05:04,926
just with a few flicks
of the Digital Crown.


93
00:05:06,416 --> 00:05:07,566
Finally it's a playful.


94
00:05:07,776 --> 00:05:09,926
This is a fun experience.


95
00:05:10,096 --> 00:05:14,896
It's very tactile and we think
the users are going to love it.


96
00:05:15,006 --> 00:05:17,006
So what are we exposing
in watchOS 2?


97
00:05:18,896 --> 00:05:20,456
This one you will be
very familiar with.


98
00:05:21,236 --> 00:05:24,846
It's the same style of
picker that we use elsewhere


99
00:05:24,846 --> 00:05:26,726
in the system, like in
complication editing


100
00:05:26,726 --> 00:05:27,926
and activity setup.


101
00:05:28,236 --> 00:05:31,136
We call this the WKInterface
picker, and it's available


102
00:05:31,136 --> 00:05:32,706
in watchOS 2 applications.


103
00:05:33,496 --> 00:05:37,206
We have the list style.


104
00:05:37,796 --> 00:05:41,666
This is great for
selecting a range of options


105
00:05:42,106 --> 00:05:44,046
where the options
are showing in text,


106
00:05:44,716 --> 00:05:47,356
in a list with a little bit of
context to either side to show


107
00:05:47,356 --> 00:05:48,866
where you are in the selection.


108
00:05:50,436 --> 00:05:52,336
Next, we have the stack style.


109
00:05:52,336 --> 00:05:56,076
Now, the stack style is perfect
if you have a very visual,


110
00:05:56,366 --> 00:05:59,026
graphical way of
presenting your data.


111
00:05:59,026 --> 00:06:01,136
It could be photographs,
it could be stickers


112
00:06:01,136 --> 00:06:02,556
in a messaging application.


113
00:06:02,956 --> 00:06:06,426
This is really great if you want
to show in place presentations


114
00:06:06,426 --> 00:06:07,886
of your data that you can turn


115
00:06:07,886 --> 00:06:10,666
through using the Digital
Crown like a flip book.


116
00:06:10,666 --> 00:06:14,416
And finally, we have the
sequence style picker.


117
00:06:15,326 --> 00:06:17,366
Now, this picker is really cool.


118
00:06:17,366 --> 00:06:18,876
I'm excited to see
what you are going


119
00:06:18,876 --> 00:06:19,966
to be able to do with this guy.


120
00:06:20,796 --> 00:06:23,816
Here, I have used it to create
an emoji picking interface.


121
00:06:24,086 --> 00:06:25,576
So if you turn the
Digital Crown,


122
00:06:25,896 --> 00:06:27,626
we cycle through
different emotions.


123
00:06:27,626 --> 00:06:31,846
This can also be used to
create your own sliders, knobs,


124
00:06:32,046 --> 00:06:34,916
meters and even games if
you get creative enough.


125
00:06:35,036 --> 00:06:36,516
So that's the sequence style.


126
00:06:36,666 --> 00:06:39,426
The three styles are
list, stack and sequence.


127
00:06:39,426 --> 00:06:44,056
Let's talk a little bit about
what we call focus styles.


128
00:06:44,846 --> 00:06:49,186
In addition to the three
visual styles of pickers,


129
00:06:49,846 --> 00:06:53,126
each of these styles also
supports focus styles.


130
00:06:53,756 --> 00:06:54,406
What does that mean?


131
00:06:55,356 --> 00:06:57,786
So here we have an example
of another emoji picking UI


132
00:06:58,336 --> 00:07:02,816
where we have the opportunity to
choose both a face and a hand.


133
00:07:03,826 --> 00:07:06,276
It's not immediately obvious
what turning the Crown would do


134
00:07:06,276 --> 00:07:06,826
in this case.


135
00:07:06,826 --> 00:07:09,676
It's not even obvious that there
are two pickers on the screen.


136
00:07:10,366 --> 00:07:13,876
What we can do is change
the default focus style


137
00:07:13,876 --> 00:07:16,386
of these two pickers
to an outline style.


138
00:07:17,126 --> 00:07:19,126
What this does is it
outlines the picker


139
00:07:19,126 --> 00:07:21,266
to show it's an interactive
element,


140
00:07:21,616 --> 00:07:24,656
and it also clearly shows
in the system green color


141
00:07:24,966 --> 00:07:28,656
that the selected or
focused element is editable


142
00:07:28,656 --> 00:07:29,506
with the Digital Crown.


143
00:07:30,426 --> 00:07:34,316
Now, when I tap the
other item on the screen,


144
00:07:34,896 --> 00:07:36,846
I see the focus outline changes,


145
00:07:37,146 --> 00:07:39,386
and I know what turning
the Digital Crown will do.


146
00:07:41,016 --> 00:07:43,036
There's an additional level
of control that you have


147
00:07:43,116 --> 00:07:44,956
over the focus outline.


148
00:07:45,796 --> 00:07:49,276
If the items in your picker need
more context to describe what's


149
00:07:49,276 --> 00:07:53,466
in them, we can use an outline
with caption focus style.


150
00:07:54,056 --> 00:07:56,516
This allows you to
build a UI similar


151
00:07:56,586 --> 00:07:59,286
to the complication
editing UI where you want


152
00:07:59,286 --> 00:08:00,626
to show a little breakout box


153
00:08:00,766 --> 00:08:03,216
that clearly shows
what the item is


154
00:08:03,326 --> 00:08:04,616
that you currently
have selected.


155
00:08:05,956 --> 00:08:08,656
And, again, if I
move to the other,


156
00:08:08,656 --> 00:08:11,066
move focus to the other
picker, you will note


157
00:08:11,066 --> 00:08:13,156
that the caption
also moves with it.


158
00:08:14,056 --> 00:08:16,776
The way that I have achieved
this here is I have each item


159
00:08:16,776 --> 00:08:18,486
in my picker with
the same caption,


160
00:08:18,486 --> 00:08:20,316
but you could also have
a different caption


161
00:08:20,316 --> 00:08:21,706
for each item in the picker.


162
00:08:23,486 --> 00:08:25,066
Now, there are other useful ways


163
00:08:25,066 --> 00:08:27,956
to provide context while
the user is interacting


164
00:08:28,026 --> 00:08:28,936
with the Digital Crown.


165
00:08:29,546 --> 00:08:31,416
One of these is the system style


166
00:08:31,416 --> 00:08:33,275
of showing a contextual
indicator,


167
00:08:33,275 --> 00:08:34,706
the Digital Crown indicator.


168
00:08:35,466 --> 00:08:37,696
This is shown beside
the Digital Crown


169
00:08:38,046 --> 00:08:40,866
and as the user turns the
Digital Crown it gives them


170
00:08:40,866 --> 00:08:44,606
context on the range of values
available to them for picking.


171
00:08:45,416 --> 00:08:48,976
It also shows how far through
the values they currently are.


172
00:08:48,976 --> 00:08:53,086
So it's good for getting your
bearings when you have a picker


173
00:08:53,126 --> 00:08:56,316
that doesn't necessarily show
where you are in the options,


174
00:08:56,696 --> 00:08:58,676
just through the visuals itself.


175
00:08:59,326 --> 00:09:02,196
For applications that want


176
00:09:02,196 --> 00:09:05,716
to show a more customized
progress UI, they don't want


177
00:09:05,716 --> 00:09:07,026
to show the little
Crown indicator,


178
00:09:07,456 --> 00:09:10,756
we have fantastic new ways for
you to build those experiences.


179
00:09:11,556 --> 00:09:14,976
It's best to show
with an example.


180
00:09:16,086 --> 00:09:18,946
In this case, I have a picker
in the center of the screen


181
00:09:19,066 --> 00:09:22,396
which allows me to tune
between 0 and 100%.


182
00:09:23,426 --> 00:09:26,706
So as I turn the Digital Crown,
you will see the values tick


183
00:09:26,706 --> 00:09:28,246
up in increments of 10%.


184
00:09:29,436 --> 00:09:31,086
This is kind of cool,
but we don't know


185
00:09:31,086 --> 00:09:34,366
that the bottom limit is 0
and the upper limit is 100.


186
00:09:35,006 --> 00:09:36,836
It's not a very visual
experience.


187
00:09:36,836 --> 00:09:38,546
It's not a pleasant experience.


188
00:09:39,056 --> 00:09:40,656
We could use the
contextual indicator,


189
00:09:40,656 --> 00:09:44,196
but in our app we would like to
show progress using a slightly


190
00:09:44,196 --> 00:09:46,926
different UI that is more
relevant to your application.


191
00:09:47,806 --> 00:09:52,026
Here, I have chosen to use an
arc or a progress ring style UI.


192
00:09:52,766 --> 00:09:56,726
So as I turn the Digital Crown,
I have coordinated the picker


193
00:09:57,136 --> 00:10:02,206
with another interface element
in my UI so it updates the image


194
00:10:02,206 --> 00:10:04,066
as I turn through
the picker's items.


195
00:10:05,216 --> 00:10:08,716
With this coordinated image
API, you can build all sorts


196
00:10:08,716 --> 00:10:11,516
of fantastic Digital
Crown experiences.


197
00:10:13,276 --> 00:10:16,706
So there are all the different
knobs and bells and whistles


198
00:10:16,786 --> 00:10:20,086
that you can configure
on a WK interface picker,


199
00:10:20,716 --> 00:10:21,656
how you create one.


200
00:10:22,226 --> 00:10:23,916
Let's jump into looking
at that right now.


201
00:10:25,026 --> 00:10:27,736
So those of you that are
familiar with watchOS 1,


202
00:10:27,786 --> 00:10:31,006
this is a very straight
forward process.


203
00:10:31,006 --> 00:10:35,116
If you go to your storyboard and
select an interface controller,


204
00:10:35,396 --> 00:10:38,236
you can simply drag a new
picker object straight


205
00:10:38,236 --> 00:10:41,076
from the objects library
into your storyboard.


206
00:10:42,606 --> 00:10:45,696
Once you have a picker, you
can obviously configure its


207
00:10:45,696 --> 00:10:46,616
various attributes.


208
00:10:46,616 --> 00:10:49,336
We have already been speaking
about these such as the style,


209
00:10:49,676 --> 00:10:51,726
list, sequence or stack.


210
00:10:52,556 --> 00:10:54,906
The focus style and
whether or not you would


211
00:10:54,906 --> 00:10:57,646
like that optional Digital
Crown indicator to be shown.


212
00:10:58,746 --> 00:11:01,006
In this case, I'm
using the list style,


213
00:11:01,256 --> 00:11:04,476
the outline with caption style,
and a disabled indicator,


214
00:11:04,476 --> 00:11:07,706
because I'm going to provide
my own, or I don't feel


215
00:11:07,706 --> 00:11:09,306
like the context is necessary


216
00:11:09,356 --> 00:11:12,966
with the data that
I'm presenting.


217
00:11:12,966 --> 00:11:15,696
Next, we need to jump into
the interface controller code,


218
00:11:15,696 --> 00:11:18,186
and we need to create an
IB outlet for the picker


219
00:11:18,186 --> 00:11:22,456
so we can hook up our code and
the object in the storyboard.


220
00:11:22,596 --> 00:11:24,226
This gives us a reference
to the picker.


221
00:11:25,866 --> 00:11:28,016
And finally, we jump
back to the storyboard


222
00:11:28,106 --> 00:11:29,336
and hook these two things up.


223
00:11:29,336 --> 00:11:31,536
So there are just a few
simple steps similar


224
00:11:31,536 --> 00:11:33,716
to creating buttons
and images and so


225
00:11:33,716 --> 00:11:36,226
on with the picker
very easy to create.


226
00:11:38,316 --> 00:11:40,606
So now we have a picker,
and we have hooked it up,


227
00:11:40,606 --> 00:11:43,196
and we have build and run
and this is what we get.


228
00:11:43,416 --> 00:11:46,386
It's possibly the most
useless picker in the world.


229
00:11:47,466 --> 00:11:49,786
Turn the Digital Crown and
you can quickly navigate


230
00:11:49,786 --> 00:11:50,396
through nothing.


231
00:11:50,506 --> 00:11:50,976
It's great!


232
00:11:52,166 --> 00:11:55,786
So what we need to do is
configure what we call items


233
00:11:55,986 --> 00:11:58,506
as you can see from the title.


234
00:11:58,506 --> 00:12:00,666
To do that, now that we have
a reference to the picker


235
00:12:00,666 --> 00:12:04,066
through the IB outlet, we can
simply call the set items API


236
00:12:04,066 --> 00:12:07,146
and specify an array
of WKPickerItems.


237
00:12:07,246 --> 00:12:11,046
These are the very
simple objects


238
00:12:11,126 --> 00:12:12,846
with a few optional properties.


239
00:12:13,516 --> 00:12:16,996
Here I'm using the title
property, the caption property


240
00:12:16,996 --> 00:12:20,306
and the accessory property
to define the visual style


241
00:12:20,306 --> 00:12:22,386
that I'm presenting
on the watch.


242
00:12:22,386 --> 00:12:27,046
Now, if I want to have full
control over what's shown


243
00:12:27,046 --> 00:12:28,246
in each row of the picker,


244
00:12:28,246 --> 00:12:32,356
I can also use the content
image property of each


245
00:12:32,356 --> 00:12:34,296
of these different
WKPickerItems.


246
00:12:34,806 --> 00:12:37,016
This gives me full
control over what's shown


247
00:12:37,296 --> 00:12:38,666
for each item in the picker.


248
00:12:39,716 --> 00:12:41,926
For the stack and
sequence styles,


249
00:12:42,576 --> 00:12:44,526
the content image is used


250
00:12:44,526 --> 00:12:47,166
to define what's shown
in those two pickers.


251
00:12:47,536 --> 00:12:48,716
So for those two styles,


252
00:12:48,716 --> 00:12:50,716
you will just use the
content image property.


253
00:12:51,406 --> 00:12:55,486
So new in watchOS
2 we have a new API


254
00:12:55,486 --> 00:12:59,936
for specifying images you would
like to be shown in your UI


255
00:13:00,596 --> 00:13:02,636
for pickers and for
a few other objects


256
00:13:02,636 --> 00:13:05,316
which you will see later.


257
00:13:05,316 --> 00:13:07,646
This is called the
WK image class.


258
00:13:07,646 --> 00:13:11,746
And I will give a few examples
of how you might use this class.


259
00:13:13,026 --> 00:13:14,556
The most common example will be


260
00:13:14,556 --> 00:13:16,166
that you have your
images included


261
00:13:16,166 --> 00:13:19,446
in the application already
in your asset catalog


262
00:13:19,446 --> 00:13:22,836
or in the bundle itself, and
so you can use the WK image,


263
00:13:22,896 --> 00:13:25,216
image name API to
load those images


264
00:13:25,216 --> 00:13:28,236
into the application
just prior to display.


265
00:13:28,576 --> 00:13:32,156
All the extension needs to do is
specify the name of the image.


266
00:13:33,586 --> 00:13:37,216
For cases where your extension
has downloaded the image


267
00:13:37,256 --> 00:13:40,016
from the internet or from
the companion using watch


268
00:13:40,016 --> 00:13:43,626
connectivity, instead of
turning that image and turning


269
00:13:43,626 --> 00:13:45,376
that image data into an image,


270
00:13:45,666 --> 00:13:48,776
you can save the necessary
overhead of decoding the image


271
00:13:48,776 --> 00:13:53,266
in the extension and pass the
image data into the application


272
00:13:53,556 --> 00:13:56,346
where it will be converted into
an image just prior to display.


273
00:13:57,366 --> 00:14:00,946
These first two ways of creating
images are the preferred way


274
00:14:00,946 --> 00:14:02,516
if you already have
the imimage data.


275
00:14:02,516 --> 00:14:05,546
There is no sense in creating
UI images unnecessarily


276
00:14:05,956 --> 00:14:08,156
in your extension
because they are displayed


277
00:14:08,216 --> 00:14:08,996
by the application.


278
00:14:10,716 --> 00:14:13,256
The last case is where
you do need UI images.


279
00:14:13,666 --> 00:14:16,816
Now that core graphics available
on the watch, you can use it


280
00:14:16,816 --> 00:14:20,656
to render custom effects
into images to use


281
00:14:20,656 --> 00:14:21,726
in your WKPickerItems.


282
00:14:21,726 --> 00:14:25,766
So here I'm using the
WK image image API,


283
00:14:26,186 --> 00:14:27,626
which takes a UI image object.


284
00:14:28,306 --> 00:14:32,456
Now, we have a picker
configured with items


285
00:14:32,456 --> 00:14:35,156
and turning the Digital Crown
will move through those items,


286
00:14:35,616 --> 00:14:37,676
but it's useful in your
application to know


287
00:14:37,946 --> 00:14:40,896
when the selected item
changes, and to do this,


288
00:14:40,896 --> 00:14:44,336
we use a similar technique to a
button or a slider or a switch


289
00:14:44,726 --> 00:14:46,306
by hooking up an IB action.


290
00:14:47,436 --> 00:14:52,696
Now, the IB action for pickers
in particular is a method


291
00:14:52,696 --> 00:14:54,016
that takes a single argument,


292
00:14:54,476 --> 00:14:58,776
which is an integer representing
the index of the selected item


293
00:14:58,926 --> 00:15:01,986
in your items array that you
specified using set items.


294
00:15:03,086 --> 00:15:05,756
So in this case, I am indexing


295
00:15:05,756 --> 00:15:09,286
into my picker items using the
selected index provided to me,


296
00:15:09,666 --> 00:15:13,306
and I'm printing the
title of that picker item.


297
00:15:14,416 --> 00:15:17,136
So really easy to handle
selected item and changes.


298
00:15:17,836 --> 00:15:19,236
One thing to note is
that you don't want


299
00:15:19,236 --> 00:15:20,906
to do particularly
expensive work


300
00:15:21,376 --> 00:15:22,966
in response to item changes.


301
00:15:23,466 --> 00:15:25,596
As you saw in the core
interaction section,


302
00:15:25,596 --> 00:15:28,756
you can turn the Crown quickly
to move through items quickly


303
00:15:29,116 --> 00:15:31,816
so your picker action is going
to be called very rapidly.


304
00:15:32,336 --> 00:15:35,006
If you are doing very expensive
things I suggest you hold off


305
00:15:35,006 --> 00:15:37,536
until you haven't received
a picker action call


306
00:15:37,536 --> 00:15:40,726
in a little bit of time, and
then you do the expensive work


307
00:15:40,726 --> 00:15:43,116
like refreshing your
table view and so on.


308
00:15:45,206 --> 00:15:47,106
Next we have image coordination.


309
00:15:47,396 --> 00:15:49,866
This is what allows you
to build those custom,


310
00:15:50,136 --> 00:15:53,046
beautiful interactions
where many parts


311
00:15:53,046 --> 00:15:54,536
of your interface
are coordinated


312
00:15:54,646 --> 00:15:56,426
with the picker as
its value changes.


313
00:15:57,566 --> 00:15:59,936
This is also very
simple to set up.


314
00:16:00,036 --> 00:16:02,466
In this case, I have a picker
in the center of the screen


315
00:16:02,466 --> 00:16:06,506
which shows 70%, and the
outline, the progress ring,


316
00:16:06,786 --> 00:16:11,966
is a WKInterfaceGroup which
is the parent of the picker.


317
00:16:12,106 --> 00:16:14,726
Very easy, very simple
UI to set up.


318
00:16:15,716 --> 00:16:17,346
Now, to configure this in code,


319
00:16:17,346 --> 00:16:20,926
all we need to do is create
a set of animated images


320
00:16:21,036 --> 00:16:23,586
which will be managed
by the picker.


321
00:16:23,686 --> 00:16:27,106
So here we create a
progress images variable


322
00:16:27,816 --> 00:16:32,096
and use the UI animated
image with images API


323
00:16:32,596 --> 00:16:36,266
to specify an array of those
progress images we have either


324
00:16:36,266 --> 00:16:40,186
drawn in code or we already
have in our asset catalog.


325
00:16:41,056 --> 00:16:42,756
We will give it a duration of 0


326
00:16:42,756 --> 00:16:45,526
because the picker will
automatically manage seeking


327
00:16:45,526 --> 00:16:47,986
through this animation,
and then finally


328
00:16:48,026 --> 00:16:49,416
on the progress interface group,


329
00:16:49,556 --> 00:16:51,006
which is hosting
the progress ring,


330
00:16:51,076 --> 00:16:53,086
we will call set
background image


331
00:16:53,166 --> 00:16:55,376
to make the animated image
the background image.


332
00:16:56,446 --> 00:16:59,306
Finally we call set
coordinated animations


333
00:16:59,416 --> 00:17:01,706
on the picker giving
it a list of all


334
00:17:01,706 --> 00:17:03,406
of the different interface
objects that we would


335
00:17:03,406 --> 00:17:06,906
like the picker to coordinate
as you turn through the picker.


336
00:17:07,816 --> 00:17:09,665
In this case, we only
have a single group,


337
00:17:10,165 --> 00:17:12,205
but we could also
specify multiple groups,


338
00:17:12,806 --> 00:17:14,915
a group in an image, and so on.


339
00:17:15,185 --> 00:17:19,586
This supports as many
objects as you like.


340
00:17:19,856 --> 00:17:23,626
Now, as I turn through the
WK interface picker's items,


341
00:17:24,116 --> 00:17:27,226
we coordinate with any
associated groups and images


342
00:17:27,435 --> 00:17:31,206
which image is shown in that
particular interface object.


343
00:17:32,026 --> 00:17:35,716
In this example, I have matched
the number of items to images,


344
00:17:35,716 --> 00:17:37,226
but I will show you
in a little bit


345
00:17:37,226 --> 00:17:39,756
that that doesn't necessarily
need to be the case.


346
00:17:40,546 --> 00:17:42,806
So that's how you coordinate
images with a picker.


347
00:17:44,246 --> 00:17:46,576
Now, to finish things
off for this section,


348
00:17:46,576 --> 00:17:49,636
I thought I would give
you a little demo of how


349
00:17:49,636 --> 00:17:50,986
to do this in your application.


350
00:17:53,616 --> 00:17:55,326
So let me just get that set up.


351
00:17:57,076 --> 00:17:59,416
So here is a little app
that I created earlier.


352
00:18:00,386 --> 00:18:03,636
It shows each of the
different styles of picker


353
00:18:03,636 --> 00:18:06,046
that you can create as
well as the last one


354
00:18:06,046 --> 00:18:07,626
for a demonstration
of coordination.


355
00:18:08,216 --> 00:18:10,346
So let's start by going
to the list style picker.


356
00:18:11,346 --> 00:18:14,086
In this particular case,
I have created a picker


357
00:18:14,086 --> 00:18:15,656
with accessory images drawn


358
00:18:15,656 --> 00:18:19,266
as random colors using core
graphics and I have quite a few,


359
00:18:19,546 --> 00:18:20,576
quite a few items here.


360
00:18:20,746 --> 00:18:23,646
You can see it's very fluid
to scroll through these items.


361
00:18:24,466 --> 00:18:28,556
Everyone time the item changes
I'm also updating a separate


362
00:18:28,766 --> 00:18:31,486
interface element
in my storyboard.


363
00:18:31,646 --> 00:18:34,086
This is a simple label,
and I'm updating the text.


364
00:18:34,896 --> 00:18:38,496
So these kinds of things are
very possible to do in response


365
00:18:38,566 --> 00:18:40,106
to selected item changes.


366
00:18:40,556 --> 00:18:43,076
It's really only more expensive
things that you want to defer.


367
00:18:43,116 --> 00:18:46,136
So let's go back to
the top level menu


368
00:18:46,136 --> 00:18:48,406
and into the stack style.


369
00:18:48,996 --> 00:18:51,086
Here I'm also using
core graphics


370
00:18:51,446 --> 00:18:54,706
to render random
squares of random color,


371
00:18:55,006 --> 00:18:58,446
and here you will see that I can
very smoothly and quickly flick


372
00:18:58,516 --> 00:19:01,676
through images in this
stack style picker.


373
00:19:02,796 --> 00:19:04,836
Also note that in the
upper right-hand corner


374
00:19:04,836 --> 00:19:07,466
as I turn the Digital
Crown, you will see


375
00:19:07,766 --> 00:19:10,826
that the Digital Crown
indicator shows my progress


376
00:19:11,126 --> 00:19:12,516
through this stack of items.


377
00:19:13,106 --> 00:19:13,756
It's really useful.


378
00:19:14,356 --> 00:19:18,556
The third example
is a sequence style.


379
00:19:18,996 --> 00:19:21,386
I thought I would show the kinds
of things you could achieve


380
00:19:21,386 --> 00:19:24,076
with the sequence style
because the emoji case was kind


381
00:19:24,076 --> 00:19:25,626
of obvious what you
could do with that.


382
00:19:26,136 --> 00:19:30,356
Here I can create a pretty
compelling experience


383
00:19:30,356 --> 00:19:33,516
for choosing a random
color using a color wheel.


384
00:19:34,116 --> 00:19:35,696
Here as I turn the
Digital Crown,


385
00:19:35,956 --> 00:19:37,476
I'm selecting different images


386
00:19:37,476 --> 00:19:39,626
in the sequence representing
a new color.


387
00:19:39,626 --> 00:19:44,296
So this is pretty cool, and also
note that this supports momentum


388
00:19:44,296 --> 00:19:46,216
so I can still flick on
the Crown and it will move


389
00:19:46,256 --> 00:19:47,716
through the values very quickly.


390
00:19:49,566 --> 00:19:52,026
Finally, let's talk a little
bit about coordination.


391
00:19:52,776 --> 00:19:55,756
I have created an example here
with a left and a right picker


392
00:19:55,756 --> 00:19:58,966
where I have got the
left picker focused.


393
00:19:59,536 --> 00:20:03,516
As I turn the Digital Crown,
I'm moving through 12 options


394
00:20:03,516 --> 00:20:04,536
on the left-hand side.


395
00:20:05,276 --> 00:20:06,936
If I focus the right
hand picker,


396
00:20:07,566 --> 00:20:09,666
now I'm moving through 60 items.


397
00:20:10,036 --> 00:20:13,736
You can see that this is
maybe an approximation


398
00:20:13,736 --> 00:20:15,066
of the timer UI.


399
00:20:16,686 --> 00:20:17,586
So one thing to note is


400
00:20:17,616 --> 00:20:20,196
that both pickers share
the same coordinated image.


401
00:20:20,286 --> 00:20:25,196
So my coordinated image includes
60 different progress arcs


402
00:20:26,266 --> 00:20:30,506
for this right hand picker, but
my left hand picker can also use


403
00:20:30,506 --> 00:20:32,026
that same progress image.


404
00:20:32,486 --> 00:20:35,336
This is a really handy
technique to use if you want


405
00:20:35,376 --> 00:20:37,516
to save the number of
resources you are using


406
00:20:37,516 --> 00:20:38,286
between your pickers.


407
00:20:39,366 --> 00:20:42,546
So that's the demo.


408
00:20:43,516 --> 00:20:50,976
[Applause]


409
00:20:51,476 --> 00:20:53,306
So just to recap some of
the things you have learned


410
00:20:53,306 --> 00:20:56,036
about the Digital Crown, the new
experiences you can use provide


411
00:20:56,086 --> 00:20:57,786
to your users in watchOS 2,


412
00:20:58,686 --> 00:21:01,696
we have three brand new
customizable styles, the list,


413
00:21:02,136 --> 00:21:03,496
the stack and the sequence.


414
00:21:04,146 --> 00:21:06,666
Each one is tailored to
displaying different types


415
00:21:06,666 --> 00:21:09,656
of information, so you should
choose which one you use based


416
00:21:09,656 --> 00:21:13,176
on what your users are
interacting with in your apps.


417
00:21:13,406 --> 00:21:16,326
Each of these styles supports
focus and indicator support


418
00:21:16,326 --> 00:21:19,856
so as you are turning through
the items in the picker,


419
00:21:20,406 --> 00:21:24,086
we both show you what the Crown
would do by showing focus,


420
00:21:24,306 --> 00:21:25,776
and we also provide support


421
00:21:25,776 --> 00:21:29,116
for showing the standard
Digital Crown indicator.


422
00:21:29,876 --> 00:21:32,456
And finally, for
creating truly customized,


423
00:21:32,696 --> 00:21:36,256
compelling interfaces with
very tailored graphics,


424
00:21:36,396 --> 00:21:39,076
you can use the image
animation coordination APIs


425
00:21:39,326 --> 00:21:43,006
to synchronize other aspects of
your interface with the pickers


426
00:21:43,006 --> 00:21:44,206
that are currently being edited.


427
00:21:44,206 --> 00:21:47,956
And with that, I would like to
hand off to Chloe who will talk


428
00:21:47,956 --> 00:21:50,136
about media play
back on watchOS 2.


429
00:21:50,476 --> 00:21:50,976
Thank you very much!


430
00:21:51,516 --> 00:21:58,596
[Applause]


431
00:21:59,096 --> 00:21:59,796
>> CHLOE CHANG: Hi, everyone!


432
00:22:00,556 --> 00:22:06,676
I'm here to talk about more
new features in watchOS 2.


433
00:22:07,276 --> 00:22:09,326
The first one is media playback.


434
00:22:10,666 --> 00:22:16,766
So let me show you what it looks
like to play a simple video


435
00:22:17,306 --> 00:22:20,686
in the new media
player in watchOS 2.


436
00:22:21,886 --> 00:22:23,696
First, the content
is loaded and,


437
00:22:23,696 --> 00:22:27,836
once the user presses the play
iCon, it will start to play.


438
00:22:28,896 --> 00:22:32,226
And at any point in time the
user can turn the Digital Crown


439
00:22:32,226 --> 00:22:36,136
to adjust the volume and also
if you tap on the screen,


440
00:22:36,136 --> 00:22:38,546
the player control will come up.


441
00:22:39,786 --> 00:22:41,736
And for audio only content,


442
00:22:41,736 --> 00:22:46,546
we also have a built
in UI for that.


443
00:22:47,126 --> 00:22:50,196
The audio for both
cases will be routed


444
00:22:50,296 --> 00:22:51,906
to the selected output source.


445
00:22:52,756 --> 00:22:55,976
That could be your
Apple Watch speaker


446
00:22:56,356 --> 00:22:59,696
or a paired bluetooth device.


447
00:22:59,806 --> 00:23:03,686
Now, let me show you
how to do this in code.


448
00:23:03,886 --> 00:23:06,966
Let's say you are trying to
present this media player


449
00:23:06,966 --> 00:23:08,886
from your interface controller.


450
00:23:10,306 --> 00:23:12,296
The first thing you
do is to figure


451
00:23:12,296 --> 00:23:15,336
out the URL for the content.


452
00:23:16,036 --> 00:23:20,486
Suppose you have a simple movie
from your extension bundle.


453
00:23:20,716 --> 00:23:24,606
This is how you come up with
the URL for the content.


454
00:23:25,006 --> 00:23:27,816
You can also use remote URL.


455
00:23:28,596 --> 00:23:31,916
In that case, the media player
would handle the download


456
00:23:31,916 --> 00:23:32,526
for you.


457
00:23:33,146 --> 00:23:39,376
And also, it would update the
UI with a progress indication.


458
00:23:39,906 --> 00:23:44,766
And with the URL, we can
then decide how we are going


459
00:23:44,766 --> 00:23:46,556
to play the content.


460
00:23:47,136 --> 00:23:48,866
We offer a few options here.


461
00:23:49,176 --> 00:23:51,706
The first one is auto play.


462
00:23:52,256 --> 00:23:57,216
When it's set to true, once
the media player is on screen


463
00:23:57,216 --> 00:23:58,656
and the content is loaded,


464
00:23:59,406 --> 00:24:01,496
the playback will
automatically start.


465
00:24:02,326 --> 00:24:05,296
The next one I use
is start time.


466
00:24:06,066 --> 00:24:09,676
I make it to start at the
3 second mark of the video.


467
00:24:10,546 --> 00:24:14,966
This is really useful if the
playback was previously paused


468
00:24:15,216 --> 00:24:18,116
and when user comes back
to the media player,


469
00:24:18,116 --> 00:24:20,726
you want to resume the
playback from the same spot.


470
00:24:21,236 --> 00:24:26,706
And the third option
here I use video gravity.


471
00:24:26,936 --> 00:24:32,436
This key actually determines how
the video will be resized once


472
00:24:32,436 --> 00:24:34,116
it's in the media player.


473
00:24:34,536 --> 00:24:36,746
And with all of this
information,


474
00:24:36,746 --> 00:24:40,286
now you can call present
media controller with URL.


475
00:24:41,356 --> 00:24:43,256
And you can specify
completion handler.


476
00:24:43,256 --> 00:24:45,236
It will tell you how
the playback ended.


477
00:24:45,236 --> 00:24:49,496
And that's how easy you
can present a media player


478
00:24:49,766 --> 00:24:50,476
from your code.


479
00:24:51,296 --> 00:24:53,806
And in some other
cases, for example,


480
00:24:53,896 --> 00:24:58,206
in the social media app, you
want to embed a snippet of video


481
00:24:58,346 --> 00:25:00,026
in some kind of context.


482
00:25:00,946 --> 00:25:04,366
We have the object
that you need.


483
00:25:04,626 --> 00:25:08,806
In watchOS 2, now you have
the WKInterface movie object


484
00:25:09,256 --> 00:25:13,506
that you can insert into a UI.


485
00:25:13,686 --> 00:25:17,356
This object has a player icon
overlaying a poster image


486
00:25:17,406 --> 00:25:18,976
that represents your content.


487
00:25:19,506 --> 00:25:24,516
Once user taps on the play icon,
the media player I showed you


488
00:25:24,516 --> 00:25:27,696
at the beginning shows
up here automatically.


489
00:25:27,696 --> 00:25:31,446
You don't have to write
any code to do that.


490
00:25:31,646 --> 00:25:33,736
So let me show you how
to do that in Xcode.


491
00:25:33,736 --> 00:25:37,376
In the new Xcode, you will
find this movie object


492
00:25:37,556 --> 00:25:38,816
in your object library.


493
00:25:39,426 --> 00:25:41,906
You can drag and drop
it into your storyboard,


494
00:25:42,506 --> 00:25:46,686
and you can use the
attribute inspector


495
00:25:46,816 --> 00:25:50,936
to customize this movie object.


496
00:25:51,446 --> 00:25:55,756
You can specify the video
gravity, or the poster image.


497
00:25:57,156 --> 00:25:59,646
You can also do this
in code if you want


498
00:25:59,646 --> 00:26:01,566
to dynamically configure this.


499
00:26:02,336 --> 00:26:05,356
Suppose in your code you
have member variables


500
00:26:05,686 --> 00:26:09,826
for the content, and
you have the URL for it,


501
00:26:09,826 --> 00:26:12,656
and the poster image that
represents the movie.


502
00:26:12,656 --> 00:26:17,776
And you drag the IB outlet
from the interface builder


503
00:26:18,566 --> 00:26:22,696
and that represents the movie
object that you are using.


504
00:26:23,456 --> 00:26:27,306
And once you want to update
your UI or your content has


505
00:26:27,306 --> 00:26:29,516
to change, you can
use this method


506
00:26:29,846 --> 00:26:31,986
to configure your movie object.


507
00:26:32,846 --> 00:26:36,876
And because the -- is so
different on Apple Watch


508
00:26:36,876 --> 00:26:44,226
than other iOS devices, we have
a few specific media formats you


509
00:26:44,226 --> 00:26:47,156
should use for any
content you are trying


510
00:26:47,156 --> 00:26:49,646
to play on Apple Watch.


511
00:26:50,426 --> 00:26:54,286
If your content works
best in full screen mode,


512
00:26:54,746 --> 00:26:58,896
then the recommended
resolution is 208 by 260.


513
00:26:59,456 --> 00:27:05,356
If your content actually works
best in a 16:9 aspect ratio,


514
00:27:05,546 --> 00:27:09,746
the recommended resolution
is 320 by 180.


515
00:27:10,526 --> 00:27:13,536
If you follow this
set of media specs,


516
00:27:14,086 --> 00:27:17,876
you can expect the best result
for your playback feature.


517
00:27:19,156 --> 00:27:23,166
That's how easy you can play
audio and video in your app.


518
00:27:23,916 --> 00:27:25,566
The next feature I want to talk


519
00:27:25,566 --> 00:27:28,226
about is called long
form audio playback.


520
00:27:29,486 --> 00:27:33,926
The features I showed you so
far present some UI for you


521
00:27:34,456 --> 00:27:37,556
and once the UI is dismissed,
the playback will stop.


522
00:27:38,466 --> 00:27:40,236
Long form audio is different.


523
00:27:40,776 --> 00:27:46,186
It doesn't come with any
built in UI for your app.


524
00:27:47,196 --> 00:27:49,136
That means you can
create your own,


525
00:27:49,576 --> 00:27:52,526
and once your own
UI is dismissed,


526
00:27:53,266 --> 00:27:56,396
the playback can actually
continue in the background.


527
00:27:57,126 --> 00:28:02,846
A common use case for this is
a podcast app or a music app.


528
00:28:03,726 --> 00:28:07,736
The user might be listening to
the audio tracks while he is


529
00:28:07,736 --> 00:28:09,566
out for a run or
doing a commute.


530
00:28:11,036 --> 00:28:14,116
The audio for this feature
would be routed only


531
00:28:14,116 --> 00:28:16,596
to the paired bluetooth device.


532
00:28:16,976 --> 00:28:19,756
And the playback
status would be updated


533
00:28:20,086 --> 00:28:21,756
in the now playing glance.


534
00:28:22,466 --> 00:28:25,836
So it's very convenient for the
user to control the playback.


535
00:28:25,896 --> 00:28:29,536
Now, let me show you the API.


536
00:28:30,456 --> 00:28:33,626
If you are familiar
with AV foundation APIs,


537
00:28:33,796 --> 00:28:36,016
you will think these
are very familiar.


538
00:28:37,456 --> 00:28:39,486
Let's say you have the URL


539
00:28:39,526 --> 00:28:42,616
for the audio you
are trying to play.


540
00:28:42,966 --> 00:28:46,926
You can create an
asset like this.


541
00:28:46,926 --> 00:28:50,956
With this asset you can create
the audio file player item.


542
00:28:51,316 --> 00:28:56,216
The player item has
the presentation status


543
00:28:56,326 --> 00:28:57,496
for the asset.


544
00:28:58,216 --> 00:29:01,056
And you can use KVO
to observe the status.


545
00:29:02,406 --> 00:29:04,406
Just like with AV
foundation APIs.


546
00:29:04,406 --> 00:29:08,196
And with the player item,
you can create a player


547
00:29:08,196 --> 00:29:09,586
and call play to play it.


548
00:29:09,966 --> 00:29:10,686
Super simple!


549
00:29:11,486 --> 00:29:15,966
For the example I
mentioned, a podcast app,


550
00:29:16,806 --> 00:29:22,426
you can create a list of items
that you are trying to play,


551
00:29:22,956 --> 00:29:28,516
and if you want to provide user
a gapless listening experience,


552
00:29:28,856 --> 00:29:31,556
instead of using
audio file player,


553
00:29:31,766 --> 00:29:33,696
just use audio file
Queue player,


554
00:29:33,696 --> 00:29:36,496
and that will give you
exactly what you want.


555
00:29:37,546 --> 00:29:40,156
Just like on other iOS devices,


556
00:29:40,156 --> 00:29:45,406
if you want to create
background mode playback,


557
00:29:46,446 --> 00:29:47,766
you need to enable it


558
00:29:47,926 --> 00:29:53,186
in the apps info list
just like this in Xcode.


559
00:29:53,896 --> 00:29:54,656
Super simple!


560
00:29:55,206 --> 00:29:58,666
Now, I would like to take
a couple of moments to talk


561
00:29:58,666 --> 00:30:03,986
about where you should store all
of this media data in your app.


562
00:30:04,076 --> 00:30:08,136
As you know now, your app on
Apple Watch has two components.


563
00:30:08,246 --> 00:30:11,216
One is the app, the
other is the extension,


564
00:30:11,436 --> 00:30:13,346
and when it's installed,


565
00:30:13,696 --> 00:30:17,446
the extension bundle sits
inside the app bundle.


566
00:30:18,346 --> 00:30:23,866
Each component has a container
for storing dynamic data,


567
00:30:24,536 --> 00:30:27,156
and each container
can only be accessed


568
00:30:27,526 --> 00:30:29,786
by the individual component.


569
00:30:31,086 --> 00:30:34,146
So let's say you have a static
image that you want to use


570
00:30:34,146 --> 00:30:37,386
in your app, and you
want to use WK image,


571
00:30:37,416 --> 00:30:40,526
image named to reference
it, you should put it


572
00:30:40,526 --> 00:30:43,296
in an asset catalog
in the app bundle.


573
00:30:44,136 --> 00:30:46,896
If you have other
resources, for example,


574
00:30:46,896 --> 00:30:51,006
audio or video playback, and
the image data that you want


575
00:30:51,006 --> 00:30:55,416
to directly manipulate in
your code, you should put it


576
00:30:55,416 --> 00:30:58,886
in the extension bundle, so that
you can create the URL for them.


577
00:31:00,676 --> 00:31:05,356
Now, in other cases, if you
want to have dynamic content


578
00:31:05,356 --> 00:31:09,366
for playback, you can either
use watch connectivity


579
00:31:09,366 --> 00:31:12,176
to grab those content
from the iPhone,


580
00:31:12,916 --> 00:31:16,806
or you can download your
content from the internet


581
00:31:16,936 --> 00:31:18,916
by using NSURL session.


582
00:31:19,756 --> 00:31:21,816
For these contents,
you cannot put them


583
00:31:21,816 --> 00:31:26,316
in either container I show you
here because they won't be able


584
00:31:26,316 --> 00:31:29,986
to be accessed by both
the app and the extension.


585
00:31:30,236 --> 00:31:33,076
So what you need to do
is create an app group,


586
00:31:33,456 --> 00:31:36,056
which provides a
shared container for you


587
00:31:36,056 --> 00:31:38,946
to store these data and they
can be accessed by both.


588
00:31:40,036 --> 00:31:45,526
So that's all you need to know,
and if you want to learn more


589
00:31:45,526 --> 00:31:49,076
about app group, please take
a look at this documentation.


590
00:31:50,636 --> 00:31:54,046
The next feature I want to
talk about is audio recording.


591
00:31:54,766 --> 00:31:59,656
Let's take a look at the UI,
and see how it works in action.


592
00:32:00,516 --> 00:32:02,986
Once the user presses
the record button,


593
00:32:04,196 --> 00:32:07,146
the recording will start, and
the wave form will be updated.


594
00:32:07,656 --> 00:32:11,006
You can do this with
just one function call.


595
00:32:11,496 --> 00:32:16,326
In your interface
controller sub class,


596
00:32:16,596 --> 00:32:20,716
you can just call present
audio recording controller


597
00:32:20,716 --> 00:32:23,596
with output URL and
specify the URL.


598
00:32:24,116 --> 00:32:27,476
Now, you know this URL will
point to the shared container.


599
00:32:27,476 --> 00:32:30,686
And then you decide a preset.


600
00:32:30,686 --> 00:32:33,216
I will talk about
preset in a few seconds.


601
00:32:33,216 --> 00:32:36,956
And then you can specify
the maximum duration


602
00:32:36,956 --> 00:32:37,866
for this recording.


603
00:32:38,406 --> 00:32:41,216
It's really useful if you
want to control the file size.


604
00:32:42,496 --> 00:32:44,486
Right now, I set
it to 60 seconds.


605
00:32:45,826 --> 00:32:50,246
And you can also customize
the action title which shows


606
00:32:50,246 --> 00:32:52,466
up on the upper right-hand
corner of the UI.


607
00:32:53,546 --> 00:32:55,886
Suppose your app
provides a feature


608
00:32:55,886 --> 00:33:01,016
to send this recording output
to another person, customize it


609
00:33:01,016 --> 00:33:03,276
to say 'send' would
be appropriate.


610
00:33:03,906 --> 00:33:05,756
Otherwise, the default
will say 'done.'


611
00:33:06,396 --> 00:33:08,466
You can also specify
completion handler.


612
00:33:08,466 --> 00:33:10,716
It will tell you if
the content gets saved


613
00:33:11,046 --> 00:33:12,156
and if there is any error.


614
00:33:12,966 --> 00:33:14,226
Let's go back to the URL.


615
00:33:14,986 --> 00:33:18,026
The URL has the file
name, and the extension


616
00:33:18,026 --> 00:33:21,016
of the file name actually
determines what codec we are


617
00:33:21,016 --> 00:33:23,206
going to use for
generating the output.


618
00:33:24,486 --> 00:33:29,436
These are the file types
we supported, MP4 and 4A.


619
00:33:29,606 --> 00:33:35,106
They will use AAC codec and
wave will use PCM codec.


620
00:33:35,786 --> 00:33:39,486
We support three
different presets.


621
00:33:39,486 --> 00:33:44,366
Each of them has different
sample rate and based


622
00:33:44,366 --> 00:33:46,086
on the codec you choose,


623
00:33:46,386 --> 00:33:47,906
the output bit rate
will be different.


624
00:33:48,976 --> 00:33:53,306
As you expect, the higher
the quality the output,


625
00:33:53,586 --> 00:33:55,876
the output file will be larger.


626
00:33:57,666 --> 00:34:00,356
So it depends on your use case.


627
00:34:00,596 --> 00:34:03,496
So if you are recording
for a voice memo case,


628
00:34:03,996 --> 00:34:07,056
the narrow band speech
preset will be ideal for you.


629
00:34:07,846 --> 00:34:10,896
If you are trying to record
something with higher quality,


630
00:34:10,896 --> 00:34:14,876
maybe for post processing
purpose, then you might want


631
00:34:14,876 --> 00:34:17,025
to consider high
quality audio preset.


632
00:34:17,686 --> 00:34:19,076
With these presets,


633
00:34:19,335 --> 00:34:22,246
audio recording becomes really
straight forward and easy


634
00:34:22,246 --> 00:34:23,735
to customize for your feature.


635
00:34:24,206 --> 00:34:27,936
Next I would like to
talk about security.


636
00:34:27,936 --> 00:34:32,406
In watchOS 2 you can
now use key chains


637
00:34:32,406 --> 00:34:36,416
to store your user's
sensitive data.


638
00:34:37,696 --> 00:34:40,456
You can make those
data only accessible


639
00:34:40,505 --> 00:34:42,666
when the device is unlocked.


640
00:34:43,576 --> 00:34:48,266
Apple Watch is unlocked when
user enters the correct password


641
00:34:49,045 --> 00:34:53,116
on the Apple Watch when the
device is on the user's wrist.


642
00:34:53,876 --> 00:34:58,866
And then the data always
becomes available to you


643
00:34:59,156 --> 00:35:03,606
until the user takes the
watch off their wrist.


644
00:35:04,736 --> 00:35:08,586
This is really useful if you
are creating a complication


645
00:35:08,906 --> 00:35:10,266
for the watch face.


646
00:35:11,216 --> 00:35:14,516
And in the complication you
might be showing some user data


647
00:35:15,716 --> 00:35:17,216
which is sensitive.


648
00:35:18,446 --> 00:35:20,436
And so this is really important


649
00:35:20,436 --> 00:35:22,776
to protect those
data with key chains.


650
00:35:23,716 --> 00:35:25,836
And one thing I want
you to bear in mind is


651
00:35:25,876 --> 00:35:28,396
that the key chains you create


652
00:35:28,396 --> 00:35:32,216
on Apple Watch do not
participate in key chain sync.


653
00:35:32,966 --> 00:35:38,816
They are not icon key chains
even though the usage is exactly


654
00:35:38,816 --> 00:35:41,136
the same as other platform.


655
00:35:41,796 --> 00:35:45,046
This is an example of
creating a key chain


656
00:35:45,046 --> 00:35:47,006
to store user credentials.


657
00:35:47,466 --> 00:35:51,066
Suppose you have a secret
password and you want


658
00:35:51,066 --> 00:35:55,236
to store it, make
it only accessible


659
00:35:55,336 --> 00:35:59,406
when the device is unlocked,
you can do something like this.


660
00:35:59,666 --> 00:36:04,536
And call item add to
add these tributes.


661
00:36:05,556 --> 00:36:10,196
So you would create a key chain.


662
00:36:10,256 --> 00:36:14,746
To summarize our talk
today, at the beginning,


663
00:36:14,746 --> 00:36:18,986
you heard Nathan introduce you
to a few new styles of pickers.


664
00:36:20,446 --> 00:36:22,766
Each of them can be controlled


665
00:36:22,766 --> 00:36:25,606
by a Digital Crown
that's really fun to use.


666
00:36:26,306 --> 00:36:30,386
Then you heard me talk
about media player for audio


667
00:36:30,386 --> 00:36:35,196
and video, and you can
also play long form audio


668
00:36:35,196 --> 00:36:35,936
in the background.


669
00:36:36,846 --> 00:36:39,406
For audio recording,
now you can do this


670
00:36:39,406 --> 00:36:41,156
in just a couple
of lines of code.


671
00:36:42,446 --> 00:36:46,436
And finally, in watchOS
2 you can use keychain


672
00:36:46,436 --> 00:36:47,846
to protect your user data.


673
00:36:48,446 --> 00:36:52,876
If you need more information,
take a look at this slide.


674
00:36:53,566 --> 00:36:56,996
There is documentation in
sample code that you want


675
00:36:56,996 --> 00:37:02,716
to reference to, and there are a
few related sessions throughout


676
00:37:02,716 --> 00:37:06,396
this week you can attend
in person or take a look


677
00:37:06,396 --> 00:37:08,336
at the video recording.


678
00:37:08,656 --> 00:37:09,806
Thank you for listening!


679
00:37:10,516 --> 00:37:14,500
[Applause]

