1
00:00:07,516 --> 00:00:18,500
[ Music ]


2
00:00:28,516 --> 00:00:32,546
[ Applause ]


3
00:00:33,046 --> 00:00:34,616
>> Hello everyone and welcome


4
00:00:34,616 --> 00:00:36,656
to Engineering Privacy
for your Users.


5
00:00:37,376 --> 00:00:39,276
I am Julien from
Privacy Engineering


6
00:00:39,276 --> 00:00:41,276
and I'm super excited
to be here today.


7
00:00:42,616 --> 00:00:45,936
Do you ever wonder how
to learn from your users


8
00:00:46,116 --> 00:00:47,346
without creeping them out?


9
00:00:48,886 --> 00:00:52,156
Do you ever argue with your
team over which controls


10
00:00:52,156 --> 00:00:55,826
and transparency to others
in order to gain user trust?


11
00:00:56,496 --> 00:00:59,346
Well to answer these questions
today we're going to go


12
00:00:59,346 --> 00:01:01,256
through privacy technologies
that we adopt


13
00:01:01,676 --> 00:01:03,306
and how you can adopt them too.


14
00:01:03,576 --> 00:01:08,606
As many of you know we at Apple
care deeply about privacy.


15
00:01:09,346 --> 00:01:11,776
Just last year Tim Cook quote.


16
00:01:12,606 --> 00:01:16,866
"People have entrusted us with
their most personal information.


17
00:01:17,416 --> 00:01:19,896
We owe them nothing less
than the best protections


18
00:01:19,896 --> 00:01:21,356
that we can possibly provide."


19
00:01:21,676 --> 00:01:25,236
I mean it's not just Tim, all
of us at Apple from the top


20
00:01:25,236 --> 00:01:29,166
down believe that privacy is
important to gain user trust.


21
00:01:29,566 --> 00:01:32,156
In order to build
a healthy ecosystem


22
00:01:32,156 --> 00:01:33,466
that protects your data.


23
00:01:34,966 --> 00:01:38,656
So privacy engineering, we're a
team that works with many teams


24
00:01:38,656 --> 00:01:42,566
across Apple in order to build
privacy into our products.


25
00:01:43,176 --> 00:01:47,576
And year after year we
learn that best products


26
00:01:47,576 --> 00:01:51,876
and services are those
that respect user privacy


27
00:01:52,046 --> 00:01:54,686
without compromising
the user experience.


28
00:01:55,166 --> 00:02:00,206
They are great services
that have amazing features,


29
00:02:00,396 --> 00:02:02,396
and also respect user privacy.


30
00:02:03,006 --> 00:02:05,336
They encourage users
to engage with your app


31
00:02:05,546 --> 00:02:08,836
by offering transparency,
control, consent,


32
00:02:09,205 --> 00:02:12,426
but also securing the
data, minimizing the data


33
00:02:12,426 --> 00:02:15,586
that you collect and limiting
the use of the data you collect.


34
00:02:16,716 --> 00:02:20,146
As more and more
sensitive information is put


35
00:02:20,146 --> 00:02:22,066
on our devices, we believe


36
00:02:22,066 --> 00:02:25,926
that privacy is becoming
a more valuable commodity


37
00:02:26,536 --> 00:02:27,876
and it's worth your investment.


38
00:02:29,196 --> 00:02:31,756
But privacy is also more
than just a set of rules


39
00:02:31,756 --> 00:02:33,906
as they said here,
it's an opportunity


40
00:02:33,906 --> 00:02:35,546
to do smarter engineering.


41
00:02:35,686 --> 00:02:37,686
To consider other
types of designs


42
00:02:37,686 --> 00:02:39,306
for the benefits of our users.


43
00:02:39,976 --> 00:02:43,386
For example, it encourages
you to do more on the device,


44
00:02:43,386 --> 00:02:45,956
to bring the intelligence
down to the device


45
00:02:46,166 --> 00:02:50,266
for faster user experience and
less stress on the network.


46
00:02:50,466 --> 00:02:54,456
So it encourages you to only
collect the data that you need


47
00:02:54,806 --> 00:02:56,526
in order to improve
your services.


48
00:02:57,446 --> 00:03:00,446
So today we're going to
talk about identifiers,


49
00:03:00,996 --> 00:03:03,926
how to collect data tied
to those identifiers,


50
00:03:04,376 --> 00:03:07,076
which kind of controls
and transparency to offer


51
00:03:07,076 --> 00:03:10,536
to your users, as well as
meaningful choices and how


52
00:03:10,536 --> 00:03:12,966
to build privacy into your app.


53
00:03:13,626 --> 00:03:15,546
Let's start with identifiers.


54
00:03:17,466 --> 00:03:21,516
Many of you every day rely on
identifiers in order to get


55
00:03:21,516 --> 00:03:24,496
to know your users and analyze
their behavior over time.


56
00:03:24,496 --> 00:03:28,636
And this is great, after
all great stories start


57
00:03:28,636 --> 00:03:30,316
with good identifiers.


58
00:03:30,796 --> 00:03:37,346
But, if you track everything
that your users do all the time,


59
00:03:37,696 --> 00:03:40,986
it creates an uncomfortable
atmosphere for your users,


60
00:03:41,266 --> 00:03:44,806
sort of a chilling effect
where people start to wonder,


61
00:03:45,306 --> 00:03:47,856
if I tap on this link
is that link going


62
00:03:47,856 --> 00:03:49,196
to be tracked back to me?


63
00:03:49,956 --> 00:03:53,586
And as soon as your users
hesitate you start to lose them.


64
00:03:55,096 --> 00:03:56,866
Identifiers are very
helpful in order


65
00:03:56,866 --> 00:03:59,696
to build customized
services are essential to get


66
00:03:59,696 --> 00:04:03,176
to know your users and offer
them useful predictions.


67
00:04:03,506 --> 00:04:06,846
But if you use them for too long
to track everything you start


68
00:04:06,846 --> 00:04:10,736
to build creepy suggestions that
may put your users at unease.


69
00:04:11,976 --> 00:04:15,856
Identifiers are also super
helpful in order to fight fraud


70
00:04:16,065 --> 00:04:18,476
and to prevent and
detect malicious use


71
00:04:18,476 --> 00:04:19,716
as early as possible.


72
00:04:20,116 --> 00:04:23,816
But they do not justify
collecting data indiscriminately


73
00:04:23,816 --> 00:04:24,956
from all your users.


74
00:04:25,266 --> 00:04:26,446
So what can you do?


75
00:04:27,716 --> 00:04:30,716
Well there are a number of best
practices that we recommend.


76
00:04:31,006 --> 00:04:33,696
First of all, favor
short-lived identifiers.


77
00:04:33,986 --> 00:04:36,486
You don't systematically
need to make use


78
00:04:36,486 --> 00:04:38,926
of persistent identifiers
that never change.


79
00:04:38,926 --> 00:04:41,626
So you can make them change
automatically over time,


80
00:04:41,776 --> 00:04:43,816
or make it very easy
to reset them.


81
00:04:44,896 --> 00:04:47,786
Stick to random identifiers
instead of always


82
00:04:47,786 --> 00:04:50,106
and systematically using
somebody's username,


83
00:04:50,106 --> 00:04:51,606
email address, or phone number.


84
00:04:51,866 --> 00:04:53,356
Most of the time
you don't need that.


85
00:04:53,736 --> 00:04:57,186
And ask yourself do I really
need to authenticate my users,


86
00:04:57,246 --> 00:04:59,436
or is it enough to have
an anonymous session,


87
00:04:59,696 --> 00:05:01,936
an anonymous experience
with my users.


88
00:05:02,316 --> 00:05:04,846
By following some of these
best practices you're going


89
00:05:04,846 --> 00:05:07,766
to make it very easy for your
users to engage with your app


90
00:05:07,766 --> 00:05:09,776
without having to worry
about their privacy.


91
00:05:09,776 --> 00:05:11,956
So let's have a look
at some examples.


92
00:05:13,126 --> 00:05:16,126
In our own products we seek to
adopt these very techniques.


93
00:05:16,356 --> 00:05:19,646
So for example in Spotlight
and Maps we have identifiers


94
00:05:19,646 --> 00:05:21,896
that change periodically
automatically


95
00:05:22,246 --> 00:05:25,296
so users can engage with
these products without having


96
00:05:25,296 --> 00:05:27,086
to worry about their privacy.


97
00:05:27,436 --> 00:05:30,176
We customize the experience
of both for those products


98
00:05:30,396 --> 00:05:33,086
within those session where
identifiers are the same.


99
00:05:34,616 --> 00:05:38,866
We also seek to make it easy to
reset identifiers at any time.


100
00:05:39,226 --> 00:05:43,256
So for example, in Siri, it's as
simple as toggling off Siri off


101
00:05:43,256 --> 00:05:46,206
and on and you get a new
identifier it can start


102
00:05:46,206 --> 00:05:47,896
over again, you're in control.


103
00:05:48,756 --> 00:05:53,826
We also generally seek to
identify sessions and not users,


104
00:05:53,996 --> 00:05:55,996
because most of the time
that's all that we need


105
00:05:55,996 --> 00:05:57,226
to provide our services.


106
00:05:57,996 --> 00:06:00,996
We also want to make it easy
for you to have this kind


107
00:06:01,416 --> 00:06:03,636
of techniques and
adopt these techniques.


108
00:06:03,636 --> 00:06:06,626
So we have a number of APIs
that allow you to generate,


109
00:06:06,946 --> 00:06:09,066
very easily generate
identifiers.


110
00:06:09,296 --> 00:06:12,906
So for example, the universally
unique identifier's API is just


111
00:06:13,436 --> 00:06:16,086
a simple line of code
in Swift, and allows you


112
00:06:16,086 --> 00:06:18,286
to create an identifier
whenever you call it.


113
00:06:18,986 --> 00:06:22,556
So a quick example, if you call,


114
00:06:22,556 --> 00:06:25,916
whenever you call this
API you get a new 128-bits


115
00:06:25,916 --> 00:06:26,626
random numbers.


116
00:06:27,086 --> 00:06:28,706
It's such a large
number that this is going


117
00:06:28,706 --> 00:06:31,986
to be a globally unique random
number whenever you call it.


118
00:06:31,986 --> 00:06:34,196
So if you call it again,
you get another number,


119
00:06:34,446 --> 00:06:35,706
call it again etcetera.


120
00:06:36,126 --> 00:06:38,976
So then it's up to you
to decide what to do


121
00:06:39,186 --> 00:06:40,846
with this random number.


122
00:06:40,846 --> 00:06:44,616
You can use it to identify
objects, sessions, or users.


123
00:06:45,476 --> 00:06:48,016
But what if you're looking
for something more stable,


124
00:06:48,016 --> 00:06:49,766
you're not looking to
generate an identifier,


125
00:06:50,116 --> 00:06:51,306
but you want to access one.


126
00:06:51,506 --> 00:06:53,456
Well the vender IDs
here for that.


127
00:06:53,906 --> 00:06:55,806
The problem it solves for you is


128
00:06:55,806 --> 00:06:59,456
that it can just access this
API, it provides an identifier


129
00:06:59,456 --> 00:07:03,046
for a device, it's very easy
then to customize your services,


130
00:07:03,046 --> 00:07:05,486
you don't even have to
create an identifier.


131
00:07:05,486 --> 00:07:08,896
And the way it works is
whenever you call this API


132
00:07:08,896 --> 00:07:12,026
for a certain app,
for a certain vendor,


133
00:07:12,276 --> 00:07:14,186
you will get the same
string returned back


134
00:07:14,186 --> 00:07:15,376
to you, the same UUID.


135
00:07:15,696 --> 00:07:18,036
So if you have the two
apps on the App Store,


136
00:07:18,366 --> 00:07:22,366
made by the same vendor,
they can access the same UUID


137
00:07:22,476 --> 00:07:24,046
and this just makes
it easier for you


138
00:07:24,046 --> 00:07:26,936
to customize your
services across your apps.


139
00:07:27,366 --> 00:07:29,956
Now, an app from a different
vendor will get a different


140
00:07:29,956 --> 00:07:31,046
UUID altogether.


141
00:07:32,016 --> 00:07:33,926
Note that users have
control over these


142
00:07:34,166 --> 00:07:36,856
by uninstalling your apps.


143
00:07:37,816 --> 00:07:39,496
Another stable identifier
persisted


144
00:07:39,496 --> 00:07:41,826
by the operating system
is the advertising ID.


145
00:07:42,346 --> 00:07:45,286
This one is to be used for
advertising purposes only


146
00:07:45,766 --> 00:07:48,966
and the way it works is
whenever an app calls this API,


147
00:07:49,066 --> 00:07:51,556
it will be able to
identify and get a UUID


148
00:07:51,556 --> 00:07:52,786
for the current device.


149
00:07:53,096 --> 00:07:56,406
And so this number will
be constant over time,


150
00:07:56,636 --> 00:08:00,466
unless the user decides to reset
it, or turn it off altogether.


151
00:08:01,096 --> 00:08:04,146
So in summary there are a
number of APIs that we provide


152
00:08:04,146 --> 00:08:06,416
and each have a different
code it's about either


153
00:08:06,416 --> 00:08:07,886
about generating an identifier


154
00:08:08,156 --> 00:08:10,896
or accessing identifier
persisted by the system.


155
00:08:11,376 --> 00:08:14,016
In addition to identifiers
for the system,


156
00:08:14,016 --> 00:08:15,196
there are network identifiers.


157
00:08:15,326 --> 00:08:18,076
So whenever you scan in
order to try to connect


158
00:08:18,216 --> 00:08:22,166
to a Wi-Fi network, you reveal
you MAC Address for everyone


159
00:08:22,166 --> 00:08:25,246
to see and that can be a
location privacy issue.


160
00:08:25,826 --> 00:08:29,566
So in iOS 8 we changed
the behavior of scanning


161
00:08:29,816 --> 00:08:33,126
so that we start using locally
administered MAC Addresses


162
00:08:33,126 --> 00:08:36,015
that change over time
automatically, which is great


163
00:08:36,466 --> 00:08:38,606
for your privacy, you
don't have to do anything,


164
00:08:38,976 --> 00:08:41,655
because we make it much harder
for people to track you.


165
00:08:41,655 --> 00:08:45,116
And we're very glad and proud
to adopt this technique not only


166
00:08:45,116 --> 00:08:47,216
on iOS, but on macOS as well.


167
00:08:47,216 --> 00:08:50,916
So if you're a Wi-Fi lender
and you have some equipment,


168
00:08:51,296 --> 00:08:54,106
we encourage you to not
only test your equipment


169
00:08:54,106 --> 00:08:56,576
with iOS seeds, but
also macOS seeds.


170
00:08:57,896 --> 00:09:02,096
You must have heard of messages
and support for app extensions.


171
00:09:02,276 --> 00:09:05,106
This is a super cool feature
and it is privacy friendly.


172
00:09:05,406 --> 00:09:09,306
So app extensions will not be
able to access your context,


173
00:09:09,496 --> 00:09:12,056
what they will see is
a random UUID instead.


174
00:09:12,336 --> 00:09:14,676
And that UUID will be different


175
00:09:14,726 --> 00:09:18,216
for each app extension
and in each chat.


176
00:09:18,866 --> 00:09:20,346
So it's super privacy friendly.


177
00:09:21,046 --> 00:09:24,096
Now, even if you're
not trying to access


178
00:09:24,096 --> 00:09:28,196
or generate identifiers, you
may just be collecting some data


179
00:09:28,196 --> 00:09:29,546
that looks innocuous.


180
00:09:29,736 --> 00:09:33,196
But the problem there is that
by putting this data together,


181
00:09:33,436 --> 00:09:35,966
you might actually end
up with a persistent


182
00:09:35,966 --> 00:09:39,686
and stable device fingerprint
or an implicit identifier.


183
00:09:40,046 --> 00:09:42,646
And that can be a problem
in case of data breech.


184
00:09:42,846 --> 00:09:44,696
Where you thought your
data was anonymous


185
00:09:44,696 --> 00:09:46,656
and then some researchers
out there showed


186
00:09:46,656 --> 00:09:49,456
that actually it was very easy
to identify users in there.


187
00:09:49,946 --> 00:09:52,496
So you don't want to be in that
situation so you should seek


188
00:09:52,496 --> 00:09:54,136
to minimize the data
you collect.


189
00:09:54,716 --> 00:09:56,426
And we also try to
help you there.


190
00:09:56,786 --> 00:10:00,506
We seek to build a strong and
secure Sandbox that protects you


191
00:10:00,506 --> 00:10:03,126
and your app from
malicious third parties


192
00:10:03,426 --> 00:10:08,036
and also protects you from
unintended user fingerprinting.


193
00:10:08,966 --> 00:10:11,186
So what we do there is we
provide you with strong


194
00:10:11,186 --> 00:10:13,106
and amazing APIs
to build features,


195
00:10:13,416 --> 00:10:17,276
but we provide a protection
and we limit the set of APIs


196
00:10:17,276 --> 00:10:18,966
that could be used
for fingerprinting.


197
00:10:19,536 --> 00:10:22,746
So for example, this year
we duplicated some APIs


198
00:10:22,746 --> 00:10:24,526
that could be used
for fingerprinting


199
00:10:24,746 --> 00:10:27,586
and we also whitelisted some
properties that are helpful


200
00:10:27,586 --> 00:10:29,826
for you and blacklisted
other properties


201
00:10:30,076 --> 00:10:31,646
that could be used
for finger printing.


202
00:10:32,796 --> 00:10:35,226
So in summary what does
this all mean to you?


203
00:10:36,556 --> 00:10:38,946
Identifiers are great,
but we recommend


204
00:10:38,946 --> 00:10:41,846
that you favor short-lived
ones whenever possible


205
00:10:42,176 --> 00:10:46,026
and that you also stick to OS
provided APIs in order to access


206
00:10:46,056 --> 00:10:47,366
or generate identifiers.


207
00:10:47,916 --> 00:10:50,716
We think that the users will
find it easier to engage


208
00:10:50,716 --> 00:10:53,856
with your app and to
contribute their data.


209
00:10:54,376 --> 00:10:57,196
So talking about data, let's
look at data collection.


210
00:10:57,586 --> 00:11:02,426
Many of you every day
collect data from new users.


211
00:11:02,706 --> 00:11:05,246
And this is very helpful to
do a data-driven approach


212
00:11:05,246 --> 00:11:06,386
to product development.


213
00:11:06,766 --> 00:11:07,696
And this is super cool.


214
00:11:08,496 --> 00:11:12,386
Now one day, you may end up in a
weird situation where you learn


215
00:11:12,386 --> 00:11:14,806
so much about your
users that you know more


216
00:11:14,806 --> 00:11:16,606
about them then they
know about themselves.


217
00:11:17,436 --> 00:11:18,086
And that's weird.


218
00:11:20,366 --> 00:11:25,206
So ask yourselves how would you
feel if they knew all the data


219
00:11:25,206 --> 00:11:26,376
that you had about them?


220
00:11:26,376 --> 00:11:27,856
Would you feel embarrassed?


221
00:11:29,076 --> 00:11:31,766
What if you had to collect
this data from your dad,


222
00:11:31,766 --> 00:11:33,186
or your mom, or your siblings?


223
00:11:34,636 --> 00:11:36,766
Data is as much a
benefit as a risk.


224
00:11:36,966 --> 00:11:38,286
And you need to balance
these two.


225
00:11:38,836 --> 00:11:39,666
So what can you do?


226
00:11:40,416 --> 00:11:46,226
We recommend you put in
place privacy friendly data


227
00:11:46,226 --> 00:11:47,396
collection practices.


228
00:11:48,126 --> 00:11:52,346
And in particular, instead of
collecting speculative data,


229
00:11:52,346 --> 00:11:55,526
just grabbing everything you can
because maybe you have some use


230
00:11:55,526 --> 00:11:59,356
in the future, try to stick
to key performance indicators


231
00:11:59,616 --> 00:12:01,476
and collect data for those.


232
00:12:01,886 --> 00:12:05,086
Here is a number of techniques
that you can adopt to do so.


233
00:12:05,336 --> 00:12:07,746
Bucketing, sampling
and aggregation.


234
00:12:08,276 --> 00:12:09,976
Let's look at bucketing.


235
00:12:10,796 --> 00:12:14,716
The idea of bucketing is to
only collect the level of detail


236
00:12:14,716 --> 00:12:16,956
that is sufficient
for your needs.


237
00:12:18,646 --> 00:12:20,336
So, let's say you
wanted to know,


238
00:12:20,336 --> 00:12:24,536
how often are your users
opening your in-app settings?


239
00:12:24,906 --> 00:12:27,496
So we ask this question
for a particular user.


240
00:12:27,496 --> 00:12:30,606
So it's quite simple, you
just implement a counter


241
00:12:30,756 --> 00:12:32,656
and you look and you measure.


242
00:12:32,886 --> 00:12:37,086
So let's say for this user,
test user, you went 86 times


243
00:12:37,086 --> 00:12:38,496
on a given day to
your app settings.


244
00:12:38,496 --> 00:12:41,916
So this information is helpful
right because it tells you


245
00:12:41,916 --> 00:12:44,286
that maybe something is wrong
with your configuration.


246
00:12:44,616 --> 00:12:46,726
Maybe you want to make
something more discoverable.


247
00:12:47,626 --> 00:12:49,656
But do you really
need to collect this


248
00:12:49,656 --> 00:12:51,236
with this level of precision?


249
00:12:51,706 --> 00:12:55,536
Would it be sufficient to only
collect that somebody went


250
00:12:55,536 --> 00:12:57,806
to your in-app settings
more than 50 times?


251
00:12:58,036 --> 00:12:59,976
That would also give
you the same information


252
00:12:59,976 --> 00:13:01,726
that maybe there's
something to improve


253
00:13:01,936 --> 00:13:04,086
and to further refine
within your app.


254
00:13:05,726 --> 00:13:07,876
But what if you're
interested to learn,


255
00:13:07,876 --> 00:13:11,706
not just about a specific user,
but about a trend of users.


256
00:13:12,636 --> 00:13:13,696
Well, you can just collect


257
00:13:13,696 --> 00:13:15,476
and ask the same
question to all users.


258
00:13:15,946 --> 00:13:19,476
And so you will say how often
do my users open in-app settings


259
00:13:19,476 --> 00:13:20,166
on a given day?


260
00:13:20,166 --> 00:13:23,206
Well it turns out like
if you're interested


261
00:13:23,206 --> 00:13:25,516
to collect the average
you really don't need


262
00:13:25,516 --> 00:13:28,446
to collect this data from
all of your users in order


263
00:13:28,446 --> 00:13:31,626
to get good statistically
significant estimates


264
00:13:31,626 --> 00:13:32,456
of the average.


265
00:13:32,796 --> 00:13:37,726
It turns out if you only collect
data from 0.1% of your users,


266
00:13:38,166 --> 00:13:40,626
you get a good estimate
of an average.


267
00:13:40,976 --> 00:13:43,816
In fact, if you collect
from 10% of your users only,


268
00:13:44,086 --> 00:13:47,066
your estimate is as
close as 0.1 precision.


269
00:13:47,836 --> 00:13:50,966
So you really don't need to
systematically collect data


270
00:13:50,966 --> 00:13:53,316
from all of your users
depending on what kind


271
00:13:53,316 --> 00:13:55,546
of performance indicator
you're looking to collect.


272
00:13:57,636 --> 00:13:59,236
But what if you're looking


273
00:13:59,236 --> 00:14:01,796
to collect some data
that's very sensitive?


274
00:14:02,216 --> 00:14:04,956
Something that you really
shouldn't be collecting


275
00:14:04,956 --> 00:14:05,916
in the first place.


276
00:14:06,826 --> 00:14:09,656
But you're interested to learn
about it, what could you do?


277
00:14:10,846 --> 00:14:14,256
Well, what if there was a
technology that allowed you


278
00:14:14,256 --> 00:14:18,806
to learn from the crowd while
protecting individual data.


279
00:14:19,876 --> 00:14:22,286
Well there is such a technology


280
00:14:22,286 --> 00:14:24,026
and it's called differential
privacy.


281
00:14:24,786 --> 00:14:27,916
So, differential privacy
is one of the safest ways


282
00:14:27,916 --> 00:14:29,606
for users to donate their data.


283
00:14:30,906 --> 00:14:34,066
It is one way to learn
from the crowd while


284
00:14:34,066 --> 00:14:35,486
protecting individuals.


285
00:14:36,166 --> 00:14:37,586
It provides strong


286
00:14:37,586 --> 00:14:40,366
and mathematical
guarantees of privacy.


287
00:14:41,026 --> 00:14:44,316
And this year we are
adopting it in iOS and macOS.


288
00:14:45,116 --> 00:14:48,046
So, before I get
started here two things.


289
00:14:48,046 --> 00:14:51,156
First, we believe that
this is yet another tool


290
00:14:51,156 --> 00:14:54,096
in our privacy toolbox.


291
00:14:54,326 --> 00:14:56,646
We have a number of tools
that we use for privacy


292
00:14:56,796 --> 00:14:59,286
and this is a very exciting
one and promising one.


293
00:14:59,786 --> 00:15:02,416
Second, this is going
to be a quick intro


294
00:15:02,416 --> 00:15:05,406
into a fascinating
technology and I'll do my best


295
00:15:05,406 --> 00:15:08,506
to inspire you and get
you excited about it.


296
00:15:08,896 --> 00:15:09,716
So let's get started.


297
00:15:10,986 --> 00:15:13,706
I said it gives you strong
mathematical guarantees.


298
00:15:14,036 --> 00:15:15,776
So let's start with
some theorems.


299
00:15:17,366 --> 00:15:20,906
No, I think we can try to do it
and get the idea another way.


300
00:15:21,386 --> 00:15:24,116
So the idea is there's some
data, something sensitive,


301
00:15:24,606 --> 00:15:28,036
and you add noise to it and
you get some privatized data.


302
00:15:28,516 --> 00:15:31,086
And then you can aggregate
that privatized data


303
00:15:31,466 --> 00:15:32,566
to extract some signal.


304
00:15:33,566 --> 00:15:36,266
So let's say an example, how
many hours did I work last week


305
00:15:36,516 --> 00:15:37,496
to prepare these slides.


306
00:15:37,496 --> 00:15:41,026
So it was a busy week, so
let's say I worked 128 hours.


307
00:15:41,316 --> 00:15:45,226
So, I can add noise to that and
then what that means really is


308
00:15:45,226 --> 00:15:47,396
that I change this number to
something that looks different.


309
00:15:47,396 --> 00:15:50,916
So let's look a little bit more
about what I mean by noise here.


310
00:15:51,626 --> 00:15:55,046
So, disclaimer this is
a simplified description


311
00:15:55,046 --> 00:15:57,626
but that's going to give you
the gist of how it works.


312
00:15:58,346 --> 00:16:02,696
So I have this number 128, and
we'll compute a projection,


313
00:16:02,696 --> 00:16:04,576
it's sort of a hash
that I compute.


314
00:16:04,576 --> 00:16:08,336
So what I do is a print a
very long vector full of zeros


315
00:16:08,606 --> 00:16:11,916
and I only write one
1 at position 128.


316
00:16:11,916 --> 00:16:15,466
So it's a huge vector full
of zeros, there's only one 1.


317
00:16:17,076 --> 00:16:20,186
Then by noise, what I mean
is I'm going to flip some


318
00:16:20,186 --> 00:16:21,906
of these zeros and
some of these ones.


319
00:16:22,196 --> 00:16:24,236
So some zeros are
going to become ones.


320
00:16:24,336 --> 00:16:26,336
And some ones are
going to become zeros.


321
00:16:26,846 --> 00:16:32,036
The trick here is that zeros
have slightly more probability


322
00:16:32,036 --> 00:16:34,356
to remain zeros than
to become ones.


323
00:16:34,736 --> 00:16:37,826
And ones have slightly
more probability


324
00:16:37,826 --> 00:16:39,826
to remain ones than
to become zeros.


325
00:16:40,176 --> 00:16:44,306
So this is one way to
obscure your data prior


326
00:16:44,306 --> 00:16:45,826
to sharing it with Apple.


327
00:16:46,646 --> 00:16:49,726
It's another thing that's an
interesting observation here,


328
00:16:49,726 --> 00:16:52,366
is that if I were to
obscure your data twice,


329
00:16:52,566 --> 00:16:53,926
even if it's the same number,


330
00:16:54,316 --> 00:16:56,396
each time it will give
me a different result.


331
00:16:57,256 --> 00:17:00,596
And unlike a typical hash
function, I cannot try


332
00:17:00,596 --> 00:17:02,866
to do a dictionary
attack to try to figure


333
00:17:02,866 --> 00:17:04,806
out what this value
corresponds to.


334
00:17:05,476 --> 00:17:08,326
So this is all done
locally on your device.


335
00:17:09,076 --> 00:17:13,836
So, this is all done
locally on your device prior


336
00:17:13,836 --> 00:17:15,076
to sharing it with Apple.


337
00:17:15,076 --> 00:17:18,306
So, in this example let's
say I want to know the amount


338
00:17:18,306 --> 00:17:20,496
of hours people worked
at Apple last week,


339
00:17:20,636 --> 00:17:25,616
so I worked 128 hours, Jessie
48 hours and Timmy 130 hours.


340
00:17:26,016 --> 00:17:29,156
So we collect all of this
from all Apple employees


341
00:17:29,156 --> 00:17:31,376
and the noise is added
locally on device.


342
00:17:31,506 --> 00:17:35,406
And what Apple ends up
with is a cloud of binary


343
00:17:35,406 --> 00:17:36,636
and noisy vectors,


344
00:17:36,826 --> 00:17:40,236
where individually these vectors
are pretty much useless to us.


345
00:17:40,346 --> 00:17:44,286
But we're able to combine them
together and average the noise


346
00:17:44,286 --> 00:17:46,966
out and learn some
statistical properties.


347
00:17:47,436 --> 00:17:50,376
For example, here the average
number of hours people worked


348
00:17:50,376 --> 00:17:52,356
at Apple last week was 41 hours.


349
00:17:53,146 --> 00:17:55,696
So the way we do that
is we actually sum


350
00:17:55,696 --> 00:17:58,186
up all these vectors
and then we normalize.


351
00:17:58,386 --> 00:17:59,426
And then we look at column


352
00:17:59,426 --> 00:18:02,766
by column whether there is a
statistically significant value


353
00:18:02,986 --> 00:18:04,186
that is larger than random.


354
00:18:04,846 --> 00:18:06,446
So why is this cool?


355
00:18:06,616 --> 00:18:10,166
So we think it's really
cool because it's one way


356
00:18:10,166 --> 00:18:12,656
to learn popular
items privately.


357
00:18:13,056 --> 00:18:16,246
You can learn averages, the
presence of certain attributes,


358
00:18:16,916 --> 00:18:19,426
or even frequencies
such as histograms.


359
00:18:19,936 --> 00:18:21,416
And this is done in a way


360
00:18:21,416 --> 00:18:24,596
where each individual
contribution is private.


361
00:18:24,596 --> 00:18:25,996
Is kept private from Apple.


362
00:18:26,186 --> 00:18:28,146
We can only learn
from aggregate.


363
00:18:29,356 --> 00:18:34,536
But you might ask yourself what
happens if I'm the only one


364
00:18:34,596 --> 00:18:36,156
that is contributing data here?


365
00:18:37,036 --> 00:18:40,606
At some point maybe a user will
become an aggregate in itself.


366
00:18:41,366 --> 00:18:43,976
Well, to avoid this
issue we used the concept


367
00:18:43,976 --> 00:18:47,636
of privacy budget that restricts
the number of contributions


368
00:18:47,636 --> 00:18:51,396
that can be made by any certain
device during a period of time.


369
00:18:51,906 --> 00:18:55,386
We also don't have any
identifiers at all associated


370
00:18:55,386 --> 00:18:56,316
with this information.


371
00:18:56,496 --> 00:18:59,146
And we permanently delete
the data from our servers.


372
00:18:59,146 --> 00:19:01,066
So let's have a look
at an example.


373
00:19:01,656 --> 00:19:05,086
Say we wanted to learn
popular emoji's across people


374
00:19:05,086 --> 00:19:08,976
that are opting in to
diagnostics and usage data


375
00:19:08,976 --> 00:19:10,496
that we collect from customers.


376
00:19:10,966 --> 00:19:13,686
So when people will start
to use their keyboards


377
00:19:13,686 --> 00:19:16,736
and use emoji's we will
observe that locally on device,


378
00:19:16,936 --> 00:19:19,706
and then Julien here,
Jessie and Timmy


379
00:19:19,956 --> 00:19:22,606
which contributed their
data noised up locally


380
00:19:22,606 --> 00:19:24,466
on device prior to
sending it to Apple.


381
00:19:24,706 --> 00:19:27,736
And what happens is as more and
more people share their data,


382
00:19:27,946 --> 00:19:30,216
we're able to extract
some information such as


383
00:19:30,216 --> 00:19:31,766
which ones are the most popular.


384
00:19:32,006 --> 00:19:35,706
So what's cool here is that one
use case we can then reorder the


385
00:19:35,706 --> 00:19:36,896
UI to reflect that.


386
00:19:36,896 --> 00:19:40,226
And we can come and do
better predictions on device.


387
00:19:40,936 --> 00:19:43,386
And so this year we're
adopting this technology


388
00:19:43,646 --> 00:19:45,356
in four types of use cases.


389
00:19:45,626 --> 00:19:48,106
We're using it for
emoji's, as just discussed,


390
00:19:48,706 --> 00:19:50,746
we're also using
it for new words.


391
00:19:50,746 --> 00:19:52,076
So when we learn
words that are not


392
00:19:52,076 --> 00:19:53,826
in our local dictionary,
such as slang.


393
00:19:54,316 --> 00:19:56,856
We also use it for
Deeplinks where we can see


394
00:19:56,856 --> 00:19:59,336
which Deeplinks are
popular within apps in order


395
00:19:59,336 --> 00:20:04,976
to promote them in Spotlight
and also for Lookup Hints.


396
00:20:05,056 --> 00:20:06,116
So this is super exciting.


397
00:20:06,276 --> 00:20:09,996
And we're looking forward to
collecting this with privacy.


398
00:20:10,736 --> 00:20:13,356
But this is only collected
from people that have opted


399
00:20:13,356 --> 00:20:15,276
in into diagnostic and usage.


400
00:20:15,566 --> 00:20:18,256
So if you are not opted
in that path line,


401
00:20:18,256 --> 00:20:19,986
we're not collecting
that data from you.


402
00:20:20,346 --> 00:20:21,576
So you are in control.


403
00:20:22,596 --> 00:20:24,916
So in summary what does
this all mean for you?


404
00:20:25,506 --> 00:20:29,046
Well we think that differential
privacy is a very promising


405
00:20:29,046 --> 00:20:30,016
technology in order


406
00:20:30,016 --> 00:20:31,886
to do privacy friendly
data collection.


407
00:20:32,466 --> 00:20:35,896
We're very excited to adopt
it this year on iOS and macOS


408
00:20:35,926 --> 00:20:39,666
to do crowd-driven insight
at scale, with privacy.


409
00:20:40,406 --> 00:20:41,716
We don't use any identifiers,


410
00:20:42,116 --> 00:20:43,996
we don't collect any
raw measurements.


411
00:20:45,196 --> 00:20:50,186
This is yet another tool
in our privacy toolbox.


412
00:20:50,286 --> 00:20:53,036
And we hope to use it more and
more in the future in order


413
00:20:53,036 --> 00:20:54,916
to build our future features.


414
00:20:56,286 --> 00:20:58,616
We think that your
users will care


415
00:20:58,886 --> 00:21:01,786
because they will see the length
at which we're willing to go


416
00:21:02,046 --> 00:21:03,876
in order to protect
user privacy.


417
00:21:04,176 --> 00:21:05,956
So we hope this is
going to encourage you


418
00:21:05,956 --> 00:21:08,946
to develop privacy
friendly practices as well.


419
00:21:09,636 --> 00:21:12,646
In order to speak to
transparency and control.


420
00:21:12,646 --> 00:21:15,266
I'd like to invite
Jessie on stage next.


421
00:21:15,506 --> 00:21:15,846
Thank you [applause].


422
00:21:17,106 --> 00:21:17,266
>> Hi.


423
00:21:18,046 --> 00:21:18,446
I'm Jessie.


424
00:21:18,696 --> 00:21:20,426
I'm also on the privacy
engineering team.


425
00:21:20,906 --> 00:21:23,266
I work on privacy on for
products such as Apple Music,


426
00:21:23,636 --> 00:21:25,146
photos, and education.


427
00:21:26,306 --> 00:21:28,786
So Julien went into great
detail to talk to you


428
00:21:28,786 --> 00:21:32,296
about how you can identify your
users and collect necessary data


429
00:21:32,296 --> 00:21:34,386
about them in order to
build great features,


430
00:21:34,496 --> 00:21:36,256
but in a privacy friendly way.


431
00:21:36,526 --> 00:21:39,586
So in addition to that it's
also important to be transparent


432
00:21:39,586 --> 00:21:41,446
to your users about
these identifiers


433
00:21:41,526 --> 00:21:42,656
and the data that you collect.


434
00:21:43,516 --> 00:21:45,416
When you do they have
a better understanding


435
00:21:45,416 --> 00:21:47,106
of their privacy
controls within your app.


436
00:21:48,006 --> 00:21:50,136
And when users have that
better understanding,


437
00:21:50,366 --> 00:21:54,106
you gain their trust and you
encourage their engagement


438
00:21:54,106 --> 00:21:55,496
within your app.


439
00:21:55,886 --> 00:21:58,576
So one way that we're increasing
transparency and control is


440
00:21:58,576 --> 00:22:01,916
with advertising in iOS X.


441
00:22:02,156 --> 00:22:05,696
So now in news and in the
App Store users are able


442
00:22:05,696 --> 00:22:08,526
to see this blue Ad button
on any advertisement.


443
00:22:09,126 --> 00:22:11,406
When they click on it
they see more information


444
00:22:11,406 --> 00:22:12,666
about why they're
seeing this ad.


445
00:22:13,636 --> 00:22:16,216
So when you and other developers
are purchasing advertisements,


446
00:22:16,456 --> 00:22:19,126
you pick specific
targeted groups of users


447
00:22:19,126 --> 00:22:21,186
to target your advertisements
to.


448
00:22:21,346 --> 00:22:23,916
Well now users are able to
scroll through about this ad


449
00:22:24,146 --> 00:22:27,376
to see exactly what,
which groups they fell


450
00:22:27,376 --> 00:22:28,766
into for this advertisement.


451
00:22:29,606 --> 00:22:34,116
In addition, users can also
go to privacy in Settings,


452
00:22:35,956 --> 00:22:40,296
Advertising, View
Ad Information.


453
00:22:40,296 --> 00:22:44,106
And we are being completely
transparent to them.


454
00:22:44,316 --> 00:22:46,656
About all the user data we
have about them to serve


455
00:22:46,656 --> 00:22:49,266
as advertisements in news
and in the App Store.


456
00:22:49,266 --> 00:22:51,376
And this will be
available in a later seed.


457
00:22:52,846 --> 00:22:56,366
So a way that we give users
control in advertising is


458
00:22:56,366 --> 00:22:57,606
through Limit Ad Tracking.


459
00:22:58,976 --> 00:22:59,706
So, as Julien talked


460
00:22:59,706 --> 00:23:02,096
about earlier we have the
advertising identifier


461
00:23:02,476 --> 00:23:04,376
and you can use this
to track users


462
00:23:04,376 --> 00:23:06,666
for advertising purposes
only on our platform.


463
00:23:07,906 --> 00:23:10,846
When users toggle the
Limit Ad Tracking flag on,


464
00:23:11,186 --> 00:23:13,546
this is signaling to us that
they do not want to be tracked


465
00:23:13,546 --> 00:23:14,796
for advertising purposes.


466
00:23:15,526 --> 00:23:17,896
So in iOS x we're taking
this a step further.


467
00:23:18,206 --> 00:23:21,426
So when a user enables Limit
Ad Tracking the advertising


468
00:23:21,426 --> 00:23:24,066
identifier becomes
a UUID of all zeros.


469
00:23:25,076 --> 00:23:27,426
It is now technically
supported in code


470
00:23:27,626 --> 00:23:29,656
that when a user enables
Limit Ad Tracking,


471
00:23:29,836 --> 00:23:32,276
we cannot track them using
the advertising identifier.


472
00:23:33,526 --> 00:23:35,876
Now if a user disables
Limit Ad Tracking,


473
00:23:36,316 --> 00:23:39,396
your app can get access to
a new random identifier.


474
00:23:39,956 --> 00:23:44,886
So you may be wondering, can
you still show advertisements


475
00:23:44,886 --> 00:23:46,546
to users with Limit
Ad Tracking on?


476
00:23:47,126 --> 00:23:47,946
Well of course you can.


477
00:23:48,276 --> 00:23:50,196
You can show contextual
ads within your app.


478
00:23:50,526 --> 00:23:51,746
Things that make
sense in the context.


479
00:23:52,846 --> 00:23:55,616
You just cannot track them
using the advertising identifier


480
00:23:55,616 --> 00:23:57,056
if they have Limit
Ad Tracking enabled.


481
00:23:58,036 --> 00:23:59,796
And remember that it forbidden


482
00:23:59,936 --> 00:24:02,826
to cache the advertising
identifier in your app storage


483
00:24:02,826 --> 00:24:04,676
as this does not give
users proper control


484
00:24:04,676 --> 00:24:06,006
over resetting it.


485
00:24:07,136 --> 00:24:08,626
So, what does this
all mean for you?


486
00:24:08,626 --> 00:24:13,586
Well, there's an increase in
transparency for ad serviced


487
00:24:13,586 --> 00:24:15,766
to users in news
and in the ad store,


488
00:24:16,246 --> 00:24:19,206
and Limit Ad Tracking is now
technically supported in code.


489
00:24:20,636 --> 00:24:23,566
We know that when users are able
to make these types of choices,


490
00:24:23,566 --> 00:24:27,106
like enabling Limit Ad
Tracking this empowers them


491
00:24:27,176 --> 00:24:30,476
to make good privacy decisions
that are right for them.


492
00:24:30,676 --> 00:24:34,236
Another way that we give users
the ability to make these types


493
00:24:34,236 --> 00:24:36,246
of decisions are
through consent alerts.


494
00:24:36,946 --> 00:24:42,586
So in iOS, macOS, tvOS, and
watchOS, users have the ability


495
00:24:42,586 --> 00:24:44,246
to decide which apps get access


496
00:24:44,246 --> 00:24:45,956
to certain protected
classes of data.


497
00:24:46,866 --> 00:24:49,666
Now protected classes of data
are things such as calendar,


498
00:24:50,106 --> 00:24:52,956
contacts, photos, HomeKit.


499
00:24:53,366 --> 00:24:56,856
So the first time that
your app requests access


500
00:24:56,856 --> 00:24:58,856
to this protected class
of data and calls the API,


501
00:24:59,536 --> 00:25:01,136
iOS shows an alert
like this one.


502
00:25:01,676 --> 00:25:03,936
And at this point the user
has the ability to decide


503
00:25:04,256 --> 00:25:06,706
if your app should
get access or not.


504
00:25:07,856 --> 00:25:11,306
When the timing and the context
of the question makes sense,


505
00:25:12,436 --> 00:25:14,366
the user can make the choice
that's right for them.


506
00:25:14,836 --> 00:25:16,106
We call this a just
in time alert.


507
00:25:16,106 --> 00:25:20,536
I want to talk to you
about all the new features


508
00:25:20,536 --> 00:25:23,076
that we have this year, that
also have privacy settings


509
00:25:23,076 --> 00:25:24,566
and consent alerts
along with them.


510
00:25:25,346 --> 00:25:28,276
The first is the media
library privacy setting.


511
00:25:28,876 --> 00:25:33,106
This give access to Apple
Music subscriber status,


512
00:25:33,196 --> 00:25:37,986
subscriber store front,
adding content to a playlist,


513
00:25:39,326 --> 00:25:41,106
and now reading from
the Media Library.


514
00:25:41,676 --> 00:25:45,416
We know that users'
Media Libraries


515
00:25:45,776 --> 00:25:48,246
and Apple Music subscription
information is extremely


516
00:25:48,246 --> 00:25:50,006
personal and can be identifying.


517
00:25:50,416 --> 00:25:52,416
So we want users to have
the ability to decide


518
00:25:52,416 --> 00:25:54,406
which apps get access
and which don't.


519
00:25:54,566 --> 00:25:59,056
Now if your app got access to
the Media Library in iOS 9.3,


520
00:25:59,346 --> 00:26:01,336
you will continue to
have access in iOS X.


521
00:26:02,756 --> 00:26:04,246
So how do you know if
you already have access?


522
00:26:05,766 --> 00:26:07,616
Well with most of
the protected classes


523
00:26:07,616 --> 00:26:10,706
of data we have what's called
an authorization status API.


524
00:26:10,706 --> 00:26:12,826
It has a little bit
of a different name


525
00:26:13,006 --> 00:26:14,236
with each protected
class of data.


526
00:26:14,566 --> 00:26:16,506
But this is the example
for Media Library.


527
00:26:17,036 --> 00:26:21,236
So you can call this API and get
back one of these enum values.


528
00:26:22,606 --> 00:26:24,916
If you see notDetermined
this can happen


529
00:26:24,916 --> 00:26:26,146
from one of two reasons.


530
00:26:26,406 --> 00:26:31,036
Either one, you haven't asked
yet, or two, you've asked


531
00:26:31,036 --> 00:26:32,736
for access to this
protected class of data


532
00:26:33,016 --> 00:26:35,786
but since then the user has
reset their privacy settings.


533
00:26:36,626 --> 00:26:41,256
If you see denied, this means
that the user said don't allow.


534
00:26:41,616 --> 00:26:43,156
They do not want your
app to have access


535
00:26:43,156 --> 00:26:44,516
to a certain protected
class of data.


536
00:26:44,696 --> 00:26:46,686
And at this point you
have a few options.


537
00:26:47,206 --> 00:26:49,716
You can take the user down a
different route in your app


538
00:26:49,716 --> 00:26:51,786
and show them all the
features that they can use


539
00:26:52,236 --> 00:26:55,406
without giving you access to
this protected class of data.


540
00:26:55,406 --> 00:26:59,036
Or, you can open up the
privacy settings for your app.


541
00:26:59,036 --> 00:27:01,966
And at this point the user
could possibly make a different


542
00:27:01,966 --> 00:27:04,316
decision if they so choose.


543
00:27:04,316 --> 00:27:06,596
Now if you see restricted,
this can happen


544
00:27:06,596 --> 00:27:07,746
for one of two reasons.


545
00:27:08,046 --> 00:27:11,366
Either one, there's a parental
restriction set on this device,


546
00:27:11,616 --> 00:27:14,006
saying that your app cannot get
access to this protected class


547
00:27:14,006 --> 00:27:17,536
of data, or two, this
app is supervised,


548
00:27:17,636 --> 00:27:21,586
maybe it's in an education mode,
or an ed enterprise context.


549
00:27:21,586 --> 00:27:23,156
And the device administrator
has said


550
00:27:23,156 --> 00:27:25,606
that your app cannot get access
to this protected class of data.


551
00:27:27,026 --> 00:27:31,316
And of course if you see
authorized you're good to go.


552
00:27:31,566 --> 00:27:33,226
So we have some other
awesome new features


553
00:27:33,226 --> 00:27:34,636
that also have privacy settings.


554
00:27:35,596 --> 00:27:37,196
Another one is speech
recognition.


555
00:27:37,946 --> 00:27:41,426
So this allows your app to
send in audio files to Apple


556
00:27:41,426 --> 00:27:43,216
to be transcribed into text.


557
00:27:43,946 --> 00:27:45,976
Now the reason that we want
users to have the ability


558
00:27:45,976 --> 00:27:48,876
to decide which apps get
access and which don't is


559
00:27:48,876 --> 00:27:50,246
because we want them
to understand


560
00:27:50,246 --> 00:27:53,306
that if they grant your app
access you may be sending audio


561
00:27:53,306 --> 00:27:54,406
files that are theirs


562
00:27:54,406 --> 00:27:56,676
to be transcribed
into text from Apple.


563
00:27:57,886 --> 00:28:02,526
You can request access to this
ahead of time with this API.


564
00:28:02,636 --> 00:28:03,826
We also have SiriKit.


565
00:28:04,696 --> 00:28:05,816
This is really exciting.


566
00:28:06,106 --> 00:28:08,456
Users can now make
requests in Siri


567
00:28:08,706 --> 00:28:11,226
that are completed
with your app.


568
00:28:12,776 --> 00:28:15,246
But in order for Siri
to understand what types


569
00:28:15,246 --> 00:28:18,396
of request a user might make,
your app must first send


570
00:28:18,396 --> 00:28:20,186
up contextual information
to Siri


571
00:28:20,186 --> 00:28:22,756
about the user, and
about your app.


572
00:28:23,276 --> 00:28:25,406
And we want users to have
the ability to decide


573
00:28:25,406 --> 00:28:28,136
which apps send up this
contextual information to Siri


574
00:28:28,136 --> 00:28:29,596
about them and which don't.


575
00:28:30,166 --> 00:28:33,786
So you need to request
access to this ahead of time,


576
00:28:33,786 --> 00:28:35,836
before any Siri requests
can be made.


577
00:28:36,626 --> 00:28:39,236
And you can do this using the
request Siri Authorization API.


578
00:28:40,606 --> 00:28:42,056
You also probably heard


579
00:28:42,056 --> 00:28:44,816
about the TV Provider
single sign on feature.


580
00:28:45,156 --> 00:28:48,406
Now, this allows
enabled television apps


581
00:28:48,746 --> 00:28:51,386
to request access to a user's
subscription information


582
00:28:51,386 --> 00:28:53,216
and sign them into
their app automatically.


583
00:28:54,476 --> 00:28:57,106
Now, because this is
only for enabled apps,


584
00:28:57,226 --> 00:28:59,886
reach out to your WWDR partner
manager if you're interested


585
00:28:59,886 --> 00:29:02,866
in becoming one of these apps.


586
00:29:03,116 --> 00:29:06,696
And everything you loved about
photos on iOS is now on tvOS


587
00:29:06,696 --> 00:29:08,866
as well, and same with HomeKit.


588
00:29:09,446 --> 00:29:14,396
And both of those also have
privacy settings, on tvOS.


589
00:29:14,556 --> 00:29:16,926
So, in addition to these
awesome new features,


590
00:29:17,226 --> 00:29:20,326
we also have some updates to
how your app requests access


591
00:29:20,446 --> 00:29:21,876
to certain protected
classes of data.


592
00:29:22,106 --> 00:29:28,156
So in 2014, we started requiring
all apps that requested access


593
00:29:28,196 --> 00:29:30,516
to location to declare
so ahead of time


594
00:29:30,516 --> 00:29:32,196
and to declare a purpose string.


595
00:29:32,856 --> 00:29:34,656
We find that users
are more likely


596
00:29:34,656 --> 00:29:36,166
to make the choice
that's right for them


597
00:29:36,406 --> 00:29:39,676
when they understand why an
app needs access to location.


598
00:29:40,266 --> 00:29:44,426
So, in iOS X we are
extending this


599
00:29:44,426 --> 00:29:46,256
to all protected
classes of data.


600
00:29:47,546 --> 00:29:50,326
So if your app is accessing
any of these protected classes


601
00:29:50,326 --> 00:29:52,886
of data you will need to
declare so ahead of time


602
00:29:53,126 --> 00:29:55,986
in your app's info
plist along with a clear


603
00:29:55,986 --> 00:29:57,116
and meaningful purpose string.


604
00:29:58,506 --> 00:30:00,576
So take a moment,
look at this list.


605
00:30:01,486 --> 00:30:04,616
Think is my app accessing any of
these protected classes of data?


606
00:30:04,616 --> 00:30:07,286
How many of your apps
are accessing one?


607
00:30:08,136 --> 00:30:09,996
Yeah. How about two or three?


608
00:30:11,196 --> 00:30:14,166
Okay well you're going to need
to declare that ahead of time


609
00:30:14,276 --> 00:30:16,056
in your app's info plist.


610
00:30:16,056 --> 00:30:19,186
And if you're a tvOS developer,
these four protected classes


611
00:30:19,186 --> 00:30:20,966
of data are available for
you to request on tvOS.


612
00:30:20,966 --> 00:30:24,616
And you'll also need to
declare that ahead of time


613
00:30:24,616 --> 00:30:26,776
in your aps info plist.


614
00:30:26,776 --> 00:30:29,016
Now, I'm going to
quickly go through all


615
00:30:29,016 --> 00:30:30,636
of the purpose string
key values,


616
00:30:30,746 --> 00:30:33,996
key names that you'll need to
put in your app's info plist.


617
00:30:33,996 --> 00:30:35,546
Now, you don't need to
write them down right now.


618
00:30:35,546 --> 00:30:36,676
Because they'll be
available for you


619
00:30:36,676 --> 00:30:41,956
in the development
documentation and in Xcode.


620
00:30:42,096 --> 00:30:45,716
So, let's say you have the
next best disco light app.


621
00:30:46,816 --> 00:30:49,616
The first time a user downloads
your app they can scroll


622
00:30:49,616 --> 00:30:52,496
through the various features
and look at what they can do.


623
00:30:52,496 --> 00:30:54,966
And then the first
time that they go


624
00:30:54,966 --> 00:30:57,706
and add their first disco
light, at this point,


625
00:30:57,996 --> 00:31:00,846
when it makes sense, your app
will request access to HomeKit.


626
00:31:01,276 --> 00:31:05,306
When the timing and the context
of the question makes sense,


627
00:31:05,346 --> 00:31:07,206
the user will see the
consent alert show.


628
00:31:07,696 --> 00:31:10,396
And at this point you have
the ability to write a clear


629
00:31:10,396 --> 00:31:12,846
and meaningful purpose string
to go in that consent alert.


630
00:31:13,376 --> 00:31:17,806
I'm going to show you now how
you can easily add your purpose


631
00:31:17,806 --> 00:31:18,916
string using Xcode.


632
00:31:20,546 --> 00:31:24,726
So you go to your app's
target, Info section,


633
00:31:26,086 --> 00:31:30,666
custom iOS target
properties, add a new key.


634
00:31:30,666 --> 00:31:32,556
In this case we're going


635
00:31:32,556 --> 00:31:36,006
to choose privacy
HomeKit usage description.


636
00:31:36,576 --> 00:31:40,316
And at this point we're
going to write a clear


637
00:31:40,316 --> 00:31:41,426
and meaningful purpose string.


638
00:31:41,606 --> 00:31:43,856
So we're going to put
this will allow you


639
00:31:43,856 --> 00:31:45,936
to create disco light
shows using HomeKit.


640
00:31:46,856 --> 00:31:49,236
When the context and
the timing makes sense,


641
00:31:49,686 --> 00:31:52,436
the user now sees why we
need access to HomeKit.


642
00:31:52,436 --> 00:31:54,386
And they're more likely to
make the choice that's right


643
00:31:55,116 --> 00:31:56,206
for them.


644
00:31:56,476 --> 00:31:58,156
So, what's going to
happen to your app


645
00:31:58,156 --> 00:32:02,056
if you don't declare
access ahead of time?


646
00:32:02,196 --> 00:32:03,356
Well your app's going to crash.


647
00:32:04,366 --> 00:32:09,376
So, to preserve privacy any
app built on or after iOS X


648
00:32:09,376 --> 00:32:13,526
that attempts to request access
to a certain protected class


649
00:32:13,526 --> 00:32:16,516
of data must declare so ahead of
time in their app's info plist.


650
00:32:16,516 --> 00:32:20,966
If you don't, your
app is going to exit.


651
00:32:21,586 --> 00:32:24,116
So, your user will just see
your app exit on screen.


652
00:32:24,556 --> 00:32:27,406
But this is the error that you
will see in the Xcode console.


653
00:32:28,146 --> 00:32:30,086
It will tell you exactly
which protected class


654
00:32:30,086 --> 00:32:32,536
of data you tried to access
and which key you need


655
00:32:32,536 --> 00:32:33,726
to go add to your info plist.


656
00:32:34,646 --> 00:32:37,596
Now, the reason that we crash
your app is because in the event


657
00:32:37,596 --> 00:32:40,656
that your app was compromised
and you did not intend


658
00:32:40,656 --> 00:32:44,696
for your app to request access
to this protected class of data,


659
00:32:44,806 --> 00:32:46,286
we do not want your
app to get access


660
00:32:46,286 --> 00:32:48,216
to any data you did
not intend it to do so.


661
00:32:49,526 --> 00:32:52,286
And remember your
app is responsible


662
00:32:52,286 --> 00:32:55,026
for any third party libraries
that you build into your app.


663
00:32:55,596 --> 00:32:57,956
So be mindful that when
you choose those libraries


664
00:32:58,336 --> 00:33:00,256
that they do not breech
your user's privacy.


665
00:33:01,796 --> 00:33:04,926
So what does this
all mean for you?


666
00:33:05,156 --> 00:33:08,826
Well there's some awesome new
features in iOS X and tvOS.


667
00:33:09,796 --> 00:33:11,426
And they also have
privacy settings.


668
00:33:12,336 --> 00:33:14,446
You need to declare it ahead
of time that you're going


669
00:33:14,446 --> 00:33:17,596
to request access to a
certain protected class of data


670
00:33:17,596 --> 00:33:19,296
in your app's info plist.


671
00:33:19,296 --> 00:33:19,986
And having a clear


672
00:33:19,986 --> 00:33:22,726
and meaningful purpose
string will help users make


673
00:33:22,726 --> 00:33:23,586
better decisions.


674
00:33:25,236 --> 00:33:27,076
So in addition to these
awesome new features,


675
00:33:27,076 --> 00:33:31,346
we also have some changes
to some existing frameworks,


676
00:33:31,346 --> 00:33:34,626
to help you build in privacy
to your app from the ground up.


677
00:33:35,376 --> 00:33:38,256
So first I want to talk about
some changes to pasteboard.


678
00:33:38,756 --> 00:33:44,416
You can now set the expiration
time and a local only value


679
00:33:44,596 --> 00:33:46,236
to any values you put
on the pasteboard.


680
00:33:46,666 --> 00:33:50,846
Setting the expiration time
will make it so the value put


681
00:33:50,846 --> 00:33:52,526
on the pasteboard
will be removed


682
00:33:52,746 --> 00:33:54,746
after that date,
or on that date.


683
00:33:55,896 --> 00:33:57,826
And setting the local
only value to true,


684
00:33:57,826 --> 00:34:00,556
will exclude those values
from the universal clipboard.


685
00:34:00,556 --> 00:34:06,176
So here's an example, in
this case we have a UIImage


686
00:34:06,856 --> 00:34:08,216
that we're going to
put on the pasteboard,


687
00:34:08,396 --> 00:34:09,896
along with the string
"Hello, world."


688
00:34:10,485 --> 00:34:14,025
We're going to set
the expiration time


689
00:34:14,025 --> 00:34:15,976
to 120 seconds from now.


690
00:34:16,496 --> 00:34:19,235
And we're going to set the
local only value to true.


691
00:34:19,916 --> 00:34:22,726
So in two minutes, this
value will no longer be


692
00:34:22,826 --> 00:34:24,436
on the pasteboard.


693
00:34:24,636 --> 00:34:27,356
And, these values cannot
be pasted using the


694
00:34:27,356 --> 00:34:28,315
universal clipboard.


695
00:34:29,626 --> 00:34:31,386
So why would you
want to do this?


696
00:34:31,436 --> 00:34:32,446
Well, if you know for a fact


697
00:34:33,196 --> 00:34:35,585
that a user is copying
something really sensitive,


698
00:34:35,585 --> 00:34:39,755
such as a password or a phone
number, or an email address


699
00:34:40,186 --> 00:34:42,536
and you don't think it should be
on the clipboard for very long,


700
00:34:43,036 --> 00:34:44,335
set the expiration time.


701
00:34:45,466 --> 00:34:47,766
And if you don't think it's
appropriate for those values


702
00:34:47,926 --> 00:34:49,545
to be used in universal
clipboard,


703
00:34:50,166 --> 00:34:51,755
set the local only
value to true.


704
00:34:53,596 --> 00:34:55,686
We've made a couple more
changes to pasteboard.


705
00:34:56,496 --> 00:34:59,066
The first is that all named
pasteboards will be defaulted


706
00:34:59,066 --> 00:35:02,016
to non-persistent and
setting the persistence


707
00:35:02,146 --> 00:35:04,776
of a pasteboard will cause
a deprecation warning.


708
00:35:05,166 --> 00:35:08,186
In addition, trying
to get an item off


709
00:35:08,186 --> 00:35:10,746
of the find pasteboard will
yielded an empty object


710
00:35:10,746 --> 00:35:11,436
with no value.


711
00:35:12,826 --> 00:35:14,206
And we really want
to encourage you


712
00:35:14,206 --> 00:35:16,916
to use shared containers
instead of pasteboards


713
00:35:16,916 --> 00:35:19,316
when you're trying to share
information on different apps


714
00:35:19,316 --> 00:35:21,886
on the same device that are
all within your one team.


715
00:35:22,186 --> 00:35:23,596
It's a much more
secure way to do it,


716
00:35:23,926 --> 00:35:26,866
than putting items
on a pasteboard.


717
00:35:26,866 --> 00:35:30,576
So a lot of your apps also
integrate with Core Spotlight.


718
00:35:30,576 --> 00:35:32,026
And we have a couple of
things we want to talk to you


719
00:35:32,026 --> 00:35:34,576
about today as well when you're
integrating Core Spotlight


720
00:35:34,576 --> 00:35:34,976
into your app.


721
00:35:36,316 --> 00:35:38,826
The first is that every
user tap should not result


722
00:35:38,826 --> 00:35:40,896
in an NSUserActivity
being published.


723
00:35:41,386 --> 00:35:43,406
You don't want to flood the
system with a bunch of events


724
00:35:43,526 --> 00:35:45,226
that don't make sense
for the user.


725
00:35:45,616 --> 00:35:47,546
Only really significant
events you think they'll want


726
00:35:47,546 --> 00:35:48,736
to go look back for later.


727
00:35:49,296 --> 00:35:53,146
And do not set eligibleFor
PublicIndexing to true


728
00:35:53,146 --> 00:35:55,836
if the data is sensitive
user data.


729
00:35:56,436 --> 00:36:00,646
You also probably heard


730
00:36:00,736 --> 00:36:03,326
about our new support
for widgets in iOS X.


731
00:36:04,096 --> 00:36:06,446
So when a user enables
a widget, it's available


732
00:36:06,446 --> 00:36:09,876
on the home screen,
and the lock screen.


733
00:36:10,256 --> 00:36:12,606
So because of this,
I want to talk to you


734
00:36:12,606 --> 00:36:13,486
about some best practices.


735
00:36:13,486 --> 00:36:15,946
Things that you can do when
you're creating your widgets


736
00:36:16,196 --> 00:36:18,536
to remember that they're also
available on the lock screen.


737
00:36:18,726 --> 00:36:22,166
So the first is that you
should evaluate the sensitivity


738
00:36:22,166 --> 00:36:23,436
of data you put in your widget.


739
00:36:24,346 --> 00:36:25,966
If you don't think
it's appropriate to be


740
00:36:25,966 --> 00:36:28,716
on the lock screen, don't
put it in your widget,


741
00:36:28,716 --> 00:36:30,486
or engineer a way for
it to not be there


742
00:36:30,816 --> 00:36:32,106
when it's on the lock screen.


743
00:36:32,396 --> 00:36:35,816
Make sure that the data is
consistent and predictable.


744
00:36:36,166 --> 00:36:37,816
So when I enable
your widget today,


745
00:36:38,646 --> 00:36:40,796
do I expect to see
something similar tomorrow?


746
00:36:41,376 --> 00:36:43,106
How about a month from now?


747
00:36:43,666 --> 00:36:46,996
It's okay if it's not
the same data every day,


748
00:36:47,086 --> 00:36:50,546
but I should understand what
type of data could be there.


749
00:36:51,026 --> 00:36:52,416
And remember that its data


750
00:36:52,416 --> 00:36:54,156
that is file protection
type complete,


751
00:36:54,406 --> 00:36:56,306
will not be available
on the lock screen.


752
00:36:56,306 --> 00:37:00,636
So I want to show you an example
of what we're doing today


753
00:37:00,636 --> 00:37:01,886
with the Find My Friends widget.


754
00:37:03,066 --> 00:37:05,586
On the lock screen the
location is not available.


755
00:37:06,006 --> 00:37:07,046
We know that the location


756
00:37:07,046 --> 00:37:08,966
of your friends is
extremely sensitive


757
00:37:09,006 --> 00:37:10,866
and should not be
available on the lock screen.


758
00:37:11,536 --> 00:37:14,156
So we have a string that
says unlock to view location.


759
00:37:14,156 --> 00:37:15,926
And the location is not there.


760
00:37:16,686 --> 00:37:18,016
Then once I use touch ID


761
00:37:18,016 --> 00:37:20,516
to unlock my device,
we show the location.


762
00:37:21,966 --> 00:37:24,466
Consider doing something like
this if you think that some


763
00:37:24,466 --> 00:37:26,446
of the data in your
widget could be sensitive.


764
00:37:31,206 --> 00:37:33,046
So Julien and I talked
to you about a lot


765
00:37:33,046 --> 00:37:34,056
of different things today.


766
00:37:35,146 --> 00:37:37,246
We started out by
talking about identifiers.


767
00:37:37,576 --> 00:37:40,176
The real root of how
you identify your users


768
00:37:40,436 --> 00:37:41,736
within your app.


769
00:37:41,736 --> 00:37:44,066
And how you should favor
short-lived identifiers


770
00:37:44,066 --> 00:37:45,516
and OS provided identifiers.


771
00:37:45,516 --> 00:37:50,626
And we talked about how when
you're collecting data in order


772
00:37:50,626 --> 00:37:53,306
to build your features
you should do it


773
00:37:53,306 --> 00:37:56,496
in privacy friendly ways
such as bucketing, sampling,


774
00:37:56,786 --> 00:37:59,166
or using new technology such
as differential privacy.


775
00:37:59,696 --> 00:38:04,286
And how when you give users
transparency and control


776
00:38:04,286 --> 00:38:08,106
over those identifiers and
that data, you gain their trust


777
00:38:08,106 --> 00:38:10,566
and you encourage
engagement in your app.


778
00:38:12,096 --> 00:38:14,556
And that when you let
them make decisions


779
00:38:14,556 --> 00:38:16,896
about their privacy
this empowers them


780
00:38:16,896 --> 00:38:20,776
to make good privacy decisions
that are right for them.


781
00:38:20,906 --> 00:38:22,976
And of course we showed you
some awesome new features


782
00:38:22,976 --> 00:38:25,086
and some great tools to
help you build privacy


783
00:38:25,086 --> 00:38:28,536
into your app from
the ground up.


784
00:38:28,806 --> 00:38:31,066
For more information about
our talk you can visit this


785
00:38:31,066 --> 00:38:31,656
web page.


786
00:38:32,706 --> 00:38:34,366
Here are some related
sessions you might want


787
00:38:34,366 --> 00:38:35,276
to check out this week.


788
00:38:35,936 --> 00:38:36,896
Thank you.


789
00:38:37,516 --> 00:38:42,500
[ Applause ]

