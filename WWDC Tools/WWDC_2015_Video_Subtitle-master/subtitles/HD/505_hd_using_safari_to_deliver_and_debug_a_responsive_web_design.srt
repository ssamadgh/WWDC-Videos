1
00:00:26,516 --> 00:00:28,706
[Applause]


2
00:00:29,206 --> 00:00:29,636
>> JONO WELLS: Good morning.


3
00:00:32,616 --> 00:00:35,366
Welcome to using Safari
to deliver and debug,


4
00:00:35,606 --> 00:00:37,476
a responsive web design.


5
00:00:38,026 --> 00:00:39,376
My name is Jono Wells.


6
00:00:39,466 --> 00:00:45,536
I am an engineer on the Safari
and WebKit team with Apple,


7
00:00:46,266 --> 00:00:48,196
and I'm really excited
to talk to you today.


8
00:00:48,906 --> 00:00:52,276
I have a great privilege
of being able to develop


9
00:00:52,466 --> 00:00:54,826
for the Development
Tools that are a part


10
00:00:54,826 --> 00:00:56,646
of the Safari web browser.


11
00:00:57,146 --> 00:01:01,076
I feel I'm privileged
because I love the web,


12
00:01:01,076 --> 00:01:02,096
as I'm sure you do.


13
00:01:02,256 --> 00:01:04,226
I think Safari is
a great browser,


14
00:01:04,456 --> 00:01:06,806
a really great platform.


15
00:01:07,816 --> 00:01:10,636
It deserves world-class
Development Tools,


16
00:01:10,636 --> 00:01:11,306
wouldn't you agree?


17
00:01:11,786 --> 00:01:15,696
Especially because we are
not just making content


18
00:01:15,796 --> 00:01:19,256
in the web browser, we're making
content in our apps as well,


19
00:01:19,576 --> 00:01:21,726
using web views and so
we want that content


20
00:01:21,846 --> 00:01:23,956
to run great and look great.


21
00:01:25,316 --> 00:01:28,306
So this morning, of course
we're going to be talking


22
00:01:28,306 --> 00:01:31,226
about Web Inspector, a tool most


23
00:01:31,226 --> 00:01:32,946
of you have probably
used before, hopefully.


24
00:01:32,946 --> 00:01:34,056
We're also going to be talking


25
00:01:34,056 --> 00:01:37,906
about a brand-new tool called
Responsive Design Mode.


26
00:01:38,996 --> 00:01:43,776
With these two tools together
we're going to very rapidly


27
00:01:44,796 --> 00:01:49,366
and very smartly improve
the quality of our site


28
00:01:49,606 --> 00:01:52,986
and get a good solid
responsive design as a result.


29
00:01:53,866 --> 00:01:55,756
Let's begin by talking
about Web Inspector.


30
00:01:57,066 --> 00:01:58,406
This is Web Inspector,
of course.


31
00:01:58,826 --> 00:02:01,086
This is the one you've been
working with for the last year.


32
00:02:01,086 --> 00:02:04,576
We've come up with a lot
of great new features.


33
00:02:04,906 --> 00:02:06,976
We've also gotten some
great feedback from you


34
00:02:06,976 --> 00:02:09,645
over the last year
about the interface.


35
00:02:09,866 --> 00:02:13,096
We took a lot of that to
heart and we changed things


36
00:02:13,096 --> 00:02:15,266
around a little bit so
this is the Web Inspector


37
00:02:15,266 --> 00:02:17,656
that we're releasing with
this release of Safari.


38
00:02:18,156 --> 00:02:19,726
Here it is.


39
00:02:20,516 --> 00:02:23,656
[Applause]


40
00:02:24,156 --> 00:02:25,526
>> JONO WELLS: I suspect
some of you may be applauding


41
00:02:25,526 --> 00:02:27,436
because there is a
dedicated elements tab


42
00:02:27,436 --> 00:02:28,256
as you see up there.


43
00:02:28,506 --> 00:02:33,306
We have a tab based
interface, all the tools


44
00:02:33,306 --> 00:02:36,476
that you would expect in Web
Inspector are here; resources,


45
00:02:36,776 --> 00:02:40,976
timeline, the debugger, the
storage tab and a console tab.


46
00:02:40,976 --> 00:02:43,826
But these are tabs so of
course you can get rid of ones


47
00:02:43,826 --> 00:02:45,606
that you want to
get out of your way


48
00:02:45,606 --> 00:02:46,586
if there are tools
you don't work


49
00:02:46,586 --> 00:02:48,706
with as often you can just
move them out of the way,


50
00:02:49,036 --> 00:02:51,086
you can reorganize the ones
that are already there,


51
00:02:51,116 --> 00:02:54,296
if you want to bring one back,
you just hit the plus button


52
00:02:54,296 --> 00:02:57,116
on the right-hand side and open
up whichever one you want to.


53
00:02:57,626 --> 00:03:00,176
We give you the ability
to customize Web Inspector


54
00:03:00,176 --> 00:03:03,916
to look more like what you
want, to work the way you do.


55
00:03:04,316 --> 00:03:06,716
We've made improvements
to the interface there.


56
00:03:07,406 --> 00:03:10,046
Now let's talk about
what new things we can do


57
00:03:10,046 --> 00:03:13,056
with Web Inspector and
how it can help us.


58
00:03:13,056 --> 00:03:16,236
The first one is, it can
help us get great performance


59
00:03:16,526 --> 00:03:17,466
out of our content.


60
00:03:17,466 --> 00:03:18,676
It helps you get
great performance.


61
00:03:19,146 --> 00:03:21,786
Now it almost dragoons you
to get great performance


62
00:03:21,786 --> 00:03:22,796
and we'll talk about how.


63
00:03:23,916 --> 00:03:26,166
What do I mean when I
say great performance?


64
00:03:27,076 --> 00:03:29,566
The gold standard as I'm
sure most of you know,


65
00:03:29,756 --> 00:03:33,346
is 60 frames per second, because
our screens are refreshing


66
00:03:33,346 --> 00:03:35,116
at 60 Hertz, 60 times a second.


67
00:03:35,926 --> 00:03:39,836
This means that if we are trying
to render a smooth animation,


68
00:03:40,276 --> 00:03:42,926
right, for any given
rendering frame, right,


69
00:03:42,926 --> 00:03:46,306
in a turn of the event loop
we need to make sure all


70
00:03:46,306 --> 00:03:48,596
of our scripts, our
timers, and our layout


71
00:03:48,596 --> 00:03:52,686
and rendering can happen
within 16.67 milliseconds.


72
00:03:53,306 --> 00:03:57,926
If we blow this budget, then
our animation will stutter


73
00:03:57,926 --> 00:03:59,486
and that's not something
that we want.


74
00:04:00,166 --> 00:04:05,396
How can we get better
information


75
00:04:05,396 --> 00:04:08,806
to help us debug the
performance of our content?


76
00:04:09,536 --> 00:04:10,376
We have this idea.


77
00:04:11,566 --> 00:04:13,576
What if you could just
look at the content


78
00:04:13,576 --> 00:04:15,096
and every time a paint occurs,


79
00:04:15,836 --> 00:04:19,856
we just flash a region
of the screen?


80
00:04:20,326 --> 00:04:22,005
We added something
called Paint Flashing.


81
00:04:22,146 --> 00:04:24,626
When you're in the elements tab,
in the upper right-hand corner,


82
00:04:24,666 --> 00:04:26,266
you will see this paintbrush.


83
00:04:27,226 --> 00:04:28,726
Click that, turn that on.


84
00:04:28,726 --> 00:04:32,936
When that is lit up blue, every
single time a paint occurs


85
00:04:32,936 --> 00:04:37,156
on your page it will light up
red with a translucent red box.


86
00:04:37,956 --> 00:04:39,736
You're going to want to
try this on your content.


87
00:04:39,736 --> 00:04:41,176
It going to light up
like a Christmas tree.


88
00:04:41,176 --> 00:04:41,896
It is amazing!


89
00:04:41,896 --> 00:04:44,616
It's going to look like a game
of Simon if you ever played


90
00:04:44,616 --> 00:04:48,746
that with a kid -- as a kid.


91
00:04:48,866 --> 00:04:50,446
That's going to give you a sense


92
00:04:50,676 --> 00:04:52,186
that perhaps you're
painting too often,


93
00:04:52,406 --> 00:04:53,946
there's too much
happening on your page.


94
00:04:54,996 --> 00:04:56,886
But what about what's
happening behind the scenes?


95
00:04:57,876 --> 00:04:59,476
To help you get more
information there


96
00:04:59,706 --> 00:05:02,346
and get you towards 60 frames
per second performance,


97
00:05:02,706 --> 00:05:04,846
we've added a great new tool
called the Rendering Frames


98
00:05:04,926 --> 00:05:05,466
Time Line.


99
00:05:06,016 --> 00:05:10,666
If you go to the time
lines tab you can get to it


100
00:05:10,666 --> 00:05:12,836
by clicking right here
on Rendering Frames


101
00:05:13,016 --> 00:05:14,416
and this is the interface
you will see.


102
00:05:14,746 --> 00:05:17,736
When -- so you can
record, use your site


103
00:05:17,736 --> 00:05:19,506
and we will start
drawing these bars.


104
00:05:19,506 --> 00:05:22,276
Each one of these bars
represents a rendering frame.


105
00:05:22,596 --> 00:05:25,086
They're segmented into
different colors based


106
00:05:25,086 --> 00:05:26,446
on what is happening
in each frame.


107
00:05:26,846 --> 00:05:30,496
Purple for scripts, event
timers and such, red for layout


108
00:05:30,496 --> 00:05:34,116
and rendering and gray for
behind the scenes engine work


109
00:05:34,356 --> 00:05:35,506
that the engine is doing.


110
00:05:36,126 --> 00:05:39,096
The goal is to keep each


111
00:05:39,096 --> 00:05:42,566
of these bars underneath
the middle line right here,


112
00:05:43,516 --> 00:05:44,976
the 60 frames per second line.


113
00:05:45,306 --> 00:05:47,376
If your bars tend
to go above that,


114
00:05:47,706 --> 00:05:50,526
it means you're possibly
not going


115
00:05:50,526 --> 00:05:52,206
to be getting 60 frames
per second performance


116
00:05:52,446 --> 00:05:54,556
and we want to work on that.


117
00:05:55,006 --> 00:05:57,516
You can select a region of
the bars just like you can


118
00:05:57,516 --> 00:06:00,286
on the other timeline, and
we're going to show you a lot


119
00:06:00,286 --> 00:06:01,376
of good information about that.


120
00:06:01,376 --> 00:06:03,636
First of all, we're going to
show you this graph right here,


121
00:06:03,636 --> 00:06:06,266
this is an aggregate of
the different activity


122
00:06:06,266 --> 00:06:07,796
that is happening in
that particular region.


123
00:06:07,796 --> 00:06:11,866
We're going to give you a
breakdown of each frame.


124
00:06:12,096 --> 00:06:13,756
You can open up every
single rendering frame


125
00:06:13,756 --> 00:06:15,126
and see exactly what's
happening.


126
00:06:15,726 --> 00:06:18,916
For things like event
timers and rendering,


127
00:06:19,096 --> 00:06:22,366
style and validation inside of
your code we have the ability,


128
00:06:22,366 --> 00:06:24,906
of course, to click to the
relevant line of source codes


129
00:06:24,906 --> 00:06:26,116
so you can see what's going on.


130
00:06:26,936 --> 00:06:29,636
We also show you this table
of timing information.


131
00:06:30,396 --> 00:06:32,366
One of my favorite things to
do, I have been using this


132
00:06:32,366 --> 00:06:35,456
for a bit, what's been really
helpful for me is to sort


133
00:06:35,456 --> 00:06:38,376
by total time for reach
Rendering Frame and then I open


134
00:06:38,376 --> 00:06:40,836
up the one on the top
because it is most likely


135
00:06:41,116 --> 00:06:44,126
that the most offensive
frames are at the top


136
00:06:44,126 --> 00:06:46,326
and then I can see what is
holding back my performance.


137
00:06:47,186 --> 00:06:52,026
This tool is going to tell you a
great story about your content.


138
00:06:52,176 --> 00:06:55,006
Even if you think you're
performing well, you're going


139
00:06:55,006 --> 00:06:57,456
to want to hookup
to this and see


140
00:06:57,456 --> 00:07:00,196
if you can get additional
performance out of your site.


141
00:07:00,866 --> 00:07:03,266
It tells you a great
story, it allows you to do


142
00:07:03,436 --> 00:07:05,776
without thinking, that's really
what we want our development


143
00:07:05,776 --> 00:07:06,626
tools to do.


144
00:07:06,966 --> 00:07:09,256
Just to put the information out
in front of you and say here,


145
00:07:09,706 --> 00:07:14,686
here it is, you don't have
to work too hard to get it.


146
00:07:14,946 --> 00:07:17,506
One of the things that we've
been noticing is that you have


147
00:07:17,506 --> 00:07:19,086
to jump around between
different tools


148
00:07:19,086 --> 00:07:20,326
within Web Inspector a lot.


149
00:07:21,646 --> 00:07:24,186
We thought it'd be great if you
could focus on a particular one.


150
00:07:24,906 --> 00:07:27,186
More often if you can
just stay in one tool


151
00:07:27,646 --> 00:07:28,686
that might save you time.


152
00:07:29,546 --> 00:07:31,046
We've done this in a few ways.


153
00:07:31,196 --> 00:07:34,376
One of the ways is for errors


154
00:07:34,376 --> 00:07:37,206
and warnings we don't just
show those in the console now,


155
00:07:37,206 --> 00:07:38,626
we show them in a
few other places


156
00:07:38,846 --> 00:07:40,316
so that you can spot
them more quickly.


157
00:07:40,876 --> 00:07:42,776
In the debugger side-bar
for instance on the left,


158
00:07:43,676 --> 00:07:46,236
any resource that has an error
warning we'll just show them


159
00:07:46,236 --> 00:07:50,256
underneath, they'll appear so
you can just jump right to them.


160
00:07:50,466 --> 00:07:54,556
In all of the JavaScript code in
your site, we'll show the errors


161
00:07:54,556 --> 00:07:57,756
and warnings in line so
you'll see those messages.


162
00:07:57,786 --> 00:07:59,756
So if you're just browsing,
everything will just show up.


163
00:07:59,756 --> 00:08:00,546
It's a lot nicer.


164
00:08:01,046 --> 00:08:04,026
We have also improved the
way they look in the console


165
00:08:04,356 --> 00:08:06,146
so errors and warnings,
they're highlighted,


166
00:08:06,146 --> 00:08:08,426
the colors are easily
distinguishable.


167
00:08:09,506 --> 00:08:10,456
They just look better too,


168
00:08:10,456 --> 00:08:12,016
we've made the fonts
better, it's great.


169
00:08:12,486 --> 00:08:19,116
We have this other idea,
and again we want to Do


170
00:08:19,116 --> 00:08:20,066
Without Thinking, we want


171
00:08:20,066 --> 00:08:21,606
to put important
information in front of you.


172
00:08:21,886 --> 00:08:24,876
JavaScript of course, is a
dynamically typed language.


173
00:08:25,406 --> 00:08:27,976
That means that the engine
itself assigns the types


174
00:08:27,976 --> 00:08:29,176
for you, you don't have to.


175
00:08:29,426 --> 00:08:31,796
This is what's happening
behind the scenes in this case.


176
00:08:32,096 --> 00:08:34,926
Right. We have a string, we have
an integer, we have an object.


177
00:08:36,426 --> 00:08:39,736
If you're working
with some code,


178
00:08:39,736 --> 00:08:41,265
here's a function
that's designed


179
00:08:41,265 --> 00:08:42,416
to add two numbers together,


180
00:08:42,416 --> 00:08:44,836
and this is a mistake
that might happen.


181
00:08:45,046 --> 00:08:48,966
We're accidentally passing in
a string, and so that is going


182
00:08:48,966 --> 00:08:50,626
to lead to some unexpected
results we're going


183
00:08:50,626 --> 00:08:51,396
to call a dysfunction.


184
00:08:52,166 --> 00:08:55,516
This is something that you can
discover by trying to debug,


185
00:08:55,516 --> 00:08:56,846
and play around with
your code, might be a,


186
00:08:57,096 --> 00:08:58,386
in a more complicated case,


187
00:08:58,386 --> 00:08:59,676
might be hard to
find this error.


188
00:08:59,866 --> 00:09:01,836
But, what if you could
see something like this


189
00:09:02,086 --> 00:09:05,356
where we just show you
as your code is running,


190
00:09:05,566 --> 00:09:07,396
we show you the types
that have been assigned


191
00:09:07,966 --> 00:09:11,816
to all the different variables,
passed in as parameters,


192
00:09:12,116 --> 00:09:13,456
or return from functions.


193
00:09:14,956 --> 00:09:17,186
We created just such a thing.


194
00:09:17,706 --> 00:09:19,656
We call this the
Type Profiling Tool.


195
00:09:19,656 --> 00:09:21,266
If you look in the
upper right-hand corner


196
00:09:21,346 --> 00:09:21,786
when you're looking


197
00:09:21,786 --> 00:09:25,686
at any JavaScript source you'll
see this T button right here.


198
00:09:25,686 --> 00:09:28,106
If you click that, from
that point forward,


199
00:09:28,106 --> 00:09:30,346
when your code runs, your code
is going to go from looking


200
00:09:30,546 --> 00:09:33,796
like this to looking like this.


201
00:09:34,516 --> 00:09:38,866
[Applause]


202
00:09:39,366 --> 00:09:40,536
>> JONO WELLS: I love this tool!


203
00:09:40,536 --> 00:09:41,276
It's so cool!


204
00:09:41,276 --> 00:09:43,726
I've been using it a lot
working on Web Inspector.


205
00:09:44,716 --> 00:09:48,226
We're going to show you as
best as we can type information


206
00:09:48,416 --> 00:09:51,366
as your variables
are assigned values.


207
00:09:51,526 --> 00:09:54,146
You'll also notice that some
of the code is grayed out.


208
00:09:54,396 --> 00:09:56,366
Since we're tracking what
code has been covered,


209
00:09:56,976 --> 00:09:58,096
any code that hasn't
been reached


210
00:09:58,096 --> 00:09:59,256
yet will be grayed out for you.


211
00:09:59,486 --> 00:10:01,866
So this also serves as a
great code coverage tool.


212
00:10:02,346 --> 00:10:04,826
Right. It going to
allow you to see


213
00:10:04,826 --> 00:10:06,136
if a function isn't being run


214
00:10:06,416 --> 00:10:10,226
or if an else condition isn't
being reached, things like that.


215
00:10:11,496 --> 00:10:13,416
You'll also notice that we
show you the return value


216
00:10:13,416 --> 00:10:14,126
from a function.


217
00:10:14,346 --> 00:10:16,296
In this case I have a function
that's returning something


218
00:10:16,296 --> 00:10:19,296
called a DeveloperPerson,
it's a class I wrote.


219
00:10:19,296 --> 00:10:21,026
You'll also notice that
we're showing you the name


220
00:10:21,026 --> 00:10:21,836
of that object.


221
00:10:22,266 --> 00:10:25,356
If you have constructer
functions, right, like this one,


222
00:10:25,356 --> 00:10:27,826
if you're using this classical
model using prototypes


223
00:10:28,266 --> 00:10:32,766
and you construct an object that
way, we will show you the name


224
00:10:32,766 --> 00:10:33,866
of the constructer function.


225
00:10:34,076 --> 00:10:35,206
We'll do the same
thing of course,


226
00:10:35,206 --> 00:10:38,366
if you're using ES6
classes which just landed


227
00:10:38,626 --> 00:10:43,466
in this release, we'll show
you the name of the class.


228
00:10:43,896 --> 00:10:47,876
Obviously parameters can
get past multiple values


229
00:10:47,876 --> 00:10:49,546
over the lifetime
of your application.


230
00:10:49,816 --> 00:10:51,906
What happens if you
have multiple types?


231
00:10:52,606 --> 00:10:54,266
For objects here is
how we handle it.


232
00:10:54,786 --> 00:10:57,786
Let's say I have a
function called register.


233
00:10:58,636 --> 00:11:01,416
Right. So we're going
to register somebody


234
00:11:01,416 --> 00:11:03,106
for a conference or
something like that.


235
00:11:03,816 --> 00:11:06,946
Say I call it once, and I
pass in a new DeveloperPerson.


236
00:11:07,606 --> 00:11:09,906
Well, we're just going to show
you that it's a DeveloperPerson.


237
00:11:09,906 --> 00:11:11,676
If we pass in another object,


238
00:11:11,676 --> 00:11:13,206
say a ManagerPerson,
we'll show you that.


239
00:11:13,436 --> 00:11:15,596
Let's say we pass in
both a DeveloperPerson


240
00:11:15,596 --> 00:11:17,656
and a ManagerPerson, then


241
00:11:17,656 --> 00:11:20,336
since they both have a
common ancestor, person,


242
00:11:20,506 --> 00:11:21,636
that's what we're
going to show you.


243
00:11:22,686 --> 00:11:24,096
If we pass in something
else that isn't


244
00:11:24,096 --> 00:11:27,276
in this inheritance chain at
all like an extraterrestrial


245
00:11:27,276 --> 00:11:30,186
for instance, we'll
just show you object,


246
00:11:30,186 --> 00:11:35,146
because of course everything
derives from object, right?


247
00:11:35,886 --> 00:11:37,936
Now here are all the different
types that we might show you.


248
00:11:38,396 --> 00:11:43,186
If there are multiple types,
a string, and a number


249
00:11:43,186 --> 00:11:45,236
that get assigned to a value,
this is what you're going to see


250
00:11:45,236 --> 00:11:48,116
in your code, it's just
going to show you many.


251
00:11:48,116 --> 00:11:51,216
There is an exception to this,
say you have a simple type


252
00:11:51,216 --> 00:11:54,636
like a double and it's a
double sometimes and it's null


253
00:11:54,636 --> 00:11:57,386
or undefined sometimes, we'll
just add a question mark


254
00:11:57,386 --> 00:11:59,226
to the top, that means
it's double sometimes


255
00:11:59,546 --> 00:12:01,486
or sometimes it's a null value.


256
00:12:02,006 --> 00:12:05,066
This is such a nice feature,


257
00:12:05,066 --> 00:12:06,316
I just want to show
you a few more shots.


258
00:12:06,516 --> 00:12:08,016
This is code from
the Web Inspector.


259
00:12:08,386 --> 00:12:09,126
It's just really nice.


260
00:12:09,126 --> 00:12:12,206
It gives you a bird's eye
view of what's happening


261
00:12:12,206 --> 00:12:13,116
with your application.


262
00:12:13,366 --> 00:12:16,846
You can quickly spot behavior
that isn't interesting to you.


263
00:12:17,006 --> 00:12:18,316
Right. Here is an
object assignment.


264
00:12:18,506 --> 00:12:21,756
Again, you can see the coverage,


265
00:12:21,756 --> 00:12:23,676
you can see areas
that are grayed out.


266
00:12:24,836 --> 00:12:27,346
This has been incredibly
useful in my development


267
00:12:27,346 --> 00:12:28,486
with Web Inspector,
I think you're going


268
00:12:28,486 --> 00:12:29,676
to find it just as
useful as well.


269
00:12:29,746 --> 00:12:31,066
This is the type profiling tool.


270
00:12:32,516 --> 00:12:38,076
[Applause]


271
00:12:38,576 --> 00:12:39,266
>> JONO WELLS: All right.


272
00:12:39,796 --> 00:12:43,346
We have also made
improvements to the console.


273
00:12:44,356 --> 00:12:46,206
In a similar way
we want to be able


274
00:12:46,206 --> 00:12:48,616
to put really useful
information in front of you


275
00:12:48,726 --> 00:12:50,686
without you having
to work too hard.


276
00:12:52,076 --> 00:12:54,676
Here are some objects that we
have launched in the console.


277
00:12:54,876 --> 00:12:56,326
And you're going to
notice a few things.


278
00:12:56,846 --> 00:12:58,026
The first one is that
we're creating --


279
00:12:58,336 --> 00:12:59,586
we give you object preview,


280
00:12:59,586 --> 00:13:01,736
so you have really good
looking object previews


281
00:13:02,086 --> 00:13:06,226
so you might spot information
inside your object much


282
00:13:06,226 --> 00:13:06,826
more quickly.


283
00:13:07,666 --> 00:13:08,866
You're also going to
notice something else,


284
00:13:08,866 --> 00:13:10,756
every time something is
output to the console,


285
00:13:11,226 --> 00:13:13,916
we're going to store it
in a variable for you.


286
00:13:14,416 --> 00:13:16,756
This starts at dollar sign
1 and then dollar sign 2,


287
00:13:17,036 --> 00:13:18,826
then dollar sign 3,
on and on and on.


288
00:13:19,706 --> 00:13:23,376
You can reference
them again just


289
00:13:23,376 --> 00:13:25,936
by putting them in the console.


290
00:13:26,306 --> 00:13:26,946
This is great.


291
00:13:27,116 --> 00:13:29,786
The feedback that we got
from you, because these used


292
00:13:29,786 --> 00:13:33,386
to represent recently selected
elements in the elements panel


293
00:13:33,796 --> 00:13:36,486
and the feedback was that really
everyone was only using one


294
00:13:36,486 --> 00:13:38,996
of those, which is dollar
sign 0, so don't worry,


295
00:13:38,996 --> 00:13:42,136
that's still the currently
selected element, still there,


296
00:13:42,396 --> 00:13:44,336
it'll still work as you
expect it to, but starting


297
00:13:44,336 --> 00:13:47,406
with dollar sign one, those'll
be recently logged variables.


298
00:13:47,986 --> 00:13:51,126
That can be really useful,
right, if you're paused


299
00:13:51,126 --> 00:13:54,176
in the debugger and there's a
value in the scope that you want


300
00:13:54,176 --> 00:13:57,066
to remember, you no longer have
to go into your source code


301
00:13:57,456 --> 00:14:00,116
and create a variable just
for debugging purposes


302
00:14:00,116 --> 00:14:01,706
and then save it,
and then run the app,


303
00:14:01,706 --> 00:14:03,046
then delete it later, or forget.


304
00:14:03,046 --> 00:14:04,336
You don't have to do
any of that anymore,


305
00:14:04,596 --> 00:14:05,716
we'll take care of that for you.


306
00:14:07,056 --> 00:14:09,346
What about when you open
up one of the objects.


307
00:14:09,836 --> 00:14:12,106
You're going to see this.


308
00:14:12,266 --> 00:14:13,196
It's a lot nicer.


309
00:14:13,536 --> 00:14:15,616
First of all, we've
just improved the look


310
00:14:15,786 --> 00:14:18,386
and used colors to
distinguish the different types


311
00:14:18,386 --> 00:14:21,476
of information that can
be inside of an object.


312
00:14:21,476 --> 00:14:24,196
Everyone of the objects
inside has its own preview.


313
00:14:24,356 --> 00:14:26,276
You'll notice that this
is an array, siblings,


314
00:14:26,656 --> 00:14:28,406
this one has a special
type of preview,


315
00:14:28,406 --> 00:14:32,206
we've created special previews
for certain things, Maps, sets,


316
00:14:32,206 --> 00:14:35,246
weak sets, weak maps, promises.


317
00:14:36,546 --> 00:14:39,346
Right. We show you the types
of the objects inside the array


318
00:14:39,546 --> 00:14:41,316
and the size of the
array on the right.


319
00:14:41,836 --> 00:14:44,736
When you open it, we show you
the index of each object inside.


320
00:14:44,736 --> 00:14:46,346
Of course, each of
those have a preview.


321
00:14:46,966 --> 00:14:47,786
I want you to notice here


322
00:14:47,786 --> 00:14:49,706
that we also have
made it a lot easier


323
00:14:49,806 --> 00:14:52,716
to inspect the prototype
chain so I can then open


324
00:14:52,716 --> 00:14:55,536
up the prototype for developer
person and for person,


325
00:14:55,536 --> 00:14:57,036
and I might see something
like this.


326
00:14:58,376 --> 00:14:59,636
I love this very much.


327
00:15:00,616 --> 00:15:03,906
This gives me the ability to
essentially get an API view


328
00:15:03,996 --> 00:15:06,466
of my object in the classes
that constructed this object.


329
00:15:07,396 --> 00:15:09,656
Look at this.


330
00:15:09,656 --> 00:15:11,676
I can quickly spot and see okay,


331
00:15:12,066 --> 00:15:14,706
I have a function called
change name that takes


332
00:15:14,706 --> 00:15:15,836
in a first name and last name.


333
00:15:16,476 --> 00:15:20,056
I have a custom setter
called firstName.


334
00:15:20,376 --> 00:15:24,486
I have a custom getter
called fullName.


335
00:15:25,066 --> 00:15:27,506
I can tell that because
there's an eyeball next to it.


336
00:15:27,506 --> 00:15:28,706
I can click on that eyeball


337
00:15:28,706 --> 00:15:31,596
and it'll actually
run the custom getter.


338
00:15:32,636 --> 00:15:36,566
This is almost better than the
documentation in some cases.


339
00:15:36,996 --> 00:15:39,716
It is even great for
native API exploration,


340
00:15:39,716 --> 00:15:40,946
and some of you are
probably thinking,


341
00:15:41,206 --> 00:15:44,326
I can't remember how local
storage works, no problem,


342
00:15:44,506 --> 00:15:45,736
just put it in the console.


343
00:15:45,826 --> 00:15:46,986
I can see all of the functions,


344
00:15:47,176 --> 00:15:48,936
it looks a lot better,
it's really nice.


345
00:15:49,336 --> 00:15:50,856
Really great for
object exploration,


346
00:15:50,856 --> 00:15:53,836
if you're exploring
third-party APIs, it's great.


347
00:15:53,996 --> 00:15:55,646
It's not just in
the console, either.


348
00:15:55,846 --> 00:15:58,416
Anywhere we show object views,
for instance, if you're paused


349
00:15:58,416 --> 00:16:01,886
in the debugger and you have the
view of the variables in scope


350
00:16:01,886 --> 00:16:03,976
on the right, or when
you're mousing over,


351
00:16:04,376 --> 00:16:07,896
a variable in the source
view, let me show you that -


352
00:16:08,146 --> 00:16:11,096
same beautiful object views
in all of those places.


353
00:16:12,076 --> 00:16:15,336
Nicely organized for the type
of information that is in there,


354
00:16:15,746 --> 00:16:18,836
you're going to spot
information more quickly


355
00:16:19,026 --> 00:16:21,016
and that is really the
goal of all of this.


356
00:16:21,056 --> 00:16:26,406
I now would like to invite my
friend and colleague Andy Estes


357
00:16:26,406 --> 00:16:29,136
to come up to the stage and
he's been working on a site


358
00:16:29,526 --> 00:16:31,596
that he's excited to
show you and maybe some


359
00:16:31,596 --> 00:16:32,756
of these tools will
help him out.


360
00:16:32,756 --> 00:16:32,976
Andy.


361
00:16:33,516 --> 00:16:37,546
[Applause]


362
00:16:38,046 --> 00:16:40,606
>> ANDY ESTES: Thank you, Jono
and thank you to all of you


363
00:16:40,606 --> 00:16:41,576
for being here this morning.


364
00:16:41,616 --> 00:16:42,836
I'm really excited to be here


365
00:16:42,836 --> 00:16:44,896
and show you these new
tools in Web Inspector.


366
00:16:45,716 --> 00:16:48,676
First, a bit of a confession, I
was up late last night working


367
00:16:48,676 --> 00:16:51,116
on this site, I wanted
it to look good.


368
00:16:51,516 --> 00:16:55,506
It's supposed to display a
bunch of photography I've taken


369
00:16:55,816 --> 00:16:58,026
and I think I've introduced
a bug and if you don't mind,


370
00:16:58,026 --> 00:17:00,606
I just want to see if I can
figure out this bug I introduced


371
00:17:00,606 --> 00:17:02,596
and fix it real quick
so I'm just going


372
00:17:02,596 --> 00:17:03,816
to go into Web Inspector.


373
00:17:03,816 --> 00:17:05,736
By the way, if you never
opened the inspector before,


374
00:17:05,935 --> 00:17:07,076
you do it from the develop menu


375
00:17:07,076 --> 00:17:08,906
and you don't have a
develop menu in your Safari,


376
00:17:08,906 --> 00:17:10,976
it's really easy to
enable, you simply go


377
00:17:10,976 --> 00:17:12,046
to Safari's preferences,


378
00:17:12,195 --> 00:17:14,656
and in the advanced tab
you'll see the option,


379
00:17:14,656 --> 00:17:17,396
show development menu in mini
bar, I already have that checked


380
00:17:17,496 --> 00:17:18,816
so I'll just go right in there.


381
00:17:18,816 --> 00:17:21,455
I'm going to say Develop,
show Web Inspector.


382
00:17:22,266 --> 00:17:25,185
It will open this up along the
bottom and right away I see


383
00:17:25,185 --> 00:17:27,346
that I have an error
here in the console.


384
00:17:27,346 --> 00:17:30,356
I can click it, it looks like
undefined is not an object,


385
00:17:30,736 --> 00:17:33,576
I can jump to the debugger,
I even have the error here


386
00:17:33,576 --> 00:17:35,046
in the side-bar, I can click it,


387
00:17:35,046 --> 00:17:37,506
it'll take me right
to the line of code.


388
00:17:37,936 --> 00:17:39,136
Let's take a look at this.


389
00:17:39,226 --> 00:17:42,216
Somewhere in this line of code
I'm seeing an undefined value


390
00:17:42,216 --> 00:17:43,116
where I don't expect it.


391
00:17:43,376 --> 00:17:45,336
Now typically what I would do
is I would set a break point


392
00:17:45,336 --> 00:17:48,406
and maybe spend some time
debugging but I don't have time


393
00:17:48,406 --> 00:17:50,086
for that, instead I
think I'm just going


394
00:17:50,086 --> 00:17:51,966
to enable the type
profiling to see if maybe


395
00:17:51,966 --> 00:17:54,526
that can tell me
where my error is.


396
00:17:54,526 --> 00:17:57,356
I'm going to click this T
to enable type profiling


397
00:17:57,356 --> 00:17:58,516
and I'm going to
reload the site.


398
00:18:08,816 --> 00:18:10,306
Great, so there's my error.


399
00:18:11,196 --> 00:18:12,656
And now my source
code is annotated


400
00:18:12,656 --> 00:18:13,666
with these helpful pills


401
00:18:13,666 --> 00:18:15,616
that tell me the types
of all my variables.


402
00:18:15,616 --> 00:18:17,406
Let's just see if we can
quickly work this out.


403
00:18:17,806 --> 00:18:21,416
I have galleries,
which is an array.


404
00:18:22,366 --> 00:18:24,486
I have current gallery
which is an imager.


405
00:18:24,566 --> 00:18:27,836
The result of that
shouldn't be undefined


406
00:18:27,836 --> 00:18:30,516
but I initialized
galleries up here,


407
00:18:30,516 --> 00:18:32,486
and one of the things I'm
noticing is that the body


408
00:18:32,486 --> 00:18:33,786
of my four loop is grayed out,


409
00:18:33,786 --> 00:18:36,376
that means that code hasn't
been covered, and it looks


410
00:18:36,376 --> 00:18:39,256
like that's because gallery
data itself is undefined.


411
00:18:39,586 --> 00:18:40,886
That's somewhat unexpected,


412
00:18:40,886 --> 00:18:43,326
I should be passing a
valid gallery data in here.


413
00:18:43,906 --> 00:18:47,776
Gallery data itself comes from
this variable, this.options,


414
00:18:48,236 --> 00:18:49,986
let's take a look
at where I set that.


415
00:18:50,116 --> 00:18:51,486
I do that up in my constructer


416
00:18:51,486 --> 00:18:53,106
for navigation galleries
controller.


417
00:18:53,716 --> 00:18:55,846
And it does look like I'm
passing a valid object


418
00:18:55,846 --> 00:18:58,466
to the constructer, I see
the object pill right there.


419
00:18:58,466 --> 00:19:02,296
I'm not passing a null or
some other kind of type.


420
00:19:02,486 --> 00:19:05,366
Let's find where I construct
navigation galleries controller


421
00:19:05,366 --> 00:19:07,416
and see if that tells
me what my mistake is.


422
00:19:07,866 --> 00:19:10,626
I'm going to just copy this.


423
00:19:10,756 --> 00:19:13,506
I'm going to use Web Inspectors'
global search and I can get


424
00:19:13,506 --> 00:19:15,796
to that by command-shift-F
and it will search all


425
00:19:15,796 --> 00:19:17,416
of the resources in the site.


426
00:19:17,916 --> 00:19:20,436
And I have exactly one place


427
00:19:20,436 --> 00:19:22,766
where I have a navigation
gallery controller,


428
00:19:23,146 --> 00:19:25,586
it's right here and I
immediately spot my mistake.


429
00:19:25,586 --> 00:19:28,176
I was expecting to pass an
object that had gallery data


430
00:19:28,176 --> 00:19:30,796
as a property, instead I'm just
passing gallery data directly.


431
00:19:30,796 --> 00:19:31,776
Let's fix that real quick.


432
00:19:32,306 --> 00:19:35,426
I can use the convenient
ES6 shorthand syntax


433
00:19:35,426 --> 00:19:36,986
for declaring a new
object that's going


434
00:19:36,986 --> 00:19:39,476
to have both the property
name as gallery data


435
00:19:39,476 --> 00:19:44,096
and also the value as
gallery data's value.


436
00:19:44,096 --> 00:19:44,926
I made that change.


437
00:19:44,926 --> 00:19:46,056
When I'm editing local files


438
00:19:46,056 --> 00:19:49,566
in Web Inspector I can
save those changes directly


439
00:19:49,726 --> 00:19:51,866
and Web Inspector will prompt me
just to make sure I really want


440
00:19:51,866 --> 00:19:54,706
to over ride a local file and
of course, I do in this case.


441
00:19:55,146 --> 00:19:57,596
Once you do that once for a
file, it'll never ask you again,


442
00:19:57,596 --> 00:19:58,546
it'll just save directly.


443
00:19:59,036 --> 00:20:00,686
Let me reload, and
see if that worked.


444
00:20:01,756 --> 00:20:03,786
There we go, so now I have
my beautiful photography


445
00:20:03,786 --> 00:20:05,226
that I totally took myself.


446
00:20:05,226 --> 00:20:06,736
This is looking really great.


447
00:20:07,506 --> 00:20:11,046
You can see that I have these
galleries, I've laid them


448
00:20:11,046 --> 00:20:13,206
out so they take up the
full width of the display,


449
00:20:13,206 --> 00:20:16,086
I can hover over them to see
the name of the galleries


450
00:20:16,086 --> 00:20:19,086
and I also have this logo in
the middle I can hover over that


451
00:20:19,086 --> 00:20:21,466
to see a menu that comes out
to the side and you'll notice


452
00:20:21,466 --> 00:20:23,816
that occasionally these
galleries rotate between photos


453
00:20:24,056 --> 00:20:25,696
and I have a nice
dissolve effect to go


454
00:20:25,696 --> 00:20:26,536
from one to the other.


455
00:20:26,636 --> 00:20:30,736
I want to make sure that
this transition is as smooth


456
00:20:30,736 --> 00:20:34,546
and as efficient as possible so
hopefully some of these tools


457
00:20:34,546 --> 00:20:36,406
that Jono told us about
will help me do that.


458
00:20:36,716 --> 00:20:38,536
The first thing I
want to do is I want


459
00:20:38,536 --> 00:20:39,456
to turn on paint flashing.


460
00:20:39,456 --> 00:20:41,256
I'm going to go to
the elements tab


461
00:20:41,656 --> 00:20:45,046
and the paintbrush tab is
here, I'll select that.


462
00:20:45,906 --> 00:20:47,976
Now you can see the
red rectangles


463
00:20:47,976 --> 00:20:50,406
as the images transition
from one image to the next.


464
00:20:50,406 --> 00:20:52,256
The first thing I'm noticing
is that for the duration


465
00:20:52,256 --> 00:20:54,426
of that transition, I see
a solid red rectangle,


466
00:20:54,786 --> 00:20:57,766
that indicates to me that I'm
probably painting every single


467
00:20:57,766 --> 00:20:58,826
frame of the transition.


468
00:20:59,326 --> 00:21:01,856
Now, I wonder if
that's too expensive?


469
00:21:02,636 --> 00:21:03,916
What I'd like to use
is use the I want


470
00:21:03,916 --> 00:21:05,736
to use the frames timeline


471
00:21:05,736 --> 00:21:08,806
to tell me whether I'm
doing too much work


472
00:21:08,806 --> 00:21:10,876
and maybe blowing my budget


473
00:21:10,876 --> 00:21:12,656
for a 60 frames per
second animation.


474
00:21:12,696 --> 00:21:14,286
I can switch to the
timelines tab.


475
00:21:15,336 --> 00:21:18,436
And I can see that when I
reloaded it automatically


476
00:21:18,466 --> 00:21:21,246
recorded a timeline for me so
I don't need to do that again.


477
00:21:21,596 --> 00:21:23,956
For the most part, you know,
this is looking really good.


478
00:21:23,956 --> 00:21:26,806
It's looking like I'm staying
within 60 frames per second.


479
00:21:26,806 --> 00:21:29,406
But there were some frames
here that exceeded my budget


480
00:21:29,406 --> 00:21:30,326
like this one right here.


481
00:21:30,496 --> 00:21:33,066
I can click and drag to
select a subset of this


482
00:21:33,126 --> 00:21:36,566
and then you can see that
it filters the records tab


483
00:21:36,656 --> 00:21:37,896
to just include that subset.


484
00:21:38,206 --> 00:21:42,326
I can expand some of these and
see the work that was done,


485
00:21:42,326 --> 00:21:44,136
style and validation,
recalculation,


486
00:21:45,446 --> 00:21:48,006
time refiring, things like that.


487
00:21:49,386 --> 00:21:50,926
Here's one that's interesting.


488
00:21:51,596 --> 00:21:53,846
It's telling me that an
animation frame is fired based


489
00:21:53,846 --> 00:21:56,856
on request animation
frame, it's even telling me


490
00:21:56,856 --> 00:21:58,826
that I've invalidated
a style and it's going


491
00:21:58,826 --> 00:22:01,046
to let me jump right
to that line that did


492
00:22:01,046 --> 00:22:02,176
that style invalidation.


493
00:22:02,276 --> 00:22:03,946
That's right here.


494
00:22:04,356 --> 00:22:09,336
In fact, the way this animation
is working is I'm using request


495
00:22:09,336 --> 00:22:13,046
animation frame and each frame
I'm running with a duration


496
00:22:13,046 --> 00:22:16,276
of one second, I can even pause
here and inspect these values.


497
00:22:16,706 --> 00:22:18,196
Running for a duration
of one second


498
00:22:18,196 --> 00:22:20,976
and I'm just animating the
opacity value from zero to one


499
00:22:21,026 --> 00:22:23,596
over that duration
of one second.


500
00:22:23,596 --> 00:22:25,386
It looks like, at
least in some cases,


501
00:22:25,386 --> 00:22:28,086
this animation is
too expensive to stay


502
00:22:28,086 --> 00:22:29,956
within my 60 frames
per second budget.


503
00:22:30,326 --> 00:22:32,316
I've actually been
planning to transition this


504
00:22:32,316 --> 00:22:33,446
to a CSS transition instead


505
00:22:33,446 --> 00:22:34,686
which I think might
be more efficient.


506
00:22:35,016 --> 00:22:38,406
Let's do that and see if
things get a little better.


507
00:22:38,406 --> 00:22:39,456
I'll select this.


508
00:22:39,456 --> 00:22:45,146
I still want to set this
current class on the image


509
00:22:45,146 --> 00:22:46,116
and I'll talk about that later.


510
00:22:46,116 --> 00:22:48,296
I want to comment
out the rest of this.


511
00:22:48,296 --> 00:22:50,696
I can save that local resource.


512
00:22:50,696 --> 00:22:52,446
I'll confirm that.


513
00:22:52,666 --> 00:22:56,756
Let's go to the elements
tab and I can use the picker


514
00:22:56,756 --> 00:22:57,836
to select one of
these galleries.


515
00:22:57,836 --> 00:22:58,606
I'll choose this one.


516
00:22:59,426 --> 00:23:02,116
Down here we can see that
there are three images


517
00:23:02,116 --> 00:23:03,496
that are stacked on
top of each other.


518
00:23:03,776 --> 00:23:05,966
The one with the
current class right here,


519
00:23:05,966 --> 00:23:08,586
is the one that's
currently being displayed.


520
00:23:09,386 --> 00:23:12,346
In the side-bar I can actually
see what style properties


521
00:23:12,346 --> 00:23:13,186
that current class has.


522
00:23:13,186 --> 00:23:15,306
Right now it is Z index 3.


523
00:23:16,006 --> 00:23:18,686
Let's add some more
properties here.


524
00:23:18,686 --> 00:23:20,746
For one I want to
animate its opacity --


525
00:23:20,816 --> 00:23:22,946
or I want to set its
opacity to one then I want


526
00:23:22,946 --> 00:23:26,066
to use a transition
to animate opacity


527
00:23:26,606 --> 00:23:29,346
over one second using a
linear animation curve.


528
00:23:30,626 --> 00:23:32,836
I'm going to make those changes.


529
00:23:32,836 --> 00:23:44,636
I'm going to save again and
I'm going to reload the page.


530
00:23:44,846 --> 00:23:47,186
Great. Right away you can see


531
00:23:47,186 --> 00:23:49,306
that there is almost no
flashing going on here.


532
00:23:49,306 --> 00:23:51,446
There is an occasional flash
in the beginning and the end,


533
00:23:51,746 --> 00:23:53,756
but for the rest of the time
there is no flashing whatsoever.


534
00:23:53,756 --> 00:23:56,606
That indicates I've gone from
doing software compositing


535
00:23:56,606 --> 00:24:00,026
in my request animation frame
code to letting the engine do --


536
00:24:00,026 --> 00:24:03,836
to composite the opacity
and hardware which is going


537
00:24:03,836 --> 00:24:05,816
to be a much faster,
smoother experience.


538
00:24:06,286 --> 00:24:09,056
This is looking pretty good but
I'm actually seeing a problem.


539
00:24:09,056 --> 00:24:12,256
I did see one frame animate but
then none of the others did.


540
00:24:12,476 --> 00:24:15,346
It looks like I might have
introduced some sort of bug.


541
00:24:15,406 --> 00:24:18,036
Let's see if we can
figure out what that is.


542
00:24:18,036 --> 00:24:21,756
I happen to know that
in my code I am --


543
00:24:22,676 --> 00:24:25,946
that there's show
next image right here.


544
00:24:26,256 --> 00:24:27,896
Show next image returns
a promise --


545
00:24:28,706 --> 00:24:33,406
let me reload so we can
actually hit my break point.


546
00:24:33,576 --> 00:24:36,166
Show next image is going
to return a promise,


547
00:24:36,166 --> 00:24:39,186
when the promise is
resolved I'm start a timeout


548
00:24:39,416 --> 00:24:40,486
for the next animation.


549
00:24:40,776 --> 00:24:44,926
We can even log the promise
here, show next image


550
00:24:45,096 --> 00:24:48,236
and it is going to tell me
that the state is pending.


551
00:24:48,376 --> 00:24:49,986
This may not be surprising
that it is pending


552
00:24:49,986 --> 00:24:51,126
because I'm pausing
the debugger,


553
00:24:51,126 --> 00:24:53,406
I might not have let the code
that will eventually resolve


554
00:24:53,406 --> 00:24:55,826
that promise run, so
let me resume here.


555
00:24:57,246 --> 00:24:59,596
These start animating
every 2 seconds,


556
00:24:59,596 --> 00:25:01,326
and so by now this
promise should be resolved


557
00:25:01,326 --> 00:25:02,346
if everything is
working correctly.


558
00:25:02,566 --> 00:25:04,106
Even though I'm no longer
pausing that function,


559
00:25:04,106 --> 00:25:06,026
I still have that promise
bound to dollar sign 1


560
00:25:06,026 --> 00:25:07,796
so I can just inspect it again.


561
00:25:08,166 --> 00:25:09,456
I can see that it's
still pending.


562
00:25:09,606 --> 00:25:12,386
I actually think I know
the mistake I made.


563
00:25:12,776 --> 00:25:15,946
I'm going to go back
to my animation frame


564
00:25:16,446 --> 00:25:19,176
and I can see here that I was
resolving the promise at the end


565
00:25:19,176 --> 00:25:20,506
of the request animation frame.


566
00:25:20,796 --> 00:25:23,396
The last animation
frame but I'm not doing


567
00:25:23,396 --> 00:25:24,566
that with the CSS transition.


568
00:25:24,566 --> 00:25:25,666
Let me just fix that real quick.


569
00:25:26,226 --> 00:25:32,366
I'll use an on transition end
listener and resolve that.


570
00:25:33,296 --> 00:25:36,406
Let me save that
change and reload.


571
00:25:40,176 --> 00:25:42,086
And of course I hit
my brake point again.


572
00:25:42,146 --> 00:25:46,566
So let me reload again.


573
00:25:46,746 --> 00:25:50,136
Great. Now we see these
smooth hardware accelerated


574
00:25:50,616 --> 00:25:53,616
transitions, everything
seems to be looking great.


575
00:25:53,616 --> 00:25:57,106
We can see how we can use
these powerful features


576
00:25:57,106 --> 00:25:59,786
like type profiling,
paint flashing,


577
00:25:59,786 --> 00:26:01,826
Rendering Frames
timeline, improved console,


578
00:26:01,826 --> 00:26:04,936
improved debugging to
quickly identify our issues


579
00:26:04,936 --> 00:26:05,516
and fix them.


580
00:26:05,996 --> 00:26:07,536
Thank you, and back to Jono.


581
00:26:08,516 --> 00:26:13,546
[Applause]


582
00:26:14,046 --> 00:26:15,076
>> JONO WELLS: Thank you, Andy.


583
00:26:15,716 --> 00:26:20,686
So I think you're going
to find really great use


584
00:26:20,686 --> 00:26:21,396
out of this tool.


585
00:26:23,086 --> 00:26:25,736
You're going to want to take the
new features in Web Inspector,


586
00:26:25,736 --> 00:26:28,526
make your site faster, use
the paint flashing tool,


587
00:26:29,226 --> 00:26:31,686
use the rendering frames
timeline and try this in iOS,


588
00:26:31,686 --> 00:26:33,946
this works of course, if
you're connected to a web view,


589
00:26:34,046 --> 00:26:36,866
or Safari on iOS, you
should really try this out.


590
00:26:37,186 --> 00:26:40,506
Performance is particularly
critical on those devices.


591
00:26:41,966 --> 00:26:43,116
Make your code better.


592
00:26:43,406 --> 00:26:47,096
Use the type profiler to get
a lot of great information,


593
00:26:47,156 --> 00:26:49,616
play with the console, play
around with native APIs.


594
00:26:50,776 --> 00:26:53,736
Right. Use these to work
smarter and to work faster.


595
00:26:54,306 --> 00:26:57,566
That's what we have
introduced with Web Inspector.


596
00:26:57,566 --> 00:27:00,956
Now let's go ahead and
talk about a new tool.


597
00:27:01,166 --> 00:27:03,236
It is called Responsive
Design Mode.


598
00:27:03,236 --> 00:27:05,286
It is new in this
release of Safari 9


599
00:27:05,956 --> 00:27:09,366
and we'll show you what
it is in just a moment.


600
00:27:09,536 --> 00:27:12,366
First I want to talk about
responsive design for a moment


601
00:27:12,366 --> 00:27:14,286
and why it is particularly
important now.


602
00:27:14,286 --> 00:27:17,576
I'm sure most of you know
what responsive design is,


603
00:27:18,116 --> 00:27:23,006
it is making sure that your
content will automatically fit


604
00:27:23,006 --> 00:27:26,356
and give a great experience
for any screen size.


605
00:27:26,956 --> 00:27:29,046
It is particularly important
that you do this correctly.


606
00:27:29,836 --> 00:27:33,856
Now, up until this point some
of you may have said, well,


607
00:27:33,856 --> 00:27:38,416
I can just, you know, sniff the
user agent string, I can figure


608
00:27:38,416 --> 00:27:39,816
out what kind of device I'm on.


609
00:27:40,036 --> 00:27:42,256
I know that I'm running a
web view inside of an app,


610
00:27:42,256 --> 00:27:44,156
I know exactly what
devices I'm targeting.


611
00:27:44,466 --> 00:27:45,196
So I don't really need


612
00:27:45,196 --> 00:27:49,446
to do responsive design
the way it was meant to be.


613
00:27:49,686 --> 00:27:51,856
We've made that a bit
trickier for you now


614
00:27:52,666 --> 00:27:56,056
because of multitasking.


615
00:27:56,056 --> 00:27:58,956
Now web views might be resizing,


616
00:27:58,956 --> 00:28:01,876
you don't exactly know how
wide they're going to be


617
00:28:01,876 --> 00:28:07,966
and they're going to be resizing
without reloading your content.


618
00:28:08,786 --> 00:28:12,146
Right. We want to instead
of targeting a device,


619
00:28:12,396 --> 00:28:14,996
we want to make sure we're
using features like @supports,


620
00:28:15,256 --> 00:28:17,746
media queries, source set,


621
00:28:17,926 --> 00:28:22,876
serving different pixel
resolution images to your users,


622
00:28:22,876 --> 00:28:25,356
we want to make sure that
our content will stretch


623
00:28:25,356 --> 00:28:26,626
to any screen.


624
00:28:26,816 --> 00:28:29,246
To help you do that
without having to go,


625
00:28:29,246 --> 00:28:32,116
and open up the iOS simulator
and play around, we have brought


626
00:28:32,116 --> 00:28:35,366
to you a new tool that going
to help you test your layouts


627
00:28:35,366 --> 00:28:38,696
and just make sure that
they're properly responsive


628
00:28:38,696 --> 00:28:40,966
and give you some ways
to test them in the sizes


629
00:28:40,966 --> 00:28:42,176
for our devices as well.


630
00:28:42,356 --> 00:28:43,706
That's Responsive Design Mode.


631
00:28:44,236 --> 00:28:47,786
You can find it in the develop
menu and when you turn it on,


632
00:28:47,786 --> 00:28:50,686
your content will
shrink to this view.


633
00:28:51,536 --> 00:28:52,826
This is Responsive Design Mode.


634
00:28:53,106 --> 00:28:55,526
It has a few interesting
features and the first one,


635
00:28:55,726 --> 00:28:58,916
we have handles on the side so
you can stretch your content


636
00:28:59,166 --> 00:29:01,116
as small or as big
as you want to.


637
00:29:01,116 --> 00:29:05,596
It will actually automatically
scale so if you want


638
00:29:05,816 --> 00:29:07,156
to simulate your content


639
00:29:07,306 --> 00:29:11,476
on a giant 70-inch display
let's say, you can do that.


640
00:29:12,576 --> 00:29:18,466
We also built in navigation with
presets for all of our devices


641
00:29:18,546 --> 00:29:21,966
so that you can automatically
set it to different screens.


642
00:29:21,966 --> 00:29:24,826
We actually have built in all
the multitasking configurations


643
00:29:24,826 --> 00:29:28,676
in here as well, as you
will see in a moment.


644
00:29:28,676 --> 00:29:31,936
For the iPads that are up there,
you can click, it will show you,


645
00:29:31,936 --> 00:29:33,776
it'll automatically
resize your content


646
00:29:33,956 --> 00:29:37,356
to those configurations
We also allow you to test


647
00:29:37,356 --> 00:29:40,506
to make sure you're covering
1X, 2X, and 3X images.


648
00:29:42,106 --> 00:29:44,116
Additionally, we
do give you a tool


649
00:29:44,116 --> 00:29:46,906
to set the user agent string
because you might need


650
00:29:46,906 --> 00:29:49,666
to support a very old
browser, legacy browser


651
00:29:49,846 --> 00:29:52,986
and make sure you get away
from using user agent strings


652
00:29:53,196 --> 00:29:56,586
to target the different screens
that your concept will run on.


653
00:29:57,136 --> 00:29:58,366
Right. To be forward thinking.


654
00:29:58,576 --> 00:29:59,736
This tool will help
you make sure


655
00:29:59,736 --> 00:30:01,286
that you don't break anything


656
00:30:01,286 --> 00:30:03,396
when the user agent string
changes and make sure


657
00:30:03,396 --> 00:30:05,456
that you have properly gotten
away from that as well.


658
00:30:06,246 --> 00:30:08,716
Now to show you this tool in
action and how it can be useful,


659
00:30:08,716 --> 00:30:11,106
I would like to bring
Andy back up to the stage


660
00:30:11,286 --> 00:30:13,346
to take his site a
little bit further.


661
00:30:13,386 --> 00:30:13,666
Andy.


662
00:30:14,516 --> 00:30:17,806
[Applause]


663
00:30:18,306 --> 00:30:19,046
>> ANDY ESTES: Thank
you, again, Jono.


664
00:30:20,086 --> 00:30:22,436
Let's just jump right in
to Responsive Design Mode.


665
00:30:26,256 --> 00:30:27,756
Here we are.


666
00:30:27,756 --> 00:30:31,206
I currently have a preset
set for the iPad mini 3.


667
00:30:31,206 --> 00:30:34,096
Let's also explore some
of these desktop sizes.


668
00:30:34,096 --> 00:30:36,196
One of the great things about
this is I can actually size it


669
00:30:36,616 --> 00:30:38,396
to a resolution larger
than my monitor.


670
00:30:38,716 --> 00:30:43,446
Right now you can see that I
have a width of 2536 pixels


671
00:30:43,446 --> 00:30:45,126
which is definitely
larger than this monitor.


672
00:30:45,126 --> 00:30:48,836
So that's useful, but I already
knew that my site looked good


673
00:30:49,016 --> 00:30:50,966
on desktop Viewport sizes.


674
00:30:51,266 --> 00:30:53,386
I want to make sure that
everything works well


675
00:30:53,436 --> 00:30:56,966
on iOS devices as well, iPhones
and iPads, I can click these


676
00:30:56,966 --> 00:30:57,966
and quickly cycle through,


677
00:30:57,966 --> 00:31:00,166
here is an iPad error
in landscape mode.


678
00:31:00,166 --> 00:31:03,026
Here are some of the
multitasking modes.


679
00:31:03,206 --> 00:31:07,796
If I keep going it'll rotate
to portrait and I can also look


680
00:31:07,796 --> 00:31:08,996
at the multitasking modes there.


681
00:31:09,356 --> 00:31:11,026
I'm starting to notice
that in some


682
00:31:11,026 --> 00:31:13,916
of these configurations
my site --


683
00:31:13,916 --> 00:31:16,456
the Viewport is really
too narrow to be useful.


684
00:31:16,756 --> 00:31:18,846
For example, I really can't
see much of these photos


685
00:31:18,846 --> 00:31:20,976
if I rollover this menu,
the text is clipped.


686
00:31:20,976 --> 00:31:22,956
This isn't a really
good experience.


687
00:31:22,956 --> 00:31:25,236
Let's see if I can make
some changes to make this --


688
00:31:25,236 --> 00:31:28,736
make my site more responsive
at these types of Viewports.


689
00:31:28,776 --> 00:31:30,656
I'm going to bring the Web
Inspector back up again.


690
00:31:30,656 --> 00:31:31,986
One of the great things
about this tool is


691
00:31:31,986 --> 00:31:33,646
that you can use the
Inspector in conjunction


692
00:31:34,106 --> 00:31:35,226
with Responsive Design Mode.


693
00:31:35,226 --> 00:31:36,176
Let's dock it on the side


694
00:31:36,596 --> 00:31:38,386
so that I have more
screen real estate here.


695
00:31:39,146 --> 00:31:40,556
Let's turn off the
paint flashing


696
00:31:41,236 --> 00:31:45,056
which is annoying at this point.


697
00:31:45,056 --> 00:31:46,476
Let's do a few quick changes.


698
00:31:46,476 --> 00:31:48,496
First off, let's get rid
of this logo in the middle


699
00:31:48,496 --> 00:31:51,136
since the menu doesn't
have room to fit,


700
00:31:51,136 --> 00:31:52,656
I don't think it's
worth displaying


701
00:31:52,656 --> 00:31:57,666
and I also show the names of the
galleries on hover so let's set


702
00:31:57,666 --> 00:31:58,736
that to display non-grade.


703
00:31:58,736 --> 00:32:01,046
In terms of these images,


704
00:32:01,046 --> 00:32:03,176
I have so little screen real
estate I'd really like them


705
00:32:03,176 --> 00:32:05,816
to take up the entire Viewport.


706
00:32:05,876 --> 00:32:09,806
Right now I'm specifying
that they are using 50%


707
00:32:09,806 --> 00:32:12,136
of the Viewport width and
height, let's make that 100.


708
00:32:12,656 --> 00:32:18,716
Great. So now I have just
one gallery per screen


709
00:32:18,716 --> 00:32:19,536
which is really nice.


710
00:32:19,536 --> 00:32:22,416
Now you'll notice I have these
hover effects which works great


711
00:32:22,416 --> 00:32:24,766
on a desktop but on iOS
devices you won't have hover


712
00:32:25,086 --> 00:32:26,786
and I also don't have my
menu it would be great


713
00:32:26,786 --> 00:32:28,186
if this text is just
always there.


714
00:32:28,586 --> 00:32:30,476
Let's explore doing that.


715
00:32:30,846 --> 00:32:35,086
I'm going to enable the
hover pseudo class here.


716
00:32:35,086 --> 00:32:36,646
You see that it displayed.


717
00:32:36,946 --> 00:32:38,426
There are a few things
that happen on hover.


718
00:32:38,426 --> 00:32:41,936
The first is that the
UI is capacity one,


719
00:32:42,086 --> 00:32:43,566
but let's just make
that always happen.


720
00:32:44,666 --> 00:32:47,126
Second, you will notice
there is an overlay


721
00:32:47,126 --> 00:32:49,426
that goes to opacity 0.


722
00:32:49,806 --> 00:32:52,456
Let's just make it
always opacity 0.


723
00:32:52,456 --> 00:32:58,426
I have my labels all the
time which is what I want.


724
00:32:58,786 --> 00:33:01,506
One more change I want to
make, I went to the What's New


725
00:33:01,506 --> 00:33:03,396
in WebKit session
yesterday and I learned


726
00:33:03,396 --> 00:33:05,306
about this new feature
called Scroll Snap Points,


727
00:33:05,306 --> 00:33:07,916
and I would love it if as I
scroll through the galleries


728
00:33:07,966 --> 00:33:11,976
if it snapped exactly
to each gallery.


729
00:33:12,236 --> 00:33:14,396
I'll try to add that real
quick, I'm going to the body tag


730
00:33:15,006 --> 00:33:20,936
and I'll do a WebKit scroll
snap type, make it mandatory


731
00:33:21,206 --> 00:33:24,426
and then I'll do WebKit
scroll snap points


732
00:33:24,426 --> 00:33:27,776
and in the wide direction
I'll repeat every Viewport.


733
00:33:29,506 --> 00:33:30,646
Let's look at that.


734
00:33:31,866 --> 00:33:33,546
Perfect. Beautiful,
it just snaps right


735
00:33:33,546 --> 00:33:34,376
into place as I scroll.


736
00:33:34,376 --> 00:33:35,526
I really like that.


737
00:33:36,006 --> 00:33:38,186
There is a number of other
changes that I have decided


738
00:33:38,186 --> 00:33:40,896
to make, and I have actually
baked these into a media query


739
00:33:41,436 --> 00:33:42,316
that I've added right here.


740
00:33:42,786 --> 00:33:47,966
I'll just uncomment that and
save it then reload my site.


741
00:33:48,656 --> 00:33:50,686
You can see I added a little
text scroll to see more


742
00:33:50,686 --> 00:33:51,616
at the bottom, which is nice.


743
00:33:51,616 --> 00:33:53,056
I moved my icon to
the upper right,


744
00:33:53,056 --> 00:33:54,086
it doesn't bring up a menu.


745
00:33:54,486 --> 00:33:56,366
And now with these settings --


746
00:33:56,366 --> 00:33:58,806
this is looking good
at this Viewport,


747
00:33:58,806 --> 00:34:01,256
let's make sure things work
well at other Viewports.


748
00:34:01,296 --> 00:34:03,926
If I go to the wider size, I
still get my original design,


749
00:34:04,266 --> 00:34:05,796
and then as I go down
to smaller sizes,


750
00:34:05,796 --> 00:34:09,275
I see the narrow Viewport
responsive design.


751
00:34:09,335 --> 00:34:10,266
This is great.


752
00:34:10,266 --> 00:34:13,275
It is really easy to use
this tool in conjunction


753
00:34:13,275 --> 00:34:15,466
with the Web Inspector to
see how your contents look


754
00:34:15,466 --> 00:34:16,576
at different Viewport sizes


755
00:34:16,856 --> 00:34:19,656
and make quick changes
to effect the design.


756
00:34:20,036 --> 00:34:21,326
Thank you, and back to Jono.


757
00:34:22,516 --> 00:34:28,956
[Applause]


758
00:34:29,456 --> 00:34:30,806
>> JONO WELLS: All right.


759
00:34:31,295 --> 00:34:35,186
Andy, thank you for
showing us that.


760
00:34:35,545 --> 00:34:36,926
That's Responsive Design Mode.


761
00:34:37,496 --> 00:34:43,686
If you're not doing responsive
design for the content


762
00:34:43,686 --> 00:34:45,616
of your applications or
for your web content,


763
00:34:45,616 --> 00:34:46,775
now is the time to start.


764
00:34:47,226 --> 00:34:50,386
It is a good idea
because, again,


765
00:34:50,485 --> 00:34:52,735
something like multitasking
just come out of nowhere just


766
00:34:52,735 --> 00:34:54,446
like that and mess
your content up.


767
00:34:54,446 --> 00:34:56,096
You don't want that to happen.


768
00:34:56,126 --> 00:34:57,506
We have added Responsive
Design Mode.


769
00:34:57,506 --> 00:35:01,686
The focus is on layout, image
resolution and being able


770
00:35:01,686 --> 00:35:05,356
to stay focused in Safari
in the Development Tools


771
00:35:05,606 --> 00:35:09,466
so you don't have to leave and
go off to simulator or a plug-in


772
00:35:09,466 --> 00:35:11,526
of an actual device
to test your layouts.


773
00:35:11,936 --> 00:35:14,136
We have all the presets
for the devices we make,


774
00:35:14,136 --> 00:35:16,076
you can set your own
presets as you saw,


775
00:35:16,506 --> 00:35:19,046
it works right alongside Web
Inspector so you can debug


776
00:35:19,046 --> 00:35:20,056
as you normally would.


777
00:35:20,566 --> 00:35:22,146
This is new in Safari 9.


778
00:35:22,746 --> 00:35:24,446
It is a really cool tool.


779
00:35:24,586 --> 00:35:28,396
Try it out.


780
00:35:30,556 --> 00:35:35,536
Along with Web Inspector you
now have a very powerful set


781
00:35:35,536 --> 00:35:39,566
of tools to take your designs,
make them smooth, feel great,


782
00:35:39,676 --> 00:35:41,766
make sure that they're
error free and make sure


783
00:35:41,906 --> 00:35:44,966
that they work across
different screen sizes.


784
00:35:45,646 --> 00:35:52,166
When you leave here please
-- first of all, get OS X,


785
00:35:52,256 --> 00:35:54,326
El Capitan, get the
developer release,


786
00:35:54,616 --> 00:35:55,786
if you don't have it already,


787
00:35:55,786 --> 00:35:57,566
turn on the develop
menu in Safari.


788
00:35:59,236 --> 00:36:02,656
Customize Web Inspector to your
liking, play with the interface,


789
00:36:02,656 --> 00:36:04,096
because I think you're
really going to like it.


790
00:36:04,096 --> 00:36:06,676
It is a lot cleaner, everything
is a lot easier to find.


791
00:36:07,136 --> 00:36:08,786
Play around with paint flashing


792
00:36:08,786 --> 00:36:10,146
and the rendering
frames timeline.


793
00:36:10,596 --> 00:36:12,786
Even if you think that you
have the best performance


794
00:36:12,886 --> 00:36:15,676
that web content has ever had in
the history of all web content,


795
00:36:16,516 --> 00:36:18,466
this will tell you
something about your site


796
00:36:18,676 --> 00:36:21,766
and how it is working on WebKit,
how it's working in Safari,


797
00:36:22,336 --> 00:36:25,546
right, and you might discover
something you didn't know.


798
00:36:26,556 --> 00:36:29,066
Right. The second I use paint
flashing for the first time


799
00:36:29,066 --> 00:36:30,516
for instance I had a site,


800
00:36:30,516 --> 00:36:32,376
I discovered I had
some painting happening


801
00:36:32,376 --> 00:36:33,436
in the background I didn't want


802
00:36:33,436 --> 00:36:35,796
that was stuttering the
animation for everything else,


803
00:36:35,796 --> 00:36:36,896
I was able to eliminate it.


804
00:36:37,136 --> 00:36:38,156
It just happened immediately.


805
00:36:38,156 --> 00:36:38,686
It was great.


806
00:36:39,356 --> 00:36:41,106
Use the type information
profiler.


807
00:36:42,306 --> 00:36:44,386
Right. Take -- we're going to --


808
00:36:44,386 --> 00:36:46,566
this tool, it takes all
of the code, makes it look


809
00:36:46,566 --> 00:36:48,906
like a light bright board if you
ever played with one of those.


810
00:36:48,906 --> 00:36:51,176
It's amazing, it's going to
give you great information.


811
00:36:51,446 --> 00:36:52,036
Play with that.


812
00:36:52,156 --> 00:36:54,446
Play in the console
with the object views,


813
00:36:54,656 --> 00:36:56,306
try Responsive Design Mode.


814
00:36:56,306 --> 00:37:02,746
With all of these tools, use
them to make your content shine.


815
00:37:03,656 --> 00:37:08,006
Now, it is really important
that we get feedback from you.


816
00:37:08,226 --> 00:37:11,716
We very much want your feedback
on these new tools and so


817
00:37:11,776 --> 00:37:18,566
for that, you should send
questions or ideas to Jon Davis,


818
00:37:18,566 --> 00:37:20,136
he's our web evangelist
and you can reach him


819
00:37:20,136 --> 00:37:22,596
at web-evangelist@apple.com.


820
00:37:23,056 --> 00:37:26,756
We also have these
resources here for information


821
00:37:26,756 --> 00:37:29,876
on developing with Safari,
resources for Safari developers


822
00:37:29,876 --> 00:37:31,686
and the Safari developer
library.


823
00:37:32,486 --> 00:37:35,176
In the second link right now
there is a document called


824
00:37:35,176 --> 00:37:36,416
What's New in Safari 9.


825
00:37:36,416 --> 00:37:37,266
To learn more about
these features,


826
00:37:37,296 --> 00:37:37,956
plus all of the new features


827
00:37:37,986 --> 00:37:39,186
on the platform itself
you'll definitely want


828
00:37:39,216 --> 00:37:39,906
to check out that document.


829
00:37:39,936 --> 00:37:41,436
Also, we have two labs coming
up for Safari and WebKit,


830
00:37:41,466 --> 00:37:42,606
we have win right after
this session and Andy


831
00:37:42,636 --> 00:37:44,226
and I will be there along with
many developers and engineers


832
00:37:44,256 --> 00:37:45,696
on the Safari and WebKit team
to answer your questions.


833
00:37:45,726 --> 00:37:46,686
There is another one
on Friday at noon.


834
00:37:46,716 --> 00:37:47,256
Please come, check it out.


835
00:37:47,286 --> 00:37:48,516
We'll answer questions,
get help for the content.


836
00:37:48,546 --> 00:37:49,656
I hope you enjoy the
rest of your conference.


837
00:37:49,686 --> 00:37:50,976
Thank you very much for
being with us this morning.


838
00:37:51,516 --> 00:37:54,500
[Applause]

