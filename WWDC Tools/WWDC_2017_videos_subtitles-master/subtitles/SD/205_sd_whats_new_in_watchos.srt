1
00:00:07,516 --> 00:00:19,676
[ Background Sounds ]


2
00:00:20,176 --> 00:00:20,616
>> Good morning.


3
00:00:21,296 --> 00:00:22,156
Thank you all for coming.


4
00:00:23,086 --> 00:00:24,206
My name is Ian Parks.


5
00:00:25,656 --> 00:00:25,946
[Applause] Thank you.


6
00:00:26,516 --> 00:00:28,566
[ Applause ]


7
00:00:29,066 --> 00:00:30,216
My name is Ian Parks and I work


8
00:00:30,216 --> 00:00:31,456
on the watchOS software team.


9
00:00:32,076 --> 00:00:33,266
I'm really excited to tell you


10
00:00:33,266 --> 00:00:35,416
what's new in watchOS 4 and what


11
00:00:35,416 --> 00:00:37,086
that's going to mean for you as


12
00:00:37,086 --> 00:00:38,916
developers so you can continue


13
00:00:38,916 --> 00:00:40,666
to deliver fantastic apps on


14
00:00:40,666 --> 00:00:41,346
watchOS.


15
00:00:41,876 --> 00:00:43,426
It's only been two years since


16
00:00:43,426 --> 00:00:44,886
we first released Apple Watch


17
00:00:45,256 --> 00:00:46,516
and the platform has come a long


18
00:00:46,516 --> 00:00:46,766
way.


19
00:00:47,636 --> 00:00:48,796
We're continuing to learn from


20
00:00:48,796 --> 00:00:50,876
our users and how Apple Watch is


21
00:00:50,876 --> 00:00:52,116
continuing to make a difference


22
00:00:52,116 --> 00:00:53,276
in their lives.


23
00:00:53,496 --> 00:00:55,046
And this year we're adding a ton


24
00:00:55,046 --> 00:00:56,796
of new features in watchOS 4.


25
00:00:56,796 --> 00:00:59,886
Like a brand new news app that


26
00:00:59,886 --> 00:01:01,496
lets you browse headlines and


27
00:01:01,496 --> 00:01:02,656
mark the ones you'd like to read


28
00:01:02,656 --> 00:01:03,006
later.


29
00:01:03,006 --> 00:01:05,286
And a totally redesigned music


30
00:01:05,286 --> 00:01:06,896
experience that lets you sync


31
00:01:06,896 --> 00:01:08,956
multiple playlists and it has a


32
00:01:08,956 --> 00:01:10,526
new interface that's both fun


33
00:01:10,526 --> 00:01:11,496
and easy to use.


34
00:01:16,096 --> 00:01:17,246
We were also trying to make


35
00:01:17,366 --> 00:01:18,636
workflows more efficient for


36
00:01:18,636 --> 00:01:20,926
users like being able to access


37
00:01:20,926 --> 00:01:22,556
to the now playing UI right from


38
00:01:22,556 --> 00:01:26,776
inside of a workout as well as


39
00:01:26,776 --> 00:01:28,586
surfacing important information


40
00:01:28,806 --> 00:01:31,026
throughout your day in a new


41
00:01:31,026 --> 00:01:32,086
Siri watch face.


42
00:01:32,626 --> 00:01:35,746
And of course, we're introducing


43
00:01:35,746 --> 00:01:37,036
a ton of new features for


44
00:01:37,036 --> 00:01:38,896
developer so you can continue to


45
00:01:38,896 --> 00:01:40,396
create great watchOS apps.


46
00:01:40,916 --> 00:01:42,686
Now last year we introduced


47
00:01:42,686 --> 00:01:44,736
three guiding principles for how


48
00:01:44,736 --> 00:01:45,746
to create great Watch


49
00:01:45,746 --> 00:01:46,586
experiences.


50
00:01:47,036 --> 00:01:48,356
And we're continuing to pursue


51
00:01:48,356 --> 00:01:50,586
these in our system apps as well


52
00:01:50,586 --> 00:01:51,866
as how we're creating frameworks


53
00:01:51,866 --> 00:01:52,186
for you.


54
00:01:53,146 --> 00:01:54,726
Let's take a moment to look back


55
00:01:54,726 --> 00:01:55,846
at these and see how they're


56
00:01:55,846 --> 00:01:57,466
continuing to drive interactions


57
00:01:57,616 --> 00:01:58,386
in watchOS.


58
00:02:00,416 --> 00:02:01,886
The first is making our app


59
00:02:01,986 --> 00:02:02,566
glanceable.


60
00:02:03,406 --> 00:02:04,976
Interactions on Apple Watch are


61
00:02:04,976 --> 00:02:05,686
very short.


62
00:02:05,826 --> 00:02:07,486
And the screen size is much


63
00:02:07,486 --> 00:02:08,996
smaller than on other platforms.


64
00:02:08,996 --> 00:02:11,136
So we need to carefully consider


65
00:02:11,136 --> 00:02:13,126
what information to present on


66
00:02:13,126 --> 00:02:15,296
the UI and make sure that it's


67
00:02:15,376 --> 00:02:16,796
well designed information so the


68
00:02:16,796 --> 00:02:19,206
user can quickly absorb and


69
00:02:19,356 --> 00:02:20,526
respond to the information.


70
00:02:27,046 --> 00:02:28,766
And the second is making the


71
00:02:28,766 --> 00:02:29,886
information actionable.


72
00:02:29,986 --> 00:02:32,306
And what we mean by this is


73
00:02:32,336 --> 00:02:34,236
bringing pieces that the user


74
00:02:34,236 --> 00:02:36,126
can respond to either within the


75
00:02:36,126 --> 00:02:37,986
application like changing a


76
00:02:37,986 --> 00:02:40,146
music track or sometimes in


77
00:02:40,146 --> 00:02:41,096
their current surroundings.


78
00:02:41,776 --> 00:02:42,916
A quick glance at weather


79
00:02:42,916 --> 00:02:44,156
conditions, for example, can


80
00:02:44,156 --> 00:02:45,166
tell me whether or not I need to


81
00:02:45,166 --> 00:02:46,566
pick up an umbrella on my way


82
00:02:46,566 --> 00:02:48,646
out the door but actionable


83
00:02:48,646 --> 00:02:50,096
information can also come in the


84
00:02:50,096 --> 00:02:51,226
form of audio too.


85
00:02:52,146 --> 00:02:54,896
For instance, I can get in ear


86
00:02:54,896 --> 00:02:56,436
coaching during a workout to


87
00:02:56,436 --> 00:02:57,616
tell me when I've fallen behind


88
00:02:57,616 --> 00:02:58,176
my pace.


89
00:02:58,716 --> 00:03:00,986
And finally responsive.


90
00:03:02,026 --> 00:03:03,416
While performance is a really


91
00:03:03,416 --> 00:03:05,196
crucial metric for watchOS apps,


92
00:03:05,706 --> 00:03:06,866
we mean a bit more when we say


93
00:03:06,866 --> 00:03:07,606
responsive here.


94
00:03:08,136 --> 00:03:09,986
This also means making sure that


95
00:03:09,986 --> 00:03:12,166
your content remains up-to-date


96
00:03:12,166 --> 00:03:12,636
always.


97
00:03:12,636 --> 00:03:14,146
And it also takes into


98
00:03:14,146 --> 00:03:15,686
consideration what the user


99
00:03:15,686 --> 00:03:17,226
might want to do next in your


100
00:03:17,226 --> 00:03:17,816
application.


101
00:03:18,766 --> 00:03:19,766
Let's take a look at a few


102
00:03:19,766 --> 00:03:21,156
examples of how these are


103
00:03:21,156 --> 00:03:22,406
manifesting themselves in


104
00:03:22,406 --> 00:03:22,976
watchOS 4.


105
00:03:28,246 --> 00:03:29,556
So last year, we introduced the


106
00:03:29,556 --> 00:03:30,906
Quick Start workout feature


107
00:03:31,596 --> 00:03:33,976
which let you start the workout


108
00:03:33,976 --> 00:03:35,946
that you most commonly do very


109
00:03:35,946 --> 00:03:36,366
quickly.


110
00:03:36,926 --> 00:03:38,416
The idea being that you're most


111
00:03:38,416 --> 00:03:39,636
commonly going to use the same


112
00:03:39,636 --> 00:03:40,666
workout over and over.


113
00:03:41,136 --> 00:03:42,826
So we let use the same goal that


114
00:03:42,826 --> 00:03:44,536
you've set previously to get


115
00:03:44,536 --> 00:03:45,846
started in just a few seconds


116
00:03:46,666 --> 00:03:48,426
but if you do a rotating set of


117
00:03:48,426 --> 00:03:49,916
workouts like do you do a run


118
00:03:49,916 --> 00:03:50,466
one day?


119
00:03:50,796 --> 00:03:52,316
And you do a swim the next day


120
00:03:52,316 --> 00:03:53,546
and the bicycle ride the day


121
00:03:53,546 --> 00:03:54,096
after that?


122
00:03:54,576 --> 00:03:55,976
First of all, congratulations


123
00:03:55,976 --> 00:03:56,766
because you're getting a lot of


124
00:03:56,766 --> 00:03:57,446
exercise.


125
00:03:58,186 --> 00:03:59,666
But also you're going to have an


126
00:03:59,666 --> 00:04:01,936
extra step every time of setting


127
00:04:01,936 --> 00:04:02,256
a goal.


128
00:04:02,756 --> 00:04:05,136
So in watchOS 4, we've made this


129
00:04:05,136 --> 00:04:05,836
a lot easier.


130
00:04:06,506 --> 00:04:07,936
Every workout will track the


131
00:04:07,936 --> 00:04:09,746
previous goal that you've set


132
00:04:09,746 --> 00:04:11,846
for that workout type and if you


133
00:04:11,846 --> 00:04:13,406
haven't set one, with defaults


134
00:04:13,406 --> 00:04:14,186
to an open goal.


135
00:04:14,656 --> 00:04:15,696
And that means that every


136
00:04:15,696 --> 00:04:17,125
workout type is a Quick Start


137
00:04:17,125 --> 00:04:17,476
workout.


138
00:04:18,296 --> 00:04:19,596
This is a great example of


139
00:04:19,596 --> 00:04:21,196
making the most common action


140
00:04:21,196 --> 00:04:22,326
that the user's going to take


141
00:04:22,546 --> 00:04:23,946
the easiest one for them.


142
00:04:25,266 --> 00:04:26,446
It lets them glance at the UI


143
00:04:26,446 --> 00:04:28,286
and get started very quickly.


144
00:04:28,866 --> 00:04:31,276
And while you're inside of a


145
00:04:31,276 --> 00:04:33,026
workout, you can now add a


146
00:04:33,026 --> 00:04:34,216
second workout into your


147
00:04:34,216 --> 00:04:34,656
routine.


148
00:04:35,106 --> 00:04:36,316
For example, if I wanted to


149
00:04:36,316 --> 00:04:37,666
start with a high intensity


150
00:04:37,666 --> 00:04:39,596
interval training and finish


151
00:04:39,636 --> 00:04:40,396
with a quick run.


152
00:04:41,366 --> 00:04:43,016
This used to be a multistep


153
00:04:43,016 --> 00:04:44,296
process where I would have to


154
00:04:44,296 --> 00:04:45,246
finish my workout.


155
00:04:45,516 --> 00:04:46,166
Then save it.


156
00:04:46,636 --> 00:04:47,636
Then return to the list of


157
00:04:47,636 --> 00:04:48,256
workouts.


158
00:04:48,256 --> 00:04:49,786
I would find the next one that


159
00:04:49,786 --> 00:04:50,796
I'm going to do which is


160
00:04:50,796 --> 00:04:51,906
probably not going to be a Quick


161
00:04:51,906 --> 00:04:53,016
Start workout at that point.


162
00:04:53,276 --> 00:04:54,666
So I'm going to have to set a


163
00:04:54,666 --> 00:04:55,776
goal and then continue.


164
00:04:56,536 --> 00:04:58,806
Now it's just a quick tap to add


165
00:04:58,886 --> 00:05:00,576
the second workout and another


166
00:05:00,576 --> 00:05:02,186
to Quick Start it.


167
00:05:02,306 --> 00:05:03,586
This is a great example of


168
00:05:03,586 --> 00:05:04,766
building a responsive user


169
00:05:04,766 --> 00:05:07,296
experience where it's not just


170
00:05:07,296 --> 00:05:08,756
about updating the data in your


171
00:05:08,756 --> 00:05:08,956
UI.


172
00:05:09,526 --> 00:05:10,766
It's also about thinking about


173
00:05:10,766 --> 00:05:11,956
what the user might want to do


174
00:05:11,956 --> 00:05:13,286
next in your app based on what


175
00:05:13,286 --> 00:05:13,976
you already know.


176
00:05:19,186 --> 00:05:20,846
Now the dock is a great place to


177
00:05:20,846 --> 00:05:22,766
showcase glanceable information


178
00:05:22,766 --> 00:05:23,706
from your app.


179
00:05:24,196 --> 00:05:25,446
And as you saw in the keynote,


180
00:05:25,686 --> 00:05:27,186
we've transitioned the dock from


181
00:05:27,186 --> 00:05:29,036
being a horizontally scrolled to


182
00:05:29,036 --> 00:05:30,026
being vertically scrolled.


183
00:05:31,116 --> 00:05:32,336
As you'll see in one of the UI


184
00:05:32,336 --> 00:05:33,826
updates in WatchKit shortly,


185
00:05:34,516 --> 00:05:36,106
apps should consider what kind


186
00:05:36,106 --> 00:05:37,926
of navigation feels most natural


187
00:05:37,926 --> 00:05:39,486
for your app and transition


188
00:05:39,486 --> 00:05:39,996
accordingly.


189
00:05:40,116 --> 00:05:41,546
So that it's really easy to


190
00:05:41,546 --> 00:05:42,926
navigate your app either with


191
00:05:42,926 --> 00:05:44,706
swipes or by scrolling through


192
00:05:44,706 --> 00:05:44,976
information.


193
00:05:50,596 --> 00:05:52,466
In addition to transitioning to


194
00:05:52,466 --> 00:05:54,866
a vertical orientation, the dock


195
00:05:54,866 --> 00:05:56,256
also now has two modes of


196
00:05:56,256 --> 00:05:56,776
operation.


197
00:05:57,256 --> 00:05:58,656
There's favorites mode and


198
00:05:58,656 --> 00:05:59,416
recents mode.


199
00:06:00,286 --> 00:06:01,766
Favorites mode will be familiar.


200
00:06:01,886 --> 00:06:03,286
It operates just like the dock


201
00:06:03,346 --> 00:06:05,706
does in watchOS 3 where a user


202
00:06:05,706 --> 00:06:07,596
can pick specific apps and the


203
00:06:07,596 --> 00:06:08,836
order in which they'd like them


204
00:06:08,836 --> 00:06:10,666
to appear in the dock as well as


205
00:06:10,666 --> 00:06:12,256
one most recently used slot for


206
00:06:12,496 --> 00:06:13,826
the last app that they've used.


207
00:06:14,686 --> 00:06:16,736
Recents mode will look just like


208
00:06:16,736 --> 00:06:18,146
the app switcher on iOS.


209
00:06:18,146 --> 00:06:20,216
Apps will transition in and out


210
00:06:20,216 --> 00:06:21,476
of the dock as you use them


211
00:06:21,476 --> 00:06:22,076
throughout the day.


212
00:06:22,136 --> 00:06:23,986
And that means that you're more


213
00:06:23,986 --> 00:06:25,766
likely to see your app show up


214
00:06:25,766 --> 00:06:27,456
at some point during the day in


215
00:06:27,456 --> 00:06:28,176
the user's dock.


216
00:06:28,696 --> 00:06:31,266
And that means that it's even


217
00:06:31,266 --> 00:06:32,616
more important to make sure that


218
00:06:32,616 --> 00:06:34,296
you're updating snapshots using


219
00:06:34,296 --> 00:06:35,836
the background snapshot API we


220
00:06:35,836 --> 00:06:37,446
introduced last year in watchOS


221
00:06:37,486 --> 00:06:37,726
3.


222
00:06:38,546 --> 00:06:39,876
We're also making enhancements


223
00:06:39,876 --> 00:06:40,386
to this API.


224
00:06:40,996 --> 00:06:42,446
For example, you can now get a


225
00:06:42,446 --> 00:06:45,606
callback for when you get a


226
00:06:45,606 --> 00:06:47,296
snapshot test to tell whether or


227
00:06:47,296 --> 00:06:48,886
not it's a snapshot that you


228
00:06:48,886 --> 00:06:50,596
have scheduled or one that's


229
00:06:50,596 --> 00:06:52,206
being automatically provided to


230
00:06:52,206 --> 00:06:53,756
you but that's triggered by the


231
00:06:53,756 --> 00:06:54,156
system.


232
00:06:55,286 --> 00:06:57,286
Also remember that apps that


233
00:06:57,286 --> 00:06:59,046
either in complications or in


234
00:06:59,046 --> 00:07:00,516
the dock are launched in the


235
00:07:00,516 --> 00:07:02,316
background and suspended but


236
00:07:02,316 --> 00:07:03,026
kept in memory.


237
00:07:03,466 --> 00:07:05,496
So opening them is really fast.


238
00:07:05,616 --> 00:07:08,256
Now for the rest of our time


239
00:07:08,256 --> 00:07:09,656
here today, we're going to talk


240
00:07:09,656 --> 00:07:11,116
about three topics that we


241
00:07:11,116 --> 00:07:12,676
focused on this year in the


242
00:07:12,676 --> 00:07:13,286
WatchSTK.


243
00:07:14,446 --> 00:07:16,656
The first of them is UI


244
00:07:16,816 --> 00:07:17,506
flexibility.


245
00:07:17,836 --> 00:07:20,506
Giving you more options to


246
00:07:20,506 --> 00:07:22,166
present information and actions


247
00:07:22,166 --> 00:07:22,806
to users.


248
00:07:24,066 --> 00:07:25,836
The second is performance.


249
00:07:26,466 --> 00:07:27,766
So apps always feel as


250
00:07:27,766 --> 00:07:28,976
responsive as possible.


251
00:07:34,136 --> 00:07:35,196
And finally background


252
00:07:35,196 --> 00:07:37,186
processing so the users can


253
00:07:37,186 --> 00:07:39,406
engage in activities beyond the


254
00:07:39,406 --> 00:07:40,896
foreground app experience


255
00:07:41,596 --> 00:07:43,936
whether it's in the dock in a


256
00:07:43,936 --> 00:07:46,136
complication or in an ongoing


257
00:07:46,136 --> 00:07:46,976
task like a workout.


258
00:07:51,426 --> 00:07:52,506
First let's take a look at UI


259
00:07:52,506 --> 00:07:53,116
flexibility.


260
00:07:53,936 --> 00:07:55,626
Now WatchKit provides a focused


261
00:07:55,626 --> 00:07:57,366
set of UI components that have


262
00:07:57,366 --> 00:07:58,576
been optimized for the Watch


263
00:07:58,576 --> 00:07:58,936
screen.


264
00:07:59,416 --> 00:08:00,506
But we want to make sure that


265
00:08:00,506 --> 00:08:01,836
those are flexible enough for


266
00:08:01,836 --> 00:08:03,146
you to create custom user


267
00:08:03,146 --> 00:08:04,606
interfaces that meet the


268
00:08:04,606 --> 00:08:06,586
personality of your app.


269
00:08:07,706 --> 00:08:09,216
Now if you've already created a


270
00:08:09,216 --> 00:08:10,816
Watch app or you're new to


271
00:08:10,816 --> 00:08:11,996
developing on the platform,


272
00:08:12,186 --> 00:08:13,756
you're going to love how easy it


273
00:08:13,806 --> 00:08:15,026
is to take advantage of the new


274
00:08:15,026 --> 00:08:16,976
UI capabilities in watchOS 4.


275
00:08:16,976 --> 00:08:18,626
And if you're a parent, I'm


276
00:08:18,626 --> 00:08:19,816
going to show you how to get


277
00:08:19,816 --> 00:08:21,316
workout credit for the things


278
00:08:21,316 --> 00:08:22,446
you're probably already doing


279
00:08:22,446 --> 00:08:23,246
around the house.


280
00:08:23,536 --> 00:08:26,616
More on that in just a second.


281
00:08:26,666 --> 00:08:27,736
Now I have a 4-year-old and


282
00:08:27,736 --> 00:08:28,646
1-year-old at home.


283
00:08:28,986 --> 00:08:31,386
And often times between work and


284
00:08:31,386 --> 00:08:33,025
wrangling the kids, I don't find


285
00:08:33,086 --> 00:08:34,525
time during the day to do a


286
00:08:34,525 --> 00:08:36,956
formal workout but honestly, a


287
00:08:36,956 --> 00:08:38,476
lot of what I find myself doing


288
00:08:38,476 --> 00:08:39,676
feels an awful lot like a


289
00:08:39,676 --> 00:08:41,535
workout whether it's piggyback


290
00:08:41,535 --> 00:08:42,806
rides or cleaning up toys.


291
00:08:43,285 --> 00:08:45,296
So I created a new app that lets


292
00:08:45,296 --> 00:08:46,216
me track these more


293
00:08:46,216 --> 00:08:47,546
non-traditional workouts.


294
00:08:47,946 --> 00:08:49,236
And we're going to use this as


295
00:08:49,236 --> 00:08:50,626
an example to see some of the


296
00:08:50,626 --> 00:08:52,656
new UI capabilities in watchOS


297
00:08:52,656 --> 00:08:52,906
4.


298
00:08:52,906 --> 00:08:56,496
So here we have a simple


299
00:08:56,496 --> 00:08:57,786
in-workout interface.


300
00:08:58,226 --> 00:08:59,526
It's showing me the calorie


301
00:08:59,526 --> 00:09:00,896
counter in the middle as well as


302
00:09:00,896 --> 00:09:03,106
a time label and a SpriteKit


303
00:09:03,106 --> 00:09:04,756
scene of a child being chased by


304
00:09:04,756 --> 00:09:05,946
their parents around the screen.


305
00:09:06,996 --> 00:09:08,186
This is the kind of interface


306
00:09:08,186 --> 00:09:09,306
that's really hard to do in


307
00:09:09,306 --> 00:09:10,906
watchOS because you can't


308
00:09:10,906 --> 00:09:12,356
overlap interface elements.


309
00:09:12,726 --> 00:09:13,826
So let's take a look at what's


310
00:09:13,856 --> 00:09:14,536
going on here.


311
00:09:21,096 --> 00:09:22,906
So here we have a group in front


312
00:09:22,956 --> 00:09:24,146
containing the labels that I


313
00:09:24,146 --> 00:09:24,596
mentioned.


314
00:09:24,966 --> 00:09:26,506
And that's on top of a SpriteKit


315
00:09:26,506 --> 00:09:26,766
scene.


316
00:09:27,456 --> 00:09:28,386
Now I know you're thinking I


317
00:09:28,386 --> 00:09:29,676
just said you can't overlap


318
00:09:29,676 --> 00:09:30,596
interface elements.


319
00:09:31,286 --> 00:09:32,946
In watchOS 4, we've created a


320
00:09:32,946 --> 00:09:34,866
new group layout that allows you


321
00:09:34,866 --> 00:09:36,616
to do things like this.


322
00:09:36,766 --> 00:09:37,946
Let's take a look at interface


323
00:09:37,946 --> 00:09:39,276
builder to see how you can use


324
00:09:39,276 --> 00:09:40,146
that.


325
00:09:42,156 --> 00:09:43,886
So a new option has been added


326
00:09:43,886 --> 00:09:44,406
to groups.


327
00:09:44,556 --> 00:09:46,316
So in addition to vertical and


328
00:09:46,316 --> 00:09:47,996
horizontal layouts, you can now


329
00:09:47,996 --> 00:09:48,986
select overlap.


330
00:09:49,116 --> 00:09:51,116
And when selected, overlap


331
00:09:51,116 --> 00:09:52,766
groups do not compute offsets


332
00:09:52,766 --> 00:09:54,146
for each individual element.


333
00:09:54,716 --> 00:09:57,006
Instead, you can select their


334
00:09:57,006 --> 00:09:58,456
individual alignments like top,


335
00:09:58,456 --> 00:09:59,796
center, and bottom or left,


336
00:09:59,796 --> 00:10:01,456
center, and right, and the


337
00:10:01,456 --> 00:10:02,936
elements are laid out according


338
00:10:02,936 --> 00:10:04,476
to those in a more absolute


339
00:10:04,476 --> 00:10:05,536
fashion within the group.


340
00:10:05,926 --> 00:10:09,206
And you can also nest groups


341
00:10:09,206 --> 00:10:11,026
within each other like I've done


342
00:10:11,026 --> 00:10:12,536
here with the metrics group,


343
00:10:12,536 --> 00:10:14,156
which contains my labels inside


344
00:10:14,156 --> 00:10:14,916
of a vertical group.


345
00:10:15,086 --> 00:10:16,836
And you can also use [inaudible]


346
00:10:17,296 --> 00:10:20,566
and spacing in order to fine


347
00:10:20,566 --> 00:10:21,636
tune placement within the


348
00:10:21,636 --> 00:10:22,036
groups.


349
00:10:23,276 --> 00:10:25,646
You can also specify z order by


350
00:10:25,646 --> 00:10:26,826
the order in which the elements


351
00:10:26,826 --> 00:10:28,746
appear in the outline view as


352
00:10:28,746 --> 00:10:29,166
seen here.


353
00:10:29,236 --> 00:10:31,556
This is going to make a huge


354
00:10:31,556 --> 00:10:32,926
difference in making it easier


355
00:10:32,926 --> 00:10:33,926
to create custom user


356
00:10:33,926 --> 00:10:34,616
interfaces.


357
00:10:39,286 --> 00:10:41,136
Now in my workout control screen


358
00:10:41,136 --> 00:10:42,236
that you'll see here in a


359
00:10:42,746 --> 00:10:44,296
second, I've now added a water


360
00:10:44,296 --> 00:10:44,916
lock button.


361
00:10:45,566 --> 00:10:46,816
And water lock can be really


362
00:10:46,816 --> 00:10:48,416
helpful for rejecting false


363
00:10:48,416 --> 00:10:50,236
touches from water being on the


364
00:10:50,236 --> 00:10:50,616
screen.


365
00:10:51,256 --> 00:10:52,456
Or in my case because my


366
00:10:52,456 --> 00:10:53,606
daughter's usually trying to eat


367
00:10:53,606 --> 00:10:55,956
my watch [laughter] but


368
00:10:57,036 --> 00:10:58,766
previously in workout apps for


369
00:10:58,766 --> 00:11:00,486
third parties, for a user to


370
00:11:00,486 --> 00:11:02,226
engage water lock you'd have to


371
00:11:02,346 --> 00:11:04,006
start the workout, go back out


372
00:11:04,006 --> 00:11:05,806
to the Watch face, swipe up to


373
00:11:05,806 --> 00:11:07,266
reveal control center, and then


374
00:11:07,266 --> 00:11:08,226
enable water lock.


375
00:11:08,846 --> 00:11:10,116
Then the next time that you


376
00:11:10,116 --> 00:11:11,406
raised your wrist, the workout


377
00:11:11,406 --> 00:11:12,356
app would be on the screen.


378
00:11:12,896 --> 00:11:13,786
We're going to make that a lot


379
00:11:13,786 --> 00:11:15,666
easier in watchOS 4 and now you


380
00:11:15,666 --> 00:11:17,526
can include a button within your


381
00:11:17,526 --> 00:11:19,336
own user interface so that it


382
00:11:19,336 --> 00:11:20,496
fits the personality of your


383
00:11:21,296 --> 00:11:21,366
app.


384
00:11:22,276 --> 00:11:24,016
Now water lock can only be


385
00:11:24,016 --> 00:11:25,826
enabled by developers, never


386
00:11:25,826 --> 00:11:26,426
disabled.


387
00:11:26,816 --> 00:11:28,356
The user has to do that


388
00:11:28,356 --> 00:11:28,996
themselves.


389
00:11:29,406 --> 00:11:32,376
When they try to interact with


390
00:11:32,376 --> 00:11:33,556
the side button or digital


391
00:11:33,556 --> 00:11:35,596
crown, an overlay will appear


392
00:11:35,596 --> 00:11:36,656
just like the one seen here.


393
00:11:36,976 --> 00:11:38,046
It's the same one that's used by


394
00:11:38,046 --> 00:11:39,226
the system currently.


395
00:11:40,216 --> 00:11:41,696
And it tells them how to disable


396
00:11:41,696 --> 00:11:42,256
water lock.


397
00:11:43,436 --> 00:11:44,746
Water lock can be enabled in


398
00:11:44,746 --> 00:11:46,596
workout as well as in one other


399
00:11:46,596 --> 00:11:47,906
session based activity that


400
00:11:47,906 --> 00:11:49,716
we'll get to in a little bit in


401
00:11:49,716 --> 00:11:50,436
the presentation.


402
00:11:50,916 --> 00:11:52,756
And the reason for this is


403
00:11:52,756 --> 00:11:54,126
because apps that are not in a


404
00:11:54,126 --> 00:11:56,206
workout session, after a period


405
00:11:56,206 --> 00:11:57,766
of time and when the wrist has


406
00:11:57,766 --> 00:11:59,256
been dropped, the app will be


407
00:11:59,256 --> 00:12:00,446
suspended in the background.


408
00:12:00,906 --> 00:12:02,086
So when the user raises their


409
00:12:02,086 --> 00:12:03,576
wrist, they won't see the app


410
00:12:03,576 --> 00:12:05,336
anymore and the screen is locked


411
00:12:05,336 --> 00:12:06,666
so they can't open it back up


412
00:12:07,486 --> 00:12:09,666
but with a workout app, the app


413
00:12:09,666 --> 00:12:11,466
will always appear every time


414
00:12:11,466 --> 00:12:12,796
they raise their wrist.


415
00:12:13,446 --> 00:12:14,486
So I can see up-to-date


416
00:12:14,486 --> 00:12:15,946
information in -- from my


417
00:12:15,946 --> 00:12:18,776
workout as I'm going through it


418
00:12:18,866 --> 00:12:19,766
even though the screen is


419
00:12:19,766 --> 00:12:20,036
locked.


420
00:12:20,646 --> 00:12:21,736
Let's take a look at how to


421
00:12:21,736 --> 00:12:22,846
enable this in code.


422
00:12:28,406 --> 00:12:29,736
As you can see, it's pretty


423
00:12:29,736 --> 00:12:30,616
simple to enable.


424
00:12:30,726 --> 00:12:32,206
It's a single call on the shared


425
00:12:32,206 --> 00:12:32,996
extension object.


426
00:12:33,986 --> 00:12:36,166
Now one last thing to note is


427
00:12:36,166 --> 00:12:38,286
that water lock can only be


428
00:12:38,316 --> 00:12:39,816
enabled while the app is in the


429
00:12:39,816 --> 00:12:40,386
foreground.


430
00:12:40,386 --> 00:12:42,186
So the user is always aware of


431
00:12:42,186 --> 00:12:42,956
what's going on.


432
00:12:43,856 --> 00:12:46,916
Now here you can see my app is


433
00:12:46,916 --> 00:12:48,406
giving me a congratulatory fist


434
00:12:48,406 --> 00:12:50,196
bump for figuring out a way to


435
00:12:50,196 --> 00:12:51,526
fit in a workout into my


436
00:12:51,526 --> 00:12:52,806
parenting responsibilities.


437
00:12:53,656 --> 00:12:55,026
Now this might be something that


438
00:12:55,026 --> 00:12:56,436
I'd like to show someone else


439
00:12:57,026 --> 00:12:58,086
but my options are kind of


440
00:12:58,086 --> 00:12:59,276
limited on watchOS.


441
00:12:59,276 --> 00:13:00,646
I can either do this awkward


442
00:13:00,646 --> 00:13:01,726
gesture where I try and keep the


443
00:13:01,726 --> 00:13:02,966
screen on while I turn it away


444
00:13:02,966 --> 00:13:05,006
from myself or I can turn it


445
00:13:05,006 --> 00:13:06,936
over and tap on the screen but


446
00:13:06,936 --> 00:13:08,346
the content is upside down.


447
00:13:09,406 --> 00:13:11,616
In watchOS 4, we're giving you


448
00:13:11,616 --> 00:13:13,116
the ability to turn on auto


449
00:13:13,116 --> 00:13:13,566
rotate.


450
00:13:14,316 --> 00:13:16,536
When enabled, wrist movement


451
00:13:16,536 --> 00:13:18,166
will not turn off the screen.


452
00:13:18,166 --> 00:13:19,456
And we automatically rotate the


453
00:13:19,456 --> 00:13:20,616
content when your wrist is


454
00:13:20,616 --> 00:13:21,526
turned away from you.


455
00:13:22,076 --> 00:13:24,406
This will not keep the screen on


456
00:13:24,406 --> 00:13:25,166
indefinitely.


457
00:13:25,856 --> 00:13:27,376
The idle timer will still sleep


458
00:13:27,376 --> 00:13:28,946
the display after a period of


459
00:13:28,946 --> 00:13:30,376
inactivity but you should have


460
00:13:30,436 --> 00:13:31,616
plenty of time to show the


461
00:13:31,616 --> 00:13:32,966
content on your watch to someone


462
00:13:32,966 --> 00:13:33,266
else.


463
00:13:34,386 --> 00:13:35,366
Let's take a look at the


464
00:13:35,366 --> 00:13:35,836
property.


465
00:13:36,456 --> 00:13:38,486
You're going to start to see a


466
00:13:38,486 --> 00:13:39,316
bit of a theme here.


467
00:13:39,596 --> 00:13:40,606
You don't have to do a lot of


468
00:13:40,606 --> 00:13:41,926
work to take advantage of a lot


469
00:13:41,926 --> 00:13:42,906
of the UI capabilities that


470
00:13:42,906 --> 00:13:44,476
we're adding in watchOS 4.


471
00:13:45,296 --> 00:13:47,236
There's a lot of applications of


472
00:13:47,236 --> 00:13:47,566
this.


473
00:13:47,616 --> 00:13:48,576
So let's take a look at a few


474
00:13:48,576 --> 00:13:49,136
examples.


475
00:13:50,076 --> 00:13:52,506
Proloquo4Text is a text based


476
00:13:52,506 --> 00:13:54,506
communication app that gives


477
00:13:54,506 --> 00:13:56,176
literate children, teens, and


478
00:13:56,176 --> 00:13:58,206
adults the ability to speak


479
00:13:58,206 --> 00:13:59,386
without voice.


480
00:13:59,826 --> 00:14:01,726
The app allows them to tap on


481
00:14:01,726 --> 00:14:03,596
preprogrammed personal phrases


482
00:14:03,926 --> 00:14:05,026
and turn their wrist towards


483
00:14:05,026 --> 00:14:06,636
another person to communicate


484
00:14:06,776 --> 00:14:07,916
with a text on their wrist.


485
00:14:08,666 --> 00:14:10,556
Here I can place my coffee order


486
00:14:11,406 --> 00:14:12,556
by showing my wrist to the


487
00:14:12,556 --> 00:14:14,146
cashier and having the text


488
00:14:14,146 --> 00:14:15,896
remain on screen and upright


489
00:14:15,896 --> 00:14:17,256
when I turn it away from myself.


490
00:14:17,806 --> 00:14:20,406
I can even pay for my order


491
00:14:20,406 --> 00:14:22,206
using the Starbucks app.


492
00:14:23,026 --> 00:14:24,586
Starbucks lets me open my


493
00:14:24,586 --> 00:14:26,436
barcode from my personal card


494
00:14:26,526 --> 00:14:28,236
and have that shown on screen.


495
00:14:29,316 --> 00:14:30,436
Then I can show that to the


496
00:14:30,436 --> 00:14:32,696
scanner at the cashier and have


497
00:14:32,696 --> 00:14:34,336
it remain on screen so that it


498
00:14:34,336 --> 00:14:35,486
can read it.


499
00:14:35,816 --> 00:14:36,756
There's a ton of different


500
00:14:36,756 --> 00:14:37,716
applications of this.


501
00:14:37,716 --> 00:14:39,146
So you should consider what


502
00:14:39,146 --> 00:14:40,596
content in your application


503
00:14:40,596 --> 00:14:41,436
might be applicable.


504
00:14:42,036 --> 00:14:44,916
In our next step, we have a new


505
00:14:44,916 --> 00:14:46,846
style for paging views, a


506
00:14:46,846 --> 00:14:47,706
vertical paging view.


507
00:14:47,706 --> 00:14:51,116
I could have implemented this as


508
00:14:51,116 --> 00:14:52,736
a scroll view but really these


509
00:14:52,736 --> 00:14:54,126
are two distinct pages.


510
00:14:54,256 --> 00:14:55,446
And it's great how they just


511
00:14:55,446 --> 00:14:56,416
snap into place.


512
00:14:56,946 --> 00:14:58,726
It's also really natural to use


513
00:14:58,726 --> 00:14:59,596
with the digital crown.


514
00:15:00,536 --> 00:15:01,806
And the animation between the


515
00:15:01,806 --> 00:15:03,876
pages is very similar to the one


516
00:15:03,876 --> 00:15:05,456
we introduced last year for


517
00:15:05,456 --> 00:15:07,186
performing segues between table


518
00:15:07,186 --> 00:15:08,916
rows in a master detail


519
00:15:08,916 --> 00:15:10,986
application but now you can do


520
00:15:10,986 --> 00:15:12,546
so without using a navigation


521
00:15:12,546 --> 00:15:12,976
controller.


522
00:15:15,216 --> 00:15:17,196
Let's take a look at how you


523
00:15:17,196 --> 00:15:18,396
implement this interface.


524
00:15:18,976 --> 00:15:21,636
So we replaced the reload root


525
00:15:21,636 --> 00:15:22,886
controller's method with a new


526
00:15:22,886 --> 00:15:24,886
one that takes in two key pieces


527
00:15:24,886 --> 00:15:25,846
of new information.


528
00:15:26,506 --> 00:15:28,156
The first is the ability to set


529
00:15:28,156 --> 00:15:28,986
the orientation.


530
00:15:29,216 --> 00:15:30,676
So you use the same method


531
00:15:30,676 --> 00:15:31,816
whether you're doing it in a


532
00:15:31,816 --> 00:15:33,526
horizontal paging view or a


533
00:15:33,526 --> 00:15:34,416
vertical paging view.


534
00:15:35,516 --> 00:15:36,916
And the second one is something


535
00:15:36,916 --> 00:15:37,946
that we've heard a lot of


536
00:15:37,946 --> 00:15:39,676
feedback about and we're excited


537
00:15:39,676 --> 00:15:40,966
to be able to offer in watchOS


538
00:15:40,966 --> 00:15:41,246
4.


539
00:15:41,346 --> 00:15:42,706
And that's the ability to set


540
00:15:42,706 --> 00:15:44,146
the initial page index.


541
00:15:44,736 --> 00:15:46,256
So this is great for things like


542
00:15:46,256 --> 00:15:47,636
workout apps where you want a


543
00:15:47,636 --> 00:15:48,566
main workout UI.


544
00:15:48,566 --> 00:15:52,726
[Applause] I know we've seen


545
00:15:52,796 --> 00:15:53,686
lots of radars.


546
00:15:54,916 --> 00:15:56,166
And you want the control screen


547
00:15:56,166 --> 00:15:57,476
left to center but you want to


548
00:15:57,476 --> 00:15:58,756
load directly into the main


549
00:15:58,756 --> 00:15:59,326
workout UI.


550
00:16:00,106 --> 00:16:01,186
So this allows you to set the


551
00:16:01,186 --> 00:16:02,676
index to wherever you want and


552
00:16:02,676 --> 00:16:03,826
have it load directly there.


553
00:16:08,046 --> 00:16:09,336
Now here we have a history view.


554
00:16:10,136 --> 00:16:11,536
And when doing an interface like


555
00:16:11,536 --> 00:16:12,956
this where we may have hundreds


556
00:16:12,956 --> 00:16:14,386
of records, there's a couple of


557
00:16:14,386 --> 00:16:15,636
things to keep in mind.


558
00:16:16,166 --> 00:16:17,736
The first is storage.


559
00:16:17,886 --> 00:16:19,136
I probably don't want to store


560
00:16:19,136 --> 00:16:20,486
all of my workouts that I've


561
00:16:20,486 --> 00:16:22,436
ever completed on the watch when


562
00:16:22,436 --> 00:16:24,086
I can easily load them using


563
00:16:24,086 --> 00:16:25,036
watch connectivity from the


564
00:16:25,036 --> 00:16:26,576
phone or from a server.


565
00:16:27,916 --> 00:16:29,526
The second is performance.


566
00:16:30,076 --> 00:16:31,496
Loading too many table rows at


567
00:16:31,496 --> 00:16:34,156
once can lead -- load -- lead to


568
00:16:34,156 --> 00:16:35,476
a decrease in performance and


569
00:16:35,476 --> 00:16:36,476
load time for the table.


570
00:16:42,096 --> 00:16:44,056
So here we're now allowing you


571
00:16:44,186 --> 00:16:45,716
to get callbacks for when the


572
00:16:45,716 --> 00:16:47,356
user scrolls to the bottom of


573
00:16:47,356 --> 00:16:48,466
the screen or the top of the


574
00:16:48,466 --> 00:16:48,896
screen.


575
00:16:48,896 --> 00:16:50,246
So you can do things like I have


576
00:16:50,246 --> 00:16:51,706
here where I'm getting the


577
00:16:51,706 --> 00:16:52,286
callback.


578
00:16:52,686 --> 00:16:54,106
I'm loading -- putting on a


579
00:16:54,106 --> 00:16:55,396
loading indicator and then I'm


580
00:16:55,396 --> 00:16:56,886
loading data from the phone.


581
00:16:57,426 --> 00:17:00,456
Let's take a look at how you can


582
00:17:00,456 --> 00:17:01,676
implement these callbacks.


583
00:17:06,435 --> 00:17:07,736
So the first one is the one I


584
00:17:07,736 --> 00:17:09,016
was just using in the last user


585
00:17:09,016 --> 00:17:09,526
interface.


586
00:17:10,056 --> 00:17:11,806
InterfaceOffsetDidScrollToTop.


587
00:17:12,366 --> 00:17:13,256
This gets called when the


588
00:17:13,256 --> 00:17:14,715
animation completes, when the


589
00:17:14,715 --> 00:17:16,486
user scrolls all the way to the


590
00:17:16,486 --> 00:17:17,246
bottom of the screen.


591
00:17:18,175 --> 00:17:19,306
The second is the exact


592
00:17:19,306 --> 00:17:19,816
opposite,


593
00:17:19,915 --> 00:17:21,766
interfaceOffsetDidScrollToTop


594
00:17:22,046 --> 00:17:22,925
which gets called when you


595
00:17:23,185 --> 00:17:24,195
scroll to the top of the screen.


596
00:17:24,346 --> 00:17:25,665
And the last one,


597
00:17:25,665 --> 00:17:27,286
interfaceDidScrollToTop gets


598
00:17:27,286 --> 00:17:28,926
called when the user taps on the


599
00:17:28,926 --> 00:17:30,506
status bar, which scrolls the


600
00:17:30,506 --> 00:17:31,436
interface all the way to the


601
00:17:31,436 --> 00:17:31,706
top.


602
00:17:32,336 --> 00:17:33,826
Now we've also included in a


603
00:17:33,826 --> 00:17:35,426
scroll function, which lets you


604
00:17:35,426 --> 00:17:38,326
pass in an interface element and


605
00:17:38,386 --> 00:17:40,036
have it scrolls to appear at


606
00:17:40,036 --> 00:17:41,256
either the top, center, or


607
00:17:41,256 --> 00:17:42,066
bottom of the screen.


608
00:17:42,836 --> 00:17:44,606
I use that in my history view to


609
00:17:44,606 --> 00:17:45,736
show loading indicator.


610
00:17:46,506 --> 00:17:47,446
When I loaded the group that


611
00:17:47,446 --> 00:17:49,126
contained my animation, it


612
00:17:49,126 --> 00:17:50,036
loaded off screen.


613
00:17:50,226 --> 00:17:51,836
So I passed it into the scroll


614
00:17:51,836 --> 00:17:54,026
method and set it to show at the


615
00:17:54,026 --> 00:17:54,826
bottom of the screen.


616
00:17:57,996 --> 00:17:58,706
All right.


617
00:17:59,206 --> 00:18:01,076
And here we have a reimagined


618
00:18:01,856 --> 00:18:03,386
post workout screen that's been


619
00:18:03,386 --> 00:18:04,966
redesigned as a full screen


620
00:18:04,966 --> 00:18:05,516
animation.


621
00:18:06,526 --> 00:18:08,726
In watchOS 4 for SpriteKit and


622
00:18:08,726 --> 00:18:10,266
SyncIt [phonetic] apps, you can


623
00:18:10,266 --> 00:18:11,816
now make use of the entire


624
00:18:11,816 --> 00:18:12,276
display.


625
00:18:13,656 --> 00:18:15,516
It is still a watch though, so


626
00:18:15,516 --> 00:18:16,776
we are always going to display


627
00:18:16,776 --> 00:18:18,976
the time in the top corner with


628
00:18:18,976 --> 00:18:20,526
a gradient behind it so the user


629
00:18:20,526 --> 00:18:22,116
can always read the display


630
00:18:22,486 --> 00:18:23,486
regardless of the color of


631
00:18:23,486 --> 00:18:25,046
content behind it.


632
00:18:26,446 --> 00:18:28,026
As you can see, there's a lot of


633
00:18:28,026 --> 00:18:29,856
new changes in creating your


634
00:18:29,856 --> 00:18:31,646
user interfaces in watchOS 4.


635
00:18:31,806 --> 00:18:33,386
I encourage you to check out a


636
00:18:33,386 --> 00:18:35,296
session later this week on


637
00:18:35,956 --> 00:18:38,376
planning a great Watch


638
00:18:38,376 --> 00:18:40,146
experience, which will be going


639
00:18:40,146 --> 00:18:41,726
through planning both the


640
00:18:41,726 --> 00:18:43,006
interactions that you should do


641
00:18:43,006 --> 00:18:44,726
on a Watch as well as the design


642
00:18:44,726 --> 00:18:45,486
of the application.


643
00:18:46,256 --> 00:18:48,236
Next, let's take a look at


644
00:18:48,236 --> 00:18:48,846
performance.


645
00:18:49,576 --> 00:18:51,186
Now interactions on watches


646
00:18:51,186 --> 00:18:52,336
we've talked about previously,


647
00:18:52,476 --> 00:18:54,016
are short but numerous.


648
00:18:54,496 --> 00:18:55,696
So we always want to make sure


649
00:18:55,696 --> 00:18:57,006
that we're both preparing ahead


650
00:18:57,476 --> 00:18:58,746
but we're also as responsive as


651
00:18:58,746 --> 00:18:59,246
possible.


652
00:18:59,786 --> 00:19:02,826
And to that end, in watchOS 2,


653
00:19:03,286 --> 00:19:04,606
we moved the extension from


654
00:19:04,606 --> 00:19:06,146
running on the phone to running


655
00:19:06,146 --> 00:19:06,786
on the Watch.


656
00:19:07,246 --> 00:19:08,606
And that did a couple of things.


657
00:19:08,986 --> 00:19:10,386
It meant that you could run the


658
00:19:10,386 --> 00:19:11,896
app when the phone was no longer


659
00:19:11,896 --> 00:19:13,986
present but it also meant lower


660
00:19:13,986 --> 00:19:15,306
latency and communication.


661
00:19:16,366 --> 00:19:19,146
The behind the scenes, the app


662
00:19:19,406 --> 00:19:21,186
and extension are still running


663
00:19:21,186 --> 00:19:22,856
in separate processes where your


664
00:19:22,856 --> 00:19:24,486
code is trying to make updates


665
00:19:24,616 --> 00:19:25,856
and you're responding to events.


666
00:19:25,856 --> 00:19:27,206
So there's latency in the


667
00:19:27,206 --> 00:19:28,506
communication for the inner


668
00:19:28,506 --> 00:19:29,536
process communication between


669
00:19:29,536 --> 00:19:29,756
the two.


670
00:19:29,756 --> 00:19:32,276
With a little bit of magic in


671
00:19:32,276 --> 00:19:34,916
watchOS 4, at run time, we're


672
00:19:34,916 --> 00:19:36,546
loading both the extension and


673
00:19:36,546 --> 00:19:38,176
the app into the same process.


674
00:19:38,626 --> 00:19:40,246
This is going to make a huge


675
00:19:40,246 --> 00:19:41,346
difference in performance of


676
00:19:41,346 --> 00:19:41,916
your apps.


677
00:19:42,356 --> 00:19:43,736
You should see things like lower


678
00:19:43,736 --> 00:19:45,736
touch latency, faster loading of


679
00:19:45,736 --> 00:19:47,746
views as well as higher frame


680
00:19:47,746 --> 00:19:48,716
rates while you're interacting


681
00:19:48,716 --> 00:19:49,356
with the device.


682
00:19:49,356 --> 00:19:51,746
And the best part is you don't


683
00:19:51,746 --> 00:19:53,056
have to do anything for your


684
00:19:53,056 --> 00:19:54,216
users to gain from this.


685
00:19:54,596 --> 00:19:55,976
This is a completely binary


686
00:19:55,976 --> 00:19:58,066
compatible change for all apps


687
00:19:58,066 --> 00:19:59,216
watchOS 2 and later.


688
00:19:59,956 --> 00:20:01,546
That means no updates.


689
00:20:02,176 --> 00:20:03,166
[Applause] No recompiling.


690
00:20:04,666 --> 00:20:06,446
All existing apps either on a


691
00:20:06,446 --> 00:20:07,966
user's device or in the App


692
00:20:07,966 --> 00:20:09,136
Store are just going to start


693
00:20:09,136 --> 00:20:10,666
benefiting in watchOS 4.


694
00:20:11,656 --> 00:20:12,856
This is going to make a huge


695
00:20:12,856 --> 00:20:13,296
difference.


696
00:20:13,296 --> 00:20:14,106
So we can't wait for you to


697
00:20:14,106 --> 00:20:15,246
check it out.


698
00:20:16,646 --> 00:20:17,826
I moved too far away.


699
00:20:18,456 --> 00:20:20,416
And finally let's take a look at


700
00:20:20,416 --> 00:20:21,336
background processing.


701
00:20:22,196 --> 00:20:23,466
Like I said before, it's really


702
00:20:23,466 --> 00:20:25,046
important to prepare ahead of


703
00:20:25,046 --> 00:20:27,036
time and making sure that the


704
00:20:27,036 --> 00:20:28,446
app is always up-to-date


705
00:20:28,446 --> 00:20:29,636
whenever the user wants to look


706
00:20:29,636 --> 00:20:30,176
at their wrist.


707
00:20:30,876 --> 00:20:31,876
And this can be done with a


708
00:20:31,876 --> 00:20:33,146
combination of background


709
00:20:33,146 --> 00:20:34,676
running modes, use of the


710
00:20:34,676 --> 00:20:36,906
complication, and snapshot APIs


711
00:20:36,906 --> 00:20:38,326
as well as some changes that


712
00:20:38,326 --> 00:20:39,756
we're making this year for what


713
00:20:39,756 --> 00:20:41,436
will be called the Frontmost App


714
00:20:41,436 --> 00:20:41,786
State.


715
00:20:42,306 --> 00:20:43,466
We'll get to that in just a few


716
00:20:43,466 --> 00:20:43,906
minutes.


717
00:20:44,286 --> 00:20:47,646
Now last year we introduced the


718
00:20:47,646 --> 00:20:49,086
workout processing background


719
00:20:49,086 --> 00:20:50,966
mode allowing third party apps


720
00:20:50,966 --> 00:20:52,426
to run in the background and


721
00:20:52,426 --> 00:20:53,996
making the app available every


722
00:20:53,996 --> 00:20:55,096
time the user raised their


723
00:20:55,096 --> 00:20:55,426
wrist.


724
00:20:56,296 --> 00:20:58,086
We're continuing to make these


725
00:20:58,086 --> 00:20:59,936
APIs better this year by adding


726
00:20:59,936 --> 00:21:01,016
a few new additions.


727
00:21:01,856 --> 00:21:03,656
The first is a hardware pause


728
00:21:03,656 --> 00:21:04,576
and resume API.


729
00:21:05,426 --> 00:21:06,646
When a user presses the side


730
00:21:06,646 --> 00:21:07,896
button and digital crown at the


731
00:21:07,896 --> 00:21:11,046
same time, an event is generated


732
00:21:11,046 --> 00:21:12,426
that you can respond to in your


733
00:21:12,426 --> 00:21:13,016
application.


734
00:21:14,516 --> 00:21:15,596
That way you can pause and


735
00:21:15,596 --> 00:21:17,156
resume the workout depending on


736
00:21:17,156 --> 00:21:19,276
which state the session is in.


737
00:21:21,156 --> 00:21:23,256
The second is workout segments.


738
00:21:23,876 --> 00:21:25,136
And this allows you -- it's a


739
00:21:25,136 --> 00:21:26,156
new type on the HK [phonetic]


740
00:21:26,156 --> 00:21:28,586
workout event class and this


741
00:21:28,586 --> 00:21:30,316
allows you to mark important


742
00:21:30,316 --> 00:21:31,756
durations of time within your


743
00:21:31,756 --> 00:21:32,176
workout.


744
00:21:32,886 --> 00:21:34,056
This could be used for things


745
00:21:34,056 --> 00:21:35,166
like marking the different


746
00:21:35,166 --> 00:21:36,256
sections of an interval


747
00:21:36,256 --> 00:21:37,166
training, for example.


748
00:21:37,806 --> 00:21:40,196
And last year we started to


749
00:21:40,196 --> 00:21:41,586
track workout routes for


750
00:21:41,586 --> 00:21:43,666
specific types of workouts using


751
00:21:43,666 --> 00:21:44,946
the Apple Workout app.


752
00:21:45,516 --> 00:21:46,986
Now with a user's permission,


753
00:21:47,406 --> 00:21:48,966
you can both read these workout


754
00:21:49,016 --> 00:21:50,546
routes as well as create your


755
00:21:50,546 --> 00:21:50,736
own.


756
00:21:51,926 --> 00:21:53,056
Now if you already have a


757
00:21:53,056 --> 00:21:53,876
workout app or you're


758
00:21:53,876 --> 00:21:55,506
considering making one, you


759
00:21:55,506 --> 00:21:56,566
should check out the what's new


760
00:21:56,566 --> 00:21:57,716
in health session later this


761
00:21:57,716 --> 00:21:59,196
week which will be going through


762
00:21:59,196 --> 00:22:01,056
how to use these APIs as well as


763
00:22:01,056 --> 00:22:02,366
other changes in HealthKit that


764
00:22:02,366 --> 00:22:03,966
you should take advantage of.


765
00:22:04,956 --> 00:22:06,806
Remember also adding a few new


766
00:22:06,806 --> 00:22:08,266
background modes in WatchKit


767
00:22:08,266 --> 00:22:08,666
this year.


768
00:22:09,286 --> 00:22:10,646
The first of which is a location


769
00:22:10,646 --> 00:22:11,316
background mode.


770
00:22:11,986 --> 00:22:13,166
This is great for things like


771
00:22:13,166 --> 00:22:15,226
location based games as well as


772
00:22:15,226 --> 00:22:17,776
turn-by-turn navigation apps.


773
00:22:17,986 --> 00:22:19,346
And similar to workout apps,


774
00:22:19,416 --> 00:22:20,936
it'll always be available every


775
00:22:20,936 --> 00:22:22,116
time the user raises their


776
00:22:22,116 --> 00:22:22,436
wrist.


777
00:22:22,436 --> 00:22:24,866
And if there's something that


778
00:22:24,866 --> 00:22:26,146
you need to alert the user to


779
00:22:26,146 --> 00:22:27,156
like when I've made a wrong


780
00:22:27,156 --> 00:22:28,726
turn, you can use audio and


781
00:22:28,726 --> 00:22:30,386
haptics from the background in


782
00:22:30,386 --> 00:22:31,416
order to get their attention.


783
00:22:31,966 --> 00:22:34,786
And like I had mentioned before,


784
00:22:34,786 --> 00:22:35,926
there was another session based


785
00:22:35,926 --> 00:22:38,256
activity that you can also water


786
00:22:38,256 --> 00:22:39,556
lock mode with and this is --


787
00:22:39,556 --> 00:22:40,596
that's location mode.


788
00:22:41,066 --> 00:22:42,386
So you can use it in conjunction


789
00:22:42,386 --> 00:22:43,646
with water-based activities.


790
00:22:44,286 --> 00:22:46,906
In order to conserve battery


791
00:22:46,906 --> 00:22:48,906
power, though, CPU in the


792
00:22:48,906 --> 00:22:50,186
background is limited.


793
00:22:50,356 --> 00:22:51,656
So you need to monitor what


794
00:22:51,656 --> 00:22:52,646
things need to be done in the


795
00:22:52,646 --> 00:22:54,166
background and what can be saved


796
00:22:54,226 --> 00:22:54,696
for later.


797
00:22:55,286 --> 00:22:59,586
And lastly, you must start the


798
00:22:59,586 --> 00:23:01,256
location session from the


799
00:23:01,256 --> 00:23:02,716
foreground just like a workout


800
00:23:03,276 --> 00:23:04,996
so that the user's always aware


801
00:23:04,996 --> 00:23:05,796
of what's going on.


802
00:23:06,316 --> 00:23:07,316
And while you're accessing


803
00:23:07,316 --> 00:23:09,096
location, there will be a status


804
00:23:09,096 --> 00:23:11,096
indicator and control center so


805
00:23:11,096 --> 00:23:12,556
that they can always monitor


806
00:23:12,556 --> 00:23:12,976
their privacy.


807
00:23:16,136 --> 00:23:17,536
And we've also added in-line


808
00:23:17,536 --> 00:23:19,136
audio recording as well as a


809
00:23:19,136 --> 00:23:19,916
background mode.


810
00:23:19,976 --> 00:23:22,696
And recording has been available


811
00:23:22,696 --> 00:23:24,616
since watchOS 2 but it was only


812
00:23:24,616 --> 00:23:26,636
offered in a modal form where we


813
00:23:26,636 --> 00:23:27,956
would hand a file back to you


814
00:23:27,956 --> 00:23:29,176
after the user had finished


815
00:23:29,176 --> 00:23:29,876
their recording.


816
00:23:30,536 --> 00:23:31,586
You could also continue


817
00:23:31,586 --> 00:23:32,676
recording when the user had


818
00:23:32,676 --> 00:23:34,006
dropped their wrist but it would


819
00:23:34,006 --> 00:23:35,026
keep the screen on for the


820
00:23:35,026 --> 00:23:35,816
entire time.


821
00:23:36,616 --> 00:23:38,726
Now in watchOS 4, we're offering


822
00:23:38,726 --> 00:23:40,346
in-line audio recording to solve


823
00:23:40,346 --> 00:23:41,356
some of these problems.


824
00:23:43,096 --> 00:23:45,196
First, you no longer are limited


825
00:23:45,196 --> 00:23:46,586
to the modal form so you can


826
00:23:46,586 --> 00:23:47,686
create your own custom U


827
00:23:47,686 --> 00:23:49,176
recording controls that fit the


828
00:23:49,236 --> 00:23:51,186
UI of your app.


829
00:23:51,476 --> 00:23:52,936
You can also do in-line audio


830
00:23:52,936 --> 00:23:53,516
recording.


831
00:23:53,636 --> 00:23:54,746
So if you wanted to look for a


832
00:23:54,746 --> 00:23:56,326
certain signature in the audio


833
00:23:56,676 --> 00:23:57,886
or if you wanted to do things


834
00:23:57,886 --> 00:23:59,066
like real time language


835
00:23:59,066 --> 00:24:00,136
translation on the watch.


836
00:24:01,446 --> 00:24:02,976
And you can continue recording


837
00:24:02,976 --> 00:24:03,976
when the user has dropped their


838
00:24:03,976 --> 00:24:05,416
wrist but now it's a full


839
00:24:05,416 --> 00:24:06,336
background mode.


840
00:24:06,506 --> 00:24:07,666
So you don't need to waste the


841
00:24:07,666 --> 00:24:09,256
additional battery power of


842
00:24:09,256 --> 00:24:10,136
keeping the screen on.


843
00:24:11,416 --> 00:24:12,746
Imagine being able to walk into


844
00:24:12,746 --> 00:24:14,286
classroom and record an entire


845
00:24:14,286 --> 00:24:15,696
lecture right from your wrist.


846
00:24:16,166 --> 00:24:18,746
And similar to other background


847
00:24:18,746 --> 00:24:21,416
modes in watchOS, the app will


848
00:24:21,416 --> 00:24:22,686
always appear every time the


849
00:24:22,686 --> 00:24:23,856
user raises their wrist.


850
00:24:24,296 --> 00:24:26,386
It'll be CPU limited and the app


851
00:24:26,426 --> 00:24:27,876
must be started -- the session


852
00:24:27,876 --> 00:24:28,686
must be started from the


853
00:24:28,686 --> 00:24:29,186
foreground.


854
00:24:30,006 --> 00:24:31,476
And while you're doing a


855
00:24:31,476 --> 00:24:32,956
recording, there will be an


856
00:24:32,956 --> 00:24:34,636
indicator on the watch face that


857
00:24:34,806 --> 00:24:36,556
the user can tap on to return to


858
00:24:36,556 --> 00:24:38,046
the recording app.


859
00:24:40,276 --> 00:24:41,886
These background modes are going


860
00:24:41,886 --> 00:24:43,146
to make a huge difference in


861
00:24:43,146 --> 00:24:45,226
doing ongoing tasks in watchOS


862
00:24:45,226 --> 00:24:45,466
4.


863
00:24:47,336 --> 00:24:48,416
All right.


864
00:24:49,806 --> 00:24:51,406
We're also supporting core


865
00:24:51,406 --> 00:24:53,056
Bluetooth on Watch -- in watchOS


866
00:24:53,056 --> 00:24:53,286
4.


867
00:24:53,686 --> 00:24:53,796
This --


868
00:24:54,516 --> 00:24:57,096
[ Applause ]


869
00:24:57,596 --> 00:24:58,466
This means you can connect


870
00:24:58,556 --> 00:25:00,086
directly to the Watch from your


871
00:25:00,086 --> 00:25:00,706
devices.


872
00:25:01,576 --> 00:25:03,716
And get updated data with lower


873
00:25:03,716 --> 00:25:05,826
latency as well as continue use


874
00:25:05,826 --> 00:25:07,616
when the phone is no longer


875
00:25:07,616 --> 00:25:08,016
present.


876
00:25:08,726 --> 00:25:09,916
And previously for Bluetooth


877
00:25:09,916 --> 00:25:11,366
devices, you'd have to connect


878
00:25:11,366 --> 00:25:13,076
with the phone and then shuttle


879
00:25:13,076 --> 00:25:14,126
data over using Watch


880
00:25:14,126 --> 00:25:14,696
connectivity.


881
00:25:15,236 --> 00:25:16,566
Now you should get much faster


882
00:25:16,566 --> 00:25:16,996
updates.


883
00:25:17,296 --> 00:25:18,686
And with core Bluetooth on the


884
00:25:18,686 --> 00:25:20,366
Watch, you can connect up to two


885
00:25:20,366 --> 00:25:21,076
peripherals.


886
00:25:21,926 --> 00:25:23,116
And we're only supporting


887
00:25:23,116 --> 00:25:24,356
central mode which means that


888
00:25:24,356 --> 00:25:26,126
you need to -- you can connect


889
00:25:26,126 --> 00:25:27,736
to other devices but the Watch


890
00:25:27,736 --> 00:25:29,366
cannot be used as a peripheral


891
00:25:29,366 --> 00:25:29,936
itself.


892
00:25:30,456 --> 00:25:32,206
And while you're in the


893
00:25:32,206 --> 00:25:33,766
foreground, there's a minimum


894
00:25:33,766 --> 00:25:35,536
time between samples of 30


895
00:25:35,536 --> 00:25:37,516
milliseconds and when used in


896
00:25:37,516 --> 00:25:38,816
conjunction with the background


897
00:25:38,816 --> 00:25:41,626
mode, that time is limited to


898
00:25:41,626 --> 00:25:43,106
120 milliseconds.


899
00:25:43,816 --> 00:25:46,336
Now when used in conjunction


900
00:25:46,336 --> 00:25:47,346
with a background mode,


901
00:25:47,976 --> 00:25:49,346
background running apps can only


902
00:25:49,346 --> 00:25:50,656
connect not scan.


903
00:25:50,656 --> 00:25:51,966
So you need to do your pairing


904
00:25:51,966 --> 00:25:53,556
and discovery process while the


905
00:25:53,556 --> 00:25:54,806
app is in the foreground.


906
00:25:58,466 --> 00:26:01,136
Now when the app is suspended,


907
00:26:01,196 --> 00:26:02,006
the peripheral will


908
00:26:02,006 --> 00:26:03,386
automatically be disconnected


909
00:26:03,386 --> 00:26:04,726
and we will not wake up the app


910
00:26:04,726 --> 00:26:06,196
for newly advertised values.


911
00:26:06,386 --> 00:26:08,386
So if you need ongoing updates,


912
00:26:08,386 --> 00:26:09,156
you need to use it in


913
00:26:09,156 --> 00:26:10,226
conjunction with the background


914
00:26:10,266 --> 00:26:10,486
mode.


915
00:26:11,076 --> 00:26:14,336
If you want to learn more, you


916
00:26:14,336 --> 00:26:15,326
should check out the core


917
00:26:15,326 --> 00:26:16,846
Bluetooth session later this


918
00:26:16,846 --> 00:26:18,946
week but first let's take a look


919
00:26:18,946 --> 00:26:20,326
at an example of how an app can


920
00:26:20,516 --> 00:26:22,146
make a use of this.


921
00:26:22,996 --> 00:26:26,086
So ReSound Smart 3D is an app


922
00:26:26,086 --> 00:26:27,736
that lets you connect to


923
00:26:27,736 --> 00:26:29,486
Bluetooth enabled hearing aids


924
00:26:29,486 --> 00:26:30,886
so you can change the listening


925
00:26:30,886 --> 00:26:32,656
environment depending on where


926
00:26:32,656 --> 00:26:33,126
you are.


927
00:26:33,126 --> 00:26:34,886
So I can change from an outdoor


928
00:26:34,886 --> 00:26:36,046
listening environment to a


929
00:26:36,046 --> 00:26:37,646
restaurant, which has a pretty


930
00:26:37,646 --> 00:26:39,466
different audio profile just


931
00:26:39,466 --> 00:26:40,586
with a tap on my wrist.


932
00:26:40,586 --> 00:26:42,916
And with watchOS 4, they can


933
00:26:42,916 --> 00:26:44,466
connect directly to the hearing


934
00:26:44,466 --> 00:26:46,066
aids so that they can make


935
00:26:46,066 --> 00:26:47,816
faster updates and they can


936
00:26:47,816 --> 00:26:49,586
continue using the device when


937
00:26:49,586 --> 00:26:51,076
the phone is no longer present.


938
00:26:51,786 --> 00:26:52,916
And that's core Bluetooth.


939
00:26:53,516 --> 00:26:58,576
[ Applause ]


940
00:26:59,076 --> 00:27:00,066
Now I mentioned before though


941
00:27:00,066 --> 00:27:01,066
there's something called the


942
00:27:01,156 --> 00:27:02,256
Frontmost App State.


943
00:27:02,356 --> 00:27:03,706
This is something that we're


944
00:27:03,706 --> 00:27:05,226
really excited about and I think


945
00:27:05,226 --> 00:27:06,236
it's going to change the way


946
00:27:06,236 --> 00:27:07,486
that we think about creating our


947
00:27:07,486 --> 00:27:08,166
Watch apps.


948
00:27:09,036 --> 00:27:10,666
The experience of using a Watch


949
00:27:10,666 --> 00:27:12,506
app is very different from apps


950
00:27:12,506 --> 00:27:13,636
on other platforms.


951
00:27:14,236 --> 00:27:15,536
When I use an iPhone app, for


952
00:27:15,536 --> 00:27:17,196
example, I open the app.


953
00:27:17,196 --> 00:27:18,846
I use it for some period of time


954
00:27:19,146 --> 00:27:21,086
and eventually I close it by


955
00:27:21,196 --> 00:27:22,056
pressing the home button.


956
00:27:23,456 --> 00:27:25,646
On a Watch app, though, I may


957
00:27:25,646 --> 00:27:27,226
use it for a much shorter period


958
00:27:27,226 --> 00:27:27,626
of time.


959
00:27:27,936 --> 00:27:30,946
Perhaps just a few seconds but I


960
00:27:30,946 --> 00:27:33,266
may use the app dozens or more


961
00:27:33,266 --> 00:27:35,296
time within a single session.


962
00:27:36,046 --> 00:27:37,886
For example, I may use the


963
00:27:37,886 --> 00:27:39,986
reminders app to go shopping at


964
00:27:39,986 --> 00:27:41,846
the grocery store to check off


965
00:27:41,846 --> 00:27:43,006
items as I'm putting them in my


966
00:27:43,006 --> 00:27:43,316
cart.


967
00:27:44,066 --> 00:27:45,556
Every time I put something in my


968
00:27:45,556 --> 00:27:47,656
cart, I raise my wrist and the


969
00:27:47,656 --> 00:27:49,076
app is right there where I left


970
00:27:49,076 --> 00:27:49,166
it.


971
00:27:49,166 --> 00:27:51,046
It makes it really easy for me


972
00:27:51,046 --> 00:27:52,296
to find the item that I'd like


973
00:27:52,296 --> 00:27:54,886
to check off and tap it and then


974
00:27:54,886 --> 00:27:55,976
get on with my shopping.


975
00:27:57,146 --> 00:27:58,746
This period where we resumed to


976
00:27:58,746 --> 00:28:00,486
your app rather than the clock


977
00:28:00,486 --> 00:28:02,376
face is what we call the


978
00:28:02,376 --> 00:28:04,786
Frontmost App State.


979
00:28:05,096 --> 00:28:06,826
In watchOS 3, that period of


980
00:28:06,826 --> 00:28:08,866
time was eight minutes between


981
00:28:08,866 --> 00:28:09,776
each wrist raise.


982
00:28:10,886 --> 00:28:12,466
We found that this was often too


983
00:28:12,466 --> 00:28:13,846
long for users and they would


984
00:28:13,846 --> 00:28:15,686
end up in the same app long


985
00:28:15,686 --> 00:28:16,876
after they were finished using


986
00:28:17,936 --> 00:28:18,016
it.


987
00:28:18,016 --> 00:28:20,416
So in watchOS 3.2, we changed


988
00:28:20,416 --> 00:28:22,156
this limit to two minutes.


989
00:28:22,696 --> 00:28:26,846
And that happens between each


990
00:28:26,846 --> 00:28:27,476
wrist raise.


991
00:28:27,586 --> 00:28:29,606
So for the most part, most


992
00:28:29,606 --> 00:28:31,886
activities will remain frontmost


993
00:28:31,886 --> 00:28:33,526
for the entire duration of using


994
00:28:34,116 --> 00:28:37,126
it but we recognize that there's


995
00:28:37,126 --> 00:28:38,916
some use cases in which you will


996
00:28:38,916 --> 00:28:40,386
need more than two minutes


997
00:28:40,606 --> 00:28:41,736
between each wrist raise.


998
00:28:41,776 --> 00:28:44,076
And for that, we're allowing you


999
00:28:44,076 --> 00:28:45,666
to specify when you need to


1000
00:28:45,666 --> 00:28:46,816
extend your frontmost time.


1001
00:28:47,366 --> 00:28:49,916
And that will change the time


1002
00:28:49,916 --> 00:28:51,686
out back from two minutes out to


1003
00:28:51,686 --> 00:28:52,346
eight minutes.


1004
00:28:52,586 --> 00:28:54,176
So let's take a look at how you


1005
00:28:54,226 --> 00:28:56,306
enable this in code.


1006
00:28:56,516 --> 00:28:57,496
Like most of the other things


1007
00:28:57,496 --> 00:28:58,446
that we've talked about today,


1008
00:28:58,576 --> 00:28:59,856
it's a simple call on the shared


1009
00:28:59,856 --> 00:29:00,386
extension.


1010
00:29:00,386 --> 00:29:01,496
It's a simple property.


1011
00:29:01,986 --> 00:29:03,326
You can set to true whenever you


1012
00:29:03,326 --> 00:29:04,606
need to extend your frontmost


1013
00:29:04,606 --> 00:29:04,876
time.


1014
00:29:05,716 --> 00:29:09,466
You must be judicious about this


1015
00:29:09,466 --> 00:29:11,486
though because we don't want


1016
00:29:11,486 --> 00:29:13,576
users to remain in apps long


1017
00:29:13,576 --> 00:29:15,156
after they're finished using


1018
00:29:15,156 --> 00:29:15,386
them.


1019
00:29:15,886 --> 00:29:18,106
So let's take a look back at my


1020
00:29:18,106 --> 00:29:19,616
reminder shopping list example.


1021
00:29:20,736 --> 00:29:22,896
When I turn on -- when I open up


1022
00:29:22,896 --> 00:29:23,956
the shopping list, I probably


1023
00:29:23,956 --> 00:29:25,406
want to turn on and extended


1024
00:29:25,406 --> 00:29:27,886
frontmost time so that if I had


1025
00:29:27,886 --> 00:29:29,926
like an item between two aisles


1026
00:29:30,196 --> 00:29:31,096
that took longer than two


1027
00:29:31,096 --> 00:29:32,166
minutes, I wouldn't have to go


1028
00:29:32,166 --> 00:29:33,556
back to open up the app.


1029
00:29:34,666 --> 00:29:36,516
But as soon as I've finished the


1030
00:29:36,516 --> 00:29:38,126
items in my shopping list, it's


1031
00:29:38,126 --> 00:29:39,386
probably a good opportunity to


1032
00:29:39,386 --> 00:29:40,936
turn off extended frontmost


1033
00:29:40,936 --> 00:29:41,196
time.


1034
00:29:41,376 --> 00:29:42,696
So that the app will just


1035
00:29:43,076 --> 00:29:44,196
automatically close in the


1036
00:29:44,196 --> 00:29:45,376
background without the user


1037
00:29:45,376 --> 00:29:46,486
having to do anything.


1038
00:29:46,956 --> 00:29:48,986
Now in addition to giving you


1039
00:29:48,986 --> 00:29:50,876
more flexibility for when you


1040
00:29:50,876 --> 00:29:52,586
remain in frontmost, we're also


1041
00:29:52,586 --> 00:29:54,316
changing some of the behaviors


1042
00:29:54,316 --> 00:29:56,556
of the API so that you can have


1043
00:29:56,586 --> 00:29:58,786
more up-to-date information and


1044
00:29:58,786 --> 00:30:00,556
meet the expectations of users.


1045
00:30:04,066 --> 00:30:05,406
Now you can already extend your


1046
00:30:05,406 --> 00:30:07,126
run time by up to 30 seconds


1047
00:30:07,606 --> 00:30:10,336
using the expiring activity on


1048
00:30:10,396 --> 00:30:11,266
NS [phonetic] process info.


1049
00:30:11,456 --> 00:30:13,286
And this is a great opportunity


1050
00:30:13,286 --> 00:30:14,556
to do things like networking


1051
00:30:14,556 --> 00:30:15,096
tasks.


1052
00:30:15,496 --> 00:30:16,946
And we've increased the priority


1053
00:30:16,946 --> 00:30:18,616
of this request in watchOS 4 so


1054
00:30:18,746 --> 00:30:20,226
that you can do more things in


1055
00:30:20,226 --> 00:30:21,296
the time that you've requested.


1056
00:30:21,826 --> 00:30:27,126
And if Watch connectivity or url


1057
00:30:27,126 --> 00:30:29,196
session data comes into your app


1058
00:30:29,536 --> 00:30:30,566
while you're in the frontmost


1059
00:30:30,566 --> 00:30:32,146
state, we will immediately


1060
00:30:32,146 --> 00:30:33,996
resume your app and in most


1061
00:30:33,996 --> 00:30:35,366
cases, the payload will begin


1062
00:30:35,366 --> 00:30:37,206
downloading immediately as well.


1063
00:30:38,266 --> 00:30:40,006
And if there's important


1064
00:30:40,006 --> 00:30:41,916
information that you recognize


1065
00:30:41,916 --> 00:30:43,576
in that data, while you're in


1066
00:30:43,576 --> 00:30:44,836
the frontmost state if you have


1067
00:30:44,836 --> 00:30:46,956
run time, you can play haptics


1068
00:30:47,036 --> 00:30:47,886
to alert the user.


1069
00:30:48,416 --> 00:30:51,046
And if a notification for your


1070
00:30:51,046 --> 00:30:52,246
app comes in while you're in


1071
00:30:52,246 --> 00:30:53,816
that state, you could also


1072
00:30:53,816 --> 00:30:54,896
handle it using the user


1073
00:30:54,896 --> 00:30:56,726
notification API just like you


1074
00:30:56,726 --> 00:30:57,776
can when the app is in the


1075
00:30:57,776 --> 00:30:58,286
foreground.


1076
00:30:58,836 --> 00:31:01,076
Let's take a look at an example


1077
00:31:01,076 --> 00:31:02,066
that ties all of these


1078
00:31:02,066 --> 00:31:03,146
capabilities together.


1079
00:31:05,116 --> 00:31:06,856
So here we have a simple


1080
00:31:06,856 --> 00:31:08,086
ride-sharing app.


1081
00:31:08,326 --> 00:31:09,396
It's showing me that I have an


1082
00:31:09,396 --> 00:31:11,716
expected five-minute wait time.


1083
00:31:12,576 --> 00:31:14,076
This is a great opportunity to


1084
00:31:14,076 --> 00:31:15,826
turn extended frontmost time on


1085
00:31:15,896 --> 00:31:17,166
because I already know it's


1086
00:31:17,166 --> 00:31:18,386
pretty likely that the user's


1087
00:31:18,386 --> 00:31:19,486
going to need longer than the


1088
00:31:19,486 --> 00:31:20,436
two-minute timeout.


1089
00:31:21,676 --> 00:31:23,056
It's going to be a bit of a wait


1090
00:31:23,056 --> 00:31:24,016
and I probably don't want to


1091
00:31:24,016 --> 00:31:25,176
keep my wrist up the entire


1092
00:31:25,176 --> 00:31:25,546
time.


1093
00:31:25,996 --> 00:31:27,876
So I tap on the request ride


1094
00:31:27,876 --> 00:31:29,476
button and drop my wrist.


1095
00:31:30,076 --> 00:31:32,056
Now the screen may be off but


1096
00:31:32,056 --> 00:31:33,546
I'm definitely not done using


1097
00:31:33,546 --> 00:31:34,516
the app because I'm still


1098
00:31:34,516 --> 00:31:35,326
waiting for the ride.


1099
00:31:35,416 --> 00:31:37,516
And at some point, the server's


1100
00:31:37,516 --> 00:31:38,386
going to send a push


1101
00:31:38,386 --> 00:31:39,736
notification that'll get


1102
00:31:39,806 --> 00:31:42,046
forwarded to my Watch and at


1103
00:31:42,046 --> 00:31:43,706
that point, the app can handle


1104
00:31:43,706 --> 00:31:45,696
the notification and recognize


1105
00:31:45,696 --> 00:31:46,966
that it's important information


1106
00:31:47,316 --> 00:31:49,146
and play a haptic to alert me.


1107
00:31:50,306 --> 00:31:51,596
When I raise my wrist, the app


1108
00:31:51,596 --> 00:31:53,606
has already been updated showing


1109
00:31:53,606 --> 00:31:55,316
me important information like


1110
00:31:55,316 --> 00:31:57,016
the arrival time as well as the


1111
00:31:57,016 --> 00:31:59,026
driver's name and star rating.


1112
00:31:59,286 --> 00:32:00,456
Even the ability to call the


1113
00:32:00,456 --> 00:32:00,886
driver.


1114
00:32:01,476 --> 00:32:03,896
At this point, I should turn off


1115
00:32:03,896 --> 00:32:05,526
extended frontmost time because


1116
00:32:05,526 --> 00:32:06,846
it's likely that the user's done


1117
00:32:06,846 --> 00:32:09,126
using the app for now, at least.


1118
00:32:09,456 --> 00:32:10,736
Getting this frontmost state


1119
00:32:10,736 --> 00:32:12,396
right will make your app feel


1120
00:32:12,396 --> 00:32:13,016
like magic.


1121
00:32:13,946 --> 00:32:15,226
Always knowing when the user's


1122
00:32:15,226 --> 00:32:17,126
done using your app as well as


1123
00:32:17,126 --> 00:32:18,856
when they need more time in it.


1124
00:32:18,986 --> 00:32:20,646
And making sure that the data in


1125
00:32:20,646 --> 00:32:22,396
your app is up-to-date and


1126
00:32:22,396 --> 00:32:23,756
showing just what the user wants


1127
00:32:23,756 --> 00:32:25,216
to see for the next time that


1128
00:32:25,216 --> 00:32:26,196
they may use their app.


1129
00:32:26,306 --> 00:32:28,306
I'd highly encourage you to


1130
00:32:28,306 --> 00:32:29,696
check out the session later


1131
00:32:29,696 --> 00:32:32,316
today on the life of a watchOS


1132
00:32:32,646 --> 00:32:32,846
app.


1133
00:32:33,076 --> 00:32:34,736
This will be going into detail


1134
00:32:34,906 --> 00:32:36,446
about app life cycle events,


1135
00:32:36,766 --> 00:32:37,946
making use of the frontmost


1136
00:32:37,946 --> 00:32:39,346
state as well as background


1137
00:32:39,346 --> 00:32:41,226
modes and more to make a great


1138
00:32:41,226 --> 00:32:42,116
Watch experience.


1139
00:32:42,726 --> 00:32:46,046
To summarize, we've added a


1140
00:32:46,046 --> 00:32:47,736
bunch of new capabilities to our


1141
00:32:47,736 --> 00:32:49,566
user interface components to


1142
00:32:49,566 --> 00:32:51,186
make them flexible, to create


1143
00:32:51,216 --> 00:32:53,176
custom user interfaces like


1144
00:32:53,176 --> 00:32:54,186
overlapping interface


1145
00:32:54,186 --> 00:32:57,116
controllers as well as auto


1146
00:32:57,116 --> 00:32:59,626
rotate mode.


1147
00:33:00,366 --> 00:33:01,816
We're changing the architecture


1148
00:33:01,816 --> 00:33:03,416
of Watch apps to make them


1149
00:33:03,416 --> 00:33:05,096
perform even better by loading


1150
00:33:05,096 --> 00:33:06,336
the extension and an app into


1151
00:33:06,336 --> 00:33:07,856
the same process at run time.


1152
00:33:08,386 --> 00:33:10,666
And we're adding new background


1153
00:33:10,666 --> 00:33:12,426
modes as well as core Bluetooth


1154
00:33:12,426 --> 00:33:14,276
support and the changes that we


1155
00:33:14,276 --> 00:33:15,196
just went through for the


1156
00:33:15,196 --> 00:33:16,786
frontmost app state, which


1157
00:33:16,786 --> 00:33:18,326
should make it easier for you to


1158
00:33:18,326 --> 00:33:19,486
keep your app up-to-date for


1159
00:33:19,486 --> 00:33:19,966
users.


1160
00:33:20,536 --> 00:33:23,016
And I mentioned a number of


1161
00:33:23,016 --> 00:33:23,976
sessions that you should check


1162
00:33:23,976 --> 00:33:25,716
out this week to learn more


1163
00:33:25,716 --> 00:33:26,796
about developing on the Watch


1164
00:33:26,826 --> 00:33:27,316
platform.


1165
00:33:28,066 --> 00:33:29,566
If you want to get more


1166
00:33:29,566 --> 00:33:31,196
information like the session


1167
00:33:31,196 --> 00:33:32,956
links for videos as well as


1168
00:33:32,956 --> 00:33:34,676
other resources, please visit


1169
00:33:34,676 --> 00:33:36,186
the developer.apple.com link.


1170
00:33:36,736 --> 00:33:38,166
Thank you so much for coming to


1171
00:33:38,166 --> 00:33:39,536
hear what's new in watchOS 4.


1172
00:33:39,536 --> 00:33:40,346
I can't wait to see what you


1173
00:33:40,346 --> 00:33:40,976
guys build next.


1174
00:33:41,516 --> 00:33:45,500
[ Applause ]

