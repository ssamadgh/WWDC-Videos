1
00:00:12,156 --> 00:00:12,736
>> Hi everyone.


2
00:00:13,156 --> 00:00:16,146
I'm Clare and I'm on the
iOS Accessibility Team here


3
00:00:16,146 --> 00:00:16,486
at Apple.


4
00:00:16,776 --> 00:00:20,136
Today, I'll be sharing with
you about accessibility on iOS,


5
00:00:20,816 --> 00:00:25,376
and how you can develop your
apps to be used by everyone.


6
00:00:25,706 --> 00:00:28,886
Our talk today is going
to be in two parts.


7
00:00:30,116 --> 00:00:32,716
First, I'll give an
introduction to accessibility.


8
00:00:33,576 --> 00:00:35,606
I'll talk about some of
the features we offer


9
00:00:35,606 --> 00:00:39,796
on iOS currently, as well as
some new things coming in iOS 8.


10
00:00:40,426 --> 00:00:43,426
In the second part of this talk,


11
00:00:44,256 --> 00:00:46,476
I'll be showing you how you
can make your apps accessible,


12
00:00:47,246 --> 00:00:49,236
both by adding visual
accommodations,


13
00:00:50,476 --> 00:00:52,726
and by implementing
Semantic Accessibility.


14
00:00:58,276 --> 00:01:01,036
So first, what is accessibility?


15
00:01:02,156 --> 00:01:03,736
Accessibility is all


16
00:01:03,736 --> 00:01:05,836
about making things
usable for everyone.


17
00:01:06,606 --> 00:01:09,946
On iOS, we look at four
broad areas of user needs.


18
00:01:10,616 --> 00:01:13,906
We want users with physical
and motor challenges,


19
00:01:15,346 --> 00:01:19,156
users with learning needs,
users with hearing loss,


20
00:01:20,106 --> 00:01:21,846
and users with different
vision needs,


21
00:01:22,176 --> 00:01:24,236
to be able to experience
iOS fully.


22
00:01:24,816 --> 00:01:27,366
Our goal is equal
access for everyone.


23
00:01:27,876 --> 00:01:33,576
So let's look at some examples
of how we accomplish this.


24
00:01:33,956 --> 00:01:36,836
Some users may have a physical
impairment that prevents them


25
00:01:36,836 --> 00:01:38,186
from using the touch screen.


26
00:01:38,336 --> 00:01:42,066
In fact, their only [inaudible]
device may be a switch.


27
00:01:42,816 --> 00:01:45,156
A switch could be something
like a button mounted


28
00:01:45,156 --> 00:01:46,186
on a wheelchair headrest.


29
00:01:47,286 --> 00:01:51,276
So how do we make the rich
touch interface of iOS usable


30
00:01:51,276 --> 00:01:53,026
by someone who can
only use a switch?


31
00:01:53,576 --> 00:01:57,636
Our answer is Switch Control.


32
00:01:57,876 --> 00:02:02,356
When Switch Control is enabled,
a cursor appears on the screen,


33
00:02:02,746 --> 00:02:07,066
and it moves from item to
item with a specific timing.


34
00:02:07,426 --> 00:02:12,086
When the user activates their
switch, that lets them interact


35
00:02:12,256 --> 00:02:13,266
with a highlighted element,


36
00:02:13,806 --> 00:02:16,646
so they can do things
like tap or scroll.


37
00:02:17,036 --> 00:02:21,566
Next, let's look at learning.


38
00:02:21,766 --> 00:02:24,846
iOS devices have been incredibly
powerful in the classroom,


39
00:02:24,846 --> 00:02:27,576
because of their
easy to use interface


40
00:02:28,136 --> 00:02:29,136
and their engaging apps.


41
00:02:30,096 --> 00:02:32,086
For the same reasons,
they've been great


42
00:02:32,086 --> 00:02:33,626
for children with autism.


43
00:02:34,166 --> 00:02:37,196
But for these users, we faced
some unique challenges at first.


44
00:02:38,056 --> 00:02:41,236
For one, when a child with
autism is learning in an app,


45
00:02:41,816 --> 00:02:43,616
they might decide to
press the Home button.


46
00:02:44,026 --> 00:02:46,336
And now the device is
full of distractions.


47
00:02:46,896 --> 00:02:50,896
So to address this issue,
we created Guided Access,


48
00:02:51,096 --> 00:02:53,326
which is a way for
parents or educators


49
00:02:53,636 --> 00:02:56,286
to keep the device
in a specific app.


50
00:02:56,916 --> 00:03:00,426
When Guided Access is enabled,
pressing the Home button


51
00:03:00,596 --> 00:03:02,036
or the Lock button
have no effect,


52
00:03:02,836 --> 00:03:05,846
and so the child can have
an uninterrupted learning


53
00:03:05,846 --> 00:03:07,716
experience, free
from distractions.


54
00:03:08,076 --> 00:03:12,116
Next, let's look at hearing.


55
00:03:13,056 --> 00:03:15,846
Many users with hearing
loss use hearing aids


56
00:03:15,976 --> 00:03:17,806
to help amplify the
sound around them,


57
00:03:18,316 --> 00:03:21,136
but traditional hearing aids
come with a couple of issues.


58
00:03:22,056 --> 00:03:25,876
First, they require that
you carry a remote with you


59
00:03:25,876 --> 00:03:27,326
so that you can adjust
the volume,


60
00:03:27,606 --> 00:03:28,946
and that can be cumbersome.


61
00:03:30,176 --> 00:03:33,346
And second, call quality
can be less than optimal


62
00:03:33,656 --> 00:03:34,696
when using a hearing aid.


63
00:03:34,866 --> 00:03:37,096
When you have a phone
next to a hearing aid,


64
00:03:37,266 --> 00:03:40,036
either the hearing aid
amplifies all the sound,


65
00:03:40,036 --> 00:03:43,826
including background noise,
or it picks up the signal


66
00:03:44,006 --> 00:03:45,656
from the phone's
electromagnetic field,


67
00:03:46,096 --> 00:03:49,286
but that signal can also
be noisy, creating static.


68
00:03:49,906 --> 00:03:54,326
So to address these two
issues, we partnered


69
00:03:54,326 --> 00:03:56,516
with hearing aid
manufacturers around the globe


70
00:03:56,956 --> 00:03:58,566
to create made-for-iPhone
hearing aids.


71
00:03:59,236 --> 00:04:01,866
These hearing aids connect
directly to your iPhone,


72
00:04:02,196 --> 00:04:04,516
and you can do things
like adjust the volume


73
00:04:04,516 --> 00:04:07,246
of your hearing aids, without
the need for a separate remote.


74
00:04:07,776 --> 00:04:10,866
In addition, audio streams
directly from your iPhone


75
00:04:11,036 --> 00:04:11,806
to your hearing aid,


76
00:04:12,036 --> 00:04:14,116
so it becomes effectively
a Bluetooth headset.


77
00:04:14,306 --> 00:04:17,245
And that improves call
quality dramatically.


78
00:04:17,666 --> 00:04:23,656
Finally, let's look at
the broad area of vision.


79
00:04:24,146 --> 00:04:26,266
When the iPhone was
first introduced,


80
00:04:26,876 --> 00:04:29,916
many people were concerned that
blind users would not be able


81
00:04:29,916 --> 00:04:31,286
to take advantage
of its features.


82
00:04:31,476 --> 00:04:35,096
Because if you think about it,
how do you use a touch screen


83
00:04:35,546 --> 00:04:36,856
if you don't see the screen.


84
00:04:37,636 --> 00:04:38,776
It's going to be difficult


85
00:04:38,776 --> 00:04:41,046
because you won't necessarily
know what you're touching,


86
00:04:41,436 --> 00:04:43,116
and you might accidentally
tap a button


87
00:04:43,116 --> 00:04:46,206
that you didn't mean to tap.


88
00:04:46,206 --> 00:04:48,756
So to address this,
we created VoiceOver.


89
00:04:49,646 --> 00:04:53,126
When VoiceOver is enabled,
a user can touch anywhere


90
00:04:53,126 --> 00:04:55,636
on screen to hear what
they just touched,


91
00:04:56,066 --> 00:05:02,976
before they take an action
like tapping a button.


92
00:05:03,326 --> 00:05:06,236
We also have accommodations
in our settings for users


93
00:05:06,236 --> 00:05:09,516
with low vision who may not
necessarily need the full power


94
00:05:09,516 --> 00:05:10,226
of VoiceOver.


95
00:05:10,526 --> 00:05:13,986
For example, some users
prefer bolder fonts,


96
00:05:14,266 --> 00:05:18,746
in which case they can enable
bold text to get thicker text.


97
00:05:19,176 --> 00:05:22,396
Some users may need
higher contrast, and if so,


98
00:05:22,396 --> 00:05:24,786
we offer several options,
including the ability


99
00:05:24,786 --> 00:05:27,136
to reduce transparency
on the system.


100
00:05:29,476 --> 00:05:32,716
And finally, for users who
are more sensitive to motion,


101
00:05:32,926 --> 00:05:34,356
we offer a Reduce
Motion setting,


102
00:05:34,356 --> 00:05:36,526
which provides more
subtle transitions.


103
00:05:36,896 --> 00:05:40,076
For example, when you launch an
app with Reduce Motion enabled,


104
00:05:40,606 --> 00:05:43,516
it cross-fades into view.


105
00:05:46,716 --> 00:05:49,356
So that's some of what
we offer on iOS currently


106
00:05:49,356 --> 00:05:50,636
to support equal access.


107
00:05:51,076 --> 00:05:54,026
But we've been working hard, and
I'd like to highlight just some


108
00:05:54,026 --> 00:05:56,026
of the new features
we're offering in iOS 8.


109
00:05:56,616 --> 00:06:01,426
First, Guided Access
Time Limits.


110
00:06:02,166 --> 00:06:03,966
Time limits are all
about transitions.


111
00:06:04,286 --> 00:06:08,496
When a child is immersed in an
app, and then it's time to move


112
00:06:08,496 --> 00:06:09,506
on to the next activity,


113
00:06:09,776 --> 00:06:12,186
that transition can
cause some anxiety.


114
00:06:13,036 --> 00:06:16,886
With time limits, a caretaker
can assign a specific amount


115
00:06:16,996 --> 00:06:18,696
of time that a child
should use an app.


116
00:06:19,066 --> 00:06:21,386
When the time limit
is almost reached,


117
00:06:21,756 --> 00:06:24,756
the child receives a warning,
helping them to prepare to move


118
00:06:24,756 --> 00:06:25,836
on to the next activity.


119
00:06:26,116 --> 00:06:29,886
And when the time limit
is over, the device locks.


120
00:06:30,366 --> 00:06:32,676
Next, we're bringing
Alex to iOS.


121
00:06:32,786 --> 00:06:35,456
Some of you may have
already met Alex.


122
00:06:35,806 --> 00:06:37,986
But for those who haven't,
I'll let him introduce himself.


123
00:06:39,316 --> 00:06:40,686
>> Hi everyone.


124
00:06:41,316 --> 00:06:44,066
I'm Alex. And I'm
the US English voice.


125
00:06:44,836 --> 00:06:48,746
I've been living on Macs for
years, and now I'm excited


126
00:06:48,746 --> 00:06:51,036
to make myself at home on iOS.


127
00:06:51,036 --> 00:06:54,046
>> So Alex will be
available in all


128
00:06:54,046 --> 00:06:56,276
of our assistive
technologies that use speech,


129
00:06:56,626 --> 00:06:58,926
including VoiceOver,
Speak Selection,


130
00:07:00,216 --> 00:07:01,866
and a new feature
we're introducing


131
00:07:01,866 --> 00:07:03,656
in iOS 8, called Speak Screen.


132
00:07:04,136 --> 00:07:06,086
Speak Screen is great for anyone


133
00:07:06,156 --> 00:07:07,546
who might have trouble
reading the screen.


134
00:07:07,696 --> 00:07:12,336
When it's enabled, you can do
a simple gesture or ask Siri


135
00:07:12,336 --> 00:07:13,336
to speak the screen to you,


136
00:07:13,336 --> 00:07:16,776
and the device will start
reading whatever's on screen.


137
00:07:17,326 --> 00:07:20,666
You also get options, like
the ability to pause, rewind,


138
00:07:21,086 --> 00:07:22,436
or again slow down the speech.


139
00:07:22,726 --> 00:07:27,476
And finally, I'd like
to highlight Zoom.


140
00:07:27,946 --> 00:07:30,836
Some of you may have been
using Zoom for years on iOS,


141
00:07:31,296 --> 00:07:35,486
but we've re-imagined it in
iOS 8, and have a whole new way


142
00:07:35,486 --> 00:07:37,616
for you to interact with it.


143
00:07:38,206 --> 00:07:40,616
But before I introduce
that, let's first talk


144
00:07:40,616 --> 00:07:42,056
about what Zoom does currently.


145
00:07:42,556 --> 00:07:46,496
Zoom magnifies the
entire screen,


146
00:07:46,916 --> 00:07:49,586
and then you use three-finger
gestures to navigate.


147
00:07:50,796 --> 00:07:52,966
This approach comes
with a few issues.


148
00:07:53,816 --> 00:07:56,496
First, if you're using
three-finger gestures,


149
00:07:57,026 --> 00:08:00,286
that means you're covering up a
significant part of the screen,


150
00:08:00,286 --> 00:08:03,406
especially on iPhones.


151
00:08:04,436 --> 00:08:06,856
Also using three-finger
gestures means it's hard


152
00:08:06,856 --> 00:08:08,196
to use a phone on the go.


153
00:08:08,726 --> 00:08:11,406
You can't use the phone in a
single hand, you always need


154
00:08:11,406 --> 00:08:13,926
to have one hand to hold
it, and the other hand


155
00:08:13,926 --> 00:08:15,036
to do the three-finger gestures.


156
00:08:16,096 --> 00:08:20,996
And finally, typing can be
tricky with Zoom enabled.


157
00:08:21,396 --> 00:08:23,196
You have the choice
between zooming


158
00:08:23,196 --> 00:08:25,266
in on the content
you're creating,


159
00:08:26,166 --> 00:08:27,976
or having access to
the full keyboard.


160
00:08:28,536 --> 00:08:30,726
But you can't have
both at the same time.


161
00:08:31,296 --> 00:08:35,126
So to address all
of these issues,


162
00:08:35,126 --> 00:08:37,706
we're introducing a new
windowed mode for Zoom.


163
00:08:37,836 --> 00:08:39,265
And I'd like to demo
that to you now.


164
00:08:40,645 --> 00:08:42,525
This is windowed Zoom.


165
00:08:42,726 --> 00:08:45,346
Notice how only part of
the screen is magnified?


166
00:08:45,696 --> 00:08:49,366
I can change what part is
magnified by dragging the edge


167
00:08:49,526 --> 00:08:51,046
of the window with
a single finger.


168
00:08:52,056 --> 00:08:56,456
I can also tap the edge of the
window to get resize handles,


169
00:08:56,586 --> 00:08:58,806
so I can change how much
of the screen is magnified.


170
00:08:59,366 --> 00:09:04,156
If I tap on the arrow at the
edge of the window, I get a menu


171
00:09:04,156 --> 00:09:06,176
with several options,
including the ability


172
00:09:06,176 --> 00:09:07,306
to adjust my Zoom level.


173
00:09:07,606 --> 00:09:11,456
Now, let's go into notes.


174
00:09:11,456 --> 00:09:16,266
I'm going to create a new
note, and watch what happens


175
00:09:16,266 --> 00:09:17,666
when the keyboard comes up.


176
00:09:18,536 --> 00:09:21,046
The Zoom window automatically
got out of the way


177
00:09:21,046 --> 00:09:23,516
of the keyboard, so I have
full access of the keyboard,


178
00:09:23,806 --> 00:09:25,236
but my content is zoomed.


179
00:09:25,536 --> 00:09:31,996
And as I type, notice how the
Zoom window follows my cursor.


180
00:09:31,996 --> 00:09:33,916
So I can always see
what I just typed.


181
00:09:35,196 --> 00:09:37,436
So that's some of what we've
been doing here at Apple


182
00:09:37,846 --> 00:09:39,746
to promote equal
access for everyone.


183
00:09:40,636 --> 00:09:43,626
But for the second part of
the story, we need your help.


184
00:09:44,266 --> 00:09:48,036
IOS is a great platform because
of all the apps you guys create,


185
00:09:48,186 --> 00:09:50,106
and it's up to you to make sure


186
00:09:50,106 --> 00:09:52,266
that your apps can
be used by everyone.


187
00:09:52,876 --> 00:09:56,906
To that end, I'll be showing
you now how you can do


188
00:09:56,906 --> 00:09:57,706
that with our API.


189
00:10:00,296 --> 00:10:02,506
Our tutorial is going
to be in two parts.


190
00:10:02,906 --> 00:10:06,516
First, I'll show you how to add
visual accommodations for users


191
00:10:06,516 --> 00:10:07,506
with different vision needs.


192
00:10:07,826 --> 00:10:09,846
And second, I'll
be showing you how


193
00:10:09,846 --> 00:10:11,616
to implement some
magic accessibility.


194
00:10:12,026 --> 00:10:16,356
So an assistive technology like
VoiceOver can navigate your app.


195
00:10:16,356 --> 00:10:17,906
Earlier in this talk,
I showed some


196
00:10:17,906 --> 00:10:20,996
of the visual accommodations
we offer on iOS for users


197
00:10:20,996 --> 00:10:21,946
with different vision needs.


198
00:10:22,636 --> 00:10:24,306
Now, we're providing API,


199
00:10:24,876 --> 00:10:26,346
so you can make those
accommodations


200
00:10:26,346 --> 00:10:27,456
in your apps as well.


201
00:10:28,296 --> 00:10:31,826
We have a way for you to detect
whether the user has bold text,


202
00:10:32,226 --> 00:10:34,536
reduced transparency,
darkened colors,


203
00:10:34,636 --> 00:10:36,106
or Reduce Motion enabled.


204
00:10:36,136 --> 00:10:37,986
And that makes it
really easy for you


205
00:10:38,176 --> 00:10:41,116
to make specific adjustments
in your app for those users.


206
00:10:41,646 --> 00:10:44,776
So I'd like to show you
how you can do that now,


207
00:10:45,476 --> 00:10:47,636
using a sample app we've
created for this presentation.


208
00:10:48,216 --> 00:10:51,636
Okay, so first we're going to
identify some areas of our app


209
00:10:51,786 --> 00:10:53,206
that need visual accommodations.


210
00:10:53,416 --> 00:10:55,816
To do that, I've
gone to my simulator,


211
00:10:55,886 --> 00:10:58,606
and I've enabled several of
the accessibility settings.


212
00:10:58,766 --> 00:11:02,476
In this case, I've got
Bold Text, Reduce Motion,


213
00:11:03,096 --> 00:11:04,626
and underneath Increase
Contrast,


214
00:11:04,626 --> 00:11:06,706
I've also got Reduced
Transparency


215
00:11:06,996 --> 00:11:07,906
and Darkened Colors.


216
00:11:08,166 --> 00:11:11,376
So that way, when we build
and run our app from Xcode,


217
00:11:11,376 --> 00:11:13,986
we'll see what a user with
those settings will see.


218
00:11:14,596 --> 00:11:16,196
So now, I'm going to Xcode.


219
00:11:16,196 --> 00:11:20,236
I'm going to click
on build and run.


220
00:11:20,366 --> 00:11:22,966
So this is a simple dating app.


221
00:11:23,056 --> 00:11:24,786
At the top, you have
the title of the app,


222
00:11:24,786 --> 00:11:25,766
which is HelloGoodbye.


223
00:11:26,166 --> 00:11:28,536
Notice how the title
is very bold,


224
00:11:28,726 --> 00:11:30,786
and the background
is fully opaque.


225
00:11:31,086 --> 00:11:34,506
That's because we're using a
standard navigation controller.


226
00:11:34,646 --> 00:11:36,056
So we get the bold text


227
00:11:36,286 --> 00:11:38,786
and reduced transparency
behaviors for free.


228
00:11:39,306 --> 00:11:42,456
But because we're doing
some custom UI in our app,


229
00:11:42,696 --> 00:11:44,346
there's still some
work we need to do.


230
00:11:44,776 --> 00:11:48,526
You probably already noticed
how we have transparent overlays


231
00:11:48,636 --> 00:11:49,846
over a photo background.


232
00:11:50,646 --> 00:11:52,566
When reduced transparency is on,


233
00:11:52,566 --> 00:11:54,256
we should really be
making those opaque.


234
00:11:55,216 --> 00:11:59,126
In addition, the text in the
buttons should be thicker


235
00:11:59,126 --> 00:12:00,876
because we have bold
text enabled.


236
00:12:01,616 --> 00:12:04,896
Now I'm going to click
on the Profile button.


237
00:12:06,126 --> 00:12:08,906
So here's where as a user
I can adjust my settings.


238
00:12:09,506 --> 00:12:12,826
Again, we have the transparent
overlay, and the text


239
00:12:12,826 --> 00:12:13,726
that should be bolder.


240
00:12:14,516 --> 00:12:18,026
At the bottom of this view,
we have a preview tab,


241
00:12:18,026 --> 00:12:21,066
which I can slide up
to see how other users


242
00:12:21,066 --> 00:12:22,686
in this app will see my profile.


243
00:12:23,786 --> 00:12:27,046
Notice how my info is in gray
text under each of the headings.


244
00:12:27,936 --> 00:12:30,096
When the user has
darkened colors enabled,


245
00:12:30,406 --> 00:12:32,306
it would be better if
that text were darker


246
00:12:32,776 --> 00:12:35,266
to provide higher contrast
against the white background.


247
00:12:36,556 --> 00:12:39,646
Now, I'm going to click on
Back and I'm going to go


248
00:12:39,646 --> 00:12:40,976
into the Matches page.


249
00:12:41,286 --> 00:12:44,136
So here's where I
can see matches


250
00:12:44,136 --> 00:12:45,736
that the app is suggesting
for me.


251
00:12:46,006 --> 00:12:48,176
And I can say hello or
goodbye to each one.


252
00:12:48,456 --> 00:12:52,156
I like this guy's
elevator pitch,


253
00:12:52,156 --> 00:12:53,886
so I'm going to say hello.


254
00:12:54,126 --> 00:12:58,346
And watch what happens
when I swipe up.


255
00:12:58,606 --> 00:13:01,696
Notice how the next
match animates on screen


256
00:13:02,016 --> 00:13:03,466
as though it's coming
from far away.


257
00:13:03,946 --> 00:13:06,776
So that's an example
of an animation


258
00:13:06,776 --> 00:13:09,396
where we should provide
an alternate to users


259
00:13:09,396 --> 00:13:13,836
who are more sensitive
to motion.


260
00:13:14,076 --> 00:13:17,786
And now, let's do all this,
using the API in Xcode.


261
00:13:18,696 --> 00:13:20,796
So the first thing we're
going to address is the text.


262
00:13:21,436 --> 00:13:23,726
Let's make sure that it's
thicker when bold text is on.


263
00:13:24,036 --> 00:13:26,996
To do that, I'm going to click
on the Style Utilities file


264
00:13:26,996 --> 00:13:29,066
on the left, which is
where all of our colors


265
00:13:29,066 --> 00:13:30,026
and fonts are defined.


266
00:13:30,306 --> 00:13:32,346
I'm going to click on
the drop-down at the top,


267
00:13:33,246 --> 00:13:34,716
to find our font methods.


268
00:13:35,366 --> 00:13:40,116
Notice how both of these methods
are returning Avenir-Light


269
00:13:40,116 --> 00:13:41,746
as a custom font.


270
00:13:41,936 --> 00:13:45,356
Now, if we were using the system
font, or the preferred font


271
00:13:45,356 --> 00:13:48,936
for text style API, we would
be getting bold text for free.


272
00:13:49,566 --> 00:13:52,516
But because we've picked
a specific font to use,


273
00:13:52,986 --> 00:13:55,816
we also need to pick a font to
use when bold text is enabled.


274
00:13:55,816 --> 00:14:01,306
So to do that, I'd like
to create a helper method,


275
00:14:01,776 --> 00:14:03,806
that returns a font name.


276
00:14:04,166 --> 00:14:07,126
All we're doing here is first
checking whether bold text


277
00:14:07,126 --> 00:14:07,736
is enabled.


278
00:14:07,776 --> 00:14:12,506
If it is, we can return a
thicker version of our font.


279
00:14:12,856 --> 00:14:15,206
Otherwise, we can return the
same font we've been using.


280
00:14:15,876 --> 00:14:21,666
And now, we just need to use our
helper in our 2-font methods.


281
00:14:24,876 --> 00:14:26,676
So that takes care of bold text.


282
00:14:27,096 --> 00:14:29,306
Now, let's look at those
transparent overlays.


283
00:14:29,636 --> 00:14:32,936
I'm going to click on the
drop-down at the top and find


284
00:14:32,936 --> 00:14:35,536
where that transparent
overlay color is defined.


285
00:14:37,136 --> 00:14:39,976
Notice how right now we're
returning an 80 percent white.


286
00:14:40,946 --> 00:14:42,556
When reduced transparency
is enabled,


287
00:14:42,556 --> 00:14:48,416
we should return a 100 percent
white, so we do that here.


288
00:14:48,926 --> 00:14:51,586
Okay. Now, let's make
sure that the gray text


289
00:14:51,806 --> 00:14:55,046
in the profile preview is
darker when Darken Colors is on.


290
00:14:55,866 --> 00:14:58,436
To do that, I'm going to
click on the drop-down again,


291
00:14:58,726 --> 00:15:00,586
and find where that
color is defined.


292
00:15:01,256 --> 00:15:02,946
So here, we're just
returning gray.


293
00:15:04,176 --> 00:15:07,246
Let's first check whether the
user has Darken Colors enabled,


294
00:15:07,496 --> 00:15:12,716
and if so, we can
return black instead.


295
00:15:13,026 --> 00:15:15,816
Finally, let's look at that
zooming animation that we saw


296
00:15:15,816 --> 00:15:18,066
on the Matches page, where
the new match appears


297
00:15:18,066 --> 00:15:19,576
as though it's coming
from far away.


298
00:15:19,846 --> 00:15:22,326
To address that,
I'm going to click


299
00:15:22,326 --> 00:15:25,156
on the Matches View
Controller on the left.


300
00:15:25,156 --> 00:15:26,526
Now I'm going to
open the drop down,


301
00:15:26,836 --> 00:15:31,936
and find where we
animate the cards.


302
00:15:32,076 --> 00:15:34,966
So notice how here we're
zooming the new card into view.


303
00:15:35,626 --> 00:15:37,746
Now, for users who have
Reduce Motion enabled,


304
00:15:37,976 --> 00:15:41,596
a better experience would be
to fade the card into view,


305
00:15:41,596 --> 00:15:45,756
because that animation does
not utilize a motion effect.


306
00:15:46,116 --> 00:15:48,376
So I'm going to create
a helper method


307
00:15:48,776 --> 00:15:50,096
that fades the card into view.


308
00:15:50,516 --> 00:15:52,426
All we're doing is
setting the alpha


309
00:15:52,426 --> 00:15:53,956
of the card with animation.


310
00:15:54,866 --> 00:15:57,496
And then at the point where
normally we would Zoom the card,


311
00:15:58,086 --> 00:16:01,336
let's first check whether
Reduce Motion is enabled.


312
00:16:01,936 --> 00:16:04,656
If it is, we use our
fading method instead.


313
00:16:05,106 --> 00:16:08,236
We can use the Zooming
method for other users.


314
00:16:09,396 --> 00:16:11,766
Okay, now let's build and run
our app with these changes.


315
00:16:11,766 --> 00:16:16,616
Here's our app again.


316
00:16:16,996 --> 00:16:19,076
Notice how the transparent
overlays are gone,


317
00:16:19,126 --> 00:16:21,036
and have been replaced
by opaque white,


318
00:16:21,446 --> 00:16:22,966
because reduced transparency
is enabled.


319
00:16:23,656 --> 00:16:26,206
In addition, the text on
the buttons is much thicker.


320
00:16:26,666 --> 00:16:29,756
When I click on Profile, again,


321
00:16:30,496 --> 00:16:32,776
the same issues have
been resolved here.


322
00:16:33,486 --> 00:16:35,246
I can slide up on the View tab,


323
00:16:35,796 --> 00:16:38,836
and now notice how my
information is darker


324
00:16:38,976 --> 00:16:40,916
and higher contrast against
the white background.


325
00:16:41,696 --> 00:16:45,836
Now I'm going to click on Back
and click on the Matches button.


326
00:16:47,746 --> 00:16:49,986
Again, I'm going to say
hello to my favorite match,


327
00:16:50,326 --> 00:16:52,306
and watch what happens
when I do that.


328
00:16:53,776 --> 00:16:55,886
The next match fades onto view,


329
00:16:55,976 --> 00:16:57,716
because we have Reduce
Motion enabled.


330
00:16:58,196 --> 00:17:03,016
So that's how easy it is for you
to make visual accommodations


331
00:17:03,016 --> 00:17:06,146
in your app for users with
different vision needs.


332
00:17:07,695 --> 00:17:10,876
Next, let's look at implementing
Semantic Accessibility,


333
00:17:11,586 --> 00:17:12,846
so that VoiceOver users


334
00:17:13,506 --> 00:17:16,566
and Switch Control users
can also use your app.


335
00:17:18,896 --> 00:17:22,675
Semantic Accessibility is what
allows an assistive technology


336
00:17:22,675 --> 00:17:26,685
like VoiceOver to get
information from an app,


337
00:17:26,685 --> 00:17:28,566
and to control the
app doing things


338
00:17:28,566 --> 00:17:30,796
like tapping buttons
or adjusting sliders.


339
00:17:31,336 --> 00:17:36,926
Here's an example of Semantic
Accessibility at work.


340
00:17:37,886 --> 00:17:40,056
Let's say I've got the
calculator app open


341
00:17:40,136 --> 00:17:41,266
and VoiceOver is enabled.


342
00:17:41,446 --> 00:17:46,236
When I touch on top of the 5
button, VoiceOver intercepts


343
00:17:46,236 --> 00:17:51,666
that touch, and then it asks the
app what it has at that point.


344
00:17:52,776 --> 00:17:56,136
The app responds with an element
that represents the 5 button.


345
00:17:56,316 --> 00:17:59,756
And that allows VoiceOver to
draw a cursor around the 5,


346
00:18:00,296 --> 00:18:04,706
and to speak 5, so that I
know what I've just touched.


347
00:18:04,806 --> 00:18:07,136
If I then decide to
tap the 5 button,


348
00:18:07,246 --> 00:18:09,476
I can do a double tap
anywhere on screen,


349
00:18:09,606 --> 00:18:12,826
and that tells VoiceOver to
activate the selected item.


350
00:18:13,416 --> 00:18:18,286
So that's how VoiceOver users
can use the calculator app.


351
00:18:21,436 --> 00:18:25,556
So how do you make sure
that your app works


352
00:18:25,556 --> 00:18:27,396
with VoiceOver in
this way as well?


353
00:18:28,026 --> 00:18:32,256
Well, the good news is that
most Semantic Accessibility is


354
00:18:32,256 --> 00:18:35,616
already built into iOS, so you
get a lot of stuff for free.


355
00:18:36,216 --> 00:18:38,256
But you should still
audit your app


356
00:18:38,306 --> 00:18:39,666
with VoiceOver on the device.


357
00:18:40,126 --> 00:18:42,376
And there are a couple questions
you should ask yourself.


358
00:18:42,836 --> 00:18:46,446
First, can VoiceOver
speak everything


359
00:18:46,446 --> 00:18:47,286
that needs to be seen?


360
00:18:48,546 --> 00:18:51,066
And second, can VoiceOver
do everything


361
00:18:51,236 --> 00:18:53,576
that a user would want to do?


362
00:18:53,886 --> 00:18:56,466
Now, I'm going to be referring
a lot to VoiceOver in this talk,


363
00:18:56,796 --> 00:18:59,426
but all of the work we're going
to do in our app also applies


364
00:18:59,426 --> 00:19:01,926
to Switch Control, so
just keep that in mind.


365
00:19:04,076 --> 00:19:07,736
To set up an audit of your app
for Semantic Accessibility,


366
00:19:07,916 --> 00:19:10,696
I recommend that you go to
your Accessibility settings


367
00:19:10,696 --> 00:19:13,446
on the device, and set
your accessibility shortcut


368
00:19:13,786 --> 00:19:14,416
to VoiceOver.


369
00:19:15,156 --> 00:19:18,186
That will allow you to
triple click the Home button


370
00:19:18,506 --> 00:19:20,306
to quickly enable or
disable VoiceOver.


371
00:19:20,836 --> 00:19:24,346
If you've never used
VoiceOver before,


372
00:19:25,066 --> 00:19:26,566
here are some tips
to get you started.


373
00:19:28,106 --> 00:19:31,286
When you tap something,
that selects and speaks.


374
00:19:31,966 --> 00:19:33,456
So, for example, in this screen,


375
00:19:33,456 --> 00:19:35,836
if I tap on the accessibility
table cell,


376
00:19:36,826 --> 00:19:40,906
the cursor moves there, and the
device speaks accessibility.


377
00:19:42,596 --> 00:19:46,276
If I double tap anywhere on
screen, that tells VoiceOver


378
00:19:46,276 --> 00:19:48,166
to activate the selected item.


379
00:19:48,716 --> 00:19:50,016
So, in this case, if I did that,


380
00:19:50,736 --> 00:19:52,716
the accessibility table
cell would get pressed,


381
00:19:53,716 --> 00:19:55,346
and we would move to
the accessibility page.


382
00:19:55,446 --> 00:20:01,406
When I swipe to the
right, that selects


383
00:20:01,406 --> 00:20:02,906
and speaks the next element.


384
00:20:03,906 --> 00:20:06,486
Right now, the Back button
is selected, so if I swipe


385
00:20:06,486 --> 00:20:09,486
to the right, the Navigation
title becomes selected.


386
00:20:09,486 --> 00:20:13,866
And finally, when you
have a scroll view,


387
00:20:13,866 --> 00:20:16,346
you can use three-finger
swipes to scroll.


388
00:20:17,096 --> 00:20:19,356
So if I want to see more of
the accessibility settings,


389
00:20:19,616 --> 00:20:23,266
I can three-finger swipe
up to scroll down by page.


390
00:20:23,606 --> 00:20:28,906
So that's all you need
to know to do an audit


391
00:20:28,906 --> 00:20:30,256
of your own app with VoiceOver.


392
00:20:30,436 --> 00:20:32,286
And now I'd like to show
you how you can do that,


393
00:20:32,576 --> 00:20:33,396
with our sample app.


394
00:20:33,466 --> 00:20:36,416
So here's our dating app
running on the device.


395
00:20:37,216 --> 00:20:38,526
When I triple click
the home button --


396
00:20:39,966 --> 00:20:40,676
>> VoiceOver on.


397
00:20:41,276 --> 00:20:43,236
>> VoiceOver becomes enabled.


398
00:20:43,566 --> 00:20:45,796
The first thing we'll do is
ask ourselves that question.


399
00:20:45,966 --> 00:20:48,396
Can VoiceOver speak everything
that needs to be seen?


400
00:20:49,096 --> 00:20:51,716
So first, I'm going to tap
on the title at the top.


401
00:20:52,456 --> 00:20:53,266
>> HelloGoodbye.


402
00:20:53,486 --> 00:20:54,306
Heading.


403
00:20:54,306 --> 00:20:55,716
>> Okay, so VoiceOver
can see that.


404
00:20:56,206 --> 00:20:57,966
Now, let's touch on the
logo [beeping sound].


405
00:20:59,156 --> 00:21:04,486
It's kind of quiet, but that
sound we just heard means


406
00:21:04,486 --> 00:21:06,036
that VoiceOver doesn't
think there's anything


407
00:21:06,036 --> 00:21:06,776
under my finger.


408
00:21:07,606 --> 00:21:10,766
So it looks like VoiceOver users
won't be able to read this logo.


409
00:21:11,866 --> 00:21:13,996
Now, I'm going to tap
on the profile button.


410
00:21:14,596 --> 00:21:15,906
>> Profile button.


411
00:21:15,906 --> 00:21:17,256
>> And VoiceOver sees that.


412
00:21:17,736 --> 00:21:19,956
When I swipe to the right,
that selects the next element.


413
00:21:19,956 --> 00:21:20,646
So when I do that.


414
00:21:21,006 --> 00:21:21,466
>> Matches.


415
00:21:21,786 --> 00:21:22,136
Button.


416
00:21:22,376 --> 00:21:24,586
>> VoiceOver finds
the Matches button.


417
00:21:24,836 --> 00:21:28,936
If I swipe to the right one
more time we hear that sound,


418
00:21:28,936 --> 00:21:30,786
which means there's nothing
else after this element.


419
00:21:30,956 --> 00:21:32,216
Which is correct in this case.


420
00:21:32,886 --> 00:21:34,916
So it looks like this view
is in pretty good shape,


421
00:21:34,996 --> 00:21:36,276
except for the missing logo.


422
00:21:37,386 --> 00:21:39,306
Now, I'm going to
tap on profile.


423
00:21:40,176 --> 00:21:41,396
>> Profile button.


424
00:21:41,396 --> 00:21:43,646
>> And I'm going to
double tap to activate it.


425
00:21:43,696 --> 00:21:46,896
>> Profile, Profile,
Back, Back button.


426
00:21:47,206 --> 00:21:48,616
>> Let's swipe to
the right a few times


427
00:21:48,776 --> 00:21:50,066
to see what VoiceOver sees.


428
00:21:51,276 --> 00:21:51,916
>> Profile.


429
00:21:52,186 --> 00:21:53,846
Heading. Your age.


430
00:21:54,586 --> 00:21:55,476
19 percent.


431
00:21:55,756 --> 00:21:56,276
Adjustable.


432
00:21:57,446 --> 00:21:59,446
Swipe up or down with one
finger to adjust the value.


433
00:21:59,446 --> 00:22:01,806
>> So that was a little strange.


434
00:22:02,186 --> 00:22:06,076
We just heard "your age,"
followed by "19 percent,"


435
00:22:06,366 --> 00:22:07,886
it would make a lot more sense


436
00:22:08,046 --> 00:22:11,086
if VoiceOver said the age
here, which is actually 37.


437
00:22:11,576 --> 00:22:13,356
And the instructions
said to swipe up


438
00:22:13,356 --> 00:22:14,676
or down to adjust the value.


439
00:22:14,856 --> 00:22:16,496
So if I swipe up,
watch what happens.


440
00:22:17,226 --> 00:22:17,996
>> 28 percent.


441
00:22:19,146 --> 00:22:20,766
>> My age is jumping
up by 10 years.


442
00:22:21,266 --> 00:22:23,786
So it doesn't look like
VoiceOver users will be able


443
00:22:23,786 --> 00:22:27,276
to set their age accurately
right now in our app.


444
00:22:27,346 --> 00:22:29,326
Now, I'm going to swipe to
the right a few more times


445
00:22:29,616 --> 00:22:30,836
to see what else VoiceOver sees.


446
00:22:31,766 --> 00:22:33,896
>> 47. Hobbies.


447
00:22:34,596 --> 00:22:35,816
Music. Swing dance.


448
00:22:36,096 --> 00:22:37,286
Wine. Text field.


449
00:22:38,416 --> 00:22:39,166
Double tap to edit.


450
00:22:39,726 --> 00:22:40,316
>> Let's make sure


451
00:22:40,316 --> 00:22:42,226
that VoiceOver users
can edit their hobbies.


452
00:22:42,366 --> 00:22:44,546
So I'm going to double tap.


453
00:22:44,756 --> 00:22:46,186
>> Text field is editing.


454
00:22:46,466 --> 00:22:47,566
Music. Swing dance.


455
00:22:47,846 --> 00:22:48,196
Wine.


456
00:22:49,116 --> 00:22:50,026
>> And the keyboard came up.


457
00:22:50,186 --> 00:22:52,996
So that looks like VoiceOver
users will be able to do that.


458
00:22:53,616 --> 00:22:55,916
Let's just make sure that the
Done button, which appeared


459
00:22:55,916 --> 00:22:58,266
in the top right, is also
visible to VoiceOver.


460
00:22:58,466 --> 00:22:59,926
So I'll tap on that.


461
00:22:59,926 --> 00:23:00,776
>> Done button.


462
00:23:00,866 --> 00:23:01,296
>> And it is.


463
00:23:01,296 --> 00:23:03,686
When I double tap.


464
00:23:04,036 --> 00:23:06,146
That takes us out of editing.


465
00:23:06,916 --> 00:23:09,006
So it looks like the
hobbies are in good shape.


466
00:23:09,386 --> 00:23:12,106
And the elevator pitch field
is very similar to hobbies,


467
00:23:12,206 --> 00:23:13,586
so we'll skip that for now.


468
00:23:13,806 --> 00:23:16,806
Now I'm going to touch on the
Preview tab at the bottom.


469
00:23:17,406 --> 00:23:18,016
>> Preview.


470
00:23:18,456 --> 00:23:21,596
>> So it's just saying
"preview,"


471
00:23:22,296 --> 00:23:25,826
and if I couldn't see the screen
with that visual indication


472
00:23:25,826 --> 00:23:29,226
of a tab, it might not be
clear to me what this does.


473
00:23:29,326 --> 00:23:32,366
I mean, I might try to double
tap it, and so when I do that --


474
00:23:33,026 --> 00:23:33,656
>> Preview.


475
00:23:34,176 --> 00:23:37,276
>> Nothing happens, because this
tab doesn't respond to a tap.


476
00:23:37,616 --> 00:23:39,646
It needs to have a
slide gesture up.


477
00:23:40,626 --> 00:23:43,396
So right now, VoiceOver users
cannot preview their profile.


478
00:23:43,396 --> 00:23:46,186
Now, I'm going to touch
on the back button.


479
00:23:46,376 --> 00:23:48,076
>> Back. Back button.


480
00:23:48,076 --> 00:23:49,826
>> And double tap.


481
00:23:50,416 --> 00:23:51,096
>> [Beeping sound]
HelloGoodbye, heading.


482
00:23:51,096 --> 00:23:53,566
>> I'm going to tap
on Matches now.


483
00:23:54,006 --> 00:23:55,166
>> Matches button.


484
00:23:55,196 --> 00:23:56,756
>> And double tap.


485
00:23:56,756 --> 00:23:59,306
>> Matches, Matches,
Back, Back button.


486
00:23:59,726 --> 00:24:02,086
>> Okay. Again we're going to
swipe to the right a few times


487
00:24:02,366 --> 00:24:03,566
to see what VoiceOver sees.


488
00:24:04,306 --> 00:24:04,846
>> Matches.


489
00:24:05,176 --> 00:24:07,936
Heading. Swipe up
arrow to say hello,


490
00:24:07,986 --> 00:24:09,206
swipe down arrow to say goodbye.


491
00:24:09,466 --> 00:24:09,876
Ellipses.


492
00:24:11,366 --> 00:24:12,896
>> Okay, that's also
a little strange.


493
00:24:13,256 --> 00:24:16,926
Visually when you look at
this logo, or this label,


494
00:24:16,926 --> 00:24:19,296
you see swipe up to say hello.


495
00:24:19,786 --> 00:24:22,806
But VoiceOver is saying
swipe up arrow to say hello.


496
00:24:22,866 --> 00:24:24,726
And that's because
VoiceOver is reading each


497
00:24:24,726 --> 00:24:26,046
of those characters literally.


498
00:24:26,046 --> 00:24:29,236
So it would be better if
VoiceOver described this


499
00:24:29,236 --> 00:24:30,216
in a more natural way.


500
00:24:31,436 --> 00:24:34,546
Now, let's swipe to the
right to get to the photo.


501
00:24:34,546 --> 00:24:34,806
>> Age.


502
00:24:35,486 --> 00:24:36,866
>> Except we didn't
get to the photo.


503
00:24:37,096 --> 00:24:40,956
So now let's try touching it
directly [beeping sounds].


504
00:24:41,356 --> 00:24:43,646
And again, I get that sound,


505
00:24:43,646 --> 00:24:45,636
which means VoiceOver doesn't
think there's a photo there.


506
00:24:46,466 --> 00:24:50,556
Now, some of you might be
wondering whether that's


507
00:24:50,556 --> 00:24:51,256
even important.


508
00:24:51,636 --> 00:24:55,376
Because after all, a VoiceOver
user doesn't see the photo,


509
00:24:55,376 --> 00:24:55,626
right?


510
00:24:56,146 --> 00:24:58,686
But it turns out
it is important,


511
00:24:59,126 --> 00:25:00,536
so for a couple of reasons.


512
00:25:01,346 --> 00:25:05,396
First, if I'm a VoiceOver user,
using this app, I need to know


513
00:25:05,816 --> 00:25:08,716
that other people in this
app can see my photo.


514
00:25:09,026 --> 00:25:11,146
Even if I don't take full
advantage of the photo,


515
00:25:11,486 --> 00:25:13,676
it's important to
know that it's there.


516
00:25:13,796 --> 00:25:14,976
And second, remember


517
00:25:14,976 --> 00:25:17,586
that Semantic Accessibility
is not just about VoiceOver.


518
00:25:17,836 --> 00:25:18,876
So it's always a good idea


519
00:25:18,876 --> 00:25:22,146
to expose any meaningful
info from your app.


520
00:25:23,326 --> 00:25:25,406
Okay, now I'm going
to touch on age again.


521
00:25:25,816 --> 00:25:25,906
>> Age.


522
00:25:26,056 --> 00:25:30,926
>> And I'm going to swipe
to the right a few times.


523
00:25:30,926 --> 00:25:31,276
>> Hobbies.


524
00:25:31,986 --> 00:25:33,646
32. Cooking.


525
00:25:33,856 --> 00:25:34,676
Bubble tea with friends.


526
00:25:34,936 --> 00:25:35,266
Travel.


527
00:25:36,246 --> 00:25:38,226
>> If you're paying
close attention,


528
00:25:38,226 --> 00:25:41,346
you may have noticed how
VoiceOver went from age


529
00:25:41,586 --> 00:25:43,786
to hobbies, and then back to 32.


530
00:25:44,716 --> 00:25:46,796
So when you're looking
at the visual layout


531
00:25:47,006 --> 00:25:49,336
of this profile card, it's
clear what this means,


532
00:25:49,856 --> 00:25:53,066
but VoiceOver users
are often swiping


533
00:25:53,196 --> 00:25:55,636
to visit different elements,
because that can be easier


534
00:25:55,636 --> 00:25:57,956
than touching exactly
where an element is.


535
00:25:58,636 --> 00:26:01,316
And so it's important
to have a logical order


536
00:26:01,666 --> 00:26:03,276
for how these elements
are visited.


537
00:26:03,716 --> 00:26:06,316
It's also important for
Switch Control users.


538
00:26:06,776 --> 00:26:10,036
The Switch Control cursor
will move from element


539
00:26:10,036 --> 00:26:11,576
to element in the same order.


540
00:26:12,376 --> 00:26:14,846
And it's important for that
order to be predictable,


541
00:26:14,846 --> 00:26:17,236
so that a Switch Control user
can activate their switch


542
00:26:17,236 --> 00:26:18,126
at the right time.


543
00:26:18,756 --> 00:26:24,416
Okay. So last thing, remember
that our second question was


544
00:26:24,736 --> 00:26:26,416
"Can VoiceOver do
everything that needs


545
00:26:26,416 --> 00:26:29,076
to be done in this app?"


546
00:26:29,596 --> 00:26:33,016
The point of the Matches page
is to allow users to say hello


547
00:26:33,176 --> 00:26:34,506
or goodbye to their matches.


548
00:26:35,586 --> 00:26:38,716
But VoiceOver users won't be
able to do this right now,


549
00:26:39,326 --> 00:26:43,026
because swipe gestures get
intercepted by VoiceOver,


550
00:26:43,206 --> 00:26:44,766
and we'll need to
provide a different way


551
00:26:44,996 --> 00:26:47,036
for VoiceOver users to
do the same actions.


552
00:26:47,036 --> 00:26:50,026
So that's the kind of process
you can take with your own app


553
00:26:50,176 --> 00:26:53,516
to see whether it is
semantically accessible.


554
00:26:53,926 --> 00:26:56,326
Now, let's look at resolving
those issues we encountered.


555
00:26:57,646 --> 00:26:59,486
First, I'm going to
introduce the most basic


556
00:26:59,486 --> 00:27:00,336
accessibility API.


557
00:27:01,046 --> 00:27:02,696
There are only 2
properties here,


558
00:27:03,036 --> 00:27:04,896
and if you remember
nothing else from this talk,


559
00:27:05,156 --> 00:27:06,476
please remember these 2.


560
00:27:07,116 --> 00:27:09,816
Just by using these 2
properties, you can solve a lot


561
00:27:09,816 --> 00:27:11,046
of accessibility issues.


562
00:27:11,506 --> 00:27:14,476
The most important
property you need


563
00:27:14,476 --> 00:27:17,606
to know is the
isAccessibilityElement property.


564
00:27:17,996 --> 00:27:19,366
This is a Boolean


565
00:27:19,366 --> 00:27:22,286
that determines whether a
view is visible to VoiceOver.


566
00:27:23,306 --> 00:27:26,876
By default, it returns yes
for standard UIKit controls


567
00:27:26,876 --> 00:27:29,376
and labels, which is why even
though we haven't done any


568
00:27:29,376 --> 00:27:31,566
Semantic Accessibility
work in our app yet,


569
00:27:32,336 --> 00:27:34,396
a lot of the text is
already visible to VoiceOver.


570
00:27:35,016 --> 00:27:38,626
And the second-most
important property you need


571
00:27:38,626 --> 00:27:41,376
to know is the
accessibilityLabel property.


572
00:27:41,956 --> 00:27:45,066
This describes a view, and
VoiceOver will speak this


573
00:27:45,496 --> 00:27:47,616
when a VoiceOver user
touches on a view.


574
00:27:48,196 --> 00:27:53,146
If you're creating your
views in Interface Builder,


575
00:27:53,516 --> 00:27:55,616
you can set these properties
directly from Xcode's UI.


576
00:27:56,146 --> 00:27:58,026
On the right-hand side of Xcode,


577
00:27:58,726 --> 00:28:00,306
you'll find an identity
inspector.


578
00:28:00,736 --> 00:28:02,666
And there's an accessibility
section there.


579
00:28:02,946 --> 00:28:06,706
The Accessibility enable
check box corresponds


580
00:28:06,746 --> 00:28:11,636
to isAccessibilityElement and
the label field corresponds


581
00:28:11,636 --> 00:28:12,706
to accessibilityLabel.


582
00:28:12,706 --> 00:28:18,506
If you're creating your views
in code, it's still really easy


583
00:28:18,506 --> 00:28:20,846
to set these properties
as shown here.


584
00:28:23,276 --> 00:28:26,616
So now let's look at
using these two properties


585
00:28:26,796 --> 00:28:30,556
and see how much more
accessible we can make our app.


586
00:28:30,556 --> 00:28:32,916
So the first thing we're
going to do is make sure


587
00:28:32,916 --> 00:28:35,746
that VoiceOver users can read
the logo on the first page.


588
00:28:36,536 --> 00:28:41,836
To do that, I'm going to go
click on the StartViewController


589
00:28:41,836 --> 00:28:44,766
on the left, which is
where we create that logo.


590
00:28:45,106 --> 00:28:46,906
So I'm going to click
on the drop-down


591
00:28:47,426 --> 00:28:49,016
and find our viewDidLoad method.


592
00:28:49,556 --> 00:28:51,336
So here's the logo.


593
00:28:51,696 --> 00:28:52,916
It's just an image
view right now.


594
00:28:54,076 --> 00:28:56,976
And first we're going to set
isAccessibilityElement to yes,


595
00:28:57,516 --> 00:28:58,676
so that VoiceOver can see it.


596
00:28:59,666 --> 00:29:02,136
And then we also need to make
sure VoiceOver describes it


597
00:29:02,236 --> 00:29:04,996
correctly, so we give it
an accessibilityLabel.


598
00:29:05,226 --> 00:29:06,896
In this case, we're just going


599
00:29:06,896 --> 00:29:08,996
to give it the text
that's inside the logo.


600
00:29:10,276 --> 00:29:12,176
Notice also that we're
localizing the string,


601
00:29:12,636 --> 00:29:14,956
because VoiceOver
speaks in many languages.


602
00:29:15,196 --> 00:29:20,646
Next, let's make sure
that the photo that's


603
00:29:20,706 --> 00:29:23,426
in the profile card can
also be seen by VoiceOver.


604
00:29:23,866 --> 00:29:26,016
To do that, I'm going to click


605
00:29:26,016 --> 00:29:27,476
on the card view
clef on the left.


606
00:29:28,406 --> 00:29:30,396
And I'm going to open
the drop-down to find


607
00:29:30,456 --> 00:29:32,136
where we add our ProfileViews.


608
00:29:32,526 --> 00:29:34,936
So here's where we're
adding the photo.


609
00:29:35,656 --> 00:29:37,886
Again, we set
isAccessibilityElement to yes,


610
00:29:39,266 --> 00:29:41,426
and we give it an
appropriate accessibilityLabel.


611
00:29:41,806 --> 00:29:45,136
In this case, we're just going
to call it profile photo.


612
00:29:46,776 --> 00:29:50,046
Finally, let's look
at the instructions


613
00:29:50,046 --> 00:29:51,166
for saying hello or goodbye.


614
00:29:51,826 --> 00:29:55,366
Right now, VoiceOver is saying
swipe up arrow to say hello.


615
00:29:55,776 --> 00:29:57,426
Let's fix that.


616
00:29:57,426 --> 00:29:59,016
So to do that, I'm
going to click


617
00:29:59,076 --> 00:30:02,076
on the Matches View Controller
on the left, and we're going


618
00:30:02,076 --> 00:30:04,716
to open the drop-down
at the top to find


619
00:30:04,716 --> 00:30:06,916
where we add those
swiping instructions.


620
00:30:08,226 --> 00:30:10,866
So here's a label that
says those instructions.


621
00:30:11,976 --> 00:30:14,476
It's already in
accessibilityElement by default,


622
00:30:14,786 --> 00:30:17,286
so all we need to do is change
the accessibility label.


623
00:30:17,566 --> 00:30:20,596
We're going to give it one
that is just like the text


624
00:30:20,596 --> 00:30:23,776
on the label, except we're
replacing those unicode arrows


625
00:30:24,306 --> 00:30:25,106
with words.


626
00:30:25,786 --> 00:30:34,246
Now I'm going to build and run
the app with these changes.


627
00:30:34,756 --> 00:30:35,496
>> [Beeping sound]
Extras folder.


628
00:30:35,776 --> 00:30:39,896
Two apps. Double tap to
open [beeping sound].


629
00:30:40,026 --> 00:30:40,746
>> HelloGoodbye.


630
00:30:41,566 --> 00:30:42,276
Extras folder.


631
00:30:42,526 --> 00:30:49,686
Two apps. Double tap to open.


632
00:30:49,686 --> 00:30:50,346
Hello goodbye [beeping sound].


633
00:30:50,536 --> 00:30:54,216
>> So here's our app
again with these changes.


634
00:30:54,916 --> 00:30:57,296
The first thing I'm going
to do is touch the logo.


635
00:30:57,916 --> 00:30:58,826
>> HelloGoodbye.


636
00:30:58,886 --> 00:30:59,506
Meet your match.


637
00:30:59,816 --> 00:31:00,146
Image.


638
00:31:00,956 --> 00:31:02,586
>> So now VoiceOver
users can read this.


639
00:31:02,766 --> 00:31:06,026
Next, I'm going to touch
on the Matches button.


640
00:31:06,446 --> 00:31:07,586
>> Matches button.


641
00:31:07,666 --> 00:31:09,546
>> And double tap.


642
00:31:10,276 --> 00:31:12,036
>> [Beeping sound]
Matches, Back, Back button.


643
00:31:12,726 --> 00:31:15,236
>> Let's first look at what
the instructions say right now.


644
00:31:16,216 --> 00:31:17,356
>> Swipe up to say hello.


645
00:31:17,556 --> 00:31:18,616
Swipe down to say goodbye.


646
00:31:19,206 --> 00:31:21,076
>> Okay, so that's much
easier to understand.


647
00:31:21,926 --> 00:31:23,356
And now when I swipe
to the right.


648
00:31:24,026 --> 00:31:25,536
>> Profile photo, image.


649
00:31:26,386 --> 00:31:28,686
>> VoiceOver is able to see
the photo in the profile.


650
00:31:29,276 --> 00:31:32,786
So that's how, even with
just these two properties,


651
00:31:33,016 --> 00:31:35,356
you've already made other
parts of our app accessible.


652
00:31:35,846 --> 00:31:40,386
But because we've got some
more custom UI in our app,


653
00:31:40,386 --> 00:31:42,446
there's some additional
API we'll need to use


654
00:31:42,616 --> 00:31:44,896
to give VoiceOver users a
really great experience.


655
00:31:45,476 --> 00:31:51,076
First, I'd like to introduce the
concept of Accessibility Traits.


656
00:31:51,666 --> 00:31:53,736
Traits describe the
function of a view.


657
00:31:54,986 --> 00:31:58,726
For example, in the familiar
timer app, each of the wheels


658
00:31:58,726 --> 00:32:01,846
of time has a trait
of adjustable.


659
00:32:02,016 --> 00:32:05,656
And that means that its value
can be changed up or down.


660
00:32:06,496 --> 00:32:09,296
The Start button has
a trait of button.


661
00:32:09,646 --> 00:32:12,286
And that gives the user a
hint that this is something


662
00:32:12,286 --> 00:32:13,226
that can be activated.


663
00:32:13,666 --> 00:32:19,236
Again, if you're creating your
views in Interface Builder,


664
00:32:19,336 --> 00:32:22,316
it's really easy to set these
traits directly from Xcode's UI.


665
00:32:23,216 --> 00:32:24,846
In the same section we
talked about earlier,


666
00:32:25,176 --> 00:32:27,456
you'll see a bunch of
check boxes for traits.


667
00:32:28,246 --> 00:32:30,066
Some of these check boxes
may already be checked,


668
00:32:30,446 --> 00:32:33,316
in which case I would generally
recommend leaving those alone,


669
00:32:33,526 --> 00:32:35,776
but add check boxes
next to traits


670
00:32:35,776 --> 00:32:37,516
that you think are
important for your view.


671
00:32:38,086 --> 00:32:42,496
In code, it's also
straightforward


672
00:32:42,766 --> 00:32:44,136
to set the Accessibility Traits.


673
00:32:44,526 --> 00:32:47,476
But just remember that it is
a bit mask, so if you want


674
00:32:47,576 --> 00:32:50,766
to add a trait in addition
to others, use a bitwise


675
00:32:50,826 --> 00:32:54,716
or operator, as shown
here, to combine them.


676
00:32:57,396 --> 00:33:00,326
Next, let's talk about
Accessibility Value.


677
00:33:00,816 --> 00:33:04,316
Accessibility Value is a string
on properties, so in that way,


678
00:33:04,316 --> 00:33:06,116
it's similar to accessibility
label.


679
00:33:06,706 --> 00:33:08,506
Except you use Accessibility
Value


680
00:33:08,506 --> 00:33:09,726
for things that are dynamic.


681
00:33:10,766 --> 00:33:12,846
For example, you
use this on views


682
00:33:12,846 --> 00:33:16,056
that have the adjustable trait
to describe the numerical value.


683
00:33:17,246 --> 00:33:21,006
Right now, in our app, the age
slider has an Accessibility


684
00:33:21,006 --> 00:33:22,706
Value of 19 percent.


685
00:33:23,276 --> 00:33:26,426
So that's a case where we can
override Accessibility Value


686
00:33:26,726 --> 00:33:28,116
to return the age instead.


687
00:33:31,936 --> 00:33:33,796
Next, we'll talk about actions.


688
00:33:34,046 --> 00:33:38,236
So actions are how VoiceOver
can control your app.


689
00:33:38,486 --> 00:33:42,356
Two really common ones are the
Increment and Decrement actions.


690
00:33:42,666 --> 00:33:45,196
So these are actions that
are associated specifically


691
00:33:45,376 --> 00:33:47,096
for views that have
the adjustable trait.


692
00:33:47,096 --> 00:33:49,556
And they allow the
user to increase


693
00:33:49,556 --> 00:33:51,276
or decrease an element's value.


694
00:33:51,736 --> 00:33:56,146
So again, in our app, the
age slider right now can be


695
00:33:56,256 --> 00:33:57,476
incremented or decremented,


696
00:33:57,716 --> 00:33:59,676
but right now it's
doing that by 10 years.


697
00:34:00,786 --> 00:34:03,726
We can override these
methods to allow the user


698
00:34:03,726 --> 00:34:05,316
to change their age
by a single year.


699
00:34:08,735 --> 00:34:12,076
Another really important
action is the Activate action,


700
00:34:12,116 --> 00:34:14,186
and that's what happens
when a user double taps.


701
00:34:15,226 --> 00:34:16,866
Normally, when you
double tap something,


702
00:34:16,866 --> 00:34:18,045
that just taps the view.


703
00:34:18,876 --> 00:34:21,815
But you can override this
method on views that respond


704
00:34:21,815 --> 00:34:24,916
to a specific gesture, and
that way VoiceOver users can do


705
00:34:24,916 --> 00:34:26,366
that action as well easily.


706
00:34:26,806 --> 00:34:29,726
For example, in our app, we can
use this for the Preview tab,


707
00:34:30,156 --> 00:34:32,436
which currently only
responds to a sliding gesture.


708
00:34:32,866 --> 00:34:38,156
And finally, we have
notifications,


709
00:34:38,335 --> 00:34:40,025
which allow your app
to tell VoiceOver


710
00:34:40,025 --> 00:34:41,056
when something has changed.


711
00:34:41,916 --> 00:34:43,985
One really important
notification is


712
00:34:44,106 --> 00:34:45,485
the LayoutChangeNotification.


713
00:34:46,156 --> 00:34:50,576
You should send this when you're
changing the layout of your app,


714
00:34:50,576 --> 00:34:52,326
for example, adding
or removing views.


715
00:34:52,886 --> 00:34:55,616
For example, in our
app right now,


716
00:34:55,616 --> 00:34:59,866
when you reveal the preview,
VoiceOver might not realize


717
00:34:59,866 --> 00:35:02,986
that new elements
have come on screen.


718
00:35:03,146 --> 00:35:06,616
Once you post a layout change
notification, VoiceOver checks


719
00:35:06,616 --> 00:35:09,386
to find the elements
that are there currently.


720
00:35:12,896 --> 00:35:15,766
Now, let's put all this
together in our sample app


721
00:35:15,766 --> 00:35:17,876
to resolve some more of
those issues we encountered.


722
00:35:18,106 --> 00:35:19,906
So the first thing we're
going to do is make sure


723
00:35:19,906 --> 00:35:22,446
that VoiceOver users
can edit their age.


724
00:35:23,466 --> 00:35:26,466
To do that, I'm going
to go to Xcode and click


725
00:35:26,466 --> 00:35:30,866
on the AgeSlider
class on the left.


726
00:35:30,866 --> 00:35:33,166
Here let's override
accessibilityValue,


727
00:35:33,326 --> 00:35:36,906
and that way we can return the
age instead of a percentage.


728
00:35:37,486 --> 00:35:39,806
All we're doing is taking
the value of the slider,


729
00:35:39,886 --> 00:35:45,016
which corresponds to the age,
and making it into a string.


730
00:35:45,136 --> 00:35:48,096
Next, let's make sure that
VoiceOver users can add


731
00:35:48,456 --> 00:35:51,776
or remove to their
age by a single year.


732
00:35:52,626 --> 00:35:55,266
So to do that, let's override
accessibilityIncrement.


733
00:35:56,196 --> 00:35:59,066
All we're doing here is adding
1 to the slider's value.


734
00:35:59,786 --> 00:36:02,286
We also send the Value
Change Control Event,


735
00:36:02,716 --> 00:36:05,396
that way other parts
of our UI that rely


736
00:36:05,396 --> 00:36:07,636
on the slider's value
can update accordingly.


737
00:36:08,236 --> 00:36:12,576
We do the same thing for
accessibilityDecrement.


738
00:36:13,026 --> 00:36:16,146
And now, one nuance to this.


739
00:36:16,356 --> 00:36:21,296
After these changes, our age
slider has all the information


740
00:36:21,296 --> 00:36:22,386
that the user needs to know.


741
00:36:22,576 --> 00:36:23,896
Namely, the user's age.


742
00:36:24,856 --> 00:36:27,206
So from a Semantic
Accessibility standpoint,


743
00:36:27,806 --> 00:36:31,236
that label that's showing up
next to the slider is redundant,


744
00:36:31,676 --> 00:36:33,186
and might even be confusing.


745
00:36:34,086 --> 00:36:36,126
So let's just hide it.


746
00:36:37,196 --> 00:36:40,136
To do that, I'm going to click
on the Profile View Controller


747
00:36:40,136 --> 00:36:43,586
on the left, and open
the drop-down to find


748
00:36:43,586 --> 00:36:45,006
where we add that label.


749
00:36:47,836 --> 00:36:54,546
To hide it, we simply set
isAccessibilityElement to no.


750
00:36:54,546 --> 00:36:56,656
Okay. Next, let's make sure


751
00:36:56,656 --> 00:36:58,956
that VoiceOver users can
preview their profiles.


752
00:36:59,666 --> 00:37:03,746
To do that, let's go
in Xcode and click


753
00:37:03,776 --> 00:37:06,246
on our PreviewLabel class.


754
00:37:06,836 --> 00:37:08,496
So here's our roadmap for this.


755
00:37:09,396 --> 00:37:11,666
We're going to override
accessibilityActivate


756
00:37:11,856 --> 00:37:14,626
on the Preview Label, so that
we can control what happens


757
00:37:14,626 --> 00:37:16,166
when the user double taps.


758
00:37:16,566 --> 00:37:18,866
But we need to tell the
Profile View Controller


759
00:37:19,226 --> 00:37:20,446
to show or hide the preview.


760
00:37:20,446 --> 00:37:23,526
So we'll need a way
to communicate that.


761
00:37:23,946 --> 00:37:27,446
To do that, let's set
up a delegate protocol.


762
00:37:27,976 --> 00:37:31,126
And all this delegate
protocol has is a single method


763
00:37:31,336 --> 00:37:33,606
that we're going to call when
the label gets activated.


764
00:37:33,956 --> 00:37:37,336
Of course, we also set
up a delegate property


765
00:37:37,786 --> 00:37:40,486
so that the View Controller
can set itself a delegate.


766
00:37:40,486 --> 00:37:43,906
Now let's go to the
implementation file.


767
00:37:44,466 --> 00:37:48,886
Here we're going to override
accessibilityActivate.


768
00:37:49,786 --> 00:37:52,376
All we're doing is
letting the delegate know


769
00:37:52,586 --> 00:37:56,086
that the label was activated,
and we return yes to indicate


770
00:37:56,086 --> 00:37:57,076
that the action succeeded.


771
00:37:57,586 --> 00:38:02,836
While we're here, let's
also add a button trait


772
00:38:02,896 --> 00:38:06,786
to the Preview Label, and that
way VoiceOver users will have a


773
00:38:06,786 --> 00:38:10,316
hint that they can
double tap to activate it.


774
00:38:10,856 --> 00:38:13,476
To do that, I'm going to
override accessibilityTraits,


775
00:38:14,576 --> 00:38:16,476
and first recalling super,


776
00:38:16,706 --> 00:38:18,276
to get any traits we
would have by default.


777
00:38:19,106 --> 00:38:22,846
Then we use the bitwise
or operator to combine


778
00:38:22,846 --> 00:38:23,776
that with a button trait.


779
00:38:24,476 --> 00:38:29,556
Okay. Now, let's go back to
our Profile View Controller,


780
00:38:30,046 --> 00:38:31,536
to implement the
delegate protocol.


781
00:38:32,066 --> 00:38:35,256
So first, I'm going to scroll
to the top of the file,


782
00:38:36,386 --> 00:38:38,716
and declare that this
view controller implements


783
00:38:38,716 --> 00:38:39,286
that protocol.


784
00:38:39,716 --> 00:38:45,336
Next, I'm going to open the
drop down and find where we add


785
00:38:45,336 --> 00:38:47,376
that Preview Label to the view.


786
00:38:48,856 --> 00:38:52,726
Here we set the View
Controller as its delegate.


787
00:38:53,806 --> 00:38:55,706
And finally, let's
implement that protocol.


788
00:38:55,976 --> 00:39:01,736
I'm going to scroll
to the bottom.


789
00:39:01,886 --> 00:39:04,426
And here we've implemented the
only delegate protocol method


790
00:39:04,426 --> 00:39:04,696
we have.


791
00:39:05,796 --> 00:39:08,046
So when the Preview
Label is activated,


792
00:39:08,626 --> 00:39:11,116
we'll first check whether the
preview is currently showing.


793
00:39:11,766 --> 00:39:12,896
If it is, we can hide it.


794
00:39:13,646 --> 00:39:15,866
Otherwise, we reveal it.


795
00:39:16,956 --> 00:39:18,366
One additional thing.


796
00:39:19,006 --> 00:39:21,376
Recall that when you
hide or show the preview,


797
00:39:21,626 --> 00:39:23,206
you're changing the
layout of the screen.


798
00:39:23,486 --> 00:39:25,556
So we should tell VoiceOver
that that's happened.


799
00:39:26,496 --> 00:39:28,616
To do that, let's go
to the implementation


800
00:39:28,946 --> 00:39:30,926
of reveal card and dismiss card.


801
00:39:31,216 --> 00:39:32,726
So I'm going to click on
the drop down of the top


802
00:39:33,226 --> 00:39:34,426
and find those two methods.


803
00:39:35,036 --> 00:39:39,126
Both of these methods
are animating the card


804
00:39:39,126 --> 00:39:39,986
on or off screen.


805
00:39:40,996 --> 00:39:42,516
In the completion
for that animation,


806
00:39:43,536 --> 00:39:45,266
we post the layout
change notification.


807
00:39:45,726 --> 00:39:47,496
Let's do the same
thing down here


808
00:39:47,496 --> 00:39:51,746
when dismissing the preview.


809
00:39:52,196 --> 00:39:52,296
Okay.


810
00:39:53,176 --> 00:39:54,876
>> Now let's build
and run our app


811
00:39:54,876 --> 00:39:57,906
with these changes
[beeping sound].


812
00:39:58,706 --> 00:39:59,426
>> HelloGoodbye.


813
00:40:00,486 --> 00:40:02,696
>> Double tap to open.


814
00:40:02,696 --> 00:40:03,426
>> [beeping sound].


815
00:40:03,426 --> 00:40:04,126
>> Extras folder.


816
00:40:04,416 --> 00:40:06,896
Two apps. Double tap to open.


817
00:40:06,896 --> 00:40:07,816
HelloGoodbye.


818
00:40:07,816 --> 00:40:10,096
>> Okay, so here we are in
the app with our changes.


819
00:40:10,686 --> 00:40:12,446
First I'm going to tap
on the profile button.


820
00:40:12,976 --> 00:40:14,356
>> Profile button.


821
00:40:14,556 --> 00:40:16,006
>> And I'm going to
double tap to activate.


822
00:40:16,546 --> 00:40:19,376
>> Profile, Profile,
Back, Back button.


823
00:40:20,086 --> 00:40:21,916
>> First, let's touch
on the age slider.


824
00:40:22,796 --> 00:40:24,226
>> 37. Adjustable.


825
00:40:25,346 --> 00:40:27,456
Swipe up or down with one
finger to adjust the value.


826
00:40:27,666 --> 00:40:30,216
>> So notice how
that's much clearer.


827
00:40:30,216 --> 00:40:32,966
We're actually seeing the
age now, and when I swipe


828
00:40:33,016 --> 00:40:34,096
up to adjust the value.


829
00:40:34,816 --> 00:40:35,206
>> 38.


830
00:40:35,696 --> 00:40:36,936
>> It goes up by a single year.


831
00:40:37,946 --> 00:40:39,326
When I swipe to the right --


832
00:40:40,136 --> 00:40:40,756
>> Hobbies.


833
00:40:41,306 --> 00:40:42,276
>> Notice how we've skipped


834
00:40:42,276 --> 00:40:44,006
over that redundant
label to the right.


835
00:40:44,516 --> 00:40:47,566
Now, I'm going to touch
on the preview tab.


836
00:40:48,136 --> 00:40:49,206
>> Preview button.


837
00:40:50,146 --> 00:40:52,516
>> So this time, because
it says it's a button,


838
00:40:52,556 --> 00:40:54,246
I know I can do something
with this.


839
00:40:54,346 --> 00:40:55,186
So I'm going to double tap.


840
00:40:56,216 --> 00:40:56,816
>> Preview.


841
00:40:56,816 --> 00:40:59,066
>> And notice how
the preview appears.


842
00:40:59,276 --> 00:41:00,256
So when I swipe to the right.


843
00:41:00,576 --> 00:41:01,456
>> Profile photo.


844
00:41:01,776 --> 00:41:02,116
Image.


845
00:41:02,206 --> 00:41:04,116
>> I can see stuff
inside the preview.


846
00:41:05,106 --> 00:41:06,586
If I tap on preview again --


847
00:41:07,076 --> 00:41:08,166
>> Preview button.


848
00:41:08,166 --> 00:41:08,966
>> And double tap.


849
00:41:09,516 --> 00:41:10,416
>> Preview.


850
00:41:10,686 --> 00:41:12,966
>> That hides the preview, so
when I swipe to the right now,


851
00:41:13,036 --> 00:41:16,296
I hear that sound,
VoiceOver knows


852
00:41:16,296 --> 00:41:17,766
that the preview
has gone off screen.


853
00:41:18,176 --> 00:41:21,376
So that's how we can make
even custom UI accessible


854
00:41:21,376 --> 00:41:21,986
to VoiceOver.


855
00:41:24,516 --> 00:41:27,746
To resolve the last remaining
issues we encountered during our


856
00:41:27,746 --> 00:41:30,926
audit, we're going to use some
new API we've added in iOS 8.


857
00:41:31,416 --> 00:41:36,636
First, let's talk about the
UIAccessibilityContainer


858
00:41:36,636 --> 00:41:37,126
protocol.


859
00:41:37,486 --> 00:41:40,286
Some of you may already
realize that that isn't new,


860
00:41:40,386 --> 00:41:43,896
but we've updated it in iOS 8
to make it much easier to use.


861
00:41:44,836 --> 00:41:46,676
For those who aren't
familiar with this protocol,


862
00:41:47,516 --> 00:41:50,536
UIAccessibilityContainer
is a way to return a list


863
00:41:50,536 --> 00:41:52,276
of accessibility
elements from a view.


864
00:41:53,086 --> 00:41:56,156
You'll need to do this
if you have elements


865
00:41:56,156 --> 00:41:57,656
that don't correspond to views.


866
00:41:58,846 --> 00:42:02,086
For example, you might have
a view with a drawing in it,


867
00:42:02,086 --> 00:42:03,706
and you might want
different parts of the drawing


868
00:42:03,906 --> 00:42:05,746
to be separate accessibility
elements.


869
00:42:06,366 --> 00:42:08,926
In that case, you would create
an accessibility element


870
00:42:08,926 --> 00:42:10,196
for each part of the drawing,


871
00:42:10,646 --> 00:42:13,936
and return those elements using
the UIAccessibilityContainer


872
00:42:13,936 --> 00:42:14,456
protocol.


873
00:42:15,106 --> 00:42:18,646
And you can see last year's
talk, for a great example of how


874
00:42:18,646 --> 00:42:20,466
to create your own elements.


875
00:42:21,656 --> 00:42:23,356
But what many people
don't realize is


876
00:42:23,356 --> 00:42:25,436
that this protocol
is also a great way


877
00:42:25,686 --> 00:42:28,266
to return existing elements
in a specific order.


878
00:42:28,646 --> 00:42:32,566
So for example, if
VoiceOver is navigating things


879
00:42:32,736 --> 00:42:35,156
in a different order
from what we want,


880
00:42:35,546 --> 00:42:38,266
we can use this protocol
to return those elements


881
00:42:38,446 --> 00:42:41,916
in the order that we want
VoiceOver to see them.


882
00:42:45,546 --> 00:42:47,076
And now for what's changed.


883
00:42:47,246 --> 00:42:49,896
So currently, in order
to use this protocol,


884
00:42:50,306 --> 00:42:52,836
there are three methods
you need to override.


885
00:42:53,276 --> 00:42:57,746
In iOS 8, there's a
single property called


886
00:42:57,746 --> 00:43:01,966
accessibilityElements, which
you can set to return a list


887
00:43:01,966 --> 00:43:04,436
of those elements, and
notice how now you don't need


888
00:43:04,436 --> 00:43:07,536
to override subclass, and
you don't have to deal


889
00:43:07,536 --> 00:43:08,606
with three separate methods.


890
00:43:08,846 --> 00:43:11,706
So we think people are going to
find that much easier to use.


891
00:43:11,706 --> 00:43:12,466
[Applause]Thank you.


892
00:43:13,166 --> 00:43:20,046
Okay next up we're
introducing a new class called


893
00:43:20,046 --> 00:43:20,946
the CustomAction.


894
00:43:21,436 --> 00:43:24,706
You should use CustomActions
when you have more


895
00:43:24,706 --> 00:43:26,926
than one action for an element.


896
00:43:27,496 --> 00:43:30,176
For example, in the
app switcher,


897
00:43:30,176 --> 00:43:32,546
each of the app thumbnails
can either be tapped


898
00:43:33,256 --> 00:43:38,206
to launch the app, or you can
slide it up to close the app.


899
00:43:38,456 --> 00:43:41,506
And so we expose a CustomAction
for closing the app,


900
00:43:41,906 --> 00:43:44,526
and that way VoiceOver users
can do that action easily


901
00:43:44,776 --> 00:43:46,356
without needing to do
the sliding gesture.


902
00:43:46,356 --> 00:43:50,706
In our sample app, we
can also use this API


903
00:43:51,306 --> 00:43:53,566
to allow VoiceOver
users to say hello


904
00:43:53,566 --> 00:43:54,856
or goodbye to their matches.


905
00:43:55,396 --> 00:44:00,216
The custom matching
class looks like this.


906
00:44:00,816 --> 00:44:03,436
You create a custom
action object with a name


907
00:44:03,976 --> 00:44:05,896
that VoiceOver uses
to describe it.


908
00:44:06,206 --> 00:44:08,426
And you also give it a
target and a selector,


909
00:44:08,636 --> 00:44:11,116
so similar to what you
would pass to a UI button.


910
00:44:11,396 --> 00:44:14,236
And that determines what happens
when the action is performed.


911
00:44:14,696 --> 00:44:18,446
Once you've created all of
your CustomAction objects,


912
00:44:19,106 --> 00:44:20,946
you can assign them
to a view using the


913
00:44:20,946 --> 00:44:23,666
accessibilityCustomActions
array property.


914
00:44:24,276 --> 00:44:30,196
So now, let's use this in our
app to fix the remaining issues.


915
00:44:30,796 --> 00:44:33,406
First, what we're going
to do is make sure


916
00:44:33,406 --> 00:44:35,656
that VoiceOver navigates
the views


917
00:44:35,816 --> 00:44:38,226
in the profile card
in the correct order.


918
00:44:38,816 --> 00:44:40,496
Namely, we don't want
it to go from age


919
00:44:40,496 --> 00:44:42,106
to hobbies and back to 32.


920
00:44:42,106 --> 00:44:49,506
So to fix that, let's click on
the card view class on the left.


921
00:44:49,606 --> 00:44:51,846
Here's our method where we
add all the profile views.


922
00:44:52,426 --> 00:44:53,526
When I scroll to the bottom,


923
00:44:54,846 --> 00:44:57,436
after all of our subviews
have been created,


924
00:44:57,916 --> 00:45:00,266
we can set the
accessibilityElement property


925
00:45:00,266 --> 00:45:03,516
of our card view to an
array of its subviews


926
00:45:03,556 --> 00:45:04,946
in the order you
want them to appear.


927
00:45:05,816 --> 00:45:09,756
Notice how I put the age title
right next to the age value.


928
00:45:11,496 --> 00:45:14,036
Whoops. Okay.


929
00:45:14,576 --> 00:45:19,176
Next let's make sure that
VoiceOver users can say hello


930
00:45:19,176 --> 00:45:20,236
or goodbye to their matches.


931
00:45:20,676 --> 00:45:23,576
To do that, I'm going to click


932
00:45:23,576 --> 00:45:26,266
on the Matches View
Controller on the left.


933
00:45:26,636 --> 00:45:29,856
First, let's find out what we're
doing when a user swipes up


934
00:45:29,856 --> 00:45:31,676
or down without VoiceOver
enabled.


935
00:45:31,946 --> 00:45:34,656
So I'm going to click
on the drop down


936
00:45:34,916 --> 00:45:37,756
and find our swipe gesture
recognizer handlers.


937
00:45:39,336 --> 00:45:41,686
So both of these handlers
are simply calling


938
00:45:41,686 --> 00:45:44,976
in to methods called say
hello and say goodbye,


939
00:45:45,486 --> 00:45:47,826
which are implemented
right above.


940
00:45:48,346 --> 00:45:52,056
These methods are also great
candidates for the selector


941
00:45:52,056 --> 00:45:54,776
that we pass to the
CustomAction objects.


942
00:45:55,646 --> 00:45:58,046
The only thing we'll need
to change is make sure


943
00:45:58,046 --> 00:45:59,406
that they return Booleans


944
00:45:59,446 --> 00:46:01,406
to indicate whether
the action succeeded.


945
00:46:01,906 --> 00:46:04,526
In most cases, you
can just return yes.


946
00:46:05,436 --> 00:46:06,646
Oh, one more thing.


947
00:46:07,746 --> 00:46:11,436
When you say hello or goodbye
to a match, the layout changes.


948
00:46:12,026 --> 00:46:14,656
So again, we're going to post
a layout change notification.


949
00:46:15,326 --> 00:46:17,006
Both of these methods
are calling


950
00:46:17,006 --> 00:46:19,566
in to a helper called
animateCardsForHello,


951
00:46:19,636 --> 00:46:21,526
which is implemented
right above.


952
00:46:21,876 --> 00:46:26,186
So in the completion
for this animation,


953
00:46:27,396 --> 00:46:29,686
we should post our
layoutChangedNotification.


954
00:46:30,216 --> 00:46:32,756
Okay. So that's all
the setup we need.


955
00:46:33,116 --> 00:46:35,326
Now, let's create those
CustomAction objects.


956
00:46:36,146 --> 00:46:40,406
I'm going to click on the
drop down at the top and find


957
00:46:40,406 --> 00:46:42,596
where we add the card
to the Matches page.


958
00:46:42,706 --> 00:46:45,946
So here's where we're
creating the card,


959
00:46:47,036 --> 00:46:50,566
and we're assigning swipe
gesture recognizers to it.


960
00:46:51,796 --> 00:46:53,886
Alongside those swipe
gesture recognizers,


961
00:46:54,226 --> 00:46:55,846
let's now create
our CustomActions.


962
00:46:56,306 --> 00:46:58,466
First, I'm going to create
an action for saying hello.


963
00:46:59,106 --> 00:47:02,566
So here's how that looks.


964
00:47:03,156 --> 00:47:05,936
We give it a name, which in
this case is simply say hello.


965
00:47:06,746 --> 00:47:10,906
We pass in the View Controller
as a target, and as a selector,


966
00:47:10,906 --> 00:47:13,036
we pass in the method
that we just modified


967
00:47:13,036 --> 00:47:13,916
to return a Boolean.


968
00:47:14,516 --> 00:47:17,646
We do the same thing
for saying goodbye.


969
00:47:18,306 --> 00:47:22,476
And now, we want the user
to be able to say hello


970
00:47:22,476 --> 00:47:25,856
or goodbye wherever they
are in the profile card.


971
00:47:26,106 --> 00:47:29,596
So for every element
in the card view,


972
00:47:29,876 --> 00:47:32,696
we're going to set it's
accessibilityCustomActions


973
00:47:32,696 --> 00:47:35,436
property to an array
of these two actions.


974
00:47:36,016 --> 00:47:40,976
Okay. Now, let's build and
run with these changes.


975
00:47:41,516 --> 00:47:51,726
[ Background Sounds ]


976
00:47:52,226 --> 00:47:56,656
>> Double tap to open.


977
00:47:56,656 --> 00:47:57,336
HelloGoodbye [clicking sound].


978
00:47:57,916 --> 00:47:58,276
HelloGoodbye.


979
00:47:58,566 --> 00:47:59,736
>> Okay. Let's tap on Matches.


980
00:48:00,206 --> 00:48:01,006
>> Matches button.


981
00:48:01,046 --> 00:48:03,676
>> And double tap to activate.


982
00:48:03,676 --> 00:48:04,036
>> [Beeping sound] Matches.


983
00:48:04,426 --> 00:48:05,386
Matches. Back.


984
00:48:05,696 --> 00:48:06,456
Back button.


985
00:48:06,606 --> 00:48:09,476
>> So the first thing I'm going
to do is tap on the photo,


986
00:48:09,776 --> 00:48:10,966
and start swiping to the right


987
00:48:11,096 --> 00:48:13,626
to see what order VoiceOver
sees these elements.


988
00:48:14,796 --> 00:48:15,706
>> Profile photo.


989
00:48:16,006 --> 00:48:17,296
Image. Age.


990
00:48:17,736 --> 00:48:19,346
32. Hobbies.


991
00:48:19,946 --> 00:48:21,436
Cooking. Bubble tea
with friends.


992
00:48:21,696 --> 00:48:22,026
Travel.


993
00:48:22,536 --> 00:48:24,536
>> So that's much
easier to understand.


994
00:48:24,776 --> 00:48:28,506
Next, let's touch any
element in the profile card.


995
00:48:28,736 --> 00:48:30,526
In this case, I'm going
to touch on the photo.


996
00:48:30,846 --> 00:48:31,896
And listen to what it says.


997
00:48:32,396 --> 00:48:33,266
>> Profile photo.


998
00:48:33,586 --> 00:48:36,706
Image. Swipe up or down
to select a CustomAction.


999
00:48:37,166 --> 00:48:38,996
>> So we're given the
option to choose one


1000
00:48:38,996 --> 00:48:40,246
of the actions we created.


1001
00:48:40,726 --> 00:48:41,596
When I swipe down --


1002
00:48:42,056 --> 00:48:42,726
>> Say hello.


1003
00:48:43,716 --> 00:48:45,256
>> I hear the description
of the action.


1004
00:48:45,646 --> 00:48:49,046
If I want to take that action, I
can double tap, [clicking sound]


1005
00:48:49,486 --> 00:48:52,856
and so now VoiceOver
users can also say hello


1006
00:48:52,856 --> 00:48:54,086
or goodbye to their matches.


1007
00:48:54,236 --> 00:48:56,826
And that's how easy it is


1008
00:48:56,826 --> 00:48:59,106
to use the new API
we've added in iOS 8.


1009
00:49:00,516 --> 00:49:06,546
[ Applause ]


1010
00:49:07,046 --> 00:49:08,846
>> So we've come to
the end of our talk,


1011
00:49:08,916 --> 00:49:10,776
and there are a few
takeaways I'd like you


1012
00:49:10,776 --> 00:49:13,526
to have when you leave.


1013
00:49:14,066 --> 00:49:16,586
First, iOS users are diverse.


1014
00:49:16,936 --> 00:49:19,556
Keep in mind that there
may be users of your app


1015
00:49:19,986 --> 00:49:22,286
who have different needs,
which you should accommodate.


1016
00:49:23,166 --> 00:49:27,766
When you accommodate more users,
you're widening your user base.


1017
00:49:28,196 --> 00:49:31,186
When more people can use
your app, more people will.


1018
00:49:31,726 --> 00:49:33,836
And finally,


1019
00:49:33,836 --> 00:49:39,516
adding accessibility is a low
effort, high reward business.


1020
00:49:39,756 --> 00:49:42,666
We've just seen how, with only a
few code changes, we took an app


1021
00:49:43,086 --> 00:49:45,306
that was just unusable
for many users,


1022
00:49:45,306 --> 00:49:47,886
and made it into an experience
that they, too, can enjoy.


1023
00:49:49,336 --> 00:49:52,116
So without needing
a lot of work,


1024
00:49:52,116 --> 00:49:54,266
you can make a real
difference to users.


1025
00:49:55,446 --> 00:50:00,536
For more information, you
can contact our Evangelist,


1026
00:50:00,626 --> 00:50:04,146
Jake Behrens, or you can consult
the Accessibility Programming


1027
00:50:04,146 --> 00:50:04,796
Guide for iOS.


1028
00:50:05,876 --> 00:50:07,336
There is also the
developer forums.


1029
00:50:07,566 --> 00:50:09,416
So you can ask other
developers your questions.


1030
00:50:09,866 --> 00:50:13,866
There are several related
sessions to this one.


1031
00:50:14,476 --> 00:50:16,166
Prior to this talk,
we had a talk


1032
00:50:16,166 --> 00:50:17,586
about accessibility on OS X.


1033
00:50:17,726 --> 00:50:19,626
If you missed it, you
can watch the video.


1034
00:50:20,096 --> 00:50:23,886
Tomorrow there will be a talk
about designing apps for people


1035
00:50:23,886 --> 00:50:25,166
on the autistic spectrum.


1036
00:50:25,346 --> 00:50:27,936
And on Friday, you can learn how


1037
00:50:27,936 --> 00:50:30,746
to make even complex web
applications accessible.


1038
00:50:32,396 --> 00:50:33,346
Thank you all for coming.


1039
00:50:33,526 --> 00:50:34,576
I hope you enjoyed the talk.


1040
00:50:34,926 --> 00:50:36,576
And have a great rest
of the conference.


1041
00:50:37,508 --> 00:50:39,508
[ Applause ]

