1
00:00:07,516 --> 00:00:15,500
[ Music ]


2
00:00:27,266 --> 00:00:27,956
>> Hey, guys.


3
00:00:28,516 --> 00:00:31,716
[ Applause ]


4
00:00:32,216 --> 00:00:33,006
Thank you.


5
00:00:34,116 --> 00:00:35,296
Thanks for coming by, guys.


6
00:00:36,326 --> 00:00:38,576
Welcome to Designing Fluid


7
00:00:38,576 --> 00:00:39,216
Interfaces.


8
00:00:39,456 --> 00:00:40,456
My name is Chan.


9
00:00:40,766 --> 00:00:41,826
And, I work on the human


10
00:00:41,826 --> 00:00:43,206
interface team here at Apple.


11
00:00:43,856 --> 00:00:45,536
And, most recently, I worked on


12
00:00:45,536 --> 00:00:47,536
this, the fluid gestural


13
00:00:47,536 --> 00:00:49,176
interface for iPhone 10.


14
00:00:49,926 --> 00:00:53,756
So, me, Marcos, and Nathan, we


15
00:00:53,796 --> 00:00:55,146
want to share a little bit about


16
00:00:55,146 --> 00:00:56,676
what we learned working on this,


17
00:00:57,336 --> 00:00:58,666
and other projects like this in


18
00:00:58,666 --> 00:00:59,056
the past.


19
00:01:00,026 --> 00:01:01,576
So, the question we ask


20
00:01:01,826 --> 00:01:04,536
ourselves a lot is, what


21
00:01:04,676 --> 00:01:06,656
actually makes an interface feel


22
00:01:06,656 --> 00:01:07,156
fluid?


23
00:01:08,296 --> 00:01:09,826
And, we've noticed that a lot of


24
00:01:09,986 --> 00:01:11,246
people actually describe it


25
00:01:11,306 --> 00:01:11,826
differently.


26
00:01:12,276 --> 00:01:14,026
You know, sometimes, when people


27
00:01:14,026 --> 00:01:15,226
actually try this stuff, when we


28
00:01:15,226 --> 00:01:16,516
show them a demo, and they try


29
00:01:16,516 --> 00:01:17,296
it, and they hold it in their


30
00:01:17,356 --> 00:01:19,226
hands, they sometimes say it


31
00:01:19,226 --> 00:01:19,636
feels fast.


32
00:01:20,106 --> 00:01:21,356
Or, other people sometimes say


33
00:01:21,356 --> 00:01:22,496
it feels smooth.


34
00:01:22,896 --> 00:01:24,146
And, when it's feeling really


35
00:01:24,146 --> 00:01:25,606
good, sometimes people even say


36
00:01:25,606 --> 00:01:27,476
it feels natural, or magical.


37
00:01:28,426 --> 00:01:29,766
But, when it comes down to it,


38
00:01:30,476 --> 00:01:32,356
it really feels like, it's one


39
00:01:32,356 --> 00:01:33,636
of those things where you just


40
00:01:33,636 --> 00:01:34,656
know it when you feel it.


41
00:01:35,176 --> 00:01:36,206
It just feels right.


42
00:01:37,186 --> 00:01:38,526
And, you can have a gestural UI,


43
00:01:38,806 --> 00:01:41,076
and we've seen lots of gestural


44
00:01:41,076 --> 00:01:42,866
UI's out there, but if it's not


45
00:01:43,016 --> 00:01:44,526
done right, something just feels


46
00:01:44,636 --> 00:01:45,426
off about it.


47
00:01:45,896 --> 00:01:47,456
And, it's oftentimes hard to put


48
00:01:47,456 --> 00:01:48,556
your finger on why.


49
00:01:49,496 --> 00:01:50,776
And, it's more than just about


50
00:01:50,946 --> 00:01:51,956
frame rates, you know.


51
00:01:52,066 --> 00:01:53,236
You can have something chugging


52
00:01:53,236 --> 00:01:54,906
along at a nice 60 frames per


53
00:01:54,906 --> 00:01:57,746
second, but it just feels off.


54
00:01:57,776 --> 00:01:59,626
So, what gives us this feeling?


55
00:02:00,756 --> 00:02:02,916
Well, we think it boils down to


56
00:02:03,306 --> 00:02:04,676
when the tool feels like an


57
00:02:04,676 --> 00:02:06,176
extension of your mind.


58
00:02:06,856 --> 00:02:08,506
An extension of your mind.


59
00:02:09,256 --> 00:02:10,895
So, why is this important?


60
00:02:12,056 --> 00:02:13,526
Well, if you look at it, the


61
00:02:13,526 --> 00:02:15,226
iPhone is a tool, right?


62
00:02:15,226 --> 00:02:17,486
It's a hand tool for information


63
00:02:17,486 --> 00:02:18,396
and communication.


64
00:02:18,916 --> 00:02:21,286
And, it works by marrying our


65
00:02:21,386 --> 00:02:22,986
tactile senses with our sense of


66
00:02:22,986 --> 00:02:23,396
vision.


67
00:02:24,316 --> 00:02:25,536
But, if you think about it, it's


68
00:02:25,536 --> 00:02:27,846
actually part of a long line of


69
00:02:28,006 --> 00:02:29,446
hand tools extending back


70
00:02:29,926 --> 00:02:31,056
thousands of years.


71
00:02:32,066 --> 00:02:33,286
The tool on the left here was


72
00:02:33,286 --> 00:02:35,036
used to extract bone marrow


73
00:02:35,036 --> 00:02:37,846
150,000 years ago, extending the


74
00:02:37,846 --> 00:02:38,896
sharpness of what our fingers


75
00:02:38,896 --> 00:02:39,226
could do.


76
00:02:39,776 --> 00:02:41,586
So, we've been making hand tools


77
00:02:41,586 --> 00:02:42,686
for some time now.


78
00:02:43,076 --> 00:02:45,276
And, the most amazing thing is


79
00:02:45,276 --> 00:02:46,326
that our hands have actually


80
00:02:46,326 --> 00:02:49,126
evolved and adapted alongside


81
00:02:49,126 --> 00:02:49,666
our tools.


82
00:02:49,946 --> 00:02:51,296
We've evolved a huge


83
00:02:51,296 --> 00:02:52,726
concentration of muscles,


84
00:02:52,726 --> 00:02:54,766
nerves, blood vessels that can


85
00:02:54,766 --> 00:02:56,136
perform the most delicate


86
00:02:56,136 --> 00:02:57,766
gestures, and sense the lightest


87
00:02:57,766 --> 00:02:58,196
of touches.


88
00:02:59,306 --> 00:03:01,386
So, we're extremely adapted to


89
00:03:01,536 --> 00:03:03,066
this tactile world we all live


90
00:03:03,066 --> 00:03:03,156
in.


91
00:03:04,206 --> 00:03:06,106
But, if you look at the history


92
00:03:06,106 --> 00:03:08,236
of computers, we started in a


93
00:03:08,236 --> 00:03:09,536
place where there was a lot of


94
00:03:09,536 --> 00:03:11,236
layers of extraction between you


95
00:03:11,236 --> 00:03:11,846
and the interface.


96
00:03:12,306 --> 00:03:13,636
There was so much you had to


97
00:03:13,636 --> 00:03:15,026
know just to operate it.


98
00:03:15,466 --> 00:03:17,036
And, that made it out of reach


99
00:03:17,036 --> 00:03:17,956
for a lot of people.


100
00:03:19,446 --> 00:03:21,756
But, over the last few decades


101
00:03:21,756 --> 00:03:23,046
or so, you've sort of been


102
00:03:23,046 --> 00:03:24,596
stripping those layers back you


103
00:03:24,596 --> 00:03:25,696
know, starting with indirect


104
00:03:25,696 --> 00:03:27,316
manipulation, where things were


105
00:03:27,316 --> 00:03:28,436
a little bit more one-to-one.


106
00:03:28,436 --> 00:03:30,836
A little bit more direct all the


107
00:03:30,836 --> 00:03:33,946
way to now, where we're finally


108
00:03:34,076 --> 00:03:35,776
stripping away all those layers


109
00:03:35,816 --> 00:03:37,096
back, to where you're directly


110
00:03:37,356 --> 00:03:38,736
interacting with the content.


111
00:03:39,056 --> 00:03:40,916
This to us is the magical


112
00:03:40,916 --> 00:03:41,266
element.


113
00:03:41,266 --> 00:03:42,586
It's when it stops feeling like


114
00:03:42,586 --> 00:03:44,906
a computer, and starts feeling


115
00:03:45,456 --> 00:03:48,466
more like an extension of the


116
00:03:48,466 --> 00:03:49,266
natural world.


117
00:03:49,976 --> 00:03:51,916
This means the interface is now


118
00:03:51,956 --> 00:03:53,976
communicating with us at a much


119
00:03:53,976 --> 00:03:55,606
more ancient level than


120
00:03:55,606 --> 00:03:57,366
interfaces have ever done.


121
00:03:57,886 --> 00:03:59,286
And, we have really high


122
00:03:59,416 --> 00:04:00,136
standards for it.


123
00:04:00,586 --> 00:04:01,796
You know, if the slightest thing


124
00:04:01,796 --> 00:04:03,166
feels wrong, boom, the illusion


125
00:04:03,166 --> 00:04:04,136
is just shattered.


126
00:04:04,136 --> 00:04:06,566
But, when it feels right, it


127
00:04:06,566 --> 00:04:07,866
feels like an extension of


128
00:04:07,866 --> 00:04:09,266
yourself, an extension of your


129
00:04:09,306 --> 00:04:10,056
physical body.


130
00:04:10,736 --> 00:04:12,126
It's a tool that's in sync with


131
00:04:12,126 --> 00:04:13,066
your thought.


132
00:04:13,066 --> 00:04:14,786
It feels delightful to use, and


133
00:04:14,786 --> 00:04:16,356
it feels really low-friction,


134
00:04:16,356 --> 00:04:17,466
and even playful.


135
00:04:18,396 --> 00:04:19,966
So, what gives us this feeling?


136
00:04:20,456 --> 00:04:21,805
And, when it feels off, how do


137
00:04:21,805 --> 00:04:22,866
we make it feel right?


138
00:04:23,586 --> 00:04:24,896
That's what this presentation's


139
00:04:25,026 --> 00:04:25,606
all about.


140
00:04:27,006 --> 00:04:28,016
We're going to talk about four


141
00:04:28,096 --> 00:04:28,586
things today.


142
00:04:28,586 --> 00:04:30,736
And, we're going to start with


143
00:04:31,126 --> 00:04:32,546
designing some principles,


144
00:04:32,546 --> 00:04:34,106
talking about how we build


145
00:04:34,146 --> 00:04:35,386
interfaces that feel like an


146
00:04:35,386 --> 00:04:36,636
extension of us.


147
00:04:37,426 --> 00:04:39,516
How to design motion that feels


148
00:04:39,516 --> 00:04:40,776
in tune with the motion of our


149
00:04:40,776 --> 00:04:42,376
own bodies, and the world around


150
00:04:42,376 --> 00:04:42,736
us.


151
00:04:43,716 --> 00:04:45,526
And, also designing gestures


152
00:04:45,656 --> 00:04:46,726
that feel elegant and


153
00:04:46,726 --> 00:04:47,476
intelligent.


154
00:04:48,036 --> 00:04:50,206
We're also going to talk about


155
00:04:50,206 --> 00:04:51,806
that, now that we've built this


156
00:04:51,806 --> 00:04:53,436
kind of stuff, how do we build


157
00:04:53,436 --> 00:04:54,786
interactions on top of it that


158
00:04:54,866 --> 00:04:56,416
feel native to the medium of


159
00:04:56,536 --> 00:04:57,786
touch, as a medium?


160
00:04:57,786 --> 00:05:00,246
So, let's get started.


161
00:05:00,346 --> 00:05:02,556
How do we design an interface


162
00:05:02,656 --> 00:05:04,316
that actually extends our mind?


163
00:05:04,316 --> 00:05:05,046
How do we do this?


164
00:05:05,786 --> 00:05:07,996
Well, we think the way to do it,


165
00:05:08,546 --> 00:05:10,406
is to align the interface to the


166
00:05:10,406 --> 00:05:12,396
way we think and the way we


167
00:05:12,396 --> 00:05:12,786
move.


168
00:05:13,666 --> 00:05:14,916
So, the most important part of


169
00:05:14,956 --> 00:05:17,626
that is that our minds are


170
00:05:17,676 --> 00:05:19,386
constantly responding to changes


171
00:05:19,386 --> 00:05:21,536
and stimulus and thought, you


172
00:05:21,536 --> 00:05:21,766
know?


173
00:05:21,926 --> 00:05:22,856
Our minds and bodies are


174
00:05:23,006 --> 00:05:24,756
constantly in a state of dynamic


175
00:05:24,806 --> 00:05:25,286
change.


176
00:05:25,746 --> 00:05:27,226
So, it's not that our interfaces


177
00:05:27,226 --> 00:05:28,746
should be fluid, it's that we're


178
00:05:28,856 --> 00:05:30,236
fluid, and our interfaces need


179
00:05:30,236 --> 00:05:31,626
to be able to respond to that.


180
00:05:33,046 --> 00:05:35,666
So, that begins with response.


181
00:05:37,176 --> 00:05:38,986
You know, our tools depend on


182
00:05:39,036 --> 00:05:39,736
the latency.


183
00:05:40,126 --> 00:05:41,236
Think about how hard it would be


184
00:05:41,236 --> 00:05:43,056
to use any tool, or play an


185
00:05:43,056 --> 00:05:44,336
instrument, or do anything in


186
00:05:44,336 --> 00:05:45,436
the physical world, if there was


187
00:05:45,436 --> 00:05:46,536
a delay to using it?


188
00:05:47,206 --> 00:05:48,516
And, we found that people are


189
00:05:48,736 --> 00:05:49,926
really, really sensitive to


190
00:05:49,926 --> 00:05:50,416
latency.


191
00:05:50,766 --> 00:05:52,386
You know? If you introduce any


192
00:05:52,386 --> 00:05:54,876
amount of lag, things all of a


193
00:05:54,876 --> 00:05:56,026
sudden just kind of fall off a


194
00:05:56,026 --> 00:05:57,466
cliff in terms of how they


195
00:05:57,466 --> 00:05:58,106
respond to you.


196
00:05:58,106 --> 00:05:59,436
There's all this additional


197
00:05:59,436 --> 00:06:00,246
mental burden.


198
00:06:00,546 --> 00:06:01,736
It feels super disconnected.


199
00:06:01,736 --> 00:06:02,776
It doesn't feel like an


200
00:06:02,776 --> 00:06:03,966
extension of you anymore.


201
00:06:04,756 --> 00:06:06,526
So, we work so hard to reduce


202
00:06:06,596 --> 00:06:07,126
latency.


203
00:06:07,716 --> 00:06:09,276
Where, we actually engineered


204
00:06:09,276 --> 00:06:10,696
the latest iPhone to respond


205
00:06:10,696 --> 00:06:12,286
quicker to your finger, so we


206
00:06:12,286 --> 00:06:13,916
can detect all the nuances of


207
00:06:13,916 --> 00:06:15,396
your gestures as instantly as


208
00:06:15,426 --> 00:06:15,876
possible.


209
00:06:16,696 --> 00:06:18,086
So, we really care about this


210
00:06:18,146 --> 00:06:19,486
stuff, and we think you should


211
00:06:19,486 --> 00:06:19,826
too.


212
00:06:19,826 --> 00:06:23,166
And, that means look for delays


213
00:06:23,296 --> 00:06:23,936
everywhere.


214
00:06:23,986 --> 00:06:25,016
It's not just swipes.


215
00:06:25,016 --> 00:06:26,306
It's taps, it's presses, it's


216
00:06:26,446 --> 00:06:27,546
every interaction with the


217
00:06:27,606 --> 00:06:28,066
object.


218
00:06:28,586 --> 00:06:29,926
Everything needs to respond


219
00:06:30,006 --> 00:06:30,606
instantly.


220
00:06:31,466 --> 00:06:32,486
And, during the process of


221
00:06:32,486 --> 00:06:34,076
designing this stuff, you know,


222
00:06:34,076 --> 00:06:36,906
oftentimes the delays kind of


223
00:06:36,906 --> 00:06:38,796
tend to seep in a little bit.


224
00:06:38,986 --> 00:06:39,956
You know? So, it's really


225
00:06:39,956 --> 00:06:41,866
important to keep an eye out for


226
00:06:41,866 --> 00:06:42,236
delays.


227
00:06:42,306 --> 00:06:44,136
Be vigilant and mindful of all


228
00:06:44,136 --> 00:06:46,046
the latencies or timers that we


229
00:06:46,046 --> 00:06:47,086
could introduce into the


230
00:06:47,226 --> 00:06:49,026
interface so that it always


231
00:06:49,096 --> 00:06:50,016
feels responsive.


232
00:06:51,576 --> 00:06:52,406
So, that's the topic of


233
00:06:52,406 --> 00:06:53,256
response.


234
00:06:53,616 --> 00:06:54,906
It's really simple, but it makes


235
00:06:54,906 --> 00:06:57,326
an interface feel lively and


236
00:06:58,556 --> 00:06:58,786
dynamic.


237
00:06:59,046 --> 00:07:02,756
Next, we want to allow for


238
00:07:02,756 --> 00:07:04,216
constant redirection and


239
00:07:04,216 --> 00:07:04,896
interruption.


240
00:07:05,136 --> 00:07:05,866
This one's big.


241
00:07:06,706 --> 00:07:08,526
So, our bodies and minds are


242
00:07:08,756 --> 00:07:09,876
constantly in a state of


243
00:07:09,876 --> 00:07:11,496
redirecting in response to


244
00:07:11,496 --> 00:07:12,206
change in thought, like we


245
00:07:12,206 --> 00:07:12,736
talked about.


246
00:07:13,586 --> 00:07:14,916
So, if I was walking to the end


247
00:07:14,916 --> 00:07:16,496
of this stage here, and I


248
00:07:16,496 --> 00:07:17,736
realize I forgot something back


249
00:07:17,766 --> 00:07:19,166
there, I could just turn back


250
00:07:19,166 --> 00:07:19,706
immediately.


251
00:07:19,706 --> 00:07:20,656
And, I wouldn't have to wait for


252
00:07:20,656 --> 00:07:22,676
my body to reach the end before


253
00:07:23,146 --> 00:07:23,936
I did that, right?


254
00:07:24,336 --> 00:07:25,376
So, it's important for our


255
00:07:25,376 --> 00:07:26,896
interfaces to be able to reflect


256
00:07:26,986 --> 00:07:28,666
that ability of constantly


257
00:07:28,666 --> 00:07:29,246
redirecting.


258
00:07:29,246 --> 00:07:31,086
And, it makes it feel connected


259
00:07:31,086 --> 00:07:31,486
to you.


260
00:07:32,276 --> 00:07:34,286
That's why for iPhone 10, we


261
00:07:34,286 --> 00:07:35,936
built a fully redirectable


262
00:07:35,936 --> 00:07:36,416
interface.


263
00:07:37,336 --> 00:07:38,546
So, what's that?


264
00:07:39,006 --> 00:07:41,206
So, the iPhone 10's an


265
00:07:41,206 --> 00:07:42,586
actually-- it's pretty simple


266
00:07:42,586 --> 00:07:43,416
two-axis gesture.


267
00:07:43,416 --> 00:07:44,676
You go horizontally between


268
00:07:44,676 --> 00:07:44,836
apps.


269
00:07:45,306 --> 00:07:46,366
And, you go vertically to go


270
00:07:46,366 --> 00:07:46,646
home.


271
00:07:47,106 --> 00:07:48,586
But you can also mix the two


272
00:07:48,586 --> 00:07:50,136
axes, so you can be on your way


273
00:07:50,196 --> 00:07:52,036
home, and peek at multitasking


274
00:07:52,036 --> 00:07:53,156
and decide whether or not to go


275
00:07:53,156 --> 00:07:53,336
there.


276
00:07:54,046 --> 00:07:55,306
Or, you can go to multitasking


277
00:07:55,306 --> 00:07:57,046
and decide, actually, no, I want


278
00:07:57,046 --> 00:07:57,426
to go home.


279
00:07:58,286 --> 00:07:59,926
So, this might not seem that


280
00:07:59,926 --> 00:08:01,596
important, but what if we didn't


281
00:08:01,596 --> 00:08:01,916
do this?


282
00:08:02,026 --> 00:08:03,266
What if it wasn't redirectable?


283
00:08:03,266 --> 00:08:07,706
So, what if the only gestures


284
00:08:07,706 --> 00:08:09,246
you could do was this horizontal


285
00:08:09,246 --> 00:08:11,226
gesture between apps, and then a


286
00:08:11,226 --> 00:08:12,666
vertical gesture to go home, and


287
00:08:12,666 --> 00:08:13,256
that's it.


288
00:08:13,256 --> 00:08:14,316
You couldn't do any of that


289
00:08:14,316 --> 00:08:15,416
in-between stuff I just


290
00:08:15,416 --> 00:08:15,776
mentioned.


291
00:08:16,636 --> 00:08:17,846
Well, what would happen is that


292
00:08:17,846 --> 00:08:19,406
you would have to think before


293
00:08:19,696 --> 00:08:21,136
what you did, before you


294
00:08:21,136 --> 00:08:21,876
performed the gesture, you'd


295
00:08:21,876 --> 00:08:23,086
have to think what you want to


296
00:08:23,086 --> 00:08:23,153
do.


297
00:08:23,986 --> 00:08:25,156
And so, the series of events


298
00:08:25,156 --> 00:08:26,276
would be very linear, right?


299
00:08:26,316 --> 00:08:27,276
So, you'd have to think, do I


300
00:08:27,276 --> 00:08:28,106
want to go home?


301
00:08:28,106 --> 00:08:29,396
Do I want to go to multitasking?


302
00:08:29,826 --> 00:08:30,876
Then you make your decision,


303
00:08:30,876 --> 00:08:32,306
then you perform the gesture,


304
00:08:32,306 --> 00:08:32,905
and then you release.


305
00:08:34,206 --> 00:08:35,876
But, the cool thing is when it's


306
00:08:35,956 --> 00:08:37,876
redirectable, the thought and


307
00:08:37,876 --> 00:08:39,746
gesture happen in parallel.


308
00:08:40,426 --> 00:08:42,535
And, you sort of think it with


309
00:08:42,635 --> 00:08:44,756
the gesture, and it turns out


310
00:08:44,756 --> 00:08:46,776
this is way faster than thinking


311
00:08:46,776 --> 00:08:47,386
before doing.


312
00:08:47,386 --> 00:08:48,826
You know? Because it's a


313
00:08:48,856 --> 00:08:52,326
multi-axis gestural space.


314
00:08:52,326 --> 00:08:53,676
It's not separate gestures.


315
00:08:53,986 --> 00:08:55,616
It's one gesture that does all


316
00:08:55,616 --> 00:08:55,976
this stuff.


317
00:08:55,976 --> 00:08:57,306
Home, multitasking, quick app


318
00:08:57,306 --> 00:08:58,266
switching, so you don't have to


319
00:08:58,646 --> 00:08:59,766
think about it as a separate


320
00:08:59,766 --> 00:09:00,166
gesture.


321
00:09:01,206 --> 00:09:03,796
And, helps with discovery.


322
00:09:03,916 --> 00:09:05,346
Because you can discover a new


323
00:09:05,346 --> 00:09:06,776
gesture along the path of an


324
00:09:06,776 --> 00:09:07,656
existing gesture.


325
00:09:08,546 --> 00:09:10,886
And, it allows you to layer


326
00:09:10,886 --> 00:09:11,956
gestures at the speed of


327
00:09:12,046 --> 00:09:12,706
thought.


328
00:09:13,256 --> 00:09:14,156
So, what does that last one


329
00:09:14,156 --> 00:09:14,286
mean?


330
00:09:14,896 --> 00:09:15,986
So, let me show you some


331
00:09:15,986 --> 00:09:16,566
examples.


332
00:09:16,826 --> 00:09:17,846
And, we've slowed down the


333
00:09:17,846 --> 00:09:19,196
physics on the simulation, so


334
00:09:19,196 --> 00:09:20,626
you can actually see a little


335
00:09:20,626 --> 00:09:21,616
bit what I'm talking about.


336
00:09:22,506 --> 00:09:26,006
So, I can swipe to go home, and


337
00:09:26,006 --> 00:09:27,566
then swipe to the next page, or


338
00:09:27,566 --> 00:09:28,946
springboard while I'm going


339
00:09:28,946 --> 00:09:29,176
home.


340
00:09:29,176 --> 00:09:30,616
I can layer these two gestures


341
00:09:30,616 --> 00:09:31,806
once I've internalized them.


342
00:09:33,186 --> 00:09:34,796
Another example is that I can


343
00:09:34,796 --> 00:09:35,846
launch an app and realize, oh,


344
00:09:35,846 --> 00:09:37,126
actually I need to go to


345
00:09:37,126 --> 00:09:38,186
multitasking, and I can


346
00:09:38,316 --> 00:09:39,806
interrupt the app and go


347
00:09:39,806 --> 00:09:41,396
straight to multitasking, while


348
00:09:41,396 --> 00:09:42,256
the app is launching.


349
00:09:43,566 --> 00:09:47,296
Or, I can launch an app and


350
00:09:47,296 --> 00:09:49,016
realize, oh, that was the wrong


351
00:09:49,016 --> 00:09:49,136
app.


352
00:09:49,846 --> 00:09:51,096
And, I can shoot it back home,


353
00:09:51,246 --> 00:09:53,066
while I'm launching it.


354
00:09:53,756 --> 00:09:56,406
Now, there's one other one where


355
00:09:56,406 --> 00:09:58,516
I can actually just launch an


356
00:09:58,516 --> 00:10:00,166
app, and if I'm in a hurry, I


357
00:10:00,166 --> 00:10:01,256
can start interacting with the


358
00:10:01,256 --> 00:10:01,976
app as it's launching.


359
00:10:03,436 --> 00:10:05,366
So, this stuff might not seem


360
00:10:05,366 --> 00:10:06,766
really important, but we've


361
00:10:06,876 --> 00:10:08,256
found it's super important for


362
00:10:08,256 --> 00:10:09,786
the interface to be always


363
00:10:09,786 --> 00:10:11,426
responding, always understanding


364
00:10:11,426 --> 00:10:11,576
you.


365
00:10:12,006 --> 00:10:13,566
It always feels alive.


366
00:10:13,566 --> 00:10:16,306
And, that's really important for


367
00:10:16,306 --> 00:10:17,416
your expectation and


368
00:10:17,416 --> 00:10:18,776
understanding of the interface,


369
00:10:19,196 --> 00:10:20,396
to be comfortable with it.


370
00:10:20,716 --> 00:10:21,736
To realize that it's always


371
00:10:21,776 --> 00:10:22,766
going to respond to you when you


372
00:10:22,766 --> 00:10:23,436
need it.


373
00:10:23,966 --> 00:10:27,776
And, that applies as well to


374
00:10:27,776 --> 00:10:29,476
changes in motion, not just to


375
00:10:29,756 --> 00:10:31,496
the start of an interaction, but


376
00:10:31,496 --> 00:10:32,796
when you're in the middle of an


377
00:10:32,796 --> 00:10:33,526
interaction, and you're


378
00:10:33,526 --> 00:10:34,106
changing.


379
00:10:34,666 --> 00:10:35,726
It's important for us to be


380
00:10:35,726 --> 00:10:37,196
responsive to interruption as


381
00:10:37,196 --> 00:10:37,486
well.


382
00:10:38,046 --> 00:10:39,236
So, a good example is


383
00:10:39,236 --> 00:10:40,606
multitasking on iPhone 10.


384
00:10:41,456 --> 00:10:42,936
So, we have this pause gesture


385
00:10:42,936 --> 00:10:44,136
where you slide your finger up


386
00:10:44,136 --> 00:10:45,506
halfway up the screen, and


387
00:10:45,506 --> 00:10:47,726
pause, and so we need to figure


388
00:10:47,726 --> 00:10:50,506
out how to detect this change in


389
00:10:50,506 --> 00:10:50,896
motion.


390
00:10:50,896 --> 00:10:52,166
And so, how do we do this?


391
00:10:52,166 --> 00:10:53,216
How do we detect this change in


392
00:10:53,216 --> 00:10:53,576
motion?


393
00:10:53,956 --> 00:10:55,036
Should we use a timer?


394
00:10:55,306 --> 00:10:56,586
Should we wait until your finger


395
00:10:56,586 --> 00:10:57,756
has come below a certain


396
00:10:57,756 --> 00:10:59,486
velocity for a few amount of


397
00:10:59,536 --> 00:11:01,836
time, and then [inaudible] bring


398
00:11:01,836 --> 00:11:02,886
in the multitasking cards?


399
00:11:02,886 --> 00:11:04,236
Well, it turns out that's too


400
00:11:04,236 --> 00:11:04,976
slow.


401
00:11:05,196 --> 00:11:06,636
People expect to be able to get


402
00:11:06,636 --> 00:11:08,086
to multitasking instantly.


403
00:11:08,786 --> 00:11:10,856
And, we need a way that can


404
00:11:10,856 --> 00:11:13,986
respond as fast as them.


405
00:11:14,206 --> 00:11:15,116
So, instead we look at your


406
00:11:15,116 --> 00:11:16,376
finger's acceleration.


407
00:11:17,266 --> 00:11:18,636
It turns out there's a huge


408
00:11:18,636 --> 00:11:20,336
spike in the acceleration of


409
00:11:20,336 --> 00:11:21,416
your finger when you pause.


410
00:11:21,816 --> 00:11:23,056
And, actually the faster you


411
00:11:23,056 --> 00:11:25,076
stop, the faster we can detect


412
00:11:25,076 --> 00:11:25,226
it.


413
00:11:25,776 --> 00:11:27,016
So, it's actually responding to


414
00:11:27,016 --> 00:11:29,126
the change in motion, as fast as


415
00:11:29,126 --> 00:11:30,886
we know how, instead of waiting


416
00:11:30,886 --> 00:11:31,676
for some timer.


417
00:11:33,006 --> 00:11:34,326
So, this is a good example of


418
00:11:34,326 --> 00:11:35,666
responding to redirection as


419
00:11:35,666 --> 00:11:37,006
fast as possible.


420
00:11:37,586 --> 00:11:40,856
So, this is the concept of


421
00:11:41,196 --> 00:11:42,436
interruption and redirection.


422
00:11:43,096 --> 00:11:44,426
This stuff makes the interface


423
00:11:44,426 --> 00:11:45,936
feel really, really connected to


424
00:11:46,046 --> 00:11:46,246
you.


425
00:11:47,596 --> 00:11:50,576
Next, we want to talk a little


426
00:11:50,576 --> 00:11:51,646
bit about the architecture of


427
00:11:51,646 --> 00:11:52,096
the interface.


428
00:11:52,096 --> 00:11:52,976
How you lay it out,


429
00:11:53,716 --> 00:11:54,406
conceptually.


430
00:11:55,696 --> 00:11:56,596
And, we think when you're doing


431
00:11:56,596 --> 00:11:58,006
that, it's important to maintain


432
00:11:58,116 --> 00:11:59,846
spatial consistency throughout


433
00:11:59,956 --> 00:12:00,246
movement.


434
00:12:01,126 --> 00:12:01,686
What does that mean?


435
00:12:02,526 --> 00:12:03,716
This kind of mimics the way our


436
00:12:03,766 --> 00:12:05,656
object persistence memory works


437
00:12:05,806 --> 00:12:06,436
in the real world.


438
00:12:07,116 --> 00:12:08,766
So, things smoothly leave and


439
00:12:08,766 --> 00:12:09,756
enter our perception in


440
00:12:09,866 --> 00:12:10,426
symmetric paths.


441
00:12:11,866 --> 00:12:13,246
So, if something disappears one


442
00:12:13,246 --> 00:12:15,556
way, we expect it to emerge from


443
00:12:15,556 --> 00:12:16,146
where it came?


444
00:12:16,306 --> 00:12:18,056
Right? So, if I walked off this


445
00:12:18,056 --> 00:12:20,006
stage this way, and then emerged


446
00:12:20,136 --> 00:12:21,836
that way, you'd be pretty


447
00:12:21,836 --> 00:12:22,496
amazed, right?


448
00:12:22,846 --> 00:12:24,776
Because that's impossible.


449
00:12:25,486 --> 00:12:27,256
So, we wanted to play into this


450
00:12:27,736 --> 00:12:29,516
consistent sense of space that


451
00:12:29,516 --> 00:12:31,246
we all have in the world.


452
00:12:31,806 --> 00:12:34,776
And so, what that means is, if


453
00:12:34,776 --> 00:12:36,116
something is going out of view


454
00:12:36,116 --> 00:12:37,186
in your interface, and coming


455
00:12:37,186 --> 00:12:39,156
back into view, it should do so


456
00:12:39,156 --> 00:12:40,386
in symmetric paths.


457
00:12:40,796 --> 00:12:42,006
It should have a consistent


458
00:12:42,096 --> 00:12:44,606
offscreen path as it enters and


459
00:12:44,606 --> 00:12:44,836
leaves.


460
00:12:44,836 --> 00:12:45,756
A good example of this is


461
00:12:45,916 --> 00:12:47,246
actually iOS navigation.


462
00:12:47,246 --> 00:12:48,706
When I tap on an element in this


463
00:12:48,706 --> 00:12:50,176
list here, it slides in from the


464
00:12:50,176 --> 00:12:50,406
right.


465
00:12:51,196 --> 00:12:52,636
When I tap the back button, it


466
00:12:52,636 --> 00:12:53,866
goes back to the right.


467
00:12:53,926 --> 00:12:55,656
It's a symmetric path.


468
00:12:55,656 --> 00:12:57,276
Each element has a consistent


469
00:12:57,276 --> 00:12:58,626
place where it lives at both


470
00:12:58,716 --> 00:12:59,286
states.


471
00:12:59,966 --> 00:13:01,296
This also reinforces the


472
00:13:01,296 --> 00:13:01,646
gesture.


473
00:13:01,646 --> 00:13:03,336
If I choose to slide it myself


474
00:13:03,416 --> 00:13:04,576
to the right, because I know


475
00:13:04,576 --> 00:13:05,586
that's where it lives, I can do


476
00:13:05,586 --> 00:13:05,786
that.


477
00:13:05,786 --> 00:13:06,466
It's expected.


478
00:13:07,426 --> 00:13:08,686
So, what if we didn't do this.


479
00:13:09,146 --> 00:13:10,236
Here's an example, where when I


480
00:13:10,236 --> 00:13:11,816
tap on something, it slides in,


481
00:13:11,816 --> 00:13:13,926
and then when I hit back it goes


482
00:13:13,926 --> 00:13:14,316
down.


483
00:13:14,316 --> 00:13:15,916
And, it feels disconnected and


484
00:13:15,916 --> 00:13:16,796
confusing, right?


485
00:13:17,476 --> 00:13:18,826
It feels like I'm sending it


486
00:13:19,136 --> 00:13:19,576
somewhere.


487
00:13:19,576 --> 00:13:20,626
In fact, if I wanted to


488
00:13:20,626 --> 00:13:21,736
communicate that I was sending


489
00:13:21,736 --> 00:13:22,746
it somewhere, this is how I


490
00:13:22,746 --> 00:13:23,616
could do it, right?


491
00:13:24,816 --> 00:13:26,496
So, that's the topic of spatial


492
00:13:26,496 --> 00:13:27,246
consistency.


493
00:13:28,056 --> 00:13:29,396
It helps the gesture feel


494
00:13:29,396 --> 00:13:30,736
aligned with our spatial


495
00:13:30,736 --> 00:13:33,796
understanding of the world.


496
00:13:33,796 --> 00:13:36,766
Now, the next one is to hint in


497
00:13:36,766 --> 00:13:37,906
the direction of the gesture.


498
00:13:38,796 --> 00:13:40,216
You know, we humans are always,


499
00:13:40,306 --> 00:13:41,596
kind of, predicting the next few


500
00:13:41,596 --> 00:13:43,356
steps of our experience.


501
00:13:43,746 --> 00:13:44,906
We're always using the, kind of,


502
00:13:44,906 --> 00:13:46,026
trajectories of everything


503
00:13:46,026 --> 00:13:47,546
that's happening in the world to


504
00:13:47,546 --> 00:13:48,796
predict the next few steps of


505
00:13:48,796 --> 00:13:49,296
emotion.


506
00:13:50,316 --> 00:13:52,016
So, we think it's great when an


507
00:13:52,046 --> 00:13:53,456
interface plays into that


508
00:13:53,456 --> 00:13:53,906
prediction.


509
00:13:54,556 --> 00:13:56,246
So, if you have two states here,


510
00:13:56,966 --> 00:13:58,706
initial state and a final state.


511
00:13:59,336 --> 00:14:00,446
The object-- and you have an


512
00:14:00,446 --> 00:14:01,996
intermediate transition.


513
00:14:01,996 --> 00:14:03,746
The object should transition


514
00:14:04,006 --> 00:14:05,586
smoothly between these two


515
00:14:05,586 --> 00:14:07,176
states in a way that it grows


516
00:14:07,176 --> 00:14:08,416
from the initial state to the


517
00:14:08,536 --> 00:14:10,086
final state, whether it's


518
00:14:10,086 --> 00:14:10,926
through a gesture or an


519
00:14:10,926 --> 00:14:11,396
animation.


520
00:14:12,666 --> 00:14:13,856
So, good example is Control


521
00:14:13,856 --> 00:14:14,486
Center actually.


522
00:14:15,206 --> 00:14:16,476
We have these modules here in


523
00:14:16,476 --> 00:14:17,516
Control Center, where as you


524
00:14:17,636 --> 00:14:19,286
press they grow up and out


525
00:14:19,516 --> 00:14:21,166
towards your finger in the


526
00:14:21,166 --> 00:14:22,696
direction of the final state,


527
00:14:22,696 --> 00:14:25,226
where it actually finally just


528
00:14:26,056 --> 00:14:26,426
pops open.


529
00:14:26,566 --> 00:14:27,596
So, that's hinting.


530
00:14:28,216 --> 00:14:29,586
It makes the gestures feel


531
00:14:29,586 --> 00:14:33,626
expected, and predictable.


532
00:14:33,626 --> 00:14:35,646
Now, the next important


533
00:14:35,646 --> 00:14:37,556
principle is to keep touch


534
00:14:37,606 --> 00:14:38,786
interactions lightweight.


535
00:14:39,546 --> 00:14:40,526
You know the lightness of


536
00:14:40,526 --> 00:14:41,836
multitouch is one of the most


537
00:14:41,946 --> 00:14:43,406
underrated aspects of it, I


538
00:14:43,496 --> 00:14:43,686
think.


539
00:14:44,046 --> 00:14:46,386
It enables the airy swipes and


540
00:14:46,386 --> 00:14:48,576
scrolls, and all the taps and


541
00:14:48,576 --> 00:14:49,646
stuff that we're all used to.


542
00:14:49,646 --> 00:14:51,236
It's all super lightweight.


543
00:14:51,736 --> 00:14:53,876
But, we also want to amplify


544
00:14:53,876 --> 00:14:54,436
their motion.


545
00:14:54,926 --> 00:14:56,726
You want to take a small input


546
00:14:56,726 --> 00:14:58,566
and make a big output, to give


547
00:14:58,566 --> 00:15:00,336
that satisfying feeling of


548
00:15:00,336 --> 00:15:01,656
moving or throwing something and


549
00:15:01,656 --> 00:15:03,066
having a magnified result.


550
00:15:03,096 --> 00:15:05,416
So, how does this apply to our


551
00:15:05,416 --> 00:15:06,006
interfaces?


552
00:15:06,086 --> 00:15:07,816
Well, it starts with a short


553
00:15:07,876 --> 00:15:08,476
interaction.


554
00:15:09,226 --> 00:15:10,416
A short, lightweight


555
00:15:10,416 --> 00:15:11,016
interaction.


556
00:15:11,856 --> 00:15:14,256
And, we use all our sensors, all


557
00:15:14,256 --> 00:15:15,766
our technology, to understand as


558
00:15:15,766 --> 00:15:16,586
much about it.


559
00:15:17,096 --> 00:15:18,956
To, sort of, generate a profile


560
00:15:18,956 --> 00:15:21,026
of energy and momentum contained


561
00:15:21,026 --> 00:15:21,836
within the gesture.


562
00:15:23,306 --> 00:15:24,426
Using everything we know,


563
00:15:24,426 --> 00:15:26,256
including position, velocity,


564
00:15:26,416 --> 00:15:28,116
speed, force, everything we know


565
00:15:28,116 --> 00:15:30,566
about it to generate a kind of,


566
00:15:30,566 --> 00:15:32,366
inertial profile of this


567
00:15:32,366 --> 00:15:32,746
gesture.


568
00:15:32,746 --> 00:15:34,506
And then we take that, and


569
00:15:34,506 --> 00:15:37,406
generate an amplified extension


570
00:15:37,406 --> 00:15:37,986
of your movement.


571
00:15:37,986 --> 00:15:39,266
It still feels like an extension


572
00:15:39,266 --> 00:15:39,556
of you.


573
00:15:40,146 --> 00:15:41,696
So, you get that satisfying


574
00:15:41,926 --> 00:15:43,666
result with a light interaction.


575
00:15:45,156 --> 00:15:46,936
So, a good example of this is


576
00:15:46,936 --> 00:15:47,876
scrolling, actually.


577
00:15:47,876 --> 00:15:49,756
Your finger's only onscreen for


578
00:15:49,836 --> 00:15:51,876
a brief amount of time, but the


579
00:15:51,876 --> 00:15:53,496
system is preserving all your


580
00:15:53,576 --> 00:15:54,926
energy and momentum, and


581
00:15:54,986 --> 00:15:56,466
gracefully transferring it into


582
00:15:56,466 --> 00:15:57,066
the interface.


583
00:15:58,276 --> 00:15:59,506
So, what if it didn't have this?


584
00:16:00,566 --> 00:16:02,566
Those same swipes, well, they


585
00:16:02,566 --> 00:16:03,526
wouldn't get you very far.


586
00:16:04,416 --> 00:16:07,946
And, in order to scroll, you'd


587
00:16:07,946 --> 00:16:09,816
have to do these long, laborious


588
00:16:09,946 --> 00:16:11,766
swipes that would require a lot


589
00:16:11,766 --> 00:16:12,686
more manual input.


590
00:16:12,686 --> 00:16:14,616
It would be a huge pain to use.


591
00:16:15,816 --> 00:16:17,196
Another good example of this is


592
00:16:17,296 --> 00:16:18,326
swipe to go home.


593
00:16:19,076 --> 00:16:20,026
The amount of time that your


594
00:16:20,026 --> 00:16:22,026
finger's onscreen is very light.


595
00:16:22,736 --> 00:16:26,016
And, it's-- ends up making it a


596
00:16:26,016 --> 00:16:27,656
much more liquid and lightweight


597
00:16:27,686 --> 00:16:29,466
gesture that still feels native


598
00:16:29,466 --> 00:16:30,706
to the medium of multitouch.


599
00:16:31,506 --> 00:16:32,726
While still being able to reuse


600
00:16:32,726 --> 00:16:33,976
a lot of your muscle memory from


601
00:16:33,976 --> 00:16:35,346
a button, because you move your


602
00:16:35,346 --> 00:16:36,676
finger down on the screen, and


603
00:16:36,676 --> 00:16:37,686
back up to the springboard.


604
00:16:38,306 --> 00:16:43,336
And, it's not just swipes, it's


605
00:16:43,376 --> 00:16:44,446
taps too.


606
00:16:44,886 --> 00:16:46,166
It's important for an interface


607
00:16:46,166 --> 00:16:48,186
to respond satisfyingly to every


608
00:16:48,186 --> 00:16:48,746
interaction.


609
00:16:49,136 --> 00:16:50,416
The interface is signaling to


610
00:16:50,416 --> 00:16:51,886
you that it understood you.


611
00:16:52,336 --> 00:16:53,676
It's so important for the


612
00:16:53,676 --> 00:16:55,096
interface to feel alive and


613
00:16:55,096 --> 00:16:55,816
connected to you.


614
00:16:56,916 --> 00:16:57,956
So, that's the topic of


615
00:16:57,956 --> 00:16:58,886
lightweightness and


616
00:16:58,946 --> 00:16:59,766
amplification.


617
00:17:01,596 --> 00:17:03,246
The next one is called


618
00:17:03,416 --> 00:17:04,006
rubberbanding.


619
00:17:05,066 --> 00:17:07,156
It means we're softly indicating


620
00:17:07,156 --> 00:17:08,665
boundaries of the interface.


621
00:17:08,665 --> 00:17:12,296
So, in this example, the


622
00:17:12,296 --> 00:17:14,215
interface is gradually and


623
00:17:14,296 --> 00:17:15,626
softly letting you know that


624
00:17:15,626 --> 00:17:16,266
there's nothing there.


625
00:17:16,266 --> 00:17:17,346
And, it's tracking you


626
00:17:17,425 --> 00:17:17,796
throughout.


627
00:17:18,086 --> 00:17:19,266
It's always letting you know


628
00:17:19,266 --> 00:17:20,165
that it's understanding you.


629
00:17:21,016 --> 00:17:22,026
What happens if you didn't do


630
00:17:22,026 --> 00:17:22,246
that?


631
00:17:22,246 --> 00:17:23,846
Well, it would feel like this.


632
00:17:23,846 --> 00:17:25,106
It would feel super harsh and


633
00:17:25,106 --> 00:17:25,726
disconcerting.


634
00:17:25,726 --> 00:17:27,126
You kind of hit a wall there.


635
00:17:27,126 --> 00:17:28,326
It would feel broken, right?


636
00:17:28,776 --> 00:17:29,976
And, you actually wouldn't know


637
00:17:29,976 --> 00:17:31,476
the difference between a frozen


638
00:17:31,476 --> 00:17:33,076
phone, and phone that's just at


639
00:17:33,076 --> 00:17:34,046
the top of the edge of the


640
00:17:34,046 --> 00:17:34,696
screen, right?


641
00:17:34,786 --> 00:17:36,406
So, it's really important that


642
00:17:36,406 --> 00:17:37,456
it's always telling you that


643
00:17:37,456 --> 00:17:38,346
you've reached the edge.


644
00:17:38,736 --> 00:17:41,706
And, this applies to


645
00:17:41,706 --> 00:17:42,666
transitions, too.


646
00:17:42,666 --> 00:17:43,736
It's not just about when you hit


647
00:17:43,736 --> 00:17:45,086
the edge, it's also when you


648
00:17:45,086 --> 00:17:46,836
hand off from one thing to


649
00:17:46,836 --> 00:17:47,466
another thing.


650
00:17:47,846 --> 00:17:50,926
Tracking. So, a good example of


651
00:17:50,926 --> 00:17:53,026
this is when you transition from


652
00:17:53,026 --> 00:17:54,366
sliding up the dock to sliding


653
00:17:54,366 --> 00:17:54,876
up the app.


654
00:17:55,566 --> 00:17:56,926
It doesn't just hit a wall, and


655
00:17:56,926 --> 00:17:58,006
one thing stops tracking, and


656
00:17:58,006 --> 00:17:59,196
then the other thing takes over.


657
00:17:59,536 --> 00:18:01,466
They both smoothly hand off in


658
00:18:01,526 --> 00:18:04,026
smooth curves, so that you don't


659
00:18:04,026 --> 00:18:06,166
feel like there's this harsh


660
00:18:06,166 --> 00:18:07,696
moment where you hand off from


661
00:18:07,696 --> 00:18:10,146
one thing to another.


662
00:18:10,146 --> 00:18:12,236
Next one is to design smooth


663
00:18:12,236 --> 00:18:13,216
frames of motion.


664
00:18:14,546 --> 00:18:16,166
So, imagine I have a little


665
00:18:16,666 --> 00:18:18,206
object here moving up and down.


666
00:18:18,206 --> 00:18:18,936
It's very simple.


667
00:18:19,636 --> 00:18:22,396
But, we all know this object is


668
00:18:22,396 --> 00:18:23,626
not really moving, right?


669
00:18:24,316 --> 00:18:25,456
We're all just having the


670
00:18:25,456 --> 00:18:26,676
perception of it moving.


671
00:18:26,676 --> 00:18:27,536
Because we're seeing a bunch of


672
00:18:27,636 --> 00:18:29,466
frames on the screen all at


673
00:18:29,466 --> 00:18:31,456
once, and it's giving us the


674
00:18:31,456 --> 00:18:32,476
illusion of it moving.


675
00:18:33,096 --> 00:18:33,916
So, if we took all of those


676
00:18:33,916 --> 00:18:35,306
frames of motion, and kind of,


677
00:18:35,306 --> 00:18:36,176
spread them out here.


678
00:18:36,176 --> 00:18:37,806
And we see the ball's in motion


679
00:18:37,806 --> 00:18:40,356
over time, the thing that we're


680
00:18:40,356 --> 00:18:42,746
concerned about is right around


681
00:18:42,746 --> 00:18:44,566
here, where there's too much


682
00:18:44,566 --> 00:18:46,686
visual change between the


683
00:18:47,176 --> 00:18:48,246
adjacent frames.


684
00:18:48,626 --> 00:18:50,846
This is when the perception of


685
00:18:50,846 --> 00:18:52,266
the interface becomes a little


686
00:18:52,336 --> 00:18:52,866
choppy.


687
00:18:53,326 --> 00:18:54,786
You get this visual strobing.


688
00:18:55,796 --> 00:18:57,246
And, this is because the


689
00:18:57,246 --> 00:18:58,336
difference between the two


690
00:18:58,456 --> 00:18:59,776
frames is too much.


691
00:19:00,966 --> 00:19:02,736
And, it strobes against your


692
00:19:02,736 --> 00:19:03,626
vision, so.


693
00:19:03,626 --> 00:19:04,576
Here's an example of where you


694
00:19:04,576 --> 00:19:06,656
have two things both moving at


695
00:19:06,656 --> 00:19:07,766
30 frames per second.


696
00:19:08,266 --> 00:19:09,276
But the one on the left looks a


697
00:19:09,356 --> 00:19:10,596
bit smoother than the one on the


698
00:19:10,596 --> 00:19:11,476
right, because the one on the


699
00:19:11,476 --> 00:19:14,036
right is moving so fast, that


700
00:19:14,606 --> 00:19:15,336
it's strobing.


701
00:19:15,416 --> 00:19:19,086
My perception of vision is, kind


702
00:19:19,196 --> 00:19:19,946
of, breaking down.


703
00:19:19,946 --> 00:19:21,806
I don't believe that it's moving


704
00:19:21,806 --> 00:19:22,676
smoothly any more.


705
00:19:23,566 --> 00:19:24,896
So, the important thing to take


706
00:19:24,896 --> 00:19:26,446
away is that it's not just about


707
00:19:26,516 --> 00:19:27,016
framerate.


708
00:19:27,556 --> 00:19:28,876
It's what's in the frames.


709
00:19:29,746 --> 00:19:31,426
So, we're kind of limited by the


710
00:19:31,466 --> 00:19:32,956
framerate, and how fast we can


711
00:19:32,956 --> 00:19:34,736
move and still preserve a smooth


712
00:19:34,736 --> 00:19:35,186
motion.


713
00:19:36,036 --> 00:19:37,806
So, this one's in 30 frames per


714
00:19:37,806 --> 00:19:38,216
second.


715
00:19:38,526 --> 00:19:40,016
If we move it up to 60 frames


716
00:19:40,016 --> 00:19:42,036
per second, you can see that we


717
00:19:42,036 --> 00:19:43,286
can actually go a little bit


718
00:19:43,286 --> 00:19:45,486
faster, and still preserve


719
00:19:45,576 --> 00:19:46,406
smooth motion.


720
00:19:46,606 --> 00:19:47,776
We can do faster movement


721
00:19:47,776 --> 00:19:48,586
without strobing.


722
00:19:49,556 --> 00:19:50,736
And, there's addition tricks we


723
00:19:50,736 --> 00:19:51,726
can do too, we can do things


724
00:19:51,726 --> 00:19:52,556
like motion blur.


725
00:19:52,556 --> 00:19:55,696
Motion blur basically bakes in


726
00:19:55,696 --> 00:19:57,476
more information in each frame


727
00:19:57,476 --> 00:19:59,276
about the movement, like the way


728
00:19:59,276 --> 00:20:00,406
your eyes work, and the way a


729
00:20:00,406 --> 00:20:01,086
camera works.


730
00:20:02,256 --> 00:20:03,316
And you can also do-- take a


731
00:20:03,356 --> 00:20:05,396
page from 2D animation and video


732
00:20:05,396 --> 00:20:07,026
games by stretching, this-- this


733
00:20:07,026 --> 00:20:07,786
technique called motion


734
00:20:07,786 --> 00:20:09,536
stretching stretches the content


735
00:20:09,536 --> 00:20:12,376
in each frame to provide this


736
00:20:12,376 --> 00:20:14,876
elastic look as it moves with


737
00:20:14,876 --> 00:20:15,466
velocity.


738
00:20:16,126 --> 00:20:19,246
And so, in motion, it kind of


739
00:20:19,246 --> 00:20:20,086
looks like this.


740
00:20:20,746 --> 00:20:22,126
So, each of the different


741
00:20:22,126 --> 00:20:23,866
techniques, kind of, tries to


742
00:20:23,866 --> 00:20:26,556
encode more information visually


743
00:20:26,776 --> 00:20:28,466
about what's going on in the


744
00:20:28,466 --> 00:20:28,896
motion.


745
00:20:29,546 --> 00:20:30,386
And, I want to focus a little


746
00:20:30,386 --> 00:20:31,286
bit on this last one here,


747
00:20:31,286 --> 00:20:32,906
motion stretching, because we do


748
00:20:32,906 --> 00:20:34,206
this on iPhone 10, actually.


749
00:20:34,876 --> 00:20:36,136
You know, when you launch an


750
00:20:36,136 --> 00:20:39,066
app, the icon elastically


751
00:20:39,066 --> 00:20:40,606
stretches down to become the app


752
00:20:41,076 --> 00:20:41,636
as it opens.


753
00:20:42,366 --> 00:20:43,726
And, it stretches up in the


754
00:20:43,726 --> 00:20:45,096
opposite direction as you close


755
00:20:45,096 --> 00:20:45,556
the app.


756
00:20:45,946 --> 00:20:46,876
To give you that little bit


757
00:20:46,876 --> 00:20:48,486
extra information between each


758
00:20:48,486 --> 00:20:49,786
frame of motion to make it a


759
00:20:49,786 --> 00:20:53,366
little bit smoother-looking.


760
00:20:53,366 --> 00:20:55,356
Lastly, we want to work with


761
00:20:55,396 --> 00:20:57,546
behavior rather than animation.


762
00:20:58,226 --> 00:20:59,226
You know, things in the real


763
00:20:59,226 --> 00:21:00,836
world are always in a state of


764
00:21:00,836 --> 00:21:02,006
dynamic motion, and they're


765
00:21:02,006 --> 00:21:03,516
always being influenced by you.


766
00:21:03,886 --> 00:21:05,316
They don't really work like


767
00:21:05,356 --> 00:21:06,886
animations in the animation


768
00:21:06,936 --> 00:21:07,366
sense, right?


769
00:21:07,366 --> 00:21:09,336
There's no animation curve


770
00:21:09,336 --> 00:21:10,786
prescribed by real life.


771
00:21:11,406 --> 00:21:12,256
So, we want to think about


772
00:21:12,256 --> 00:21:13,816
animation and behavior more as a


773
00:21:13,866 --> 00:21:15,216
conversation between you and the


774
00:21:15,216 --> 00:21:15,626
object.


775
00:21:15,956 --> 00:21:17,376
Not prescribed by the interface.


776
00:21:17,956 --> 00:21:20,226
So, to move away from static


777
00:21:20,296 --> 00:21:21,436
things transitioning into


778
00:21:21,436 --> 00:21:22,926
animated things, instead think


779
00:21:22,956 --> 00:21:23,806
about behavior.


780
00:21:24,506 --> 00:21:26,206
So, Nathan's about to dive deep


781
00:21:26,206 --> 00:21:26,826
into this one.


782
00:21:27,186 --> 00:21:28,546
But, here's a quick example.


783
00:21:29,186 --> 00:21:33,036
So, in Photos, there's less mass


784
00:21:33,036 --> 00:21:36,256
on the photos, because it's


785
00:21:36,826 --> 00:21:38,586
conceptually lighter.


786
00:21:38,716 --> 00:21:40,596
But, then when you swipe apps,


787
00:21:40,766 --> 00:21:42,386
there's more mass on the apps.


788
00:21:42,386 --> 00:21:44,366
It's conceptually heavier, so we


789
00:21:44,366 --> 00:21:45,936
give more mass to the system.


790
00:21:48,516 --> 00:21:54,696
[ Applause ]


791
00:21:55,196 --> 00:21:56,366
So, that's a little bit about


792
00:21:56,476 --> 00:21:58,606
how to design interfaces that


793
00:21:58,736 --> 00:22:01,606
think and work like us.


794
00:22:02,876 --> 00:22:04,906
In-- it starts with response.


795
00:22:05,496 --> 00:22:06,586
To make things feel connected to


796
00:22:06,616 --> 00:22:08,546
you, and to accommodate the way


797
00:22:08,546 --> 00:22:09,876
our minds are constantly in


798
00:22:09,876 --> 00:22:10,286
motion.


799
00:22:11,156 --> 00:22:12,986
To maintain spatial consistency,


800
00:22:13,246 --> 00:22:15,236
to reinforce a consistent sense


801
00:22:15,236 --> 00:22:17,286
of space, and symmetric


802
00:22:17,286 --> 00:22:18,626
transitions within that space.


803
00:22:19,466 --> 00:22:21,136
And, to hint in the direction of


804
00:22:21,136 --> 00:22:21,646
the gesture.


805
00:22:22,046 --> 00:22:23,526
To play into our prediction of


806
00:22:23,526 --> 00:22:24,036
the future.


807
00:22:24,156 --> 00:22:26,586
And, to maintain lightweight


808
00:22:26,586 --> 00:22:28,286
interactions, but amplify their


809
00:22:28,286 --> 00:22:28,686
output.


810
00:22:29,536 --> 00:22:31,286
To get that satisfying response,


811
00:22:31,366 --> 00:22:32,196
while still keeping the


812
00:22:32,196 --> 00:22:33,386
interaction airy and


813
00:22:33,386 --> 00:22:33,836
lightweight.


814
00:22:34,506 --> 00:22:38,036
And, to have soft boundaries and


815
00:22:38,036 --> 00:22:39,076
edges to the interface.


816
00:22:39,516 --> 00:22:40,816
That interface is always


817
00:22:40,936 --> 00:22:42,066
gracefully responding to you,


818
00:22:42,066 --> 00:22:43,356
even when you hit an edge, or


819
00:22:43,356 --> 00:22:44,696
transition from tracking one


820
00:22:44,696 --> 00:22:45,726
thing to tracking the other.


821
00:22:46,446 --> 00:22:49,456
And, to design smooth dynamic


822
00:22:49,486 --> 00:22:51,646
behavior that works in concert


823
00:22:51,646 --> 00:22:51,976
with you.


824
00:22:52,566 --> 00:22:57,516
So, that's some principles for


825
00:22:57,516 --> 00:22:58,366
how to approach building


826
00:22:58,366 --> 00:22:59,656
interfaces that feel like an


827
00:22:59,806 --> 00:23:00,936
extension of our minds.


828
00:23:01,846 --> 00:23:02,736
So, let's dive in a little


829
00:23:02,786 --> 00:23:03,136
deeper.


830
00:23:03,136 --> 00:23:04,096
I'm going to turn it over to


831
00:23:04,096 --> 00:23:05,396
Nathan de Vries, my colleague,


832
00:23:05,756 --> 00:23:07,616
to design motion-- to talk about


833
00:23:07,616 --> 00:23:09,006
designing motion in a way that


834
00:23:09,056 --> 00:23:10,566
feels connected to motion, to


835
00:23:10,566 --> 00:23:12,346
the motion of both you and the


836
00:23:12,346 --> 00:23:12,976
natural world.


837
00:23:13,516 --> 00:23:22,006
[ Applause ]


838
00:23:22,506 --> 00:23:23,036
>> Thanks, Chan.


839
00:23:24,016 --> 00:23:24,686
Hi everyone.


840
00:23:24,736 --> 00:23:26,866
My name's Nathan, and I'm super


841
00:23:26,866 --> 00:23:28,406
excited to be here today to talk


842
00:23:28,406 --> 00:23:29,796
to you about designing with


843
00:23:29,866 --> 00:23:30,806
dynamic motion.


844
00:23:32,196 --> 00:23:34,666
So, as Chan mentioned, our minds


845
00:23:34,666 --> 00:23:36,326
and our bodies are constantly in


846
00:23:36,326 --> 00:23:37,276
a state of change.


847
00:23:37,396 --> 00:23:38,636
The world around us is in a


848
00:23:38,636 --> 00:23:39,556
state of change.


849
00:23:40,046 --> 00:23:42,366
And, this introduces this


850
00:23:42,366 --> 00:23:44,566
expectation that our interfaces


851
00:23:44,756 --> 00:23:46,396
behave the same way, as they


852
00:23:46,396 --> 00:23:48,466
become more tactile, it shifts


853
00:23:48,466 --> 00:23:50,766
our expectations to be much


854
00:23:50,766 --> 00:23:51,676
higher fidelity.


855
00:23:53,026 --> 00:23:54,686
Now, one way we've used motion


856
00:23:54,686 --> 00:23:56,806
in interfaces is through timed


857
00:23:56,806 --> 00:23:57,576
animations.


858
00:23:58,286 --> 00:23:59,366
A button is tapped on the


859
00:23:59,366 --> 00:24:01,746
screen, and the reins are, kind


860
00:24:01,746 --> 00:24:03,406
of, handed over to the designer.


861
00:24:04,256 --> 00:24:06,016
And, their job is to craft these


862
00:24:06,066 --> 00:24:08,206
perfect frames of animation


863
00:24:08,206 --> 00:24:09,076
through time.


864
00:24:09,656 --> 00:24:11,816
And, once that animation is


865
00:24:11,816 --> 00:24:13,306
complete, the controls are


866
00:24:13,306 --> 00:24:14,706
handed back to the person using


867
00:24:14,706 --> 00:24:16,316
the interface, for them to


868
00:24:16,316 --> 00:24:17,466
continue interacting.


869
00:24:18,336 --> 00:24:19,536
So, you can kind of think of


870
00:24:19,536 --> 00:24:21,286
animation and interaction as


871
00:24:21,356 --> 00:24:23,716
being-- as moving linearly


872
00:24:23,716 --> 00:24:24,836
through time in this, kind of,


873
00:24:24,886 --> 00:24:28,006
call and response pattern.


874
00:24:28,166 --> 00:24:30,056
In a fluid interface, the


875
00:24:30,056 --> 00:24:31,556
dynamic nature of the person


876
00:24:31,656 --> 00:24:33,026
using the interface kind of


877
00:24:33,026 --> 00:24:35,046
shifts control over time away


878
00:24:35,046 --> 00:24:36,146
from us as designers.


879
00:24:37,196 --> 00:24:39,016
And, instead, our role is to


880
00:24:39,016 --> 00:24:42,186
design how the motion behaves in


881
00:24:42,186 --> 00:24:43,686
concert with an interaction.


882
00:24:44,366 --> 00:24:46,676
And, we do this through these


883
00:24:46,676 --> 00:24:49,016
continuous dynamic behaviors


884
00:24:49,346 --> 00:24:50,536
that are always running, that


885
00:24:50,536 --> 00:24:51,646
are always active.


886
00:24:52,206 --> 00:24:55,016
So, it's these dynamic behaviors


887
00:24:55,056 --> 00:24:57,156
that I'm going to, really focus


888
00:24:57,156 --> 00:24:57,676
on today.


889
00:24:58,236 --> 00:25:00,746
First of all, we're going to


890
00:25:00,816 --> 00:25:02,756
talk about seamless motion.


891
00:25:03,476 --> 00:25:06,226
And, it's this element of motion


892
00:25:06,226 --> 00:25:07,486
that makes it feel like the


893
00:25:07,486 --> 00:25:09,056
dynamic motion is an extension


894
00:25:09,056 --> 00:25:09,656
of yourself.


895
00:25:11,076 --> 00:25:11,896
Then, we're going to take a look


896
00:25:11,896 --> 00:25:12,386
at character.


897
00:25:12,386 --> 00:25:14,806
How, even without timing curves,


898
00:25:14,806 --> 00:25:16,196
and timed animations, we can


899
00:25:16,196 --> 00:25:17,726
introduce the concept of


900
00:25:17,876 --> 00:25:19,836
playfulness, or character, or


901
00:25:19,956 --> 00:25:22,566
texture to motion in your


902
00:25:22,566 --> 00:25:23,206
interfaces.


903
00:25:24,696 --> 00:25:26,196
And finally, we'll look at how


904
00:25:26,196 --> 00:25:27,816
motion itself gives us some


905
00:25:27,906 --> 00:25:29,916
clues about what people intend


906
00:25:29,996 --> 00:25:32,126
to do with your interface.


907
00:25:32,366 --> 00:25:33,456
How we can resolve some


908
00:25:33,456 --> 00:25:35,176
uncertainty about what a gesture


909
00:25:35,176 --> 00:25:36,796
is trying to do by really


910
00:25:36,796 --> 00:25:38,816
looking at the motion of the


911
00:25:38,816 --> 00:25:39,206
gesture.


912
00:25:39,906 --> 00:25:44,206
So, to kick things off, let's


913
00:25:44,296 --> 00:25:45,516
look at seamless motion.


914
00:25:45,916 --> 00:25:47,076
What do I mean by seamless


915
00:25:47,106 --> 00:25:47,466
motion?


916
00:25:48,696 --> 00:25:49,866
So, let's look at an example


917
00:25:49,866 --> 00:25:51,116
that I think we can all


918
00:25:51,936 --> 00:25:53,496
familiarize with.


919
00:25:54,236 --> 00:25:56,086
So, here we have a car, and it's


920
00:25:56,266 --> 00:25:57,686
cruising along at a constant


921
00:25:57,686 --> 00:25:58,086
speed.


922
00:25:58,776 --> 00:25:59,636
And then, the brakes are


923
00:25:59,636 --> 00:26:01,336
applied, slowing it down to a


924
00:26:01,336 --> 00:26:02,126
complete stop.


925
00:26:02,126 --> 00:26:05,636
Let's look at it again, but this


926
00:26:05,756 --> 00:26:07,756
time we'll plot out the position


927
00:26:07,756 --> 00:26:08,946
of the car over time.


928
00:26:09,466 --> 00:26:12,826
So, at the very start of this


929
00:26:12,826 --> 00:26:14,186
curve it's, kind of, straight,


930
00:26:14,236 --> 00:26:15,816
and pointing up to the right.


931
00:26:16,176 --> 00:26:17,376
And, this shows that the car's


932
00:26:17,376 --> 00:26:19,056
position is moving at a constant


933
00:26:19,056 --> 00:26:20,906
rate, it's kind of unchanging.


934
00:26:21,706 --> 00:26:22,626
But then, you'll notice the


935
00:26:22,626 --> 00:26:24,356
curve starts to bend, to


936
00:26:24,546 --> 00:26:27,406
smoothly curve away from this


937
00:26:27,406 --> 00:26:28,206
straight line.


938
00:26:28,496 --> 00:26:29,696
And, this is the brakes being


939
00:26:29,696 --> 00:26:30,166
applied.


940
00:26:30,406 --> 00:26:32,016
The car is decelerating from


941
00:26:32,016 --> 00:26:33,346
friction being introduced.


942
00:26:34,336 --> 00:26:35,796
And, by the end of the curve,


943
00:26:35,796 --> 00:26:36,986
the curve is completely flat,


944
00:26:37,056 --> 00:26:38,206
horizontal, showing that the


945
00:26:38,206 --> 00:26:40,106
position is now unchanging.


946
00:26:40,676 --> 00:26:41,676
That the car is stopped.


947
00:26:42,386 --> 00:26:45,916
So, this position curve is


948
00:26:46,006 --> 00:26:47,726
visualizing essentially what we


949
00:26:47,766 --> 00:26:49,236
call seamless motion.


950
00:26:49,236 --> 00:26:51,446
The line is completely unbroken,


951
00:26:52,286 --> 00:26:53,676
and there are no sudden changes


952
00:26:53,676 --> 00:26:54,426
in direction.


953
00:26:55,916 --> 00:26:57,376
So, it's smooth and it's


954
00:26:57,376 --> 00:26:57,916
seamless.


955
00:26:58,426 --> 00:27:00,136
Even when, actually, new dynamic


956
00:27:00,196 --> 00:27:01,626
behaviors are being introduced


957
00:27:01,626 --> 00:27:02,816
to the motion of the car, like a


958
00:27:02,816 --> 00:27:04,316
brake, which is applying


959
00:27:04,316 --> 00:27:06,866
friction to the car.


960
00:27:08,346 --> 00:27:09,536
And, even when the car comes to


961
00:27:09,536 --> 00:27:11,396
a complete stop, you'll notice


962
00:27:11,396 --> 00:27:13,266
that the curve is completely


963
00:27:13,266 --> 00:27:13,656
smooth.


964
00:27:13,656 --> 00:27:15,016
There's this indiscernible


965
00:27:15,336 --> 00:27:16,126
quality to it.


966
00:27:16,126 --> 00:27:17,436
You can't tell when the car


967
00:27:17,476 --> 00:27:18,486
precisely stopped.


968
00:27:18,926 --> 00:27:21,936
So, why am I talking about cars?


969
00:27:21,936 --> 00:27:23,806
This is a talk about fluid


970
00:27:23,806 --> 00:27:24,666
interfaces, right?


971
00:27:25,866 --> 00:27:28,056
So, we feel like the


972
00:27:28,056 --> 00:27:29,596
characteristics of the physical


973
00:27:29,596 --> 00:27:31,556
world make for great behaviors.


974
00:27:32,636 --> 00:27:34,256
Everyone in this room finds the


975
00:27:34,326 --> 00:27:36,786
car example so simple because we


976
00:27:36,786 --> 00:27:38,276
have a shared understanding, or


977
00:27:38,276 --> 00:27:40,486
a shared intuition for how an


978
00:27:40,486 --> 00:27:42,206
object like a car moves through


979
00:27:42,206 --> 00:27:42,676
the world.


980
00:27:43,966 --> 00:27:44,906
And, this makes us a great


981
00:27:44,906 --> 00:27:47,086
reference point.


982
00:27:47,276 --> 00:27:48,186
Now, I don't mean that we need


983
00:27:48,186 --> 00:27:49,736
to build perfect physical


984
00:27:49,806 --> 00:27:51,516
simulations of cars that


985
00:27:51,516 --> 00:27:53,086
literally drive our interface.


986
00:27:53,616 --> 00:27:55,476
But, we can draw on the motion


987
00:27:55,556 --> 00:27:57,406
of a car, of objects that we


988
00:27:57,576 --> 00:27:58,896
throw or move around in the


989
00:27:58,896 --> 00:28:01,636
physical world around us and use


990
00:28:01,636 --> 00:28:02,676
them in our own dynamic


991
00:28:02,726 --> 00:28:04,986
behaviors to make their motion


992
00:28:04,986 --> 00:28:07,466
feel familiar, or relatable, or


993
00:28:07,466 --> 00:28:09,086
even believable, which is the


994
00:28:09,086 --> 00:28:11,756
most important thing.


995
00:28:11,986 --> 00:28:13,666
Now, this idea of referencing


996
00:28:13,666 --> 00:28:15,646
the physical world in dynamic


997
00:28:15,696 --> 00:28:17,906
behaviors has been in the iPhone


998
00:28:17,906 --> 00:28:19,046
since the very beginning with


999
00:28:19,236 --> 00:28:19,846
scrolling.


1000
00:28:21,016 --> 00:28:22,766
A child can pick up an iPhone


1001
00:28:22,766 --> 00:28:24,156
and scroll to their favorite app


1002
00:28:24,156 --> 00:28:25,936
on the Home screen, just as


1003
00:28:25,936 --> 00:28:27,376
easily as they can push a toy


1004
00:28:27,376 --> 00:28:30,666
car across the floor.


1005
00:28:30,926 --> 00:28:32,716
So, what are some key, kind of,


1006
00:28:32,796 --> 00:28:34,556
characteristics of this


1007
00:28:34,556 --> 00:28:36,116
scrolling, dynamic behavior that


1008
00:28:36,116 --> 00:28:36,606
we have?


1009
00:28:37,646 --> 00:28:39,376
Well, firstly it's tapping into


1010
00:28:39,376 --> 00:28:41,236
that intuition, that shared


1011
00:28:41,236 --> 00:28:42,756
understanding that we all have


1012
00:28:43,336 --> 00:28:45,276
for objects moving around in the


1013
00:28:45,276 --> 00:28:45,706
world.


1014
00:28:45,706 --> 00:28:47,256
And, our influence on those


1015
00:28:47,256 --> 00:28:47,866
objects.


1016
00:28:49,296 --> 00:28:51,366
The motion of the content is


1017
00:28:51,686 --> 00:28:53,786
perfectly seamless, so while I'm


1018
00:28:53,786 --> 00:28:55,086
interacting with it, while I'm


1019
00:28:55,086 --> 00:28:57,306
dragging the content around, my


1020
00:28:57,396 --> 00:28:59,096
body is providing the fluidity


1021
00:28:59,096 --> 00:29:00,776
of the movement, because my body


1022
00:29:00,776 --> 00:29:01,386
is fluid.


1023
00:29:02,476 --> 00:29:03,766
But, as soon as I let go of the


1024
00:29:03,766 --> 00:29:06,926
content, it seamlessly coasts to


1025
00:29:06,926 --> 00:29:07,716
a stop.


1026
00:29:08,046 --> 00:29:09,346
So, we're kind of maintaining


1027
00:29:09,346 --> 00:29:11,146
the momentum of the effort being


1028
00:29:11,146 --> 00:29:12,896
put into the interface.


1029
00:29:14,496 --> 00:29:15,896
The amount of friction that's


1030
00:29:15,956 --> 00:29:17,966
being used for scrolling is


1031
00:29:18,066 --> 00:29:19,806
consistent, which makes it


1032
00:29:19,876 --> 00:29:21,576
predictable, and very easy to


1033
00:29:21,606 --> 00:29:22,026
master.


1034
00:29:23,636 --> 00:29:25,956
And finally, the content comes


1035
00:29:25,986 --> 00:29:28,096
to an imperceptible stop, kind


1036
00:29:28,096 --> 00:29:29,246
of like the car, not really


1037
00:29:29,246 --> 00:29:31,186
knowing precisely when it came


1038
00:29:31,186 --> 00:29:31,696
to a stop.


1039
00:29:32,566 --> 00:29:34,016
And, we feel that this distinct


1040
00:29:34,516 --> 00:29:36,366
lack of an ending kind of


1041
00:29:36,366 --> 00:29:38,446
reinforces this idea that the


1042
00:29:38,446 --> 00:29:39,966
content is always moving, and


1043
00:29:39,966 --> 00:29:42,066
always able to move, so while


1044
00:29:42,066 --> 00:29:43,226
content is scrolling, it makes


1045
00:29:43,276 --> 00:29:44,866
it feel like you can just put


1046
00:29:44,866 --> 00:29:46,366
your finger down again, and


1047
00:29:46,466 --> 00:29:47,346
continue scrolling.


1048
00:29:47,346 --> 00:29:48,226
You don't have to wait for


1049
00:29:48,226 --> 00:29:49,166
anything to finish.


1050
00:29:49,746 --> 00:29:53,186
So, there are innumerable


1051
00:29:53,186 --> 00:29:55,116
characteristics of the physical


1052
00:29:55,116 --> 00:29:56,756
world that would make for great


1053
00:29:56,756 --> 00:29:57,406
behaviors.


1054
00:29:58,136 --> 00:29:59,296
We don't have time to talk about


1055
00:29:59,296 --> 00:30:01,086
them all, but I'd like to focus


1056
00:30:01,086 --> 00:30:02,346
on this next one, because we


1057
00:30:02,346 --> 00:30:04,276
personally find it incredibly


1058
00:30:04,276 --> 00:30:05,886
indispensable in our own design


1059
00:30:05,886 --> 00:30:05,976
work.


1060
00:30:08,076 --> 00:30:10,116
So, materials like this


1061
00:30:10,826 --> 00:30:12,626
beautiful flower here, the


1062
00:30:12,626 --> 00:30:14,386
natural fibers of this flower


1063
00:30:15,136 --> 00:30:17,106
have this organic characteristic


1064
00:30:17,186 --> 00:30:18,546
called elasticity.


1065
00:30:20,046 --> 00:30:21,926
And, elasticity is this tendency


1066
00:30:21,926 --> 00:30:23,776
for a material to gracefully


1067
00:30:23,776 --> 00:30:26,526
return into a resting state once


1068
00:30:26,526 --> 00:30:28,036
stress or strain is removed.


1069
00:30:29,646 --> 00:30:31,766
Our own bodies are incredibly


1070
00:30:31,766 --> 00:30:32,286
elastic.


1071
00:30:33,216 --> 00:30:34,746
Now, we're capable of running


1072
00:30:35,196 --> 00:30:37,626
incredibly long distances, not


1073
00:30:37,626 --> 00:30:38,956
because of the strength of our


1074
00:30:38,956 --> 00:30:40,646
muscles, but because of their


1075
00:30:40,646 --> 00:30:41,786
ability to relax.


1076
00:30:43,296 --> 00:30:44,596
It's their elasticity that's


1077
00:30:44,656 --> 00:30:45,156
doing this.


1078
00:30:46,296 --> 00:30:47,726
So, our muscles contract and


1079
00:30:47,726 --> 00:30:49,256
relax once stress and strain is


1080
00:30:49,256 --> 00:30:49,786
removed.


1081
00:30:49,896 --> 00:30:51,116
And, this is how we conserve


1082
00:30:51,116 --> 00:30:51,556
energy.


1083
00:30:51,776 --> 00:30:53,856
Makes us feel natural and


1084
00:30:54,576 --> 00:30:54,806
organic.


1085
00:30:55,456 --> 00:30:58,476
The same elasticity is used in


1086
00:30:58,686 --> 00:30:59,206
iPhone 10.


1087
00:30:59,966 --> 00:31:01,546
Tap an icon on the Home screen,


1088
00:31:01,936 --> 00:31:03,836
and an elastic behavior is


1089
00:31:03,836 --> 00:31:05,156
pulling the app towards you.


1090
00:31:05,986 --> 00:31:07,626
Bring it exactly where you want


1091
00:31:07,626 --> 00:31:08,076
it to be.


1092
00:31:08,136 --> 00:31:09,566
And, when you swipe from the


1093
00:31:09,566 --> 00:31:12,046
bottom, the app is placed back


1094
00:31:12,046 --> 00:31:13,176
on the Home screen in its


1095
00:31:13,176 --> 00:31:14,136
perfect position.


1096
00:31:14,686 --> 00:31:18,326
We also use elasticity in


1097
00:31:18,326 --> 00:31:18,966
scrolling.


1098
00:31:19,366 --> 00:31:20,706
So, if I scroll too far and


1099
00:31:20,706 --> 00:31:21,966
rubberband, like Chan was


1100
00:31:21,966 --> 00:31:23,996
talking about, when you let go,


1101
00:31:23,996 --> 00:31:26,736
the content uses elasticity to


1102
00:31:26,856 --> 00:31:29,256
pull back within the boundaries,


1103
00:31:29,256 --> 00:31:30,496
helping you get into this


1104
00:31:30,576 --> 00:31:32,466
resting position, ready for the


1105
00:31:32,466 --> 00:31:33,656
next time you want to scroll.


1106
00:31:33,726 --> 00:31:37,126
So, let's dig in a little deeper


1107
00:31:37,126 --> 00:31:39,596
on how this elasticity works


1108
00:31:39,726 --> 00:31:40,636
behind the scenes.


1109
00:31:41,266 --> 00:31:44,466
You can think of the scrolling


1110
00:31:44,466 --> 00:31:48,306
content as a ball attached to a


1111
00:31:49,456 --> 00:31:49,606
spring.


1112
00:31:49,786 --> 00:31:51,276
On one end of the spring is the


1113
00:31:51,416 --> 00:31:52,246
current value.


1114
00:31:52,326 --> 00:31:55,006
This is where the content is on


1115
00:31:55,006 --> 00:31:55,626
the display.


1116
00:31:56,616 --> 00:31:58,316
And, the other end of the spring


1117
00:31:58,316 --> 00:32:00,146
is where the content wants to go


1118
00:32:00,146 --> 00:32:01,596
because of its elasticity.


1119
00:32:01,746 --> 00:32:02,616
So, you've got this spring


1120
00:32:02,616 --> 00:32:04,226
that's pulling the current value


1121
00:32:04,836 --> 00:32:05,896
towards the target.


1122
00:32:06,136 --> 00:32:08,276
Its behavior is influencing the


1123
00:32:08,276 --> 00:32:09,376
position of the content.


1124
00:32:11,176 --> 00:32:13,126
Now, the spring is essentially


1125
00:32:13,126 --> 00:32:14,456
pulling that current value


1126
00:32:14,586 --> 00:32:15,596
towards the target.


1127
00:32:16,636 --> 00:32:18,016
And, what's interesting about a


1128
00:32:18,016 --> 00:32:19,116
spring is, it does this


1129
00:32:19,246 --> 00:32:19,986
seamlessly.


1130
00:32:19,986 --> 00:32:21,396
This seamlessness is, kind of,


1131
00:32:21,556 --> 00:32:23,756
built in to the behavior.


1132
00:32:25,056 --> 00:32:26,256
And, this is what makes them


1133
00:32:26,256 --> 00:32:28,356
such versatile tools for doing


1134
00:32:28,356 --> 00:32:30,176
fluid interface design.


1135
00:32:30,926 --> 00:32:32,426
Is that you, kind of, get this


1136
00:32:32,426 --> 00:32:33,196
stuff for free.


1137
00:32:33,536 --> 00:32:35,086
It's baked in to the behavior


1138
00:32:35,086 --> 00:32:35,476
itself.


1139
00:32:35,626 --> 00:32:40,326
So, we love this behavior of a


1140
00:32:40,326 --> 00:32:41,876
value moving towards a target.


1141
00:32:41,876 --> 00:32:43,766
We can just tell the ball where


1142
00:32:43,766 --> 00:32:45,126
to go, and we'll get this


1143
00:32:45,246 --> 00:32:47,696
seamless motion of the ball


1144
00:32:47,696 --> 00:32:48,896
moving towards the target.


1145
00:32:48,896 --> 00:32:50,506
But, we want a little bit more


1146
00:32:50,506 --> 00:32:52,446
control over how fast it moves.


1147
00:32:53,016 --> 00:32:54,736
And, whether it overshoots.


1148
00:32:55,236 --> 00:32:55,986
So, how do we do that?


1149
00:32:57,166 --> 00:32:58,326
Well, we could give the ball a


1150
00:32:58,326 --> 00:33:00,046
little more mass, like make it


1151
00:33:00,106 --> 00:33:01,266
bigger, or make it heavier.


1152
00:33:02,296 --> 00:33:03,796
And, if we do that, then it


1153
00:33:04,236 --> 00:33:05,776
changes the inertia of the ball,


1154
00:33:06,106 --> 00:33:07,656
or its willingness to want to


1155
00:33:07,696 --> 00:33:08,536
start moving.


1156
00:33:09,116 --> 00:33:10,956
Or, maybe its unwillingness to


1157
00:33:10,956 --> 00:33:12,126
want to stop moving.


1158
00:33:12,616 --> 00:33:13,746
And, you end up with this little


1159
00:33:13,746 --> 00:33:16,526
overshoot that happens.


1160
00:33:16,716 --> 00:33:17,786
Another property that we could


1161
00:33:17,786 --> 00:33:19,166
change is the stiffness of the


1162
00:33:19,166 --> 00:33:20,886
spring, or the tensile strength


1163
00:33:20,886 --> 00:33:21,566
of the spring.


1164
00:33:22,206 --> 00:33:23,066
And, what this does, is it


1165
00:33:23,066 --> 00:33:24,696
affects the force that's being


1166
00:33:24,696 --> 00:33:26,726
applied to the ball, changing


1167
00:33:26,726 --> 00:33:28,106
how quickly it moves towards the


1168
00:33:28,106 --> 00:33:28,526
target.


1169
00:33:29,156 --> 00:33:31,786
And, finally, much like the car,


1170
00:33:31,786 --> 00:33:34,506
and the braking of a car, we can


1171
00:33:34,646 --> 00:33:36,156
change the damping, or the


1172
00:33:36,226 --> 00:33:37,936
friction, of the surface that


1173
00:33:37,936 --> 00:33:39,076
the ball is sitting on.


1174
00:33:39,696 --> 00:33:40,876
And, this will act as, kind of,


1175
00:33:40,876 --> 00:33:42,626
a brake that slows the ball down


1176
00:33:42,626 --> 00:33:44,776
over time, also affecting our


1177
00:33:44,776 --> 00:33:46,046
ability to overshoot.


1178
00:33:46,596 --> 00:33:50,576
So, the physical properties of a


1179
00:33:50,576 --> 00:33:51,946
ball and a spring are, kind of,


1180
00:33:52,176 --> 00:33:53,686
physics class material, right?


1181
00:33:53,686 --> 00:33:54,666
It's super useful in a


1182
00:33:54,706 --> 00:33:55,996
scientific context, but we've


1183
00:33:55,996 --> 00:33:57,946
found that in our own design


1184
00:33:57,946 --> 00:33:59,196
work they can be a little bit


1185
00:33:59,196 --> 00:34:01,336
overwhelming or unwieldy for


1186
00:34:01,636 --> 00:34:02,996
controlling the behavior of


1187
00:34:03,416 --> 00:34:04,426
objects on the screen.


1188
00:34:05,876 --> 00:34:07,376
So, we think our design tool


1189
00:34:07,376 --> 00:34:09,366
should have a bit of a human


1190
00:34:09,366 --> 00:34:10,346
interface to them.


1191
00:34:10,786 --> 00:34:11,806
That they need to reflect the


1192
00:34:11,806 --> 00:34:12,906
needs of the designer that's


1193
00:34:13,056 --> 00:34:13,746
using the tool.


1194
00:34:14,886 --> 00:34:16,255
And so, how do we go about that?


1195
00:34:16,255 --> 00:34:17,246
How do we simplify these


1196
00:34:17,246 --> 00:34:18,806
properties down to make it more


1197
00:34:19,815 --> 00:34:20,626
design friendly?


1198
00:34:22,516 --> 00:34:24,396
So, mass stiffness and damping


1199
00:34:24,396 --> 00:34:25,815
will remain behind the scenes,


1200
00:34:25,815 --> 00:34:26,606
they're the fundamental


1201
00:34:26,606 --> 00:34:28,016
properties of the spring system


1202
00:34:28,016 --> 00:34:28,696
that we're using.


1203
00:34:28,696 --> 00:34:30,226
But, we can simplify our


1204
00:34:30,226 --> 00:34:31,775
interface down to two simple


1205
00:34:31,775 --> 00:34:32,266
properties.


1206
00:34:33,446 --> 00:34:35,176
The first is damping, which


1207
00:34:35,176 --> 00:34:36,835
controls how much or little


1208
00:34:36,886 --> 00:34:39,306
overshoot there is from 100%


1209
00:34:39,306 --> 00:34:40,565
damping, where there will be no


1210
00:34:40,565 --> 00:34:43,136
overshoot to 0% damping where


1211
00:34:43,136 --> 00:34:44,545
the spring would oscillate


1212
00:34:44,545 --> 00:34:45,246
indefinitely.


1213
00:34:47,126 --> 00:34:50,485
The second property is response.


1214
00:34:52,025 --> 00:34:53,565
And, this controls how quickly


1215
00:34:53,565 --> 00:34:55,186
the value will try and get to


1216
00:34:55,186 --> 00:34:55,735
the target.


1217
00:34:56,956 --> 00:34:58,296
And, you might notice that I


1218
00:34:58,296 --> 00:34:59,956
haven't used the word duration.


1219
00:35:00,446 --> 00:35:02,506
We actually like to avoid using


1220
00:35:02,506 --> 00:35:03,986
duration when we're describing


1221
00:35:03,986 --> 00:35:05,456
elastic behaviors, because it


1222
00:35:05,456 --> 00:35:07,356
reinforces this concept of


1223
00:35:07,726 --> 00:35:09,506
constant dynamic change.


1224
00:35:09,756 --> 00:35:11,656
The spring is always moving, and


1225
00:35:11,656 --> 00:35:12,866
it's ready to move somewhere


1226
00:35:12,866 --> 00:35:13,066
else.


1227
00:35:14,346 --> 00:35:15,466
Now, the technical terms for


1228
00:35:15,466 --> 00:35:17,016
these two properties are damping


1229
00:35:17,016 --> 00:35:18,836
ratio and frequency response.


1230
00:35:18,876 --> 00:35:20,426
So, if you'd like to use these


1231
00:35:20,426 --> 00:35:21,666
for your own design work, you


1232
00:35:21,666 --> 00:35:23,396
can look up those terms, and


1233
00:35:23,456 --> 00:35:25,866
you'll find easy ways to convert


1234
00:35:27,436 --> 00:35:27,546
them.


1235
00:35:27,776 --> 00:35:29,836
So, we now have these two simple


1236
00:35:29,906 --> 00:35:31,116
properties for controlling


1237
00:35:31,116 --> 00:35:32,086
elastic behaviors.


1238
00:35:32,806 --> 00:35:35,166
But, there's still an infinite


1239
00:35:35,166 --> 00:35:36,666
number of possibilities that we


1240
00:35:36,666 --> 00:35:38,106
can have with these curves.


1241
00:35:38,106 --> 00:35:39,836
Like, there's just hundreds,


1242
00:35:39,866 --> 00:35:41,176
thousands, millions of different


1243
00:35:41,176 --> 00:35:42,756
ways we can configure those two


1244
00:35:42,756 --> 00:35:44,916
simple properties and get very


1245
00:35:44,916 --> 00:35:45,826
different behavior.


1246
00:35:47,106 --> 00:35:49,636
How do we use these to craft a


1247
00:35:49,636 --> 00:35:50,786
character in our app?


1248
00:35:50,786 --> 00:35:53,996
To control the feel of our app?


1249
00:35:54,246 --> 00:35:56,286
Well, first and foremost, we


1250
00:35:56,286 --> 00:35:57,516
need to remember that our


1251
00:35:57,516 --> 00:35:59,246
devices are tools.


1252
00:36:00,326 --> 00:36:02,716
And, we need to respect that


1253
00:36:03,276 --> 00:36:04,736
tools, when they're used with


1254
00:36:04,736 --> 00:36:08,186
purpose, require us to not be in


1255
00:36:08,186 --> 00:36:09,836
the way, not get in the way with


1256
00:36:09,836 --> 00:36:12,146
introducing unnecessary motion.


1257
00:36:13,366 --> 00:36:14,496
So, we think that you should


1258
00:36:14,496 --> 00:36:15,386
start simple.


1259
00:36:16,166 --> 00:36:17,266
A spring doesn't need to


1260
00:36:17,316 --> 00:36:18,146
overshoot.


1261
00:36:18,346 --> 00:36:19,746
You don't need to use springy


1262
00:36:19,746 --> 00:36:20,246
springs.


1263
00:36:21,576 --> 00:36:23,426
So, we recommend starting with


1264
00:36:23,426 --> 00:36:26,146
100% damping, or no overshoot


1265
00:36:26,386 --> 00:36:27,446
when you're tuning elastic


1266
00:36:27,486 --> 00:36:28,026
behaviors.


1267
00:36:28,776 --> 00:36:30,056
That way you'll get smooth,


1268
00:36:30,286 --> 00:36:32,266
graceful, and seamless motion


1269
00:36:32,806 --> 00:36:33,996
that doesn't distract from the


1270
00:36:34,086 --> 00:36:34,916
task at hand.


1271
00:36:35,176 --> 00:36:36,446
Like, just quickly shooting off


1272
00:36:36,446 --> 00:36:36,986
an email.


1273
00:36:39,156 --> 00:36:40,836
So, when is it appropriate to


1274
00:36:40,836 --> 00:36:41,766
use bounciness?


1275
00:36:42,306 --> 00:36:43,346
There's got to be a time when


1276
00:36:43,346 --> 00:36:44,196
that's appropriate, right?


1277
00:36:44,936 --> 00:36:46,526
Well, we feel if the gesture


1278
00:36:46,526 --> 00:36:48,796
that's driving the motion itself


1279
00:36:48,796 --> 00:36:50,886
has momentum, then you should


1280
00:36:50,886 --> 00:36:52,056
reward that momentum with a


1281
00:36:52,056 --> 00:36:53,066
little bit of overshoot.


1282
00:36:54,256 --> 00:36:56,496
Put another way, if a gesture


1283
00:36:56,616 --> 00:36:58,126
has momentum, and there isn't


1284
00:36:58,126 --> 00:37:00,116
any overshoot, it can often feel


1285
00:37:00,116 --> 00:37:03,506
broken or unsatisfying to have


1286
00:37:03,566 --> 00:37:05,236
the motion follow that gesture.


1287
00:37:05,786 --> 00:37:08,796
An example of where we use this


1288
00:37:08,796 --> 00:37:09,696
is in the Music app.


1289
00:37:10,516 --> 00:37:12,186
So, the Music app has a small


1290
00:37:12,186 --> 00:37:14,076
minibar representing Now Playing


1291
00:37:14,076 --> 00:37:15,796
at the bottom of the screen, and


1292
00:37:15,796 --> 00:37:18,076
you can tap the bar to show Now


1293
00:37:18,076 --> 00:37:18,456
Playing.


1294
00:37:18,946 --> 00:37:22,306
Because the tap doesn't have any


1295
00:37:22,356 --> 00:37:24,316
momentum in the direction of the


1296
00:37:24,356 --> 00:37:26,286
presentation of Now Playing, we


1297
00:37:26,286 --> 00:37:28,606
use 100% damping to make sure it


1298
00:37:28,636 --> 00:37:29,486
doesn't overshoot.


1299
00:37:30,126 --> 00:37:32,656
But, if you swipe to dismiss Now


1300
00:37:32,736 --> 00:37:34,506
Playing, there is momentum in


1301
00:37:34,506 --> 00:37:36,566
the direction of the dismissal,


1302
00:37:37,016 --> 00:37:39,166
and so we use 80% damping to


1303
00:37:39,166 --> 00:37:40,426
have a little bit of bounce and


1304
00:37:40,426 --> 00:37:42,306
squish, making the gesture a lot


1305
00:37:42,306 --> 00:37:43,126
more satisfying.


1306
00:37:46,416 --> 00:37:48,766
Bounciness can also be used as a


1307
00:37:48,766 --> 00:37:50,696
utility, as a functional means.


1308
00:37:51,476 --> 00:37:53,106
It can serve as a helpful hint


1309
00:37:53,176 --> 00:37:54,576
that there's something more


1310
00:37:54,666 --> 00:37:57,166
below the surface.


1311
00:37:57,306 --> 00:37:59,056
With iPhone 10, we introduced


1312
00:37:59,056 --> 00:38:01,136
two buttons to the cover sheet


1313
00:38:01,776 --> 00:38:03,056
for turning on the Flashlight,


1314
00:38:03,056 --> 00:38:04,476
and for launching the Camera.


1315
00:38:06,336 --> 00:38:08,246
To avoid accidentally turning on


1316
00:38:08,246 --> 00:38:09,906
the flashlight by mistake, we


1317
00:38:09,906 --> 00:38:11,416
require a more intentional


1318
00:38:11,416 --> 00:38:13,336
gesture to activate the


1319
00:38:13,336 --> 00:38:13,976
Flashlight.


1320
00:38:14,726 --> 00:38:16,006
But, if you don't know that


1321
00:38:16,006 --> 00:38:17,066
there's a more intentional


1322
00:38:17,066 --> 00:38:18,906
gesture needed to activate it,


1323
00:38:19,696 --> 00:38:22,466
when you tap on the button, it


1324
00:38:22,466 --> 00:38:24,206
responds with bounciness.


1325
00:38:24,386 --> 00:38:25,926
Has this kind of playful feel to


1326
00:38:25,926 --> 00:38:26,196
it.


1327
00:38:27,116 --> 00:38:28,756
And, that hint is teaching you


1328
00:38:28,756 --> 00:38:29,776
not only that the button is


1329
00:38:29,836 --> 00:38:30,466
working, but that it's


1330
00:38:30,466 --> 00:38:31,466
responding to you.


1331
00:38:31,636 --> 00:38:33,146
But, it's kind of teaching you


1332
00:38:33,146 --> 00:38:34,836
that if you press just a little


1333
00:38:34,836 --> 00:38:37,426
bit more firmly, it'll activate.


1334
00:38:37,426 --> 00:38:38,236
It's like teaching you.


1335
00:38:38,236 --> 00:38:39,446
It's hinting in the direction of


1336
00:38:39,446 --> 00:38:40,086
the motion.


1337
00:38:40,696 --> 00:38:42,936
So, bounciness can be used to


1338
00:38:42,936 --> 00:38:47,396
indicate this kind of thing.


1339
00:38:47,576 --> 00:38:48,706
Now, so far we've been talking


1340
00:38:48,706 --> 00:38:50,806
about using motion to move


1341
00:38:50,866 --> 00:38:52,286
things around, or to change


1342
00:38:52,286 --> 00:38:54,096
their scale, change their visual


1343
00:38:54,096 --> 00:38:55,596
representation on the screen.


1344
00:38:56,556 --> 00:38:58,666
But, we perceive motion in many


1345
00:38:58,666 --> 00:38:59,386
different ways.


1346
00:39:00,226 --> 00:39:01,746
Through changes in light and


1347
00:39:01,776 --> 00:39:04,056
color, or texture and feel.


1348
00:39:04,866 --> 00:39:05,756
Or even sound.


1349
00:39:06,036 --> 00:39:07,876
Many other sensations that we--


1350
00:39:08,386 --> 00:39:11,656
our senses can detect.


1351
00:39:11,766 --> 00:39:13,036
We feel this is an opportunity


1352
00:39:13,036 --> 00:39:15,556
to go even further, go beyond


1353
00:39:15,666 --> 00:39:17,626
motion, when you're tuning the


1354
00:39:17,626 --> 00:39:18,886
character of your app.


1355
00:39:19,946 --> 00:39:21,606
By combining dynamic behaviors


1356
00:39:21,696 --> 00:39:23,256
for motion with dynamic


1357
00:39:23,256 --> 00:39:25,766
behaviors for sound and haptics,


1358
00:39:26,346 --> 00:39:28,256
you can really fundamentally


1359
00:39:28,256 --> 00:39:29,706
change the way an interface


1360
00:39:29,706 --> 00:39:29,976
feels.


1361
00:39:35,216 --> 00:39:37,746
So, when you see, and you hear,


1362
00:39:38,256 --> 00:39:40,036
and you feel the result of the


1363
00:39:40,076 --> 00:39:42,506
gesture, it can transform what


1364
00:39:42,506 --> 00:39:43,986
was otherwise just a scrolling


1365
00:39:43,986 --> 00:39:45,316
behavior into something that


1366
00:39:45,316 --> 00:39:48,056
feels like a very tactile


1367
00:39:48,056 --> 00:39:48,746
interface.


1368
00:39:49,356 --> 00:39:53,206
Now, there's one final note I


1369
00:39:53,206 --> 00:39:54,556
want you thinking about when


1370
00:39:54,556 --> 00:39:56,006
you're crafting the character of


1371
00:39:56,006 --> 00:39:56,396
your app.


1372
00:39:57,336 --> 00:39:59,086
And, that's that it feels


1373
00:39:59,086 --> 00:40:00,746
cohesive, that you're staying in


1374
00:40:00,746 --> 00:40:00,976
character.


1375
00:40:01,186 --> 00:40:03,506
Now, what does this mean?


1376
00:40:04,816 --> 00:40:07,156
So, even within your app, or


1377
00:40:07,156 --> 00:40:08,726
across the whole system, it's


1378
00:40:08,726 --> 00:40:10,056
important that you treat


1379
00:40:10,056 --> 00:40:11,456
behaviors as a family of


1380
00:40:11,526 --> 00:40:12,136
behaviors.


1381
00:40:13,166 --> 00:40:15,206
So, in scrolling for example,


1382
00:40:15,706 --> 00:40:17,936
when I scroll down a page, using


1383
00:40:17,936 --> 00:40:19,946
a scrolling behavior, and then I


1384
00:40:19,946 --> 00:40:21,946
tap the status bar to scroll to


1385
00:40:21,946 --> 00:40:23,196
the stop of the page, using an


1386
00:40:23,196 --> 00:40:24,176
elastic behavior.


1387
00:40:24,946 --> 00:40:27,316
In both cases, the page itself


1388
00:40:27,356 --> 00:40:28,626
feels like it's moving in the


1389
00:40:28,626 --> 00:40:30,766
same way, that it has the same


1390
00:40:30,766 --> 00:40:32,086
behavior, even though two


1391
00:40:32,086 --> 00:40:33,506
different types of behaviors are


1392
00:40:33,506 --> 00:40:34,496
driving its motion, are


1393
00:40:34,546 --> 00:40:35,726
influencing its motion.


1394
00:40:37,036 --> 00:40:38,276
Now, this extends beyond a


1395
00:40:38,336 --> 00:40:39,876
single interaction like


1396
00:40:39,986 --> 00:40:40,576
scrolling.


1397
00:40:41,376 --> 00:40:42,716
It applies to your whole app.


1398
00:40:43,236 --> 00:40:45,046
If you have a playful app, then


1399
00:40:45,046 --> 00:40:46,016
you should embrace that


1400
00:40:46,016 --> 00:40:47,676
character, and make your whole


1401
00:40:47,676 --> 00:40:49,666
app feel the same way.


1402
00:40:49,876 --> 00:40:50,996
So, that people-- once they


1403
00:40:50,996 --> 00:40:52,506
learn one behavior of your app,


1404
00:40:53,066 --> 00:40:53,936
they can pick up another


1405
00:40:53,936 --> 00:40:55,666
behavior really easily, because


1406
00:40:55,666 --> 00:40:57,146
we learn through repetition.


1407
00:40:57,566 --> 00:40:59,636
And, what we learn bleeds over


1408
00:40:59,636 --> 00:41:00,896
into other behaviors.


1409
00:41:06,386 --> 00:41:07,396
So, next up, I'd like to talk a


1410
00:41:07,396 --> 00:41:10,156
little bit about aligning


1411
00:41:10,186 --> 00:41:12,466
motion, or dynamic motion, with


1412
00:41:12,506 --> 00:41:12,976
intent.


1413
00:41:17,216 --> 00:41:19,146
So, for a discrete interaction


1414
00:41:19,146 --> 00:41:21,906
like a button, it's pretty clear


1415
00:41:21,906 --> 00:41:23,406
what the intent of the gesture


1416
00:41:23,406 --> 00:41:23,756
is.


1417
00:41:23,966 --> 00:41:26,086
Right? You've got three distinct


1418
00:41:26,226 --> 00:41:28,036
visual representations on screen


1419
00:41:28,036 --> 00:41:28,276
here.


1420
00:41:29,226 --> 00:41:31,256
And, when I tap one of them, the


1421
00:41:31,256 --> 00:41:32,196
outcome is clear.


1422
00:41:33,856 --> 00:41:35,096
But, with a gesture like a


1423
00:41:35,216 --> 00:41:37,796
swipe, the intent is less


1424
00:41:37,866 --> 00:41:39,246
immediately clear.


1425
00:41:39,686 --> 00:41:41,456
You could say that the intent is


1426
00:41:41,456 --> 00:41:43,126
almost encoded in the motion of


1427
00:41:43,126 --> 00:41:45,176
the gesture, and so it's our


1428
00:41:45,176 --> 00:41:47,736
job, our role, to interpret what


1429
00:41:47,736 --> 00:41:50,006
the motion means to decide what


1430
00:41:50,226 --> 00:41:51,786
we should do with it.


1431
00:41:52,276 --> 00:41:53,696
Let's look at an example.


1432
00:41:55,086 --> 00:41:56,546
So, let's say I made a FaceTime


1433
00:41:56,546 --> 00:41:58,046
call, a one-on-one FaceTime


1434
00:41:58,046 --> 00:42:01,216
call, and in FaceTime, we have a


1435
00:42:01,356 --> 00:42:03,036
small video representation of


1436
00:42:03,036 --> 00:42:04,816
yourself in the corner of the


1437
00:42:04,816 --> 00:42:05,296
screen.


1438
00:42:05,396 --> 00:42:07,276
And, this is so I can see what


1439
00:42:07,276 --> 00:42:08,256
the person on the other end


1440
00:42:08,256 --> 00:42:08,596
sees.


1441
00:42:09,766 --> 00:42:11,086
We call this floating video the


1442
00:42:11,236 --> 00:42:13,036
PIP, short for picture in


1443
00:42:13,036 --> 00:42:13,306
picture.


1444
00:42:14,886 --> 00:42:16,466
Now, we give the PIP a floating


1445
00:42:16,466 --> 00:42:18,146
appearance to make it clear that


1446
00:42:18,146 --> 00:42:19,166
it can be moved.


1447
00:42:20,026 --> 00:42:22,166
And, it can be moved to any


1448
00:42:22,166 --> 00:42:23,566
corner of the screen, with just


1449
00:42:23,566 --> 00:42:25,846
a really lightweight flick.


1450
00:42:27,636 --> 00:42:29,136
So, if we compare that to the


1451
00:42:29,296 --> 00:42:31,676
Play, Pause, and Skip buttons,


1452
00:42:32,646 --> 00:42:33,546
like, what's the difference


1453
00:42:33,586 --> 00:42:33,826
here?


1454
00:42:35,266 --> 00:42:36,116
So, in this case, there's


1455
00:42:36,116 --> 00:42:38,796
actually four invisible regions


1456
00:42:39,076 --> 00:42:39,976
that we're dealing with.


1457
00:42:40,656 --> 00:42:42,126
No longer do we have these three


1458
00:42:42,126 --> 00:42:44,196
distinct visual representations


1459
00:42:44,196 --> 00:42:45,476
on screen that are being tapped.


1460
00:42:46,066 --> 00:42:47,176
We kind of have to look at the


1461
00:42:47,176 --> 00:42:49,436
motion that's happening through


1462
00:42:49,436 --> 00:42:52,446
the gesture, and intuit what was


1463
00:42:52,446 --> 00:42:52,786
meant.


1464
00:42:52,786 --> 00:42:54,266
Which corner did we intend to go


1465
00:42:54,266 --> 00:42:54,516
to?


1466
00:42:55,686 --> 00:42:57,236
Now, we call these regions of


1467
00:42:57,236 --> 00:42:59,246
the screen endpoints of the


1468
00:42:59,246 --> 00:42:59,676
gesture.


1469
00:43:00,506 --> 00:43:02,816
And, when the PIP is thrown, our


1470
00:43:02,816 --> 00:43:04,986
goal is to find the correct


1471
00:43:04,986 --> 00:43:06,086
endpoint, the one that was


1472
00:43:06,086 --> 00:43:06,746
intended.


1473
00:43:07,426 --> 00:43:09,726
And, we call this aligning the


1474
00:43:10,216 --> 00:43:11,896
endpoint with the intent of the


1475
00:43:11,896 --> 00:43:12,306
gesture.


1476
00:43:12,986 --> 00:43:17,446
So, one approach for this is to


1477
00:43:17,596 --> 00:43:18,936
keep track of the closest


1478
00:43:18,936 --> 00:43:21,366
endpoint as I'm dragging the


1479
00:43:21,936 --> 00:43:22,046
PIP.


1480
00:43:22,226 --> 00:43:24,056
Now, this kind of works.


1481
00:43:24,056 --> 00:43:25,286
I can move the PIP to the other


1482
00:43:25,286 --> 00:43:29,086
corner of the screen, but it


1483
00:43:29,086 --> 00:43:30,366
starts to break down as soon as


1484
00:43:30,366 --> 00:43:32,886
I move the PIP a little bit


1485
00:43:33,446 --> 00:43:33,596
further.


1486
00:43:33,776 --> 00:43:35,796
Now, I actually need to drag the


1487
00:43:35,886 --> 00:43:38,506
PIP quite far, like past halfway


1488
00:43:38,676 --> 00:43:39,516
over the screen.


1489
00:43:39,636 --> 00:43:40,496
Pretty close to the other


1490
00:43:40,496 --> 00:43:40,836
corner.


1491
00:43:40,836 --> 00:43:42,606
So, it's not really magnifying


1492
00:43:42,606 --> 00:43:43,046
my input.


1493
00:43:43,046 --> 00:43:44,656
It's not really working for me.


1494
00:43:44,656 --> 00:43:47,056
And, if I try and flick the PIP,


1495
00:43:48,196 --> 00:43:49,566
it kind of goes back to the


1496
00:43:49,566 --> 00:43:50,586
nearest corner, which isn't


1497
00:43:50,586 --> 00:43:52,036
necessarily what I expected.


1498
00:43:52,146 --> 00:43:54,726
So, the issue here is that we're


1499
00:43:54,816 --> 00:43:56,206
only looking at position.


1500
00:43:56,366 --> 00:43:58,756
We're completely ignoring the


1501
00:43:58,756 --> 00:44:00,386
momentum of the PIP, and its


1502
00:44:00,386 --> 00:44:02,236
velocity when it's thrown.


1503
00:44:03,446 --> 00:44:05,486
So, how can we incorporate


1504
00:44:06,306 --> 00:44:08,696
momentum into deciding which


1505
00:44:08,696 --> 00:44:09,646
endpoint we go to?


1506
00:44:10,256 --> 00:44:13,396
So, to think about this, I think


1507
00:44:13,396 --> 00:44:15,346
we can set aside endpoints for a


1508
00:44:15,346 --> 00:44:16,896
moment, and take a step back.


1509
00:44:17,816 --> 00:44:20,986
And, just really simplify the


1510
00:44:22,096 --> 00:44:22,326
problem.


1511
00:44:22,386 --> 00:44:23,686
Ultimately, what I'm trying to


1512
00:44:23,736 --> 00:44:26,186
do here is move content around


1513
00:44:26,186 --> 00:44:27,026
on the screen.


1514
00:44:27,796 --> 00:44:29,206
And, I actually already have a


1515
00:44:29,206 --> 00:44:31,126
lot of muscle memory for doing


1516
00:44:31,436 --> 00:44:35,466
exactly that with scrolling.


1517
00:44:35,876 --> 00:44:37,186
So, why don't we use that here?


1518
00:44:38,616 --> 00:44:40,326
We use scrolling behaviors all


1519
00:44:40,326 --> 00:44:41,496
the time, so we have this


1520
00:44:41,496 --> 00:44:44,596
natural intuition for how far


1521
00:44:44,596 --> 00:44:45,936
content goes when I scroll.


1522
00:44:47,366 --> 00:44:50,096
So, here you can see that when I


1523
00:44:50,096 --> 00:44:52,706
scroll the PIP instead, it


1524
00:44:52,706 --> 00:44:54,586
coasts along, and it slows down,


1525
00:44:54,866 --> 00:44:57,536
using this familiar deceleration


1526
00:44:58,176 --> 00:44:59,206
that we're familiar with from


1527
00:44:59,206 --> 00:44:59,796
scrolling.


1528
00:45:01,026 --> 00:45:02,896
And, basically by taking


1529
00:45:02,896 --> 00:45:05,066
advantage of that here, we're


1530
00:45:05,146 --> 00:45:06,906
reinforcing things that people


1531
00:45:06,906 --> 00:45:07,876
have learned elsewhere.


1532
00:45:08,146 --> 00:45:10,786
That the behavior is just doing


1533
00:45:10,786 --> 00:45:15,426
what was expected of the system.


1534
00:45:15,566 --> 00:45:17,756
Now this new, hypothetical,


1535
00:45:18,126 --> 00:45:21,296
imaginary PIP position is not


1536
00:45:21,296 --> 00:45:21,566
real.


1537
00:45:21,566 --> 00:45:22,756
We're not going to show the PIP


1538
00:45:22,756 --> 00:45:24,056
go here in the interface.


1539
00:45:24,266 --> 00:45:25,196
This is what we call a


1540
00:45:25,246 --> 00:45:25,826
projection.


1541
00:45:27,136 --> 00:45:28,656
So, we've taken the velocity of


1542
00:45:28,656 --> 00:45:30,526
the PIP, when it was thrown.


1543
00:45:30,936 --> 00:45:32,066
We've, kind of, mixed in the


1544
00:45:32,066 --> 00:45:34,336
deceleration rate, and we end up


1545
00:45:34,336 --> 00:45:35,926
with this projected position


1546
00:45:36,196 --> 00:45:38,586
where it could go if we scrolled


1547
00:45:39,416 --> 00:45:40,936
it there.


1548
00:45:41,166 --> 00:45:42,666
And so, now instead of finding


1549
00:45:42,666 --> 00:45:44,346
the nearest endpoint to the PIP


1550
00:45:45,056 --> 00:45:47,096
when we throw, we can calculate


1551
00:45:47,096 --> 00:45:49,466
its projected position and move


1552
00:45:49,466 --> 00:45:50,946
there instead.


1553
00:45:51,476 --> 00:45:53,346
So now, when I swipe from one


1554
00:45:53,346 --> 00:45:55,036
corner of the screen to another


1555
00:45:55,036 --> 00:45:56,216
with just a lightweight flick,


1556
00:45:56,306 --> 00:45:58,216
it goes to the endpoint that I


1557
00:45:58,216 --> 00:45:58,956
expected.


1558
00:46:03,176 --> 00:46:05,306
So, this idea of projecting


1559
00:46:05,306 --> 00:46:08,346
momentum is incredibly useful.


1560
00:46:08,766 --> 00:46:10,406
And, we think its super


1561
00:46:10,406 --> 00:46:10,806
important.


1562
00:46:10,806 --> 00:46:12,136
I'd like to share some code for


1563
00:46:12,136 --> 00:46:13,536
doing this with you, so that you


1564
00:46:13,536 --> 00:46:16,196
can do this in your own apps.


1565
00:46:16,336 --> 00:46:17,596
So, this function will take a


1566
00:46:17,596 --> 00:46:19,366
velocity like the PIP's position


1567
00:46:19,366 --> 00:46:22,086
velocity, and deceleration rate,


1568
00:46:22,956 --> 00:46:24,966
and it'll give you the value


1569
00:46:24,996 --> 00:46:26,086
that you could use as an


1570
00:46:26,336 --> 00:46:28,206
endpoint for dynamic behavior.


1571
00:46:29,076 --> 00:46:29,876
It's pretty simple.


1572
00:46:30,556 --> 00:46:33,056
If we look at my FaceTime


1573
00:46:33,056 --> 00:46:35,606
example of the pan gesture


1574
00:46:35,606 --> 00:46:38,556
ending code, you can see that


1575
00:46:38,556 --> 00:46:39,186
I'm just using the


1576
00:46:39,186 --> 00:46:41,326
UIScrollView.DecelerationRate.


1577
00:46:41,506 --> 00:46:43,106
So, we're leaning on that


1578
00:46:43,106 --> 00:46:44,556
familiarity people have with


1579
00:46:44,556 --> 00:46:46,186
scrolling and how far content


1580
00:46:46,186 --> 00:46:47,106
will go when scrolled.


1581
00:46:48,256 --> 00:46:50,966
And, I'm using that with my


1582
00:46:51,176 --> 00:46:51,846
projection.


1583
00:46:52,226 --> 00:46:53,536
So, I take the velocity of the


1584
00:46:53,606 --> 00:46:55,546
PIP and the deceleration rate,


1585
00:46:55,546 --> 00:46:57,376
and I create that imaginary PIP


1586
00:46:57,416 --> 00:46:57,976
position.


1587
00:46:58,546 --> 00:47:01,336
And, it's this imaginary,


1588
00:47:01,336 --> 00:47:03,196
projected position that I then


1589
00:47:03,196 --> 00:47:04,676
use as the nearest corner


1590
00:47:04,676 --> 00:47:05,246
position.


1591
00:47:06,246 --> 00:47:07,616
And, I send my PIP there, by


1592
00:47:07,616 --> 00:47:09,166
retargeting it.


1593
00:47:11,236 --> 00:47:13,406
So, this idea of using


1594
00:47:13,836 --> 00:47:17,156
projection to find out the


1595
00:47:17,216 --> 00:47:19,266
endpoint of a position, is


1596
00:47:19,416 --> 00:47:21,026
incredibly useful for things


1597
00:47:21,026 --> 00:47:22,366
being dragged or swiped, where


1598
00:47:22,366 --> 00:47:23,676
you really need to respect the


1599
00:47:23,676 --> 00:47:24,856
momentum of the gesture.


1600
00:47:26,396 --> 00:47:27,516
But, this projection function


1601
00:47:27,516 --> 00:47:29,706
isn't just useful for positions,


1602
00:47:29,706 --> 00:47:31,756
you can also use it for scales,


1603
00:47:32,636 --> 00:47:34,126
or even for rotations.


1604
00:47:35,026 --> 00:47:36,506
Or, even combinations of the


1605
00:47:36,506 --> 00:47:36,876
two.


1606
00:47:37,866 --> 00:47:39,496
It's a really versatile tool


1607
00:47:39,496 --> 00:47:40,696
that you should really be using


1608
00:47:40,696 --> 00:47:41,796
to make sure that you're


1609
00:47:41,836 --> 00:47:43,866
respecting the momentum of a


1610
00:47:43,866 --> 00:47:45,856
gesture, and making it feel like


1611
00:47:46,036 --> 00:47:47,326
the dynamic motion in your app


1612
00:47:47,766 --> 00:47:49,186
is an extension of yourself.


1613
00:47:51,086 --> 00:47:53,776
So, that's designing with


1614
00:47:53,906 --> 00:47:54,496
motion.


1615
00:47:54,976 --> 00:47:55,936
Dynamic motion.


1616
00:47:56,896 --> 00:47:58,916
Behaviors should continuously


1617
00:47:58,916 --> 00:48:00,986
and seamlessly work in concert


1618
00:48:01,106 --> 00:48:02,946
with interactions.


1619
00:48:05,276 --> 00:48:06,976
We should be leaning on that


1620
00:48:06,976 --> 00:48:08,646
shared intuition that we have


1621
00:48:08,646 --> 00:48:10,086
for the physical world around


1622
00:48:10,086 --> 00:48:10,406
us.


1623
00:48:10,896 --> 00:48:11,916
The things that we learn as


1624
00:48:11,916 --> 00:48:13,316
children about how objects


1625
00:48:13,366 --> 00:48:14,766
behave and move in the physical


1626
00:48:14,766 --> 00:48:17,506
world, apply just as readily to


1627
00:48:17,906 --> 00:48:19,236
our dynamic interfaces.


1628
00:48:21,076 --> 00:48:22,246
You should remember that


1629
00:48:22,246 --> 00:48:23,416
bounciness needs to be


1630
00:48:23,476 --> 00:48:24,146
purposeful.


1631
00:48:24,856 --> 00:48:26,346
Think about why you're using it,


1632
00:48:26,456 --> 00:48:27,666
and whether it's appropriate.


1633
00:48:28,336 --> 00:48:29,686
And, make sure that as you add


1634
00:48:30,206 --> 00:48:32,856
character, and texture, that


1635
00:48:32,856 --> 00:48:33,726
you're balancing it with


1636
00:48:33,766 --> 00:48:34,326
utility.


1637
00:48:35,066 --> 00:48:38,096
And finally, remember to project


1638
00:48:38,216 --> 00:48:38,866
momentum.


1639
00:48:39,226 --> 00:48:40,836
Don't just use position, use all


1640
00:48:40,836 --> 00:48:41,826
of the information that's at


1641
00:48:41,826 --> 00:48:43,586
your disposal to ensure that


1642
00:48:43,586 --> 00:48:45,576
motion is aligned with the


1643
00:48:45,576 --> 00:48:47,166
intent of where people actually


1644
00:48:47,166 --> 00:48:47,616
want to go.


1645
00:48:48,166 --> 00:48:51,376
And then, take them there.


1646
00:48:51,376 --> 00:48:52,356
So, to talk a little bit more


1647
00:48:52,356 --> 00:48:54,126
about how to fluidly respond to


1648
00:48:54,276 --> 00:48:56,146
gestures and interactions, I'd


1649
00:48:56,146 --> 00:48:57,466
like to introduce my colleague,


1650
00:48:57,466 --> 00:48:58,626
Marcos, to the stage.


1651
00:48:59,006 --> 00:48:59,956
Thanks for having me, everyone.


1652
00:49:00,516 --> 00:49:05,086
[ Applause ]


1653
00:49:05,586 --> 00:49:06,066
>> That was great.


1654
00:49:06,836 --> 00:49:07,906
Thanks, Nathan.


1655
00:49:13,446 --> 00:49:14,176
Hi everyone.


1656
00:49:15,006 --> 00:49:15,936
My name is Marcos.


1657
00:49:16,726 --> 00:49:18,816
So far, we've seen how important


1658
00:49:18,816 --> 00:49:20,266
fluidity is when designing


1659
00:49:20,266 --> 00:49:20,956
interfaces.


1660
00:49:21,786 --> 00:49:24,096
And, a lot of that comes from


1661
00:49:24,096 --> 00:49:25,366
your interaction with a device.


1662
00:49:26,776 --> 00:49:28,366
So, in this section, we're going


1663
00:49:28,366 --> 00:49:29,996
to show you how touches on the


1664
00:49:29,996 --> 00:49:32,136
screen become gestures in your


1665
00:49:32,136 --> 00:49:32,566
apps.


1666
00:49:33,036 --> 00:49:34,316
And, how to design these


1667
00:49:34,366 --> 00:49:36,106
gestures to capture all the


1668
00:49:36,106 --> 00:49:37,746
expression and intent into your


1669
00:49:37,746 --> 00:49:38,476
interfaces.


1670
00:49:42,356 --> 00:49:43,206
So, we're going to start by


1671
00:49:43,206 --> 00:49:44,656
looking at the design of some


1672
00:49:44,656 --> 00:49:46,366
core gestures like taps and


1673
00:49:46,366 --> 00:49:46,936
swipes.


1674
00:49:47,966 --> 00:49:48,956
Then, we'll look at some


1675
00:49:48,956 --> 00:49:50,586
interaction principles, that you


1676
00:49:50,586 --> 00:49:51,606
should follow when designing


1677
00:49:51,606 --> 00:49:52,956
gestures for your interface.


1678
00:49:54,176 --> 00:49:55,686
And then, we'll see how to deal


1679
00:49:55,686 --> 00:49:57,386
with multiple gestures, and how


1680
00:49:57,386 --> 00:49:59,376
to combine them into your apps.


1681
00:50:00,116 --> 00:50:01,956
We're going to start by looking


1682
00:50:01,956 --> 00:50:03,196
at a gesture that is apparently


1683
00:50:03,196 --> 00:50:04,926
very simple, a tap.


1684
00:50:05,786 --> 00:50:07,006
You would think that something--


1685
00:50:07,006 --> 00:50:08,866
you would think that a tap is


1686
00:50:08,866 --> 00:50:09,786
something that doesn't have to


1687
00:50:09,786 --> 00:50:11,396
be designed, but you'll see how


1688
00:50:11,396 --> 00:50:13,006
its behavior has more nuances


1689
00:50:13,006 --> 00:50:13,766
than it seems.


1690
00:50:14,896 --> 00:50:16,926
In our example, we're going to


1691
00:50:16,926 --> 00:50:18,856
look at tapping on a button, in


1692
00:50:18,856 --> 00:50:19,916
this case, on the Calculator


1693
00:50:19,916 --> 00:50:19,983
app.


1694
00:50:24,476 --> 00:50:26,216
The first thing to remember is


1695
00:50:26,216 --> 00:50:27,276
that the button should highlight


1696
00:50:27,276 --> 00:50:29,176
immediately when I touch down on


1697
00:50:29,176 --> 00:50:29,346
it.


1698
00:50:30,226 --> 00:50:31,246
This shows me the button is


1699
00:50:31,246 --> 00:50:32,916
working, and that the system is


1700
00:50:32,916 --> 00:50:34,026
reacting to my gesture.


1701
00:50:34,766 --> 00:50:36,526
But, we shouldn't confirm the


1702
00:50:36,576 --> 00:50:39,006
tap until my touch goes up.


1703
00:50:39,976 --> 00:50:41,866
The next thing to remember is to


1704
00:50:41,866 --> 00:50:43,456
create an extra margin around


1705
00:50:43,456 --> 00:50:44,006
the tap area.


1706
00:50:44,636 --> 00:50:46,516
This extra margin will make our


1707
00:50:46,516 --> 00:50:48,506
taps more comfortable, and avoid


1708
00:50:48,506 --> 00:50:50,336
accidental cancellations if a


1709
00:50:50,336 --> 00:50:51,906
touch moves during interaction.


1710
00:50:52,376 --> 00:50:54,746
And, like my colleague Chan was


1711
00:50:54,746 --> 00:50:56,276
saying, I should be able to


1712
00:50:56,276 --> 00:50:57,386
change my mind after I've


1713
00:50:57,456 --> 00:50:58,566
touched down on the button.


1714
00:50:59,066 --> 00:51:00,686
So, if I drag my finger outside


1715
00:51:00,686 --> 00:51:02,976
the tap area, and lift it, I can


1716
00:51:02,976 --> 00:51:04,346
cancel the tap.


1717
00:51:05,056 --> 00:51:07,266
The same way, if I swipe it back


1718
00:51:07,266 --> 00:51:08,686
on the button, the button should


1719
00:51:08,686 --> 00:51:09,896
highlight again, and let me


1720
00:51:09,896 --> 00:51:11,226
confirm the tap.


1721
00:51:12,956 --> 00:51:16,066
The next gesture we're going to


1722
00:51:16,206 --> 00:51:17,756
talk about is swipe.


1723
00:51:18,666 --> 00:51:19,816
Swipes are one of the core


1724
00:51:19,856 --> 00:51:21,786
gestures of iOS, and they're


1725
00:51:21,786 --> 00:51:23,466
used for multiple actions like


1726
00:51:23,466 --> 00:51:25,316
scrolling, dragging, and paging.


1727
00:51:26,606 --> 00:51:27,826
But, no matter what you use it


1728
00:51:27,826 --> 00:51:30,006
for, or how you call it, the


1729
00:51:30,006 --> 00:51:31,506
core principles of a gesture are


1730
00:51:31,506 --> 00:51:32,106
always the same.


1731
00:51:32,106 --> 00:51:35,026
In this example, we're going to


1732
00:51:35,026 --> 00:51:36,626
use a swipe to drag this image


1733
00:51:36,626 --> 00:51:37,116
to the right.


1734
00:51:38,026 --> 00:51:39,956
So, the interaction starts the


1735
00:51:39,956 --> 00:51:40,976
moment I touch down on the image


1736
00:51:40,976 --> 00:51:41,976
with intention to drag it.


1737
00:51:46,696 --> 00:51:49,126
But, before we can be sure it's


1738
00:51:49,126 --> 00:51:50,716
a swipe, the touch has to move a


1739
00:51:50,716 --> 00:51:51,576
certain distance.


1740
00:51:52,166 --> 00:51:53,876
We learn to differentiate swipes


1741
00:51:53,876 --> 00:51:54,976
from other gestures.


1742
00:51:55,516 --> 00:51:56,956
This distance is called


1743
00:51:56,956 --> 00:51:58,866
hysteresis, and is usually 10


1744
00:51:58,866 --> 00:52:00,006
points in iOS.


1745
00:52:01,456 --> 00:52:03,266
So, once the touch reaches this


1746
00:52:03,266 --> 00:52:04,776
distance, the swipe begins.


1747
00:52:05,976 --> 00:52:07,706
This is also a good moment to


1748
00:52:07,706 --> 00:52:08,706
decide the direction of the


1749
00:52:08,706 --> 00:52:09,086
swipe.


1750
00:52:09,516 --> 00:52:11,366
If it's horizontal, or vertical


1751
00:52:11,366 --> 00:52:12,136
for instance.


1752
00:52:12,526 --> 00:52:13,796
We don't really need it for


1753
00:52:13,796 --> 00:52:15,766
example, but it's very useful in


1754
00:52:15,766 --> 00:52:16,626
some situations.


1755
00:52:16,626 --> 00:52:19,356
So, now that the swipe has been


1756
00:52:19,356 --> 00:52:20,856
detected, this is the initial


1757
00:52:20,856 --> 00:52:21,976
position of a gesture.


1758
00:52:22,816 --> 00:52:24,746
After this moment, the touch and


1759
00:52:24,746 --> 00:52:26,516
the image should stay together


1760
00:52:26,516 --> 00:52:27,686
and move as one thing.


1761
00:52:28,286 --> 00:52:29,426
We should respect the relative


1762
00:52:29,426 --> 00:52:31,106
position, and never use the


1763
00:52:31,106 --> 00:52:32,396
center of the image as the


1764
00:52:32,396 --> 00:52:33,186
dragging point.


1765
00:52:34,266 --> 00:52:35,456
During the drag, we should also


1766
00:52:35,456 --> 00:52:36,926
keep track of the position and


1767
00:52:36,926 --> 00:52:38,576
speed up the touch, so when the


1768
00:52:38,576 --> 00:52:40,136
drag is over, we don't use the


1769
00:52:40,136 --> 00:52:41,036
last position.


1770
00:52:41,406 --> 00:52:42,846
We use the history of the touch,


1771
00:52:42,966 --> 00:52:44,876
to ensure that all the motion is


1772
00:52:44,876 --> 00:52:46,436
transferred fluidly into the


1773
00:52:46,436 --> 00:52:46,896
image.


1774
00:52:50,296 --> 00:52:52,286
So, as we've seen, touch and


1775
00:52:52,316 --> 00:52:53,906
content should move together.


1776
00:52:54,436 --> 00:52:56,136
One-to-one tracking is extremely


1777
00:52:56,136 --> 00:52:56,806
important.


1778
00:52:57,406 --> 00:52:59,436
When swiping or dragging, the


1779
00:52:59,436 --> 00:53:00,696
contents should stay attached to


1780
00:53:00,696 --> 00:53:01,326
the gesture.


1781
00:53:02,566 --> 00:53:04,066
This is one of the principles of


1782
00:53:04,066 --> 00:53:04,516
iOS.


1783
00:53:05,086 --> 00:53:06,706
You enable scrolling, and makes


1784
00:53:06,706 --> 00:53:08,106
the device feel natural and


1785
00:53:08,106 --> 00:53:08,466
intuitive.


1786
00:53:08,996 --> 00:53:11,406
It's so recognizable and


1787
00:53:11,406 --> 00:53:13,196
expected that the moment the


1788
00:53:13,196 --> 00:53:14,446
touch and content stop tracking


1789
00:53:14,446 --> 00:53:16,076
one-to-one, we immediately


1790
00:53:16,076 --> 00:53:16,646
notice it.


1791
00:53:17,106 --> 00:53:18,346
And, in the case of scrolling,


1792
00:53:18,406 --> 00:53:20,106
it shows us that we've reached


1793
00:53:20,106 --> 00:53:21,836
the end of the content.


1794
00:53:22,216 --> 00:53:25,826
But, one-to-one tracking is not


1795
00:53:25,826 --> 00:53:27,106
limited to touch screens.


1796
00:53:27,686 --> 00:53:30,096
For instance, manipulating UI on


1797
00:53:30,096 --> 00:53:31,736
the Apple TV was designed around


1798
00:53:31,736 --> 00:53:32,426
this concept.


1799
00:53:33,486 --> 00:53:34,686
So, even if the touch is not


1800
00:53:34,686 --> 00:53:35,796
manipulating the content


1801
00:53:35,796 --> 00:53:37,316
directly, having a direct


1802
00:53:37,316 --> 00:53:38,736
connection between the gesture


1803
00:53:38,816 --> 00:53:40,436
and the interface puts you in


1804
00:53:40,436 --> 00:53:42,106
control of the action, and makes


1805
00:53:42,106 --> 00:53:43,246
the interaction intuitive.


1806
00:53:47,256 --> 00:53:48,776
Another core principle when


1807
00:53:48,776 --> 00:53:50,146
designing gestures, is to


1808
00:53:50,146 --> 00:53:51,366
provide continuous feedback


1809
00:53:51,366 --> 00:53:52,456
during the interaction.


1810
00:53:52,796 --> 00:53:54,176
And, this is not just limited to


1811
00:53:54,176 --> 00:53:55,166
swipes or drags.


1812
00:53:55,706 --> 00:53:57,536
It applies to all interactions.


1813
00:53:58,146 --> 00:53:59,706
So, if you look again at the


1814
00:53:59,706 --> 00:54:00,956
Flashlight button on the iPhone


1815
00:54:00,956 --> 00:54:03,296
10, the size of button changes


1816
00:54:03,626 --> 00:54:04,666
based on the pressure of my


1817
00:54:04,666 --> 00:54:05,176
touch.


1818
00:54:05,786 --> 00:54:06,426
And, this gives me a


1819
00:54:06,426 --> 00:54:07,846
confirmation of my action.


1820
00:54:08,136 --> 00:54:09,376
It shows me the system is


1821
00:54:09,376 --> 00:54:11,206
responding to my gesture, but it


1822
00:54:11,206 --> 00:54:12,946
also teaches me that pressing


1823
00:54:12,946 --> 00:54:14,706
harder will eventually turn on


1824
00:54:14,706 --> 00:54:15,306
the flashlight.


1825
00:54:15,736 --> 00:54:18,246
Another good example of


1826
00:54:18,246 --> 00:54:19,966
continuous feedback, is the


1827
00:54:19,966 --> 00:54:21,446
focus engine on the Apple TV.


1828
00:54:22,466 --> 00:54:23,606
So, the movements on the Siri


1829
00:54:23,606 --> 00:54:25,146
remote are continuously


1830
00:54:25,146 --> 00:54:26,486
represented on the screen.


1831
00:54:26,956 --> 00:54:28,596
And, they show me the item that


1832
00:54:28,596 --> 00:54:30,456
is currently selected, the


1833
00:54:30,456 --> 00:54:31,736
moment the selection is going to


1834
00:54:31,736 --> 00:54:33,666
change, and the direction the


1835
00:54:33,666 --> 00:54:37,516
selection is going to go.


1836
00:54:37,736 --> 00:54:39,286
So, having our UI respond during


1837
00:54:39,286 --> 00:54:41,176
the gesture is critical to


1838
00:54:41,176 --> 00:54:42,496
create a fluid experience.


1839
00:54:42,886 --> 00:54:44,416
For that reason, when


1840
00:54:44,416 --> 00:54:46,146
implementing your gestures, you


1841
00:54:46,146 --> 00:54:47,566
should avoid methods that are


1842
00:54:47,566 --> 00:54:48,906
only detected at the end of the


1843
00:54:48,906 --> 00:54:49,986
gesture, like


1844
00:54:49,986 --> 00:54:51,566
UISwipeGestureRecognizer.


1845
00:54:52,236 --> 00:54:53,586
And, use ones like the actual


1846
00:54:53,586 --> 00:54:54,876
touches, or other


1847
00:54:54,926 --> 00:54:56,916
gestureRecognizers that provide


1848
00:54:56,916 --> 00:54:58,306
all possible information about


1849
00:54:58,306 --> 00:54:59,466
the gesture.


1850
00:55:00,586 --> 00:55:01,846
So, not just the position, but


1851
00:55:01,846 --> 00:55:03,996
also the velocity, the pressure,


1852
00:55:04,266 --> 00:55:07,886
the size of the touch.


1853
00:55:08,096 --> 00:55:10,106
In most situations though, your


1854
00:55:10,106 --> 00:55:12,006
interfaces must respond to more


1855
00:55:12,006 --> 00:55:12,856
than one gesture.


1856
00:55:13,586 --> 00:55:14,836
As you keep adding features to


1857
00:55:14,836 --> 00:55:16,766
your apps, the complexity and


1858
00:55:16,766 --> 00:55:18,446
number of gestures increases,


1859
00:55:19,216 --> 00:55:19,296
too.


1860
00:55:19,836 --> 00:55:21,976
For instance, almost all UIs


1861
00:55:21,976 --> 00:55:23,476
that use a scroll view will have


1862
00:55:23,476 --> 00:55:25,196
other gestures like taps and


1863
00:55:25,196 --> 00:55:26,626
swipes competing with each


1864
00:55:26,626 --> 00:55:26,996
other.


1865
00:55:27,476 --> 00:55:29,116
Like in this example, I can


1866
00:55:29,116 --> 00:55:30,846
scroll the list of Contacts, or


1867
00:55:30,846 --> 00:55:32,306
freely touch on one of them to


1868
00:55:32,306 --> 00:55:33,486
preview it.


1869
00:55:34,996 --> 00:55:36,846
So, if we had to wait for the


1870
00:55:36,846 --> 00:55:39,006
final gesture, before we show


1871
00:55:39,006 --> 00:55:40,676
any feedback, we would have to


1872
00:55:40,676 --> 00:55:41,656
introduce a delay.


1873
00:55:42,276 --> 00:55:43,566
And, during that wait, the


1874
00:55:43,566 --> 00:55:44,566
interface wouldn't feel


1875
00:55:44,566 --> 00:55:45,236
responsive.


1876
00:55:45,726 --> 00:55:48,306
For that reason, we should


1877
00:55:48,306 --> 00:55:49,896
detect all possible gestures


1878
00:55:50,146 --> 00:55:50,996
from the beginning of the


1879
00:55:50,996 --> 00:55:51,536
action.


1880
00:55:52,106 --> 00:55:53,456
And, once we are confident of


1881
00:55:53,456 --> 00:55:55,286
the intention, cancel all the


1882
00:55:55,286 --> 00:55:55,976
other gestures.


1883
00:55:58,556 --> 00:55:59,856
So, if we go back to our


1884
00:55:59,856 --> 00:56:01,756
example, I start pressing that


1885
00:56:01,756 --> 00:56:03,646
contact, but I decide to scroll


1886
00:56:03,646 --> 00:56:04,166
instead.


1887
00:56:04,836 --> 00:56:06,426
And, it's at that moment that we


1888
00:56:06,426 --> 00:56:08,336
cancel the 3D touch action, and


1889
00:56:08,336 --> 00:56:09,436
transition into the right


1890
00:56:09,516 --> 00:56:09,956
gesture.


1891
00:56:14,116 --> 00:56:15,506
Sometimes, though, it's


1892
00:56:15,506 --> 00:56:17,006
inevitable to introduce delay.


1893
00:56:17,816 --> 00:56:19,496
For instance, every time we use


1894
00:56:19,496 --> 00:56:21,306
the double-tap in our UIs, all


1895
00:56:21,306 --> 00:56:22,716
normal taps will be delayed.


1896
00:56:23,596 --> 00:56:25,446
The system has to wait after the


1897
00:56:25,446 --> 00:56:27,366
tap, to see if it's a tap or a


1898
00:56:27,366 --> 00:56:27,936
double-tap.


1899
00:56:28,476 --> 00:56:32,146
In this example, since I can


1900
00:56:32,146 --> 00:56:33,576
double-tap to zoom in and out of


1901
00:56:33,726 --> 00:56:36,336
a photo, tapping to show the app


1902
00:56:36,336 --> 00:56:38,176
menu is delayed by about half a


1903
00:56:38,176 --> 00:56:38,766
second.


1904
00:56:39,826 --> 00:56:41,056
So, when designing gestures for


1905
00:56:41,056 --> 00:56:42,676
your applications, you should be


1906
00:56:42,676 --> 00:56:44,256
aware of these situations, and


1907
00:56:44,256 --> 00:56:45,516
try to avoid delays whenever


1908
00:56:45,516 --> 00:56:46,046
possible.


1909
00:56:49,216 --> 00:56:51,406
So, to summarize, we've seen how


1910
00:56:51,406 --> 00:56:53,506
to design some core gestures,


1911
00:56:53,616 --> 00:56:54,826
like taps and swipes.


1912
00:56:55,496 --> 00:56:56,636
We've seen that content and


1913
00:56:56,636 --> 00:57:00,326
touch should move one-to-one,


1914
00:57:00,536 --> 00:57:01,456
and that is one of the core


1915
00:57:01,456 --> 00:57:02,536
concepts of iOS.


1916
00:57:03,426 --> 00:57:04,286
You should also provide


1917
00:57:04,316 --> 00:57:05,836
continuous feedback during all


1918
00:57:05,836 --> 00:57:08,106
interactions, and when having


1919
00:57:08,106 --> 00:57:10,146
multiple gestures, detect them


1920
00:57:10,146 --> 00:57:11,866
in parallel from the beginning.


1921
00:57:12,416 --> 00:57:15,246
And now, I'd like to hand it


1922
00:57:15,246 --> 00:57:16,876
back to Chan, who will talk


1923
00:57:16,876 --> 00:57:18,356
about working with fluid


1924
00:57:18,356 --> 00:57:19,106
interfaces.


1925
00:57:19,456 --> 00:57:19,976
Thanks, everyone.


1926
00:57:20,516 --> 00:57:25,196
[ Applause ]


1927
00:57:25,696 --> 00:57:26,086
>> Nice job.


1928
00:57:28,446 --> 00:57:29,656
Alright, I'm back.


1929
00:57:30,776 --> 00:57:32,046
So, we just learned about how to


1930
00:57:32,046 --> 00:57:33,816
approach building interfaces


1931
00:57:34,216 --> 00:57:35,466
that feel as fluid, as


1932
00:57:35,506 --> 00:57:37,636
responsive, and as lively as we


1933
00:57:37,636 --> 00:57:37,886
are.


1934
00:57:38,746 --> 00:57:39,796
So, lets talk about some


1935
00:57:39,796 --> 00:57:41,096
considerations now that we're


1936
00:57:41,096 --> 00:57:41,926
feeling a little bit more


1937
00:57:41,926 --> 00:57:43,036
comfortable with this, for


1938
00:57:43,036 --> 00:57:44,646
working within the medium of


1939
00:57:44,676 --> 00:57:45,586
fluid interfaces.


1940
00:57:46,136 --> 00:57:47,816
And that begins with teaching.


1941
00:57:48,706 --> 00:57:50,716
So, one downside to a gestural


1942
00:57:50,716 --> 00:57:52,406
interface is that it's not


1943
00:57:52,526 --> 00:57:54,416
immediately obvious what the


1944
00:57:54,416 --> 00:57:55,476
gestures are.


1945
00:57:55,826 --> 00:57:57,266
So, we have to be friendly and


1946
00:57:57,266 --> 00:57:59,376
clever about how we bring users


1947
00:57:59,376 --> 00:58:00,476
along with us in a way that's


1948
00:58:00,476 --> 00:58:01,336
friendly and inviting.


1949
00:58:02,716 --> 00:58:04,196
And so, one way we can do that


1950
00:58:04,196 --> 00:58:05,606
is with visual cues.


1951
00:58:06,316 --> 00:58:08,136
So, the world is filled with


1952
00:58:08,136 --> 00:58:08,936
these things, right?


1953
00:58:09,726 --> 00:58:10,996
You can learn them once, and you


1954
00:58:10,996 --> 00:58:12,116
can use them everywhere.


1955
00:58:12,116 --> 00:58:12,986
They're portable.


1956
00:58:12,986 --> 00:58:15,226
And so, when you see this, you


1957
00:58:15,226 --> 00:58:16,046
know how to use it.


1958
00:58:17,686 --> 00:58:19,156
So, we've tried to establish


1959
00:58:19,156 --> 00:58:20,766
similar conventions in iOS.


1960
00:58:21,106 --> 00:58:22,146
Here's a couple examples.


1961
00:58:23,196 --> 00:58:24,396
So, if you have a scrolling list


1962
00:58:24,396 --> 00:58:25,726
of content, you can clip the


1963
00:58:25,726 --> 00:58:27,566
content off the bottom there, to


1964
00:58:27,566 --> 00:58:28,786
indicate that there's more to


1965
00:58:28,836 --> 00:58:30,596
see, that invites me to try and


1966
00:58:30,596 --> 00:58:31,666
reveal what's under there.


1967
00:58:31,706 --> 00:58:34,036
And, if we're dealing with pages


1968
00:58:34,036 --> 00:58:36,106
of content, you can use a paging


1969
00:58:36,106 --> 00:58:37,916
indicator to indicate that


1970
00:58:37,916 --> 00:58:39,226
there's multiple pages of


1971
00:58:39,226 --> 00:58:39,576
content.


1972
00:58:40,316 --> 00:58:41,676
And, for sliding panes of


1973
00:58:41,676 --> 00:58:42,636
content, you can use an


1974
00:58:42,636 --> 00:58:44,166
affordance, or a grabber handle


1975
00:58:44,166 --> 00:58:46,646
like this, to indicate that it's


1976
00:58:46,646 --> 00:58:47,776
grabbable and slidable.


1977
00:58:49,326 --> 00:58:50,926
Another technique you can use is


1978
00:58:50,926 --> 00:58:53,146
to elevate interactive elements


1979
00:58:53,146 --> 00:58:54,136
to a separate plane.


1980
00:58:54,566 --> 00:58:55,946
So, if you have an interactive


1981
00:58:55,946 --> 00:58:57,576
element, lifting it up to a


1982
00:58:57,626 --> 00:58:58,676
separate plane can help


1983
00:58:58,716 --> 00:59:00,286
distinguish it from the content.


1984
00:59:01,586 --> 00:59:03,006
So, a good example of this is


1985
00:59:03,006 --> 00:59:04,056
our on/off switch.


1986
00:59:04,496 --> 00:59:05,696
We want to indicate that the


1987
00:59:05,696 --> 00:59:07,136
knob of the switch is grabbable,


1988
00:59:07,586 --> 00:59:08,996
so we elevate it to another


1989
00:59:09,076 --> 00:59:09,396
plane.


1990
00:59:10,036 --> 00:59:11,656
This helps visually separate it,


1991
00:59:11,816 --> 00:59:13,316
and indicate its draggable


1992
00:59:13,316 --> 00:59:13,776
nature.


1993
00:59:14,696 --> 00:59:16,096
So, floating elements,


1994
00:59:16,456 --> 00:59:17,716
interactive elements like this,


1995
00:59:17,716 --> 00:59:19,406
above the interface can help


1996
00:59:19,556 --> 00:59:20,816
indicate that they're grabbable.


1997
00:59:21,506 --> 00:59:26,136
Next, we can use behavior, you


1998
00:59:26,136 --> 00:59:28,156
know, to show rather than tell


1999
00:59:28,516 --> 00:59:29,656
to use-- how to use an


2000
00:59:29,656 --> 00:59:30,136
interface.


2001
00:59:30,426 --> 00:59:32,356
So, we can reinforce a dynamic


2002
00:59:32,396 --> 00:59:33,526
behavior with a static


2003
00:59:33,526 --> 00:59:34,106
animation.


2004
00:59:35,006 --> 00:59:35,976
So, an example of this is


2005
00:59:36,006 --> 00:59:36,446
Safari.


2006
00:59:37,076 --> 00:59:39,166
In Safari, we have this x icon


2007
00:59:39,166 --> 00:59:40,456
at the top left to close the


2008
00:59:40,456 --> 00:59:41,816
tab, and when you hit that


2009
00:59:41,866 --> 00:59:43,646
button, we slide the tab left to


2010
00:59:43,646 --> 00:59:44,766
indicate it's deleted.


2011
00:59:45,596 --> 00:59:46,846
This hints to me that I can


2012
00:59:46,846 --> 00:59:48,576
slide it myself to the left.


2013
00:59:48,676 --> 00:59:50,536
And, accomplish the same action


2014
00:59:50,536 --> 00:59:52,116
of deleting the tab through a


2015
00:59:52,116 --> 00:59:52,586
gesture.


2016
00:59:53,436 --> 00:59:54,886
So, by keeping the discrete


2017
00:59:55,046 --> 00:59:56,246
animation and the gesture


2018
00:59:56,246 --> 00:59:58,786
aligned, we can use one to teach


2019
00:59:58,826 --> 01:00:00,246
the other.


2020
01:00:02,296 --> 01:00:03,196
And, there's another technique


2021
01:00:03,196 --> 01:00:04,166
we can use, which is


2022
01:00:04,566 --> 01:00:05,306
explanations.


2023
01:00:05,476 --> 01:00:07,196
This is when you explicitly tell


2024
01:00:07,196 --> 01:00:08,576
users how to use a gesture.


2025
01:00:09,666 --> 01:00:10,796
So, this is best when used


2026
01:00:10,796 --> 01:00:12,456
sparingly, but it's best when


2027
01:00:12,456 --> 01:00:14,196
you have one gesture that's used


2028
01:00:14,196 --> 01:00:15,766
repeatedly in a bunch of places,


2029
01:00:16,186 --> 01:00:18,216
and you explain it once up


2030
01:00:18,216 --> 01:00:19,246
front, and then you just keep


2031
01:00:19,286 --> 01:00:20,966
using it, and keep reinforcing


2032
01:00:20,966 --> 01:00:21,036
it.


2033
01:00:21,896 --> 01:00:23,136
Don't use it for a gesture


2034
01:00:23,136 --> 01:00:24,836
that's used only intermittently.


2035
01:00:24,836 --> 01:00:25,976
People won't remember that.


2036
01:00:26,946 --> 01:00:29,706
Now, I want to talk a little bit


2037
01:00:29,706 --> 01:00:31,786
about fun and playfulness.


2038
01:00:32,496 --> 01:00:33,606
Because this is one of the most


2039
01:00:33,606 --> 01:00:35,346
important aspects of a fluid


2040
01:00:35,346 --> 01:00:35,976
interface.


2041
01:00:36,366 --> 01:00:37,906
And, it only happens when you


2042
01:00:37,906 --> 01:00:39,076
nail everything.


2043
01:00:40,326 --> 01:00:42,196
It's a natural consequence of a


2044
01:00:42,196 --> 01:00:43,136
fluid interface.


2045
01:00:43,136 --> 01:00:44,056
It's when the interface is


2046
01:00:44,056 --> 01:00:45,656
responding instantly and


2047
01:00:45,656 --> 01:00:46,186
satisfyingly.


2048
01:00:46,506 --> 01:00:47,686
When it's redirectable and


2049
01:00:47,686 --> 01:00:48,216
forgiving.


2050
01:00:48,676 --> 01:00:49,956
When the motion and gestures are


2051
01:00:49,956 --> 01:00:50,496
smooth.


2052
01:00:50,496 --> 01:00:51,556
And, everything we just talked


2053
01:00:51,556 --> 01:00:51,816
about.


2054
01:00:52,426 --> 01:00:53,836
The interface starts to feel in


2055
01:00:53,976 --> 01:00:54,546
sync with you.


2056
01:00:55,336 --> 01:00:57,486
And, something magical happens


2057
01:00:57,486 --> 01:00:58,996
where you don't feel like you


2058
01:00:58,996 --> 01:01:00,446
need to learn the interface, you


2059
01:01:00,546 --> 01:01:01,836
feel like you're discovering the


2060
01:01:01,836 --> 01:01:02,326
interface.


2061
01:01:03,806 --> 01:01:06,016
And so, we think it's great when


2062
01:01:06,016 --> 01:01:08,026
we allow people to discover the


2063
01:01:08,026 --> 01:01:09,026
interface through play.


2064
01:01:09,026 --> 01:01:10,076
And, it doesn't even feel like


2065
01:01:10,076 --> 01:01:11,216
they're learning it, it feels


2066
01:01:11,216 --> 01:01:11,626
fun.


2067
01:01:12,876 --> 01:01:15,436
So, people love playing with


2068
01:01:15,436 --> 01:01:15,836
stuff.


2069
01:01:16,146 --> 01:01:18,176
So, we think it's great to play


2070
01:01:18,176 --> 01:01:19,936
into our natural fiddle factor.


2071
01:01:20,696 --> 01:01:22,486
You know, play is our mind's


2072
01:01:22,486 --> 01:01:24,146
internalizing the feel of an


2073
01:01:24,146 --> 01:01:24,646
interface.


2074
01:01:25,356 --> 01:01:26,306
So, it's great when we're


2075
01:01:26,306 --> 01:01:27,256
building this stuff, when we're


2076
01:01:27,256 --> 01:01:29,066
prototyping it, just to build


2077
01:01:29,066 --> 01:01:29,646
it.


2078
01:01:29,646 --> 01:01:30,736
You know, play with it yourself.


2079
01:01:30,796 --> 01:01:32,176
See how you fiddle with it.


2080
01:01:32,266 --> 01:01:33,426
Hand it to others see how they


2081
01:01:33,426 --> 01:01:33,976
play with it.


2082
01:01:34,376 --> 01:01:35,486
And, think about how you can


2083
01:01:35,486 --> 01:01:37,536
reinforce that with something


2084
01:01:37,536 --> 01:01:39,106
like an animation, or behavior,


2085
01:01:39,106 --> 01:01:39,926
an explanation.


2086
01:01:41,336 --> 01:01:43,006
And, it's surprising how far


2087
01:01:43,126 --> 01:01:45,076
play can go, and having


2088
01:01:45,076 --> 01:01:46,726
interface teach itself to


2089
01:01:46,726 --> 01:01:47,056
people.


2090
01:01:47,626 --> 01:01:51,486
Let's talk a little bit about


2091
01:01:51,486 --> 01:01:52,696
fluidity as a medium.


2092
01:01:53,216 --> 01:01:54,146
How we actually go about


2093
01:01:54,206 --> 01:01:55,056
building this stuff.


2094
01:01:55,666 --> 01:01:56,716
You know, we think interfaces


2095
01:01:56,716 --> 01:01:58,426
like this are a unique medium,


2096
01:01:58,426 --> 01:01:59,426
and it's important that we


2097
01:01:59,616 --> 01:02:00,606
approach it right.


2098
01:02:02,376 --> 01:02:04,296
So, the first thing is to design


2099
01:02:04,296 --> 01:02:05,356
the interactions to be


2100
01:02:05,396 --> 01:02:07,036
inseparable from the visuals,


2101
01:02:07,616 --> 01:02:08,936
not an afterthought.


2102
01:02:09,566 --> 01:02:11,506
The interaction design should be


2103
01:02:11,506 --> 01:02:12,776
done in concert with the


2104
01:02:12,776 --> 01:02:13,196
visuals.


2105
01:02:13,196 --> 01:02:14,166
You shouldn't be able to even


2106
01:02:14,306 --> 01:02:15,776
tell when one ends and another


2107
01:02:15,776 --> 01:02:16,226
begins.


2108
01:02:17,466 --> 01:02:18,526
And, it's really important that


2109
01:02:18,526 --> 01:02:19,926
we build demos of this stuff.


2110
01:02:19,926 --> 01:02:21,326
The interactive demo we think is


2111
01:02:21,326 --> 01:02:23,006
really worth a million static


2112
01:02:23,046 --> 01:02:23,476
designs.


2113
01:02:23,926 --> 01:02:25,766
Not just to show other people,


2114
01:02:25,996 --> 01:02:27,806
but to also understand the true


2115
01:02:27,806 --> 01:02:29,016
nature of the interface


2116
01:02:29,016 --> 01:02:29,606
yourself.


2117
01:02:30,996 --> 01:02:33,646
And, when you prototype this


2118
01:02:33,646 --> 01:02:35,806
stuff, it's so valuable for you


2119
01:02:35,806 --> 01:02:36,846
because you get to almost


2120
01:02:36,846 --> 01:02:38,466
discover the interface as you're


2121
01:02:38,506 --> 01:02:38,886
building it.


2122
01:02:39,696 --> 01:02:40,436
You know, this technique is


2123
01:02:40,436 --> 01:02:41,796
actually how we built the iPhone


2124
01:02:41,886 --> 01:02:42,566
10 interface.


2125
01:02:43,886 --> 01:02:45,016
And, it's really important


2126
01:02:45,016 --> 01:02:46,636
because it also sets a goal for


2127
01:02:46,636 --> 01:02:47,406
the implementation.


2128
01:02:47,826 --> 01:02:49,416
We're so lucky here at Apple


2129
01:02:49,416 --> 01:02:50,596
that we have this amazing


2130
01:02:50,596 --> 01:02:52,056
engineering team to build this


2131
01:02:52,056 --> 01:02:53,386
stuff, because it's really hard


2132
01:02:53,386 --> 01:02:53,826
to build.


2133
01:02:53,936 --> 01:02:56,866
And, it's so important also to


2134
01:02:57,006 --> 01:02:58,126
have that kind of magical


2135
01:02:58,126 --> 01:02:59,706
example that reminds yourself


2136
01:02:59,706 --> 01:03:01,446
and the engineering teams, and


2137
01:03:01,586 --> 01:03:05,066
yourselves that what it can feel


2138
01:03:05,066 --> 01:03:05,746
like, you know?


2139
01:03:05,746 --> 01:03:08,276
And, it's really important to,


2140
01:03:08,486 --> 01:03:09,806
kind of, remember, remind


2141
01:03:09,806 --> 01:03:10,476
yourself of that.


2142
01:03:11,896 --> 01:03:15,086
And, it makes-- when you


2143
01:03:15,086 --> 01:03:16,426
actually build it, it makes


2144
01:03:16,426 --> 01:03:17,626
something that's hard to copy,


2145
01:03:17,896 --> 01:03:19,386
and it gives your app a unique


2146
01:03:19,426 --> 01:03:19,936
character.


2147
01:03:21,006 --> 01:03:27,286
So, you know, multitouch is such


2148
01:03:27,286 --> 01:03:28,726
an amazing medium we all get to


2149
01:03:28,726 --> 01:03:29,156
play in.


2150
01:03:30,196 --> 01:03:31,446
We get to use technology to


2151
01:03:31,446 --> 01:03:32,596
interface with people at an


2152
01:03:32,726 --> 01:03:34,106
ancient, tactile level.


2153
01:03:34,756 --> 01:03:36,126
It's actually really cool.


2154
01:03:38,206 --> 01:03:40,066
You know, all those principles


2155
01:03:40,066 --> 01:03:42,226
we talked about today, they're


2156
01:03:42,226 --> 01:03:43,616
at the core of the design of the


2157
01:03:43,746 --> 01:03:45,646
iPhone 10 gestural interface,


2158
01:03:46,336 --> 01:03:47,526
you know, responsive,


2159
01:03:47,526 --> 01:03:48,976
redirectable, interruptible


2160
01:03:48,976 --> 01:03:50,926
gestures, dynamic motion,


2161
01:03:51,306 --> 01:03:52,876
elegant gesture handling.


2162
01:03:53,636 --> 01:03:55,056
In a lot of ways, it's kind of


2163
01:03:55,056 --> 01:03:56,486
the embodiment of what we think


2164
01:03:56,486 --> 01:03:57,646
a fluid interface could be.


2165
01:03:58,996 --> 01:04:01,246
When we align the interface to


2166
01:04:01,246 --> 01:04:02,586
the way we think and move,


2167
01:04:03,376 --> 01:04:04,756
something kind of magical


2168
01:04:04,756 --> 01:04:05,166
happens.


2169
01:04:05,986 --> 01:04:07,796
It really stops feeling like a


2170
01:04:07,796 --> 01:04:09,906
computer, and starts feeling


2171
01:04:09,906 --> 01:04:11,596
like a seamless extension of us.


2172
01:04:14,416 --> 01:04:16,206
You know, as we design the


2173
01:04:16,276 --> 01:04:18,336
future of interfaces, we think


2174
01:04:18,336 --> 01:04:19,776
it's really important to try and


2175
01:04:20,056 --> 01:04:21,716
capture our humanity in the


2176
01:04:21,716 --> 01:04:22,626
technology like this.


2177
01:04:23,626 --> 01:04:24,416
So, that one of the most


2178
01:04:24,416 --> 01:04:26,596
important tools of humankind is


2179
01:04:26,596 --> 01:04:28,966
not a burden, but a pleasure and


2180
01:04:28,966 --> 01:04:30,086
a delight to use.


2181
01:04:30,966 --> 01:04:31,956
Thank you very much.


2182
01:04:32,516 --> 01:04:36,500
[ Applause ]

