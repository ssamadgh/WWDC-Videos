1
00:00:07,516 --> 00:00:18,500
[ Music ]


2
00:00:22,516 --> 00:00:26,836
[ Applause ]


3
00:00:27,336 --> 00:00:28,046
>> Hello, everybody.


4
00:00:28,646 --> 00:00:32,296
My name is Mike Stern, and
I'm User Experience Evangelist


5
00:00:32,296 --> 00:00:32,746
at Apple.


6
00:00:33,506 --> 00:00:36,006
And it's a great pleasure
to be with you today to talk


7
00:00:36,006 --> 00:00:37,756
about designing for Apple Watch.


8
00:00:38,636 --> 00:00:40,736
Now, in today's session,
we'll look at how


9
00:00:40,736 --> 00:00:42,826
to apply design best practices


10
00:00:43,216 --> 00:00:46,306
and leverage the new
capabilities of watchOS 3


11
00:00:46,796 --> 00:00:49,946
to design Apple Watch
experiences that are fast,


12
00:00:50,396 --> 00:00:52,126
focused, and delightful.


13
00:00:52,126 --> 00:00:56,186
But before we get there, I
want to start with some basics.


14
00:00:57,176 --> 00:01:00,486
Now, after all, some of you
may have never designed a


15
00:01:00,486 --> 00:01:01,246
watchOS app.


16
00:01:02,326 --> 00:01:05,176
There are three basic components
to an Apple Watch app;


17
00:01:05,836 --> 00:01:09,216
complications, notifications,
and apps.


18
00:01:09,616 --> 00:01:12,266
A complication is
like a little widget


19
00:01:12,446 --> 00:01:14,666
that people can display
on their watch face.


20
00:01:15,536 --> 00:01:18,766
The term complication comes
from traditional watchmaking,


21
00:01:19,106 --> 00:01:21,106
and it refers to any feature


22
00:01:21,106 --> 00:01:24,686
on a timepiece beyond the
display of hours and minutes.


23
00:01:25,436 --> 00:01:28,576
Complications made the
design, manufacturing,


24
00:01:28,576 --> 00:01:31,296
and repair of watches
more expensive


25
00:01:31,776 --> 00:01:34,326
and more complicated,
hence the name.


26
00:01:35,086 --> 00:01:37,696
Now, fortunately for you,
complications are far easier


27
00:01:37,696 --> 00:01:41,456
to make for Apple Watch and
they're way more powerful.


28
00:01:42,366 --> 00:01:45,606
Complications on Apple
Watch offer the quickest way


29
00:01:45,886 --> 00:01:47,736
for people to access information


30
00:01:47,736 --> 00:01:50,776
and provide a really
fast way to get to apps.


31
00:01:51,546 --> 00:01:54,896
Notifications tell people
about significant events


32
00:01:54,896 --> 00:01:56,606
that they might otherwise
overlook.


33
00:01:57,176 --> 00:02:00,266
And because they're also
interactive, they're a great way


34
00:02:00,266 --> 00:02:02,976
to push interactions to the
people who use your app.


35
00:02:03,976 --> 00:02:07,096
And lastly, apps offer
a deeper experience


36
00:02:07,096 --> 00:02:08,925
with your product or service.


37
00:02:09,556 --> 00:02:11,746
Now, providing a complication


38
00:02:11,746 --> 00:02:15,786
or making watch-specific
notifications requires you


39
00:02:15,786 --> 00:02:17,076
to also have an app.


40
00:02:18,316 --> 00:02:21,716
These three basic components
are designed to work together.


41
00:02:22,256 --> 00:02:24,806
Each plays an integral role


42
00:02:24,806 --> 00:02:27,856
in the overall user
experience of your watch app.


43
00:02:28,556 --> 00:02:30,016
So, for example, let's say


44
00:02:30,016 --> 00:02:31,976
that I'm ordering
dinner with my watch.


45
00:02:32,576 --> 00:02:36,086
I might start out by tapping
a delivery app complication


46
00:02:36,326 --> 00:02:37,096
to launch the app.


47
00:02:37,096 --> 00:02:40,346
I then use the app
to place an order.


48
00:02:40,686 --> 00:02:43,766
And after doing that, I would
probably receive a notification


49
00:02:44,076 --> 00:02:46,886
with a time estimate about
when my order will arrive.


50
00:02:47,866 --> 00:02:49,586
While I wait for
my food to arrive,


51
00:02:49,776 --> 00:02:51,996
I might periodically
check the complication


52
00:02:52,386 --> 00:02:54,506
to see how much longer
I have to wait.


53
00:02:55,266 --> 00:02:57,536
And when my order
is about to arrive,


54
00:02:58,066 --> 00:03:00,786
I might get another
notification letting me know.


55
00:03:01,666 --> 00:03:05,086
And finally, if I hadn't already
tipped the delivery person,


56
00:03:05,446 --> 00:03:07,536
I might get a notification
asking me


57
00:03:07,536 --> 00:03:08,726
if I would like to do so.


58
00:03:09,696 --> 00:03:13,086
So that's the basics
about the components.


59
00:03:13,636 --> 00:03:15,846
Now this presentation
will help you to learn how


60
00:03:15,846 --> 00:03:17,886
to design each of these well.


61
00:03:18,736 --> 00:03:22,996
But before we get there, there's
something even more basic,


62
00:03:23,686 --> 00:03:26,876
even more fundamental, that
I'd like to discuss with you.


63
00:03:27,456 --> 00:03:29,626
And that's the concept of time.


64
00:03:30,616 --> 00:03:32,886
Apple Watch was specifically
designed


65
00:03:32,886 --> 00:03:34,706
to support lightweight
interactions,


66
00:03:35,226 --> 00:03:37,616
meaning that people should
be able to get information


67
00:03:37,616 --> 00:03:40,806
and take action in very,
very short amounts of time.


68
00:03:41,546 --> 00:03:44,886
Now I suppose this is an obvious
point, but it's really easy


69
00:03:44,886 --> 00:03:46,016
to lose sight of this.


70
00:03:46,276 --> 00:03:48,616
Of just how quick
interactions need to be


71
00:03:48,616 --> 00:03:49,946
when you're designing comps


72
00:03:50,296 --> 00:03:52,406
or testing your builds
in simulator.


73
00:03:52,406 --> 00:03:57,406
Now as you design your app,
always challenge yourself


74
00:03:57,406 --> 00:04:00,916
to find faster and less
complicated user flows.


75
00:04:01,566 --> 00:04:03,646
There's always a
way to optimize.


76
00:04:04,266 --> 00:04:05,726
For instance, many


77
00:04:05,726 --> 00:04:07,706
of our built-in apps
have been made simpler


78
00:04:07,706 --> 00:04:08,946
and quicker to navigate.


79
00:04:09,616 --> 00:04:12,066
Previously, starting a
workout required you to go


80
00:04:12,066 --> 00:04:14,516
to the Home screen,
find and launch the app,


81
00:04:14,736 --> 00:04:18,016
select a workout type, pick
a goal or reuse the one


82
00:04:18,286 --> 00:04:20,946
that you used last,
and then tap Start.


83
00:04:21,906 --> 00:04:24,106
The new flow is much simpler,


84
00:04:24,626 --> 00:04:27,256
especially if you use
the workout complication.


85
00:04:27,376 --> 00:04:28,846
You just tap the complication,


86
00:04:29,216 --> 00:04:30,976
then click Start,
and you're off.


87
00:04:31,736 --> 00:04:35,106
Now Quick Start lets
people bypass the screen


88
00:04:35,106 --> 00:04:37,846
for selecting their workout
goal and removes the need


89
00:04:37,846 --> 00:04:39,136
for a separate Start button.


90
00:04:39,836 --> 00:04:43,136
Now most people workout the
same way, day in and day out.


91
00:04:43,546 --> 00:04:45,936
So, for those people,
it just takes two taps


92
00:04:46,286 --> 00:04:47,506
to start a workout.


93
00:04:47,506 --> 00:04:50,146
And the UI shown
while you're working


94
00:04:50,146 --> 00:04:53,796
out has also been optimized
for faster interaction.


95
00:04:54,666 --> 00:04:56,386
Previously, there
were seven screens


96
00:04:56,746 --> 00:04:57,916
that people could swipe through.


97
00:04:58,346 --> 00:05:01,676
One for controls, and one for
each of the workout metrics.


98
00:05:02,156 --> 00:05:05,286
And navigating between these
screens required just way too


99
00:05:05,286 --> 00:05:07,286
much time.


100
00:05:07,496 --> 00:05:11,946
In watchOS 3, there's just two
screens; controls and metrics.


101
00:05:12,626 --> 00:05:15,546
There's basically no need to
navigate until you're done


102
00:05:15,546 --> 00:05:17,936
with your workout or if
you want to take a break.


103
00:05:18,456 --> 00:05:20,666
Now this frees people
up to focus


104
00:05:20,666 --> 00:05:23,176
on what's most important
while they're going


105
00:05:23,176 --> 00:05:25,036
for a run or riding their bike.


106
00:05:25,566 --> 00:05:28,956
Focus on your cadence,
your pace, breathing.


107
00:05:30,086 --> 00:05:32,236
Look out for cars, pedestrians.


108
00:05:32,806 --> 00:05:35,166
Enjoy the scenery,
and try to look cool.


109
00:05:36,086 --> 00:05:38,586
With watchOS 3, the
Apple Watch design


110
00:05:38,586 --> 00:05:41,746
and engineering team rallied
around three important themes


111
00:05:42,166 --> 00:05:45,526
for this release which I
think are relevant to us all.


112
00:05:46,266 --> 00:05:51,016
Those themes are glanceable,
actionable, and responsive.


113
00:05:52,106 --> 00:05:54,006
Glanceable means
presenting information


114
00:05:54,006 --> 00:05:56,216
so that it's immediately
comprehensible.


115
00:05:56,786 --> 00:06:00,846
Your design must communicate
clearly and without distraction.


116
00:06:01,556 --> 00:06:03,996
You should only display
the information that's


117
00:06:03,996 --> 00:06:05,116
most relevant.


118
00:06:06,196 --> 00:06:07,386
Ideally, the information


119
00:06:07,386 --> 00:06:09,846
that your app displays
is also actionable.


120
00:06:10,366 --> 00:06:14,496
This means inspiring people to
take physical action in response


121
00:06:14,496 --> 00:06:18,656
to what your app communicates,
or making it easier for people


122
00:06:18,656 --> 00:06:22,446
to access functionality from
your app or notifications.


123
00:06:23,416 --> 00:06:25,786
And apps should be responsive.


124
00:06:26,376 --> 00:06:28,656
Launch times and screen
loading should be kept


125
00:06:28,656 --> 00:06:29,926
to an absolute minimum.


126
00:06:30,526 --> 00:06:33,136
Content and data should
always be up-to-date,


127
00:06:33,536 --> 00:06:35,846
and UI feedback should
be immediate.


128
00:06:37,176 --> 00:06:40,036
Now to help your apps be
more glanceable, actionable,


129
00:06:40,036 --> 00:06:42,776
and responsive, major
changes were made


130
00:06:42,776 --> 00:06:46,956
to the navigational model and
core architecture of watchOS.


131
00:06:47,716 --> 00:06:50,936
The new Dock provides people
with a browsable collection


132
00:06:51,336 --> 00:06:54,486
of timely and
contextually-relevant moments


133
00:06:54,576 --> 00:06:55,836
from their favorite apps.


134
00:06:56,586 --> 00:06:58,396
Apps in the Dock
are kept in memory


135
00:06:58,436 --> 00:07:01,136
and can periodically
perform background updates,


136
00:07:01,436 --> 00:07:06,446
which means that navigating to
an app from the Dock is fast


137
00:07:07,106 --> 00:07:09,386
and people will spend
less time waiting


138
00:07:09,446 --> 00:07:12,376
for app content to update.


139
00:07:12,376 --> 00:07:15,196
And once you're in an app,
you can now move directly


140
00:07:15,196 --> 00:07:16,516
between detail screens,


141
00:07:16,516 --> 00:07:19,536
which greatly reduces the
time spent navigating.


142
00:07:20,366 --> 00:07:23,846
These changes can
significantly decrease overall


143
00:07:23,846 --> 00:07:24,846
interaction time.


144
00:07:25,536 --> 00:07:29,716
In fact, with watchOS 3 our
internal target interaction time


145
00:07:29,986 --> 00:07:33,266
was reduced from 5
seconds down to 2.


146
00:07:34,096 --> 00:07:37,936
Now, admittedly, the first time
I heard about this, I thought,


147
00:07:38,066 --> 00:07:39,886
"That is pretty ambitious."


148
00:07:40,356 --> 00:07:43,136
I mean, it literally
takes me about 2 seconds


149
00:07:43,136 --> 00:07:45,116
to say the words "2 seconds".


150
00:07:46,046 --> 00:07:48,806
But, the truth is
that performing tasks


151
00:07:48,806 --> 00:07:53,306
like checking scores for a
game, or checking the weather,


152
00:07:53,676 --> 00:07:57,996
or checking stocks can
and should be that quick.


153
00:07:59,136 --> 00:08:01,116
Now, throughout the day,
you might spend way more


154
00:08:01,116 --> 00:08:05,526
than a few seconds checking
the weather, scores, or stocks.


155
00:08:05,956 --> 00:08:09,176
But each of those interactions
should be just a couple


156
00:08:09,176 --> 00:08:09,816
of seconds.


157
00:08:10,666 --> 00:08:14,216
And taking action
should be just as fast.


158
00:08:14,216 --> 00:08:18,456
Simple actions that only require
a single decision work best


159
00:08:18,576 --> 00:08:19,536
on Apple Watch.


160
00:08:20,166 --> 00:08:26,216
People should be able to set
a timer, or turn on an alarm,


161
00:08:28,076 --> 00:08:31,076
or check things off on
their Reminders List


162
00:08:31,506 --> 00:08:33,436
in 2 seconds or less.


163
00:08:34,525 --> 00:08:37,066
Now even if you can't
quite get interaction times


164
00:08:37,066 --> 00:08:40,056
down to 2 seconds, the
act of trying to do


165
00:08:40,056 --> 00:08:44,356
so will help you spot workflow
inefficiencies and find ways


166
00:08:44,426 --> 00:08:46,226
to streamline your app.


167
00:08:46,916 --> 00:08:50,386
All right, so now let's get
down into the details of how


168
00:08:50,386 --> 00:08:51,786
to make really great apps,


169
00:08:52,416 --> 00:08:55,456
notifications, and
complications.


170
00:08:56,466 --> 00:09:00,696
Now, in my humble opinion,
complications are the easiest


171
00:09:00,696 --> 00:09:02,496
and most glanceable interaction


172
00:09:02,806 --> 00:09:04,896
that someone can
have on Apple Watch.


173
00:09:05,866 --> 00:09:08,006
Checking a complication
is as easy


174
00:09:08,006 --> 00:09:10,366
as raising one's
wrist and looking.


175
00:09:11,126 --> 00:09:13,776
No additional interaction
is required.


176
00:09:14,186 --> 00:09:15,986
This is definitely
an interaction


177
00:09:15,986 --> 00:09:17,626
that takes 2 seconds or less.


178
00:09:18,346 --> 00:09:22,636
And with watchOS 3 and iOS
10, big changes were made


179
00:09:22,876 --> 00:09:25,016
to raise awareness
about complications


180
00:09:25,876 --> 00:09:28,126
to make them easier to install


181
00:09:28,126 --> 00:09:30,426
and to give them
added capabilities.


182
00:09:31,206 --> 00:09:35,156
So, for starters, you can now
use Apple Watch app on iOS


183
00:09:35,736 --> 00:09:39,356
to browse and configure
complications, which makes a lot


184
00:09:39,356 --> 00:09:41,696
of sense because this is
definitely an interaction


185
00:09:42,036 --> 00:09:43,666
which takes more than 2 seconds.


186
00:09:44,576 --> 00:09:47,276
Now the configuration UI
shows an accurate preview


187
00:09:47,576 --> 00:09:50,066
of how the complication
will look on the watch face,


188
00:09:50,626 --> 00:09:53,146
and it's easy for people to
see what your complication does


189
00:09:53,546 --> 00:09:55,376
and the value it
will provide to them.


190
00:09:56,616 --> 00:09:59,376
The Apple Watch app also
has a gallery of watch faces


191
00:09:59,806 --> 00:10:02,186
that are preconfigured
with complications.


192
00:10:03,046 --> 00:10:06,896
And there's a section dedicated
to third-party complications.


193
00:10:07,426 --> 00:10:09,596
Now if you've made a
complication bundle,


194
00:10:09,596 --> 00:10:14,046
Apple Watch owners who have your
iOS app already installed will


195
00:10:14,046 --> 00:10:15,736
see your complication here.


196
00:10:16,346 --> 00:10:18,196
If your complication
looks useful,


197
00:10:18,576 --> 00:10:20,766
people can simply
tap to install it.


198
00:10:20,766 --> 00:10:24,106
And this will install your
watch app in the background.


199
00:10:24,966 --> 00:10:27,686
The feature complication
is a really great way


200
00:10:27,686 --> 00:10:30,196
to raise awareness
about your watch apps.


201
00:10:30,816 --> 00:10:33,546
It will now be so much
easier for people to learn


202
00:10:33,546 --> 00:10:37,076
about the complications
that you make.


203
00:10:37,296 --> 00:10:41,186
Now another big change has
to do with performance.


204
00:10:42,346 --> 00:10:44,186
Any app with a complication


205
00:10:44,886 --> 00:10:47,916
on the user's current watch
face will be kept in memory


206
00:10:48,326 --> 00:10:51,136
and have more background
update opportunities.


207
00:10:51,676 --> 00:10:54,156
This means that launch time
is going to be way faster


208
00:10:54,546 --> 00:10:57,366
and app data should
be less stale.


209
00:10:58,026 --> 00:11:01,436
Complications are great app
launchers, and the information


210
00:11:01,436 --> 00:11:03,986
that they display
often motivates people


211
00:11:03,986 --> 00:11:05,246
to want to know more.


212
00:11:05,496 --> 00:11:07,076
So that process has to be quick.


213
00:11:07,626 --> 00:11:09,776
So seeing the current
temperature might make you


214
00:11:09,776 --> 00:11:12,716
curious about this
week's forecast.


215
00:11:13,896 --> 00:11:17,276
Or, seeing that your primary
stock might be doing well could


216
00:11:17,276 --> 00:11:19,896
make you want to know how
the overall market is doing.


217
00:11:19,896 --> 00:11:25,086
And the last big change
to complications relates


218
00:11:25,086 --> 00:11:26,866
to the frequency of updates.


219
00:11:27,476 --> 00:11:30,586
In watchOS 3, your
app has opportunity


220
00:11:30,586 --> 00:11:33,986
to update your complication
50 times in a day.


221
00:11:34,756 --> 00:11:38,386
You control the frequency
and timing of these updates.


222
00:11:39,056 --> 00:11:42,326
So a travel complication
could update most frequently


223
00:11:42,326 --> 00:11:45,106
around the departure and
arrival time of a flight,


224
00:11:46,046 --> 00:11:49,246
while a sport complication
might update most frequently


225
00:11:49,246 --> 00:11:50,776
around a game that
you're following.


226
00:11:51,506 --> 00:11:53,316
By controlling when
updates occur,


227
00:11:53,506 --> 00:11:57,206
your complication can stay
current when it matters most.


228
00:11:58,096 --> 00:11:59,786
Now as you work on
your complication,


229
00:12:00,086 --> 00:12:02,216
consider how external factors


230
00:12:02,216 --> 00:12:06,456
and user activity patterns
might affect the timing


231
00:12:06,636 --> 00:12:10,316
of your complication updates.


232
00:12:11,196 --> 00:12:15,336
So, if you're going to
build an Apple Watch app,


233
00:12:16,436 --> 00:12:18,156
you should make a complication.


234
00:12:19,016 --> 00:12:20,886
There's a reason why they became


235
00:12:20,886 --> 00:12:24,606
so popular among watch
owners and watchmakers.


236
00:12:25,276 --> 00:12:28,286
All of that complexity
was worth the effort.


237
00:12:29,306 --> 00:12:32,816
So I hope I've done a decent
job at least of selling you


238
00:12:32,816 --> 00:12:34,526
on the idea of making
a complication.


239
00:12:35,036 --> 00:12:37,166
And if so, I'd like to
talk to you a little bit


240
00:12:37,166 --> 00:12:40,386
about what it takes to make
a really great complication.


241
00:12:40,876 --> 00:12:44,086
Now the most important
consideration


242
00:12:44,246 --> 00:12:48,076
when designing a complication is
just choosing what information


243
00:12:48,076 --> 00:12:48,706
to display.


244
00:12:49,796 --> 00:12:52,836
The best complications answer
those questions that people tend


245
00:12:52,836 --> 00:12:54,976
to ask themselves
throughout their day.


246
00:12:55,816 --> 00:12:58,296
Now I run most days
before I go to work.


247
00:12:58,986 --> 00:13:00,916
So the night before,
I might check


248
00:13:00,916 --> 00:13:04,756
to see what time the sun
will rise before setting my


249
00:13:04,756 --> 00:13:05,386
alarm clock.


250
00:13:05,386 --> 00:13:07,446
And when I get up, I want


251
00:13:07,446 --> 00:13:08,946
to know what the
temperature is outside


252
00:13:08,946 --> 00:13:10,426
so I know how to
dress for my run.


253
00:13:11,406 --> 00:13:13,726
And I'll check to see what
time my first meeting is


254
00:13:13,786 --> 00:13:16,246
to make sure I have
enough time to run.


255
00:13:16,416 --> 00:13:18,516
And I'll also check
to see the traffic


256
00:13:18,816 --> 00:13:20,396
to make sure I don't need


257
00:13:20,396 --> 00:13:21,986
to leave really early
to get to work.


258
00:13:23,056 --> 00:13:27,056
Now the answers to these
questions will directly impact


259
00:13:27,146 --> 00:13:28,526
how I plan my day.


260
00:13:29,246 --> 00:13:32,466
And by answering these questions
for me with a simple raise


261
00:13:32,466 --> 00:13:35,426
of the wrist, these
complications provide real


262
00:13:35,426 --> 00:13:37,846
and immediate value
throughout my day.


263
00:13:37,846 --> 00:13:42,646
And complications can be a
really powerful motivator.


264
00:13:43,146 --> 00:13:45,736
They can inspire
you to take action.


265
00:13:46,306 --> 00:13:47,406
More actionable.


266
00:13:48,086 --> 00:13:50,926
The Activity complication,
for example,


267
00:13:50,926 --> 00:13:54,166
shows me progress towards
my fitness goals throughout


268
00:13:54,166 --> 00:13:54,456
the day.


269
00:13:54,876 --> 00:13:58,066
I can see if I'm on track
to filling those rings,


270
00:13:58,636 --> 00:14:01,006
or if I need to go
for an extra-long walk


271
00:14:01,006 --> 00:14:02,366
with my dogs after work.


272
00:14:03,356 --> 00:14:06,886
And WaterMinder's complication
shows how much progress I'm


273
00:14:06,886 --> 00:14:08,946
making towards my
daily hydration goal.


274
00:14:09,926 --> 00:14:12,706
And it seems I'm actually a
little bit behind, so I'm going


275
00:14:12,706 --> 00:14:15,416
to take this as an
opportunity to drink some water.


276
00:14:15,896 --> 00:14:16,506
Hold on one second.


277
00:14:23,296 --> 00:14:23,363
Ahh.


278
00:14:24,516 --> 00:14:26,516
[ Laughter ]


279
00:14:27,516 --> 00:14:30,846
[ Applause ]


280
00:14:31,346 --> 00:14:35,886
So, if you had to pick just
one thing to communicate


281
00:14:36,296 --> 00:14:38,556
with your complication
to the people


282
00:14:38,556 --> 00:14:41,256
that use your app,
what would that be?


283
00:14:41,996 --> 00:14:44,196
What's the thing that
they're most interested


284
00:14:44,196 --> 00:14:46,036
in knowing throughout
the course of their day?


285
00:14:46,906 --> 00:14:49,236
Does that information
change frequently enough


286
00:14:49,336 --> 00:14:50,736
to remain interesting?


287
00:14:51,516 --> 00:14:55,306
Now, sometimes, the answer to
that question is not so clear.


288
00:14:56,296 --> 00:14:59,586
Now if you can't quite narrow
it down to just one piece


289
00:14:59,586 --> 00:15:02,716
of information, consider
giving people options.


290
00:15:03,556 --> 00:15:05,686
That's what the app
CARROT Weather does.


291
00:15:06,486 --> 00:15:08,106
They let you configure what type


292
00:15:08,106 --> 00:15:09,896
of weather information
you want to see.


293
00:15:10,356 --> 00:15:14,766
Temperature, temperature and
condition, wind, UV index,


294
00:15:15,196 --> 00:15:18,526
precipitation, chance of
precipitation, or humidity.


295
00:15:19,356 --> 00:15:21,116
Now during the summertime


296
00:15:21,116 --> 00:15:24,346
in California, it
hardly ever rains.


297
00:15:24,766 --> 00:15:25,726
So seeing the chance


298
00:15:25,726 --> 00:15:28,976
of precipitation is
completely irrelevant.


299
00:15:29,776 --> 00:15:33,126
0% today. That is
completely shocking.


300
00:15:33,686 --> 00:15:36,186
Of course, just as an aside, I
saw the weather this morning.


301
00:15:36,186 --> 00:15:37,966
It's actually supposed
to rain tomorrow.


302
00:15:38,326 --> 00:15:40,966
So, heads up.


303
00:15:42,036 --> 00:15:42,636
Just in time.


304
00:15:43,156 --> 00:15:47,066
But, you know, during the same
period of time in the summer,


305
00:15:47,466 --> 00:15:52,026
the UV index is incredibly
relevant information.


306
00:15:52,506 --> 00:15:54,176
And allowing this complication


307
00:15:54,176 --> 00:15:57,146
to be customizable is
a really great feature.


308
00:15:57,846 --> 00:16:00,426
And CARROT Weather has
also done a great job


309
00:16:00,426 --> 00:16:03,096
of making their complication
glanceable.


310
00:16:03,936 --> 00:16:06,696
Each one, except for
just current temperature,


311
00:16:07,076 --> 00:16:09,686
uses a simple and
meaningful icon


312
00:16:09,686 --> 00:16:11,346
to label the value that's shown.


313
00:16:11,916 --> 00:16:14,976
And they don't try to cram in
too much information either


314
00:16:14,976 --> 00:16:17,126
because that would just
lead to text and icons


315
00:16:17,516 --> 00:16:18,766
that are too small to read.


316
00:16:20,156 --> 00:16:22,016
Now if you haven't made
a complication before,


317
00:16:22,626 --> 00:16:23,716
it's important to know


318
00:16:23,716 --> 00:16:26,276
that there are multiple
complication families.


319
00:16:26,906 --> 00:16:29,946
Circular, modular
small, modular large,


320
00:16:30,076 --> 00:16:32,466
utility small, and
utility large.


321
00:16:33,226 --> 00:16:37,026
And new to watchOS
3, extra-large.


322
00:16:37,716 --> 00:16:39,856
I wanted to get a
sound effect for that,


323
00:16:39,856 --> 00:16:41,066
but I didn't have time.


324
00:16:41,796 --> 00:16:44,956
Now each of these complication
families consist of one


325
00:16:44,956 --> 00:16:47,796
or more complication
templates and corresponds


326
00:16:47,796 --> 00:16:49,246
to particular watch faces.


327
00:16:49,806 --> 00:16:53,476
The Color watch face uses the
circular complication family.


328
00:16:54,586 --> 00:16:58,336
The modular watch face uses
the modular large complication


329
00:16:58,336 --> 00:17:01,476
family and the modular
small family.


330
00:17:02,546 --> 00:17:03,916
The simple utility


331
00:17:03,916 --> 00:17:07,866
and chronograph watch faces use
utility small complications.


332
00:17:08,506 --> 00:17:13,336
And the utility and Mickey watch
faces use the utility large


333
00:17:13,425 --> 00:17:14,435
complication family.


334
00:17:16,066 --> 00:17:20,126
And the all-new extra-large
watch face uses,


335
00:17:20,606 --> 00:17:21,876
does anyone want to guess?


336
00:17:23,026 --> 00:17:23,496
That's right.


337
00:17:24,165 --> 00:17:27,445
Extra-large watch face uses the
extra-large complication family.


338
00:17:27,576 --> 00:17:29,726
You guys are quick.


339
00:17:29,726 --> 00:17:30,976
Now I hope you wrote
all that down


340
00:17:30,976 --> 00:17:32,796
because that information
will never be shared again.


341
00:17:33,896 --> 00:17:34,806
No, I'm just kidding.


342
00:17:35,026 --> 00:17:37,206
All of that information
is available to you


343
00:17:37,206 --> 00:17:39,976
in the watchOS Human
Interface Guidelines.


344
00:17:40,396 --> 00:17:43,866
This is your go-to place
for all information related


345
00:17:43,866 --> 00:17:45,096
to the design of your watch app.


346
00:17:45,096 --> 00:17:47,106
I highly recommend
checking it out.


347
00:17:48,256 --> 00:17:50,476
Now it's important that
you try to make something


348
00:17:50,866 --> 00:17:52,526
for every complication family


349
00:17:52,886 --> 00:17:55,376
so that people can
use your complication


350
00:17:55,376 --> 00:17:57,696
on the watch face
that they like best.


351
00:17:58,416 --> 00:18:00,586
And be sure to use
placeholder data


352
00:18:00,586 --> 00:18:03,196
for your complication
that's representative


353
00:18:03,196 --> 00:18:04,576
of what people will see


354
00:18:04,966 --> 00:18:07,046
when they actually
use your complication.


355
00:18:07,516 --> 00:18:09,796
Without placeholder data,
it's going to be impossible


356
00:18:09,796 --> 00:18:13,446
for people to anticipate what
your complication will do.


357
00:18:14,806 --> 00:18:15,806
All right.


358
00:18:15,806 --> 00:18:18,746
As you can see, some
complications offer more room


359
00:18:18,816 --> 00:18:20,386
for more detailed information.


360
00:18:21,176 --> 00:18:22,436
On the modular watch face,


361
00:18:22,856 --> 00:18:25,506
if someone has made your
complication the centerpiece,


362
00:18:25,836 --> 00:18:29,036
they certainly care a lot about
what your app has to tell them.


363
00:18:30,096 --> 00:18:31,366
Take this as an opportunity


364
00:18:32,146 --> 00:18:34,096
to provide slightly
more information


365
00:18:34,506 --> 00:18:35,846
that they might find helpful.


366
00:18:36,726 --> 00:18:40,366
In fact, you may want to display
totally different information


367
00:18:40,726 --> 00:18:42,296
based on the complication
family.


368
00:18:43,076 --> 00:18:45,486
If weather information is
really important to you,


369
00:18:46,246 --> 00:18:49,226
there's no reason why you
couldn't have two instances


370
00:18:49,446 --> 00:18:52,386
of the CARROT Weather
complication on your watch face.


371
00:18:53,536 --> 00:18:56,546
Maybe you'd use modular large
to show current temperature


372
00:18:56,626 --> 00:19:00,696
and condition, and modular small
to show chance of precipitation.


373
00:19:01,576 --> 00:19:04,136
Now even if you can't quite
figure out what information


374
00:19:04,486 --> 00:19:05,996
to show in your complication,


375
00:19:06,576 --> 00:19:08,966
you can always just
make an app launcher.


376
00:19:09,776 --> 00:19:12,756
The complication for Just
Press Record, which is an app


377
00:19:13,086 --> 00:19:16,346
for recording voice memos,
is just an app launcher.


378
00:19:16,996 --> 00:19:18,986
Tapping it launches
the app of course,


379
00:19:19,286 --> 00:19:21,356
but it also begins
a new recording.


380
00:19:21,816 --> 00:19:24,146
It's super convenient and fast.


381
00:19:24,856 --> 00:19:30,286
So if it's not already clear, we
like complications, like, a lot.


382
00:19:31,026 --> 00:19:33,256
And we think that
Apple Watch owners --


383
00:19:33,606 --> 00:19:35,326
the more Apple Watch
owners learn


384
00:19:35,326 --> 00:19:37,306
about how useful
complications are,


385
00:19:37,716 --> 00:19:40,036
the more complications
they'll want to have.


386
00:19:41,026 --> 00:19:44,346
Now to make it easier to access
all of those complications,


387
00:19:44,796 --> 00:19:49,146
people can now easily switch
watch faces on watchOS 3.


388
00:19:49,826 --> 00:19:52,586
With a simple swipe, you can go
from your workday complication


389
00:19:52,936 --> 00:19:56,136
to the workout watch face, and
from the workout watch face


390
00:19:56,526 --> 00:19:57,796
to the weekend watch face.


391
00:19:58,556 --> 00:20:01,196
Now think about all of
the different things


392
00:20:01,196 --> 00:20:02,766
that we do with our time.


393
00:20:03,286 --> 00:20:05,126
Right? The variety
is staggering.


394
00:20:06,126 --> 00:20:07,646
No, seriously.


395
00:20:07,646 --> 00:20:11,126
We workout, we hangout,
we exercise, we travel,


396
00:20:11,426 --> 00:20:14,356
we play sports and do countless
other types of activities.


397
00:20:15,056 --> 00:20:17,716
Now, it'll be easier
to match the watch face


398
00:20:17,716 --> 00:20:21,056
and complications installed to
what it is that you're doing.


399
00:20:21,556 --> 00:20:24,416
And this should lead to
people using a wider number


400
00:20:24,416 --> 00:20:26,646
of complications on Apple Watch.


401
00:20:27,346 --> 00:20:29,956
Make one of those
complications yours.


402
00:20:30,006 --> 00:20:34,066
All right, so that
was complications.


403
00:20:34,936 --> 00:20:38,556
Now, let's move on to best
practices for notifications.


404
00:20:40,656 --> 00:20:45,196
Notifications should
always be useful and timely,


405
00:20:46,066 --> 00:20:48,116
and they should be
carefully designed


406
00:20:48,416 --> 00:20:52,436
to communicate information
with precision and clarity.


407
00:20:53,186 --> 00:20:56,466
In other words, they
should be glanceable.


408
00:20:57,496 --> 00:21:00,396
Keep in mind that the person
receiving your notification


409
00:21:00,636 --> 00:21:03,696
could be anywhere and
doing just about anything.


410
00:21:04,566 --> 00:21:07,006
They could be at dinner,
hanging out with friends,


411
00:21:07,876 --> 00:21:10,456
riding on the subway,
getting hydrated,


412
00:21:11,286 --> 00:21:14,776
or in a meeting discussing
something of real importance.


413
00:21:15,666 --> 00:21:18,776
Now, in so many situations,
people are fully engaged


414
00:21:19,066 --> 00:21:21,886
in the task at hand or just
really paying attention


415
00:21:21,886 --> 00:21:22,916
to the world around them.


416
00:21:23,516 --> 00:21:25,386
So your notifications need


417
00:21:25,386 --> 00:21:28,116
to communicate clearly
and get to the point.


418
00:21:29,126 --> 00:21:32,366
Luckily, making your
notification glanceable is not


419
00:21:32,366 --> 00:21:32,966
so difficult.


420
00:21:33,626 --> 00:21:35,996
First, you just need to
provide a meaningful title.


421
00:21:36,586 --> 00:21:38,466
Now notifications
come in two stages,


422
00:21:38,466 --> 00:21:39,806
ashort look and a long look.


423
00:21:40,376 --> 00:21:42,396
And as the name implies,
the short look is there


424
00:21:42,396 --> 00:21:44,276
to give you a sense of
what the notification is


425
00:21:44,276 --> 00:21:45,406
about really quickly.


426
00:21:46,036 --> 00:21:48,656
And the title that you provide
will get displayed here.


427
00:21:49,236 --> 00:21:51,666
Now, in some cases, that title
might tell you everything you


428
00:21:51,666 --> 00:21:53,506
need to know about
the notification.


429
00:21:54,596 --> 00:21:57,626
Second, only show
what's necessary.


430
00:21:58,146 --> 00:21:59,626
I can't stress this enough.


431
00:22:00,126 --> 00:22:02,196
The more you show
in a notification,


432
00:22:02,496 --> 00:22:04,426
the harder it's going to
be for people to focus


433
00:22:04,426 --> 00:22:05,816
on what's most important.


434
00:22:06,526 --> 00:22:09,476
So let's say you're making
a check-in notification


435
00:22:09,876 --> 00:22:11,396
for a travel app.


436
00:22:11,506 --> 00:22:13,376
The notification might
contain all sorts


437
00:22:13,376 --> 00:22:15,136
of potentially useful
information


438
00:22:15,486 --> 00:22:16,686
about the traveler's flight.


439
00:22:17,446 --> 00:22:21,826
But seeing things like the
flight number or your own name


440
00:22:21,826 --> 00:22:25,236
in a notification when it's
just really implied is not all


441
00:22:25,236 --> 00:22:27,976
that important, so
we can just remove


442
00:22:27,976 --> 00:22:29,686
that information altogether.


443
00:22:31,036 --> 00:22:34,546
Third, present important
information first.


444
00:22:34,896 --> 00:22:37,056
By putting the most
important things at the top,


445
00:22:37,486 --> 00:22:39,916
people are more likely to
get the message quickly


446
00:22:39,916 --> 00:22:41,206
without the need to scroll.


447
00:22:41,746 --> 00:22:44,346
And this is really helpful if
someone is carrying stuff around


448
00:22:44,606 --> 00:22:46,986
and they might not be able
to easily swipe the screen


449
00:22:47,446 --> 00:22:48,976
or access the Digital Crown.


450
00:22:50,046 --> 00:22:51,766
So for our check-in
notification,


451
00:22:52,246 --> 00:22:54,466
we might move content
like the flight number


452
00:22:54,466 --> 00:22:56,406
and boarding time a
little bit further


453
00:22:56,406 --> 00:22:57,836
down in the notification.


454
00:22:59,056 --> 00:23:02,506
Fourth, vary the size
and appearance of type


455
00:23:02,936 --> 00:23:05,426
to establish a clear
visual hierarchy.


456
00:23:06,136 --> 00:23:08,606
Your notification should
focus people's attention


457
00:23:08,606 --> 00:23:11,046
on the most important
information first.


458
00:23:11,746 --> 00:23:15,796
This notification has all the
right information and it's


459
00:23:15,796 --> 00:23:18,396
in the right order, but
everything here is treated


460
00:23:18,396 --> 00:23:20,276
with equivalent visual weight.


461
00:23:21,086 --> 00:23:24,046
Apple Watch notifications
are very customizable.


462
00:23:24,386 --> 00:23:27,476
You have full control over
font appearance, layout,


463
00:23:27,476 --> 00:23:29,276
background and sash color.


464
00:23:30,416 --> 00:23:33,226
Use this capability to
help people quickly pick


465
00:23:33,226 --> 00:23:34,966
out what's most important.


466
00:23:35,756 --> 00:23:38,496
Now this design really
puts the focus on things


467
00:23:38,496 --> 00:23:42,346
like ticket class, seat number,
departure time, and route.


468
00:23:42,386 --> 00:23:45,096
And the purpose of this
notification that it's time


469
00:23:45,096 --> 00:23:47,756
for you to check in
now, is made very clear.


470
00:23:49,136 --> 00:23:49,876
And lastly,


471
00:23:50,336 --> 00:23:53,566
thoughtfully-designed
notifications often use icons,


472
00:23:53,566 --> 00:23:54,826
graphics, and animations


473
00:23:54,826 --> 00:23:57,336
to convey meaning
quickly and with impact.


474
00:23:58,306 --> 00:24:01,416
Visuals can sometimes
communicate meaning faster


475
00:24:01,736 --> 00:24:03,786
and more clearly than text.


476
00:24:04,726 --> 00:24:08,236
Icons can help save space
and allow your notification


477
00:24:08,236 --> 00:24:10,466
to display everything
on screen at once.


478
00:24:11,076 --> 00:24:14,946
But be mindful that some
icons may not be universally


479
00:24:14,946 --> 00:24:17,286
understood or could
be misinterpreted.


480
00:24:17,616 --> 00:24:20,376
So you want to look for icons
that are widely understood


481
00:24:20,376 --> 00:24:23,786
across regions and cultures,
or whose symbolism you know


482
00:24:23,886 --> 00:24:27,276
to be clear to the
people who use your app.


483
00:24:27,276 --> 00:24:29,926
And short, meaningful
animations can be a great way


484
00:24:30,246 --> 00:24:33,516
to complement text and to
engage people's attention.


485
00:24:34,386 --> 00:24:38,186
And graphs and other data
visualizations not only provide


486
00:24:38,186 --> 00:24:41,306
for a more interesting visual
experience, but may pack


487
00:24:41,306 --> 00:24:43,586
in far more meaning
than text alone.


488
00:24:44,746 --> 00:24:48,346
But there's more to consider
when it comes to the design


489
00:24:48,506 --> 00:24:50,026
of your notifications.


490
00:24:52,136 --> 00:24:55,026
You also need to think
carefully about why


491
00:24:55,446 --> 00:24:56,876
and when you're sending them.


492
00:24:57,766 --> 00:24:58,726
Getting a notification


493
00:24:58,726 --> 00:25:03,066
at the wrong time can be just
distracting or really annoying.


494
00:25:03,726 --> 00:25:06,356
If you got a notification
right now, you would be


495
00:25:06,426 --> 00:25:10,036
so annoyed unless it was about
something even more important


496
00:25:10,036 --> 00:25:11,086
than being here right now,


497
00:25:11,576 --> 00:25:13,296
which is completely
ridiculous [laughter].


498
00:25:15,576 --> 00:25:18,466
Now, because Apple Watch
effectively taps people


499
00:25:18,466 --> 00:25:21,196
on their wrist when they
receive a notification,


500
00:25:21,516 --> 00:25:23,526
notifications are
very hard to miss.


501
00:25:24,026 --> 00:25:26,266
If your app sends
people notifications


502
00:25:26,266 --> 00:25:29,886
that are not genuinely useful,
informative, and timely,


503
00:25:30,246 --> 00:25:32,846
people are likely to just
turn off your app's ability


504
00:25:33,056 --> 00:25:34,876
to send notifications
altogether.


505
00:25:36,226 --> 00:25:41,846
So, how do you know why and
when to send notifications?


506
00:25:42,966 --> 00:25:46,456
Well, the best approach is to
determine what's most relevant


507
00:25:46,656 --> 00:25:48,486
to the people who use your app


508
00:25:48,486 --> 00:25:50,686
and intelligently
time notifications


509
00:25:51,006 --> 00:25:52,456
for when they're
most actionable.


510
00:25:53,316 --> 00:25:56,546
Now I have two really
great apps that --


511
00:25:56,546 --> 00:25:59,006
I have two really
great examples of this.


512
00:25:59,486 --> 00:26:02,556
The first is from the
awesome weather app, Dark Sky.


513
00:26:03,596 --> 00:26:05,006
Dark Sky notifies people


514
00:26:05,006 --> 00:26:07,606
about significant
weather condition changes,


515
00:26:08,066 --> 00:26:09,976
such as when it's
about to start raining


516
00:26:10,286 --> 00:26:12,026
or when rain is about to stop.


517
00:26:13,096 --> 00:26:15,946
Now, in the case of Dark
Sky, relevance is determined


518
00:26:15,946 --> 00:26:17,306
by contextual factors.


519
00:26:17,686 --> 00:26:21,856
Notifications are sent based on
the user's location or proximity


520
00:26:21,856 --> 00:26:24,516
to an approaching or
departing weather system.


521
00:26:25,366 --> 00:26:28,416
And notifications are sent early
enough so that there's time


522
00:26:28,416 --> 00:26:31,486
to get the umbrella out
before it starts pouring


523
00:26:31,486 --> 00:26:32,896
down raining cats and dogs.


524
00:26:33,726 --> 00:26:36,386
Now, because these notifications
are contextually relevant


525
00:26:36,416 --> 00:26:39,256
and timely, they
are more actionable.


526
00:26:40,106 --> 00:26:43,356
Knowing that it's about to
stop raining might motivate me


527
00:26:43,466 --> 00:26:44,816
to get ready to go for a run.


528
00:26:45,496 --> 00:26:49,536
Knowing that it's about to
start raining might motivate me


529
00:26:49,566 --> 00:26:51,566
to walk to my couch
and take a nap.


530
00:26:52,686 --> 00:26:56,226
Now, in addition to contextual
factors, user preferences


531
00:26:56,226 --> 00:26:58,586
and patterns can provide
really great insights


532
00:26:58,956 --> 00:27:00,476
into what people want to know


533
00:27:00,476 --> 00:27:02,006
and when they want
to know about it.


534
00:27:02,646 --> 00:27:05,466
Now, to explain, let's
look at the other example.


535
00:27:06,616 --> 00:27:11,856
Streaks is an app that helps
people form positive habits


536
00:27:12,266 --> 00:27:14,206
and also just won an
Apple Design Award.


537
00:27:15,136 --> 00:27:18,036
People can pick up to
six tasks that they want


538
00:27:18,036 --> 00:27:19,496
to do on a daily basis.


539
00:27:20,046 --> 00:27:22,346
Now, as the name suggests,
the objective here is to go


540
00:27:22,346 --> 00:27:23,876
on streaks of daily tasks


541
00:27:24,166 --> 00:27:26,556
because doing something
every day helps it


542
00:27:26,656 --> 00:27:27,766
to become a routine.


543
00:27:28,606 --> 00:27:30,676
So, if you want to
get into the habit


544
00:27:30,676 --> 00:27:33,326
of doing core-strengthening
exercises every day.


545
00:27:33,826 --> 00:27:37,286
Which I should be doing or
learning how to play guitar,


546
00:27:37,796 --> 00:27:40,536
or remembering to refill your
dog's water bowl or take him


547
00:27:40,536 --> 00:27:44,906
for a walk, Streaks is going
to help you remember to do it.


548
00:27:45,356 --> 00:27:48,136
My dogs have never been
so fit and hydrated.


549
00:27:48,376 --> 00:27:51,586
They don't realize it, but
they totally love this app.


550
00:27:52,546 --> 00:27:55,126
Of course, the whole point
here is that these are things


551
00:27:55,126 --> 00:27:57,836
that people want to
do on a regular basis


552
00:27:57,836 --> 00:28:01,216
but just can't seem
to remember to do it.


553
00:28:01,366 --> 00:28:04,696
So Streaks uses notifications
to keep people on track.


554
00:28:05,496 --> 00:28:08,116
But these reminders are
only effective if they come


555
00:28:08,116 --> 00:28:09,646
at just the right time.


556
00:28:10,206 --> 00:28:12,966
They should arrive close to
when people are most likely


557
00:28:12,966 --> 00:28:14,066
to take action.


558
00:28:15,256 --> 00:28:18,596
Or, put another way, when
they're most actionable.


559
00:28:18,946 --> 00:28:23,656
But how does Streaks
know when that is?


560
00:28:23,846 --> 00:28:25,766
Well, at first, they don't.


561
00:28:26,496 --> 00:28:29,756
To explain what it does, let's
look at a specific example.


562
00:28:30,556 --> 00:28:33,056
Now I'm trying to get into
the habit of playing guitar.


563
00:28:33,796 --> 00:28:36,576
And at a somewhat randomized
time towards the end of the day,


564
00:28:36,916 --> 00:28:38,676
I'll get a reminder
to play guitar.


565
00:28:39,506 --> 00:28:42,426
It doesn't arrive so late
that I might not have time


566
00:28:42,466 --> 00:28:44,796
to play guitar or that
I'm already asleep.


567
00:28:45,646 --> 00:28:49,086
But it's not so early that
I'm, say, still at work.


568
00:28:50,476 --> 00:28:51,576
So, for simplicity's sake,


569
00:28:52,386 --> 00:28:54,856
let's say I get the
notification at 7:00 PM.


570
00:28:55,566 --> 00:28:56,686
Now, that's a bit early.


571
00:28:56,806 --> 00:29:00,386
So I can tap a 30-minute
snooze button and keep delaying


572
00:29:00,386 --> 00:29:02,246
and delaying that notification


573
00:29:02,246 --> 00:29:04,296
until I'm finally
able to play guitar.


574
00:29:05,076 --> 00:29:08,076
And when I play guitar,
I mark that task


575
00:29:08,076 --> 00:29:12,036
as complete in the app.


576
00:29:12,146 --> 00:29:13,506
Streaks takes note of this time.


577
00:29:14,306 --> 00:29:17,616
Day after day, each time I
mark that task as complete,


578
00:29:17,826 --> 00:29:20,766
Streaks gets an increasingly
more accurate understanding


579
00:29:20,766 --> 00:29:22,926
of when I typically play guitar.


580
00:29:23,916 --> 00:29:26,806
Streaks uses that time
to schedule my reminders


581
00:29:27,136 --> 00:29:30,206
to automatically arrive
at just the right moments.


582
00:29:30,766 --> 00:29:33,656
It's such a simple
and elegant heuristic.


583
00:29:34,906 --> 00:29:37,646
The actual timing
is 30 minutes prior


584
00:29:38,006 --> 00:29:41,056
because obviously I can't just
drop everything at the drop


585
00:29:41,056 --> 00:29:42,596
of a hat and start
playing guitar.


586
00:29:43,546 --> 00:29:46,076
However, automatically
adjusting the timing


587
00:29:46,076 --> 00:29:48,836
and notifications might not
always be the right choice.


588
00:29:49,526 --> 00:29:53,136
Some tasks you want to do
at very specific times,


589
00:29:53,286 --> 00:29:55,706
and Streaks gives you
that capability as well.


590
00:29:56,556 --> 00:29:58,776
Or maybe you don't want
individual notifications,


591
00:29:58,776 --> 00:30:00,976
you just want one
single daily reminder.


592
00:30:01,346 --> 00:30:03,096
So Streaks gives
you that choice.


593
00:30:03,726 --> 00:30:07,106
And you can disable
individual task notifications


594
00:30:07,966 --> 00:30:09,636
or turn off notifications
altogether.


595
00:30:10,456 --> 00:30:13,156
So by smartly choosing when
notifications are scheduled,


596
00:30:14,026 --> 00:30:17,536
and giving users full
control over why and when they


597
00:30:17,536 --> 00:30:19,966
like to be notified,
the reminders


598
00:30:19,966 --> 00:30:23,156
that Streaks sends are less
likely to be disruptive,


599
00:30:24,076 --> 00:30:25,686
ignored, and unwelcome.


600
00:30:27,156 --> 00:30:28,116
Now the notifications


601
00:30:28,116 --> 00:30:31,056
that Streaks sends
are actionable insofar


602
00:30:31,056 --> 00:30:33,396
as they remind people to
perform what's typically a


603
00:30:33,396 --> 00:30:34,206
physical task.


604
00:30:34,786 --> 00:30:37,866
But making notifications
actionable also means quite


605
00:30:37,866 --> 00:30:40,796
literally adding actions
to your notifications.


606
00:30:41,366 --> 00:30:44,266
Now I encourage you to explore
how to make the notifications


607
00:30:44,266 --> 00:30:46,096
that you send actionable.


608
00:30:47,076 --> 00:30:48,736
Being able to quickly triage


609
00:30:48,736 --> 00:30:51,296
from your wrist is a
very powerful thing.


610
00:30:51,956 --> 00:30:54,526
Notifications can push
interactions to the people


611
00:30:54,696 --> 00:30:58,526
who use your app, and they're
great for offering brief periods


612
00:30:58,526 --> 00:31:00,686
of engagement to people
throughout the course


613
00:31:00,686 --> 00:31:01,036
of their day.


614
00:31:02,526 --> 00:31:05,876
Now you can have up to four
actions in a notification.


615
00:31:06,306 --> 00:31:08,856
And be sure to only show
actions that are truly relevant


616
00:31:08,856 --> 00:31:10,526
to the content of
your notification.


617
00:31:11,886 --> 00:31:15,706
Make sure that actions are
labeled clearly, succinctly,


618
00:31:15,916 --> 00:31:17,796
and use action-oriented verbs.


619
00:31:18,516 --> 00:31:20,936
And try to focus on actions
that can be completed


620
00:31:20,936 --> 00:31:24,106
in one tap just one
tap and you're done.


621
00:31:24,586 --> 00:31:26,336
However, sometimes one


622
00:31:26,336 --> 00:31:28,596
or two additional steps
might be required.


623
00:31:29,176 --> 00:31:32,256
Now multi-step flows will
bring people into your app,


624
00:31:32,256 --> 00:31:34,166
and that used to be
a little bit painful


625
00:31:34,166 --> 00:31:36,596
because apps would take a
little bit of time to load.


626
00:31:37,436 --> 00:31:40,856
But in watchOS 3, when your
app's notification is displayed,


627
00:31:41,096 --> 00:31:42,936
your app will be launched
in the background.


628
00:31:43,396 --> 00:31:45,456
This gives you an opportunity


629
00:31:45,456 --> 00:31:49,676
to make sure your app's data is
current and get your app ready


630
00:31:49,676 --> 00:31:50,736
for people to show up.


631
00:31:51,466 --> 00:31:53,696
So don't shy away from
taking people into your app


632
00:31:53,896 --> 00:31:55,156
if that's what's necessary.


633
00:31:55,946 --> 00:31:59,046
Now, speaking of taking
people into your app,


634
00:31:59,686 --> 00:32:03,376
it's time to talk about apps.


635
00:32:03,616 --> 00:32:07,336
watchOS 3 will profoundly
change how people experience


636
00:32:07,336 --> 00:32:08,656
and interact with apps.


637
00:32:09,266 --> 00:32:11,486
Let's take a look at the
most significant changes


638
00:32:11,796 --> 00:32:13,346
and what they'll mean to you.


639
00:32:14,446 --> 00:32:15,466
Let's start with the new Dock.


640
00:32:16,666 --> 00:32:19,986
People can put up to 10 of their
favorite apps into the Dock,


641
00:32:20,496 --> 00:32:24,086
and every app in the Dock is
kept in memory to make getting


642
00:32:24,146 --> 00:32:28,856
from the Dock into an app fast.


643
00:32:29,786 --> 00:32:32,606
And what's shown are
snapshots from each app.


644
00:32:33,386 --> 00:32:35,206
These snapshots should
be designed


645
00:32:35,206 --> 00:32:37,196
to be informative
and glanceable.


646
00:32:37,786 --> 00:32:41,026
And snapshots from your app
can be regularly updated


647
00:32:41,316 --> 00:32:42,346
to keep them current.


648
00:32:43,456 --> 00:32:45,626
Apps in the Dock are
launched in the background


649
00:32:45,626 --> 00:32:46,716
at least once an hour.


650
00:32:47,156 --> 00:32:49,786
This lets you fetch new
data, update your app's UI,


651
00:32:49,876 --> 00:32:52,356
and request that the
system takes a new snapshot


652
00:32:52,686 --> 00:32:54,906
of your app if it's necessary.


653
00:32:55,976 --> 00:32:59,656
And when your app is viewed in
the Dock, it'll be woken up so


654
00:32:59,656 --> 00:33:03,126
that it can update its
snapshot if content is changed.


655
00:33:04,216 --> 00:33:06,736
Now when someone puts
your app in the Dock,


656
00:33:07,216 --> 00:33:08,236
you should be flattered.


657
00:33:08,896 --> 00:33:12,486
Being in the Dock means that
your app contains information


658
00:33:12,486 --> 00:33:14,916
that people want to be
regularly updated about.


659
00:33:15,796 --> 00:33:18,186
Because of this, it's
important that the snapshots


660
00:33:18,186 --> 00:33:21,816
of your app are not only
current but also relevant.


661
00:33:22,816 --> 00:33:26,056
Now, in some situations,
showing people the last screen


662
00:33:26,056 --> 00:33:29,436
that they saw when they were
using your app might not be


663
00:33:29,556 --> 00:33:30,276
that relevant.


664
00:33:31,046 --> 00:33:35,036
Fortunately, watchOS 3 provides
an API for navigating people


665
00:33:35,036 --> 00:33:37,156
to a different screen
than the one


666
00:33:37,156 --> 00:33:38,326
that they were last looking at.


667
00:33:39,066 --> 00:33:42,336
So, for instance,
imagine a baseball app


668
00:33:42,336 --> 00:33:45,496
that shows a list view of
current and upcoming games.


669
00:33:45,886 --> 00:33:48,996
And of course, each of these
is tapable so that you can go


670
00:33:48,996 --> 00:33:51,396
to a detail screen
about those games.


671
00:33:52,226 --> 00:33:56,716
Okay. Now, imagine yourself
as a user of this app.


672
00:33:57,526 --> 00:33:59,446
The last time you were in
the app, you were looking


673
00:33:59,446 --> 00:34:00,616
at this particular game.


674
00:34:01,196 --> 00:34:04,226
And when you exit out and
look at the app in the Dock,


675
00:34:04,916 --> 00:34:06,616
you probably expect to continue


676
00:34:06,616 --> 00:34:08,476
to see the details
about that game.


677
00:34:09,216 --> 00:34:11,735
And when the game
ends, go Giants.


678
00:34:12,376 --> 00:34:15,356
You probably still expect to see
this game in the detail view.


679
00:34:15,936 --> 00:34:17,376
But after a little while,


680
00:34:17,636 --> 00:34:20,036
the details about this
particular game become less


681
00:34:20,565 --> 00:34:21,766
and less relevant.


682
00:34:22,306 --> 00:34:24,085
You may have learned
about the final score


683
00:34:24,116 --> 00:34:26,755
from a notification the app
sends, or from a friend,


684
00:34:27,246 --> 00:34:28,616
on Twitter, in the news.


685
00:34:29,576 --> 00:34:33,896
At some point, the content here
becomes completely irrelevant.


686
00:34:34,166 --> 00:34:36,226
You're not interested
in that game at all.


687
00:34:36,226 --> 00:34:38,525
Perhaps you're going
to be more interested


688
00:34:38,525 --> 00:34:40,446
in seeing the next
day's schedule.


689
00:34:41,056 --> 00:34:44,286
Or if your favorite team is
playing a new game that's


690
00:34:44,286 --> 00:34:46,266
already started,
wouldn't you want


691
00:34:46,266 --> 00:34:48,255
to see the details
about that game?


692
00:34:49,156 --> 00:34:51,386
Now these are the sorts
of questions that you need


693
00:34:51,386 --> 00:34:53,516
to be asking about your app.


694
00:34:54,056 --> 00:34:55,335
And as you do so, I want you


695
00:34:55,335 --> 00:34:57,876
to consider the following
best practices.


696
00:34:59,296 --> 00:35:01,786
First and foremost,
your objective is


697
00:35:01,786 --> 00:35:04,876
to proactively anticipate
user interests and needs.


698
00:35:05,846 --> 00:35:08,896
Put yourself in their
place and think it through.


699
00:35:09,946 --> 00:35:13,446
Graphing events onto a timeline
is a very helpful technique


700
00:35:13,806 --> 00:35:14,546
for doing this.


701
00:35:15,316 --> 00:35:18,556
Plot out significant events
in time and then ask yourself,


702
00:35:19,056 --> 00:35:22,196
"How do these events influence
what people would want to know?"


703
00:35:23,086 --> 00:35:25,886
In the hypothetical baseball
app example I just went through,


704
00:35:25,886 --> 00:35:30,176
I speculated that people will
want to see game details around


705
00:35:30,176 --> 00:35:32,346
or during the times where
games are being played.


706
00:35:33,306 --> 00:35:36,106
While, at other times, those
same people might want to know


707
00:35:36,106 --> 00:35:37,896
about the overall
league schedule.


708
00:35:38,836 --> 00:35:42,736
However, this is probably
a gross oversimplification.


709
00:35:43,446 --> 00:35:45,936
Individual preferences
can have a big impact


710
00:35:45,936 --> 00:35:47,636
on what's most relevant
to people.


711
00:35:48,386 --> 00:35:51,576
For instance, a fair-weather
fan who only cares


712
00:35:51,576 --> 00:35:55,066
about one team might expect to
see something totally different


713
00:35:55,066 --> 00:35:58,466
than a hardcore baseball fanatic
who wants to follow every game.


714
00:35:59,056 --> 00:36:01,816
And for other apps, other
contextual factors like time


715
00:36:01,816 --> 00:36:04,456
of day and location
can have a huge impact


716
00:36:04,786 --> 00:36:06,136
on what people want to see.


717
00:36:07,216 --> 00:36:10,266
Now, as a general rule,
people don't always love it


718
00:36:10,266 --> 00:36:12,596
when an app changes
in unpredictable ways


719
00:36:12,596 --> 00:36:13,966
and the state isn't saved.


720
00:36:14,066 --> 00:36:16,586
And it can be confusing
or disorienting.


721
00:36:17,076 --> 00:36:19,396
So if you choose to navigate
people to a different view,


722
00:36:19,396 --> 00:36:22,296
you want to do so in a way
that's logical and predictable.


723
00:36:22,996 --> 00:36:25,296
The hope is that
people won't even stop


724
00:36:25,296 --> 00:36:26,646
to realize what's going on.


725
00:36:27,056 --> 00:36:28,386
But if they do, they
should be able


726
00:36:28,386 --> 00:36:31,276
to make some really accurate
guesses about why the state


727
00:36:31,276 --> 00:36:34,166
of your app's UI changes
from time to time.


728
00:36:35,186 --> 00:36:36,476
And I would also recommend


729
00:36:36,476 --> 00:36:39,626
against making the snapshot
look radically different


730
00:36:39,996 --> 00:36:41,036
from your app.


731
00:36:41,606 --> 00:36:43,976
This can make your app a
little bit less recognizable,


732
00:36:43,976 --> 00:36:45,106
and may be harder to find.


733
00:36:45,696 --> 00:36:49,376
Now it's totally fine to just
focus on some information


734
00:36:49,686 --> 00:36:52,016
or maybe hide some stuff
that isn't as relevant


735
00:36:52,016 --> 00:36:53,246
when your app is
shown in the Dock.


736
00:36:53,696 --> 00:36:55,656
But, you know, if you want
to exaggerate the size


737
00:36:55,656 --> 00:36:58,226
of certain things for
legibility that might be fine.


738
00:36:58,766 --> 00:37:01,066
But don't make it look
completely different.


739
00:37:02,186 --> 00:37:04,706
Now next, avoid showing
things like alerts,


740
00:37:04,706 --> 00:37:08,186
or confirmation dialogues, or
error states in your snapshot.


741
00:37:09,036 --> 00:37:10,156
When seen out of context,


742
00:37:10,506 --> 00:37:12,836
these sorts of screens
may not be very helpful.


743
00:37:12,836 --> 00:37:15,416
And in fact, they might
be easily misinterpreted


744
00:37:15,416 --> 00:37:16,606
or make no sense at all.


745
00:37:17,216 --> 00:37:18,376
So, depending on the situation,


746
00:37:18,376 --> 00:37:20,836
consider programmatically
dismissing these screens


747
00:37:21,166 --> 00:37:23,176
after some period of time.


748
00:37:23,466 --> 00:37:27,446
And lastly, optimize your app
interface for being displayed


749
00:37:27,446 --> 00:37:28,766
in a miniaturized form.


750
00:37:29,576 --> 00:37:32,716
Now, in the Dock, apps
get scaled down to --


751
00:37:32,716 --> 00:37:34,476
and this is, like, just
a ballpark rough figure


752
00:37:34,476 --> 00:37:39,946
but 62.4851% of their
full size UI.


753
00:37:39,946 --> 00:37:42,066
You'll want to avoid
text and graphics


754
00:37:42,066 --> 00:37:44,466
from becoming illegible
at this small size.


755
00:37:45,076 --> 00:37:47,666
Now for this very reason, the
font weight for status bars


756
00:37:47,666 --> 00:37:50,366
and a lot of text in the
built-in apps was increased


757
00:37:50,366 --> 00:37:51,836
from regular to medium.


758
00:37:52,466 --> 00:37:55,276
At smaller sizes, bolder
fonts are more legible.


759
00:37:56,336 --> 00:38:00,686
And for really key information,
try using large format type.


760
00:38:01,306 --> 00:38:04,036
This may require removing some
stuff out of your interface


761
00:38:04,036 --> 00:38:07,376
to make space, but that's not
such a bad thing to do anyway.


762
00:38:08,556 --> 00:38:11,616
Now, by following these
guidelines, your apps will be


763
00:38:11,616 --> 00:38:13,786
as glanceable as
possible in the Dock.


764
00:38:14,996 --> 00:38:16,226
And speaking of glanceable,


765
00:38:16,806 --> 00:38:18,966
some of you may be
wondering about Glances.


766
00:38:20,336 --> 00:38:24,026
Glances were designed to be a
browsable collection of timely


767
00:38:24,026 --> 00:38:25,826
and contextually-relevant
moments


768
00:38:25,826 --> 00:38:27,216
from the user's favorite apps.


769
00:38:27,886 --> 00:38:30,776
Not coincidentally, the Dock
serves essentially the same


770
00:38:30,776 --> 00:38:34,856
purpose while simplifying the
overall platform experience.


771
00:38:35,706 --> 00:38:38,266
In a way, Glances
evolved into the Dock.


772
00:38:38,816 --> 00:38:41,756
And the Dock, in turn, made
Glances kind of redundant.


773
00:38:42,236 --> 00:38:44,096
So they were removed
from watchOS.


774
00:38:44,836 --> 00:38:47,626
With that said, the time and
thought that you may have put


775
00:38:47,626 --> 00:38:52,776
into designing your Glances is
totally applicable to thinking


776
00:38:52,776 --> 00:38:55,986
about how to design your app
to look great in the Dock.


777
00:38:57,516 --> 00:39:04,456
Okay. So, the next big change
to apps on watchOS 3 is a simple


778
00:39:04,456 --> 00:39:08,766
but powerful improvement to how
people navigate within apps.


779
00:39:10,266 --> 00:39:13,546
Most existing Apple Watch apps
are structured hierarchically.


780
00:39:14,006 --> 00:39:17,236
Basically, a top-level list
and a bunch of detail screens.


781
00:39:17,626 --> 00:39:19,736
Now that's not so
surprising because we tend


782
00:39:19,736 --> 00:39:21,536
to organize data hierarchically.


783
00:39:22,196 --> 00:39:23,566
Unfortunately, navigating


784
00:39:23,566 --> 00:39:26,346
between those screens can
be inefficient as you have


785
00:39:26,396 --> 00:39:30,846
to return to that top-level
view every single time.


786
00:39:31,066 --> 00:39:33,746
So, for example, if I want
to get to those detail views,


787
00:39:33,746 --> 00:39:36,256
I select an item,
drill in, go back,


788
00:39:36,446 --> 00:39:38,626
select another item,
drill in, go back.


789
00:39:39,116 --> 00:39:40,136
So forth and so on.


790
00:39:40,866 --> 00:39:43,686
It's kind of like being in a
room in a house and you want


791
00:39:43,686 --> 00:39:45,176
to get to the room
right next to you.


792
00:39:45,176 --> 00:39:47,866
But in order to get there, you
have to go up a flight of stairs


793
00:39:48,076 --> 00:39:50,056
and then back down
another flight of stairs.


794
00:39:50,606 --> 00:39:52,126
It'd be so much more efficient


795
00:39:52,126 --> 00:39:54,926
if there was just a
door to take you there.


796
00:39:55,666 --> 00:39:58,806
So in watchOS 3, we now
have doors, I guess.


797
00:39:59,246 --> 00:40:02,836
It's now possible to navigate
directly from one detail view


798
00:40:02,836 --> 00:40:06,626
to another by swiping vertically
or using the Digital Crown.


799
00:40:07,556 --> 00:40:10,576
Think of it like vertical paging
from one detail to the next.


800
00:40:11,466 --> 00:40:14,326
Now if your app is already
structured hierarchically,


801
00:40:14,716 --> 00:40:17,146
you should really consider
enabling this feature.


802
00:40:17,146 --> 00:40:19,376
But one thing to point out is


803
00:40:19,376 --> 00:40:21,006
that this behavior
will only work


804
00:40:21,316 --> 00:40:24,166
when the detail screens are
not taller than the display.


805
00:40:25,106 --> 00:40:26,736
So with the previous
version of Weather,


806
00:40:26,736 --> 00:40:29,886
the 10-day forecast made
the screen a lot taller.


807
00:40:29,886 --> 00:40:33,076
It was accessed by scrolling
down from today's forecast.


808
00:40:33,716 --> 00:40:36,436
In the new version of Weather,
that information was pushed


809
00:40:36,436 --> 00:40:38,386
to a child view so that
everything could fit


810
00:40:38,386 --> 00:40:39,236
on screen at once.


811
00:40:40,096 --> 00:40:42,426
So if you want to opt into
this behavior, you may have


812
00:40:42,426 --> 00:40:45,016
to refactor your design
to make everything fit.


813
00:40:45,016 --> 00:40:48,906
And for those of you
with a page-based app,


814
00:40:49,786 --> 00:40:53,006
now is a really good time
to switch to hierarchy


815
00:40:53,006 --> 00:40:54,326
or to consider doing so.


816
00:40:54,886 --> 00:40:57,506
Navigating with the Digital
Crown is far more efficient


817
00:40:57,756 --> 00:41:00,426
than swiping horizontally
from one page to another.


818
00:41:00,996 --> 00:41:03,666
And page-based apps do
not support hierarchy.


819
00:41:04,076 --> 00:41:06,196
Obviously, that's not
a limitation here.


820
00:41:06,976 --> 00:41:09,456
And having a top-level
list view of a lot


821
00:41:09,456 --> 00:41:11,876
of detail items can
be really useful.


822
00:41:12,566 --> 00:41:16,076
By moving from a page-based
structure to a hierarchical one,


823
00:41:16,456 --> 00:41:18,556
our Weather App can
show the current high


824
00:41:18,556 --> 00:41:21,206
and low temperatures for
multiple cities at once.


825
00:41:21,756 --> 00:41:22,826
This is very handy.


826
00:41:24,766 --> 00:41:27,976
Okay. Now, the third
big change for apps


827
00:41:28,026 --> 00:41:30,756
on watchOS 3 relates
to stickiness.


828
00:41:31,416 --> 00:41:33,506
Now besides just being
a lot of fun to say,


829
00:41:33,976 --> 00:41:36,686
stickiness describes how
long an app will remain


830
00:41:36,686 --> 00:41:37,506
in the foreground.


831
00:41:38,016 --> 00:41:41,676
On watchOS 3, apps can
stick around for 8 minutes,


832
00:41:41,976 --> 00:41:43,786
which is quite a bit
longer than before.


833
00:41:44,496 --> 00:41:46,156
So when someone is
using your Watch app


834
00:41:46,456 --> 00:41:47,656
and then drops their wrist,


835
00:41:47,986 --> 00:41:49,976
your app will be the
first thing they see


836
00:41:49,976 --> 00:41:52,006
when they raise their
wrist again as long


837
00:41:52,006 --> 00:41:54,026
as they do so within 8 minutes.


838
00:41:54,856 --> 00:41:56,736
In fact, with every
raise of the wrist,


839
00:41:56,736 --> 00:41:59,176
that timer gets reset
back to 8 minutes.


840
00:42:00,056 --> 00:42:03,706
Now making apps stickier is
a really significant change.


841
00:42:04,276 --> 00:42:07,826
Apple Watch apps are intended
to compliment activities


842
00:42:08,086 --> 00:42:11,686
that can occur over many
minutes of time, or even hours.


843
00:42:12,236 --> 00:42:15,646
But during those periods, the
Watch display can be asleep


844
00:42:15,736 --> 00:42:17,396
for many minutes at a time.


845
00:42:18,246 --> 00:42:20,756
So, one example might
be a grocery list app.


846
00:42:21,036 --> 00:42:24,666
When shopping, most of your
time is spent checking prices,


847
00:42:24,666 --> 00:42:26,696
reading labels, inspecting
produce,


848
00:42:27,036 --> 00:42:29,056
trying to avoid crashing
into other shopping carts,


849
00:42:29,306 --> 00:42:30,036
and trying to look cool.


850
00:42:30,836 --> 00:42:33,366
There are so many activities
that are just like this.


851
00:42:33,766 --> 00:42:35,626
They're what we might
call sessions


852
00:42:35,626 --> 00:42:37,516
or session-based activities.


853
00:42:38,266 --> 00:42:42,806
Cooking dinner, playing sports,
working out, getting directions.


854
00:42:43,366 --> 00:42:46,186
These things all take
extended periods of time


855
00:42:46,466 --> 00:42:48,996
in which people will
periodically check their watch


856
00:42:49,386 --> 00:42:50,056
to stay on task.


857
00:42:51,196 --> 00:42:54,596
Stronger stickiness puts you
immediately back into the app


858
00:42:54,836 --> 00:42:57,956
where you left off, which
saves a lot of time.


859
00:42:59,186 --> 00:43:02,926
Okay. Now, the fourth
major watchOS change


860
00:43:03,116 --> 00:43:05,066
for apps involves
letting people know


861
00:43:05,066 --> 00:43:07,426
when it's okay to
drop their wrist.


862
00:43:08,416 --> 00:43:10,716
When people initiate
a task in your app,


863
00:43:10,716 --> 00:43:13,156
they expect to get
confirmation feedback.


864
00:43:13,986 --> 00:43:16,996
Did the task succeed
or did it fail?


865
00:43:17,676 --> 00:43:21,536
Unfortunately, providing
definitive success of failure,


866
00:43:21,816 --> 00:43:25,036
conformation of success or
failure can take a while.


867
00:43:25,786 --> 00:43:28,386
Slow networks, weak
Wi-Fi signal,


868
00:43:28,386 --> 00:43:32,256
and long Bluetooth ranges might
create communication delays


869
00:43:35,956 --> 00:43:37,456
or remote delays.


870
00:43:38,156 --> 00:43:40,906
Apps that allow people to
control physical devices,


871
00:43:41,156 --> 00:43:44,766
like garage doors or window
blinds, might be unable


872
00:43:44,766 --> 00:43:46,336
to provide completion feedback


873
00:43:46,636 --> 00:43:49,846
until those devices have
fully opened or closed.


874
00:43:50,746 --> 00:43:53,646
And some services
such as food delivery


875
00:43:53,646 --> 00:43:57,096
or ride-ordering apps
may involve communication


876
00:43:57,096 --> 00:43:57,976
with other people.


877
00:43:58,456 --> 00:44:01,466
And as we all know, people
do not always get back


878
00:44:01,466 --> 00:44:02,206
to you promptly.


879
00:44:03,466 --> 00:44:06,836
Now on an iPhone or a Mac,


880
00:44:07,156 --> 00:44:09,416
you would ordinarily
keep people engaged


881
00:44:09,416 --> 00:44:12,256
with your app while
you're trying to get them


882
00:44:12,256 --> 00:44:13,476
that confirmation feedback.


883
00:44:14,396 --> 00:44:17,186
Progress indicators are a way
to hold people's attention.


884
00:44:17,556 --> 00:44:19,536
They make people
anticipate feedback.


885
00:44:20,156 --> 00:44:21,696
They basically say,
"Hold on a second.


886
00:44:21,736 --> 00:44:23,436
I'll be right with you."


887
00:44:23,586 --> 00:44:26,476
But, however, it might
be more than a second.


888
00:44:26,926 --> 00:44:29,426
All the while, the person
who's using your app has their


889
00:44:29,426 --> 00:44:30,126
wrist raised.


890
00:44:30,506 --> 00:44:32,146
Their shoulder starts
to get a little tired.


891
00:44:32,626 --> 00:44:34,606
Seconds start to
feel like minutes.


892
00:44:35,046 --> 00:44:36,656
It really starts to slow down.


893
00:44:37,536 --> 00:44:41,526
So, to avoid this
situation on Apple Watch,


894
00:44:41,916 --> 00:44:45,426
you should use an NSURL
background download task


895
00:44:45,696 --> 00:44:47,416
to communicate with your server.


896
00:44:48,046 --> 00:44:49,286
This does two things.


897
00:44:49,896 --> 00:44:52,526
First, it helps to make sure
that you can communicate


898
00:44:52,526 --> 00:44:55,196
to your server before
your app gets suspended.


899
00:44:55,806 --> 00:44:57,996
And second, when
your server responds,


900
00:44:58,046 --> 00:45:00,976
Apple Watch will
wake up your app.


901
00:45:00,976 --> 00:45:04,156
And then, in turn, you can
quickly run in the background


902
00:45:04,466 --> 00:45:06,856
and do something like
send a local notification,


903
00:45:07,156 --> 00:45:10,526
which is also new to watchOS
3, to provide feedback


904
00:45:10,526 --> 00:45:12,416
to the person who's
using your app.


905
00:45:12,726 --> 00:45:17,176
So, for example, say you're
working on a food-ordering app.


906
00:45:17,216 --> 00:45:20,306
When someone places a
food order, your app needs


907
00:45:20,306 --> 00:45:22,636
to make sure that the
restaurant can fulfill the order


908
00:45:22,976 --> 00:45:25,526
and provide an estimated
delivery time.


909
00:45:26,256 --> 00:45:30,396
You wouldn't want people to keep
waiting while your app figures


910
00:45:30,396 --> 00:45:31,246
these things out.


911
00:45:32,026 --> 00:45:35,726
Instead, it's way better to
provide immediate feedback


912
00:45:35,726 --> 00:45:37,796
that their order has been
sent to the restaurant.


913
00:45:38,456 --> 00:45:40,986
You can also let people know,
you also should let people know.


914
00:45:41,336 --> 00:45:43,266
That once the restaurant
accepts the order


915
00:45:43,266 --> 00:45:45,406
and provides an estimated
delivery time,


916
00:45:45,846 --> 00:45:47,816
you'll send a final
confirmation to them


917
00:45:47,816 --> 00:45:50,076
that the order has been
processed and is on its way.


918
00:45:51,356 --> 00:45:54,826
Now, if you've done this
right, people should feel free


919
00:45:55,296 --> 00:45:59,746
to drop their wrist, trusting
that your app is working hard


920
00:46:00,066 --> 00:46:02,236
to complete the task that
you've assigned to it.


921
00:46:02,956 --> 00:46:07,236
And if all goes well, you send
a local notification to people


922
00:46:07,236 --> 00:46:09,616
to let them know that the
order was successfully placed


923
00:46:09,916 --> 00:46:10,906
and it is on its way.


924
00:46:11,976 --> 00:46:15,376
And if there's a problem,
clearly state what went wrong


925
00:46:15,376 --> 00:46:17,626
and help people address
the issue


926
00:46:17,846 --> 00:46:19,946
with minimal additional
interaction.


927
00:46:20,746 --> 00:46:24,096
Now, the key to making
all of this work is trust.


928
00:46:25,006 --> 00:46:28,976
People need to trust that your
app works, that it won't crash,


929
00:46:29,326 --> 00:46:31,836
and that you'll make sure
that they stay informed


930
00:46:31,836 --> 00:46:34,876
about whether the task
succeeded or failed.


931
00:46:35,746 --> 00:46:38,826
And related to trust, you
never want to mislead people


932
00:46:38,826 --> 00:46:40,876
into thinking that a
task is fully complete


933
00:46:41,246 --> 00:46:43,216
if it's actually
still in progress.


934
00:46:43,816 --> 00:46:47,426
That's basically lying, which
is not good for building trust.


935
00:46:47,816 --> 00:46:52,296
Okay, so that was a lot
of new stuff about apps.


936
00:46:52,656 --> 00:46:55,366
And there's still a little bit
more to cover, but I just wanted


937
00:46:55,366 --> 00:46:57,346
to pause here for a
second and take stock.


938
00:46:57,916 --> 00:47:02,666
We looked at the new Dock
UI and how to make your app


939
00:47:02,666 --> 00:47:04,916
as glanceable and
responsive as possible.


940
00:47:05,606 --> 00:47:07,586
We saw how the Digital
Crown will make navigating


941
00:47:07,586 --> 00:47:08,856
between detail screens


942
00:47:09,156 --> 00:47:11,746
and hierarchical apps
way more efficient.


943
00:47:12,396 --> 00:47:14,936
We learned how session-based
apps will benefit


944
00:47:14,976 --> 00:47:16,696
from changes to app stickiness.


945
00:47:17,326 --> 00:47:19,096
And we just saw how the ability


946
00:47:19,096 --> 00:47:21,526
to schedule local notifications
while your app runs


947
00:47:21,526 --> 00:47:23,436
in the background
can give the people


948
00:47:23,436 --> 00:47:26,416
who use your app the
confidence to drop their wrist


949
00:47:26,746 --> 00:47:27,936
to keep interactions quick.


950
00:47:28,786 --> 00:47:30,526
Now we think that
these improvements


951
00:47:30,526 --> 00:47:34,426
to watchOS will empower you to
create streamline user flows


952
00:47:34,866 --> 00:47:37,256
that shorten user
interaction times.


953
00:47:37,686 --> 00:47:41,666
Now, if the Apple Watch
team had stopped there,


954
00:47:42,046 --> 00:47:44,276
this would have been a
really significant release.


955
00:47:44,666 --> 00:47:46,936
I would have had plenty to
talk to you about today.


956
00:47:47,616 --> 00:47:48,746
But they did not stop there.


957
00:47:49,066 --> 00:47:50,996
They're like a bunch
of overachievers.


958
00:47:51,066 --> 00:47:53,776
The kind of people who made me
look really bad in high school.


959
00:47:54,426 --> 00:47:57,646
In watchOS 3, there's
some really cool new APIs


960
00:47:57,646 --> 00:48:00,436
and frameworks to let you
do some amazing things.


961
00:48:01,056 --> 00:48:04,946
For starters, watchOS 3 now
has SpriteKit and SceneKit,


962
00:48:05,326 --> 00:48:07,676
our 2D and 3D graphics
frameworks.


963
00:48:08,216 --> 00:48:11,686
SpriteKit and SceneKit let you
render and animate graphics.


964
00:48:12,476 --> 00:48:15,746
They let you make elements
respond to gestures,


965
00:48:15,746 --> 00:48:18,286
or to animate things
programmatically.


966
00:48:19,316 --> 00:48:21,296
And you can implement
physics facts.


967
00:48:21,476 --> 00:48:22,626
I mean, it's crazy.


968
00:48:22,986 --> 00:48:25,926
Force fields, detect
collisions, and more.


969
00:48:26,736 --> 00:48:29,256
Now you might think about these
things as being technologies


970
00:48:29,256 --> 00:48:32,566
for games, but you can
use them in apps as well.


971
00:48:33,436 --> 00:48:36,296
And watchOS 3 has
gesture support.


972
00:48:36,896 --> 00:48:40,116
Up until now, touch input
was handled indirectly.


973
00:48:40,576 --> 00:48:43,386
The controls and views that you
had in your app would respond


974
00:48:43,386 --> 00:48:45,006
to touch events on your behalf.


975
00:48:45,426 --> 00:48:48,306
Now, you have the ability to
do something totally custom.


976
00:48:49,136 --> 00:48:52,866
So you can do something
custom with tap, or swipe,


977
00:48:53,896 --> 00:48:57,306
or pan, or long press.


978
00:48:58,326 --> 00:49:03,576
This one takes a
little bit of time.


979
00:49:03,746 --> 00:49:05,936
Okay, in watchOS 3,
you now have access


980
00:49:05,936 --> 00:49:07,596
to raw Digital Crown events.


981
00:49:08,166 --> 00:49:11,286
You can use this data to
alter the color, dimensions,


982
00:49:11,286 --> 00:49:13,926
and other visual
properties of UI elements.


983
00:49:14,476 --> 00:49:16,216
Or, you can use the
Digital Crown


984
00:49:16,216 --> 00:49:18,776
for changing selection
or modifying values.


985
00:49:19,556 --> 00:49:22,926
So, what can you do with
all of these capabilities?


986
00:49:23,676 --> 00:49:25,786
Well, for starters,
many of you have wanted


987
00:49:25,786 --> 00:49:28,656
to visualize data
using a ring or an arc.


988
00:49:29,206 --> 00:49:30,896
With SpriteKit, you
can draw an element


989
00:49:30,896 --> 00:49:33,556
like this programmatically so
that you can easily animate


990
00:49:33,556 --> 00:49:36,126
between any two arbitrary
values.


991
00:49:37,116 --> 00:49:38,936
You can use the default
ease-in curve


992
00:49:38,936 --> 00:49:41,866
which provides a really
nice ease in and ease out.


993
00:49:42,926 --> 00:49:45,736
Or, you can do something
custom with ease-in curves


994
00:49:45,736 --> 00:49:48,566
for a bouncy animation,
or really any kind


995
00:49:48,566 --> 00:49:49,656
of animation that you'd like.


996
00:49:50,296 --> 00:49:52,536
There's a ton of open
source ease-in curves made


997
00:49:52,536 --> 00:49:53,936
by the very generous people


998
00:49:53,936 --> 00:49:55,396
in the SpriteKit
developer community.


999
00:49:55,396 --> 00:49:59,306
And you can even do things
like modify the fill color


1000
00:49:59,306 --> 00:50:01,626
of the rings to reflect
the current value.


1001
00:50:03,046 --> 00:50:06,386
Data visualization, like charts
and graphs, can really come


1002
00:50:06,386 --> 00:50:07,686
to life with animation.


1003
00:50:08,366 --> 00:50:10,156
By drawing this chart
programmatically,


1004
00:50:10,436 --> 00:50:13,466
we can animate the built-in
to add visual interest,


1005
00:50:14,116 --> 00:50:16,796
or we can use animation
to draw people's attention


1006
00:50:16,796 --> 00:50:18,476
to a particular part
of the chart.


1007
00:50:19,336 --> 00:50:20,856
SpriteKit properties
are mutable,


1008
00:50:20,856 --> 00:50:23,066
so you can easily
repurpose one chart


1009
00:50:23,346 --> 00:50:25,926
to display different
properties based on user input.


1010
00:50:26,866 --> 00:50:27,966
Or, perhaps you want


1011
00:50:27,966 --> 00:50:31,126
to let people inspect
different values along the graph


1012
00:50:31,186 --> 00:50:32,176
with a pan gesture.


1013
00:50:32,756 --> 00:50:35,596
Totally. Or, better still,


1014
00:50:35,596 --> 00:50:37,706
you can let people
use the Digital Crown


1015
00:50:38,036 --> 00:50:39,066
to do the same thing.


1016
00:50:39,756 --> 00:50:42,386
Or, let people zoom
into the chart.


1017
00:50:42,996 --> 00:50:45,846
Or, maybe let people scroll.


1018
00:50:45,846 --> 00:50:50,236
And since you have full
control over the Digital Crown


1019
00:50:50,236 --> 00:50:52,646
and how the graph responds,
you can control how fast


1020
00:50:52,646 --> 00:50:55,676
or slowly things happen
in response to rotation.


1021
00:50:56,456 --> 00:50:57,496
Now, I could go on.


1022
00:50:57,846 --> 00:51:00,166
This is a lot of fun to just
try to think about this stuff,


1023
00:51:00,626 --> 00:51:02,856
but that would take all of
the fun out of it for you.


1024
00:51:03,756 --> 00:51:06,266
Now, I encourage you to
learn more about SpriteKit


1025
00:51:06,266 --> 00:51:09,456
and SceneKit, and experiment
with using these technologies


1026
00:51:09,766 --> 00:51:12,906
to create richer and more
meaningful experiences.


1027
00:51:13,666 --> 00:51:15,066
But just remember,


1028
00:51:15,876 --> 00:51:18,846
with increased freedom comes
increased responsibility.


1029
00:51:19,906 --> 00:51:23,506
Animating something just because
it looks cool is really not a


1030
00:51:23,506 --> 00:51:24,146
good reason.


1031
00:51:24,806 --> 00:51:28,196
When used well, animation
helps communicate meaning more


1032
00:51:28,196 --> 00:51:31,366
quickly, and thereby
shortens interaction times.


1033
00:51:32,066 --> 00:51:35,966
Similarly, making a graph
interactive should provide a


1034
00:51:36,016 --> 00:51:38,926
richer and more informative
user experience,


1035
00:51:39,796 --> 00:51:43,816
and ideally reduce the need for
more complicated or dense UIs.


1036
00:51:45,696 --> 00:51:49,716
Okay. So, we've covered a lot
of ground today, but I did want


1037
00:51:49,716 --> 00:51:51,636
to leave you with
one final thought


1038
00:51:51,946 --> 00:51:54,036
about designing your watch app.


1039
00:51:55,486 --> 00:51:59,696
Making a great Apple Watch
experience requires keeping


1040
00:51:59,786 --> 00:52:00,756
things simple.


1041
00:52:01,736 --> 00:52:05,286
But making something simple
is not so simple to do.


1042
00:52:06,106 --> 00:52:08,146
And bonus points if you
know where this is from.


1043
00:52:09,266 --> 00:52:12,476
Keeping things simple
involves making hard choices


1044
00:52:12,766 --> 00:52:14,586
about what your app will do.


1045
00:52:15,246 --> 00:52:17,066
It means saying no to a lot


1046
00:52:17,066 --> 00:52:19,216
of really interesting-sounding
ideas.


1047
00:52:20,016 --> 00:52:22,906
But just because you can
do something does not mean


1048
00:52:22,906 --> 00:52:23,626
that you should.


1049
00:52:24,706 --> 00:52:28,286
Keeping things simple
also means thinking deeply


1050
00:52:28,446 --> 00:52:31,276
about the journey that people
take throughout the course


1051
00:52:31,276 --> 00:52:31,766
of their day.


1052
00:52:32,536 --> 00:52:35,046
People will experience
your app over time.


1053
00:52:35,516 --> 00:52:38,566
And the way that you design
your app should be a reflection


1054
00:52:38,566 --> 00:52:39,056
of this.


1055
00:52:39,746 --> 00:52:42,906
Think less in terms of
static screens and more


1056
00:52:42,906 --> 00:52:44,526
in terms of user flows.


1057
00:52:45,436 --> 00:52:48,506
Account for the fact that
these flows are not continuous,


1058
00:52:48,916 --> 00:52:50,676
uninterrupted experiences.


1059
00:52:51,216 --> 00:52:54,506
People will drop in at arbitrary
times throughout the day.


1060
00:52:55,066 --> 00:52:58,996
And when they do, they'll always
expect your app to be current


1061
00:52:59,586 --> 00:53:02,296
and relevant to their
constantly-shifting needs.


1062
00:53:03,316 --> 00:53:06,076
Your app should anticipate
what people want to do


1063
00:53:06,076 --> 00:53:10,276
at any given moment, and attempt
to proactively offer information


1064
00:53:11,606 --> 00:53:14,416
and functionality that's
contextually relevant


1065
00:53:14,536 --> 00:53:15,286
and timely.


1066
00:53:16,036 --> 00:53:18,696
Now doing that right
is not so simple.


1067
00:53:20,116 --> 00:53:23,346
Designing for Apple Watch
is different than designing


1068
00:53:23,346 --> 00:53:27,766
for an iPhone, an
iPad, Apple TV, or Mac.


1069
00:53:28,986 --> 00:53:32,226
What we know about
designing and building apps


1070
00:53:32,706 --> 00:53:35,346
for these devices has
shaped our notions


1071
00:53:35,346 --> 00:53:40,046
about how complex apps should
be, how people navigate them,


1072
00:53:40,526 --> 00:53:44,176
and how much time they're
willing to engage with your app.


1073
00:53:45,096 --> 00:53:47,346
Try to recognize and
challenge your own


1074
00:53:47,346 --> 00:53:49,026
deeply-rooted assumptions.


1075
00:53:49,766 --> 00:53:51,496
This is easier said than done.


1076
00:53:51,636 --> 00:53:55,556
I know. But this is a crucial
step towards making a really


1077
00:53:55,556 --> 00:53:57,676
great watch app.


1078
00:53:57,736 --> 00:54:00,766
Now, for Apple Watch,
perhaps the best advice


1079
00:54:00,836 --> 00:54:03,466
that I can offer you
is to think in terms


1080
00:54:03,466 --> 00:54:05,856
of features and not apps.


1081
00:54:06,726 --> 00:54:10,486
Making something great for Apple
Watch may involve offering just


1082
00:54:10,876 --> 00:54:12,296
one feature.


1083
00:54:13,236 --> 00:54:15,966
Just Press Record is
essentially just one feature.


1084
00:54:16,296 --> 00:54:17,936
The complication is
the Record button,


1085
00:54:17,936 --> 00:54:21,236
and the app is the recording
interface and Stop button.


1086
00:54:21,866 --> 00:54:22,816
It works great.


1087
00:54:23,296 --> 00:54:26,736
And I literally just described
the app in one sentence.


1088
00:54:28,036 --> 00:54:30,846
Two seconds goes by in a flash.


1089
00:54:31,676 --> 00:54:33,786
There's nothing simple
about designing


1090
00:54:33,786 --> 00:54:35,646
for such brief interactions.


1091
00:54:36,246 --> 00:54:38,036
But I hope the concepts
and techniques


1092
00:54:38,136 --> 00:54:41,936
that we discussed today will
empower you to do just that.


1093
00:54:43,096 --> 00:54:46,236
And I'm really excited to
see what you can do with all


1094
00:54:46,236 --> 00:54:48,206
of the new capabilities
in watchOS 3.


1095
00:54:48,816 --> 00:54:50,716
A lot of people worked
hard on this release,


1096
00:54:51,016 --> 00:54:53,726
and all of that work was in
the service of helping you


1097
00:54:53,726 --> 00:54:57,456
to build more innovative,
delightful,


1098
00:54:57,456 --> 00:55:00,166
and platform-defining
experiences.


1099
00:55:01,246 --> 00:55:04,136
Okay. So for more information
about what we covered today,


1100
00:55:04,456 --> 00:55:05,716
please check out the video page


1101
00:55:05,716 --> 00:55:07,236
where there's a ton
of extra resources.


1102
00:55:07,926 --> 00:55:09,736
Again, definitely go and check


1103
00:55:09,736 --> 00:55:11,916
out the watchOS Human
Interface Guidelines.


1104
00:55:12,276 --> 00:55:14,556
There's a ton of really
great resources there.


1105
00:55:14,716 --> 00:55:17,536
And we're going to continue
updating this over the summer,


1106
00:55:17,536 --> 00:55:18,886
so check in regularly.


1107
00:55:19,436 --> 00:55:22,596
We also have a lot of great
Watch engineering sessions.


1108
00:55:22,956 --> 00:55:24,426
I would definitely
recommend going and checking


1109
00:55:24,426 --> 00:55:27,126
out SpriteKit one and watching
some of the videos of the ones


1110
00:55:27,126 --> 00:55:29,336
that have already happened.


1111
00:55:29,336 --> 00:55:32,136
And this year, we had a lot of
really good design sessions.


1112
00:55:32,136 --> 00:55:33,136
Some of them are still to come.


1113
00:55:33,576 --> 00:55:36,386
I highly recommend Inclusive
App Design, which will help you


1114
00:55:36,656 --> 00:55:40,486
to design for accessibility
and to be really great


1115
00:55:40,486 --> 00:55:41,666
for people around the world.


1116
00:55:41,796 --> 00:55:44,256
I also recommend the
video this morning


1117
00:55:44,386 --> 00:55:46,076
about Typography and Fonts.


1118
00:55:46,076 --> 00:55:47,726
And there's one more
design session


1119
00:55:48,016 --> 00:55:50,696
about Iterative UI Designs
that you can take your ideas


1120
00:55:50,946 --> 00:55:53,626
and refine them and come up with
something that's really awesome.


1121
00:55:53,816 --> 00:55:55,816
With that, thank you
very much for your time.


1122
00:55:57,516 --> 00:56:01,500
[ Applause ]

