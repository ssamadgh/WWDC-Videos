1
00:00:07,516 --> 00:00:16,500
[ Music ]


2
00:00:20,516 --> 00:00:20,896
>> Good morning.


3
00:00:21,666 --> 00:00:21,896
Wow.


4
00:00:22,636 --> 00:00:22,976
Thank you.


5
00:00:23,516 --> 00:00:26,500
[ Applause ]


6
00:00:27,466 --> 00:00:28,646
Thank you, very much.


7
00:00:28,646 --> 00:00:29,986
And once again, welcome to your


8
00:00:29,986 --> 00:00:30,866
first session at WWDC.


9
00:00:30,866 --> 00:00:32,806
My name is Joaquim.


10
00:00:32,806 --> 00:00:33,836
I don't think I have to


11
00:00:33,836 --> 00:00:34,926
reintroduce myself.


12
00:00:35,186 --> 00:00:37,406
Karan, Dongyuan, and I are


13
00:00:37,406 --> 00:00:38,486
really excited to talk to you


14
00:00:38,486 --> 00:00:39,706
about internationalization, at


15
00:00:39,706 --> 00:00:40,506
long last.


16
00:00:40,986 --> 00:00:42,326
So, what are we going to talk


17
00:00:42,326 --> 00:00:42,566
about?


18
00:00:42,566 --> 00:00:43,346
I'm going to do a brief


19
00:00:43,346 --> 00:00:44,476
introduction, like I started


20
00:00:44,476 --> 00:00:44,866
doing.


21
00:00:44,906 --> 00:00:46,856
And we're also going to do some


22
00:00:46,856 --> 00:00:48,146
deep dives on making your app's


23
00:00:48,146 --> 00:00:49,066
layout adaptive.


24
00:00:49,506 --> 00:00:50,976
And also, cover some really fun


25
00:00:50,976 --> 00:00:54,636
discussions on text, as well.


26
00:00:54,826 --> 00:00:57,016
So, why is this important?


27
00:00:57,306 --> 00:00:58,946
This applies to every single


28
00:00:58,946 --> 00:00:59,146
app.


29
00:00:59,296 --> 00:01:00,296
Internationalization is a


30
00:01:00,296 --> 00:01:01,886
crucial concept and we're going


31
00:01:01,886 --> 00:01:02,956
to go over some of the details


32
00:01:02,956 --> 00:01:04,885
as to why it applies to every


33
00:01:04,885 --> 00:01:06,146
single app, regardless of the


34
00:01:06,206 --> 00:01:07,086
set of languages that you


35
00:01:07,086 --> 00:01:07,596
support.


36
00:01:09,076 --> 00:01:10,776
And once again, this is all


37
00:01:10,776 --> 00:01:12,006
about reaching out to more


38
00:01:12,036 --> 00:01:12,426
people.


39
00:01:12,426 --> 00:01:14,106
It's enabling everybody to learn


40
00:01:14,106 --> 00:01:15,146
about and use your app.


41
00:01:15,666 --> 00:01:16,826
Regardless of the language they


42
00:01:16,826 --> 00:01:18,166
speak or the country that they


43
00:01:18,166 --> 00:01:19,626
live in, or the country that


44
00:01:19,626 --> 00:01:20,176
they grew up in.


45
00:01:20,176 --> 00:01:21,746
And it's important to note that


46
00:01:21,746 --> 00:01:23,176
those last two might be


47
00:01:23,176 --> 00:01:23,946
different, as well.


48
00:01:24,096 --> 00:01:24,936
And that's something that's


49
00:01:24,936 --> 00:01:25,886
worth keeping in mind.


50
00:01:28,416 --> 00:01:30,676
So, internationalization covers


51
00:01:30,676 --> 00:01:32,446
a wide range of topics, and


52
00:01:32,446 --> 00:01:34,116
potentially, every single aspect


53
00:01:34,116 --> 00:01:35,066
of your app.


54
00:01:35,436 --> 00:01:36,736
And if you're new to the topic,


55
00:01:37,436 --> 00:01:38,596
probably, the best way to think


56
00:01:38,596 --> 00:01:40,126
about it is that


57
00:01:40,226 --> 00:01:41,536
internationalization is best


58
00:01:41,536 --> 00:01:43,546
applied as a constant process.


59
00:01:43,936 --> 00:01:45,116
It's a discussion that belongs


60
00:01:45,116 --> 00:01:46,386
in every single stage of your


61
00:01:47,086 --> 00:01:47,386
app.


62
00:01:47,546 --> 00:01:48,846
Whether it's the initial


63
00:01:48,846 --> 00:01:51,306
inception, its design, to its


64
00:01:51,306 --> 00:01:52,446
implementation, and even


65
00:01:52,446 --> 00:01:53,726
distributing it on the App


66
00:01:53,726 --> 00:01:54,106
Store.


67
00:01:54,506 --> 00:01:55,496
Things like your App Store


68
00:01:55,496 --> 00:01:56,936
screenshots and even your app's


69
00:01:56,936 --> 00:01:58,426
name should be open for


70
00:01:58,426 --> 00:01:59,976
discussion in an international


71
00:01:59,976 --> 00:02:00,606
context.


72
00:02:01,186 --> 00:02:04,206
And like I said before, this


73
00:02:04,206 --> 00:02:06,186
covers a wide variety of topics.


74
00:02:07,186 --> 00:02:10,006
At Apple, we have a lot of


75
00:02:10,006 --> 00:02:11,566
firsthand experience about this.


76
00:02:11,976 --> 00:02:14,166
So, we estimate that over 70% of


77
00:02:14,166 --> 00:02:15,556
our customers are outside of the


78
00:02:15,556 --> 00:02:16,196
United States.


79
00:02:16,726 --> 00:02:18,326
And this means that when


80
00:02:18,326 --> 00:02:20,186
somebody downloads your app they


81
00:02:20,186 --> 00:02:21,776
expect that app to match your


82
00:02:21,776 --> 00:02:22,816
language preferences.


83
00:02:23,096 --> 00:02:24,666
And not only that, but also, be


84
00:02:24,666 --> 00:02:26,116
aware of any details that might


85
00:02:26,116 --> 00:02:27,196
be related to their region


86
00:02:27,196 --> 00:02:28,166
settings, as well.


87
00:02:30,266 --> 00:02:33,076
We support exactly 38 different


88
00:02:33,076 --> 00:02:36,176
written languages and many, many


89
00:02:36,176 --> 00:02:38,896
more keyboards and input methods


90
00:02:38,896 --> 00:02:40,506
for people to type and text.


91
00:02:41,066 --> 00:02:42,256
And what this means for you, is


92
00:02:42,256 --> 00:02:44,056
you have a rock solid foundation


93
00:02:44,056 --> 00:02:44,896
to get started with.


94
00:02:45,486 --> 00:02:47,076
Every single one of our API's


95
00:02:47,076 --> 00:02:48,696
supports these languages and


96
00:02:48,696 --> 00:02:49,276
input methods.


97
00:02:49,886 --> 00:02:50,796
And this means that you can get


98
00:02:50,796 --> 00:02:52,116
started right away by using


99
00:02:52,116 --> 00:02:54,276
these and you're off to a great


100
00:02:54,276 --> 00:02:55,986
start in providing really great


101
00:02:55,986 --> 00:02:58,256
international support to your


102
00:02:58,886 --> 00:02:58,966
app.


103
00:03:00,686 --> 00:03:02,216
So, for example, this might


104
00:03:02,216 --> 00:03:04,406
entail presenting dates and


105
00:03:04,926 --> 00:03:05,256
times.


106
00:03:05,256 --> 00:03:05,796
This wouldn't be an


107
00:03:05,796 --> 00:03:06,876
international talk if I didn't


108
00:03:06,926 --> 00:03:07,976
talk about dates and times.


109
00:03:08,026 --> 00:03:09,086
But it's important to think


110
00:03:09,086 --> 00:03:09,556
about, right?


111
00:03:09,956 --> 00:03:11,106
Because people have different


112
00:03:11,106 --> 00:03:12,386
expectations around the world.


113
00:03:13,306 --> 00:03:14,346
This is the [inaudible] Sao


114
00:03:14,346 --> 00:03:15,446
Bento in Portugal.


115
00:03:15,446 --> 00:03:16,546
It's a lovely train station.


116
00:03:16,946 --> 00:03:18,836
But my focus today isn't so much


117
00:03:18,836 --> 00:03:21,506
the train station as much as the


118
00:03:21,506 --> 00:03:22,856
way the times are presented in


119
00:03:22,856 --> 00:03:23,596
the train station.


120
00:03:23,736 --> 00:03:24,886
And if you go there, you might


121
00:03:24,886 --> 00:03:25,996
notice that everything is in


122
00:03:25,996 --> 00:03:27,056
24-hour time.


123
00:03:27,666 --> 00:03:29,676
And this is true, not just in


124
00:03:29,676 --> 00:03:30,736
train stations, but it's


125
00:03:30,736 --> 00:03:32,776
commonplace everywhere in many


126
00:03:32,776 --> 00:03:33,366
countries.


127
00:03:34,636 --> 00:03:35,586
And so, your app should know


128
00:03:35,586 --> 00:03:37,756
about these and present time


129
00:03:37,896 --> 00:03:39,186
accordingly, depending on the


130
00:03:39,216 --> 00:03:39,476
region.


131
00:03:39,476 --> 00:03:41,196
And you can do this using date


132
00:03:41,196 --> 00:03:41,706
formatter.


133
00:03:41,706 --> 00:03:43,216
It's a set of APIs we provide


134
00:03:43,216 --> 00:03:44,066
that lets you do this.


135
00:03:44,396 --> 00:03:45,526
And it really does all the heavy


136
00:03:45,526 --> 00:03:46,866
lifting for you.


137
00:03:47,656 --> 00:03:50,946
Another example is calendars.


138
00:03:51,096 --> 00:03:52,126
There are many different


139
00:03:52,126 --> 00:03:53,486
calendrical systems around the


140
00:03:53,486 --> 00:03:53,816
world.


141
00:03:54,276 --> 00:03:56,416
And it's also important to note


142
00:03:56,416 --> 00:03:57,866
that many people use more than


143
00:03:57,866 --> 00:03:59,466
one on a daily basis.


144
00:03:59,466 --> 00:04:01,546
They might use one for religious


145
00:04:01,546 --> 00:04:03,566
or festive events and another


146
00:04:03,566 --> 00:04:04,226
for business.


147
00:04:04,726 --> 00:04:05,716
And these all have different


148
00:04:05,716 --> 00:04:07,726
properties like leap months and


149
00:04:07,726 --> 00:04:09,506
leap years and different numbers


150
00:04:09,506 --> 00:04:10,636
of days and different numbers of


151
00:04:10,636 --> 00:04:11,096
months.


152
00:04:11,596 --> 00:04:14,136
And so, being precise about


153
00:04:14,196 --> 00:04:15,976
these and knowing how to present


154
00:04:15,976 --> 00:04:17,976
these appropriately means being


155
00:04:18,176 --> 00:04:19,125
internationally aware.


156
00:04:20,396 --> 00:04:21,706
This is an example of the iOS


157
00:04:21,755 --> 00:04:23,956
Calendar app showing the Chinese


158
00:04:23,956 --> 00:04:25,456
Lunar calendar on top of the


159
00:04:25,456 --> 00:04:26,416
Gregorian calendar.


160
00:04:27,056 --> 00:04:28,446
And we have a set of API's in


161
00:04:28,446 --> 00:04:30,236
Calendar and alongside Date


162
00:04:30,236 --> 00:04:31,956
Formatter that help you do this.


163
00:04:34,536 --> 00:04:36,446
Could also talk about units and


164
00:04:36,446 --> 00:04:37,006
measurements.


165
00:04:37,416 --> 00:04:39,376
Whether it's presenting things


166
00:04:39,376 --> 00:04:41,076
in the metric versus the


167
00:04:41,076 --> 00:04:43,126
imperial system, or even


168
00:04:43,126 --> 00:04:45,176
temperatures like Celsius or


169
00:04:45,176 --> 00:04:45,666
Fahrenheit.


170
00:04:46,496 --> 00:04:47,716
Your app should be aware of the


171
00:04:47,716 --> 00:04:49,036
appropriate regional defaults


172
00:04:49,036 --> 00:04:51,356
for these, and also, respond to


173
00:04:51,356 --> 00:04:52,336
changes in the user's


174
00:04:52,336 --> 00:04:52,886
preference.


175
00:04:53,446 --> 00:04:57,326
And not only that, whether


176
00:04:57,326 --> 00:04:58,846
they're units or not, even


177
00:04:58,846 --> 00:04:59,696
numbers themselves.


178
00:04:59,766 --> 00:05:00,656
There are so many things to


179
00:05:00,656 --> 00:05:02,496
cover there from the decimal


180
00:05:02,496 --> 00:05:03,836
separator to the thousand


181
00:05:03,836 --> 00:05:04,326
separator.


182
00:05:04,326 --> 00:05:06,076
And even, the entire class of


183
00:05:06,076 --> 00:05:07,986
digits used to represent and


184
00:05:07,986 --> 00:05:08,936
talk about numbers.


185
00:05:09,476 --> 00:05:10,526
These can change between


186
00:05:10,526 --> 00:05:10,986
regions.


187
00:05:11,436 --> 00:05:12,196
And if you use number


188
00:05:12,196 --> 00:05:13,876
formatters, your app gets this


189
00:05:13,916 --> 00:05:15,036
behavior for free.


190
00:05:15,676 --> 00:05:17,156
And this is important not only


191
00:05:17,156 --> 00:05:18,996
for consistency, but also,


192
00:05:18,996 --> 00:05:19,766
understandability.


193
00:05:20,306 --> 00:05:24,866
Text is, also, another great


194
00:05:24,866 --> 00:05:26,896
topic with many different areas.


195
00:05:27,366 --> 00:05:29,716
And depending on the language or


196
00:05:29,716 --> 00:05:31,386
languages that you grew up


197
00:05:31,386 --> 00:05:32,846
learning and writing, and the


198
00:05:32,846 --> 00:05:34,086
scripts that those language are


199
00:05:34,086 --> 00:05:34,606
written in.


200
00:05:35,226 --> 00:05:35,896
You might have thought that


201
00:05:35,896 --> 00:05:36,976
there are some properties that


202
00:05:37,316 --> 00:05:38,946
are completely immutable across


203
00:05:38,946 --> 00:05:39,866
other scripts and other


204
00:05:39,866 --> 00:05:40,516
languages.


205
00:05:40,996 --> 00:05:42,296
And that might not, necessarily,


206
00:05:42,296 --> 00:05:42,606
hold.


207
00:05:43,336 --> 00:05:44,246
One example, probably the


208
00:05:44,246 --> 00:05:45,476
biggest example, is script


209
00:05:45,566 --> 00:05:46,356
directionality.


210
00:05:46,356 --> 00:05:48,046
So, some languages, like Arabic


211
00:05:48,046 --> 00:05:49,706
and Hebrew, and in this case


212
00:05:49,706 --> 00:05:51,536
Urdu, are written and read from


213
00:05:51,536 --> 00:05:52,196
right to left.


214
00:05:52,196 --> 00:05:53,756
Which, is completely the other


215
00:05:53,756 --> 00:05:55,406
way from English, from what you


216
00:05:55,406 --> 00:05:56,116
might be used to.


217
00:05:57,026 --> 00:05:59,536
And taking this further, many


218
00:05:59,536 --> 00:06:01,416
books, most books published in


219
00:06:01,416 --> 00:06:03,196
traditional Chinese and Japanese


220
00:06:03,506 --> 00:06:05,206
are presented in vertical and


221
00:06:05,206 --> 00:06:05,876
right to left.


222
00:06:06,456 --> 00:06:07,436
And so, knowing about these


223
00:06:07,436 --> 00:06:09,886
formats and knowing about the


224
00:06:09,886 --> 00:06:10,886
context in which it's


225
00:06:10,886 --> 00:06:12,396
appropriate to present these and


226
00:06:12,396 --> 00:06:13,856
adapting your layout for these


227
00:06:14,176 --> 00:06:15,476
could be an important aspect of


228
00:06:15,476 --> 00:06:15,836
your app.


229
00:06:16,406 --> 00:06:18,186
And are why frameworks alongside


230
00:06:18,186 --> 00:06:19,806
our text frameworks like TextKit


231
00:06:19,806 --> 00:06:21,566
and CoreText can help you make


232
00:06:21,566 --> 00:06:22,486
sure you're doing the right


233
00:06:22,516 --> 00:06:24,076
thing in every single one of


234
00:06:24,076 --> 00:06:24,666
these cases.


235
00:06:25,286 --> 00:06:29,516
Going a little bit higher level,


236
00:06:29,996 --> 00:06:31,156
even things like names.


237
00:06:31,946 --> 00:06:32,966
Depending on where you grew up,


238
00:06:32,966 --> 00:06:34,496
you might have a first, middle,


239
00:06:34,496 --> 00:06:35,196
and last name.


240
00:06:35,786 --> 00:06:37,276
Or a family name that comes


241
00:06:37,336 --> 00:06:38,906
before your given name.


242
00:06:39,956 --> 00:06:40,856
And again, knowing how to


243
00:06:40,856 --> 00:06:42,416
present these, and even asking


244
00:06:42,416 --> 00:06:44,376
your user about these could be a


245
00:06:44,376 --> 00:06:45,526
crucial part of your app.


246
00:06:45,946 --> 00:06:47,276
And this is something that users


247
00:06:47,276 --> 00:06:49,596
expect that you get right and


248
00:06:49,666 --> 00:06:50,936
know about the details and


249
00:06:51,206 --> 00:06:52,906
intricacies of formatting names.


250
00:06:53,726 --> 00:06:54,116
And we have


251
00:06:54,116 --> 00:06:55,546
PersonNameComponentsFormatter


252
00:06:55,546 --> 00:06:57,216
API that help you do this.


253
00:07:00,246 --> 00:07:00,536
Okay.


254
00:07:00,536 --> 00:07:02,046
So, throughout all of these


255
00:07:02,116 --> 00:07:03,936
concepts it's also important to


256
00:07:03,936 --> 00:07:06,986
note that many of the users


257
00:07:06,986 --> 00:07:08,586
might interact with and speak


258
00:07:08,746 --> 00:07:10,456
more than one language on a


259
00:07:10,456 --> 00:07:11,176
daily basis.


260
00:07:11,636 --> 00:07:12,576
Whether it's because they moved


261
00:07:12,576 --> 00:07:13,886
countries, or simply because


262
00:07:13,886 --> 00:07:15,386
that region, in and of itself,


263
00:07:15,796 --> 00:07:17,216
uses more than one language.


264
00:07:17,746 --> 00:07:20,346
And taking this example further,


265
00:07:22,236 --> 00:07:23,586
even if your app only supports


266
00:07:23,586 --> 00:07:25,876
one language it's very likely


267
00:07:25,876 --> 00:07:27,206
that your customers are using


268
00:07:27,206 --> 00:07:29,316
your app to publish and consume


269
00:07:29,316 --> 00:07:31,066
content in their own native


270
00:07:31,066 --> 00:07:31,546
language.


271
00:07:32,206 --> 00:07:34,696
And so, regardless of the set of


272
00:07:34,696 --> 00:07:35,476
languages that your app


273
00:07:35,476 --> 00:07:37,556
supports, these are all still


274
00:07:37,556 --> 00:07:38,696
very important topics to


275
00:07:38,696 --> 00:07:40,246
consider and talk about


276
00:07:40,526 --> 00:07:41,516
throughout the design and


277
00:07:41,796 --> 00:07:43,726
implementation of your app.


278
00:07:45,376 --> 00:07:47,166
So, if all of this is new to


279
00:07:47,166 --> 00:07:48,226
you, worry not.


280
00:07:48,626 --> 00:07:50,366
Like I said before, we have a


281
00:07:50,406 --> 00:07:52,426
great set of APIs that really do


282
00:07:52,426 --> 00:07:53,716
all the heavy lifting for you


283
00:07:53,716 --> 00:07:54,646
and take care of all these


284
00:07:54,676 --> 00:07:55,516
different aspects.


285
00:07:55,516 --> 00:07:57,236
And are aware of all the


286
00:07:57,236 --> 00:07:58,356
different details between


287
00:07:58,356 --> 00:07:59,286
languages and regions.


288
00:07:59,926 --> 00:08:01,596
These are some examples of the


289
00:08:01,596 --> 00:08:03,006
Formatter APIs that I talked


290
00:08:03,006 --> 00:08:03,306
about.


291
00:08:03,376 --> 00:08:04,906
And we've, also, got some great


292
00:08:04,906 --> 00:08:05,926
sessions that go into great


293
00:08:05,996 --> 00:08:07,896
detail on how to further tailor


294
00:08:07,896 --> 00:08:09,316
these for your app, as well.


295
00:08:09,966 --> 00:08:14,276
So, let's start our first deep


296
00:08:14,276 --> 00:08:16,746
dive in to layout and some of


297
00:08:16,746 --> 00:08:17,726
the goals related to


298
00:08:17,726 --> 00:08:19,326
internationalization when it


299
00:08:19,326 --> 00:08:20,986
comes to adaptive layouts.


300
00:08:23,296 --> 00:08:24,656
Because, really, the core goal


301
00:08:25,276 --> 00:08:27,096
of an adaptive layout is to


302
00:08:27,546 --> 00:08:29,236
present all kinds of different


303
00:08:29,236 --> 00:08:29,856
information.


304
00:08:30,936 --> 00:08:31,806
And when you're adapting your


305
00:08:31,806 --> 00:08:33,876
application for other languages,


306
00:08:34,846 --> 00:08:36,056
probably, the biggest guarantee


307
00:08:36,056 --> 00:08:37,126
that you'll get is that these


308
00:08:37,126 --> 00:08:38,126
translation lengths are going to


309
00:08:38,126 --> 00:08:38,635
be different.


310
00:08:39,145 --> 00:08:40,226
They're going to be much shorter


311
00:08:40,226 --> 00:08:41,525
or much longer, depending on the


312
00:08:41,525 --> 00:08:42,086
language.


313
00:08:42,385 --> 00:08:44,236
And this is something that your


314
00:08:44,236 --> 00:08:45,546
design and layout should adapt


315
00:08:45,546 --> 00:08:45,866
for.


316
00:08:48,136 --> 00:08:49,466
On top of this, there's also


317
00:08:49,466 --> 00:08:50,846
directionality, like I mentioned


318
00:08:50,846 --> 00:08:51,286
before.


319
00:08:52,036 --> 00:08:53,306
Because some languages are


320
00:08:53,306 --> 00:08:54,876
written in right to left this


321
00:08:54,876 --> 00:08:56,656
has some design considerations,


322
00:08:56,996 --> 00:08:58,106
not just in the text that you


323
00:08:58,106 --> 00:08:59,866
have in your app, but also, the


324
00:08:59,866 --> 00:09:01,146
way you present information.


325
00:09:01,446 --> 00:09:03,026
Especially, horizontally flowing


326
00:09:03,026 --> 00:09:05,136
information and how that general


327
00:09:05,136 --> 00:09:06,846
flow should adapt for both


328
00:09:06,846 --> 00:09:10,966
script and writing directions.


329
00:09:12,186 --> 00:09:13,236
So, a great starting point to


330
00:09:13,236 --> 00:09:14,716
help you do all of this is Auto


331
00:09:14,716 --> 00:09:15,066
Layout.


332
00:09:15,236 --> 00:09:16,226
You might have heard of Auto


333
00:09:16,226 --> 00:09:16,916
Layout, before.


334
00:09:17,686 --> 00:09:19,116
This is a powerful technology


335
00:09:19,116 --> 00:09:20,266
that is at the core of our


336
00:09:20,266 --> 00:09:20,966
layout engine.


337
00:09:21,736 --> 00:09:23,006
And Auto Layout, instead of


338
00:09:23,006 --> 00:09:26,026
describing explicit frames or


339
00:09:26,116 --> 00:09:27,606
positions of your controls and


340
00:09:27,606 --> 00:09:30,286
labels, describes constraints or


341
00:09:30,286 --> 00:09:31,586
relationships between these


342
00:09:31,586 --> 00:09:32,016
views.


343
00:09:32,356 --> 00:09:33,666
And therefore, how they're


344
00:09:33,666 --> 00:09:34,876
positioned relative to each


345
00:09:34,876 --> 00:09:36,216
other and how they're allowed to


346
00:09:36,316 --> 00:09:37,866
grow relative to each other.


347
00:09:40,206 --> 00:09:41,686
On top of this constraint-based


348
00:09:41,686 --> 00:09:43,466
system we have the idea of


349
00:09:43,546 --> 00:09:44,356
leading and trailing


350
00:09:44,356 --> 00:09:45,036
constraints.


351
00:09:45,916 --> 00:09:46,976
And what this means is that


352
00:09:47,346 --> 00:09:48,466
this, essentially, describes


353
00:09:48,506 --> 00:09:50,166
properties that are left and


354
00:09:50,166 --> 00:09:51,896
right in a language like English


355
00:09:52,496 --> 00:09:54,376
that automatically evaluate to


356
00:09:54,376 --> 00:09:56,486
right and left, respectively, in


357
00:09:56,486 --> 00:09:57,596
a language like Arabic and


358
00:09:57,596 --> 00:09:57,966
Hebrew.


359
00:09:58,696 --> 00:09:59,806
And this means that with Auto


360
00:09:59,806 --> 00:10:01,336
Layout you can create these


361
00:10:01,336 --> 00:10:04,396
adaptive layouts that flow


362
00:10:04,736 --> 00:10:05,626
depending on the writing


363
00:10:05,626 --> 00:10:06,936
direction without having to


364
00:10:06,936 --> 00:10:08,466
write special code for either


365
00:10:08,466 --> 00:10:09,716
one of the writing directions.


366
00:10:14,056 --> 00:10:15,806
Another great starting point is


367
00:10:15,806 --> 00:10:17,416
to use high level components and


368
00:10:17,416 --> 00:10:19,246
containers that we provide in


369
00:10:19,246 --> 00:10:20,116
our UI frameworks.


370
00:10:20,186 --> 00:10:22,006
Because these use all of these


371
00:10:22,006 --> 00:10:23,616
concepts and are aware of how to


372
00:10:23,616 --> 00:10:24,296
be adaptive.


373
00:10:25,096 --> 00:10:26,386
Some examples are collection


374
00:10:26,386 --> 00:10:27,616
views and stack views that we


375
00:10:27,616 --> 00:10:29,226
provide, both in UIKit and


376
00:10:29,226 --> 00:10:29,636
AppKit.


377
00:10:30,326 --> 00:10:31,716
And you can create really


378
00:10:31,716 --> 00:10:33,336
complex layouts and even embed


379
00:10:33,336 --> 00:10:35,056
these within each other to,


380
00:10:35,536 --> 00:10:36,636
potentially, even just create


381
00:10:36,636 --> 00:10:37,556
the whole layout of your app


382
00:10:37,626 --> 00:10:38,506
just using these.


383
00:10:39,976 --> 00:10:41,336
Just as an example for Stack


384
00:10:41,376 --> 00:10:43,566
View itself, I could arrange


385
00:10:43,566 --> 00:10:44,896
these horizontally in a Stack


386
00:10:44,896 --> 00:10:45,066
View.


387
00:10:45,066 --> 00:10:47,366
So, I have the city name on the


388
00:10:47,366 --> 00:10:48,706
left and the time on the right.


389
00:10:49,216 --> 00:10:50,696
And this is, this could just be


390
00:10:50,696 --> 00:10:52,326
put into a horizontal stack


391
00:10:52,356 --> 00:10:52,556
view.


392
00:10:52,556 --> 00:10:54,536
And because this flows left to


393
00:10:54,536 --> 00:10:56,426
right in English and because I'm


394
00:10:56,426 --> 00:10:59,286
using a StackView if I run my


395
00:10:59,286 --> 00:11:01,076
app in Hebrew, this is the


396
00:11:01,076 --> 00:11:01,796
result I would get.


397
00:11:01,836 --> 00:11:03,176
Because that information would


398
00:11:03,236 --> 00:11:04,366
adapt automatically.


399
00:11:04,616 --> 00:11:06,106
Because StackView is aware of


400
00:11:06,106 --> 00:11:07,616
these concepts and uses Auto


401
00:11:07,616 --> 00:11:07,926
Layout


402
00:11:07,926 --> 00:11:09,026
under the hood.


403
00:11:09,966 --> 00:11:11,936
If you'd like to learn more


404
00:11:11,936 --> 00:11:14,586
about Auto Layout and details on


405
00:11:14,586 --> 00:11:16,116
how to adapt your application


406
00:11:16,116 --> 00:11:16,846
for different writing


407
00:11:16,846 --> 00:11:18,436
directions, these are some great


408
00:11:18,436 --> 00:11:20,866
starting points to check out, as


409
00:11:22,036 --> 00:11:22,156
well.


410
00:11:24,306 --> 00:11:25,596
So, when it comes to the text in


411
00:11:25,596 --> 00:11:27,216
your app and the content in your


412
00:11:27,216 --> 00:11:29,156
app the key goal here and,


413
00:11:29,156 --> 00:11:30,456
obviously, the number one


414
00:11:30,456 --> 00:11:32,796
recommendation is to simply not


415
00:11:32,796 --> 00:11:33,976
assume fixed widths.


416
00:11:34,376 --> 00:11:35,676
If you don't do that you're off


417
00:11:35,676 --> 00:11:37,046
to a great starting point in


418
00:11:37,046 --> 00:11:38,956
terms of allowing your app to


419
00:11:39,346 --> 00:11:40,966
adapt to, not only different


420
00:11:40,966 --> 00:11:42,616
changes in length horizontally.


421
00:11:42,616 --> 00:11:44,026
But even, potentially, allow


422
00:11:44,636 --> 00:11:45,946
your labels to grow vertically


423
00:11:45,946 --> 00:11:47,436
and adapt to multiple lines if


424
00:11:47,436 --> 00:11:48,016
necessary.


425
00:11:48,746 --> 00:11:49,486
And this is something you'll


426
00:11:49,486 --> 00:11:51,036
have to decide in your app and


427
00:11:51,036 --> 00:11:53,026
your app's design on what you


428
00:11:53,026 --> 00:11:54,506
want to prioritize in terms of


429
00:11:54,906 --> 00:11:56,546
what is allowed to grow and use


430
00:11:56,546 --> 00:11:58,546
up the real estate of your app.


431
00:11:59,096 --> 00:12:02,086
If your labels and your controls


432
00:12:02,086 --> 00:12:04,026
are either in stack views in


433
00:12:04,026 --> 00:12:05,236
these high-level components that


434
00:12:05,236 --> 00:12:06,646
I mentioned before, or


435
00:12:06,646 --> 00:12:07,896
positioned using Auto Layout


436
00:12:07,896 --> 00:12:09,896
itself, this work is pretty much


437
00:12:09,896 --> 00:12:10,656
done for you.


438
00:12:10,656 --> 00:12:11,796
You're already allowing your


439
00:12:11,796 --> 00:12:13,756
labels to grow and your controls


440
00:12:13,756 --> 00:12:15,406
to take up the content that they


441
00:12:15,406 --> 00:12:16,126
need to take up.


442
00:12:16,726 --> 00:12:17,896
And then, it just becomes a


443
00:12:17,896 --> 00:12:19,866
matter of prioritizing how you


444
00:12:19,866 --> 00:12:21,666
want to let them grow relative


445
00:12:21,666 --> 00:12:23,856
to each other.


446
00:12:25,446 --> 00:12:26,546
So, this is great.


447
00:12:26,806 --> 00:12:28,106
Let's say you've done all this.


448
00:12:28,106 --> 00:12:29,786
And how, exactly, do you make


449
00:12:29,786 --> 00:12:31,356
sure that your app is checking


450
00:12:31,356 --> 00:12:32,736
off all the right boxes in terms


451
00:12:32,736 --> 00:12:34,846
of adaptive layout and


452
00:12:34,986 --> 00:12:36,016
responding to all of these


453
00:12:36,016 --> 00:12:36,386
things?


454
00:12:37,036 --> 00:12:38,036
Well, the good news is that


455
00:12:38,036 --> 00:12:39,206
Xcode provides a number of


456
00:12:39,206 --> 00:12:40,506
features for you to test.


457
00:12:40,876 --> 00:12:42,906
And not only that, it allows you


458
00:12:42,906 --> 00:12:44,486
to test early and find these out


459
00:12:44,526 --> 00:12:45,936
quickly in the development, and


460
00:12:45,936 --> 00:12:47,086
early on in the development of


461
00:12:47,086 --> 00:12:47,446
your app.


462
00:12:48,666 --> 00:12:50,056
One example is pseudolanguages.


463
00:12:50,456 --> 00:12:51,636
Pseudolanguages are great,


464
00:12:52,086 --> 00:12:53,516
especially, when you haven't yet


465
00:12:53,516 --> 00:12:54,786
added language support to your


466
00:12:54,786 --> 00:12:54,996
app.


467
00:12:55,106 --> 00:12:56,466
So, what you can do from within


468
00:12:56,466 --> 00:12:59,746
Xcode is run your application in


469
00:12:59,746 --> 00:13:01,326
a pseudolanguage and this


470
00:13:01,326 --> 00:13:03,466
changes a few details of the


471
00:13:03,466 --> 00:13:04,616
layout and text of your app.


472
00:13:05,246 --> 00:13:06,346
One example is the bounded


473
00:13:06,346 --> 00:13:07,596
string pseudolanguage.


474
00:13:07,886 --> 00:13:09,156
This adds a few characters at


475
00:13:09,156 --> 00:13:10,966
the beginning and end of every


476
00:13:10,966 --> 00:13:12,066
single UI string that you


477
00:13:12,066 --> 00:13:12,466
display.


478
00:13:13,066 --> 00:13:15,496
And then, you can see, make sure


479
00:13:15,496 --> 00:13:17,506
that there aren't truncations or


480
00:13:17,506 --> 00:13:18,736
unexpected clippings in the


481
00:13:18,736 --> 00:13:19,506
content of your app.


482
00:13:19,596 --> 00:13:20,836
So, this is a really useful one.


483
00:13:20,836 --> 00:13:21,906
And we have many more


484
00:13:21,906 --> 00:13:23,006
pseudolanguages that can help


485
00:13:23,006 --> 00:13:25,996
you out, as well.


486
00:13:26,276 --> 00:13:28,336
Specifically, for Auto Layout we


487
00:13:28,336 --> 00:13:31,326
have Auto Layout warnings built


488
00:13:31,326 --> 00:13:31,916
into Xcode.


489
00:13:31,916 --> 00:13:33,786
So, Xcode can tell you about


490
00:13:33,786 --> 00:13:35,786
common antipatterns right within


491
00:13:35,786 --> 00:13:36,596
an interface builder.


492
00:13:36,596 --> 00:13:38,056
And this can be things like


493
00:13:38,356 --> 00:13:40,406
fixed width constraints or too


494
00:13:40,406 --> 00:13:41,896
few constraints on a control or


495
00:13:41,896 --> 00:13:43,606
label that might, potentially,


496
00:13:43,606 --> 00:13:45,686
introduce issues at runtime,


497
00:13:45,836 --> 00:13:47,186
especially, in other languages.


498
00:13:50,316 --> 00:13:52,076
So, with that, I'd like to hand


499
00:13:52,076 --> 00:13:53,566
it over to Dongyuan, who's going


500
00:13:53,566 --> 00:13:55,016
to give you a demo of all of


501
00:13:55,116 --> 00:13:55,676
this in action.


502
00:13:56,046 --> 00:13:56,916
Thank you, so much.


503
00:13:57,086 --> 00:13:57,946
And hope you have a great week.


504
00:13:58,226 --> 00:13:58,626
Thank you, [inaudible].


505
00:14:00,016 --> 00:14:01,000
[ Applause ]


506
00:14:01,126 --> 00:14:01,846
>> Thank you, Joaquim.


507
00:14:09,486 --> 00:14:10,376
Hi, I'm Dongyuan.


508
00:14:10,876 --> 00:14:13,266
Let me show you some techniques


509
00:14:13,266 --> 00:14:14,536
to [inaudible] and some common


510
00:14:14,536 --> 00:14:16,136
pitfalls to avoid in real world.


511
00:14:17,316 --> 00:14:18,706
Here's an app called Vacation


512
00:14:18,706 --> 00:14:20,456
Planet, which is the first


513
00:14:20,456 --> 00:14:23,416
interplanetary travel agent that


514
00:14:23,416 --> 00:14:24,906
allows you to book travel for


515
00:14:24,906 --> 00:14:26,236
not only other countries, but


516
00:14:26,496 --> 00:14:27,886
also, as you can see in this


517
00:14:27,886 --> 00:14:29,186
table view, other planets.


518
00:14:30,526 --> 00:14:32,426
So, I wanted to go to the moon


519
00:14:32,426 --> 00:14:33,956
for quite a few times.


520
00:14:34,466 --> 00:14:35,446
So, I can do that, this time.


521
00:14:36,896 --> 00:14:38,326
And here are all the locations


522
00:14:38,326 --> 00:14:40,116
available on the moon and their


523
00:14:40,116 --> 00:14:41,086
distance from Earth.


524
00:14:42,246 --> 00:14:43,496
Let me choose the location like


525
00:14:43,496 --> 00:14:44,416
the Clavius Base.


526
00:14:45,806 --> 00:14:47,496
And here is our Travel Details


527
00:14:47,496 --> 00:14:47,766
page.


528
00:14:48,906 --> 00:14:50,266
It seems pretty cheap for one


529
00:14:50,266 --> 00:14:50,536
trip.


530
00:14:51,036 --> 00:14:51,836
So, I'm going to buy more


531
00:14:51,836 --> 00:14:52,296
tickets.


532
00:14:52,986 --> 00:14:54,886
Let's buy three of them.


533
00:14:56,336 --> 00:14:57,216
And there we go.


534
00:14:58,726 --> 00:15:00,286
As you can see, because we


535
00:15:00,286 --> 00:15:01,736
design and developed the app in


536
00:15:01,736 --> 00:15:03,866
English our layout works great


537
00:15:03,866 --> 00:15:04,546
in English.


538
00:15:05,236 --> 00:15:07,036
However, we still want to make


539
00:15:07,036 --> 00:15:08,556
sure it can adapt for other


540
00:15:08,556 --> 00:15:09,046
languages.


541
00:15:09,946 --> 00:15:11,316
Because we are still early in


542
00:15:11,316 --> 00:15:12,926
the development cycle and we


543
00:15:12,996 --> 00:15:14,376
haven't localized the app, yet,


544
00:15:14,846 --> 00:15:16,406
we can use the pseudolanguages


545
00:15:16,406 --> 00:15:17,076
in Xcode.


546
00:15:17,876 --> 00:15:19,596
To do that, I'm going to go


547
00:15:19,596 --> 00:15:20,846
through the Current Scheme,


548
00:15:21,616 --> 00:15:22,536
click Edit Scheme.


549
00:15:23,666 --> 00:15:25,206
And in the scheme editor I have


550
00:15:25,206 --> 00:15:26,756
an Application Language


551
00:15:26,756 --> 00:15:27,286
selector.


552
00:15:28,326 --> 00:15:29,436
I can select one of the


553
00:15:29,436 --> 00:15:31,286
pseudolanguages like the Bounded


554
00:15:31,286 --> 00:15:32,346
String Pseudolanguage.


555
00:15:33,616 --> 00:15:35,496
It's very useful for exposing


556
00:15:35,496 --> 00:15:37,226
potential clipping or truncation


557
00:15:37,226 --> 00:15:37,646
issues.


558
00:15:38,866 --> 00:15:39,916
Let's run the app in this


559
00:15:39,916 --> 00:15:40,666
configuration.


560
00:15:41,216 --> 00:15:43,556
As you can see, this


561
00:15:43,976 --> 00:15:45,446
pseudolanguage adds a few


562
00:15:45,506 --> 00:15:46,626
special characters at the


563
00:15:46,626 --> 00:15:48,246
beginning and end of every UI


564
00:15:48,246 --> 00:15:48,616
strings.


565
00:15:49,496 --> 00:15:51,236
Our tag line here is still good.


566
00:15:51,806 --> 00:15:52,906
But the Browse button is


567
00:15:52,906 --> 00:15:53,476
truncated.


568
00:15:54,336 --> 00:15:57,326
Let's try to fix that.


569
00:15:57,536 --> 00:15:58,996
When I select the Browse button


570
00:15:59,906 --> 00:16:01,496
I can see that there's a wording


571
00:16:01,496 --> 00:16:02,746
in Xcode.


572
00:16:04,956 --> 00:16:06,656
The wording shows that we have a


573
00:16:06,736 --> 00:16:08,476
fixed width constraint and that


574
00:16:08,476 --> 00:16:09,266
may cause clipping.


575
00:16:09,266 --> 00:16:11,816
If I want to know more


576
00:16:11,816 --> 00:16:13,256
information, I can click on the


577
00:16:13,256 --> 00:16:13,736
I button.


578
00:16:14,706 --> 00:16:15,976
I'm going to fix the issue by


579
00:16:15,976 --> 00:16:17,766
click the growth, sorry.


580
00:16:18,046 --> 00:16:19,166
By click the Warning sign.


581
00:16:20,036 --> 00:16:21,006
Here are three options.


582
00:16:21,216 --> 00:16:22,326
I'm going to select the first


583
00:16:22,326 --> 00:16:23,876
one, which is simply remove the


584
00:16:23,876 --> 00:16:25,606
constraint to allow the button


585
00:16:25,606 --> 00:16:26,846
to be wider when there's more


586
00:16:26,846 --> 00:16:27,276
content.


587
00:16:27,986 --> 00:16:28,926
Let's do that.


588
00:16:29,906 --> 00:16:30,286
Okay.


589
00:16:30,286 --> 00:16:31,366
No other layout issues.


590
00:16:31,816 --> 00:16:33,926
And then, I'm going to show you


591
00:16:33,926 --> 00:16:35,686
a very simple way to verify the


592
00:16:35,686 --> 00:16:36,636
change that was made.


593
00:16:37,726 --> 00:16:39,326
I'm going to go to the Assistant


594
00:16:39,326 --> 00:16:40,726
Editor at the top right corner,


595
00:16:40,986 --> 00:16:41,866
the middle button here.


596
00:16:42,426 --> 00:16:46,426
Here I can select Preview and


597
00:16:46,426 --> 00:16:47,466
Main tell Storyboard.


598
00:16:48,756 --> 00:16:50,546
The Preview pane allows you to


599
00:16:50,546 --> 00:16:52,236
view your layout in multiple


600
00:16:52,306 --> 00:16:53,766
screen sizes and different


601
00:16:53,766 --> 00:16:54,926
languages without running the


602
00:16:54,926 --> 00:16:55,166
app.


603
00:16:56,696 --> 00:16:58,106
On the bottom right corner, I'm


604
00:16:58,326 --> 00:17:00,136
going to select the first, the


605
00:17:00,206 --> 00:17:01,026
same Bounded String


606
00:17:01,026 --> 00:17:02,156
Pseudolanguage we just used.


607
00:17:02,756 --> 00:17:02,886
Great.


608
00:17:03,896 --> 00:17:06,296
Because we don't have the fixed


609
00:17:06,296 --> 00:17:07,935
width constraint, anymore, our


610
00:17:07,935 --> 00:17:08,935
Browse button can now


611
00:17:08,935 --> 00:17:11,256
accommodate a slightly longer


612
00:17:12,195 --> 00:17:12,346
string.


613
00:17:12,546 --> 00:17:13,586
Another very useful


614
00:17:13,586 --> 00:17:14,925
pseudolanguage is the Double


615
00:17:14,925 --> 00:17:15,816
Length Pseudolanguage.


616
00:17:16,425 --> 00:17:18,096
It's for verifying your layout


617
00:17:18,096 --> 00:17:19,756
against potential languages that


618
00:17:19,756 --> 00:17:21,636
have longer string length, like


619
00:17:21,636 --> 00:17:23,506
German, Finnish, or Russian.


620
00:17:24,376 --> 00:17:26,046
They can sometimes be two times


621
00:17:26,046 --> 00:17:26,925
longer than English.


622
00:17:27,685 --> 00:17:28,806
Let's see if that works.


623
00:17:29,476 --> 00:17:32,096
Now, the Browse button is still


624
00:17:32,096 --> 00:17:32,426
okay.


625
00:17:32,726 --> 00:17:34,306
But our tag line is clipped by


626
00:17:34,306 --> 00:17:35,116
the screen boundaries.


627
00:17:36,306 --> 00:17:38,016
When I select the label, I can


628
00:17:38,076 --> 00:17:39,766
see that we only have a center X


629
00:17:39,826 --> 00:17:40,306
constraint.


630
00:17:40,636 --> 00:17:42,276
We don't have any leading or


631
00:17:42,276 --> 00:17:43,976
trailing space constraint, so


632
00:17:43,976 --> 00:17:45,516
that the label can overflow.


633
00:17:46,396 --> 00:17:48,216
Let's add a leading space


634
00:17:48,666 --> 00:17:50,026
constraint to fix that.


635
00:17:50,516 --> 00:17:51,586
Again, I'm holding down the


636
00:17:51,586 --> 00:17:54,226
Control key, drag from the label


637
00:17:54,226 --> 00:17:56,176
to [inaudible] view, and select


638
00:17:56,176 --> 00:17:57,676
Leading Space to Safe Area.


639
00:17:57,676 --> 00:18:01,416
I can select the constraint to


640
00:18:01,416 --> 00:18:02,966
adapt at just its value.


641
00:18:02,966 --> 00:18:05,616
Let's put something reasonable,


642
00:18:05,616 --> 00:18:06,976
like 20, for the margin.


643
00:18:07,586 --> 00:18:11,116
And here, I can see instantly


644
00:18:11,116 --> 00:18:13,136
that my label is no longer


645
00:18:13,136 --> 00:18:13,466
clipped.


646
00:18:14,356 --> 00:18:16,416
However, it's still truncated


647
00:18:16,986 --> 00:18:18,136
and it's a very important


648
00:18:18,136 --> 00:18:19,776
message we want to show to all


649
00:18:19,776 --> 00:18:20,426
of our customers.


650
00:18:20,936 --> 00:18:21,756
That's not ideal.


651
00:18:22,856 --> 00:18:24,826
Instead of truncation, I can


652
00:18:24,826 --> 00:18:26,136
allow the label to wrap into


653
00:18:26,136 --> 00:18:27,776
multiple lines when necessary.


654
00:18:28,776 --> 00:18:31,346
Here, when I select the label I


655
00:18:31,346 --> 00:18:32,726
can see that we have Lines


656
00:18:32,796 --> 00:18:35,096
property set to one, which means


657
00:18:35,096 --> 00:18:36,566
we only allow one single line


658
00:18:36,566 --> 00:18:37,176
for the label.


659
00:18:38,176 --> 00:18:40,486
If I change the value to zero I


660
00:18:41,116 --> 00:18:43,186
can allow the label to wrap into


661
00:18:43,186 --> 00:18:44,266
any number of lines, when


662
00:18:44,266 --> 00:18:44,806
necessary.


663
00:18:45,446 --> 00:18:49,336
I can see that my label is now


664
00:18:49,336 --> 00:18:50,706
three lines in this Double


665
00:18:50,706 --> 00:18:51,666
Length Pseudolanguage.


666
00:18:52,926 --> 00:18:54,226
If I switch language back to


667
00:18:54,226 --> 00:18:56,456
English my label is still one


668
00:18:56,456 --> 00:18:58,346
line, which is exactly what we


669
00:18:58,456 --> 00:18:58,976
expected.


670
00:19:00,416 --> 00:19:02,326
I, also, encourage you to check


671
00:19:02,326 --> 00:19:04,886
the app down here, where you can


672
00:19:04,946 --> 00:19:06,606
select different screen sizes.


673
00:19:07,536 --> 00:19:08,756
I encourage you to check your


674
00:19:08,756 --> 00:19:10,286
layout in the smallest device,


675
00:19:10,286 --> 00:19:12,476
like iPhone SE, because clipping


676
00:19:12,476 --> 00:19:13,976
and truncation are more likely


677
00:19:13,976 --> 00:19:15,196
to happen in the smaller


678
00:19:15,196 --> 00:19:15,636
devices.


679
00:19:16,346 --> 00:19:19,476
Now, I wonder if our layout can


680
00:19:19,476 --> 00:19:20,466
adapt for right to left


681
00:19:20,466 --> 00:19:21,646
languages, like Arabic or


682
00:19:21,716 --> 00:19:22,106
Hebrew.


683
00:19:22,956 --> 00:19:24,846
As I said earlier, we don't have


684
00:19:24,846 --> 00:19:26,046
localizations for those


685
00:19:26,046 --> 00:19:26,706
languages yet.


686
00:19:27,626 --> 00:19:28,756
We can run another


687
00:19:28,756 --> 00:19:29,546
pseudolanguage.


688
00:19:30,466 --> 00:19:31,796
Let's open the Scheme Editor,


689
00:19:31,796 --> 00:19:34,366
again, this time in application


690
00:19:34,426 --> 00:19:34,866
language.


691
00:19:35,656 --> 00:19:36,516
And I'm going to select the


692
00:19:36,516 --> 00:19:38,546
Right to Left Pseudolanguage and


693
00:19:39,296 --> 00:19:41,266
run the app in the simulator.


694
00:19:48,586 --> 00:19:49,016
Okay.


695
00:19:49,166 --> 00:19:49,546
Browse.


696
00:19:50,986 --> 00:19:53,166
As you can here, our table will,


697
00:19:53,166 --> 00:19:55,316
now flows from right to left


698
00:19:56,366 --> 00:19:57,806
without us making any changes.


699
00:19:58,616 --> 00:19:59,596
That's because we used


700
00:19:59,596 --> 00:20:01,466
UITableView and other standard


701
00:20:01,466 --> 00:20:02,366
UIKit components.


702
00:20:03,216 --> 00:20:04,526
The system had done the hard


703
00:20:04,526 --> 00:20:05,486
work for us.


704
00:20:06,076 --> 00:20:07,806
All the section titles are now


705
00:20:07,806 --> 00:20:09,206
at the right side, which is the


706
00:20:09,206 --> 00:20:10,456
leading side for right to left.


707
00:20:11,206 --> 00:20:12,756
The chevrons here are at the


708
00:20:12,756 --> 00:20:14,086
left side, which is the trailing


709
00:20:14,086 --> 00:20:14,386
side.


710
00:20:15,596 --> 00:20:17,326
I'm going to go to Jupiter, this


711
00:20:17,326 --> 00:20:17,586
time.


712
00:20:19,046 --> 00:20:20,976
And you may notice that the Back


713
00:20:20,976 --> 00:20:22,556
button is now at the top right


714
00:20:22,556 --> 00:20:24,356
corner, instead of top left.


715
00:20:25,306 --> 00:20:26,966
That is, actually, very natural


716
00:20:26,966 --> 00:20:28,046
for right to left languages.


717
00:20:29,186 --> 00:20:30,596
Let's select a location on


718
00:20:30,596 --> 00:20:31,000
Jupiter.


719
00:20:32,626 --> 00:20:35,206
So, here's our Travel Details


720
00:20:35,206 --> 00:20:35,516
page.


721
00:20:35,996 --> 00:20:37,436
Everything seems to be okay,


722
00:20:37,436 --> 00:20:38,966
except the stepper and the


723
00:20:38,966 --> 00:20:39,706
Traveler label.


724
00:20:40,546 --> 00:20:41,816
The first issue is that the


725
00:20:41,816 --> 00:20:42,966
stepper should be at the


726
00:20:42,966 --> 00:20:44,456
trailing side, which is the left


727
00:20:44,456 --> 00:20:45,376
side for right to left.


728
00:20:46,126 --> 00:20:47,506
The Traveler label should be at


729
00:20:47,506 --> 00:20:48,616
the leading side, which is the


730
00:20:48,616 --> 00:20:49,306
right side, here.


731
00:20:50,076 --> 00:20:51,996
And also, there's an unnecessary


732
00:20:51,996 --> 00:20:53,646
spacing for the Traveler label.


733
00:20:54,856 --> 00:20:56,186
Let's fix that in that Interface


734
00:20:56,186 --> 00:20:56,486
Builder.


735
00:20:57,106 --> 00:21:01,756
Let me locate our trouble zone


736
00:21:01,756 --> 00:21:04,056
cell, is here.


737
00:21:04,336 --> 00:21:04,486
Okay.


738
00:21:05,556 --> 00:21:08,926
Zooming in a little bit.


739
00:21:09,536 --> 00:21:12,486
When I select the Traveler label


740
00:21:12,486 --> 00:21:14,596
and the stepper I can see that


741
00:21:14,596 --> 00:21:15,906
there's no constraint on them.


742
00:21:16,186 --> 00:21:16,876
That's not good.


743
00:21:17,726 --> 00:21:19,236
And of course, Xcode has a


744
00:21:19,236 --> 00:21:20,006
warning for that.


745
00:21:21,266 --> 00:21:22,906
So, one way to resolve the issue


746
00:21:22,906 --> 00:21:24,196
is to add a leading space


747
00:21:24,196 --> 00:21:26,086
constraint for the Travelers and


748
00:21:26,086 --> 00:21:27,526
a trailing space constraint for


749
00:21:27,526 --> 00:21:28,046
the stepper.


750
00:21:28,896 --> 00:21:30,266
Leading and Trailing will


751
00:21:30,266 --> 00:21:32,246
translate to right and left for


752
00:21:32,246 --> 00:21:33,156
right to left languages.


753
00:21:34,186 --> 00:21:35,896
However, here I'm going to show


754
00:21:35,896 --> 00:21:37,866
you an even simpler way, which


755
00:21:37,866 --> 00:21:40,086
is to use UIStackView, a


756
00:21:40,086 --> 00:21:41,656
high-level container view that


757
00:21:41,656 --> 00:21:43,246
uses Auto Layout under the hood.


758
00:21:44,076 --> 00:21:45,876
By using Stack View I can get


759
00:21:45,876 --> 00:21:47,286
right to left support for free.


760
00:21:47,746 --> 00:21:49,786
Let me select the two views.


761
00:21:50,836 --> 00:21:53,566
And click the Embed down here at


762
00:21:53,566 --> 00:21:54,796
the bottom right corner.


763
00:21:56,276 --> 00:21:58,876
Select Stack View.


764
00:21:59,116 --> 00:22:00,516
Now, my two views are inside


765
00:22:00,516 --> 00:22:01,416
this UIStackView.


766
00:22:02,026 --> 00:22:03,446
The only thing left is to add


767
00:22:03,446 --> 00:22:04,846
constraints to the Stack View


768
00:22:04,846 --> 00:22:05,416
itself.


769
00:22:05,416 --> 00:22:08,236
I'm going to select Stack View,


770
00:22:08,846 --> 00:22:10,276
click the Add Constraints


771
00:22:10,316 --> 00:22:10,596
button.


772
00:22:11,976 --> 00:22:13,556
I'm entering four zeros, here,


773
00:22:13,866 --> 00:22:15,276
because I want the Stack View to


774
00:22:15,276 --> 00:22:17,096
fill the table view cell as much


775
00:22:17,096 --> 00:22:17,716
as possible.


776
00:22:18,586 --> 00:22:20,166
And I like to select the


777
00:22:20,166 --> 00:22:21,516
Constrain to margins here,


778
00:22:22,026 --> 00:22:23,276
because I want some default


779
00:22:23,276 --> 00:22:24,346
margins for the Stack View.


780
00:22:24,676 --> 00:22:26,176
And I want the leading edge to


781
00:22:26,176 --> 00:22:28,006
align with the cell separators.


782
00:22:28,566 --> 00:22:29,776
And add four constraints.


783
00:22:30,856 --> 00:22:31,356
There you go.


784
00:22:32,816 --> 00:22:34,516
And I'm going to verify my


785
00:22:34,516 --> 00:22:34,896
change.


786
00:22:39,266 --> 00:22:39,446
Yep.


787
00:22:39,706 --> 00:22:40,086
Browse.


788
00:22:41,426 --> 00:22:42,916
This time, I'd like to visit


789
00:22:42,916 --> 00:22:43,116
Earth.


790
00:22:43,726 --> 00:22:46,046
And I'd like to go through


791
00:22:46,046 --> 00:22:47,896
Lisbon, Portugal, to visit


792
00:22:47,896 --> 00:22:48,656
[inaudible].


793
00:22:48,656 --> 00:22:52,576
Do that. Now, as you can see,


794
00:22:52,576 --> 00:22:54,486
because our Traveler label and


795
00:22:54,486 --> 00:22:55,946
the stepper is now inside a


796
00:22:55,946 --> 00:22:57,656
UIStackView, we get right to


797
00:22:57,656 --> 00:22:58,676
left support for free.


798
00:22:59,626 --> 00:23:02,246
Let's book this travel.


799
00:23:02,326 --> 00:23:02,586
Great.


800
00:23:03,296 --> 00:23:07,466
Now, let me summarize what we


801
00:23:07,466 --> 00:23:07,916
talked about.


802
00:23:13,386 --> 00:23:15,036
So, to make our app layout great


803
00:23:15,036 --> 00:23:16,826
for our global audience, there


804
00:23:16,826 --> 00:23:18,366
are a few simple steps.


805
00:23:18,996 --> 00:23:20,246
First, is to use high level


806
00:23:20,246 --> 00:23:21,496
containers like StackView


807
00:23:21,496 --> 00:23:23,066
whenever possible, as they


808
00:23:23,066 --> 00:23:24,396
provide a lot of heavy lifting


809
00:23:24,396 --> 00:23:24,866
for you.


810
00:23:25,526 --> 00:23:26,706
And believe me, they are just


811
00:23:26,706 --> 00:23:27,506
simpler to use.


812
00:23:28,506 --> 00:23:30,146
For finer control, remember to


813
00:23:30,146 --> 00:23:31,936
use Auto Layout and make sure to


814
00:23:31,936 --> 00:23:33,186
use leading and trailing


815
00:23:33,186 --> 00:23:34,976
constraint so that you can adapt


816
00:23:34,976 --> 00:23:36,016
for right to left languages.


817
00:23:37,016 --> 00:23:38,546
For early testing without even


818
00:23:38,546 --> 00:23:40,396
localizing your app, you can use


819
00:23:40,396 --> 00:23:42,136
the pseudolanguages in Xcode


820
00:23:42,136 --> 00:23:42,786
Scheme Editor.


821
00:23:43,556 --> 00:23:44,886
And please, don't ignore the


822
00:23:44,886 --> 00:23:45,996
Auto Layout warnings in the


823
00:23:45,996 --> 00:23:46,796
Interface Builder.


824
00:23:47,246 --> 00:23:48,456
They are very useful for


825
00:23:48,456 --> 00:23:50,486
avoiding clipping, truncation,


826
00:23:50,486 --> 00:23:51,606
and overlapping issues.


827
00:23:52,516 --> 00:23:54,286
Now, over to Karan to talk about


828
00:23:54,566 --> 00:23:54,876
text.


829
00:23:55,016 --> 00:23:57,000
[ Applause ]


830
00:23:57,276 --> 00:23:58,006
>> Thank you, Dongyuan.


831
00:23:58,946 --> 00:24:00,306
Good morning, everyone.


832
00:24:01,056 --> 00:24:01,866
Let's talk about text.


833
00:24:03,276 --> 00:24:06,546
At Apple, a high quality


834
00:24:06,546 --> 00:24:08,096
typographical experience is a


835
00:24:08,246 --> 00:24:09,786
key part of our design process.


836
00:24:11,056 --> 00:24:13,906
And it's very important to us


837
00:24:14,356 --> 00:24:17,486
how text looks on screen and how


838
00:24:17,486 --> 00:24:18,166
it's designed.


839
00:24:19,336 --> 00:24:21,446
And also, the way that it


840
00:24:21,446 --> 00:24:23,216
translates to other languages.


841
00:24:26,816 --> 00:24:29,016
So, let me walk you through some


842
00:24:29,196 --> 00:24:30,806
key aspects that we keep in mind


843
00:24:30,806 --> 00:24:32,346
when we localize our own apps


844
00:24:32,346 --> 00:24:33,246
into other languages.


845
00:24:33,656 --> 00:24:34,886
And how you can take advantage


846
00:24:34,886 --> 00:24:36,416
of these things to make your


847
00:24:36,656 --> 00:24:37,886
apps look great in other


848
00:24:37,886 --> 00:24:38,316
languages.


849
00:24:41,226 --> 00:24:42,616
Now, I'm going to talk about


850
00:24:42,616 --> 00:24:44,426
three main topics, set up some


851
00:24:44,426 --> 00:24:45,866
fundamentals with languages and


852
00:24:45,866 --> 00:24:46,126
scripts.


853
00:24:46,316 --> 00:24:48,356
And then, dive into typefaces


854
00:24:48,386 --> 00:24:49,026
and styles.


855
00:24:49,986 --> 00:24:51,176
Let's talk about languages and


856
00:24:51,796 --> 00:24:52,000
scripts.


857
00:24:54,666 --> 00:24:56,276
What is a script?


858
00:24:56,556 --> 00:24:57,966
So, when I'm talking about


859
00:24:57,966 --> 00:24:59,026
script, I don't mean a Bash


860
00:24:59,026 --> 00:25:00,206
script or a Python script.


861
00:25:00,996 --> 00:25:04,026
I'm talking about the way that a


862
00:25:04,026 --> 00:25:04,886
language is written.


863
00:25:05,196 --> 00:25:06,496
So, the writing system.


864
00:25:06,586 --> 00:25:07,696
The letters that you use to


865
00:25:07,696 --> 00:25:08,466
write a language.


866
00:25:08,986 --> 00:25:09,996
These are some of the scripts


867
00:25:09,996 --> 00:25:11,396
that we support that are written


868
00:25:11,396 --> 00:25:12,066
from left to right.


869
00:25:14,276 --> 00:25:15,896
We, also, have scripts that are


870
00:25:15,896 --> 00:25:18,206
written from right to left.


871
00:25:18,916 --> 00:25:20,956
The key thing to note about all


872
00:25:20,956 --> 00:25:22,206
of these scripts is that they're


873
00:25:22,206 --> 00:25:22,956
multilingual.


874
00:25:23,546 --> 00:25:25,376
So, each script supports a huge


875
00:25:25,376 --> 00:25:26,656
variety of languages that are


876
00:25:26,656 --> 00:25:27,146
written in it.


877
00:25:27,776 --> 00:25:29,706
And as you can see, the Latin


878
00:25:29,706 --> 00:25:31,106
script here supports everything


879
00:25:31,106 --> 00:25:32,686
from English to Vietnamese.


880
00:25:33,936 --> 00:25:34,896
And this is true for other


881
00:25:34,896 --> 00:25:35,496
scripts, as well.


882
00:25:35,496 --> 00:25:37,596
For example, the Cyrillic script


883
00:25:37,596 --> 00:25:38,836
supports a variety of different


884
00:25:38,836 --> 00:25:39,346
languages.


885
00:25:40,396 --> 00:25:42,266
And if you look at right to left


886
00:25:42,266 --> 00:25:44,136
scripts, we see that the Arabic


887
00:25:44,276 --> 00:25:45,636
script, not the Arabic language,


888
00:25:45,636 --> 00:25:46,856
but the Arabic script supports a


889
00:25:46,856 --> 00:25:48,136
variety of different languages,


890
00:25:48,176 --> 00:25:49,676
such as Arabic and Persian,


891
00:25:50,246 --> 00:25:51,176
Urdu, etcetera.


892
00:25:52,726 --> 00:25:54,436
So, what you're seeing on


893
00:25:54,436 --> 00:25:55,676
screen, yes, there's a lot of


894
00:25:55,676 --> 00:25:56,596
visual variety.


895
00:25:57,246 --> 00:25:58,886
But this is not just for show.


896
00:25:58,886 --> 00:25:59,996
There's, actually, a lot of


897
00:25:59,996 --> 00:26:01,116
implications when you develop


898
00:26:01,116 --> 00:26:02,616
your apps and different scripts


899
00:26:02,976 --> 00:26:05,616
because some concepts don't map


900
00:26:05,616 --> 00:26:06,776
across scripts as easily as


901
00:26:06,776 --> 00:26:07,126
others.


902
00:26:07,486 --> 00:26:08,466
So, let me show you a few


903
00:26:08,466 --> 00:26:09,136
examples of this.


904
00:26:09,806 --> 00:26:12,566
Let's talk about typefaces.


905
00:26:13,986 --> 00:26:15,876
So, here you see the Health app


906
00:26:15,876 --> 00:26:16,716
in English.


907
00:26:17,246 --> 00:26:19,546
So, you see a lot of labels.


908
00:26:21,156 --> 00:26:22,566
Now, you see the same app in


909
00:26:22,566 --> 00:26:23,056
Catalan.


910
00:26:23,786 --> 00:26:27,946
And lastly, you see the same app


911
00:26:27,946 --> 00:26:28,656
in Vietnamese.


912
00:26:29,576 --> 00:26:31,336
Now, the thing that I'd like to


913
00:26:32,396 --> 00:26:34,056
call your attention to is that


914
00:26:34,056 --> 00:26:36,106
all the text here on screen is


915
00:26:36,106 --> 00:26:37,606
rendered using our system font,


916
00:26:37,746 --> 00:26:38,376
San Francisco.


917
00:26:39,546 --> 00:26:41,106
And the other thing I'd like for


918
00:26:41,106 --> 00:26:42,456
you to notice is that everything


919
00:26:42,456 --> 00:26:43,276
is rendered beautifully.


920
00:26:44,156 --> 00:26:45,636
That's because San Francisco has


921
00:26:45,636 --> 00:26:47,076
support for a huge variety of


922
00:26:47,076 --> 00:26:47,916
different languages.


923
00:26:48,346 --> 00:26:50,036
And when you use the system font


924
00:26:50,036 --> 00:26:51,446
in your apps, you're guaranteed


925
00:26:51,446 --> 00:26:52,566
to get that support for free.


926
00:26:54,246 --> 00:26:56,736
Now, any text label that you


927
00:26:56,736 --> 00:26:58,476
create in Xcode will get


928
00:26:58,526 --> 00:26:59,676
San Francisco by default.


929
00:27:00,406 --> 00:27:02,426
But if you want to go one step


930
00:27:02,496 --> 00:27:05,696
further, use a text style.


931
00:27:06,716 --> 00:27:07,726
We support a variety of


932
00:27:07,726 --> 00:27:09,606
different styles in our OS that


933
00:27:09,606 --> 00:27:11,776
are meticulously implemented to


934
00:27:11,776 --> 00:27:13,356
support a variety of different


935
00:27:13,356 --> 00:27:13,966
use cases.


936
00:27:14,616 --> 00:27:17,026
And also, to map across


937
00:27:17,026 --> 00:27:18,046
different languages, really


938
00:27:18,046 --> 00:27:18,326
well.


939
00:27:19,466 --> 00:27:20,866
So, when you use a text style


940
00:27:20,866 --> 00:27:22,806
you guarantee a consistent high


941
00:27:22,806 --> 00:27:23,876
quality experience to your


942
00:27:23,876 --> 00:27:24,246
users.


943
00:27:24,876 --> 00:27:27,216
You can also go one step


944
00:27:27,286 --> 00:27:27,666
further.


945
00:27:28,956 --> 00:27:29,966
If you set your label to


946
00:27:29,966 --> 00:27:31,286
automatically adjust its font


947
00:27:31,286 --> 00:27:33,426
size, it will do so with respect


948
00:27:33,426 --> 00:27:34,806
to the user's text size setting.


949
00:27:35,346 --> 00:27:36,626
And this is really handy for


950
00:27:36,626 --> 00:27:38,326
people who use smaller or large


951
00:27:38,326 --> 00:27:40,356
sizes for their text.


952
00:27:40,356 --> 00:27:41,476
Like myself.


953
00:27:42,166 --> 00:27:43,586
So, I highly encourage you to


954
00:27:43,586 --> 00:27:45,666
use that and this will ensure


955
00:27:45,666 --> 00:27:47,116
that your text styles scale


956
00:27:47,116 --> 00:27:47,716
appropriately.


957
00:27:48,326 --> 00:27:52,236
But let's say, that like us,


958
00:27:52,236 --> 00:27:53,176
we're making this Vacation


959
00:27:53,176 --> 00:27:54,636
Planet app to go to Jupiter, to


960
00:27:54,636 --> 00:27:55,136
go to Mars.


961
00:27:55,916 --> 00:27:58,766
And we wanted to have this fun


962
00:27:58,766 --> 00:28:00,946
vacation look to it, which it


963
00:28:00,946 --> 00:28:01,936
doesn't right now, because


964
00:28:01,936 --> 00:28:02,816
everything is in the system


965
00:28:02,816 --> 00:28:03,116
font.


966
00:28:03,256 --> 00:28:05,266
So, we decided that the title of


967
00:28:05,266 --> 00:28:06,706
the font should evoke the


968
00:28:06,706 --> 00:28:07,616
personality of the app.


969
00:28:08,996 --> 00:28:10,096
And so, we looked at a few


970
00:28:10,096 --> 00:28:11,496
different fun fonts to choose


971
00:28:11,496 --> 00:28:11,786
from.


972
00:28:13,096 --> 00:28:14,006
We looked at this one, for


973
00:28:14,006 --> 00:28:14,486
starters.


974
00:28:14,956 --> 00:28:16,636
But as Joaquim mentioned from


975
00:28:16,636 --> 00:28:18,436
the start, we like to keep


976
00:28:18,626 --> 00:28:20,486
localization as a central part


977
00:28:20,486 --> 00:28:21,736
of our development and design


978
00:28:22,056 --> 00:28:22,556
process.


979
00:28:22,806 --> 00:28:24,556
So, the first thing we did was


980
00:28:25,316 --> 00:28:26,796
to check does this work for all


981
00:28:26,796 --> 00:28:27,556
the languages we need to


982
00:28:27,556 --> 00:28:28,006
support?


983
00:28:28,096 --> 00:28:29,616
Well, we already had a French


984
00:28:29,616 --> 00:28:30,326
localization.


985
00:28:30,836 --> 00:28:31,516
So, we tried it out.


986
00:28:31,516 --> 00:28:33,976
As it turns out, it doesn't.


987
00:28:34,656 --> 00:28:37,076
So, we kept looking at our short


988
00:28:37,076 --> 00:28:39,286
list of options.


989
00:28:39,746 --> 00:28:40,846
And we looked at this other


990
00:28:40,846 --> 00:28:41,326
typeface.


991
00:28:42,396 --> 00:28:44,106
And when we tried it out in


992
00:28:44,166 --> 00:28:45,576
French, voila!


993
00:28:45,936 --> 00:28:47,496
It works because it supports all


994
00:28:47,496 --> 00:28:48,256
the characters needed for


995
00:28:48,256 --> 00:28:48,576
French.


996
00:28:49,156 --> 00:28:49,946
So, that's great news.


997
00:28:52,256 --> 00:28:54,416
So, the next step for our app


998
00:28:54,416 --> 00:28:55,766
was to expand to Vietnamese.


999
00:28:55,766 --> 00:28:57,556
But we didn't have a Vietnamese


1000
00:28:57,556 --> 00:28:58,486
localization, yet.


1001
00:28:59,266 --> 00:29:01,356
So, one great tool that you can


1002
00:29:01,356 --> 00:29:03,226
use is FontBook, which comes


1003
00:29:03,356 --> 00:29:06,126
installed on every Mac, even if


1004
00:29:06,126 --> 00:29:06,846
you're not a developer.


1005
00:29:06,846 --> 00:29:08,086
It comes installed on every Mac.


1006
00:29:08,636 --> 00:29:10,166
And in FontBook you can easily


1007
00:29:10,216 --> 00:29:11,986
search for the name of a


1008
00:29:12,026 --> 00:29:13,786
language, like Vietnamese, here.


1009
00:29:14,516 --> 00:29:16,956
And we see here, that in the


1010
00:29:16,996 --> 00:29:19,066
font that we chose Vietnamese is


1011
00:29:19,066 --> 00:29:19,936
in the set of supported


1012
00:29:19,936 --> 00:29:20,366
languages.


1013
00:29:20,916 --> 00:29:22,726
In fact, this font also supports


1014
00:29:22,896 --> 00:29:23,996
Cyrillic and Greek script.


1015
00:29:24,116 --> 00:29:26,316
So, we are somewhat sure that if


1016
00:29:26,316 --> 00:29:27,596
we expand to Russian and


1017
00:29:27,596 --> 00:29:29,226
Ukrainian and Greek later that


1018
00:29:29,226 --> 00:29:30,336
this font will work for us.


1019
00:29:31,256 --> 00:29:33,266
Now, I should advise some


1020
00:29:33,266 --> 00:29:33,886
caution here.


1021
00:29:34,416 --> 00:29:35,886
Just because FontBook says that


1022
00:29:35,886 --> 00:29:37,326
a font supports a given language


1023
00:29:37,326 --> 00:29:38,736
doesn't mean that you don't have


1024
00:29:38,776 --> 00:29:40,626
to, actually, test your app in


1025
00:29:40,626 --> 00:29:41,176
that language.


1026
00:29:41,176 --> 00:29:42,406
You still need to make sure that


1027
00:29:42,736 --> 00:29:44,086
the font really works for that


1028
00:29:44,086 --> 00:29:48,746
language, by trying it out.


1029
00:29:49,046 --> 00:29:51,856
So, we've got our beautiful fun


1030
00:29:51,946 --> 00:29:53,986
font for our Vacation Planet


1031
00:29:54,166 --> 00:29:54,636
app.


1032
00:29:55,526 --> 00:29:56,866
And now, we're going to expand


1033
00:29:57,516 --> 00:29:58,216
even further.


1034
00:29:58,396 --> 00:29:59,336
So, we want to do more


1035
00:29:59,336 --> 00:29:59,786
languages.


1036
00:29:59,876 --> 00:30:00,726
Specifically, we want to


1037
00:30:00,726 --> 00:30:02,466
localize into Chinese.


1038
00:30:03,346 --> 00:30:03,856
Okay.


1039
00:30:04,026 --> 00:30:05,326
So, we sent off all our strings


1040
00:30:05,326 --> 00:30:06,666
for translation and they've come


1041
00:30:06,666 --> 00:30:06,896
back.


1042
00:30:07,386 --> 00:30:08,876
And our app is now perfectly


1043
00:30:08,876 --> 00:30:09,976
localized into simplified


1044
00:30:09,976 --> 00:30:10,346
Chinese.


1045
00:30:11,036 --> 00:30:11,546
Cool.


1046
00:30:12,956 --> 00:30:14,716
But it's not really, though.


1047
00:30:14,816 --> 00:30:15,886
Because look at what happened to


1048
00:30:15,886 --> 00:30:16,356
the title.


1049
00:30:17,366 --> 00:30:19,146
So, in English, we have this fun


1050
00:30:19,196 --> 00:30:22,016
font, but in Chinese we are


1051
00:30:22,016 --> 00:30:22,976
using the system font.


1052
00:30:23,126 --> 00:30:24,506
That's because our font only


1053
00:30:24,506 --> 00:30:25,636
supports the Cyrillic, Greek,


1054
00:30:25,636 --> 00:30:26,336
and Latin scripts.


1055
00:30:27,926 --> 00:30:29,386
So, of course, the way to fix


1056
00:30:29,386 --> 00:30:30,856
this is to repeat the same


1057
00:30:30,986 --> 00:30:33,696
process for Chinese.


1058
00:30:33,696 --> 00:30:35,236
And here now, we have out fun


1059
00:30:35,276 --> 00:30:36,136
font in Chinese.


1060
00:30:36,326 --> 00:30:38,416
It's as simple as that.


1061
00:30:39,136 --> 00:30:40,556
And unfortunately, I can't


1062
00:30:40,556 --> 00:30:41,326
really help you with that.


1063
00:30:41,326 --> 00:30:42,606
That's a stylistic thing and you


1064
00:30:42,606 --> 00:30:43,616
have to choose your own fonts.


1065
00:30:43,846 --> 00:30:45,586
But I can show you how this is


1066
00:30:45,586 --> 00:30:46,126
done in code.


1067
00:30:48,006 --> 00:30:49,646
So, this is really


1068
00:30:49,646 --> 00:30:50,216
straightforward.


1069
00:30:50,646 --> 00:30:52,596
First of all, you start with


1070
00:30:52,596 --> 00:30:53,676
your font for your development


1071
00:30:53,676 --> 00:30:55,006
language, normally.


1072
00:30:55,056 --> 00:30:57,096
Such as, in our case, it's


1073
00:30:57,146 --> 00:30:57,536
English.


1074
00:30:57,636 --> 00:30:58,856
So, we choose our Latin script


1075
00:30:58,856 --> 00:30:59,896
font and get our font here.


1076
00:31:01,266 --> 00:31:02,726
And the key concept that I want


1077
00:31:02,726 --> 00:31:03,976
to introduce you to, here, is


1078
00:31:03,976 --> 00:31:05,286
called a Cascade List.


1079
00:31:05,856 --> 00:31:08,746
So, a Cascade List says if I'm


1080
00:31:08,746 --> 00:31:11,326
looking to render this Chinese


1081
00:31:11,766 --> 00:31:14,086
character and this first font


1082
00:31:14,086 --> 00:31:15,796
doesn't have it, what font


1083
00:31:15,796 --> 00:31:17,396
should I use after this to look


1084
00:31:17,396 --> 00:31:18,166
for this character?


1085
00:31:18,556 --> 00:31:19,666
Now, if you don't specify a


1086
00:31:19,666 --> 00:31:20,876
Cascade List you're going to get


1087
00:31:20,876 --> 00:31:21,606
the system font.


1088
00:31:22,066 --> 00:31:23,376
But if you do have a Cascade


1089
00:31:23,376 --> 00:31:24,646
List, then you can specify other


1090
00:31:24,646 --> 00:31:26,426
fonts to try before falling back


1091
00:31:26,646 --> 00:31:27,446
to the system font.


1092
00:31:28,426 --> 00:31:29,526
So, in this case, we create a


1093
00:31:29,526 --> 00:31:30,586
Cascade List with a font


1094
00:31:30,586 --> 00:31:32,096
descriptor for our font for


1095
00:31:32,096 --> 00:31:34,046
Chinese that we hand-picked.


1096
00:31:34,836 --> 00:31:36,306
Now, if your app supports


1097
00:31:36,306 --> 00:31:37,316
multiple scripts you add


1098
00:31:37,316 --> 00:31:39,036
multiple things here and that's


1099
00:31:39,286 --> 00:31:40,516
as simple as it works.


1100
00:31:41,616 --> 00:31:43,056
And once you've got a Cascade


1101
00:31:43,056 --> 00:31:44,046
List you create a new font


1102
00:31:44,046 --> 00:31:44,556
descriptor.


1103
00:31:44,556 --> 00:31:45,656
And then, you create a new font.


1104
00:31:45,896 --> 00:31:46,566
Pretty straightforward.


1105
00:31:47,156 --> 00:31:50,136
And also, make sure that if your


1106
00:31:50,136 --> 00:31:51,846
app used dynamic type, which it


1107
00:31:51,846 --> 00:31:54,506
really should, then your font


1108
00:31:54,506 --> 00:31:55,706
should adjust to that, as well.


1109
00:31:55,706 --> 00:31:57,066
And again, that's as simple as


1110
00:31:57,066 --> 00:31:57,736
an API call.


1111
00:31:59,466 --> 00:32:00,286
Let's see some examples.


1112
00:32:02,256 --> 00:32:04,126
So, this is the new Word of the


1113
00:32:04,126 --> 00:32:06,256
Day screensaver in macOS Mojave.


1114
00:32:07,316 --> 00:32:08,786
And as you can see, for this new


1115
00:32:08,786 --> 00:32:10,286
design we've chosen a rounded


1116
00:32:10,346 --> 00:32:10,696
style.


1117
00:32:11,256 --> 00:32:13,466
And of course, it wouldn't make


1118
00:32:13,466 --> 00:32:15,086
sense if we didn't, also, choose


1119
00:32:15,186 --> 00:32:16,796
equivalent rounded styles for


1120
00:32:16,796 --> 00:32:17,866
all the languages that the


1121
00:32:17,866 --> 00:32:19,196
screensaver supported, which


1122
00:32:19,196 --> 00:32:20,096
includes Japanese.


1123
00:32:20,786 --> 00:32:23,686
And also, new in macOS Mojave,


1124
00:32:23,896 --> 00:32:25,146
simplified and traditional


1125
00:32:25,146 --> 00:32:25,536
Chinese.


1126
00:32:29,566 --> 00:32:31,286
Another example is the Messages


1127
00:32:31,286 --> 00:32:34,726
app, in which you can respond to


1128
00:32:34,796 --> 00:32:36,486
a message using a tap back


1129
00:32:36,486 --> 00:32:36,946
reaction.


1130
00:32:37,706 --> 00:32:39,426
Now, here you'll see that the


1131
00:32:39,526 --> 00:32:42,056
ha-ha in English has been not


1132
00:32:42,056 --> 00:32:43,626
only translated to other


1133
00:32:43,626 --> 00:32:44,146
languages.


1134
00:32:44,186 --> 00:32:45,386
But has, also, been matched in


1135
00:32:45,446 --> 00:32:46,656
style, so you get the same


1136
00:32:46,656 --> 00:32:49,036
bubbly fun look in all the


1137
00:32:49,036 --> 00:32:50,806
languages that we support.


1138
00:32:51,736 --> 00:32:53,176
That's it for typefaces.


1139
00:32:54,626 --> 00:32:55,786
Let's talk about styles.


1140
00:32:56,836 --> 00:32:57,726
Again, I should start with the


1141
00:32:57,726 --> 00:32:58,336
definition.


1142
00:32:59,486 --> 00:33:02,096
What do I mean by a style?


1143
00:33:02,666 --> 00:33:04,496
So, broadly speaking, I'm


1144
00:33:04,496 --> 00:33:06,316
referring to aspects of your


1145
00:33:06,316 --> 00:33:07,616
text that you choose once you've


1146
00:33:07,616 --> 00:33:08,666
chosen a typeface.


1147
00:33:09,176 --> 00:33:11,276
So, let's say the font weight,


1148
00:33:11,746 --> 00:33:13,616
like how bold it is, or whether


1149
00:33:13,616 --> 00:33:16,036
it's italicized, and what the


1150
00:33:16,086 --> 00:33:17,246
size of the font may be.


1151
00:33:19,546 --> 00:33:21,636
So, the key thing to keep in


1152
00:33:21,636 --> 00:33:23,246
mind is that some aspects


1153
00:33:23,816 --> 00:33:26,156
translate better to other


1154
00:33:26,156 --> 00:33:27,286
languages and others don't.


1155
00:33:27,286 --> 00:33:29,086
So, let's take a look at an


1156
00:33:29,086 --> 00:33:31,436
example of where something might


1157
00:33:31,466 --> 00:33:32,136
not translate.


1158
00:33:32,876 --> 00:33:34,306
So, here we have a simple string


1159
00:33:34,306 --> 00:33:34,816
in English.


1160
00:33:35,586 --> 00:33:36,866
We've italicized Mars and 2


1161
00:33:36,866 --> 00:33:37,946
Travelers to indicate that


1162
00:33:37,946 --> 00:33:39,266
they're variables, so they can


1163
00:33:39,266 --> 00:33:39,646
change.


1164
00:33:41,666 --> 00:33:42,936
And this is how it translates


1165
00:33:42,936 --> 00:33:43,966
into traditional Chinese.


1166
00:33:45,496 --> 00:33:46,376
There are a couple of issues


1167
00:33:46,916 --> 00:33:47,000
here.


1168
00:33:48,936 --> 00:33:51,426
Mars is italicized in English.


1169
00:33:51,586 --> 00:33:54,126
It's not italicized in Chinese.


1170
00:33:54,336 --> 00:33:54,696
Why?


1171
00:33:55,096 --> 00:33:56,716
Because italicization is not a


1172
00:33:56,716 --> 00:33:57,726
concept in Chinese.


1173
00:33:57,856 --> 00:33:58,926
And it's not a concept in,


1174
00:33:58,926 --> 00:34:00,596
actually, most scripts outside


1175
00:34:00,596 --> 00:34:01,696
of Latin, Cyrillic, and Greek.


1176
00:34:03,406 --> 00:34:04,936
So, a design that uses italics,


1177
00:34:05,366 --> 00:34:06,186
probably, won't work.


1178
00:34:06,996 --> 00:34:08,886
The other thing to note is that


1179
00:34:08,886 --> 00:34:10,076
in Chinese there are no spaces


1180
00:34:10,076 --> 00:34:11,326
between words, and also, there


1181
00:34:11,326 --> 00:34:13,206
is no concept of uppercase and


1182
00:34:13,206 --> 00:34:13,936
lowercase letters.


1183
00:34:14,306 --> 00:34:15,626
So, you kind of lose a natural


1184
00:34:15,626 --> 00:34:17,085
distinction that you get in


1185
00:34:17,085 --> 00:34:18,485
English when you translate it


1186
00:34:19,326 --> 00:34:19,976
into Chinese.


1187
00:34:20,286 --> 00:34:21,985
A couple of small things to


1188
00:34:21,985 --> 00:34:23,255
note, also, is that the word


1189
00:34:23,255 --> 00:34:25,775
order is different.


1190
00:34:25,896 --> 00:34:27,406
And also, because the 2 still


1191
00:34:27,406 --> 00:34:29,106
comes from the Latin script and


1192
00:34:29,106 --> 00:34:30,646
is still italicized, it doesn't


1193
00:34:30,646 --> 00:34:31,806
look great.


1194
00:34:32,755 --> 00:34:34,315
So, how can you fix this?


1195
00:34:35,846 --> 00:34:38,346
Well, the keys to realizing that


1196
00:34:38,346 --> 00:34:39,755
you're doing emphasis, not


1197
00:34:39,755 --> 00:34:41,106
necessarily italics.


1198
00:34:41,656 --> 00:34:42,886
And emphasis can be done in


1199
00:34:42,886 --> 00:34:43,835
multiple different ways.


1200
00:34:44,045 --> 00:34:44,956
This is a great way to do


1201
00:34:44,956 --> 00:34:46,096
emphasis that works across


1202
00:34:46,186 --> 00:34:47,186
several different languages.


1203
00:34:47,295 --> 00:34:48,386
In fact, it works for all the


1204
00:34:48,386 --> 00:34:49,926
languages that we support, which


1205
00:34:49,926 --> 00:34:52,636
is to bold a given word.


1206
00:34:53,166 --> 00:34:57,256
Lastly, let's talk about


1207
00:34:57,366 --> 00:34:58,866
emphasis at a character level or


1208
00:34:58,866 --> 00:34:59,916
sub-word level.


1209
00:35:01,476 --> 00:35:02,596
Let's say we have an app with a


1210
00:35:02,656 --> 00:35:04,696
Search feature and we want to


1211
00:35:04,696 --> 00:35:05,866
highlight the part of the


1212
00:35:05,866 --> 00:35:07,326
results that matched to make it


1213
00:35:07,326 --> 00:35:08,266
clear to the user what's


1214
00:35:08,266 --> 00:35:08,706
happening.


1215
00:35:09,636 --> 00:35:11,066
Now, this works really well for


1216
00:35:11,066 --> 00:35:13,756
English, by using a bolder


1217
00:35:13,756 --> 00:35:14,986
weight for the matched segment.


1218
00:35:15,676 --> 00:35:19,716
It works really badly for Hindi.


1219
00:35:20,226 --> 00:35:23,446
So, what you're seeing here, so


1220
00:35:23,476 --> 00:35:24,916
anybody who can read Hindi will


1221
00:35:24,916 --> 00:35:26,056
tell you that everything on the


1222
00:35:26,056 --> 00:35:27,176
right-hand side looks completely


1223
00:35:27,176 --> 00:35:27,596
broken.


1224
00:35:28,406 --> 00:35:31,096
Any time you see a dotted circle


1225
00:35:31,346 --> 00:35:33,646
inside a Hindi word, something


1226
00:35:33,646 --> 00:35:34,926
has gone very, very wrong.


1227
00:35:35,896 --> 00:35:37,396
And the reason this is happening


1228
00:35:37,796 --> 00:35:39,286
is because even though it's the


1229
00:35:39,286 --> 00:35:40,826
same font family, different


1230
00:35:40,826 --> 00:35:42,716
weights within that font are,


1231
00:35:42,716 --> 00:35:43,926
actually, a different font.


1232
00:35:44,326 --> 00:35:45,446
And you can't have the


1233
00:35:45,446 --> 00:35:46,996
appropriate joining behavior for


1234
00:35:46,996 --> 00:35:48,956
languages like Hindi if you have


1235
00:35:48,996 --> 00:35:49,836
two different fonts.


1236
00:35:51,466 --> 00:35:54,026
So, one easy way to solve this


1237
00:35:54,026 --> 00:35:55,856
problem is use a different kind


1238
00:35:55,856 --> 00:35:57,316
of emphasis at a character


1239
00:35:57,316 --> 00:35:57,526
level.


1240
00:35:57,526 --> 00:35:58,596
So, at a character level you can


1241
00:35:58,596 --> 00:36:00,766
use something like using a


1242
00:36:02,016 --> 00:36:02,666
different color.


1243
00:36:03,286 --> 00:36:04,966
For example, here we use black


1244
00:36:04,966 --> 00:36:07,146
color for the math segment and


1245
00:36:07,226 --> 00:36:08,206
gray for the remainder of the


1246
00:36:08,206 --> 00:36:08,486
word.


1247
00:36:08,936 --> 00:36:09,926
This works really well.


1248
00:36:10,566 --> 00:36:13,866
Now, you'll see some dotted


1249
00:36:13,896 --> 00:36:15,626
circles on the keyboard.


1250
00:36:15,696 --> 00:36:16,786
That's perfectly fine.


1251
00:36:16,886 --> 00:36:18,416
They're dependent marks.


1252
00:36:21,906 --> 00:36:24,196
And here's the same example in


1253
00:36:24,246 --> 00:36:24,646
Arabic.


1254
00:36:25,146 --> 00:36:26,986
Again, the same approach is used


1255
00:36:27,046 --> 00:36:28,836
all over iOS and macOS, and it


1256
00:36:28,836 --> 00:36:30,496
works really well for many


1257
00:36:30,496 --> 00:36:30,966
purposes.


1258
00:36:32,336 --> 00:36:34,306
And I should also mention that


1259
00:36:34,306 --> 00:36:36,336
this is really easy to do with


1260
00:36:36,336 --> 00:36:37,500
attributed strings.


1261
00:36:40,596 --> 00:36:43,676
Finally, let's go over


1262
00:36:43,676 --> 00:36:44,566
everything that we've talked


1263
00:36:44,566 --> 00:36:44,876
about.


1264
00:36:48,576 --> 00:36:50,456
First off, it's important to


1265
00:36:50,766 --> 00:36:52,356
start planning early in your


1266
00:36:52,356 --> 00:36:54,806
apps, not only the development,


1267
00:36:54,906 --> 00:36:56,096
but also, the design phase.


1268
00:36:59,666 --> 00:37:00,776
Once you know the languages


1269
00:37:00,776 --> 00:37:02,096
you're going to localize into


1270
00:37:02,386 --> 00:37:04,246
and plan to extend to in the


1271
00:37:04,246 --> 00:37:06,796
future, internationalize as you


1272
00:37:06,796 --> 00:37:07,106
go.


1273
00:37:07,816 --> 00:37:09,746
Technologies like Auto Layout,


1274
00:37:09,966 --> 00:37:12,626
StackViews, and dynamic type are


1275
00:37:12,816 --> 00:37:14,536
very simple to adopt while


1276
00:37:14,536 --> 00:37:15,266
you're in the process of


1277
00:37:15,266 --> 00:37:16,156
building your feature.


1278
00:37:16,586 --> 00:37:17,996
But if you finish your project


1279
00:37:17,996 --> 00:37:19,636
and try to come back and use


1280
00:37:19,636 --> 00:37:20,426
them, then you may have to


1281
00:37:20,426 --> 00:37:21,846
completely rearchitect your app.


1282
00:37:21,846 --> 00:37:24,206
And that will be a lot of work.


1283
00:37:25,486 --> 00:37:28,056
If you're doing something for


1284
00:37:28,056 --> 00:37:29,576
which you feel, oh, yeah, there


1285
00:37:29,576 --> 00:37:30,696
should be an API for this,


1286
00:37:30,696 --> 00:37:30,916
right?


1287
00:37:30,916 --> 00:37:32,916
There probably is an API for it.


1288
00:37:33,316 --> 00:37:35,866
So, make sure that when you're


1289
00:37:35,916 --> 00:37:37,546
doing something like formatting


1290
00:37:37,546 --> 00:37:41,076
any kind of data, to make sure


1291
00:37:41,076 --> 00:37:42,096
to look to see if there's a


1292
00:37:42,156 --> 00:37:42,906
formatter class.


1293
00:37:43,206 --> 00:37:44,276
And also, make sure to look to


1294
00:37:44,276 --> 00:37:45,706
see if there is an API for


1295
00:37:45,706 --> 00:37:46,776
anything you're doing with text


1296
00:37:47,576 --> 00:37:48,656
before trying to ruin your own


1297
00:37:48,656 --> 00:37:49,366
implementation.


1298
00:37:51,766 --> 00:37:55,266
And lastly, ensure that nothing


1299
00:37:55,266 --> 00:37:56,396
is lost in translation.


1300
00:37:56,676 --> 00:37:58,766
So, the key thing to realize


1301
00:37:58,766 --> 00:38:00,696
here is that every localization


1302
00:38:00,696 --> 00:38:02,266
of your app is a unique


1303
00:38:02,266 --> 00:38:02,866
experience.


1304
00:38:03,556 --> 00:38:05,456
And you need to make sure that


1305
00:38:05,456 --> 00:38:07,626
your intent that you specified


1306
00:38:07,686 --> 00:38:08,976
in your development language


1307
00:38:09,336 --> 00:38:10,706
actually makes it over to all


1308
00:38:10,706 --> 00:38:11,686
the other languages that you


1309
00:38:11,726 --> 00:38:12,176
support.


1310
00:38:12,176 --> 00:38:14,006
And that nothing is lost along


1311
00:38:14,006 --> 00:38:14,296
the way.


1312
00:38:15,946 --> 00:38:16,806
Thank you, very much.


1313
00:38:17,516 --> 00:38:23,500
[ Applause ]

