{\rtf1\ansi\ansicpg1252\cocoartf909\cocoasubrtf800
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\vieww13500\viewh14220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs36 \cf0 LayerBackedOpenGLView
\b0\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 June 11, 2007\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Purpose
\b0 \
The ability to render a Cocoa view hierarchy as a Core Animation layer tree opens the possibility of freely combining disparate types of content in ways heretofore difficult.  This code sample provides a simple example of one such combination that is now becoming possible: hosting Cocoa controls as subviews of an 
\f1\fs20 NSOpenGLView
\f0\fs24 .\
\
This sample is part of the session:\
	WWDC 2007 Session 210, "Building Animated Cocoa User Interfaces"\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\b \cf0 Sample Requirements
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qj\pardirnatural
\cf0 The supplied Xcode project was created using Xcode v3.0 running under Mac OS X 10.5.x or later. The project will create a Universal Binary.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \

\b About the Sample
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 Running the application brings up a window containing an instance of an ordinary 
\f1\fs20 NSOpenGLView
\f0\fs24  subclass.  Toggling the "Layer-backed" checkbox switches the OpenGL view into layer-backed mode (by setting its "
\f1\fs20 wantsLayer
\f0\fs24 " property to YES), and adds as an ordinary subview of the OpenGL view a custom NSBox containing a set of standard Cocoa controls that are wired up to affect the rendered OpenGL content.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 AppKit endeavors to make the layer-backed operating mode of NSOpenGLViews work as automatically as possible, given that switching an OpenGL view between layer-backed and conventional rendering modes may require certain "one-time" OpenGL setup to be performed again.\
\
Enabling the "wantsLayer" property of an NSOpenGLView activates layer-backed rendering of the GL view.  As is the case for layer-backed views in general, drawing of a layer-backed OpenGL view proceeds mostly normally, via invocation of the view's 
\f1\fs20 -drawRect:
\f0\fs24  method.  The layer-backed rendering mode uses its own 
\f1\fs20 NSOpenGLContext
\f0\fs24 , however, which is distinct from the NSOpenGLContext that the view uses for drawing in non-layer-backed mode.  AppKit, working in concert with CoreAnimation, automatically creates this context, and assigns it to the view via 
\f1 -
\fs20 setOpenGLContext:
\f0\fs24 , such that the view's 
\f1\fs20 -openGLContext
\f0\fs24  accessor will return the layer-backed OpenGL context (rather than the non-layer-backed context) while the view is operating in layer-backed mode.\
\
Most OpenGL views have certain setup operations that they need only perform once, when their OpenGL context first becomes available.  Such setup typically includes setting of OpenGL rendering parameters that do not vary from one rendered frame to the next (for example, the shading model or frame buffer clear color), or creation of static OpenGL objects such as display lists or textures.  When a view is switched into or out of layer-backed mode, it acquires a new OpenGL context, and thus may need to re-issue its "one-time" OpenGL initialization calls to the new context.\
\
When the view has an existing NSOpenGLContext from the mode it was previously in, AppKit creates the new mode's context with the existing context as its "share context", so that the new context can share the existing context's defined OpenGL objects.  Thus, re-uploading of textures and re-definition of display lists is unnecessary.  Other OpenGL state setup calls (e.g. those for setting the shading model or frame buffer clear color) will need to be re-issued, however.  If the view responds to the "
\f1\fs20 prepareOpenGL
\f0\fs24 " message that was introduced as new API in Mac OS X 10.3, AppKit will send it this message when it is about to be asked to draw into its new OpenGL context for the first time.  Thus, a view that is expected to be switched between layer-backed and non-layer-backed rendering modes will need to be prepared to have its -prepareOpenGL method (if any) invoked more than once, although it will only be invoked once for each given NSOpenGLContext that is created.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\b \cf0 Version History
\b0 \
1.0 - as demonstrated at WWDC 2007 Session 210\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\b \cf0 \
Feedback and Bug Reports
\b0 \
Please send all feedback about this sample by connecting to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/contact/feedback.html"}}{\fldrslt Contact ADC}} page.\
Please submit any bug reports about this sample to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/bugreporter"}}{\fldrslt Bug Reporting}} page.\
\

\b Developer Technical Support\
\pard\pardeftab720\sa200\qj

\b0 \cf0 The Apple Developer Connection Developer Technical Support (DTS) team is made up of highly qualified engineers with development expertise in key Apple technologies. Whether you need direct one-on-one support troubleshooting issues, hands-on assistance to accelerate a project, or helpful guidance to the right documentation and sample code, Apple engineers are ready to help you.  Refer to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/technicalsupport/"}}{\fldrslt Apple Developer Technical Support}} page.\
Copyright \'a9\'a02007 Apple Inc. All rights reserved.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
}