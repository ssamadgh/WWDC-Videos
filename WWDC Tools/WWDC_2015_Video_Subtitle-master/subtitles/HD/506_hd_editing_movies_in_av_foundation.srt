1
00:00:23,806 --> 00:00:25,486
>> Welcome to session 506.


2
00:00:25,486 --> 00:00:27,446
My name is Tim Monroe,
and I am a member


3
00:00:27,446 --> 00:00:30,576
of the AVFoundation engineering
Team, and I want to talk


4
00:00:30,576 --> 00:00:33,756
to you today about editing
movies in AVFoundation.


5
00:00:34,656 --> 00:00:36,816
The takeaway message
is very simple.


6
00:00:37,626 --> 00:00:39,696
AVFoundation provides
new classes


7
00:00:39,696 --> 00:00:41,966
for editing QuickTime
movie files.


8
00:00:42,546 --> 00:00:44,056
Oh, come on.


9
00:00:44,056 --> 00:00:44,936
You can do better than that.


10
00:00:44,936 --> 00:00:45,846
Let's hear some applause.


11
00:00:46,016 --> 00:00:47,756
[Applause]


12
00:00:47,756 --> 00:00:48,106
Thank you.


13
00:00:50,726 --> 00:00:53,166
Now, I am excited about
this capability because,


14
00:00:53,166 --> 00:00:56,466
as you'll see in a little
bit, this provides the tools


15
00:00:56,466 --> 00:01:01,116
that I need to manage a personal
project that I have been working


16
00:01:01,116 --> 00:01:04,346
on for about the last ten
years, and in some sense,


17
00:01:04,346 --> 00:01:07,786
it brings to a culmination a
project that I have been doing


18
00:01:07,786 --> 00:01:09,776
for about the last 35 years.


19
00:01:10,146 --> 00:01:11,786
So I've got a lot of
skin in this game,


20
00:01:11,786 --> 00:01:14,426
and I hope you'll enjoy
the presentation today.


21
00:01:15,016 --> 00:01:18,416
So what does it mean to say we
can edit QuickTime movie files.


22
00:01:18,466 --> 00:01:20,426
Well, we can open
QuickTime movie files


23
00:01:20,936 --> 00:01:24,756
and perform range-based
editing on movies and tracks.


24
00:01:24,756 --> 00:01:27,696
So you select a section,
a segment of a movie,


25
00:01:27,916 --> 00:01:30,126
and copy it into
some other movie.


26
00:01:30,866 --> 00:01:32,366
We can add and remove tracks.


27
00:01:32,816 --> 00:01:35,376
We can set tracks
associations between tracks --


28
00:01:35,376 --> 00:01:38,386
so say to mark one track at
a chapter track of another.


29
00:01:40,176 --> 00:01:43,076
We can add or modify
track and movie metadata.


30
00:01:44,326 --> 00:01:47,136
And we can create movie
files and what I am going


31
00:01:47,136 --> 00:01:49,556
to call URL sample
reference movie files.


32
00:01:49,556 --> 00:01:53,396
So how are we going
to do this today?


33
00:01:53,706 --> 00:01:58,176
First thing I am going to do
is situate these new classes


34
00:01:59,066 --> 00:02:02,766
in respect to the existing
classes we have in AVFoundation.


35
00:02:02,766 --> 00:02:05,986
Then I am going to do sort of
an API crawl where I go through


36
00:02:05,986 --> 00:02:07,336
and touch on the high points


37
00:02:07,336 --> 00:02:10,196
of the new methods we've
added to these classes.


38
00:02:10,985 --> 00:02:12,706
And finally, I am going
to go back and talk


39
00:02:12,706 --> 00:02:14,876
about this personal
project that I've mentioned


40
00:02:15,196 --> 00:02:19,206
and show you very clearly how
these new capabilities allow me


41
00:02:19,206 --> 00:02:21,696
to do interesting things
with this large amount


42
00:02:21,696 --> 00:02:22,856
of data that I've collected.


43
00:02:24,066 --> 00:02:28,006
So let's talk about the
AVFoundation editing classes.


44
00:02:28,496 --> 00:02:30,476
If you've done any
work with AVFoundation


45
00:02:30,476 --> 00:02:35,096
in the editing space, you
know that we have two classes


46
00:02:35,096 --> 00:02:38,096
that you work with, the
operative abstraction is


47
00:02:38,096 --> 00:02:41,766
that of a composition, and so
you can have AVCompositions


48
00:02:41,956 --> 00:02:45,346
and at the mutable level,
AVMutableCompositions.


49
00:02:45,786 --> 00:02:47,826
Now, compositions are
really cool stuff.


50
00:02:47,826 --> 00:02:50,176
You can make some really
exciting presentations.


51
00:02:50,676 --> 00:02:52,766
There's just one
pesky little drawback


52
00:02:52,836 --> 00:02:54,926
to AVMutableComposition,


53
00:02:55,506 --> 00:02:58,216
which is there's no
standard file format


54
00:02:58,536 --> 00:03:01,306
into which you can
serialize your composition.


55
00:03:02,196 --> 00:03:03,436
So it makes it hard


56
00:03:03,436 --> 00:03:05,946
to interchange your
snazzy composition


57
00:03:05,946 --> 00:03:07,326
with other applications.


58
00:03:08,306 --> 00:03:11,416
Well, when we move to
AVMovie and AVMutableMovie,


59
00:03:11,446 --> 00:03:14,306
that problem goes away
because this is tied


60
00:03:14,306 --> 00:03:16,956
to the QuickTime
movie file format.


61
00:03:17,186 --> 00:03:20,266
We can now open these, edit
them, and write them back.


62
00:03:21,256 --> 00:03:25,186
At the track level, we
have a similar setup.


63
00:03:25,456 --> 00:03:28,636
As you know, a composition is
composed of composition tracks,


64
00:03:28,926 --> 00:03:29,976
and at the mutable level,


65
00:03:29,976 --> 00:03:32,136
we have AVMutableComposition
tracks.


66
00:03:32,866 --> 00:03:36,466
In El Capitan, we are adding two
new classes at the track level,


67
00:03:36,466 --> 00:03:39,326
AVMovieTrack and
AVMutableMovieTrack.


68
00:03:41,116 --> 00:03:43,576
So we have, really, five
new classes that you have


69
00:03:43,576 --> 00:03:47,756
to worry about, movie and
mutable movie, movie track


70
00:03:47,756 --> 00:03:48,856
and mutable movie track,


71
00:03:48,856 --> 00:03:52,876
and then this fifth class
called AVMediaDataStorage.


72
00:03:53,276 --> 00:03:56,686
That's a very simple class,
and its whole job in life is


73
00:03:56,686 --> 00:04:00,836
to indicate where you want new
sample data that you are writing


74
00:04:00,836 --> 00:04:03,286
into a file to end up.


75
00:04:05,796 --> 00:04:10,636
So an AVMovie represents the
data in an audiovisual file


76
00:04:10,636 --> 00:04:13,596
that conforms to the
QuickTime movie file format.


77
00:04:14,196 --> 00:04:15,906
Now, if you are familiar
with QuickTime movies,


78
00:04:15,906 --> 00:04:18,896
you know that there are also a
number of related file formats


79
00:04:19,505 --> 00:04:23,226
that were devised based on the
QuickTime movie file format,


80
00:04:23,586 --> 00:04:26,036
and these are collectively
called ISO base media


81
00:04:26,036 --> 00:04:27,106
file formats.


82
00:04:27,526 --> 00:04:30,566
And AVMovie and mutable movie
can handle these just as well


83
00:04:30,596 --> 00:04:32,386
as they can QuickTime
movie files.


84
00:04:33,516 --> 00:04:37,626
Now, what's the key
feature about these files?


85
00:04:37,626 --> 00:04:39,096
From my point of
view, it's this,


86
00:04:39,526 --> 00:04:42,956
that the file format
enforces a strict separation


87
00:04:42,956 --> 00:04:47,746
between sample data and the data
that organizes that sample data


88
00:04:47,746 --> 00:04:49,176
into tracks and movies.


89
00:04:49,726 --> 00:04:55,966
So here's a basic diagram
of a QuickTime movie file.


90
00:04:56,386 --> 00:04:58,796
It starts with what's
called a file type box,


91
00:04:59,136 --> 00:05:02,596
and this is a very simple little
bit of data that indicates


92
00:05:02,596 --> 00:05:04,056
which of the file formats


93
00:05:04,056 --> 00:05:06,416
in this family this
file conforms to.


94
00:05:07,276 --> 00:05:09,916
There's also a movie box
which, as I just said,


95
00:05:09,916 --> 00:05:13,566
is the organizing information
about all that sample data,


96
00:05:13,966 --> 00:05:15,566
which is found in its own box.


97
00:05:16,326 --> 00:05:20,256
Now, the order of most
of this is arbitrary.


98
00:05:20,646 --> 00:05:22,736
The file type box
has to come first,


99
00:05:23,086 --> 00:05:25,526
but the other boxes can come
in pretty much any order.


100
00:05:25,526 --> 00:05:28,356
So we could have the movie
box at the end of the file,


101
00:05:28,926 --> 00:05:33,306
it could be situated between
a couple of sample data boxes,


102
00:05:33,706 --> 00:05:36,426
there can even be parts of
the file that are unused.


103
00:05:36,456 --> 00:05:39,516
Maybe they used to contain
data, but they don't anymore.


104
00:05:41,056 --> 00:05:42,546
Now, what's in this movie box?


105
00:05:42,736 --> 00:05:45,086
Well, there are three types of
information that we are going


106
00:05:45,086 --> 00:05:46,356
to be concerned with here today.


107
00:05:46,856 --> 00:05:49,746
First is what I like to
call global settings.


108
00:05:50,106 --> 00:05:51,976
This is information that without


109
00:05:51,976 --> 00:05:53,746
which you wouldn't
really have a movie,


110
00:05:54,186 --> 00:05:56,486
things like how many
tracks are in the movie,


111
00:05:56,866 --> 00:05:58,436
what's the duration
of the movie,


112
00:05:58,876 --> 00:06:02,496
when was this file created,
and what's the preferred rate


113
00:06:02,496 --> 00:06:04,866
that you would like
this played back at.


114
00:06:05,326 --> 00:06:09,396
There's also in a movie box
some metadata, which is sort


115
00:06:09,396 --> 00:06:12,916
of optional data that isn't
strictly speaking necessary


116
00:06:12,916 --> 00:06:16,006
for the playback of the
media, but is useful to have.


117
00:06:16,286 --> 00:06:18,526
And this would be stuff
like a copyright statement,


118
00:06:18,946 --> 00:06:21,866
an indication of who the
author, what the title is,


119
00:06:22,396 --> 00:06:24,746
and maybe even some
custom metadata that you


120
00:06:24,746 --> 00:06:27,346
or some other app has
written into this movie box.


121
00:06:28,076 --> 00:06:29,766
The last thing that
you will find


122
00:06:29,766 --> 00:06:33,746
in a movie box are track
boxes, and these are pieces


123
00:06:33,746 --> 00:06:36,216
of information that define
the tracks in the movie.


124
00:06:37,546 --> 00:06:39,336
So they contain the track type,


125
00:06:40,086 --> 00:06:44,506
they point to the sample data
that's needed for the track.


126
00:06:45,186 --> 00:06:46,826
They also contain
track metadata.


127
00:06:46,826 --> 00:06:48,806
And again, you can write
custom track metadata


128
00:06:48,806 --> 00:06:49,686
in there if you'd like.


129
00:06:50,386 --> 00:06:53,216
And there's also information
about track association,


130
00:06:53,216 --> 00:06:56,156
so how this track relates to
other tracks in the movie.


131
00:06:56,716 --> 00:07:01,606
So the key feature here is that
the sample data location --


132
00:07:01,606 --> 00:07:04,816
so the sample data itself is
not contained in the track box.


133
00:07:05,376 --> 00:07:08,406
The track box contains
references


134
00:07:08,846 --> 00:07:16,086
to the sample data,
sort of like this.


135
00:07:16,816 --> 00:07:19,666
Now, it's possible for the
sample data that a track refers


136
00:07:19,666 --> 00:07:22,036
to exist in another
file altogether,


137
00:07:22,326 --> 00:07:24,816
so you can have external
sample references.


138
00:07:26,146 --> 00:07:29,606
It's even possible for the
sample references to refer only


139
00:07:29,606 --> 00:07:30,926
to external sample data.


140
00:07:31,506 --> 00:07:34,766
Now, when we have this
situation, the little movie box


141
00:07:34,766 --> 00:07:38,566
and its file type box is called
a sample reference movie file.


142
00:07:39,066 --> 00:07:42,316
So there's no actual
data in that box;


143
00:07:42,596 --> 00:07:44,176
it just points to
data elsewhere.


144
00:07:44,686 --> 00:07:48,906
Now, it turns out that this
is an incredibly powerful tool


145
00:07:50,096 --> 00:07:52,746
to have available when you
are working with media files.


146
00:07:53,826 --> 00:07:54,396
Why is that?


147
00:07:54,396 --> 00:07:58,016
Because I can edit that small
little bit of information


148
00:07:58,266 --> 00:08:02,186
and never have to touch that
huge amount of media data.


149
00:08:02,876 --> 00:08:04,706
However, as you can imagine,


150
00:08:04,706 --> 00:08:08,076
there's a certain
fragility involved here.


151
00:08:08,476 --> 00:08:11,906
Why? Because I'm referring
to data, and if the data


152
00:08:11,906 --> 00:08:13,776
that I am referring
to happens to move


153
00:08:14,026 --> 00:08:16,306
or gets deleted,
I am out of luck.


154
00:08:16,406 --> 00:08:18,486
I can't play my presentation
anymore.


155
00:08:18,876 --> 00:08:20,796
Now, it's possible to reduce


156
00:08:20,796 --> 00:08:22,556
that fragility in
a couple of ways.


157
00:08:22,986 --> 00:08:26,096
Primarily by using relative URLs


158
00:08:26,096 --> 00:08:29,186
when I make these sample
references, and we'll see how


159
00:08:29,186 --> 00:08:30,416
to do that in a little bit.


160
00:08:30,806 --> 00:08:34,765
But at the end of the
day, you are going to want


161
00:08:34,765 --> 00:08:36,686
to have what's called
a self-contained movie.


162
00:08:36,686 --> 00:08:39,515
If you want to give it to
a friend to view or post it


163
00:08:39,515 --> 00:08:40,686
for delivery on the Web.


164
00:08:41,086 --> 00:08:42,316
And when you need to do that,


165
00:08:42,616 --> 00:08:45,046
you can just run
your mutable movie


166
00:08:45,046 --> 00:08:47,046
through an AVAssetExportSession


167
00:08:47,376 --> 00:08:49,236
to get a nice self-contained
file.


168
00:08:49,796 --> 00:08:53,086
Okay. So let's look at
the movie editing API


169
00:08:53,086 --> 00:08:54,236
that we are introducing.


170
00:08:54,836 --> 00:09:00,376
At the immutable level -- so
AVMovie is an immutable subclass


171
00:09:00,376 --> 00:09:03,956
of AVAsset -- we can actually do
some interesting things already.


172
00:09:04,186 --> 00:09:06,296
We can inspect the movie.


173
00:09:06,386 --> 00:09:08,206
We can get what's
called the movie header.


174
00:09:08,656 --> 00:09:10,826
And we can write this movie
header into a new file.


175
00:09:12,736 --> 00:09:16,286
By movie header, I just
mean the file type box


176
00:09:16,286 --> 00:09:19,096
and the movie box together,
none of the sample data.


177
00:09:19,726 --> 00:09:24,086
So how do we initialize
an AVMovie?


178
00:09:24,086 --> 00:09:27,816
If you have initialized an
AVRL, you know how to do it.


179
00:09:27,816 --> 00:09:30,606
You give us a URL, and we
give you back an AVMovie.


180
00:09:31,046 --> 00:09:35,856
You can also, if you
have a movie header, say,


181
00:09:35,856 --> 00:09:38,406
on the paste board,
you can access that


182
00:09:38,786 --> 00:09:41,146
and create a movie
from a block of data.


183
00:09:41,146 --> 00:09:44,016
We are not actually going
to talk about this anymore


184
00:09:44,016 --> 00:09:45,566
in this talk, but if you look


185
00:09:45,566 --> 00:09:48,636
at our sample code package
called AVMovieEditor,


186
00:09:48,906 --> 00:09:51,786
you will see very nicely
how you can put stuff


187
00:09:51,786 --> 00:09:53,726
and take stuff off
of the paste board.


188
00:09:54,266 --> 00:09:57,516
So here is how easy it is


189
00:09:57,516 --> 00:09:59,456
to create a sample
reference movie file.


190
00:10:00,026 --> 00:10:04,326
We'll open a URL as an AVMovie.


191
00:10:04,456 --> 00:10:11,806
Sorry. Then we call the right --


192
00:10:11,806 --> 00:10:14,506
an indication of the type
of file we want to create,


193
00:10:14,896 --> 00:10:16,076
and then some options.


194
00:10:16,616 --> 00:10:18,326
Now, in this case, the option


195
00:10:18,326 --> 00:10:20,716
that we've specified
is truncate destination


196
00:10:20,716 --> 00:10:21,886
to movie header only.


197
00:10:22,576 --> 00:10:26,046
Essentially, this means if
there's any data already


198
00:10:26,046 --> 00:10:29,126
at that output URL, it's
going to get blown away


199
00:10:29,126 --> 00:10:30,286
and what's going to end up in


200
00:10:30,286 --> 00:10:32,116
that file is simply
the movie header.


201
00:10:33,426 --> 00:10:36,056
Now, it's possible to
pass in a different option


202
00:10:36,296 --> 00:10:39,006
and not blow away any data
that might be in that file,


203
00:10:39,056 --> 00:10:42,136
so that would be the add movie
header to destination option.


204
00:10:42,136 --> 00:10:49,596
So let's move to
the mutable subclass


205
00:10:49,596 --> 00:10:51,536
of AVMovie, AVMutableMovie.


206
00:10:52,166 --> 00:10:55,466
This provides editing
methods that aus


207
00:10:55,466 --> 00:11:00,236
to perform range-based movie
editing, add and remove tracks,


208
00:11:00,766 --> 00:11:02,576
add or modify movie metadata.


209
00:11:03,166 --> 00:11:06,806
So how do we initialize
an AVMutableMovie?


210
00:11:06,806 --> 00:11:09,166
Pretty much the same way
we initialize an AVMovie.


211
00:11:09,166 --> 00:11:12,326
We will pass it a URL,
but in this case we need


212
00:11:12,326 --> 00:11:14,336
to be able toened had ale
any errors that might occur.


213
00:11:15,636 --> 00:11:18,966
It's also possible to create
an AVMutableMovie from scratch.


214
00:11:19,196 --> 00:11:22,846
So this line of code gives us
back an empty AVMutableMovie


215
00:11:23,226 --> 00:11:26,246
that we are going to want to
add tracks to and then some data


216
00:11:26,246 --> 00:11:27,866
to the tracks and so forth.


217
00:11:29,516 --> 00:11:32,606
These are the segment
editing methods available


218
00:11:32,606 --> 00:11:33,786
on AVMutableMovie.


219
00:11:33,786 --> 00:11:36,126
If you have worked with
AVMutable composition,


220
00:11:36,126 --> 00:11:39,646
this is familiar because
they are, in fact,


221
00:11:39,646 --> 00:11:45,136
identical with one exception,


222
00:11:45,136 --> 00:11:48,936
which is the insert time range
method takes an additional


223
00:11:48,936 --> 00:11:53,866
parameter that indicates whether
you want to copy the sample data


224
00:11:53,866 --> 00:11:56,906
into the target or just
copy sample references.


225
00:11:57,396 --> 00:12:06,076
Now, if you copy sample data
into the target mutable movie,


226
00:12:06,566 --> 00:12:09,446
you need to tell it where
to write that sample data.


227
00:12:09,576 --> 00:12:11,266
It does nothing by default.


228
00:12:11,796 --> 00:12:13,626
It's not going to
write it into the file


229
00:12:13,626 --> 00:12:16,186
that the movie box is
located in, for instance.


230
00:12:16,586 --> 00:12:18,696
So you have to explicitly
specify


231
00:12:19,026 --> 00:12:21,466
where you want any new
sample data that's written


232
00:12:21,466 --> 00:12:23,826
into this movie to be put.


233
00:12:24,186 --> 00:12:27,846
And you do that by specifying
the default media data storage


234
00:12:27,846 --> 00:12:29,926
property of the mutable movie.


235
00:12:30,426 --> 00:12:34,676
And this is where this
AVMediaDataStorage class comes


236
00:12:34,676 --> 00:12:35,246
into play.


237
00:12:35,776 --> 00:12:40,716
Again, it just simply
wraps a URL at this point.


238
00:12:40,896 --> 00:12:43,796
There are methods for
creating and removing tracks,


239
00:12:43,796 --> 00:12:45,096
and you see to create a track,


240
00:12:45,096 --> 00:12:47,136
we have to say what
type of track we want.


241
00:12:47,136 --> 00:12:48,106
Do we want a video track,


242
00:12:48,106 --> 00:12:50,106
do we want an audio
track, and so forth.


243
00:12:50,956 --> 00:12:53,666
And if we like, if we have an
existing track that we want


244
00:12:53,666 --> 00:12:57,106
to model this new one on,
we can pass it in as an --


245
00:12:57,286 --> 00:13:00,276
as a parameter and say take
the relevant properties


246
00:13:00,276 --> 00:13:02,176
from that existing
track and use those.


247
00:13:02,176 --> 00:13:07,576
So here's a simple
little case study.


248
00:13:08,366 --> 00:13:11,026
To update an existing movie
file, we could open it


249
00:13:11,026 --> 00:13:14,576
up from a URL, do some edits
using the methods we've just


250
00:13:14,576 --> 00:13:18,946
seen, and then we can use the
right movie header to URL method


251
00:13:19,296 --> 00:13:22,176
to write the movie header
back into that same file.


252
00:13:22,246 --> 00:13:24,526
This is what's known
as in-place editing.


253
00:13:25,026 --> 00:13:27,536
So here we haven't
moved any sample data.


254
00:13:28,196 --> 00:13:30,856
All we've done is
tweak the movie box


255
00:13:31,086 --> 00:13:32,636
and put it back into
the same file.


256
00:13:32,636 --> 00:13:37,056
So let's talk about
the track editing API.


257
00:13:37,616 --> 00:13:39,836
This allows us to
modify tracks that are


258
00:13:39,836 --> 00:13:41,166
in a QuickTime movie file,


259
00:13:41,616 --> 00:13:44,616
and we have range-based
track editing,


260
00:13:44,616 --> 00:13:46,316
just like we saw
at the movie level.


261
00:13:46,916 --> 00:13:50,866
We can also set associations
between tracks, and we can add


262
00:13:50,866 --> 00:13:52,296
or modify track metadata.


263
00:13:52,876 --> 00:13:55,896
So here are the segment
editing methods,


264
00:13:55,896 --> 00:14:00,576
and they should look familiar
because we've just seen them.


265
00:14:00,786 --> 00:14:01,906
At the movie level.


266
00:14:01,906 --> 00:14:05,416
The only difference being that
instead of insert time range


267
00:14:05,416 --> 00:14:09,186
of asset, we have insert
time range of track.


268
00:14:09,856 --> 00:14:12,986
And again, when we do insert
time range, we have to specify,


269
00:14:12,986 --> 00:14:15,586
do you want to copy the sample
data, or do you just want


270
00:14:15,586 --> 00:14:17,006
to put in sample references.


271
00:14:17,356 --> 00:14:20,206
And if you copy the sample
data, the track has to know


272
00:14:20,206 --> 00:14:21,936
where that sample
data is going to go,


273
00:14:21,936 --> 00:14:25,716
and we do that by setting the
media data storage property


274
00:14:26,046 --> 00:14:29,486
of that track using exactly
the same class we used


275
00:14:29,486 --> 00:14:30,296
at the movie level.


276
00:14:30,866 --> 00:14:33,756
So here is another case study.


277
00:14:34,106 --> 00:14:35,586
Suppose there's a
little bit of a clip


278
00:14:35,666 --> 00:14:36,906
that I want to silence out.


279
00:14:36,906 --> 00:14:40,376
Maybe there's some unfortunate
language in that clip.


280
00:14:40,486 --> 00:14:44,986
I could do it it quite simply
by finding the first audio track


281
00:14:44,986 --> 00:14:49,486
in the movie; define a time
range, which is the range I want


282
00:14:49,486 --> 00:14:52,966
to silence; remove
that time range;


283
00:14:53,246 --> 00:14:56,206
and then insert an empty
time range at that same spot.


284
00:14:56,756 --> 00:15:00,066
The net effect of this code
is to have an empty segment


285
00:15:00,406 --> 00:15:05,096
where there used to be some
offensive language, say.


286
00:15:05,336 --> 00:15:07,436
Working with track
associations is very simple.


287
00:15:07,436 --> 00:15:11,366
You can add a track association
or remove a track association.


288
00:15:11,366 --> 00:15:14,236
We will see this in use later.


289
00:15:14,786 --> 00:15:19,756
And I said I would tell you
how to use relative URLs


290
00:15:19,756 --> 00:15:22,966
when you copy sample
data into your track,


291
00:15:23,476 --> 00:15:24,646
and you do it like this.


292
00:15:24,936 --> 00:15:29,046
You open. For each track,


293
00:15:29,046 --> 00:15:34,726
we will set sample
reference base URL property


294
00:15:35,286 --> 00:15:39,026
to some common parent of the
movie that contains the movie --


295
00:15:39,026 --> 00:15:41,696
file that contains the
movie box and the files


296
00:15:41,696 --> 00:15:43,736
that contain all the media data.


297
00:15:45,976 --> 00:15:46,576
All right.


298
00:15:46,576 --> 00:15:51,286
So let's move on to
this personal project


299
00:15:51,286 --> 00:15:53,836
that I talk about, and I
want to call it A Study


300
00:15:53,836 --> 00:15:58,496
in Scarlet (and Gray)
apologies to Conan Doyle.


301
00:15:58,496 --> 00:16:01,756
Let's jump back in time to 1980.


302
00:16:01,756 --> 00:16:02,406
What are we talking?


303
00:16:02,406 --> 00:16:03,646
35 years ago.


304
00:16:04,336 --> 00:16:07,006
At that time, I was a
graduate student across the bay


305
00:16:07,006 --> 00:16:10,796
at Berkeley, and I needed a
way to blow off some energy,


306
00:16:10,796 --> 00:16:14,876
so I went out and bought a pair
of skates, and I discovered


307
00:16:14,876 --> 00:16:17,046
that Berkeley is a great
place to be a skater


308
00:16:17,046 --> 00:16:19,396
because it's got these
really nice hills.


309
00:16:20,826 --> 00:16:22,816
And I really enjoyed that.


310
00:16:22,816 --> 00:16:27,036
So I kept finding higher
and higher hills to climb up


311
00:16:27,036 --> 00:16:28,526
and then go flying down.


312
00:16:29,296 --> 00:16:31,956
So here in 1984, you
can see me at the top


313
00:16:31,956 --> 00:16:33,996
of Claremont avenue in Oakland.


314
00:16:34,606 --> 00:16:38,946
In the distance, you can see
San Francisco, just this side


315
00:16:38,946 --> 00:16:42,606
of the bay, we have Emeryville,
and we have this wonderful,


316
00:16:42,606 --> 00:16:44,776
almost looks like a
ski run in front of me.


317
00:16:44,996 --> 00:16:48,476
I am not quite sure what
the hand up is doing.


318
00:16:48,476 --> 00:16:50,256
Maybe it's the sort
of we who are


319
00:16:50,256 --> 00:16:54,026
about to die salute you
thing, and I didn't die.


320
00:16:54,106 --> 00:16:54,646
It's okay.


321
00:16:56,726 --> 00:16:58,926
[Laughter] Well, what I
did in order to keep track


322
00:16:58,926 --> 00:17:01,116
of where I was, I went out
and I bought a street map,


323
00:17:01,976 --> 00:17:03,826
and I got myself a
yellow highlighter,


324
00:17:04,356 --> 00:17:07,915
and I started marking off on my
map exactly where I had been,


325
00:17:08,705 --> 00:17:10,586
which hills were
particularly good.


326
00:17:11,516 --> 00:17:14,185
Well, if you are like me,
that's a really bad thing


327
00:17:14,185 --> 00:17:16,366
to start doing because
you're going to want to end


328
00:17:16,366 --> 00:17:18,526
up coloring in the entire map.


329
00:17:19,006 --> 00:17:22,786
And so about 2000 -- sorry.


330
00:17:22,786 --> 00:17:27,046
About 1985, I came
up with a project


331
00:17:27,086 --> 00:17:29,976
that I called Tim's Radical
Inline Skate Tour of Oakland,


332
00:17:30,566 --> 00:17:34,866
or TRISTO, and the
goal was really simple,


333
00:17:34,866 --> 00:17:36,776
to skate every street
in Oakland,


334
00:17:36,776 --> 00:17:38,496
the entire length of it.


335
00:17:38,806 --> 00:17:42,866
This continued from
1985 until about 2005,


336
00:17:42,866 --> 00:17:44,566
so ten years ago, and I made it.


337
00:17:45,556 --> 00:17:45,946
Okay?


338
00:17:46,016 --> 00:17:47,876
[Applause]


339
00:17:47,876 --> 00:17:48,226
Thank you.


340
00:17:50,996 --> 00:17:54,006
Oakland has about 800 miles of
roadways that you would have


341
00:17:54,006 --> 00:17:55,876
to skate in order
to accomplish this.


342
00:17:57,026 --> 00:18:01,256
Now, when I was done in
2005, I had no location data.


343
00:18:01,256 --> 00:18:03,286
GPS hadn't been invented
when I started,


344
00:18:03,636 --> 00:18:05,256
and it certainly
wasn't available.


345
00:18:05,676 --> 00:18:08,846
Actually, I did have location
data because if you open


346
00:18:08,846 --> 00:18:16,026
up my map, you will see that
it is right side up all yellow,


347
00:18:16,116 --> 00:18:18,876
not just -- but Alameda,
Piedmont,


348
00:18:19,036 --> 00:18:21,246
Emeryville, the whole
nine yards.


349
00:18:23,226 --> 00:18:26,886
I also had no video.


350
00:18:26,916 --> 00:18:29,576
If you remember back
to that time, I mean,


351
00:18:29,576 --> 00:18:32,606
the camera you would be
carrying in 1985 would be clunky


352
00:18:32,606 --> 00:18:34,356
and fragile, and you just
wouldn't want to have it


353
00:18:34,356 --> 00:18:35,626
with you when you are
out there skating.


354
00:18:36,226 --> 00:18:39,256
So when I finished
this, I really --


355
00:18:39,336 --> 00:18:41,376
this is a wacko project,
I admit that,


356
00:18:42,106 --> 00:18:45,696
and I made absolutely no effort
to tell anybody about this.


357
00:18:46,186 --> 00:18:51,576
Unfortunately, the San Francisco
chronicle learned of this feat,


358
00:18:51,576 --> 00:18:54,096
I guess, and wrote a nice
little newspaper article,


359
00:18:54,096 --> 00:18:55,446
one of these human
interest stories.


360
00:18:56,996 --> 00:18:59,346
The Oakland City
Council learned about it,


361
00:18:59,346 --> 00:19:02,466
they passed a resolution
praising the extraordinary


362
00:19:02,466 --> 00:19:05,856
physical accomplishment --
that's their words, not mine.


363
00:19:06,796 --> 00:19:10,476
A couple of filmmakers
in Oakland heard about it


364
00:19:10,796 --> 00:19:12,496
and spent literally years off


365
00:19:12,496 --> 00:19:15,346
and on making a nice little
documentary about this project,


366
00:19:16,006 --> 00:19:19,616
which came out about a year ago
and has been making the rounds


367
00:19:19,616 --> 00:19:21,356
of independent theaters
in the Bay area.


368
00:19:21,356 --> 00:19:25,666
Just completely wacko.


369
00:19:26,176 --> 00:19:30,826
So about a couple of years
after I finished this project,


370
00:19:31,316 --> 00:19:35,206
I started spending some time on
the east coast, in particular


371
00:19:35,206 --> 00:19:37,486
in the area of Boston,
Massachusetts,


372
00:19:38,016 --> 00:19:40,666
and even more particular,
in Cambridge.


373
00:19:40,936 --> 00:19:44,016
And I thought, all right, let's
take this thing on the road.


374
00:19:44,516 --> 00:19:48,386
I spent a few years skating
Cambridge and Somerville,


375
00:19:48,696 --> 00:19:51,846
and then finally the idea
for TRISTO Boston was born.


376
00:19:52,466 --> 00:19:53,336
Same idea.


377
00:19:53,336 --> 00:19:56,546
Skate every street in
the city of Boston.


378
00:19:57,616 --> 00:20:00,976
So this began about 2011.


379
00:20:01,606 --> 00:20:03,256
I looked at a map, and I
figured it would take me


380
00:20:03,256 --> 00:20:05,236
about five years
to complete this.


381
00:20:06,176 --> 00:20:08,436
Well, we had a couple
mild winters in there.


382
00:20:08,716 --> 00:20:10,196
It's about the same
size as Oakland.


383
00:20:10,956 --> 00:20:14,226
And I was able to complete this
in about two and a half years,


384
00:20:14,226 --> 00:20:19,206
so in May 2013, I
finished TRISTO Boston.


385
00:20:19,296 --> 00:20:24,436
Now, this time I was prepared
because as I was skating,


386
00:20:24,786 --> 00:20:27,366
I had one of those sports
action cameras up on the top


387
00:20:27,366 --> 00:20:32,046
of my helmet, and I had
a GPS app for my iPhone.


388
00:20:32,676 --> 00:20:33,766
And so when I ended up,


389
00:20:33,766 --> 00:20:40,586
I had 490 MPEG-4 files
straight off the camera covering


390
00:20:40,586 --> 00:20:43,216
about 200 different
skates for a total


391
00:20:43,216 --> 00:20:46,416
of about a terabyte
and a half of data.


392
00:20:47,446 --> 00:20:51,026
I also had GPS data in
the form of GPX files --


393
00:20:51,026 --> 00:20:53,456
that's sort of an XML
version of location data --


394
00:20:53,456 --> 00:20:54,376
we will see one later --


395
00:20:55,266 --> 00:20:57,876
for about 150 megabytes
worth of data.


396
00:20:58,486 --> 00:21:03,176
So just to get an idea of
what these movies look like,


397
00:21:03,176 --> 00:21:04,416
let's just look at one.


398
00:21:05,606 --> 00:21:08,496
So these are movies
straight off the camera.


399
00:21:08,496 --> 00:21:09,946
The only thing I have
done is rename them


400
00:21:09,946 --> 00:21:10,936
so that it's got the date


401
00:21:10,936 --> 00:21:13,836
and title making it
easy for me to find.


402
00:21:15,306 --> 00:21:17,396
So we will open these
up in QuickTime Player.


403
00:21:17,646 --> 00:21:20,476
There's the second one, so
that continues at the end


404
00:21:20,476 --> 00:21:24,186
of the first one, so we will
select the first movie here.


405
00:21:24,646 --> 00:21:26,626
We can see it's a
bright, sunny day.


406
00:21:27,266 --> 00:21:28,956
It's late November.


407
00:21:29,296 --> 00:21:30,466
It's a weekday.


408
00:21:31,126 --> 00:21:32,246
And let's just roll this.


409
00:21:32,246 --> 00:21:35,136
We see it's the fall because
there's leaves on the ground.


410
00:21:35,746 --> 00:21:37,416
If we had the audio,
we would hear


411
00:21:37,416 --> 00:21:39,806
that it's actually
quite windy on this day.


412
00:21:40,396 --> 00:21:42,976
And there's something
strange here, though.


413
00:21:43,186 --> 00:21:44,706
There's nobody on the street.


414
00:21:44,936 --> 00:21:46,276
There's no pedestrians.


415
00:21:46,746 --> 00:21:48,226
Let's jump ahead a
little bit again.


416
00:21:49,096 --> 00:21:50,456
No pedestrians.


417
00:21:50,456 --> 00:21:51,356
There's some cars.


418
00:21:51,876 --> 00:21:53,826
Here I am at Longwood
Medical District.


419
00:21:53,926 --> 00:21:56,226
This is a heavily
trafficked area.


420
00:21:56,366 --> 00:21:56,996
Nobody there.


421
00:21:57,246 --> 00:21:58,756
Here's a commercial district.


422
00:21:59,616 --> 00:22:01,136
Nobody. It's like a ghost town.


423
00:22:01,316 --> 00:22:02,486
So what's going on?


424
00:22:03,436 --> 00:22:06,376
Well, we'll solve
that problem later.


425
00:22:08,196 --> 00:22:10,646
So what I've got,
basically, is a hay stack


426
00:22:11,066 --> 00:22:12,236
and a bunch of needles.


427
00:22:12,236 --> 00:22:14,456
I've got 500 hours of video.


428
00:22:15,036 --> 00:22:19,886
Even if 99% of it is junk,
that's still five full hours


429
00:22:19,886 --> 00:22:21,836
of interesting video
that I'd like to find.


430
00:22:23,386 --> 00:22:24,316
Part of the problem, though,


431
00:22:24,316 --> 00:22:26,016
is I don't even know
what the needles look


432
00:22:26,016 --> 00:22:28,326
like because I don't
know what's important


433
00:22:28,546 --> 00:22:30,746
in these 500 hours of video.


434
00:22:32,846 --> 00:22:35,756
Well, I do know some things
that I'd really love to look at,


435
00:22:35,756 --> 00:22:38,506
and here is sort of a
montage of some of these.


436
00:22:48,256 --> 00:22:49,266
Snow, really?


437
00:22:49,306 --> 00:22:49,976
I mean, come on.


438
00:22:55,116 --> 00:22:56,496
Like, I didn't see that pothole?


439
00:22:57,516 --> 00:23:04,576
[Laughter]


440
00:23:05,076 --> 00:23:07,886
Now, that one's my favorite,
because as you can see,


441
00:23:07,886 --> 00:23:11,496
I go down, I kind of roll over,
I get back and keep on skating.


442
00:23:11,496 --> 00:23:13,976
You know, if it wasn't
as -- thank you.


443
00:23:14,516 --> 00:23:18,276
[Applause]


444
00:23:18,776 --> 00:23:20,916
Now, I actually had to
pay somebody to weed --


445
00:23:20,916 --> 00:23:25,256
to look through about
1/50 of all of my video


446
00:23:26,186 --> 00:23:27,646
to get these six clips.


447
00:23:27,866 --> 00:23:30,626
So in theory, there's 300


448
00:23:30,626 --> 00:23:33,666
of these wonderful falls
somewhere in that hay stack.


449
00:23:34,646 --> 00:23:36,756
So at about, you know,
five seconds per fall,


450
00:23:36,756 --> 00:23:39,416
we are talking 25
minutes of this stuff,


451
00:23:39,416 --> 00:23:40,976
which would be really
fun to watch.


452
00:23:41,061 --> 00:23:43,061
[Laughter]


453
00:23:43,106 --> 00:23:45,456
So here's what I want to
do with all this data.


454
00:23:45,686 --> 00:23:48,396
I've got a terabyte and a
half of video data that I want


455
00:23:48,396 --> 00:23:49,616
to somehow do something with.


456
00:23:49,616 --> 00:23:51,086
I want to find those needles.


457
00:23:51,466 --> 00:23:55,886
So the first step is going to
be to combine the various files


458
00:23:55,886 --> 00:23:57,976
that came off the
camera for one skate


459
00:23:58,436 --> 00:24:02,306
into a sample reference movie
file so that I can just open it


460
00:24:02,306 --> 00:24:05,246
and edit it and not have to
worry about the camera files.


461
00:24:06,436 --> 00:24:09,276
The second thing I want to
do is add indexing metadata


462
00:24:09,516 --> 00:24:12,396
as movie metadata.


463
00:24:12,936 --> 00:24:15,466
So I want to go in and
mark in the file, okay,


464
00:24:15,466 --> 00:24:18,386
this is where I start to fall,
and this is the end of the fall.


465
00:24:18,736 --> 00:24:20,756
Or this is where
dogs are chasing me,


466
00:24:20,756 --> 00:24:22,236
and this is where
they finally figured


467
00:24:22,236 --> 00:24:24,206
out they are not
going to get me.


468
00:24:24,206 --> 00:24:27,096
Or this is where I am talking
to a law enforcement officer,


469
00:24:27,096 --> 00:24:28,316
and that just keeps going.


470
00:24:29,806 --> 00:24:32,786
So I'd like to index all
this stuff so that it's easy


471
00:24:32,786 --> 00:24:36,006
to search and find all these
needles, as I call them.


472
00:24:36,006 --> 00:24:38,546
I want to add GPS data.


473
00:24:38,546 --> 00:24:41,306
I have all that location data
I haven't done anything with.


474
00:24:41,306 --> 00:24:43,176
I want to add it to the
file, and I am going to do


475
00:24:43,176 --> 00:24:45,376
that as what's called
a timed metadata track.


476
00:24:46,836 --> 00:24:50,926
And the key is I want to do all
of this without modifying any


477
00:24:50,926 --> 00:24:52,446
of the original camera files,


478
00:24:52,886 --> 00:24:57,716
and by minimizing any data
copying that I need to do.


479
00:24:57,716 --> 00:24:58,946
Okay. How are we
going to do that?


480
00:24:59,376 --> 00:25:03,016
Well, AVMovie and AVMutableMovie
give us the answer.


481
00:25:03,926 --> 00:25:07,036
The solution to the first
issue is very simple.


482
00:25:07,036 --> 00:25:09,746
I am going to take those
camera files, and I am going


483
00:25:09,746 --> 00:25:12,746
to create a sample reference
movie file that points


484
00:25:12,786 --> 00:25:14,756
to the data in those
two original files.


485
00:25:15,446 --> 00:25:17,926
Very straightforward,
standard use


486
00:25:17,926 --> 00:25:19,776
of sample reference movie files.


487
00:25:21,096 --> 00:25:24,516
The solution for the second
step is just to add a little bit


488
00:25:24,516 --> 00:25:27,696
of extra custom metadata
to my movie box.


489
00:25:28,206 --> 00:25:33,196
The third step is to add
some actual media data


490
00:25:33,466 --> 00:25:37,656
into my new sample
reference movie file.


491
00:25:38,236 --> 00:25:41,036
And that media data, even though
it's called timed metadata,


492
00:25:41,036 --> 00:25:44,496
it's stored as media data or
sample data, and it just goes


493
00:25:44,496 --> 00:25:46,116
into a new track in the file.


494
00:25:47,346 --> 00:25:50,686
So that's the way I want
to approach this issue.


495
00:25:51,516 --> 00:25:53,336
So the first step is
actually quite simple.


496
00:25:53,856 --> 00:25:58,036
We'll open the first
movie as a mutable movie,


497
00:25:58,356 --> 00:25:59,536
and we'll open the second


498
00:25:59,536 --> 00:26:02,646
and any subsequent
movies as just URL assets.


499
00:26:03,666 --> 00:26:07,516
We'll define the range in the
asset that we want to insert,


500
00:26:07,516 --> 00:26:10,126
and that's just the
entire asset duration.


501
00:26:10,826 --> 00:26:15,636
We will actually insert it into
the mutable movie at the end


502
00:26:15,636 --> 00:26:18,966
of the mutable movie, and
notice we say don't copy the


503
00:26:18,966 --> 00:26:19,656
sample data.


504
00:26:19,776 --> 00:26:21,826
I just want to end up
with sample references.


505
00:26:22,656 --> 00:26:26,656
Finally, all we have to do
is write a new movie header


506
00:26:26,656 --> 00:26:32,026
out to a new file, and we have
then created a sample reference


507
00:26:32,026 --> 00:26:34,016
movie file that points
to the data


508
00:26:34,016 --> 00:26:35,706
in the two original
camera files.


509
00:26:37,476 --> 00:26:39,046
So let's look at some demos


510
00:26:39,436 --> 00:26:41,436
of how I solve the
second and third one.


511
00:26:41,916 --> 00:26:45,096
Normally this slide would just
read demos, but I am a sucker


512
00:26:45,096 --> 00:26:52,616
for a good palindrome, and
I just couldn't waste it.


513
00:26:52,616 --> 00:26:55,276
Alvin is a sort of acronym


514
00:26:55,276 --> 00:26:58,276
for AVFoundation-based
linear indexer.


515
00:26:59,346 --> 00:27:03,836
Its job is to do the
indexing I talked about,


516
00:27:04,126 --> 00:27:07,536
but also get the location
data into my file.


517
00:27:08,246 --> 00:27:09,976
This is what the UI looks like.


518
00:27:10,466 --> 00:27:14,116
I've got a movie view on the
left, I've got a map view


519
00:27:14,116 --> 00:27:18,136
on the right, and down below you
can see I've got some display


520
00:27:18,136 --> 00:27:20,566
areas where I am going to
be displaying information


521
00:27:20,566 --> 00:27:22,846
that I glean about this skate.


522
00:27:23,796 --> 00:27:27,126
So let's go ahead and
open up a movie file.


523
00:27:27,126 --> 00:27:31,256
And this is the sample reference
movie file that I just created.


524
00:27:32,056 --> 00:27:32,876
That opens up there.


525
00:27:32,876 --> 00:27:34,566
I am going to load a GPX file.


526
00:27:34,566 --> 00:27:38,486
I will go out and select
the appropriate GPS file.


527
00:27:40,356 --> 00:27:42,146
Now, when I open this file,


528
00:27:42,466 --> 00:27:44,046
some of the data's
going to be filled in.


529
00:27:44,046 --> 00:27:46,136
It's going to figure
out how long this was.


530
00:27:46,826 --> 00:27:50,706
Okay? So let's -- I've got it
so I can expand my map view


531
00:27:50,706 --> 00:27:51,996
to make it clear where we are.


532
00:27:51,996 --> 00:27:54,646
So I went out and made a big
circuit around Brookline.


533
00:27:55,486 --> 00:27:56,476
This situates you.


534
00:27:56,476 --> 00:27:57,726
There is Logan Airport.


535
00:27:58,466 --> 00:27:59,876
Here is Boston proper.


536
00:28:00,816 --> 00:28:01,936
There's Cambridge.


537
00:28:02,816 --> 00:28:04,706
Now let's just zoom back in.


538
00:28:05,046 --> 00:28:09,116
Oh, I said I was going
to show you a GPX file.


539
00:28:09,736 --> 00:28:11,426
So this is what a
GPX file looks like.


540
00:28:11,426 --> 00:28:14,636
It's just XML formatted,
longitudes, latitudes,


541
00:28:14,636 --> 00:28:16,286
elevations, time stamps.


542
00:28:16,696 --> 00:28:21,486
That's it, nothing
more in there.


543
00:28:21,686 --> 00:28:24,206
So let's go here and
run a Web service.


544
00:28:24,206 --> 00:28:25,306
I am going to go out and find


545
00:28:25,306 --> 00:28:27,826
out from a government Web
server what the weather was


546
00:28:27,826 --> 00:28:30,276
like on this day, and I
discover it was quite windy,


547
00:28:30,276 --> 00:28:33,966
it was 17 mile an hour average,
or for those who speak metric,


548
00:28:33,966 --> 00:28:38,016
28.4, and it was 39
degrees Fahrenheit or,


549
00:28:38,016 --> 00:28:40,556
interesting factoid,
3.9 centigrade.


550
00:28:41,516 --> 00:28:44,666
Thanksgiving day, that's why
there's nobody on the street.


551
00:28:44,666 --> 00:28:46,456
You see, it figured out
this this was a holiday.


552
00:28:46,456 --> 00:28:48,026
It's also the second
night of Hanukkah.


553
00:28:49,086 --> 00:28:52,626
Okay? So just these Web
Services have allowed me


554
00:28:52,626 --> 00:28:54,656
to deduce why there's
nobody on the street.


555
00:28:54,926 --> 00:28:58,286
Now I am running another
Web Service called reverse


556
00:28:58,336 --> 00:29:01,936
geocoding, where I am sending
each longitude and latitude


557
00:29:02,266 --> 00:29:05,026
out to a server at
Apple, and it's going


558
00:29:05,026 --> 00:29:08,426
to hand me back a
state, city, street,


559
00:29:08,666 --> 00:29:10,336
and sometimes even
a street number.


560
00:29:10,716 --> 00:29:12,486
Basically, it's going
to give me information


561
00:29:12,486 --> 00:29:14,146
about the streets that I was on.


562
00:29:14,766 --> 00:29:17,396
So we will wait here while all
these street pins fall down.


563
00:29:18,916 --> 00:29:21,946
Then we can select one of them
to find out what street that is,


564
00:29:21,946 --> 00:29:24,076
so that's Commonwealth Avenue.


565
00:29:25,256 --> 00:29:27,936
Or here's Washington
Street in Brookline.


566
00:29:28,526 --> 00:29:32,466
Now, I added a search bar
so I could type in, say,


567
00:29:32,466 --> 00:29:35,876
Commonwealth Avenue, and it will
highlight it when it finds it.


568
00:29:36,466 --> 00:29:38,496
So if I put this
data into my file,


569
00:29:38,496 --> 00:29:42,066
now I have complete
searchability on street names.


570
00:29:42,066 --> 00:29:45,126
I can go in and find all
those little clips where I am


571
00:29:45,486 --> 00:29:46,646
on a particular street.


572
00:29:48,496 --> 00:29:51,186
So let's hide those, and
the last thing we need


573
00:29:51,186 --> 00:29:54,406
to do is synchronize our
video with our location data,


574
00:29:55,046 --> 00:29:57,256
and I tried various
automatic ways to do this,


575
00:29:57,286 --> 00:30:00,846
but I discovered the only really
good way to do it was to go


576
00:30:00,846 --> 00:30:05,186
to a frame in the video where
I knew where I was on the map,


577
00:30:05,226 --> 00:30:09,616
and then I am going to come
over onto the map and click it


578
00:30:09,616 --> 00:30:13,566
and say synchronize the video
to this location right here.


579
00:30:14,416 --> 00:30:15,956
Now, when I do this,
if I come back


580
00:30:15,956 --> 00:30:17,376
and start playing the video,


581
00:30:17,376 --> 00:30:20,726
you will see the pin moves
along with the video.


582
00:30:20,986 --> 00:30:22,446
See, these are now synchronized.


583
00:30:23,666 --> 00:30:25,196
And I can even go
the other direction.


584
00:30:25,196 --> 00:30:28,016
I can go to someplace on
the map, and I can click it


585
00:30:28,016 --> 00:30:31,316
and say make the movie
go there, and now I am


586
00:30:31,316 --> 00:30:32,546
on Commonwealth Avenue,


587
00:30:32,896 --> 00:30:35,896
and I know this is a
particularly fun downhill slope,


588
00:30:35,896 --> 00:30:37,776
and we will just let
this ride for a second.


589
00:30:38,286 --> 00:30:40,616
And this is really why we do
this, right, for these kind


590
00:30:40,616 --> 00:30:45,536
of downhill with no cars and
what could possibly go wrong?


591
00:30:46,516 --> 00:30:48,706
[Laughter]


592
00:30:49,206 --> 00:30:50,356
Okay. So that's Alvin.


593
00:30:50,356 --> 00:30:52,266
You can see that Alvin
has solved the second


594
00:30:52,266 --> 00:30:53,496
and third problems for me.


595
00:30:54,256 --> 00:30:59,926
It's added custom metadata to
my sample reference movie file.


596
00:31:00,386 --> 00:31:02,206
And it basically
does it like this.


597
00:31:02,606 --> 00:31:05,776
It gets the existing
metadata by calling the --


598
00:31:06,146 --> 00:31:07,666
looking at the metadata
property.


599
00:31:08,376 --> 00:31:10,186
We'll create a new
metadata item,


600
00:31:10,546 --> 00:31:12,706
we'll fill in its
properties accordingly.


601
00:31:12,896 --> 00:31:16,136
For instance, the average wind
speed value is the value I got


602
00:31:16,136 --> 00:31:18,786
from the government server
telling me what the weather was


603
00:31:18,786 --> 00:31:19,356
on that day.


604
00:31:20,066 --> 00:31:23,046
And I just create some
identifier here that I can look


605
00:31:23,046 --> 00:31:26,726
for later, and once I've
written this into the file


606
00:31:26,726 --> 00:31:30,766
with the right movie header to
URL, my movie is all updated.


607
00:31:31,346 --> 00:31:33,686
Now let's look at step three,


608
00:31:33,826 --> 00:31:37,096
which is to add the location
data as a time metadata track.


609
00:31:37,836 --> 00:31:39,686
You already know how to do this.


610
00:31:39,926 --> 00:31:41,236
If you were here last year


611
00:31:42,166 --> 00:31:45,216
and heard the talk Harnessing
Metadata in Audiovisual Media,


612
00:31:45,656 --> 00:31:47,476
they showed a couple things.


613
00:31:47,556 --> 00:31:51,896
First how to get location
data from a capture session,


614
00:31:52,546 --> 00:31:56,046
and how to right-time
metadata into a movie.


615
00:31:56,726 --> 00:31:58,966
Well, we've got our
location data.


616
00:31:58,966 --> 00:32:00,646
It's in our GPX file.


617
00:32:00,646 --> 00:32:03,316
So we don't need that
capture session stuff.


618
00:32:03,736 --> 00:32:06,256
We can just focus on
taking the source code


619
00:32:06,256 --> 00:32:08,716
in that second sample
code package


620
00:32:09,046 --> 00:32:10,446
and putting it into Alvin.


621
00:32:11,236 --> 00:32:13,976
Now, once we've done
that, what we end up with


622
00:32:14,176 --> 00:32:18,036
on disk is a timed file that has
a single metadata track in it,


623
00:32:18,526 --> 00:32:22,666
and all we have to do is copy
that track into a new track


624
00:32:23,246 --> 00:32:27,926
in our movie, and we will do
it by opening the GPS asset.


625
00:32:29,276 --> 00:32:31,206
We'll then add a new track


626
00:32:31,316 --> 00:32:35,736
to our movie using whatever
media type happens to be


627
00:32:35,736 --> 00:32:39,636
in that track, and we will copy
the settings from that track.


628
00:32:40,956 --> 00:32:45,956
Finally, we insert that range
into this new track, and again,


629
00:32:45,956 --> 00:32:49,336
if we write this header
into our file, we are done.


630
00:32:49,966 --> 00:32:55,876
Now, the last thing we need
to do -- this is optional --


631
00:32:56,226 --> 00:32:59,886
is create a track association
between the timed media track


632
00:33:00,386 --> 00:33:03,716
and whatever track it is
metadata for, and in this case,


633
00:33:03,716 --> 00:33:05,116
we have chosen the video track.


634
00:33:06,206 --> 00:33:10,086
If you leave this step out, the
timed video track is assumed


635
00:33:10,086 --> 00:33:13,596
to apply to the file as
a whole, and we are fine


636
00:33:13,596 --> 00:33:20,826
as far as that's concerned.


637
00:33:20,826 --> 00:33:23,206
If you are working
with AVMutableMovie,


638
00:33:23,366 --> 00:33:24,866
there are a couple of
things to keep in mind.


639
00:33:25,746 --> 00:33:30,676
As you know, an AVMovie or an
AVMutableMovie is an AVAsset


640
00:33:30,676 --> 00:33:31,786
because it's a subclass.


641
00:33:32,306 --> 00:33:33,476
So anything that you can do


642
00:33:33,476 --> 00:33:36,246
with an AVAsset you can
do with a mutable movie.


643
00:33:36,706 --> 00:33:39,946
For instance, you could
play it using AVPlayerItem,


644
00:33:40,766 --> 00:33:44,216
you could grab an image from it
using an AVAssetImageGenerator.


645
00:33:44,336 --> 00:33:47,936
You could export it using
an AVAssetExportSession.


646
00:33:48,376 --> 00:33:53,616
Now, if you do any of these
operations on a mutable movie,


647
00:33:54,146 --> 00:33:56,236
we highly recommend
that you make a copy


648
00:33:56,236 --> 00:34:00,366
of that mutable movie because if
you're changing the movie while


649
00:34:00,366 --> 00:34:02,776
you are exporting it,
bad things will happen.


650
00:34:02,886 --> 00:34:05,036
So just make a copy
of it, do your export,


651
00:34:05,036 --> 00:34:06,226
and everything works fine.


652
00:34:06,776 --> 00:34:13,226
The second best practice is
that if you are opening an asset


653
00:34:13,315 --> 00:34:16,806
that you want to insert
into an AVMutableMovie,


654
00:34:17,815 --> 00:34:22,396
you should set this flag, AV URL
asset prefer precise duration


655
00:34:22,396 --> 00:34:24,606
and timing key, to true.


656
00:34:25,045 --> 00:34:27,156
Now, we haven't done this
in any of the code snippets


657
00:34:27,156 --> 00:34:31,525
that you've seen so far because
when you open a QuickTime movie,


658
00:34:31,726 --> 00:34:33,246
this flag is already
set to true.


659
00:34:33,636 --> 00:34:36,166
But if you were to open
an MP3 file, for instance,


660
00:34:36,166 --> 00:34:38,485
and wanted to insert that
into a mutable movie,


661
00:34:38,775 --> 00:34:41,775
you would want to set this flag.


662
00:34:41,775 --> 00:34:42,686
So let's summarize.


663
00:34:44,065 --> 00:34:46,436
We've added new classes
to support editing


664
00:34:46,576 --> 00:34:48,726
on QuickTime movie files.


665
00:34:50,065 --> 00:34:51,806
This gives us, as
I hope you've seen,


666
00:34:52,556 --> 00:34:55,085
a really nice, simplified
workflow.


667
00:34:55,085 --> 00:34:58,176
We are able to work on
reference movies and not


668
00:34:58,176 --> 00:34:59,846
on the original movies
themselves.


669
00:35:00,116 --> 00:35:01,666
So if you are handling
large amounts


670
00:35:01,666 --> 00:35:03,786
of data, this is for you.


671
00:35:04,116 --> 00:35:07,616
If you want to see how
this works in practice,


672
00:35:07,616 --> 00:35:11,206
download AVMovieEditor
and take a look at that.


673
00:35:11,396 --> 00:35:13,686
For more information, go
to the standard places.


674
00:35:14,246 --> 00:35:17,106
And if you have questions
about this, we'll be in the lab


675
00:35:17,106 --> 00:35:18,296
on Thursday and Friday.


676
00:35:19,116 --> 00:35:20,486
If you want to look at the --


677
00:35:20,486 --> 00:35:23,986
how to work with
compositions, jump back to 2010.


678
00:35:24,656 --> 00:35:27,236
And finally, if you want
to see in great detail how


679
00:35:27,236 --> 00:35:29,976
to do the timed metadata
track generation,


680
00:35:30,526 --> 00:35:31,676
go to last year's session,


681
00:35:31,676 --> 00:35:33,566
Harnessing Metadata
in Audiovisual media.


682
00:35:34,426 --> 00:35:34,976
Thank you very much.


683
00:35:35,516 --> 00:35:40,500
[Applause]

