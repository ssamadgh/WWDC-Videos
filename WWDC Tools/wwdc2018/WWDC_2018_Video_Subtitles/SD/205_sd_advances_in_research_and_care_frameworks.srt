1
00:00:07,516 --> 00:00:15,500
[ Music ]


2
00:00:23,516 --> 00:00:30,526
[ Applause ]


3
00:00:31,026 --> 00:00:31,996
>> Thank you all for coming.


4
00:00:31,996 --> 00:00:33,876
And welcome to the session,


5
00:00:34,146 --> 00:00:36,186
Advances in Rresearch and Care


6
00:00:36,186 --> 00:00:36,866
Frameworks.


7
00:00:37,536 --> 00:00:38,936
My name is Srinath and I'm a


8
00:00:38,936 --> 00:00:39,706
software engineer.


9
00:00:40,576 --> 00:00:41,916
Now, if you're familiar with our


10
00:00:41,916 --> 00:00:44,066
WW talks in the past, you might


11
00:00:44,066 --> 00:00:46,146
remember that our sessions have


12
00:00:46,206 --> 00:00:48,016
focused primarily on our two


13
00:00:48,016 --> 00:00:49,776
open source health frameworks.


14
00:00:50,716 --> 00:00:52,686
ResearchKit and CareKit.


15
00:00:53,386 --> 00:00:54,916
This year, although we'll still


16
00:00:54,916 --> 00:00:56,626
be talking a lot about these


17
00:00:56,626 --> 00:00:58,266
frameworks, we'll also be


18
00:00:58,266 --> 00:01:00,206
covering some new APIs and


19
00:01:00,206 --> 00:01:01,986
features that we've been working


20
00:01:01,986 --> 00:01:03,936
on in the larger health space.


21
00:01:04,626 --> 00:01:05,826
But for those of you who are


22
00:01:05,826 --> 00:01:06,896
somewhat new to these


23
00:01:06,896 --> 00:01:09,086
frameworks, I highly recommend


24
00:01:09,086 --> 00:01:11,016
checking out our two sessions


25
00:01:11,016 --> 00:01:11,866
from last year.


26
00:01:13,116 --> 00:01:14,866
What's new in CareKit and


27
00:01:14,866 --> 00:01:16,636
ResearchKit was hosted by Sam


28
00:01:16,636 --> 00:01:17,116
Mravca.


29
00:01:17,576 --> 00:01:19,056
Where she gives a really good


30
00:01:19,056 --> 00:01:21,526
overview of both ResearchKit and


31
00:01:21,526 --> 00:01:21,996
CareKit.


32
00:01:22,606 --> 00:01:24,446
The other session, Connecting


33
00:01:24,446 --> 00:01:26,446
CareKit to the Cloud was by


34
00:01:26,446 --> 00:01:28,136
Kelsey Dedoshka, where we


35
00:01:28,136 --> 00:01:30,236
introduced a new CareKit bridge


36
00:01:30,236 --> 00:01:32,546
API that allows developers to


37
00:01:32,546 --> 00:01:34,826
sync care plans between patients


38
00:01:34,916 --> 00:01:37,066
and providers using any HIPAA


39
00:01:37,066 --> 00:01:38,236
compliant backend.


40
00:01:38,646 --> 00:01:40,926
And on that note, I'm really


41
00:01:40,926 --> 00:01:42,806
excited to show you all some of


42
00:01:42,806 --> 00:01:44,426
the amazing work that's been


43
00:01:44,426 --> 00:01:46,266
happening at Penn Medicine.


44
00:01:47,226 --> 00:01:48,796
The Penn Life Gained Appl


45
00:01:49,086 --> 00:01:51,366
utilizes CareKit and the CareKit


46
00:01:51,366 --> 00:01:53,786
bridge API to help patients


47
00:01:53,786 --> 00:01:55,316
through both pre and


48
00:01:55,396 --> 00:01:57,576
post-bariatric surgery at Penn


49
00:01:57,576 --> 00:01:58,146
Medicine.


50
00:01:58,466 --> 00:02:01,126
The app leverages care plans,


51
00:02:01,416 --> 00:02:03,156
healthcare data and other


52
00:02:03,156 --> 00:02:05,836
interactive components to help


53
00:02:05,896 --> 00:02:07,806
patients go through their weight


54
00:02:07,806 --> 00:02:08,526
loss journey.


55
00:02:09,126 --> 00:02:11,906
Data is constantly being synced


56
00:02:12,036 --> 00:02:14,176
between the iOS apps used by the


57
00:02:14,176 --> 00:02:16,686
patients, and the iPad apps used


58
00:02:16,686 --> 00:02:18,566
by care providers in order to


59
00:02:18,566 --> 00:02:20,626
closely monitor and interact


60
00:02:20,626 --> 00:02:22,136
with their patients in real


61
00:02:22,136 --> 00:02:22,606
time.


62
00:02:23,116 --> 00:02:25,086
The team has received extremely


63
00:02:25,086 --> 00:02:26,656
positive feedback from both


64
00:02:26,746 --> 00:02:28,876
patients as well as clinicians


65
00:02:29,096 --> 00:02:30,986
with regards to the impact that


66
00:02:31,056 --> 00:02:32,776
these apps have had on their


67
00:02:32,776 --> 00:02:33,986
bariatric program.


68
00:02:35,106 --> 00:02:36,326
And now that we have touched


69
00:02:36,326 --> 00:02:37,676
upon where we have come since


70
00:02:37,676 --> 00:02:39,866
last year, I would like to take


71
00:02:40,056 --> 00:02:42,376
a quick step-out to all of our


72
00:02:42,376 --> 00:02:43,626
health frameworks as a whole.


73
00:02:44,366 --> 00:02:46,086
The creation of these frameworks


74
00:02:46,266 --> 00:02:47,766
stems from our overarching


75
00:02:47,766 --> 00:02:49,526
desire to improve the world of


76
00:02:49,526 --> 00:02:51,196
health, through technology.


77
00:02:51,636 --> 00:02:53,506
And in that process, we really


78
00:02:53,506 --> 00:02:55,526
want to empower our users and


79
00:02:55,526 --> 00:02:57,496
provide more tools to developers


80
00:02:57,566 --> 00:02:59,356
and researchers, so at the end


81
00:02:59,356 --> 00:03:01,806
of the day, you and all of us


82
00:03:01,996 --> 00:03:04,216
can help improve and advance two


83
00:03:04,216 --> 00:03:06,766
core areas of interest, research


84
00:03:07,086 --> 00:03:07,656
and care.


85
00:03:08,896 --> 00:03:10,716
This year, I'm really excited to


86
00:03:10,716 --> 00:03:12,566
be talking to you about some of


87
00:03:12,566 --> 00:03:13,906
these topics which we care so


88
00:03:13,906 --> 00:03:16,016
deeply about in a variety of


89
00:03:16,046 --> 00:03:16,346
ways.


90
00:03:16,756 --> 00:03:18,376
Starting with the framework


91
00:03:18,376 --> 00:03:20,016
focus, where I'll talk to you


92
00:03:20,016 --> 00:03:21,576
about updates we have made to


93
00:03:21,576 --> 00:03:22,956
our ResearchKit framework.


94
00:03:23,556 --> 00:03:25,116
From there, we'll move on to a


95
00:03:25,116 --> 00:03:27,106
more condition focused approach,


96
00:03:27,466 --> 00:03:29,386
specifically around movement


97
00:03:29,386 --> 00:03:30,956
disorders like Parkinson's,


98
00:03:31,396 --> 00:03:33,016
where Gabriel will come on stage


99
00:03:33,226 --> 00:03:34,556
and talk to you about this


100
00:03:34,556 --> 00:03:35,486
brand-new API.


101
00:03:36,486 --> 00:03:38,286
And finally, we'll bring it all


102
00:03:38,286 --> 00:03:39,896
together with a demo where we


103
00:03:39,896 --> 00:03:41,746
will showcase how you can


104
00:03:41,746 --> 00:03:43,476
utilize these new APIs and


105
00:03:43,476 --> 00:03:45,476
features directly in code.


106
00:03:46,896 --> 00:03:48,466
Now let's get started with


107
00:03:48,466 --> 00:03:49,086
ResearchKit.


108
00:03:50,196 --> 00:03:51,896
Over the past year, we have been


109
00:03:51,896 --> 00:03:53,856
putting in a lot of effort to


110
00:03:53,896 --> 00:03:55,546
improve out openness and


111
00:03:55,546 --> 00:03:57,196
engagement with our community.


112
00:03:58,506 --> 00:04:00,386
Some updates to our ResearchKit


113
00:04:00,386 --> 00:04:02,956
UI and modules, as well as some


114
00:04:02,956 --> 00:04:05,356
new additions to our existing


115
00:04:05,356 --> 00:04:07,046
library of Active Tasks.


116
00:04:08,046 --> 00:04:09,456
Now, let's get started with


117
00:04:09,456 --> 00:04:10,656
community updates.


118
00:04:11,146 --> 00:04:12,966
I want to cover two main topics,


119
00:04:13,236 --> 00:04:15,106
repository privileges and


120
00:04:15,106 --> 00:04:16,156
schedule updates.


121
00:04:17,146 --> 00:04:18,526
Over the past few months, we


122
00:04:18,526 --> 00:04:20,505
have been expanding our access


123
00:04:20,505 --> 00:04:22,026
rights and providing write


124
00:04:22,096 --> 00:04:23,586
privileges to members of our


125
00:04:23,586 --> 00:04:24,216
community.


126
00:04:24,966 --> 00:04:26,756
In fact, we've chosen five


127
00:04:26,756 --> 00:04:28,756
all-star contributors and given


128
00:04:28,756 --> 00:04:30,146
them direct access to the


129
00:04:30,146 --> 00:04:32,206
ResearchKit repository that also


130
00:04:32,206 --> 00:04:34,326
allows them to merge MPRs.


131
00:04:34,986 --> 00:04:36,416
A huge thank you and


132
00:04:36,416 --> 00:04:38,466
congratulations to Erin,


133
00:04:38,666 --> 00:04:41,286
Fernando, Nino, Ricardo, and


134
00:04:41,286 --> 00:04:41,936
Shannon.


135
00:04:43,116 --> 00:04:45,286
Next, I want to touch on our


136
00:04:45,416 --> 00:04:46,436
schedule updates.


137
00:04:46,936 --> 00:04:48,726
Historically, we've been pushing


138
00:04:48,726 --> 00:04:51,126
to master and stable at the same


139
00:04:51,126 --> 00:04:51,566
time.


140
00:04:52,066 --> 00:04:53,696
Now, we realize that this


141
00:04:53,696 --> 00:04:55,116
inhibits the ability for


142
00:04:55,116 --> 00:04:56,976
developers, like you, to


143
00:04:56,976 --> 00:04:58,656
leverage some of our in-house


144
00:04:58,656 --> 00:05:00,376
features like localization,


145
00:05:00,626 --> 00:05:03,386
accessibility, and QA, which is


146
00:05:03,436 --> 00:05:05,456
why this year we will be pushing


147
00:05:05,456 --> 00:05:07,366
to stable two to three months


148
00:05:07,366 --> 00:05:09,026
after our push to master.


149
00:05:09,846 --> 00:05:11,436
We hope that you can use this


150
00:05:11,436 --> 00:05:13,486
time to check out our latest


151
00:05:13,546 --> 00:05:15,926
updates, provide feedback and


152
00:05:15,926 --> 00:05:16,926
submit PRs.


153
00:05:17,556 --> 00:05:18,976
And the changes that you make,


154
00:05:19,386 --> 00:05:20,906
will make it soon into our


155
00:05:20,906 --> 00:05:24,126
stable, tagged release branch as


156
00:05:24,126 --> 00:05:25,656
opposed to you having to wait


157
00:05:25,656 --> 00:05:27,646
for an entire release cycle.


158
00:05:28,046 --> 00:05:30,126
And now that we have touched


159
00:05:30,126 --> 00:05:31,806
upon community updates, I would


160
00:05:31,806 --> 00:05:33,886
like to dive a little bit deeper


161
00:05:34,046 --> 00:05:35,436
and talk about updates we have


162
00:05:35,436 --> 00:05:36,896
made to the ResearchKit


163
00:05:36,896 --> 00:05:38,846
framework itself, starting with


164
00:05:39,446 --> 00:05:40,436
UI updates.


165
00:05:41,806 --> 00:05:43,986
Now, for comparison, this is


166
00:05:43,986 --> 00:05:45,796
what our Mini Form step looks


167
00:05:45,796 --> 00:05:48,716
like in ResearchKit 1.5, as


168
00:05:48,716 --> 00:05:50,596
taken from our ORK test app.


169
00:05:51,806 --> 00:05:53,376
And here is the same Mini Form


170
00:05:53,376 --> 00:05:56,176
step as it will be available in


171
00:05:56,176 --> 00:05:57,386
ResearchKit 2.0.


172
00:05:58,416 --> 00:06:00,636
As you can see, we have worked


173
00:06:00,636 --> 00:06:03,486
very hard to update the overall


174
00:06:03,486 --> 00:06:05,316
look and feel of ResearchKit UI


175
00:06:05,316 --> 00:06:07,766
to closely resemble the latest


176
00:06:07,766 --> 00:06:09,036
iOS style guidelines.


177
00:06:09,706 --> 00:06:11,006
Let's take a closer look.


178
00:06:13,296 --> 00:06:15,086
We've moved the progress label


179
00:06:15,086 --> 00:06:15,916
from the center of the


180
00:06:15,916 --> 00:06:17,396
navigation bar to the right side


181
00:06:17,396 --> 00:06:18,646
and applied some styling.


182
00:06:19,226 --> 00:06:21,266
This allows us to leverage the


183
00:06:21,266 --> 00:06:23,506
large titles feature in nav bars


184
00:06:23,816 --> 00:06:25,516
and apply it to all of our step


185
00:06:25,576 --> 00:06:26,036
titles.


186
00:06:26,986 --> 00:06:28,446
Now, to keep the consistent


187
00:06:28,446 --> 00:06:30,426
styling, we are also adding a


188
00:06:30,426 --> 00:06:32,506
new card view in order to


189
00:06:32,506 --> 00:06:34,076
improve the overall user


190
00:06:34,076 --> 00:06:35,916
experience for those who are


191
00:06:35,916 --> 00:06:37,816
answering multiple questions and


192
00:06:37,816 --> 00:06:39,896
surveys, as it now provides a


193
00:06:39,936 --> 00:06:41,366
clear break in action that


194
00:06:41,366 --> 00:06:42,796
you're requested to perform.


195
00:06:43,296 --> 00:06:46,316
Now, this card view is applied


196
00:06:46,316 --> 00:06:48,866
by default to all our steps and


197
00:06:48,866 --> 00:06:49,336
forms.


198
00:06:49,536 --> 00:06:50,946
But we are also exposing a


199
00:06:50,946 --> 00:06:52,676
Boolean property that you can


200
00:06:52,676 --> 00:06:53,996
set to falls for backwards


201
00:06:53,996 --> 00:06:54,886
compatibility.


202
00:06:55,646 --> 00:06:57,646
And finally, we are also adding


203
00:06:57,696 --> 00:06:59,706
a footer container view, to


204
00:06:59,706 --> 00:07:01,396
improve the navigation flow.


205
00:07:01,846 --> 00:07:03,676
The cancel button is now part of


206
00:07:03,676 --> 00:07:05,376
the footer view, which is always


207
00:07:05,376 --> 00:07:06,466
sticky to the bottom.


208
00:07:06,966 --> 00:07:08,476
What this means is that your


209
00:07:08,476 --> 00:07:10,406
users will no longer have to


210
00:07:10,406 --> 00:07:12,036
scroll all the way to the bottom


211
00:07:12,036 --> 00:07:14,146
of the step, in order to access


212
00:07:14,146 --> 00:07:15,646
forward navigation options.


213
00:07:15,936 --> 00:07:17,796
And having all these controls in


214
00:07:17,796 --> 00:07:19,996
one place makes it much more


215
00:07:19,996 --> 00:07:20,586
intuitive.


216
00:07:21,736 --> 00:07:23,966
And now, moving on, one of the


217
00:07:23,966 --> 00:07:26,016
most commonly used modules in


218
00:07:26,016 --> 00:07:28,476
ResearchKit is informed consent,


219
00:07:29,186 --> 00:07:30,856
which is used to generate a PDF


220
00:07:30,856 --> 00:07:33,016
and attach a user signature to


221
00:07:33,016 --> 00:07:33,206
it.


222
00:07:33,886 --> 00:07:36,056
Now, we realized how important


223
00:07:36,056 --> 00:07:37,816
it is to be able to survey some


224
00:07:37,816 --> 00:07:39,526
of these confidential documents


225
00:07:39,526 --> 00:07:41,836
to your users within the context


226
00:07:41,836 --> 00:07:42,356
of your app.


227
00:07:42,786 --> 00:07:44,806
Which is why we are adding a new


228
00:07:44,806 --> 00:07:46,826
ORK PDF viewer step.


229
00:07:47,406 --> 00:07:49,336
This is built on top of the PDF


230
00:07:49,436 --> 00:07:51,226
Kit framework that came to iOS


231
00:07:51,226 --> 00:07:51,946
just last year.


232
00:07:51,946 --> 00:07:54,526
Let's take a closer look at some


233
00:07:54,526 --> 00:07:56,366
of the functionalities that this


234
00:07:56,366 --> 00:07:57,126
step provides.


235
00:07:59,256 --> 00:08:01,226
Quick navigation to easily


236
00:08:01,226 --> 00:08:02,326
switch between pages.


237
00:08:03,606 --> 00:08:05,876
Real-time annotations to mark up


238
00:08:05,876 --> 00:08:07,226
the document if necessary.


239
00:08:08,096 --> 00:08:09,516
Search functionality for your


240
00:08:09,516 --> 00:08:11,026
users to query the entire


241
00:08:11,026 --> 00:08:12,356
document for keywords or


242
00:08:12,356 --> 00:08:12,996
phrases.


243
00:08:13,446 --> 00:08:15,416
And the ability to share this


244
00:08:15,466 --> 00:08:17,466
PDF or save it using the


245
00:08:17,466 --> 00:08:19,106
standard iOS share sheet.


246
00:08:19,726 --> 00:08:21,866
And what's even better is how


247
00:08:21,866 --> 00:08:23,506
easy it is to incorporate this


248
00:08:23,556 --> 00:08:24,126
in your app.


249
00:08:25,396 --> 00:08:27,166
You create an instance of ORK


250
00:08:27,166 --> 00:08:29,266
PDF viewer step with a unique


251
00:08:29,266 --> 00:08:31,296
identifier, and simply provide


252
00:08:31,296 --> 00:08:32,846
us the file path to the PDF


253
00:08:32,846 --> 00:08:34,006
document that you wish to


254
00:08:34,006 --> 00:08:34,566
display.


255
00:08:35,976 --> 00:08:37,996
And now, I'd actually like to


256
00:08:37,996 --> 00:08:40,395
switch gears and talk about one


257
00:08:40,395 --> 00:08:42,035
of the core components of


258
00:08:42,035 --> 00:08:42,856
ResearchKit.


259
00:08:43,216 --> 00:08:45,296
Active Tasks.


260
00:08:45,786 --> 00:08:47,126
For those of you who are


261
00:08:47,196 --> 00:08:49,376
unfamiliar, Active Tasks are


262
00:08:49,596 --> 00:08:52,156
prepackaged modules that allows


263
00:08:52,156 --> 00:08:54,386
users to perform certain tasks


264
00:08:54,746 --> 00:08:57,056
or take certain tests in a given


265
00:08:57,056 --> 00:08:57,936
amount of time.


266
00:08:58,026 --> 00:08:59,896
When the user completes the


267
00:08:59,896 --> 00:09:02,036
step, the developer receives a


268
00:09:02,036 --> 00:09:03,876
delegate call back with an ORK


269
00:09:03,876 --> 00:09:04,936
resolved object.


270
00:09:05,546 --> 00:09:06,786
Now, this object consists of a


271
00:09:06,786 --> 00:09:08,196
variety of data points, which


272
00:09:08,196 --> 00:09:09,686
include things like user


273
00:09:09,686 --> 00:09:11,896
responses, timing information


274
00:09:12,056 --> 00:09:13,856
and data recorded from different


275
00:09:13,856 --> 00:09:15,846
sources like Accelerometer,


276
00:09:15,846 --> 00:09:18,066
Gyroscope, healthcare data, and


277
00:09:18,066 --> 00:09:19,226
even from your microphone.


278
00:09:20,216 --> 00:09:21,926
And this year, we are also


279
00:09:21,926 --> 00:09:23,436
adding support for health


280
00:09:23,436 --> 00:09:23,926
records.


281
00:09:24,906 --> 00:09:26,416
Now, let's take a look at how


282
00:09:26,416 --> 00:09:27,876
you can utilize this in your


283
00:09:27,876 --> 00:09:28,136
app.


284
00:09:28,826 --> 00:09:30,436
Now, your objective here is to


285
00:09:30,436 --> 00:09:32,546
create a recorder configuration


286
00:09:32,766 --> 00:09:34,556
that can query health clinical


287
00:09:34,556 --> 00:09:35,326
data types.


288
00:09:35,636 --> 00:09:37,066
And you need to provide us with


289
00:09:37,136 --> 00:09:38,426
two important parameters.


290
00:09:38,756 --> 00:09:41,706
First is of HKClinicalType, and


291
00:09:41,706 --> 00:09:43,866
a second is an optional of type


292
00:09:43,926 --> 00:09:45,536
HKFIRResourceType.


293
00:09:46,386 --> 00:09:47,746
And once you have created this


294
00:09:47,746 --> 00:09:49,406
record of configuration, you


295
00:09:49,406 --> 00:09:50,486
attach it to the step.


296
00:09:51,206 --> 00:09:53,446
So, now when the user is about


297
00:09:53,446 --> 00:09:55,106
to perform the task, they will


298
00:09:55,106 --> 00:09:57,286
be prompted with HealthKits new


299
00:09:57,286 --> 00:09:58,336
authorization UI.


300
00:09:59,116 --> 00:10:00,986
And only if they grant access


301
00:10:00,986 --> 00:10:02,286
will we be able to run the


302
00:10:02,286 --> 00:10:02,726
query.


303
00:10:03,276 --> 00:10:04,696
And once the user completes the


304
00:10:04,696 --> 00:10:06,236
task as part of the delegate


305
00:10:06,236 --> 00:10:07,846
call back in your ORK result


306
00:10:07,846 --> 00:10:09,606
object, you will also have


307
00:10:09,646 --> 00:10:11,256
information that you requested


308
00:10:11,256 --> 00:10:12,796
for from health records.


309
00:10:13,656 --> 00:10:15,506
Now, to understand and leaner


310
00:10:15,506 --> 00:10:16,856
more about these different


311
00:10:16,856 --> 00:10:19,006
health records types, I highly


312
00:10:19,006 --> 00:10:21,626
recommend everyone here, to also


313
00:10:21,846 --> 00:10:23,746
visit the session, Accessing


314
00:10:23,746 --> 00:10:25,066
Health Records with HealthKit,


315
00:10:25,346 --> 00:10:26,756
that is happening right here at


316
00:10:26,786 --> 00:10:28,596
3 p.m., where they will talk


317
00:10:28,596 --> 00:10:29,846
about everything related to


318
00:10:29,846 --> 00:10:31,446
health records in great detail,


319
00:10:31,736 --> 00:10:33,346
including some very important


320
00:10:33,346 --> 00:10:34,156
best practices.


321
00:10:34,636 --> 00:10:37,146
And now that we have covered


322
00:10:37,496 --> 00:10:38,936
updates to the Active Task


323
00:10:38,936 --> 00:10:42,556
module as a whole, let's talk


324
00:10:42,556 --> 00:10:43,796
about the Active Tasks


325
00:10:43,796 --> 00:10:44,346
themselves.


326
00:10:44,916 --> 00:10:46,426
This year, we are adding new


327
00:10:46,426 --> 00:10:48,936
modules focusing on three main


328
00:10:48,936 --> 00:10:51,366
areas of health; hearing,


329
00:10:51,746 --> 00:10:53,336
speech, and vision.


330
00:10:53,686 --> 00:10:55,846
Let's get started with hearing.


331
00:10:56,156 --> 00:11:00,256
We are adding a new dBHL tone


332
00:11:00,416 --> 00:11:01,656
audiometry step.


333
00:11:02,496 --> 00:11:03,846
This implements the


334
00:11:03,846 --> 00:11:05,916
Hughson-Westlake Method and


335
00:11:05,916 --> 00:11:07,336
allows you to determine the


336
00:11:07,496 --> 00:11:08,746
hearing threshold level of a


337
00:11:08,746 --> 00:11:11,206
user in the dBHL scale.


338
00:11:11,696 --> 00:11:14,256
And to facilitate this, and


339
00:11:14,256 --> 00:11:15,896
ensure that you get the most


340
00:11:15,896 --> 00:11:16,886
accurate results.


341
00:11:17,246 --> 00:11:18,816
I'm really excited to say that


342
00:11:18,816 --> 00:11:20,826
for the very first time we are


343
00:11:20,916 --> 00:11:22,886
open sourcing calibration data


344
00:11:22,886 --> 00:11:23,996
for our AirPods.


345
00:11:24,646 --> 00:11:26,336
Now, this comes with three


346
00:11:26,336 --> 00:11:26,866
tables.


347
00:11:27,266 --> 00:11:29,476
The first one is a volume curve


348
00:11:29,926 --> 00:11:32,396
for AirPods on all iOS devices.


349
00:11:32,866 --> 00:11:34,366
The second one is the


350
00:11:34,366 --> 00:11:36,096
sensitivity per frequency.


351
00:11:36,136 --> 00:11:38,266
Where sensitivity is measured in


352
00:11:38,266 --> 00:11:39,656
decibels sound pressure level.


353
00:11:40,036 --> 00:11:41,426
And finally, we are also


354
00:11:41,426 --> 00:11:42,936
providing the reference


355
00:11:42,976 --> 00:11:44,386
equivalent threshold sound


356
00:11:44,386 --> 00:11:46,596
pressure level tables or RETSPL.


357
00:11:46,596 --> 00:11:49,996
Now, it's really important to


358
00:11:49,996 --> 00:11:52,796
note that the RETSPL table is


359
00:11:52,796 --> 00:11:53,606
still in beta.


360
00:11:54,216 --> 00:11:56,066
This means that we are actively


361
00:11:56,066 --> 00:11:57,966
running internal validations and


362
00:11:57,966 --> 00:11:58,466
tests.


363
00:11:58,636 --> 00:12:00,086
And over the next few weeks, we


364
00:12:00,086 --> 00:12:02,066
will be updating these tables as


365
00:12:02,066 --> 00:12:03,996
we start converging on accurate


366
00:12:03,996 --> 00:12:04,526
data.


367
00:12:05,946 --> 00:12:07,496
Now let's take a look at how


368
00:12:07,496 --> 00:12:09,636
this Active Task actually works.


369
00:12:10,766 --> 00:12:12,956
The user is required to hear


370
00:12:12,956 --> 00:12:15,576
tones at a particular frequency


371
00:12:15,756 --> 00:12:18,616
at varying levels of dBHL value.


372
00:12:19,496 --> 00:12:20,866
When the user hears a tone, they


373
00:12:20,866 --> 00:12:22,486
are expected to tap the button


374
00:12:22,486 --> 00:12:23,816
to indicate that they have heard


375
00:12:23,816 --> 00:12:24,006
it.


376
00:12:24,326 --> 00:12:25,746
And at that point we will start


377
00:12:25,846 --> 00:12:28,196
decreasing the dBHL value as


378
00:12:28,246 --> 00:12:29,876
indicated here by the green


379
00:12:29,876 --> 00:12:30,306
dots.


380
00:12:30,776 --> 00:12:32,276
Now, when the user fails to tap


381
00:12:32,276 --> 00:12:34,846
the button after a given timeout


382
00:12:34,846 --> 00:12:36,636
period, we will start increasing


383
00:12:36,636 --> 00:12:38,476
the dBHL values as indicated by


384
00:12:38,476 --> 00:12:39,296
the red dots.


385
00:12:39,626 --> 00:12:41,326
And over time we will feed these


386
00:12:41,326 --> 00:12:42,226
data points to the


387
00:12:42,226 --> 00:12:44,256
Hughson-Westlake Method in order


388
00:12:44,256 --> 00:12:45,566
to determine the hearing


389
00:12:45,566 --> 00:12:48,586
threshold level of the user in


390
00:12:49,096 --> 00:12:51,966
the dBHL scale.


391
00:12:52,036 --> 00:12:53,086
Now, from a developer


392
00:12:53,086 --> 00:12:55,076
perspective, the entirety of


393
00:12:55,166 --> 00:12:57,226
tone generation occurs in three


394
00:12:57,226 --> 00:12:57,736
phases.


395
00:12:58,466 --> 00:13:00,636
The first one, is a pre-stimulus


396
00:13:00,636 --> 00:13:01,746
delay, which is a


397
00:13:01,746 --> 00:13:03,706
developer-specified maximum


398
00:13:03,706 --> 00:13:05,876
number in seconds that we use to


399
00:13:05,876 --> 00:13:08,086
generate a random delay between


400
00:13:08,086 --> 00:13:09,976
one and that value before we


401
00:13:09,976 --> 00:13:11,126
start playing the tone to the


402
00:13:11,126 --> 00:13:11,616
user.


403
00:13:12,266 --> 00:13:13,876
This is to ensure that the user


404
00:13:13,876 --> 00:13:15,556
cannot cheat the test by just


405
00:13:15,556 --> 00:13:18,446
randomly tapping on the button.


406
00:13:18,596 --> 00:13:20,526
Next, we are also providing a


407
00:13:20,526 --> 00:13:22,176
property for tone duration,


408
00:13:22,176 --> 00:13:23,406
which governs the actual


409
00:13:23,406 --> 00:13:24,786
duration for which the tone will


410
00:13:24,786 --> 00:13:25,416
be played.


411
00:13:26,216 --> 00:13:28,026
And finally, is the post


412
00:13:28,026 --> 00:13:29,286
stimulus delay, which is the


413
00:13:29,286 --> 00:13:31,136
amount of time allocated to the


414
00:13:31,136 --> 00:13:33,226
user to respond for that


415
00:13:33,226 --> 00:13:34,186
specific tone.


416
00:13:35,136 --> 00:13:36,696
To incorporate this in your app,


417
00:13:37,716 --> 00:13:39,266
you create an instance of


418
00:13:39,376 --> 00:13:42,016
ORKdBHL tone audiometry step


419
00:13:42,016 --> 00:13:44,226
with a unique identifier and


420
00:13:44,226 --> 00:13:45,796
provide us values for some of


421
00:13:45,796 --> 00:13:47,506
the parameters, including a


422
00:13:47,506 --> 00:13:49,216
frequency list, which is an


423
00:13:49,216 --> 00:13:51,326
array of frequency that you wish


424
00:13:51,326 --> 00:13:52,776
to be played back to your user.


425
00:13:53,396 --> 00:13:54,766
We're also exposing more


426
00:13:54,766 --> 00:13:56,166
properties that you can further


427
00:13:56,206 --> 00:13:58,146
customize for your specific use


428
00:13:58,146 --> 00:13:58,626
case.


429
00:13:59,086 --> 00:14:01,886
Now, when the user completes


430
00:14:01,886 --> 00:14:03,106
this task as part of the


431
00:14:03,106 --> 00:14:05,166
delegate call-back, the ORK


432
00:14:05,166 --> 00:14:06,636
result object will be returned


433
00:14:06,636 --> 00:14:06,966
to you.


434
00:14:07,456 --> 00:14:08,906
Let's take a look at what that


435
00:14:08,906 --> 00:14:10,306
object looks like for this


436
00:14:10,306 --> 00:14:11,926
particular task.


437
00:14:12,076 --> 00:14:13,386
So, at the top level you get a


438
00:14:13,386 --> 00:14:14,726
variety of information that


439
00:14:14,726 --> 00:14:16,086
includes things like output


440
00:14:16,086 --> 00:14:18,326
volume, and also includes an


441
00:14:18,326 --> 00:14:19,916
array of sample objects.


442
00:14:20,436 --> 00:14:22,036
These objects in turn


443
00:14:22,076 --> 00:14:23,416
encapsulate things like


444
00:14:23,446 --> 00:14:24,946
channels, which refers to


445
00:14:24,946 --> 00:14:26,366
whether the tone was being


446
00:14:26,366 --> 00:14:27,766
played in the left or right


447
00:14:27,766 --> 00:14:29,956
channel to the user, as well as


448
00:14:29,996 --> 00:14:31,166
the threshold value, as


449
00:14:31,166 --> 00:14:31,936
determined by the


450
00:14:31,936 --> 00:14:33,176
Hughson-Westlake Method.


451
00:14:33,796 --> 00:14:35,466
This also consists of an array


452
00:14:35,466 --> 00:14:36,666
of unit objects.


453
00:14:37,266 --> 00:14:38,936
And the unit objects in turn,


454
00:14:39,026 --> 00:14:40,886
provide details like the dBHl


455
00:14:40,886 --> 00:14:42,916
value at which that particular


456
00:14:42,916 --> 00:14:44,426
tone was being played, and a


457
00:14:44,426 --> 00:14:46,006
variety of timestamps, which


458
00:14:46,006 --> 00:14:48,576
also includes when exactly did


459
00:14:48,576 --> 00:14:49,886
the user tap the button.


460
00:14:51,036 --> 00:14:52,996
So, now let's move on to our


461
00:14:52,996 --> 00:14:54,686
next task that falls under the


462
00:14:54,686 --> 00:14:55,716
hearing category.


463
00:14:56,396 --> 00:14:58,686
We are adding an environment SPL


464
00:14:58,686 --> 00:14:59,166
meter.


465
00:15:00,196 --> 00:15:02,256
This implements an A-weighted


466
00:15:02,256 --> 00:15:04,316
filter, in order to measure the


467
00:15:04,316 --> 00:15:05,596
environmental sound pressure


468
00:15:05,596 --> 00:15:08,726
level in DBA, or in other words,


469
00:15:08,986 --> 00:15:10,276
it tells you how noisy it is.


470
00:15:11,036 --> 00:15:13,226
Now, this step also accepts a


471
00:15:13,226 --> 00:15:15,576
threshold value, and this makes


472
00:15:15,576 --> 00:15:17,506
things interesting, because now


473
00:15:17,836 --> 00:15:19,896
you can use the step as a gating


474
00:15:19,896 --> 00:15:20,286
step.


475
00:15:20,796 --> 00:15:22,196
So, for example, if you want


476
00:15:22,196 --> 00:15:23,846
your users to perform the tone


477
00:15:23,846 --> 00:15:25,906
audiometry task, you can add


478
00:15:25,966 --> 00:15:27,956
this task before that to ensure


479
00:15:27,956 --> 00:15:30,086
that your users are not in an


480
00:15:30,086 --> 00:15:31,896
environment that is too noisy to


481
00:15:31,896 --> 00:15:36,296
accurately perform the task.


482
00:15:36,446 --> 00:15:37,946
To add this you create an


483
00:15:37,946 --> 00:15:39,606
instance of ORK environment,


484
00:15:39,606 --> 00:15:41,226
SPLMeterStep with a unique


485
00:15:41,226 --> 00:15:43,096
identifier and provide us the


486
00:15:43,096 --> 00:15:43,966
threshold value.


487
00:15:44,826 --> 00:15:46,386
We're also exposing additional


488
00:15:46,386 --> 00:15:47,656
properties that you can further


489
00:15:47,656 --> 00:15:48,336
customize.


490
00:15:49,976 --> 00:15:51,486
And now, let's take a quick


491
00:15:51,486 --> 00:15:53,696
detour and move on to our next


492
00:15:53,696 --> 00:15:55,906
category, speech.


493
00:15:57,186 --> 00:15:58,596
We're adding a speech


494
00:15:58,746 --> 00:16:00,606
recognition module, which


495
00:16:00,606 --> 00:16:02,166
leverages the speech recognition


496
00:16:02,166 --> 00:16:04,586
framework on iOS, now, this


497
00:16:04,586 --> 00:16:06,846
gives us direct access to a


498
00:16:06,846 --> 00:16:08,486
real-time speech recognizers


499
00:16:08,486 --> 00:16:10,056
that supports over 50 different


500
00:16:10,056 --> 00:16:11,326
languages, or locales.


501
00:16:11,726 --> 00:16:14,066
As part of this task, the user


502
00:16:14,106 --> 00:16:15,836
is asked to either repeat a


503
00:16:15,836 --> 00:16:18,456
sentence, or describe an image.


504
00:16:19,236 --> 00:16:20,996
And once they are done speaking,


505
00:16:21,366 --> 00:16:23,266
the users will be automatically


506
00:16:23,266 --> 00:16:25,846
taken to a next step, where they


507
00:16:25,846 --> 00:16:27,566
can edit the generated


508
00:16:27,566 --> 00:16:28,216
transcript.


509
00:16:28,856 --> 00:16:30,436
So, for example in this case


510
00:16:30,676 --> 00:16:32,336
quick and fox were incorrectly


511
00:16:32,336 --> 00:16:34,036
interpreted as quite and box.


512
00:16:34,476 --> 00:16:36,506
Your users can just tap on these


513
00:16:36,506 --> 00:16:38,916
words an edit them if necessary.


514
00:16:39,426 --> 00:16:41,466
Now, it's important to note,


515
00:16:41,466 --> 00:16:42,906
that as part of this task, we


516
00:16:42,906 --> 00:16:45,046
are returning to you a very,


517
00:16:45,046 --> 00:16:46,986
very rich dataset that consists


518
00:16:46,986 --> 00:16:48,006
of three main things.


519
00:16:48,736 --> 00:16:50,806
A direct audio recording to what


520
00:16:50,806 --> 00:16:53,286
the user said, the transcription


521
00:16:53,286 --> 00:16:54,236
generated by the speech


522
00:16:54,236 --> 00:16:56,586
recognition engine, and the


523
00:16:56,586 --> 00:16:58,586
edited transcript by the user.


524
00:16:58,886 --> 00:17:01,656
To add this to your app, you


525
00:17:01,656 --> 00:17:03,376
create an instance of ORK


526
00:17:03,376 --> 00:17:05,056
speechRecognitionStep, and


527
00:17:05,056 --> 00:17:06,596
provide us with either a UI


528
00:17:06,596 --> 00:17:07,915
image, or a string.


529
00:17:08,866 --> 00:17:10,386
You can also customize the


530
00:17:10,386 --> 00:17:12,286
locale for this recognition.


531
00:17:12,935 --> 00:17:14,266
And also, you can surface


532
00:17:14,266 --> 00:17:16,316
real-time transcription as the


533
00:17:16,316 --> 00:17:17,326
user is speaking.


534
00:17:18,175 --> 00:17:20,695
Now, let's take a closer look at


535
00:17:20,695 --> 00:17:22,746
one of the subsets of our result


536
00:17:22,746 --> 00:17:23,326
object.


537
00:17:24,536 --> 00:17:26,816
This is of type FS transcription


538
00:17:27,086 --> 00:17:28,306
as surface by the speech


539
00:17:28,306 --> 00:17:29,406
recognition framework.


540
00:17:29,896 --> 00:17:31,576
The formattedString provides the


541
00:17:31,576 --> 00:17:33,316
transcript, and the array of


542
00:17:33,316 --> 00:17:35,276
segment objects, essentially


543
00:17:35,276 --> 00:17:37,006
breakdown the transcript into


544
00:17:37,006 --> 00:17:39,186
substrings, as well as provide a


545
00:17:39,256 --> 00:17:40,496
confidence letter for each


546
00:17:40,496 --> 00:17:41,076
substring.


547
00:17:41,636 --> 00:17:42,866
On top of this, they also


548
00:17:42,866 --> 00:17:44,926
provide an array of alternative


549
00:17:44,926 --> 00:17:46,846
string, as you can see here in


550
00:17:46,846 --> 00:17:48,146
this illustrative example.


551
00:17:48,606 --> 00:17:51,536
Now, these results can be used


552
00:17:51,536 --> 00:17:53,896
to derive syntactic, semantic


553
00:17:54,206 --> 00:17:55,986
and linguistic features, as well


554
00:17:55,986 --> 00:17:58,146
as speaking rate in order to


555
00:17:58,146 --> 00:18:00,446
evaluate the speech patterns for


556
00:18:00,446 --> 00:18:02,036
various medical conditions,


557
00:18:02,206 --> 00:18:07,196
including cognition and mood.


558
00:18:07,196 --> 00:18:09,446
Our next task, Interestingly, is


559
00:18:09,446 --> 00:18:12,126
a combination of speech and


560
00:18:12,126 --> 00:18:12,536
hearing.


561
00:18:13,886 --> 00:18:15,626
The speech and noise Active


562
00:18:16,186 --> 00:18:16,376
Task.


563
00:18:16,556 --> 00:18:18,786
This allows you to perform fully


564
00:18:18,786 --> 00:18:20,446
automated speech audiometry.


565
00:18:21,706 --> 00:18:24,176
And conventional tone audiometry


566
00:18:24,176 --> 00:18:26,006
uses pure tones, which are


567
00:18:26,006 --> 00:18:27,396
essentially sign waves.


568
00:18:28,176 --> 00:18:29,276
Now, there have been recorded


569
00:18:29,276 --> 00:18:30,896
instances, where users are able


570
00:18:30,896 --> 00:18:32,656
to clearly distinguish pure


571
00:18:32,656 --> 00:18:34,066
tones, but find it extremely


572
00:18:34,066 --> 00:18:35,976
difficult to distinguish words


573
00:18:36,136 --> 00:18:37,366
when they are intermixed with


574
00:18:37,366 --> 00:18:37,806
noise.


575
00:18:38,946 --> 00:18:40,686
And this closely reflects


576
00:18:40,686 --> 00:18:42,596
real-world examples of


577
00:18:42,706 --> 00:18:44,536
early-stage hearing loss.


578
00:18:44,746 --> 00:18:46,786
For example, when you are unable


579
00:18:46,786 --> 00:18:48,576
to understand what the person


580
00:18:48,576 --> 00:18:49,546
sitting in front of you is


581
00:18:49,616 --> 00:18:51,086
telling you in a noisy


582
00:18:51,086 --> 00:18:51,686
restaurant.


583
00:18:52,986 --> 00:18:54,426
Now, before I go into further


584
00:18:54,426 --> 00:18:56,406
details let's take a look at how


585
00:18:56,406 --> 00:18:57,976
this task actually works.


586
00:19:03,906 --> 00:19:05,206
>> The actor tried three green


587
00:19:05,206 --> 00:19:05,596
pictures.


588
00:19:06,376 --> 00:19:09,776
>> Now, as you notice an audio


589
00:19:09,776 --> 00:19:11,556
file was played to the user, and


590
00:19:11,556 --> 00:19:12,646
once it completes, they are


591
00:19:12,646 --> 00:19:14,606
immediately requested to repeat


592
00:19:14,646 --> 00:19:16,406
what they have just heard.


593
00:19:17,576 --> 00:19:19,986
Now, the speech and noise Active


594
00:19:20,036 --> 00:19:22,906
Task uses audio files generated


595
00:19:22,906 --> 00:19:24,706
by combining five words from a


596
00:19:24,706 --> 00:19:26,696
close-set matrix, that was


597
00:19:26,696 --> 00:19:28,756
validated internally for things


598
00:19:28,756 --> 00:19:30,306
like word familiarity,


599
00:19:30,676 --> 00:19:33,476
uniformity, difficulty, and also


600
00:19:33,476 --> 00:19:35,146
to ensure that the sentences


601
00:19:35,146 --> 00:19:36,816
generated by the synthesizer


602
00:19:37,286 --> 00:19:39,056
were phonetically balanced and


603
00:19:39,056 --> 00:19:40,676
more importantly, consistent.


604
00:19:41,926 --> 00:19:43,106
These files are then


605
00:19:43,106 --> 00:19:44,766
programmatically mixed with


606
00:19:44,766 --> 00:19:46,376
background noise at varying


607
00:19:46,376 --> 00:19:48,166
levels of signal to noise ratio,


608
00:19:48,466 --> 00:19:49,196
or SNR.


609
00:19:50,136 --> 00:19:51,576
And developers will also have


610
00:19:51,576 --> 00:19:53,696
the option to set the value for


611
00:19:53,696 --> 00:19:55,436
the gain for all of the noise


612
00:19:55,436 --> 00:19:56,116
signals.


613
00:19:56,606 --> 00:20:00,076
Now, speech reception threshold,


614
00:20:00,126 --> 00:20:02,506
is defined as the minimum value


615
00:20:02,506 --> 00:20:04,836
in SNR at which a user can


616
00:20:04,836 --> 00:20:06,726
understand only 50% of the


617
00:20:06,726 --> 00:20:09,916
spoken words.


618
00:20:10,096 --> 00:20:12,676
Now, our vision for this test is


619
00:20:12,896 --> 00:20:14,286
over the next few weeks, we'll


620
00:20:14,286 --> 00:20:17,126
be uploading over 175 different


621
00:20:17,126 --> 00:20:20,296
files that corresponds to 25


622
00:20:20,296 --> 00:20:22,126
lists, each with 7 sentences.


623
00:20:22,436 --> 00:20:24,566
And in the long-run, we want to


624
00:20:24,566 --> 00:20:26,356
be able to support this test for


625
00:20:26,356 --> 00:20:28,676
multiple languages, especially


626
00:20:28,676 --> 00:20:30,506
ones where currently speech and


627
00:20:30,506 --> 00:20:32,856
noise is not possible due to a


628
00:20:32,856 --> 00:20:34,816
lack of speech database or other


629
00:20:34,816 --> 00:20:35,926
testing resources.


630
00:20:36,496 --> 00:20:38,296
So, if you are a researcher in


631
00:20:38,296 --> 00:20:39,886
this particular field and if you


632
00:20:39,886 --> 00:20:41,226
have a request for specific


633
00:20:41,226 --> 00:20:43,576
locale, I highly encourage you


634
00:20:43,576 --> 00:20:45,306
to reach out to us and we'll do


635
00:20:45,306 --> 00:20:46,396
our best to accommodate your


636
00:20:46,396 --> 00:20:46,896
request.


637
00:20:46,896 --> 00:20:50,886
To add this to your app, you


638
00:20:50,886 --> 00:20:51,926
create an instance of


639
00:20:51,926 --> 00:20:54,466
ORKSpeechInNoiseStep, and point


640
00:20:54,466 --> 00:20:55,706
us to the audio file that you


641
00:20:55,706 --> 00:20:56,296
wish to play.


642
00:20:56,756 --> 00:20:58,616
You can also specify the gain


643
00:20:58,616 --> 00:20:59,966
applied to the noise signal.


644
00:21:00,566 --> 00:21:04,756
And lastly, let's touch on


645
00:21:04,756 --> 00:21:05,206
vision.


646
00:21:06,616 --> 00:21:10,456
the Amsler grid is a tool that


647
00:21:10,456 --> 00:21:12,846
is used to detect problems in a


648
00:21:12,846 --> 00:21:14,696
user's vision that can be caused


649
00:21:14,696 --> 00:21:18,416
due to conditions like macular


650
00:21:18,416 --> 00:21:19,316
degeneration.


651
00:21:20,586 --> 00:21:23,526
Now, this test is conventionally


652
00:21:23,526 --> 00:21:25,556
performed in a doctor's office


653
00:21:25,866 --> 00:21:27,476
on a traditional piece of paper,


654
00:21:27,476 --> 00:21:28,996
displaying a graphic like the


655
00:21:28,996 --> 00:21:30,056
one you see right here.


656
00:21:30,926 --> 00:21:32,926
Users with perfect vision would


657
00:21:32,926 --> 00:21:35,216
see exactly this, whereas users


658
00:21:35,216 --> 00:21:36,736
who suffer from some conditions


659
00:21:36,996 --> 00:21:38,626
would start seeing distortions


660
00:21:38,626 --> 00:21:39,296
on this graph.


661
00:21:40,206 --> 00:21:42,266
Now, please don't panic if


662
00:21:42,266 --> 00:21:43,486
you're seeing distortions right


663
00:21:43,486 --> 00:21:43,776
now.


664
00:21:44,186 --> 00:21:45,696
That was intentional and it was


665
00:21:45,736 --> 00:21:46,916
added for dramatic effect.


666
00:21:48,126 --> 00:21:49,776
Now, users simply have to point


667
00:21:49,776 --> 00:21:50,906
to places on the grid where they


668
00:21:50,906 --> 00:21:51,766
see distortions.


669
00:21:52,226 --> 00:21:54,856
By replicating this grid, we are


670
00:21:54,856 --> 00:21:56,406
able to bring the functionality


671
00:21:56,406 --> 00:21:58,256
of this task to the users at


672
00:21:58,446 --> 00:21:59,646
home on their device.


673
00:22:00,036 --> 00:22:01,646
Users simply have to annotate


674
00:22:01,646 --> 00:22:03,106
areas on the grid where they see


675
00:22:03,106 --> 00:22:03,936
distortions.


676
00:22:05,066 --> 00:22:07,426
And we believe that developers


677
00:22:07,426 --> 00:22:09,876
can leverage some exciting iOS


678
00:22:09,876 --> 00:22:11,726
features like [inaudible] or the


679
00:22:11,726 --> 00:22:14,546
depth sensing camera to increase


680
00:22:14,546 --> 00:22:16,656
the experience of a user who is


681
00:22:16,656 --> 00:22:19,006
taking this particular task.


682
00:22:19,356 --> 00:22:21,176
Now, all of these Active Tasks


683
00:22:21,266 --> 00:22:22,956
are really great for data


684
00:22:22,956 --> 00:22:24,656
collection and analysis.


685
00:22:25,336 --> 00:22:26,416
But they are designed to be


686
00:22:26,416 --> 00:22:28,546
performed at a specified time


687
00:22:28,846 --> 00:22:30,046
for a given period.


688
00:22:31,306 --> 00:22:33,016
And as we start to dig into


689
00:22:33,016 --> 00:22:34,886
specific conditions, we have


690
00:22:34,886 --> 00:22:35,996
realized that some of the more


691
00:22:35,996 --> 00:22:37,636
complex problems in health


692
00:22:38,016 --> 00:22:40,396
require constant monitoring, and


693
00:22:40,396 --> 00:22:42,086
therefore, introduce the need


694
00:22:42,386 --> 00:22:44,826
for passive, noninvasive data


695
00:22:44,826 --> 00:22:45,436
collection.


696
00:22:46,046 --> 00:22:47,686
And to talk more about that I


697
00:22:47,686 --> 00:22:48,936
would like to introduce Gabriel


698
00:22:49,016 --> 00:22:49,706
up on stage.


699
00:22:50,516 --> 00:22:55,976
[ Applause ]


700
00:22:56,476 --> 00:22:59,236
>> Hello. My name is Gabriel and


701
00:22:59,236 --> 00:23:00,566
I'm here on behalf of the core


702
00:23:00,566 --> 00:23:02,946
motion team to introduce a new


703
00:23:02,946 --> 00:23:03,766
research API.


704
00:23:04,606 --> 00:23:06,556
The movement disorder API.


705
00:23:09,116 --> 00:23:10,776
As Srinath was mentioning, this


706
00:23:10,776 --> 00:23:12,716
is a passive, all-day monitoring


707
00:23:12,716 --> 00:23:15,336
API, available on Apple Watch,


708
00:23:15,636 --> 00:23:17,016
which will allow you to monitor


709
00:23:17,016 --> 00:23:18,216
the symptoms of movement


710
00:23:18,216 --> 00:23:18,816
disorders.


711
00:23:19,186 --> 00:23:21,056
Specifically, two movements


712
00:23:21,056 --> 00:23:22,906
disorders which are relevant to


713
00:23:23,176 --> 00:23:24,176
the study of Parkinson's


714
00:23:24,216 --> 00:23:24,616
disease.


715
00:23:25,696 --> 00:23:28,216
Now, because of the targeted use


716
00:23:28,216 --> 00:23:30,476
case as a research API, you will


717
00:23:30,476 --> 00:23:31,786
need to apply for a special code


718
00:23:31,786 --> 00:23:33,446
signing entitlement in order to


719
00:23:33,446 --> 00:23:34,156
use this API.


720
00:23:35,136 --> 00:23:36,316
This application process will be


721
00:23:36,316 --> 00:23:37,826
done through the Apple developer


722
00:23:37,826 --> 00:23:39,556
web portal, starting in seed


723
00:23:39,646 --> 00:23:42,016
two, though if you just can't


724
00:23:42,016 --> 00:23:43,336
wait and I don't blame you,


725
00:23:44,246 --> 00:23:46,106
there will be sample data sets


726
00:23:46,106 --> 00:23:47,836
as well as demo code available


727
00:23:47,836 --> 00:23:49,256
in the research kit, GitHub


728
00:23:49,256 --> 00:23:50,776
repository for this talk.


729
00:23:51,956 --> 00:23:53,786
So, let's start talking about


730
00:23:53,786 --> 00:23:55,346
those two movement disorder


731
00:23:55,346 --> 00:23:55,826
symptoms.


732
00:23:58,546 --> 00:23:59,826
As some of you may know,


733
00:24:00,516 --> 00:24:02,256
Parkinson's is a degenerative


734
00:24:02,386 --> 00:24:04,416
neurological disorder which can


735
00:24:04,416 --> 00:24:05,726
affect the motor functions of


736
00:24:05,726 --> 00:24:06,696
those with the disease.


737
00:24:07,806 --> 00:24:09,606
One of the identifiable symptoms


738
00:24:09,606 --> 00:24:11,666
of Parkinson's is a tremor.


739
00:24:12,226 --> 00:24:14,016
And this API monitors for tremor


740
00:24:14,136 --> 00:24:16,746
at rest, characterized by a


741
00:24:16,746 --> 00:24:19,946
shaking, or a trembling of the


742
00:24:19,946 --> 00:24:22,506
body when somebody is not


743
00:24:22,506 --> 00:24:23,406
intending to move.


744
00:24:24,706 --> 00:24:26,736
Now, there are treatments


745
00:24:27,076 --> 00:24:28,956
including medications, which can


746
00:24:28,956 --> 00:24:31,076
help suppress and control the


747
00:24:31,076 --> 00:24:32,016
symptoms of Parkinson's.


748
00:24:32,706 --> 00:24:34,436
However, these very same


749
00:24:34,436 --> 00:24:35,506
treatments can often have


750
00:24:35,766 --> 00:24:36,856
negative side effects.


751
00:24:37,656 --> 00:24:39,036
Side effects such as


752
00:24:39,236 --> 00:24:40,646
dyskinesias.


753
00:24:41,396 --> 00:24:43,406
And one dyskinetic symptom that


754
00:24:43,406 --> 00:24:45,486
this API is able to monitor for


755
00:24:45,936 --> 00:24:47,886
is a fidgeting or swaying of the


756
00:24:47,886 --> 00:24:49,406
body known as choreiform


757
00:24:49,406 --> 00:24:49,756
movement.


758
00:24:50,956 --> 00:24:54,306
So, to recap, you have tremor, a


759
00:24:54,306 --> 00:24:56,406
symptom of the disease as well


760
00:24:56,406 --> 00:24:58,886
as dyskinesia, a side effect of


761
00:24:58,886 --> 00:24:59,406
the treatment.


762
00:25:00,306 --> 00:25:01,956
Let's take a quick look at what


763
00:25:01,986 --> 00:25:03,736
tools researchers and clinicians


764
00:25:03,856 --> 00:25:05,456
currently have in order to


765
00:25:05,456 --> 00:25:08,666
assess these symptoms.


766
00:25:08,906 --> 00:25:09,946
Typically, these types of


767
00:25:09,946 --> 00:25:11,796
assessments are done in clinic.


768
00:25:12,586 --> 00:25:14,636
A clinician will ask a patient


769
00:25:14,636 --> 00:25:16,186
with Parkinson's disease to


770
00:25:16,186 --> 00:25:18,146
perform physical diagnostic


771
00:25:18,396 --> 00:25:20,666
tests in order to rate and


772
00:25:20,666 --> 00:25:22,006
evaluate the severity of their


773
00:25:22,006 --> 00:25:22,436
condition.


774
00:25:23,476 --> 00:25:24,686
These ratings provide a


775
00:25:24,686 --> 00:25:26,816
quantitative, though subjected


776
00:25:26,816 --> 00:25:28,496
to the rater, measurement of


777
00:25:28,496 --> 00:25:29,956
their condition at that point in


778
00:25:29,956 --> 00:25:31,026
time, when they're in the


779
00:25:31,026 --> 00:25:31,416
clinic.


780
00:25:32,616 --> 00:25:33,716
In order to get a broader and


781
00:25:33,716 --> 00:25:35,506
more complete picture, patients


782
00:25:35,506 --> 00:25:36,616
are also encouraged to keep


783
00:25:36,796 --> 00:25:38,446
diaries where they log their


784
00:25:38,446 --> 00:25:39,586
symptoms manually.


785
00:25:40,836 --> 00:25:42,236
However, this can be cumbersome


786
00:25:42,236 --> 00:25:43,746
for patients and some will


787
00:25:43,746 --> 00:25:45,726
understandably forget or be


788
00:25:45,816 --> 00:25:48,256
unable to describe the full


789
00:25:48,256 --> 00:25:49,876
extent of their symptoms every


790
00:25:50,116 --> 00:25:50,946
single day.


791
00:25:51,376 --> 00:25:54,796
Wouldn't it be great if there


792
00:25:54,796 --> 00:25:57,846
was a passive, unobtrusive way


793
00:25:58,616 --> 00:25:59,826
to monitor for these symptoms.


794
00:26:01,166 --> 00:26:03,106
Well, by using the movement


795
00:26:03,106 --> 00:26:05,496
disorder API, researchers and


796
00:26:05,496 --> 00:26:07,646
developers like yourselves, will


797
00:26:07,646 --> 00:26:08,996
be able to build apps which


798
00:26:08,996 --> 00:26:10,406
collect these types of the


799
00:26:10,406 --> 00:26:13,946
metrics, continuously whenever a


800
00:26:13,946 --> 00:26:15,886
patient is wearing their Apple


801
00:26:15,886 --> 00:26:16,336
Watch.


802
00:26:17,346 --> 00:26:18,416
Not only does this give you a


803
00:26:18,416 --> 00:26:19,936
quantitative measurement of


804
00:26:19,936 --> 00:26:21,816
those symptoms, displayed here


805
00:26:21,816 --> 00:26:23,126
as the percentage of the time


806
00:26:23,436 --> 00:26:24,096
observed.


807
00:26:24,716 --> 00:26:26,006
But it also gives you a


808
00:26:26,006 --> 00:26:28,136
longitudinal analysis, where you


809
00:26:28,136 --> 00:26:29,226
can track changes to those


810
00:26:29,226 --> 00:26:30,516
symptoms over time.


811
00:26:31,676 --> 00:26:33,106
These algorithms were designed


812
00:26:33,446 --> 00:26:35,346
and piloted using data collected


813
00:26:35,726 --> 00:26:38,106
from Parkinson's patients in


814
00:26:38,106 --> 00:26:39,266
internal clinical studies.


815
00:26:39,916 --> 00:26:41,656
And we hope that you can use


816
00:26:41,756 --> 00:26:43,946
these tools and these learnings


817
00:26:44,476 --> 00:26:47,556
to build new care experiences


818
00:26:47,806 --> 00:26:49,396
that improve the quality of life


819
00:26:49,576 --> 00:26:50,696
of people with Parkinson's.


820
00:26:51,316 --> 00:26:53,816
But before you can do any of


821
00:26:53,816 --> 00:26:55,296
that, you're going to need to


822
00:26:55,296 --> 00:26:56,836
know how to use the API, right?


823
00:26:57,656 --> 00:26:58,276
All right.


824
00:26:58,536 --> 00:26:59,656
Well, let's take a look at some


825
00:27:00,246 --> 00:27:00,366
code.


826
00:27:01,696 --> 00:27:03,326
The first thing you're going to


827
00:27:03,326 --> 00:27:04,866
want to do is request motion


828
00:27:04,906 --> 00:27:06,586
authorization from the user in


829
00:27:06,586 --> 00:27:07,936
order to use their movement


830
00:27:07,936 --> 00:27:08,556
disorder data.


831
00:27:09,956 --> 00:27:12,416
Once you've done that, you'll


832
00:27:12,416 --> 00:27:13,906
want to call the monitorKinesias


833
00:27:13,906 --> 00:27:15,976
function in order to enable


834
00:27:16,046 --> 00:27:16,816
symptom monitoring.


835
00:27:17,736 --> 00:27:19,376
Now, this symptom monitoring


836
00:27:19,546 --> 00:27:21,296
does turn on additional Apple


837
00:27:21,296 --> 00:27:23,196
Watch sensors, so this will have


838
00:27:23,196 --> 00:27:24,846
an impact on the battery life of


839
00:27:24,846 --> 00:27:26,286
your users, though they should


840
00:27:26,286 --> 00:27:27,806
still be able to have a days'


841
00:27:27,806 --> 00:27:28,876
worth of data collection on a


842
00:27:28,876 --> 00:27:29,566
single charge.


843
00:27:29,976 --> 00:27:33,216
As you can see, the maximum


844
00:27:33,216 --> 00:27:34,476
recording duration is seven


845
00:27:34,476 --> 00:27:34,806
days.


846
00:27:35,636 --> 00:27:36,586
I know that many of you are


847
00:27:36,586 --> 00:27:37,706
going to be conducting studies


848
00:27:37,886 --> 00:27:39,176
that are longer than seven days,


849
00:27:39,526 --> 00:27:41,086
and if that's the case, simply


850
00:27:41,156 --> 00:27:42,346
call the monitorKinesias


851
00:27:42,346 --> 00:27:44,226
function again in order to


852
00:27:44,226 --> 00:27:45,476
extend your data collection


853
00:27:45,476 --> 00:27:45,776
interval.


854
00:27:46,896 --> 00:27:49,696
This will begin to store tremor


855
00:27:49,696 --> 00:27:51,376
and dyskinesia results on the


856
00:27:51,376 --> 00:27:53,086
user's device, on your behalf.


857
00:27:54,226 --> 00:27:55,766
At a certain point afterwards,


858
00:27:55,766 --> 00:27:56,666
you're going to want to return


859
00:27:56,666 --> 00:27:58,146
to that application so you can


860
00:27:58,146 --> 00:27:59,046
query for those records.


861
00:27:59,416 --> 00:28:00,446
Let's take a look at what the


862
00:28:00,446 --> 00:28:01,476
query function looks like.


863
00:28:01,896 --> 00:28:05,596
As you can see, in this line,


864
00:28:06,086 --> 00:28:07,566
recording for any new tremor


865
00:28:07,566 --> 00:28:09,056
records that were stored on the


866
00:28:09,056 --> 00:28:10,896
device since our last query


867
00:28:11,086 --> 00:28:11,306
date.


868
00:28:12,776 --> 00:28:14,956
These records are stored on


869
00:28:14,956 --> 00:28:17,736
device by the API, but they also


870
00:28:17,736 --> 00:28:19,426
will expire after seven days.


871
00:28:20,036 --> 00:28:21,656
And so, before it expires,


872
00:28:21,916 --> 00:28:22,826
you're going to want to take


873
00:28:22,986 --> 00:28:24,596
ownership of those records


874
00:28:25,186 --> 00:28:27,486
either by serializing them and


875
00:28:27,486 --> 00:28:28,756
storing them on this device


876
00:28:28,756 --> 00:28:30,586
yourself, or transferring it to


877
00:28:30,586 --> 00:28:32,046
a different platform so you can


878
00:28:32,046 --> 00:28:33,206
visualize it and analyze it.


879
00:28:34,436 --> 00:28:35,846
The data will be returned to you


880
00:28:35,846 --> 00:28:37,626
as an array of minute long


881
00:28:37,866 --> 00:28:38,786
object results.


882
00:28:39,306 --> 00:28:42,006
So, one hour's worth of data, 60


883
00:28:42,176 --> 00:28:43,236
result objects.


884
00:28:43,746 --> 00:28:45,256
Let's take a look at what one of


885
00:28:45,256 --> 00:28:46,406
those result objects will look


886
00:28:46,406 --> 00:28:46,556
like.


887
00:28:52,186 --> 00:28:53,706
As you can see, the result


888
00:28:53,706 --> 00:28:55,656
objects return the percentage of


889
00:28:55,656 --> 00:28:57,096
the time the percentage of that


890
00:28:57,096 --> 00:28:58,686
one minute that the algorithm


891
00:28:58,686 --> 00:29:00,006
was able to observe the


892
00:29:00,086 --> 00:29:02,566
presence, or the absence of the


893
00:29:02,566 --> 00:29:03,066
symptom.


894
00:29:03,776 --> 00:29:05,186
For dyskinesia, here on the


895
00:29:05,186 --> 00:29:06,766
right, you can see that that's


896
00:29:06,766 --> 00:29:09,176
pretty simple; unlikely or


897
00:29:09,176 --> 00:29:09,526
likely.


898
00:29:10,856 --> 00:29:11,906
tremor gives you a few more


899
00:29:11,906 --> 00:29:12,326
options.


900
00:29:12,976 --> 00:29:13,666
Let's go through them.


901
00:29:14,136 --> 00:29:18,446
Since this is a tremor at rest


902
00:29:18,886 --> 00:29:20,516
any active or chaotic motion


903
00:29:20,516 --> 00:29:22,246
will simply be returned as


904
00:29:22,466 --> 00:29:23,306
percent unknown.


905
00:29:23,786 --> 00:29:25,186
And this is the same category


906
00:29:25,186 --> 00:29:26,806
that we use for low signal


907
00:29:26,806 --> 00:29:28,216
levels we're unable to make a


908
00:29:28,216 --> 00:29:28,866
determination.


909
00:29:29,676 --> 00:29:31,306
However, if the algorithm is


910
00:29:31,306 --> 00:29:32,646
able to make a determination, it


911
00:29:32,646 --> 00:29:34,146
will also return the severity of


912
00:29:34,146 --> 00:29:35,946
the tremor, ranging from slight


913
00:29:36,586 --> 00:29:37,336
up until strong.


914
00:29:37,926 --> 00:29:41,046
Now, to show you just how well


915
00:29:41,046 --> 00:29:42,846
the passive monitoring of the


916
00:29:42,846 --> 00:29:45,006
movement disorder API is able to


917
00:29:45,006 --> 00:29:46,496
work in conjunction with the


918
00:29:46,546 --> 00:29:47,836
active monitoring of a


919
00:29:47,836 --> 00:29:49,896
ResearchKit Active Task, I would


920
00:29:49,896 --> 00:29:51,196
like to invite up to the stage


921
00:29:51,476 --> 00:29:52,736
Akshay, who is going to


922
00:29:52,736 --> 00:29:55,206
integrate both into one stellar


923
00:29:55,266 --> 00:29:56,246
research application.


924
00:29:57,516 --> 00:30:03,086
[ Applause ]


925
00:30:03,586 --> 00:30:04,176
>> Hello, everyone.


926
00:30:04,476 --> 00:30:05,786
And welcome to the Advances in


927
00:30:05,786 --> 00:30:06,746
Research in Care demo.


928
00:30:07,356 --> 00:30:08,936
In this demo, we'll see some


929
00:30:08,936 --> 00:30:10,546
research get update and also


930
00:30:10,546 --> 00:30:11,796
implement the movement disorder


931
00:30:11,796 --> 00:30:12,076
API.


932
00:30:12,076 --> 00:30:14,096
As part of our research kit


933
00:30:14,096 --> 00:30:15,486
repository on GitHub, we have


934
00:30:15,486 --> 00:30:17,276
already added an ORK Parkinson's


935
00:30:17,276 --> 00:30:17,746
study app.


936
00:30:18,566 --> 00:30:20,006
This app implements the movement


937
00:30:20,006 --> 00:30:22,836
disorder API and also visualizes


938
00:30:23,056 --> 00:30:24,866
the tremor and dyskinesia


939
00:30:24,866 --> 00:30:26,036
symptom data points that we just


940
00:30:26,036 --> 00:30:26,176
saw.


941
00:30:26,176 --> 00:30:27,796
Let's go ahead and see what this


942
00:30:27,796 --> 00:30:28,526
app looks like right now.


943
00:30:37,046 --> 00:30:38,846
We have an Apple Watch app where


944
00:30:38,846 --> 00:30:39,916
we implement the movement


945
00:30:39,916 --> 00:30:41,866
disorder API, collect the tremor


946
00:30:41,866 --> 00:30:42,936
and dyskinesia symptom data


947
00:30:42,936 --> 00:30:44,276
points and send them to our


948
00:30:44,276 --> 00:30:44,656
phone app.


949
00:30:45,346 --> 00:30:46,646
In our iPhone app, we have a


950
00:30:46,646 --> 00:30:48,146
questionnaire, a few Active


951
00:30:48,146 --> 00:30:50,356
Tasks, and also visualize these


952
00:30:50,356 --> 00:30:51,386
tremor and dyskinesia symptom


953
00:30:51,386 --> 00:30:51,906
data points.


954
00:30:52,726 --> 00:30:53,926
Let's look at what the code


955
00:30:53,926 --> 00:30:55,316
looks like, and for this demo,


956
00:30:55,736 --> 00:30:56,846
we'll start with the basic bald


957
00:30:56,846 --> 00:30:58,126
plate application and try to


958
00:30:58,126 --> 00:30:58,826
recreate this app.


959
00:31:03,046 --> 00:31:04,586
Here's my Xcode workspace, and


960
00:31:04,586 --> 00:31:05,886
as you can see, in my


961
00:31:05,886 --> 00:31:07,426
ResearchKit, I now have ORK


962
00:31:07,426 --> 00:31:08,336
Parkinson's Study App.


963
00:31:08,666 --> 00:31:09,776
We have a task list


964
00:31:09,776 --> 00:31:11,426
viewController, where we'll be


965
00:31:11,426 --> 00:31:12,796
adding all our Active Tasks and


966
00:31:12,796 --> 00:31:13,246
questionnaires.


967
00:31:13,856 --> 00:31:15,376
A graphviewController, where


968
00:31:15,376 --> 00:31:16,626
we'll be visualizing these


969
00:31:16,626 --> 00:31:17,696
tremor and dyskinesia symptom


970
00:31:17,696 --> 00:31:18,186
data points.


971
00:31:18,706 --> 00:31:20,066
And an assessment manager, where


972
00:31:20,066 --> 00:31:21,246
we will be implementing the


973
00:31:21,246 --> 00:31:22,876
movement disorder API.


974
00:31:23,596 --> 00:31:24,986
When a Parkinson's disease


975
00:31:25,026 --> 00:31:26,606
patient, or a PD patient visits


976
00:31:26,606 --> 00:31:28,136
their doctor, they're asked a


977
00:31:28,136 --> 00:31:29,656
certain set of questions, and


978
00:31:29,656 --> 00:31:30,876
these questions include


979
00:31:30,876 --> 00:31:31,996
questions about their activities


980
00:31:31,996 --> 00:31:33,076
of daily life, something for


981
00:31:33,076 --> 00:31:34,876
example on a scale of 0 to 10,


982
00:31:35,096 --> 00:31:36,116
how is your pain level today.


983
00:31:36,886 --> 00:31:38,086
Or, what kind of non-motor


984
00:31:38,086 --> 00:31:38,946
symptoms are you feeling?


985
00:31:38,946 --> 00:31:41,016
We have already added a subset


986
00:31:41,016 --> 00:31:42,226
of such questions in our app.


987
00:31:42,876 --> 00:31:44,396
Now, these questionnaires are


988
00:31:44,396 --> 00:31:45,416
usually followed by seven


989
00:31:45,416 --> 00:31:46,126
physical tests.


990
00:31:46,316 --> 00:31:47,636
And one of the physical tests is


991
00:31:47,666 --> 00:31:48,976
assessing the clarity of speech.


992
00:31:49,436 --> 00:31:50,876
So, let's go ahead and add the


993
00:31:50,876 --> 00:31:52,196
speech recognition Active Task.


994
00:31:53,526 --> 00:31:54,806
In my task list view controller,


995
00:31:55,616 --> 00:31:57,106
I'll go ahead and add the speech


996
00:31:57,106 --> 00:31:58,066
recognition Active Task.


997
00:31:58,676 --> 00:31:59,886
And as you can see, we just


998
00:31:59,886 --> 00:32:01,426
added an ORK ordered task of


999
00:32:01,426 --> 00:32:02,386
type speech recognition.


1000
00:32:02,956 --> 00:32:05,106
And if you notice, one of the


1001
00:32:05,106 --> 00:32:06,166
parameters is the speech


1002
00:32:06,166 --> 00:32:07,916
recognizer locale, which is an


1003
00:32:08,066 --> 00:32:09,586
item provided by ResearchKit


1004
00:32:09,906 --> 00:32:12,076
that represent all the locales


1005
00:32:12,136 --> 00:32:13,306
that are supported by speech


1006
00:32:13,306 --> 00:32:15,206
recognition API, so that you, as


1007
00:32:15,206 --> 00:32:16,566
developers don't have to worry


1008
00:32:16,566 --> 00:32:18,376
about conforming if your locale


1009
00:32:18,376 --> 00:32:19,476
is supported by these speech


1010
00:32:19,476 --> 00:32:20,096
recognition API.


1011
00:32:21,436 --> 00:32:22,776
Now, let's move on to our


1012
00:32:22,776 --> 00:32:23,486
assessment manager.


1013
00:32:23,996 --> 00:32:26,816
As Gabriel mentioned, we have a


1014
00:32:26,816 --> 00:32:28,186
variable call manager, which is


1015
00:32:28,186 --> 00:32:29,456
of type see and movement


1016
00:32:29,576 --> 00:32:30,396
disorder manager.


1017
00:32:30,966 --> 00:32:32,436
And if you notice, we have a


1018
00:32:32,436 --> 00:32:33,526
function that calls the


1019
00:32:33,526 --> 00:32:35,266
monitorKinesias method for the


1020
00:32:35,266 --> 00:32:36,716
maximum duration of seven days.


1021
00:32:37,396 --> 00:32:38,536
Let's call this matter in our


1022
00:32:38,536 --> 00:32:39,156
initializer.


1023
00:32:40,736 --> 00:32:43,026
Now, whoever creates an object


1024
00:32:43,366 --> 00:32:45,346
of a type assessment manager


1025
00:32:45,716 --> 00:32:47,076
will simply start the tremor and


1026
00:32:47,076 --> 00:32:48,086
dyskinesia symptom query.


1027
00:32:49,096 --> 00:32:50,056
Once we have collected these


1028
00:32:50,056 --> 00:32:51,586
data, we need a way to query


1029
00:32:51,586 --> 00:32:52,476
these data points also.


1030
00:32:52,826 --> 00:32:53,976
So, let's go ahead and add a


1031
00:32:53,976 --> 00:32:55,476
method that record these data.


1032
00:32:56,516 --> 00:32:57,966
I add a new, query new


1033
00:32:57,966 --> 00:32:59,896
assessments method, where I'm


1034
00:32:59,896 --> 00:33:01,126
calling the query tremor method


1035
00:33:01,306 --> 00:33:02,436
for a given start date and an


1036
00:33:02,436 --> 00:33:04,006
end date, and the query


1037
00:33:04,006 --> 00:33:05,636
dyskinesia symptoms method, for


1038
00:33:05,636 --> 00:33:07,066
the same start date and the end


1039
00:33:07,516 --> 00:33:07,626
date.


1040
00:33:08,806 --> 00:33:10,936
For this demo, we have already


1041
00:33:10,936 --> 00:33:12,466
ran this query and collected the


1042
00:33:12,466 --> 00:33:13,616
tremor and dyskinesia symptom


1043
00:33:13,616 --> 00:33:14,686
data points and saved them as


1044
00:33:14,716 --> 00:33:15,566
part of JSON file.


1045
00:33:16,196 --> 00:33:17,626
Let's go ahead, use those JSON


1046
00:33:17,626 --> 00:33:19,096
files and create ResearchKit


1047
00:33:19,096 --> 00:33:19,806
graphs on them.


1048
00:33:21,136 --> 00:33:22,456
I'll move over to my graph view


1049
00:33:22,456 --> 00:33:24,896
controller, and here, as you can


1050
00:33:24,896 --> 00:33:26,186
see, I have a create graph


1051
00:33:26,186 --> 00:33:27,696
method, which reads the JSON


1052
00:33:27,696 --> 00:33:29,136
files and creates ResearchKit


1053
00:33:29,136 --> 00:33:29,756
graphs from them.


1054
00:33:30,326 --> 00:33:31,506
Let's call these methods in our


1055
00:33:31,506 --> 00:33:32,666
view data log.


1056
00:33:34,116 --> 00:33:36,886
Perfect. Now, let's run this.


1057
00:33:37,456 --> 00:33:40,126
As you can see, we added this


1058
00:33:40,126 --> 00:33:41,256
speech recognition Active Task,


1059
00:33:41,886 --> 00:33:43,736
and added the movement disorder


1060
00:33:43,736 --> 00:33:44,016
API.


1061
00:33:44,946 --> 00:33:45,936
Here's what our Parkinson's


1062
00:33:45,936 --> 00:33:46,666
study app looks like.


1063
00:33:47,026 --> 00:33:47,996
We have the questionnaire on


1064
00:33:47,996 --> 00:33:48,206
top.


1065
00:33:48,686 --> 00:33:49,726
Let's quickly go ahead and run


1066
00:33:49,726 --> 00:33:50,336
through one questionnaire.


1067
00:33:51,816 --> 00:33:53,156
As Srinath mentioned earlier, we


1068
00:33:53,156 --> 00:33:54,606
now have a card view for all


1069
00:33:54,606 --> 00:33:55,476
these survey items.


1070
00:33:56,066 --> 00:33:57,536
And also, all these steps in


1071
00:33:57,536 --> 00:34:00,166
ResearchKit adhere to the iOS


1072
00:34:00,166 --> 00:34:00,556
paradigm.


1073
00:34:01,876 --> 00:34:02,826
Let's quickly finish this


1074
00:34:02,826 --> 00:34:04,996
questionnaire, and that's it.


1075
00:34:05,136 --> 00:34:06,636
Now, let's move on to the speech


1076
00:34:06,636 --> 00:34:07,516
recognition Active Task.


1077
00:34:08,406 --> 00:34:09,826
The first two steps talk about


1078
00:34:09,826 --> 00:34:10,766
how to use the speech


1079
00:34:10,766 --> 00:34:11,366
recognition step.


1080
00:34:11,746 --> 00:34:13,166
And as soon as I press the start


1081
00:34:13,166 --> 00:34:14,456
recording button, I would be


1082
00:34:14,456 --> 00:34:15,596
repeating the text that I see.


1083
00:34:16,206 --> 00:34:19,505
A quick brown fox jumps over the


1084
00:34:19,505 --> 00:34:19,976
lazy dog.


1085
00:34:22,735 --> 00:34:24,556
I am directed to the next step,


1086
00:34:24,556 --> 00:34:25,726
which is the other transcription


1087
00:34:26,065 --> 00:34:26,186
step.


1088
00:34:26,186 --> 00:34:27,516
And as Srinath mentioned, this


1089
00:34:27,516 --> 00:34:28,886
step is optional and could be


1090
00:34:29,005 --> 00:34:30,235
replaced from the task by


1091
00:34:30,235 --> 00:34:32,045
setting the property allow edit


1092
00:34:32,045 --> 00:34:34,985
transcript to no.


1093
00:34:35,186 --> 00:34:37,786
Perfect. Now, let's look at the


1094
00:34:37,786 --> 00:34:39,036
graphs that we created off of


1095
00:34:39,036 --> 00:34:40,176
tremor and dyskinesia symptom


1096
00:34:40,176 --> 00:34:40,686
data points.


1097
00:34:41,025 --> 00:34:42,136
Since the ResearchKit graphs


1098
00:34:42,136 --> 00:34:42,906
look really nice in the


1099
00:34:42,906 --> 00:34:44,126
landscape mode, I'll quickly


1100
00:34:44,126 --> 00:34:46,286
turn my phone, and let's look at


1101
00:34:46,286 --> 00:34:46,696
the graphs.


1102
00:34:47,505 --> 00:34:49,525
Here as we can see, we have all


1103
00:34:49,525 --> 00:34:50,696
the tremor and dyskinesia


1104
00:34:50,696 --> 00:34:51,775
symptom data points for a


1105
00:34:51,775 --> 00:34:53,366
particular day starting from 7


1106
00:34:53,366 --> 00:34:56,016
a.m. to 6 p.m. We can see tremor


1107
00:34:56,016 --> 00:34:58,326
slight, mild, moderate, and


1108
00:34:58,326 --> 00:34:58,656
strong.


1109
00:34:59,026 --> 00:35:00,196
And also, dyskinesia likely.


1110
00:35:01,366 --> 00:35:03,006
Perfect. With this, I would like


1111
00:35:03,006 --> 00:35:04,416
to call Srinath back up on stage


1112
00:35:04,856 --> 00:35:05,826
and continue with the session.


1113
00:35:06,446 --> 00:35:06,716
Thank you.


1114
00:35:07,516 --> 00:35:12,566
[ Applause ]


1115
00:35:13,066 --> 00:35:14,326
>> Thanks for that great demo.


1116
00:35:15,286 --> 00:35:17,366
So, now let's take a look at a


1117
00:35:17,366 --> 00:35:18,856
quick recap of what we went over


1118
00:35:18,856 --> 00:35:18,976
today.


1119
00:35:22,046 --> 00:35:23,286
We started off by talking about


1120
00:35:23,286 --> 00:35:24,446
updates that we have made to our


1121
00:35:24,446 --> 00:35:26,476
community by expanding


1122
00:35:26,476 --> 00:35:28,386
privileges and also updating our


1123
00:35:28,386 --> 00:35:29,116
release schedule.


1124
00:35:30,016 --> 00:35:31,666
We showcased the look and feel


1125
00:35:31,666 --> 00:35:33,866
of ResearchKits new UI, and we


1126
00:35:33,866 --> 00:35:35,466
also added some new Active Tasks


1127
00:35:35,516 --> 00:35:37,016
focusing on three main areas of


1128
00:35:37,016 --> 00:35:37,376
health.


1129
00:35:37,816 --> 00:35:39,396
Hearing, speech and vision.


1130
00:35:40,036 --> 00:35:41,526
Gabriel spoke to you about the


1131
00:35:41,526 --> 00:35:43,186
new movement disorder API that's


1132
00:35:43,186 --> 00:35:45,026
available on the Apple Watch


1133
00:35:45,236 --> 00:35:46,296
from WatchOS 5.


1134
00:35:47,456 --> 00:35:49,896
And now, we'll look to all of


1135
00:35:49,896 --> 00:35:52,276
you as current or new members of


1136
00:35:52,276 --> 00:35:54,016
the community to continue to


1137
00:35:54,016 --> 00:35:55,316
engage with us and provide


1138
00:35:55,316 --> 00:35:55,896
feedback.


1139
00:35:56,706 --> 00:35:58,326
We also encourage you to take


1140
00:35:58,326 --> 00:35:59,976
advantage of our new release


1141
00:35:59,976 --> 00:36:01,936
schedule so that way you'll be


1142
00:36:01,936 --> 00:36:03,336
able to leverage some of our


1143
00:36:03,386 --> 00:36:05,156
in-house features like


1144
00:36:05,666 --> 00:36:09,336
accessibility, localization and


1145
00:36:09,336 --> 00:36:09,836
QA.


1146
00:36:10,886 --> 00:36:12,976
And on that note, as we continue


1147
00:36:12,976 --> 00:36:15,136
to expand on our library of


1148
00:36:15,136 --> 00:36:17,166
Active Tasks, we look to all of


1149
00:36:17,166 --> 00:36:19,266
our developers, researchers and


1150
00:36:19,266 --> 00:36:21,226
health professionals to help us


1151
00:36:21,276 --> 00:36:22,366
improve on these.


1152
00:36:22,806 --> 00:36:24,106
These Active Tasks are just


1153
00:36:24,106 --> 00:36:25,926
building blocks, which we hope


1154
00:36:25,926 --> 00:36:28,226
you can utilize to create much


1155
00:36:28,226 --> 00:36:30,066
bigger research studies, care


1156
00:36:30,066 --> 00:36:31,916
plans and treatment mechanisms.


1157
00:36:32,336 --> 00:36:34,706
And as you do, we encourage you


1158
00:36:34,706 --> 00:36:35,956
to contribute back to


1159
00:36:35,956 --> 00:36:38,146
ResearchKit, so we can continue


1160
00:36:38,146 --> 00:36:40,396
to improve our foundation and


1161
00:36:40,396 --> 00:36:42,066
expand on the breadth of Active


1162
00:36:42,116 --> 00:36:43,676
Task that's available for


1163
00:36:43,816 --> 00:36:45,626
everyone to use.


1164
00:36:46,256 --> 00:36:47,866
For more information about


1165
00:36:47,866 --> 00:36:49,706
ResearchKit, please visit our


1166
00:36:49,706 --> 00:36:51,556
website researchkit.org.


1167
00:36:52,396 --> 00:36:53,946
For additional information about


1168
00:36:53,946 --> 00:36:55,426
the talk, you can visit the


1169
00:36:55,426 --> 00:36:56,106
following URL.


1170
00:36:57,216 --> 00:36:59,186
I also encourage you to stop by


1171
00:36:59,186 --> 00:37:00,376
our lab session today.


1172
00:37:00,906 --> 00:37:02,856
Our teams will be down there and


1173
00:37:02,856 --> 00:37:04,496
will be really excited to answer


1174
00:37:04,496 --> 00:37:06,196
any questions you have, as well


1175
00:37:06,196 --> 00:37:07,716
as discuss more about some of


1176
00:37:07,716 --> 00:37:08,516
our new updates.


1177
00:37:09,016 --> 00:37:11,616
And finally, we really look


1178
00:37:11,616 --> 00:37:13,076
forward to seeing what you all


1179
00:37:13,076 --> 00:37:14,176
do with some of these new


1180
00:37:14,176 --> 00:37:15,766
updates in the coming days.


1181
00:37:16,266 --> 00:37:16,646
Thank you.


1182
00:37:17,516 --> 00:37:21,500
[ Applause ]

