1
00:00:23,516 --> 00:00:31,096
[Applause]


2
00:00:31,596 --> 00:00:32,076
>> KYLE SLUDER: Good morning!


3
00:00:33,266 --> 00:00:35,096
Happy Thursday to everybody.


4
00:00:35,746 --> 00:00:37,256
Congratulations on making it


5
00:00:37,256 --> 00:00:38,976
to a 9:00 a.m. session
this late in the week.


6
00:00:39,016 --> 00:00:40,086
[Laughter]


7
00:00:40,086 --> 00:00:41,666
>> KYLE SLUDER: I was
in your seats last year.


8
00:00:41,666 --> 00:00:43,036
I know exactly how
difficult that can be.


9
00:00:43,036 --> 00:00:48,856
Today we're going to talk
about some improvements


10
00:00:48,856 --> 00:00:50,296
that we've made to storyboards.


11
00:00:51,136 --> 00:00:54,546
Just to help everybody warm-up
and get ready for the day,


12
00:00:54,816 --> 00:00:56,606
I'm going to do a
quick exercise here.


13
00:00:57,356 --> 00:00:58,936
How many people here
have shipped an app


14
00:00:59,456 --> 00:01:00,606
that uses storyboards?


15
00:01:01,126 --> 00:01:04,025
That is a very good number.


16
00:01:04,025 --> 00:01:08,996
How many people here have
maybe tried to use storyboards


17
00:01:08,996 --> 00:01:11,476
or thought about using
storyboards and either they


18
00:01:11,476 --> 00:01:15,136
or their team decided that this
isn't the way we want do this?


19
00:01:15,646 --> 00:01:16,436
Maybe not for now.


20
00:01:17,536 --> 00:01:22,816
Okay. How many people
here have never used the


21
00:01:22,816 --> 00:01:23,606
storyboard before?


22
00:01:24,146 --> 00:01:28,186
Wow, this is a very
experienced crowd.


23
00:01:28,956 --> 00:01:29,586
All right.


24
00:01:31,046 --> 00:01:33,886
We're going to focus on
three main areas today:


25
00:01:34,306 --> 00:01:36,976
First we're going to talk about
a new feature that we've added


26
00:01:36,976 --> 00:01:38,456
to help you organize
your storyboards


27
00:01:38,456 --> 00:01:40,816
and keep them manageable
and then we're going to talk


28
00:01:40,816 --> 00:01:43,816
about ways that you can
customize the standard segueway


29
00:01:43,816 --> 00:01:45,586
ways that we've provided
for you in Interface Builder


30
00:01:46,536 --> 00:01:47,486
and finally we're going to talk


31
00:01:47,486 --> 00:01:50,546
about what might be a little
bit more of an advanced feature,


32
00:01:50,916 --> 00:01:54,916
unwind segueway ways and how we
have improved them in relation


33
00:01:54,916 --> 00:01:58,186
to the custom container view
controllers that you use in iOS.


34
00:01:58,316 --> 00:02:01,446
So let's get started.


35
00:02:01,446 --> 00:02:05,846
We have a really simple
demo application here.


36
00:02:05,846 --> 00:02:07,856
It is just a collection
view that displays a bunch


37
00:02:07,856 --> 00:02:09,795
of photos inside of
navigation controller.


38
00:02:10,506 --> 00:02:14,566
If I tap one of those
photos, it comes in onscreen.


39
00:02:15,596 --> 00:02:16,906
Then I can tap that back button


40
00:02:16,906 --> 00:02:19,186
in the upper-left
corner and it goes away.


41
00:02:23,476 --> 00:02:28,146
The three components of that
user interface correspond


42
00:02:28,216 --> 00:02:30,916
to three view controller
instances at runtime.


43
00:02:32,306 --> 00:02:34,356
If I were to diagram
this application


44
00:02:34,356 --> 00:02:36,186
out on paper I might
do something like this.


45
00:02:36,356 --> 00:02:39,996
It might represent those
view controllers as boxes


46
00:02:40,646 --> 00:02:44,156
and then draw lines between
them to describe the flow


47
00:02:44,156 --> 00:02:45,206
through my application.


48
00:02:45,726 --> 00:02:49,526
That's the kind of information
that a storyboard captures


49
00:02:49,526 --> 00:02:51,186
for you and let's
you use at runtime.


50
00:02:51,656 --> 00:02:55,056
There's a bit of
specialized terminology


51
00:02:55,056 --> 00:02:56,906
with regard to storyboards.


52
00:02:56,906 --> 00:02:58,896
Those boxes that have been
turned into circles here,


53
00:02:59,186 --> 00:03:02,286
we call those scenes and
they act as templates


54
00:03:02,356 --> 00:03:04,106
for the view controllers
that actually make


55
00:03:04,106 --> 00:03:07,416
up your user interface
at runtime.


56
00:03:07,506 --> 00:03:10,846
Those lines we call segueways,
and there are a couple


57
00:03:10,846 --> 00:03:12,476
of different kinds of segueways.


58
00:03:13,506 --> 00:03:14,776
That relationship --


59
00:03:14,776 --> 00:03:17,096
that segueway between
the navigation controller


60
00:03:17,096 --> 00:03:18,946
and the collection view
controller is a kind


61
00:03:18,946 --> 00:03:20,516
of segueway called a
relationship segueway.


62
00:03:21,096 --> 00:03:25,226
Specifically it states that that
collection view controller is


63
00:03:25,226 --> 00:03:27,636
at the root of the
navigation stack managed


64
00:03:27,636 --> 00:03:28,866
by that navigation controller.


65
00:03:29,386 --> 00:03:33,396
Another kind of segueway
is a triggered segueway,


66
00:03:33,676 --> 00:03:36,886
this one specificallys says
that when I tap on a cell


67
00:03:36,886 --> 00:03:38,596
in a collection view I want


68
00:03:38,596 --> 00:03:41,866
to show my photo view controller
using the semantics defined


69
00:03:41,866 --> 00:03:44,066
by the show view
controller method.


70
00:03:46,936 --> 00:03:49,236
When we actually
put this altogether


71
00:03:49,296 --> 00:03:53,306
in a storyboard file we
can give things identifiers


72
00:03:54,676 --> 00:03:56,656
and then we set that up
in Interface Builder --


73
00:03:56,786 --> 00:03:59,496
in Xcode as our main
interface file for our project


74
00:04:00,166 --> 00:04:01,166
and we run the application.


75
00:04:01,836 --> 00:04:03,256
The first thing that happens,


76
00:04:03,256 --> 00:04:05,966
is that we instantiate a
navigation controller based


77
00:04:05,966 --> 00:04:08,666
on what's in the initial
scene in our storyboard


78
00:04:09,266 --> 00:04:12,156
and then we see that there
is a relationship defined


79
00:04:12,156 --> 00:04:13,496
on that navigation controller.


80
00:04:14,066 --> 00:04:18,446
So we instantiate the view
controller at the other end


81
00:04:18,446 --> 00:04:22,206
of that segueway and then we
establish the relationship


82
00:04:22,826 --> 00:04:24,586
that is defined by
that segueway,


83
00:04:24,876 --> 00:04:28,176
that root of the
navigation stack.


84
00:04:28,386 --> 00:04:32,126
Later on as the user is using
our application they tap


85
00:04:32,126 --> 00:04:36,446
on a collection view cell
which performs that segueway


86
00:04:36,446 --> 00:04:37,996
that we have labeled
show pic here,


87
00:04:38,236 --> 00:04:39,836
that's that show
segueway from before.


88
00:04:39,836 --> 00:04:43,716
We instantiate the view
controller at the other end


89
00:04:43,716 --> 00:04:46,816
of that segueway and we
establish the relationship,


90
00:04:46,816 --> 00:04:49,706
we perform that action
that the segueway defines.


91
00:04:50,616 --> 00:04:52,946
As you're designing
your application,


92
00:04:52,946 --> 00:04:55,576
you're implementing your
application your interfaces get


93
00:04:55,576 --> 00:04:57,566
more complicated and
so do your storyboards.


94
00:04:58,156 --> 00:05:00,076
Eventually in order to
keep things manageable,


95
00:05:00,076 --> 00:05:02,456
just like you split your source
code into multiple files,


96
00:05:03,226 --> 00:05:05,296
you split your storyboards
into multiple files,


97
00:05:06,576 --> 00:05:09,406
but we can't draw a segueway
across a file boundary.


98
00:05:10,676 --> 00:05:13,616
We can fall back to code, we
can instantiate an instance


99
00:05:13,616 --> 00:05:14,896
of that secondary storyboard,


100
00:05:16,576 --> 00:05:19,326
and we can instantiate view
controllers based on the scenes


101
00:05:19,326 --> 00:05:24,636
in that storyboard, or
we have lost the ability


102
00:05:24,716 --> 00:05:27,406
to visualize the connection
between the scenes.


103
00:05:27,656 --> 00:05:30,826
What we really want to do is
we want to get that arrow back.


104
00:05:30,826 --> 00:05:34,976
That's what we have
done for you in Xcode 7


105
00:05:34,976 --> 00:05:37,336
with a new feature we call
Storyboard References.


106
00:05:38,516 --> 00:05:43,686
[Applause]


107
00:05:44,186 --> 00:05:45,346
>> KYLE SLUDER: So just so
you know, you're all have


108
00:05:45,346 --> 00:05:47,376
to applaud again for Tony
because he actually did most


109
00:05:47,376 --> 00:05:48,976
of the work on implementing
this.


110
00:05:49,016 --> 00:05:50,046
[Laughter]


111
00:05:50,046 --> 00:05:52,376
>> KYLE SLUDER: A
storyboard reference stands


112
00:05:52,376 --> 00:05:54,886
in for another scene and
that scene can actually be


113
00:05:54,886 --> 00:05:57,656
in to the same storyboard
or in another storyboard.


114
00:05:58,196 --> 00:06:01,856
Just like any scene, it can be


115
00:06:02,296 --> 00:06:05,896
at the destination
end of any segueway.


116
00:06:06,396 --> 00:06:09,946
Really that's all there is
to say about that so I'd


117
00:06:09,946 --> 00:06:12,766
like to ask Tony up, show you
how easy it is with Xcode 7


118
00:06:12,766 --> 00:06:15,416
to organize your
storyboards for OS X 10.11,


119
00:06:15,916 --> 00:06:18,976
iOS 9 and watchOS using Xcode 7.


120
00:06:19,516 --> 00:06:23,286
[Applause]


121
00:06:23,786 --> 00:06:24,916
>> TONY RICCIARDI:
Thank you, Kyle.


122
00:06:25,376 --> 00:06:28,366
Good Morning, my name is Tony
and I work on Interface Builder.


123
00:06:28,476 --> 00:06:30,976
In this (unintelligible),
I'll show you our new feature,


124
00:06:31,056 --> 00:06:32,146
called Storyboard References,


125
00:06:32,506 --> 00:06:35,106
but before we get started let me
show you the app we're building.


126
00:06:36,616 --> 00:06:38,736
This is an app to
help you organize


127
00:06:38,816 --> 00:06:40,466
and plan events for a road trip.


128
00:06:40,936 --> 00:06:44,686
I implemented the UI for this
app using a custom container


129
00:06:44,686 --> 00:06:47,896
view controller which
manages four tabs.


130
00:06:48,546 --> 00:06:50,286
Each of these tabs
is implemented


131
00:06:50,286 --> 00:06:53,276
with its own UI navigation
controller and you can open


132
00:06:53,276 --> 00:06:55,966
up a tab by tapping
on its navigation bar.


133
00:06:56,676 --> 00:07:00,746
This first tab shows a
table of upcoming events.


134
00:07:01,676 --> 00:07:05,666
This tab shows a
journal of past events.


135
00:07:05,756 --> 00:07:07,386
Here we have a map
of upcoming stops.


136
00:07:08,406 --> 00:07:10,546
Finally, we have a
collection of photos


137
00:07:10,546 --> 00:07:11,466
that we have taken on our trip.


138
00:07:12,126 --> 00:07:15,596
You can tap on a photo cell to
get a larger view of the photo


139
00:07:15,596 --> 00:07:17,696
and you can tap on
this bar button item


140
00:07:17,846 --> 00:07:19,306
to get a menu of
possible actions.


141
00:07:19,746 --> 00:07:24,206
Let's take a look at the
main storyboard for my app.


142
00:07:25,366 --> 00:07:29,206
Up here in the top left I
have my custom container view


143
00:07:29,206 --> 00:07:32,996
controller and that
container is connected to each


144
00:07:32,996 --> 00:07:36,506
of its four child navigation
controllers using an


145
00:07:36,506 --> 00:07:37,196
embed segueway.


146
00:07:37,956 --> 00:07:39,316
An embed segueway allows you


147
00:07:39,316 --> 00:07:44,216
to embed a child view
controller inside of a parent.


148
00:07:44,326 --> 00:07:46,616
As you can see, over time
this storyboard has gotten


149
00:07:46,616 --> 00:07:47,236
pretty large.


150
00:07:47,616 --> 00:07:49,096
And so what I want to
do today is break it


151
00:07:49,096 --> 00:07:50,116
up into smaller pieces.


152
00:07:50,836 --> 00:07:56,866
If we take a look at the bottom
of my storyboard you can see


153
00:07:56,866 --> 00:08:00,016
that I have the three view
controllers for my photos tab.


154
00:08:01,436 --> 00:08:04,256
These view controllers are
mostly independent of the rest


155
00:08:04,256 --> 00:08:05,456
of the scenes in my storyboard.


156
00:08:05,816 --> 00:08:07,316
And so it would make
sense to pull them


157
00:08:07,316 --> 00:08:08,166
out into their own file.


158
00:08:09,426 --> 00:08:13,196
To do that, I'm going to select
these view controllers and head


159
00:08:13,196 --> 00:08:16,076
up to the editor menu and
choose refactor to storyboard.


160
00:08:16,356 --> 00:08:20,086
I'm going to call the new
file photos.storyboard.


161
00:08:21,566 --> 00:08:24,796
When I do that, Xcode
generates a new storyboard file,


162
00:08:24,916 --> 00:08:27,216
pulls those view controllers
out of my main storyboard


163
00:08:27,406 --> 00:08:30,276
and puts them in the new file.


164
00:08:30,496 --> 00:08:32,336
What happened back in
the main storyboard file?


165
00:08:32,336 --> 00:08:33,385
Let's use the back button.


166
00:08:34,746 --> 00:08:35,916
Down here where we used


167
00:08:35,976 --> 00:08:38,306
to see those three view
controllers we now have a


168
00:08:38,436 --> 00:08:39,566
storyboard reference.


169
00:08:40,936 --> 00:08:43,076
Whenever you refactor
scenes from a storyboard


170
00:08:43,395 --> 00:08:46,406
and the scenes have incoming
segueways, Xcode is going


171
00:08:46,406 --> 00:08:50,006
to take those segueways,
generate a storyboard reference


172
00:08:50,006 --> 00:08:51,696
and reroute the segueways
to the reference.


173
00:08:52,846 --> 00:08:54,826
At runtime when this
segueway executes,


174
00:08:54,916 --> 00:08:57,636
it is going to instantiate
the initial view controller


175
00:08:57,636 --> 00:09:00,366
out of my photo storyboard and
use that as its destination.


176
00:09:02,386 --> 00:09:06,136
If I double-click on this
reference Xcode takes me


177
00:09:06,356 --> 00:09:08,766
to that storyboard and
shows me the view controller


178
00:09:08,766 --> 00:09:09,366
I'm referencing.


179
00:09:09,716 --> 00:09:11,716
Which in this case is
the initial navigation...


180
00:09:11,716 --> 00:09:13,156
the initial view
controller of the storyboard.


181
00:09:14,526 --> 00:09:15,796
That's one way to
use this feature.


182
00:09:16,106 --> 00:09:17,996
You can take a large
storyboard file


183
00:09:17,996 --> 00:09:19,756
and refactor it into
smaller pieces.


184
00:09:20,696 --> 00:09:23,786
Another way you can use this
feature is to create segueways


185
00:09:23,786 --> 00:09:26,256
to view controllers that
already exist in separate files.


186
00:09:27,566 --> 00:09:30,576
I'm going to create a new
segueway now and I want


187
00:09:30,576 --> 00:09:32,416
that segueway to be triggered
by this journal button.


188
00:09:32,806 --> 00:09:35,656
I want it to take me
back to a view controller


189
00:09:35,656 --> 00:09:37,776
in my main storyboard
file that manages the UI


190
00:09:37,776 --> 00:09:39,246
for creating a new
journal entry.


191
00:09:39,756 --> 00:09:44,656
To do that, I'm going to scroll
over to my photo view controller


192
00:09:44,656 --> 00:09:48,146
over here and I'm going to
drag out a storyboard reference


193
00:09:48,146 --> 00:09:49,956
from the library and
drop it next to it.


194
00:09:50,446 --> 00:09:53,806
Let's take a look at
the Attributes inspector


195
00:09:53,806 --> 00:09:54,886
for a storyboard reference.


196
00:09:55,016 --> 00:09:58,566
As you can see, there
are three fields here.


197
00:09:59,386 --> 00:10:01,086
The first field is the name


198
00:10:01,086 --> 00:10:02,476
of the storyboard file
you're referencing.


199
00:10:03,316 --> 00:10:06,536
If you leave this blank Xcode
will use the same storyboard


200
00:10:06,536 --> 00:10:08,336
that contains the
reference itself,


201
00:10:08,736 --> 00:10:10,866
which in this case would
be the photo storyboard.


202
00:10:11,576 --> 00:10:14,156
That may be useful if you
have a really large storyboard


203
00:10:14,156 --> 00:10:16,246
and you want to create a
segueway from a view controller


204
00:10:16,246 --> 00:10:18,296
on one side to a view
controller on another side.


205
00:10:19,116 --> 00:10:21,936
In my case, I want to reference
the main storyboard so I'm going


206
00:10:21,936 --> 00:10:25,396
to choose main from the menu.


207
00:10:25,516 --> 00:10:27,566
The next field is the identifier


208
00:10:27,566 --> 00:10:28,846
of the view controller
you're referencing.


209
00:10:29,596 --> 00:10:32,546
If you leave this blank Xcode
will use the initial view


210
00:10:32,546 --> 00:10:34,026
controller of the
referenced storyboard.


211
00:10:34,876 --> 00:10:37,786
In my case, I want to
reference a specific controller


212
00:10:37,786 --> 00:10:39,536
in my main storyboard
and I have given


213
00:10:39,536 --> 00:10:42,776
that controller the
identifier new journal entry.


214
00:10:45,516 --> 00:10:47,886
The last field here is
the bundle identifier.


215
00:10:49,196 --> 00:10:51,276
Your storyboard that
you're referencing might be


216
00:10:51,276 --> 00:10:52,446
in an external framework.


217
00:10:52,636 --> 00:10:53,956
In that case, you'll want


218
00:10:53,956 --> 00:10:55,816
to put the framework's
bundle identifier here.


219
00:10:55,816 --> 00:10:59,686
I'm going to leave it blank
because my main storyboard is


220
00:10:59,686 --> 00:11:01,756
in the same bundle as
my photo storyboard.


221
00:11:02,226 --> 00:11:08,576
Once again, now that my
storyboard reference is


222
00:11:08,576 --> 00:11:12,026
configured, if I double-click
on it, Xcode will take me


223
00:11:12,056 --> 00:11:13,606
into my reference
storyboard file


224
00:11:14,006 --> 00:11:15,636
and show me the view
controller I'm referencing.


225
00:11:16,566 --> 00:11:20,216
In this case it is a navigation
controller and if we take a look


226
00:11:20,216 --> 00:11:22,146
at its Identity inspector
you can see


227
00:11:22,146 --> 00:11:24,536
that I have given it the
same identifier I just typed


228
00:11:24,536 --> 00:11:25,946
in the reference.


229
00:11:27,236 --> 00:11:31,296
The root view controller of this
navigation controller is this


230
00:11:31,326 --> 00:11:32,976
table view controller
which manages the UI


231
00:11:32,976 --> 00:11:34,396
for creating a new
journal entry.


232
00:11:34,846 --> 00:11:37,996
Let's head back to
the photo storyboard


233
00:11:38,276 --> 00:11:42,016
and create a segueway
to that reference.


234
00:11:42,076 --> 00:11:44,656
Earlier I mentioned that I want
this segueway to be triggered


235
00:11:44,656 --> 00:11:45,506
by this journal button.


236
00:11:46,196 --> 00:11:48,406
You don't see that
journal button here


237
00:11:48,406 --> 00:11:49,396
in my photo view controller.


238
00:11:50,686 --> 00:11:54,006
That's because that menu
is up here in the SceneDoc.


239
00:11:54,656 --> 00:11:59,396
The SceneDoc allows you to store
top level objects alongside your


240
00:11:59,396 --> 00:12:01,946
view controller and you might
put a view in your SceneDoc


241
00:12:02,236 --> 00:12:04,526
if you don't want that
view to initially be a part


242
00:12:04,526 --> 00:12:05,726
of the view hierarchy
at runtime.


243
00:12:06,846 --> 00:12:08,996
In Xcode 7 when you put
a view in your SceneDoc


244
00:12:09,266 --> 00:12:11,986
and you select it, it
shows up in its own editor


245
00:12:11,986 --> 00:12:13,886
above the view controller
right there in the canvas.


246
00:12:14,516 --> 00:12:20,976
[Applause]


247
00:12:21,476 --> 00:12:23,136
>> TONY RICCIARDI: So now that
we can see the journal button,


248
00:12:23,516 --> 00:12:24,756
let's create that segueway.


249
00:12:24,836 --> 00:12:28,236
I'm going to control drag over
to my storyboard reference


250
00:12:28,806 --> 00:12:30,676
and I want to present this
view controller modally,


251
00:12:30,676 --> 00:12:34,136
so I'll choose that.


252
00:12:34,336 --> 00:12:34,676
All right.


253
00:12:34,726 --> 00:12:36,006
Let's see this segueway
in action.


254
00:12:42,256 --> 00:12:43,826
So the first thing I
want to point out is


255
00:12:43,826 --> 00:12:46,536
that my photos tab is showing
up just like it did before,


256
00:12:46,736 --> 00:12:48,776
even though now it is
coming from a separate file.


257
00:12:49,716 --> 00:12:52,586
If I tap on a cell and
bring down the menu and tap


258
00:12:52,586 --> 00:12:56,146
on the journal button we
execute that segueway which goes


259
00:12:56,146 --> 00:12:58,136
into our main storyboard
file and instantiates


260
00:12:58,136 --> 00:13:01,726
that view controller by its
identifier and it works just


261
00:13:01,726 --> 00:13:03,096
as if it was in the
same storyboard.


262
00:13:04,306 --> 00:13:05,986
That's our new Storyboard
Reference feature


263
00:13:06,156 --> 00:13:07,306
and I hope you find it useful.


264
00:13:08,026 --> 00:13:09,506
Now I'll hand you
back over to Kyle.


265
00:13:10,516 --> 00:13:16,946
[Applause]


266
00:13:17,446 --> 00:13:19,746
>> KYLE SLUDER: Thank you, Tony.


267
00:13:19,936 --> 00:13:23,436
Okay. So I gather that
everybody is really excited


268
00:13:23,436 --> 00:13:23,986
about that feature.


269
00:13:23,986 --> 00:13:25,066
We're really happy
to have been able


270
00:13:25,066 --> 00:13:25,976
to bring it to you this year.


271
00:13:26,516 --> 00:13:30,746
[Applause]


272
00:13:31,246 --> 00:13:32,576
>> KYLE SLUDER: Let's talk
about something different.


273
00:13:33,566 --> 00:13:35,876
Let's talk about how
you can customize some


274
00:13:35,876 --> 00:13:37,416
of the standard segueways
that we provide


275
00:13:37,416 --> 00:13:38,936
for you in Interface Builder.


276
00:13:38,936 --> 00:13:43,136
Looking at a different aspect
of our demo application here,


277
00:13:43,286 --> 00:13:46,436
we have a journal that is
implemented using a table


278
00:13:46,436 --> 00:13:46,986
view controller.


279
00:13:47,576 --> 00:13:51,326
If the user taps that
plus button at the top


280
00:13:51,326 --> 00:13:54,736
of the journal we want to
do a modal presentation just


281
00:13:54,736 --> 00:13:56,626
like Tony showed you before
with the journal button


282
00:13:57,076 --> 00:13:59,796
and that's going to bring
up navigation controller


283
00:14:00,246 --> 00:14:03,106
that has a table view
controller inside of it.


284
00:14:05,356 --> 00:14:08,686
Tap the cancel button, that
navigation controller goes away.


285
00:14:08,786 --> 00:14:11,006
That's the standard modal
presentation style coming


286
00:14:11,006 --> 00:14:12,746
up from the bottom of
the screen and going back


287
00:14:12,746 --> 00:14:14,516
down to the bottom of the screen
that you see on an iPhone.


288
00:14:15,086 --> 00:14:18,236
What if you want to be fancy?


289
00:14:18,236 --> 00:14:23,886
User taps the plus button,
we perform our segueway,


290
00:14:23,936 --> 00:14:26,286
we want to be sparkly!


291
00:14:26,736 --> 00:14:32,936
And if we're going to be fancy
in the incoming direction,


292
00:14:33,216 --> 00:14:35,796
we really want to be equally
fancy when we're going away.


293
00:14:36,306 --> 00:14:39,456
You might be familiar,


294
00:14:39,666 --> 00:14:43,196
if you are an experienced
storyboard user,


295
00:14:43,676 --> 00:14:46,036
with some of the options you
get when you select the segueway


296
00:14:46,036 --> 00:14:47,956
and look at the segueway
inspector.


297
00:14:49,156 --> 00:14:52,026
There are a couple of
standard transitions


298
00:14:52,026 --> 00:14:54,816
that a modal presentation
can take on in iOS.


299
00:14:55,656 --> 00:14:58,496
The default is coming from the
bottom, its that cover vertical,


300
00:14:58,496 --> 00:15:01,716
but we can also do a horizontal
flip or cross dissolve,


301
00:15:02,456 --> 00:15:04,226
but sparkly, really
isn't in this list.


302
00:15:04,686 --> 00:15:09,196
One thing we can do in iOS
8 using earlier versions


303
00:15:09,196 --> 00:15:11,126
of Xcode is we can
go and we can turn


304
00:15:11,126 --> 00:15:12,346
that into a custom segueway.


305
00:15:12,856 --> 00:15:16,226
At that point we're responsible


306
00:15:16,226 --> 00:15:18,246
for subclassing
UIStoryboardSegueway


307
00:15:18,246 --> 00:15:20,146
and doing all of
the work ourselves.


308
00:15:20,876 --> 00:15:24,976
That's not really all that
big a burden when it comes


309
00:15:25,016 --> 00:15:28,586
to actually presenting the view
controller, but it would be nice


310
00:15:28,586 --> 00:15:30,816
if we didn't have to do that.


311
00:15:30,816 --> 00:15:34,636
Specifically in this case we
need to do a bunch of work


312
00:15:34,636 --> 00:15:35,576
to set up the animation.


313
00:15:36,116 --> 00:15:41,506
In Xcode 7 when you're
targeting iOS 9


314
00:15:41,506 --> 00:15:45,636
or OS X 10.11 you can select any
of our standard segueway types


315
00:15:46,026 --> 00:15:48,516
and still be able to
specify a custom subclass


316
00:15:48,646 --> 00:15:49,696
of storyboard segueway.


317
00:15:50,196 --> 00:15:53,826
You over-ride the perform
method just like you would


318
00:15:53,876 --> 00:15:57,146
for a completely custom segueway
but now your implementation


319
00:15:57,146 --> 00:15:59,886
of perform can call up
the supers implementation


320
00:16:00,076 --> 00:16:01,386
and get the default behavior.


321
00:16:02,106 --> 00:16:04,876
Around that super call you can
perform whatever customizations


322
00:16:04,876 --> 00:16:05,386
you want.


323
00:16:05,986 --> 00:16:09,366
What's really important
about this


324
00:16:09,366 --> 00:16:13,856
for our modal presentation
case is that we will hang on to


325
00:16:13,856 --> 00:16:17,126
that segueway object that gets
created when the user triggers


326
00:16:17,126 --> 00:16:19,876
that segueway for
the entire time


327
00:16:19,946 --> 00:16:21,676
that your modal presentation
is onscreen.


328
00:16:22,886 --> 00:16:24,826
Usually segueway objects
are really transient,


329
00:16:25,346 --> 00:16:28,626
we perform the segueway, we
allocate a segueway, we send it,


330
00:16:28,626 --> 00:16:31,496
perform, deallocate it,
but we're going to hold


331
00:16:31,496 --> 00:16:34,856
on to your modal presentation
segueways and popover segueways


332
00:16:34,856 --> 00:16:38,076
on iOS for the duration that
the view controller is onscreen


333
00:16:38,076 --> 00:16:39,326
as long as you call
up the super.


334
00:16:40,296 --> 00:16:43,316
Why am I making a
big deal out of this?


335
00:16:43,526 --> 00:16:45,806
We need to go through how
you would actually implement


336
00:16:45,806 --> 00:16:47,136
that custom sparkle animation


337
00:16:47,136 --> 00:16:49,136
or any custom modal
presentation animation.


338
00:16:50,146 --> 00:16:52,196
We've got our application
nice and tiny up here,


339
00:16:52,736 --> 00:16:56,296
and the user has tapped the
button to trigger the segueway.


340
00:16:56,856 --> 00:17:00,776
The destination view controller
exists, it has been instantiated


341
00:17:00,776 --> 00:17:02,796
from the storyboard but has
not been put onscreen yet.


342
00:17:03,566 --> 00:17:04,906
We're going to send
perform to the segueway,


343
00:17:04,906 --> 00:17:08,406
and the first thing that our
override or perform needs


344
00:17:08,406 --> 00:17:10,976
to do is assign a
transitioning delegate


345
00:17:10,976 --> 00:17:12,316
to the destination
view controller.


346
00:17:12,665 --> 00:17:18,646
Then it will call super to begin
the normal modal presentation.


347
00:17:19,146 --> 00:17:22,016
Now the destination
view controller,


348
00:17:22,465 --> 00:17:24,346
when it gets
presentViewController


349
00:17:24,346 --> 00:17:26,596
which is done by supers
implementation or perform,


350
00:17:27,425 --> 00:17:29,196
is going to consult with
the transition delegate


351
00:17:29,776 --> 00:17:31,046
to bend another object


352
00:17:31,906 --> 00:17:34,056
that actually drives
the custom animation.


353
00:17:34,506 --> 00:17:38,706
For more details on how this
series of protocols works,


354
00:17:38,706 --> 00:17:41,076
I suggest that you check out the
custom transitions using view


355
00:17:41,076 --> 00:17:43,336
controller section
from WWDC2013.


356
00:17:43,336 --> 00:17:48,066
Now in the other direction,
one the user is done


357
00:17:48,226 --> 00:17:50,306
with our view controller,
they tap the cancel button.


358
00:17:50,936 --> 00:17:53,496
The destination view controller,


359
00:17:53,496 --> 00:17:56,486
since it is going away still
has a transitioning delegate


360
00:17:56,486 --> 00:17:58,826
assigned to it and asks
that transitioning delegate


361
00:17:58,826 --> 00:18:02,446
for an animation controller
to drive the dismissal.


362
00:18:02,586 --> 00:18:05,466
If we didn't hold on to our
segueway which in turn holds


363
00:18:05,466 --> 00:18:06,676
on to our transition delegate,


364
00:18:07,066 --> 00:18:08,736
this all would have
been released


365
00:18:08,736 --> 00:18:10,916
and in iOS 8 we probably
would have a crash here,


366
00:18:10,916 --> 00:18:12,566
in iOS 9 it is a weak pointer


367
00:18:12,566 --> 00:18:14,606
so we wouldn't have gotten
our nice custom animation.


368
00:18:16,296 --> 00:18:19,256
Then animation controller gets
asked to drive the dismissal


369
00:18:19,796 --> 00:18:21,306
and our fancy view goes away.


370
00:18:22,446 --> 00:18:24,216
Another case where
this is important is


371
00:18:24,306 --> 00:18:26,316
when you are handling
adaptivity.


372
00:18:26,616 --> 00:18:29,326
For example, if you're
running on a iPhone


373
00:18:29,326 --> 00:18:32,056
and the user rotates the
device, maybe an iPhone 6 Plus


374
00:18:32,056 --> 00:18:35,286
and you want to present a
different interface in landscape


375
00:18:35,286 --> 00:18:38,406
or portrait or you
have taken advantage


376
00:18:38,406 --> 00:18:41,326
of the new multitasking
features in iOS 9 when running


377
00:18:41,326 --> 00:18:45,166
on an iPad Air 2, and the
user has split your app 50/50


378
00:18:45,266 --> 00:18:48,706
and you don't want to have, say,


379
00:18:48,706 --> 00:18:50,666
a popover in the
compact presentation.


380
00:18:51,676 --> 00:18:54,646
This specific example comes
from a talk on Tuesday,


381
00:18:54,646 --> 00:18:58,046
getting started with
multitasking on iPad in iOS 9


382
00:18:58,416 --> 00:19:00,756
which explains why you would
want to do something like this


383
00:19:00,786 --> 00:19:03,816
and in the cases in
which this would occur.


384
00:19:03,816 --> 00:19:05,656
Similarly to our
custom animation,


385
00:19:05,656 --> 00:19:08,536
we need to use the delegate
to customize the presentation.


386
00:19:08,536 --> 00:19:13,146
Our user is going to trigger
whatever segueway brings


387
00:19:13,146 --> 00:19:17,366
up the modal presentation and
our overrider perform is going


388
00:19:17,366 --> 00:19:18,896
to assign an adaptive delegate


389
00:19:19,666 --> 00:19:21,866
to that destination
view controller's


390
00:19:22,216 --> 00:19:23,286
presentation controller.


391
00:19:24,086 --> 00:19:25,516
It is just the delegate
property,


392
00:19:25,516 --> 00:19:28,716
but the protocol is actually
called adaptive delegate.


393
00:19:28,716 --> 00:19:29,806
Then we call super in order


394
00:19:29,806 --> 00:19:31,176
to get the standard
modal presentation


395
00:19:31,176 --> 00:19:33,466
to popover a full
screen, whatever happens


396
00:19:33,506 --> 00:19:36,636
to be appropriate for
the current size class.


397
00:19:36,636 --> 00:19:39,446
Later on the user does something
to cause the size class


398
00:19:39,446 --> 00:19:42,066
to change this, rotates
their iPhone 6 Plus,


399
00:19:42,136 --> 00:19:46,336
does 50/50 in split
view on iPad air 2.


400
00:19:46,796 --> 00:19:51,066
The presentation
controller is going to inform


401
00:19:51,066 --> 00:19:53,466
that adaptive delegate that
we're changing size classes


402
00:19:54,076 --> 00:19:56,166
and will turn around to
ask that adaptive delegate


403
00:19:56,166 --> 00:19:57,596
to have a new view controller


404
00:19:58,776 --> 00:20:00,586
to temporarily replace
the view controller


405
00:20:00,586 --> 00:20:01,826
that is currently
being presented.


406
00:20:03,126 --> 00:20:04,586
For more information
on how this works,


407
00:20:04,806 --> 00:20:06,456
last year my boss gave
a great presentation


408
00:20:06,456 --> 00:20:09,876
on view controller advancements
on iOS 8, last year,


409
00:20:09,926 --> 00:20:15,006
not two years ago, but to
show you how this works today,


410
00:20:15,636 --> 00:20:18,376
Tony will use Xcode 7 to
give us a custom animation.


411
00:20:19,516 --> 00:20:24,356
[Applause]


412
00:20:24,856 --> 00:20:25,406
>> TONY RICCIARDI:
Thank you, Kyle.


413
00:20:26,246 --> 00:20:31,666
In this demo I will show you
a few ways you can add custom


414
00:20:31,666 --> 00:20:33,256
Logic to your segueways
with code.


415
00:20:34,556 --> 00:20:36,626
If you've used storyboards
before you have probably written


416
00:20:36,626 --> 00:20:39,526
code to pass along data from
a source view controller


417
00:20:39,526 --> 00:20:42,196
to its destination while
preparing to execute a segueway.


418
00:20:43,246 --> 00:20:45,836
What you may not know is it
is also possible to customize


419
00:20:45,956 --> 00:20:48,096
when a segueway triggers
or how it animates.


420
00:20:48,826 --> 00:20:53,466
To show you that, I will create
a segueway here and specifically


421
00:20:53,826 --> 00:20:55,256
when a user taps
this delete button,


422
00:20:55,256 --> 00:20:58,396
I want to conditionally
present a confirmation sheet


423
00:20:58,706 --> 00:21:01,956
if this photo here is
associated with a journal entry.


424
00:21:03,056 --> 00:21:07,066
The first step in doing that is
to drag out of view controller


425
00:21:07,066 --> 00:21:09,466
from the library which
will represent our


426
00:21:09,466 --> 00:21:10,846
confirmation sheet.


427
00:21:11,516 --> 00:21:14,056
I give this view
controller a custom class


428
00:21:14,056 --> 00:21:17,686
which I have already
added to the project.


429
00:21:18,206 --> 00:21:20,296
This class implements load view


430
00:21:20,296 --> 00:21:22,316
to create its view
from the code.


431
00:21:22,316 --> 00:21:24,546
The view controller doesn't
need this view that came along


432
00:21:24,546 --> 00:21:25,536
with it from the library.


433
00:21:26,476 --> 00:21:29,506
I'll click on the
view and remove it.


434
00:21:30,276 --> 00:21:33,286
Now that this view controller is
no longer going to get its view


435
00:21:33,286 --> 00:21:36,696
from its storyboard, at runtime
the framework will fall back


436
00:21:36,696 --> 00:21:39,006
to my view controller's
implementation of load view.


437
00:21:39,566 --> 00:21:43,346
Now that we have our
confirmation sheet view


438
00:21:43,346 --> 00:21:46,156
controller let's
create a segueway to it.


439
00:21:46,156 --> 00:21:48,906
I want this segueway to be
triggered from code rather


440
00:21:48,906 --> 00:21:51,756
than from a particular
button press.


441
00:21:51,756 --> 00:21:54,646
Rather than dragging out
the segueway from a sub view


442
00:21:54,646 --> 00:21:57,026
in my view controller's
hierarchy I'll drag it


443
00:21:57,026 --> 00:21:58,556
out from the view
controller itself.


444
00:21:59,376 --> 00:22:01,926
To do that, I'll control
drag from this icon


445
00:22:01,926 --> 00:22:03,546
in my sourceViewController
SceneDoc


446
00:22:03,876 --> 00:22:05,016
over to the destination.


447
00:22:05,766 --> 00:22:08,306
Once again, I want to present
this view controller modally.


448
00:22:08,306 --> 00:22:14,706
I want the code that
executes this segueway


449
00:22:15,226 --> 00:22:17,366
to be triggered by
the delete button.


450
00:22:17,976 --> 00:22:20,186
What I want to do now
is create an IB action


451
00:22:20,476 --> 00:22:22,886
from the delete button.


452
00:22:22,886 --> 00:22:25,596
I open up the assistant
editor taking me


453
00:22:25,596 --> 00:22:29,856
to the implementation file
for my photo view controller.


454
00:22:29,856 --> 00:22:33,056
Now I'm going to control-drag
from the delete button


455
00:22:33,216 --> 00:22:36,636
over to my source code and
I get a popover allowing me


456
00:22:36,636 --> 00:22:39,226
to configure my new connection.


457
00:22:40,696 --> 00:22:43,456
As I said, I want this to
be an action and I'm going


458
00:22:43,806 --> 00:22:49,886
to call it delete photo.


459
00:22:49,886 --> 00:22:53,916
Xcode generates an IB action
method and now I'm just going


460
00:22:53,916 --> 00:22:56,386
to paste in some code here.


461
00:23:01,176 --> 00:23:03,076
There you go.


462
00:23:03,196 --> 00:23:06,956
In this code it checks if there
is an associated journal entry,


463
00:23:07,626 --> 00:23:11,066
if so it calls perform
segueway with identifier


464
00:23:11,636 --> 00:23:17,356
and the identifier pass
in here let's me refer


465
00:23:17,356 --> 00:23:19,556
to that segueway we just
created in the storyboard.


466
00:23:20,076 --> 00:23:23,506
I'm going to give that
segueway the same identifier


467
00:23:23,506 --> 00:23:24,066
in just a moment.


468
00:23:24,476 --> 00:23:27,546
First I want to point out I
also referred to that identifier


469
00:23:27,736 --> 00:23:29,206
from my prepare for
segueway method.


470
00:23:30,616 --> 00:23:34,486
In this method I pass along
that associated journal entry


471
00:23:34,526 --> 00:23:37,456
to the destination view
controller, which allows it is


472
00:23:37,456 --> 00:23:39,676
to present the details
of that journal entry


473
00:23:39,676 --> 00:23:41,306
in its confirmation sheet.


474
00:23:43,196 --> 00:23:45,376
Now let's head over
to the storyboard


475
00:23:45,376 --> 00:23:48,816
and select the segueway and head
up to the Attributes inspector.


476
00:23:49,236 --> 00:23:54,456
I'm going to type in that same
identifier here, confirm delete.


477
00:23:55,016 --> 00:23:59,546
You may notice if you used the
segueway Attributes inspector


478
00:23:59,546 --> 00:24:01,896
before, there is a new
field under the identifier


479
00:24:02,276 --> 00:24:04,556
which allows you to specify
a custom segueway class.


480
00:24:05,656 --> 00:24:08,796
In Xcode 7 you can now
provide a subclass for any


481
00:24:08,796 --> 00:24:10,336
of the system provided
segueway types.


482
00:24:10,916 --> 00:24:15,876
This works both on iOS
9 and Mac OS X 10.11.


483
00:24:15,876 --> 00:24:18,216
I have a custom segueway
I have added to my project


484
00:24:18,326 --> 00:24:19,316
and I will choose that here.


485
00:24:19,406 --> 00:24:21,516
It is called scaling
animation segueway.


486
00:24:22,856 --> 00:24:25,416
Let's take a look at the
implementation for that class.


487
00:24:25,416 --> 00:24:27,696
I'm going to close
the assistant,


488
00:24:28,376 --> 00:24:29,886
then I'll use the
jump bar to head


489
00:24:29,886 --> 00:24:32,416
over to my scaling
animation segueway.


490
00:24:32,916 --> 00:24:36,936
The first thing I
want to point out is


491
00:24:36,936 --> 00:24:40,636
that this segueway derives
from UIStoryboardSegueway


492
00:24:40,926 --> 00:24:41,796
and then conforms


493
00:24:41,796 --> 00:24:44,596
to the protocol UIViewController
transitioning delegate.


494
00:24:45,456 --> 00:24:47,436
This protocol allows
you to vend objects


495
00:24:47,686 --> 00:24:50,956
which control the animation
both for the presentation


496
00:24:51,106 --> 00:24:53,066
and for the dismissal
of the modal child.


497
00:24:55,626 --> 00:24:58,676
First I override the
perform method and in


498
00:24:58,676 --> 00:25:00,776
that method I set the segueway


499
00:25:00,986 --> 00:25:03,126
as the destination view
controller's transitional


500
00:25:03,126 --> 00:25:05,056
delegate and I call super


501
00:25:05,206 --> 00:25:06,776
which kicks off the
modal presentation.


502
00:25:07,206 --> 00:25:10,456
Next I override two methods


503
00:25:10,456 --> 00:25:12,156
from the transitioning
delegate protocol.


504
00:25:12,716 --> 00:25:14,636
Animation controller for
presented controller,


505
00:25:14,886 --> 00:25:17,626
and animation controller
for dismissed controller.


506
00:25:19,476 --> 00:25:23,476
The objects that I return from
each of these methods conform


507
00:25:23,936 --> 00:25:27,026
to the UIViewController
animated transitioning protocol.


508
00:25:28,366 --> 00:25:30,076
In this protocol, it
contains the methods


509
00:25:30,076 --> 00:25:31,796
that actually control
the animation.


510
00:25:32,266 --> 00:25:37,536
Down here in my presentation
animator I have a pretty simple


511
00:25:37,536 --> 00:25:40,676
animation which scales up the
destination view controller


512
00:25:40,676 --> 00:25:41,686
from the center of the screen.


513
00:25:42,846 --> 00:25:43,976
Let's see the segueway
in action.


514
00:25:48,536 --> 00:25:49,026
All right.


515
00:25:49,026 --> 00:25:51,706
Once again I'll tap on a
cell and bring down the menu.


516
00:25:52,536 --> 00:25:58,026
When I tap on this delete button
our custom segueway executes


517
00:25:58,026 --> 00:25:59,126
with our custom animation.


518
00:25:59,986 --> 00:26:01,656
We see our confirmation sheet.


519
00:26:02,396 --> 00:26:08,476
Now when I cancel this we run
our dismissal animation using


520
00:26:08,476 --> 00:26:09,386
our dismissal animator.


521
00:26:09,946 --> 00:26:13,946
So you saw a couple of different
ways you can customize your


522
00:26:13,946 --> 00:26:17,866
segueways with code and
I encourage you to check


523
00:26:17,866 --> 00:26:20,826
out the rest of our segueway
API on UIViewController


524
00:26:20,826 --> 00:26:21,926
and UIStoryboardSegueway.


525
00:26:23,006 --> 00:26:25,376
That wraps up our demo
on custom segueways.


526
00:26:25,376 --> 00:26:28,966
Again, let's head back to Kyle
to take us to the next segment.


527
00:26:29,516 --> 00:26:35,376
[Applause]


528
00:26:35,876 --> 00:26:36,226
>> KYLE SLUDER: Thank you.


529
00:26:36,226 --> 00:26:40,746
So I know it is an
advanced crowd here,


530
00:26:40,746 --> 00:26:43,416
pretty experienced
with storyboards.


531
00:26:43,416 --> 00:26:46,256
How many people here have
used unwind segueways before?


532
00:26:47,916 --> 00:26:51,086
Substantially fewer than have
used storyboards themselves.


533
00:26:51,466 --> 00:26:53,776
How many people here have
implemented a custom container


534
00:26:53,776 --> 00:26:54,926
view controller on iOS?


535
00:26:55,556 --> 00:26:57,566
About the same number.


536
00:26:58,646 --> 00:27:00,096
One thing that I'm
really excited to talk


537
00:27:00,096 --> 00:27:02,496
about this year is how we have
made those two features work


538
00:27:02,496 --> 00:27:03,116
better together.


539
00:27:04,126 --> 00:27:06,306
For those of you that aren't
familiar with an unwind segueway


540
00:27:06,306 --> 00:27:08,856
and what it does,
the best analogy


541
00:27:08,856 --> 00:27:11,726
that I have found is the map.


542
00:27:12,556 --> 00:27:15,286
So imagine I'm hanging out
here at Grace Cathedral,


543
00:27:15,286 --> 00:27:18,046
which is that really nice
geometric church that's


544
00:27:18,046 --> 00:27:21,266
up on Nob Hill, you can see
it from places from downtown.


545
00:27:22,566 --> 00:27:24,196
And it being at the
top of a hill,


546
00:27:24,196 --> 00:27:26,326
figure we'll take a
nice long downhill walk


547
00:27:26,326 --> 00:27:27,086
to the ferry terminal.


548
00:27:27,086 --> 00:27:33,526
Hang out at the ferry terminal
for a bit, get my organic kale


549
00:27:33,526 --> 00:27:37,056
and my blue bottle coffee and
since I'm on the Embarcadero,


550
00:27:37,146 --> 00:27:41,586
I may as well take a nice long
flat walk to Fisherman's Wharf.


551
00:27:41,586 --> 00:27:44,376
Now I'm really tired.


552
00:27:44,376 --> 00:27:47,736
I want to go home.


553
00:27:48,396 --> 00:27:51,276
What I don't want
to do is turn around


554
00:27:51,276 --> 00:27:53,436
and come back the way I
came because A, I don't live


555
00:27:53,436 --> 00:27:56,546
at the Cathedral, and B, that's
not even the shortest way


556
00:27:56,546 --> 00:27:57,326
to get to the Cathedral.


557
00:27:57,846 --> 00:28:03,216
What I want to do is first
figure out where I'm going,


558
00:28:04,646 --> 00:28:09,516
second, find that
location, and third,


559
00:28:09,596 --> 00:28:12,686
plot and execute a route
to that destination.


560
00:28:13,556 --> 00:28:15,196
That's what unwind segueways do.


561
00:28:16,316 --> 00:28:19,286
They find a path to a
specific destination


562
00:28:19,846 --> 00:28:21,746
that doesn't necessarily
mean that we go backwards


563
00:28:21,816 --> 00:28:22,746
through the way we came.


564
00:28:23,256 --> 00:28:27,596
To give you a more concrete
example using an actual


565
00:28:27,596 --> 00:28:29,486
application let's go back


566
00:28:29,486 --> 00:28:32,636
to this demo application
we have been using


567
00:28:32,636 --> 00:28:33,996
with our tab bar controller...


568
00:28:34,096 --> 00:28:37,366
sorry, our custom tab
controller and the table view


569
00:28:38,086 --> 00:28:40,576
and its navigation
controller that contains it.


570
00:28:41,036 --> 00:28:43,026
As the user uses
our application,


571
00:28:43,026 --> 00:28:44,786
our view controller
hierarchy changes.


572
00:28:45,326 --> 00:28:49,536
They may tap on an
image and push something


573
00:28:49,536 --> 00:28:55,496
into the nav controller
that is a child of that tab.


574
00:28:55,716 --> 00:28:56,866
That's where we're at right now.


575
00:28:57,536 --> 00:29:00,416
At this point the user
says I want to go back


576
00:29:00,416 --> 00:29:02,306
to that journal table I
was looking at before.


577
00:29:07,276 --> 00:29:10,726
So when they ask to do that,


578
00:29:11,326 --> 00:29:12,926
we're going to perform
a segueway


579
00:29:13,506 --> 00:29:15,356
from our photo view controller.


580
00:29:16,756 --> 00:29:19,696
It is an unwind segueway with
the identifier goBackToJournal.


581
00:29:20,026 --> 00:29:23,976
The first thing that
unwind segueway needs


582
00:29:23,976 --> 00:29:25,666
to do is identify
the destination.


583
00:29:26,176 --> 00:29:30,496
The way we find our
destination, the way we dermine


584
00:29:30,496 --> 00:29:32,216
that we've found what
we're looking for,


585
00:29:32,696 --> 00:29:33,876
it is with some code.


586
00:29:34,596 --> 00:29:38,836
That code is in our subclass
of UITableViewController


587
00:29:39,436 --> 00:29:42,256
and it is a method that I have
chosen to call iAmTheJournal.


588
00:29:43,256 --> 00:29:44,496
That method doesn't do anything.


589
00:29:44,616 --> 00:29:47,056
It is an ID action that takes
a UI storyboard segueway


590
00:29:47,556 --> 00:29:50,166
and exists solely so
that we can determine


591
00:29:50,166 --> 00:29:52,376
that we have found the view
controller we are looking for.


592
00:29:58,216 --> 00:30:00,496
Step two is finding
the destination.


593
00:30:01,006 --> 00:30:06,446
So we start by looking at the
parent of our current source.


594
00:30:07,756 --> 00:30:12,196
In iOS 8 we ask this view
controller -- excuse me.


595
00:30:13,296 --> 00:30:15,716
In iOS 8 we ask this
view controller,


596
00:30:15,716 --> 00:30:17,886
viewController
ForUnwindseguewayAction.


597
00:30:18,536 --> 00:30:21,206
This view controller would look
through its children trying


598
00:30:21,206 --> 00:30:23,406
to find a view controller
that responded


599
00:30:23,906 --> 00:30:28,916
to that iAmTheJournal selector
that we have specified here.


600
00:30:29,376 --> 00:30:31,646
We have set that
up in the inspector


601
00:30:31,646 --> 00:30:32,576
for our unwind segueway.


602
00:30:33,126 --> 00:30:39,006
That method is great for smaller
view controller hierarchies


603
00:30:39,006 --> 00:30:40,326
but doesn't really
handle the kind


604
00:30:40,326 --> 00:30:42,246
of viewer controller hierarchy
we have in this application.


605
00:30:43,526 --> 00:30:47,486
In iOS 9 we have deprecated
that method and replaced it


606
00:30:47,486 --> 00:30:50,896
with a new method, allowed child
view controllers for unwinding


607
00:30:50,896 --> 00:30:53,666
from source, and what
this method returns,


608
00:30:53,666 --> 00:30:56,746
instead an individual view
controller, returns an array


609
00:30:56,746 --> 00:30:59,916
of the children of the
receiver that we should look


610
00:30:59,916 --> 00:31:02,126
through to try to find
the destination So we want


611
00:31:04,316 --> 00:31:07,496
to actually return a
subset, we don't want to try


612
00:31:07,496 --> 00:31:11,126
to find an unwind
destination that's a descendant


613
00:31:11,126 --> 00:31:12,116
of where we're coming from.


614
00:31:12,566 --> 00:31:13,886
We also have another new method,


615
00:31:14,246 --> 00:31:16,336
child view controller
containing segueway source


616
00:31:16,836 --> 00:31:19,816
that are an override of allow
child view controllers can use


617
00:31:19,816 --> 00:31:21,976
to figure out where
we're coming from.


618
00:31:23,296 --> 00:31:26,326
The implementation on UI
navigation controller calls


619
00:31:26,326 --> 00:31:29,746
that method to figure out where
we're coming from and says, oh,


620
00:31:29,746 --> 00:31:31,306
that photo view controller
is the source,


621
00:31:31,506 --> 00:31:32,746
therefore contains the source.


622
00:31:33,966 --> 00:31:37,806
The returned array of child
view controllers omits


623
00:31:37,806 --> 00:31:39,836
that view controller and
we get an array of 1.


624
00:31:40,396 --> 00:31:44,256
At this point the
storyboard runtime recurses


625
00:31:44,256 --> 00:31:46,586
into that array starting with
the first and only element.


626
00:31:47,156 --> 00:31:50,876
We ask this, the collection
view controller that's currently


627
00:31:50,876 --> 00:31:54,606
obscured what children do you
have that we should search


628
00:31:54,606 --> 00:31:56,836
through to find the destination
of our unwind segueway?


629
00:31:57,396 --> 00:31:59,166
It doesn't have any children.


630
00:32:01,086 --> 00:32:03,866
We have the base case for
our recursion and we ask it,


631
00:32:04,356 --> 00:32:07,226
can you perform the unwind
segueway action we're


632
00:32:07,226 --> 00:32:07,716
looking for.


633
00:32:09,056 --> 00:32:14,216
It can't. We haven't
found our destination.


634
00:32:15,276 --> 00:32:17,166
Let's try the search
again one level


635
00:32:17,166 --> 00:32:18,536
up the view controller
hierarchy chain.


636
00:32:19,046 --> 00:32:23,706
Same method as before, this
new method allowed child view


637
00:32:23,706 --> 00:32:25,886
controllers from
unwinding from source.


638
00:32:26,556 --> 00:32:31,376
Its implementation, our
custom view controller,


639
00:32:31,686 --> 00:32:33,066
only wants to go backwards,


640
00:32:33,066 --> 00:32:34,486
vertically up through
that stack.


641
00:32:35,396 --> 00:32:38,866
It asks itself which of
my children contains the


642
00:32:38,866 --> 00:32:39,556
unwind source?


643
00:32:40,056 --> 00:32:44,646
That photo nav controller
contains the source


644
00:32:45,716 --> 00:32:47,786
so the array it returns
omits that child.


645
00:32:48,756 --> 00:32:50,876
We have again an array of
one child that we're return


646
00:32:50,876 --> 00:32:54,456
from this method and
the runtime recurses.


647
00:32:55,076 --> 00:32:57,496
Which of your children
should we look


648
00:32:57,496 --> 00:32:59,196
through to find the
unwind source?


649
00:33:00,246 --> 00:33:01,386
I'm sorry, the unwind
destination.


650
00:33:01,926 --> 00:33:05,526
This navigation controller
doesn't have any --


651
00:33:05,836 --> 00:33:07,526
doesn't have the source
of the descendants,


652
00:33:07,526 --> 00:33:10,926
we can skip over that for
now and we recurse again.


653
00:33:10,926 --> 00:33:13,786
We ask the Table
view controller,


654
00:33:13,786 --> 00:33:14,926
which of your children
should we look


655
00:33:14,926 --> 00:33:16,026
through to find the destination?


656
00:33:16,026 --> 00:33:17,636
It doesn't have any children.


657
00:33:18,396 --> 00:33:21,666
We ask it, can you perform
the unwind segueway action?


658
00:33:22,206 --> 00:33:25,426
That's what that method is
that I implemented earlier


659
00:33:25,426 --> 00:33:28,446
that didn't have actually any
body to its implementation.


660
00:33:29,056 --> 00:33:31,866
That's our sentinel, we found
it, we found our destination.


661
00:33:39,056 --> 00:33:43,216
Now at this point, in iOS
8 we would ask the parent


662
00:33:43,216 --> 00:33:47,466
of our destination to return
us a segueway that knows how


663
00:33:47,466 --> 00:33:49,346
to restore our view
controller hierarchy


664
00:33:49,676 --> 00:33:51,116
such that our destination
is visible.


665
00:33:52,166 --> 00:33:54,686
That's a really hard
question to answer


666
00:33:54,786 --> 00:33:57,756
for more complicated view
controller hierarchies.


667
00:33:58,316 --> 00:34:02,216
We have deprecated that
method and we replaced it


668
00:34:02,216 --> 00:34:04,236
with a feature we call
incremental unwinding.


669
00:34:04,796 --> 00:34:09,085
This feature let's every view
controller from the source


670
00:34:09,085 --> 00:34:11,636
to the destination
participate in the unwind


671
00:34:11,636 --> 00:34:14,656
so that it only needs to
use the local knowledge.


672
00:34:15,456 --> 00:34:18,576
The runtime will construct a
UI storyboard segueway object


673
00:34:18,826 --> 00:34:22,806
for you using whatever subclass
you specified in the inspector


674
00:34:22,806 --> 00:34:23,496
and Interface Builder.


675
00:34:24,666 --> 00:34:29,386
It will ask it to perform.


676
00:34:29,516 --> 00:34:33,406
Here is step three,
follow the route.


677
00:34:33,606 --> 00:34:34,636
Well, we have found the route


678
00:34:34,966 --> 00:34:36,706
from the source to
the destination.


679
00:34:37,235 --> 00:34:42,505
The first thing we're going
to do is ask the first hop


680
00:34:42,505 --> 00:34:44,466
on that route to unwind


681
00:34:44,466 --> 00:34:46,025
for segueway towards
view controller.


682
00:34:46,025 --> 00:34:48,815
We're going to ask the
parent of the source


683
00:34:49,916 --> 00:34:52,505
to perform whatever action
is necessary to get us


684
00:34:52,505 --> 00:34:55,775
to the next step in the chain.


685
00:34:55,996 --> 00:34:58,146
The child view controller
doesn't know anything


686
00:34:58,146 --> 00:34:58,586
about its parent.


687
00:34:58,586 --> 00:35:00,886
This method actually
doesn't do anything.


688
00:35:01,236 --> 00:35:02,926
It has been told unwind
towards your parent,


689
00:35:03,266 --> 00:35:04,546
that's not the child's
responsibility.


690
00:35:05,026 --> 00:35:08,446
Next we get to our custom
container view controller.


691
00:35:09,626 --> 00:35:12,536
We ask it, okay, unwind
towards our journal


692
00:35:12,536 --> 00:35:13,466
navigation controller.


693
00:35:13,966 --> 00:35:17,326
This is something that the
custom tab controller is


694
00:35:17,326 --> 00:35:20,946
actually responsible for and it
knows how to rearrange itself


695
00:35:20,946 --> 00:35:24,146
so that the journal navigation
controller is visible.


696
00:35:24,396 --> 00:35:31,826
Next up on the chain we ask our
navigation controller to unwind


697
00:35:31,826 --> 00:35:32,816
to the table view controller.


698
00:35:32,816 --> 00:35:35,996
It is already at the top
of the navigation stack


699
00:35:35,996 --> 00:35:37,096
so there is nothing to do here.


700
00:35:38,376 --> 00:35:40,546
We returned where
the user wants to go.


701
00:35:41,026 --> 00:35:44,026
This is how all this
stuff works internally.


702
00:35:45,346 --> 00:35:46,156
Tony will show you how


703
00:35:46,156 --> 00:35:47,566
to implement it in
your application.


704
00:35:48,516 --> 00:35:52,646
[Applause]


705
00:35:53,146 --> 00:35:54,006
>> TONY RICCIARDI:
Thank you, Kyle.


706
00:35:54,176 --> 00:35:57,196
In this demo I'll show you
how to use unwind segueways


707
00:35:57,406 --> 00:35:58,966
with a custom container
view controller.


708
00:36:00,346 --> 00:36:03,716
You might remember in our first
demo we created a segueway


709
00:36:03,716 --> 00:36:04,616
from this journal button.


710
00:36:05,336 --> 00:36:07,606
This modal sheet for
creating a new journal entry.


711
00:36:08,896 --> 00:36:12,096
Unfortunately we haven't
implemented any functionality


712
00:36:12,096 --> 00:36:12,876
for this done button.


713
00:36:13,636 --> 00:36:16,266
What I want to do now is
create an unwind segueway


714
00:36:16,266 --> 00:36:17,746
from this done button and I want


715
00:36:17,746 --> 00:36:19,166
that unwind segueway
button to do a few things.


716
00:36:20,186 --> 00:36:22,786
First of all, I want it to
dismiss this modal sheet.


717
00:36:23,856 --> 00:36:27,006
I want it to pop my
photo view controller off


718
00:36:27,006 --> 00:36:28,066
of the navigation stack.


719
00:36:28,976 --> 00:36:31,876
I want it to switch tabs
over to my journal tab.


720
00:36:31,876 --> 00:36:33,956
I want it to descend


721
00:36:33,956 --> 00:36:36,536
down through this navigation
controller and finally end


722
00:36:36,536 --> 00:36:38,026
up at this table view controller


723
00:36:38,376 --> 00:36:40,196
where we'll insert a
new table view cell


724
00:36:40,196 --> 00:36:41,056
for the new journal entry.


725
00:36:42,016 --> 00:36:43,646
That's a lot to ask
for one segueway.


726
00:36:43,806 --> 00:36:46,346
Where do we get started?


727
00:36:46,506 --> 00:36:49,916
The first step in creating
an unwind segueway is


728
00:36:49,966 --> 00:36:52,676
to define a special
type of IB action method


729
00:36:52,946 --> 00:36:54,796
in the view controller
you're unwinding to.


730
00:36:55,086 --> 00:36:59,036
In this case, it is our
journal table view controller.


731
00:36:59,086 --> 00:37:00,756
Over here in the implementation


732
00:37:00,756 --> 00:37:03,616
for that controller you can
see I have an IB action method.


733
00:37:04,486 --> 00:37:06,046
And this IB action
method is special


734
00:37:06,196 --> 00:37:08,446
because it is taking
a UIStoryboardSegueway


735
00:37:08,676 --> 00:37:09,776
as its only paramater.


736
00:37:11,276 --> 00:37:14,746
Whenever Xcode sees an IB
action method it takes a


737
00:37:14,746 --> 00:37:17,846
UIStoryboardSegueway as its
only paramater and allows you


738
00:37:17,846 --> 00:37:21,106
to create unwind segueways
targeting that selector.


739
00:37:21,436 --> 00:37:26,786
Within this method I grab
the source view controller


740
00:37:26,786 --> 00:37:30,266
of the segueway which in this
case is that view controller


741
00:37:30,266 --> 00:37:31,536
for creating a new
journal entry.


742
00:37:31,856 --> 00:37:36,046
I use that view controller's
journal entry and add it


743
00:37:36,076 --> 00:37:39,336
to our model which refreshes
the table and inserts a new cell


744
00:37:39,586 --> 00:37:41,036
and scrolls to that
cell's position.


745
00:37:41,486 --> 00:37:45,736
Now that we have seen the action
that we're unwinding towards,


746
00:37:46,106 --> 00:37:47,466
let's head over to
our storyboard


747
00:37:47,466 --> 00:37:49,436
and create a segueway
targeting that selector.


748
00:37:49,966 --> 00:37:54,176
Here we aree at the
view controller


749
00:37:54,176 --> 00:37:55,376
for creating a new journal entry


750
00:37:56,356 --> 00:37:59,716
and we'll create an unwind
segueway from this done button.


751
00:38:00,446 --> 00:38:02,806
To do that, we'll control-drag
from the done button


752
00:38:03,376 --> 00:38:05,766
to the exit place
holder in the SceneDoc.


753
00:38:06,916 --> 00:38:10,336
The exit place holder serves
as a place holder for all


754
00:38:10,336 --> 00:38:11,816
of the valid unwind actions


755
00:38:11,816 --> 00:38:13,576
that Xcode has found
in your work space.


756
00:38:14,366 --> 00:38:17,226
It determines that a method is
a valid unwind action once again


757
00:38:17,426 --> 00:38:19,726
based on whether it
is an IB action method


758
00:38:19,726 --> 00:38:21,206
that takes a
UIStoryboardSegueway.


759
00:38:22,086 --> 00:38:27,516
It found that method we saw
so I'm going to select that.


760
00:38:27,726 --> 00:38:29,976
Normally when you create an
unwind segueway that's all you


761
00:38:29,976 --> 00:38:30,386
have to do.


762
00:38:30,576 --> 00:38:33,596
You define the unwind selector
and create the segueway to it.


763
00:38:34,286 --> 00:38:37,256
In my case I want to
execute some custom logic


764
00:38:38,016 --> 00:38:40,496
which allows my custom
container view controller


765
00:38:40,766 --> 00:38:42,186
to switch between these tabs.


766
00:38:43,186 --> 00:38:46,406
That logic is in my custom
container view controller file


767
00:38:46,406 --> 00:38:51,626
so let's head over there.


768
00:38:51,836 --> 00:38:54,186
As you can see, in this
view controller I have


769
00:38:54,186 --> 00:38:56,886
over ridden unwind for segueway
towards view controller.


770
00:38:57,986 --> 00:38:59,336
In this method I do two things.


771
00:39:00,826 --> 00:39:03,516
First of all, I take the
currently selected navigation


772
00:39:03,516 --> 00:39:06,206
controller, and I pop that down
to the root view controller.


773
00:39:07,526 --> 00:39:10,276
Then I set the selected
navigation controller


774
00:39:10,626 --> 00:39:13,366
to be this parameter
subsequent view controller.


775
00:39:14,696 --> 00:39:16,986
Subsequent view controller
is the next step


776
00:39:17,056 --> 00:39:17,836
in the unwind chain.


777
00:39:17,836 --> 00:39:20,406
It is not necessarily
the end destination


778
00:39:20,406 --> 00:39:23,106
of the unwind segueway,
it is a direct child


779
00:39:23,106 --> 00:39:25,566
of this custom container
that we're unwinding towards.


780
00:39:26,216 --> 00:39:30,946
The did set observer for this
property, is going to take care


781
00:39:31,176 --> 00:39:34,036
of updating my auto layout
constraints and performing


782
00:39:34,036 --> 00:39:35,716
that sliding animation
we saw earlier.


783
00:39:35,716 --> 00:39:40,566
Now that we have seen my custom
container view controllers'


784
00:39:40,566 --> 00:39:42,436
implementation of
incremental unwinding,


785
00:39:42,916 --> 00:39:48,656
let's see this unwind
segueway in action.


786
00:39:48,816 --> 00:39:50,086
I'll tap on a cell.


787
00:39:50,086 --> 00:39:50,856
Bring down the menu.


788
00:39:51,256 --> 00:39:53,696
I tap on that journal button.


789
00:39:53,696 --> 00:39:54,926
Now I'm going to
tap the done button.


790
00:39:55,696 --> 00:39:57,636
You can see we have
switched tabs.


791
00:39:58,546 --> 00:40:00,166
We have ended up at our
journal view controller


792
00:40:00,416 --> 00:40:03,156
and inserted this new table
view cell for our journal entry.


793
00:40:03,636 --> 00:40:07,736
As you can see, unwind segueways
have gotten a lot more powerful


794
00:40:07,736 --> 00:40:09,426
in iOS 9 and they work great


795
00:40:09,426 --> 00:40:10,966
with custom container
viewer controllers.


796
00:40:11,516 --> 00:40:18,166
[Applause]


797
00:40:18,666 --> 00:40:21,186
>> TONY RICCIARDI: So that
wraps up our unwinding demo.


798
00:40:21,466 --> 00:40:24,766
Now let's head back over to Kyle
one last time to wrap this up.


799
00:40:26,376 --> 00:40:28,376
>> KYLE SLUDER: Thank you, Tony.


800
00:40:28,376 --> 00:40:30,896
So just a quick summary


801
00:40:30,896 --> 00:40:32,666
of the new API we have
introduced for unwinding.


802
00:40:33,436 --> 00:40:35,046
We have deprecated
viewer controller


803
00:40:35,046 --> 00:40:37,546
for unwind segueway action
and we have replaced it


804
00:40:37,546 --> 00:40:39,106
with allowed child
view controllers


805
00:40:39,106 --> 00:40:40,266
from unwinding from source.


806
00:40:40,946 --> 00:40:42,406
If you override the old method


807
00:40:42,406 --> 00:40:43,896
and don't override
the new method,


808
00:40:44,136 --> 00:40:46,896
we will call the old
method even on iOS 9


809
00:40:46,896 --> 00:40:49,686
so that your code behaves the
same if your app targets iOS 8


810
00:40:50,136 --> 00:40:51,466
and it can also run on iOS 9.


811
00:40:52,626 --> 00:40:54,536
The implementation of
that override my want


812
00:40:54,536 --> 00:40:56,796
to call the new allowed child
view containing controllers


813
00:40:56,796 --> 00:41:00,746
for segueway source method so
that it can filter the array


814
00:41:00,746 --> 00:41:04,066
of child view controllers
that it returns.


815
00:41:04,176 --> 00:41:06,726
If you need some sort
of custom validation


816
00:41:06,726 --> 00:41:09,696
for whether you can perform a
certain unwind you can override


817
00:41:09,766 --> 00:41:12,446
the can perform unwind segueway
action method which has existed


818
00:41:12,446 --> 00:41:15,206
for a while but by
default all it does is see


819
00:41:15,206 --> 00:41:17,176
if the receiver responds
to that selector.


820
00:41:17,826 --> 00:41:21,216
Usually that's sufficient.


821
00:41:21,296 --> 00:41:23,556
Likewise, we have
deprecated the segueway for --


822
00:41:23,556 --> 00:41:26,486
segueway for unwinding
to view controller method


823
00:41:27,006 --> 00:41:30,016
and replaced it with unwind
for segueway which is called


824
00:41:30,016 --> 00:41:31,606
on each view controller
in the chain


825
00:41:32,056 --> 00:41:33,396
to implement incremental
unwinding.


826
00:41:36,676 --> 00:41:39,126
Overall, today we learned how


827
00:41:39,126 --> 00:41:41,266
to organize our storyboards
using references.


828
00:41:41,266 --> 00:41:45,276
We learned how to customize our
segueways by subclassing them.


829
00:41:45,786 --> 00:41:47,446
Even though we want to
get the standard behavior.


830
00:41:48,946 --> 00:41:52,996
We learned that in iOS and iOS
9 specifically, present modally


831
00:41:52,996 --> 00:41:56,956
and popover presentation
segueways will hang on to --


832
00:41:56,956 --> 00:41:59,196
sorry -- the view
controllers that are presented


833
00:41:59,256 --> 00:42:02,526
by present modally and popover
presentation segueways will hang


834
00:42:02,526 --> 00:42:05,316
on to the segueway
objects that presented them


835
00:42:05,736 --> 00:42:07,026
so that they can
act as delegates


836
00:42:07,026 --> 00:42:09,416
for animation or for adaptivity.


837
00:42:09,816 --> 00:42:12,806
We have learned how
unwind segueways work


838
00:42:13,166 --> 00:42:15,366
to get us backwards
through our application flow


839
00:42:15,366 --> 00:42:18,416
and that we can support them
easier in our custom containers


840
00:42:19,446 --> 00:42:21,426
and remove our deprecated
APIs in order


841
00:42:21,426 --> 00:42:22,726
to get the behavior in iOS 9.


842
00:42:23,276 --> 00:42:26,226
If you need more
information on storyboards,


843
00:42:26,226 --> 00:42:28,486
the storyboard help has
been rewritten in Xcode 7,


844
00:42:28,486 --> 00:42:30,016
so you should check
that out first.


845
00:42:30,016 --> 00:42:33,766
We also have a sample
project, segueway catalog,


846
00:42:34,746 --> 00:42:37,506
which is available on
the developer website.


847
00:42:37,506 --> 00:42:39,866
There actually isn't a space
in that name so if you search


848
00:42:39,866 --> 00:42:40,926
for segueway in the
space catalog,


849
00:42:40,926 --> 00:42:43,486
you find the wrong thing.


850
00:42:44,076 --> 00:42:46,766
If you need technical support,
check out the dev forums.


851
00:42:46,766 --> 00:42:49,246
There are a lot of developers
out there just like you,


852
00:42:49,246 --> 00:42:52,476
facing the same problems you
have have been posting on there,


853
00:42:52,696 --> 00:42:54,436
are able to help you
figure out your problems,


854
00:42:54,436 --> 00:42:57,166
you can contact developer
technical support


855
00:42:57,236 --> 00:42:58,436
or if you have general
inquiries,


856
00:42:58,496 --> 00:43:00,546
contact Curt Rothert,
our evangelist.


857
00:43:01,186 --> 00:43:02,966
Otherwise, maybe I'll
see you at the bash.


858
00:43:03,516 --> 00:43:06,500
[Applause]

