1
00:00:00,506 --> 00:00:14,056
[ Silence ]


2
00:00:14,556 --> 00:00:15,096
>> All right.


3
00:00:15,096 --> 00:00:17,716
Hi, everyone and
welcome to this session,


4
00:00:17,716 --> 00:00:18,866
Getting to Know Web Inspector.


5
00:00:18,866 --> 00:00:22,096
It's the first of two sessions
today about Web Inspector.


6
00:00:22,386 --> 00:00:24,396
The second session is
right after this one


7
00:00:24,996 --> 00:00:27,876
and this session serves as an
introduction to Web Inspector.


8
00:00:28,216 --> 00:00:30,906
So, if you haven't
used this tool before


9
00:00:30,906 --> 00:00:35,466
or only occasionally, this is a
good talk to really get started


10
00:00:35,466 --> 00:00:36,766
and get your hands on the tool.


11
00:00:37,436 --> 00:00:38,986
So, my name is Antoine
[phonetic].


12
00:00:39,416 --> 00:00:41,786
I'm an engineer in the
Safari and WebKit Team


13
00:00:42,116 --> 00:00:44,576
and more specifically,
I work on Web Inspector


14
00:00:44,736 --> 00:00:46,736
which hopefully makes me an--


15
00:00:46,906 --> 00:00:52,096
a relevant speaker
for this session.


16
00:00:52,246 --> 00:00:55,216
I really, really love
working on Web Inspector.


17
00:00:55,426 --> 00:00:57,906
And the reason I love it so
much is that I've been involved


18
00:00:57,906 --> 00:01:00,386
with Web Technologies my
entire professional career.


19
00:01:01,396 --> 00:01:04,756
And some may not
remember that time,


20
00:01:04,906 --> 00:01:07,626
but there was a time before
Web Inspector or tools


21
00:01:07,626 --> 00:01:11,176
of that [inaudible], of
that kind, didn't exist.


22
00:01:11,246 --> 00:01:13,936
And that time was a lot more
painful than it is today.


23
00:01:14,446 --> 00:01:16,376
And so, let me tell
you how things used


24
00:01:16,376 --> 00:01:17,826
to work before Web Inspector.


25
00:01:18,736 --> 00:01:21,036
You'd be working on your
web content, your web app,


26
00:01:21,236 --> 00:01:23,416
your website, whatever
it is that you're using


27
00:01:24,086 --> 00:01:25,716
and that's being
powered by web content.


28
00:01:26,546 --> 00:01:29,646
And you encounter an issue
and you try to fix it


29
00:01:30,196 --> 00:01:35,196
and take your best guess as
to what the issues might be


30
00:01:35,196 --> 00:01:38,676
in your HTML or your CSS or
your JavaScript, and so you'd be


31
00:01:38,676 --> 00:01:40,916
in your Text Editor, scratch
your head a little bit


32
00:01:40,916 --> 00:01:42,856
and then eventually you think,
"Okay, I think I got it.


33
00:01:43,206 --> 00:01:44,886
If I change this
thing, type this in,


34
00:01:45,166 --> 00:01:46,256
everything will look
much better."


35
00:01:46,986 --> 00:01:49,566
And then what you would
have to do is you would have


36
00:01:49,566 --> 00:01:53,706
to switch context, go back
to the browser, hit Command-R


37
00:01:53,706 --> 00:01:55,736
to refresh the page after
the changes you've made


38
00:01:55,736 --> 00:01:56,536
in the Text Editor.


39
00:01:57,046 --> 00:01:59,266
And that's just not
an ideal scenario


40
00:01:59,266 --> 00:02:00,996
because wouldn't it be
great if you could stay


41
00:02:00,996 --> 00:02:02,346
in the same tool at all times?


42
00:02:03,336 --> 00:02:06,626
And going back to about
a couple of years ago,


43
00:02:06,896 --> 00:02:09,086
that workflow was
also appropriate


44
00:02:09,086 --> 00:02:13,246
if you were developing an iOS
app and you're using UIWebView


45
00:02:13,246 --> 00:02:14,426
to show-- to power some


46
00:02:14,426 --> 00:02:16,116
of the user interface
of your application.


47
00:02:16,676 --> 00:02:20,106
And you'd be using web
content and you'd be in Xcode,


48
00:02:20,266 --> 00:02:21,476
changing that web content.


49
00:02:21,826 --> 00:02:23,906
And this time, instead of
just switching to a browser


50
00:02:23,906 --> 00:02:26,416
and refreshing, you'd have
to actually rebuild your app


51
00:02:26,846 --> 00:02:29,336
to send it back down
to the device again,


52
00:02:29,776 --> 00:02:32,636
and that would start kind
of a lengthy process.


53
00:02:33,096 --> 00:02:34,636
Xcode will package the content,


54
00:02:34,976 --> 00:02:36,516
compile any code
that's required,


55
00:02:36,856 --> 00:02:39,166
send it down to the device,
and it's kind of lengthy.


56
00:02:39,296 --> 00:02:40,826
And so all the time,
whether it's coming


57
00:02:40,826 --> 00:02:43,626
from your Text Editor or from
Xcode waiting for your app


58
00:02:43,626 --> 00:02:46,496
to be downloaded to the
device, you don't really know


59
00:02:46,496 --> 00:02:49,526
if the changes you've made are
actually the correct changes.


60
00:02:50,136 --> 00:02:53,426
And then once the
content finally loads,


61
00:02:53,766 --> 00:02:55,966
you have to start a
little treasure hunt to get


62
00:02:55,966 --> 00:02:57,836
to the point of your
app or web content


63
00:02:57,836 --> 00:02:59,146
where you think the issue arose.


64
00:02:59,146 --> 00:03:01,966
And so you keep going,
you cross your fingers,


65
00:03:02,376 --> 00:03:05,116
you finally get there,
and unfortunately,


66
00:03:05,316 --> 00:03:06,716
the bug is still
very much there.


67
00:03:07,686 --> 00:03:09,476
So, every time that happens,


68
00:03:10,126 --> 00:03:12,506
there's just a little bit
more added frustration


69
00:03:13,196 --> 00:03:15,476
and it's just not
a good experience.


70
00:03:15,816 --> 00:03:19,236
And so that whole scenario is
the reason why we're making


71
00:03:19,236 --> 00:03:19,926
Web Inspector.


72
00:03:20,796 --> 00:03:23,276
Web Inspector is the
Safari developer tool


73
00:03:23,496 --> 00:03:27,816
to help you diagnose,
inspect, analyze,


74
00:03:27,916 --> 00:03:30,446
and fix any issue you may
find in your web content.


75
00:03:30,966 --> 00:03:34,316
And what's really cool about Web
Inspector is that it's a tool


76
00:03:34,616 --> 00:03:38,116
that runs on your Mac and
you can target Safari on Mac,


77
00:03:38,926 --> 00:03:42,306
but it applies just as
well to Safari on iOS


78
00:03:42,586 --> 00:03:46,046
and your native app running
on iOS using UIWebView.


79
00:03:46,806 --> 00:03:49,696
And even though in this talk,
we'll be using iOS mostly


80
00:03:49,696 --> 00:03:51,416
as a target, always remember


81
00:03:51,416 --> 00:03:54,476
that any feature you see
will apply just as well


82
00:03:54,476 --> 00:03:57,066
to your native app on
iOS or Safari on a Mac.


83
00:03:58,256 --> 00:04:03,096
And so, the way we can remotely
inspect pages on iOS devices is


84
00:04:03,096 --> 00:04:07,126
that you can just run Safari
on your Mac, get your iPad


85
00:04:07,126 --> 00:04:09,306
or any kind of iOS
device running Safari,


86
00:04:09,976 --> 00:04:13,706
tether it up to your Mac and
then that's all you really need.


87
00:04:13,816 --> 00:04:16,396
You're ready to go and you
can remotely inspect your


88
00:04:16,396 --> 00:04:17,055
iOS content.


89
00:04:17,495 --> 00:04:20,046
And you may have any number
of devices, or in fact,


90
00:04:20,086 --> 00:04:21,636
you may be inspecting simulator


91
00:04:21,636 --> 00:04:23,796
so that you're just
working on your workstation.


92
00:04:24,466 --> 00:04:28,496
And this applies not just to iOS
Safari but also your native app


93
00:04:28,496 --> 00:04:29,856
that you built yourself, send it


94
00:04:29,856 --> 00:04:31,916
down to the device
using UIWebView.


95
00:04:33,316 --> 00:04:36,956
Okay, once you've set up,
this is what you'll see.


96
00:04:37,156 --> 00:04:38,256
This is Web Inspector.


97
00:04:38,926 --> 00:04:41,296
And I think just like
any developer tool,


98
00:04:41,646 --> 00:04:44,646
because these tools are
developed for power users


99
00:04:45,056 --> 00:04:48,086
and developer will spend a
lot of time using those tools


100
00:04:48,086 --> 00:04:49,176
to make their life better,


101
00:04:49,716 --> 00:04:51,456
this might seem just
a little bit daunting.


102
00:04:51,606 --> 00:04:53,466
We try to provide a lot
of great functionality,


103
00:04:53,466 --> 00:04:56,056
and at first glance, maybe it's
a little bit tough to get into.


104
00:04:56,446 --> 00:04:58,416
And so in this session,
we're going to drill


105
00:04:58,416 --> 00:05:01,536
into this user interface and I'm
going to walk you through it,


106
00:05:01,536 --> 00:05:03,516
give you a little
guidance to show you how


107
00:05:03,516 --> 00:05:05,016
to use it the best way possible.


108
00:05:05,946 --> 00:05:08,766
So, we'll start this
session with an overview


109
00:05:08,766 --> 00:05:11,956
of the user interface and then
we'll take a really hands-on


110
00:05:11,956 --> 00:05:15,096
approach so that you can learn
about some of the core features


111
00:05:15,096 --> 00:05:18,466
of Web Inspector applied
to three core tasks.


112
00:05:18,876 --> 00:05:21,616
The first one is something I
like to call Inspection Tweaking


113
00:05:21,616 --> 00:05:24,386
where we'll be experimenting
with CSS in our DOM structure


114
00:05:24,616 --> 00:05:28,356
to change the layout and
presentation of our page.


115
00:05:28,356 --> 00:05:31,586
And then we'll start analyzing
the network performance


116
00:05:31,586 --> 00:05:34,696
of our page trying to make the
load time of our page the best


117
00:05:34,696 --> 00:05:36,836
as it can be or rather
analyze it


118
00:05:36,986 --> 00:05:38,176
to figure out what's going on.


119
00:05:38,796 --> 00:05:42,436
And finally, we'll get into
code debugging, trying to work


120
00:05:42,436 --> 00:05:44,666
out some errors and some
JavaScript that we wrote.


121
00:05:44,666 --> 00:05:49,276
So, I'd like to begin with an
overview of the user interface.


122
00:05:50,086 --> 00:05:52,666
And to get started, I'd like
to jump straight to a demo


123
00:05:52,966 --> 00:05:57,216
so we can just see it in action.


124
00:05:57,216 --> 00:06:02,356
Okay, so Web Inspector is
not on by default in Safari.


125
00:06:02,526 --> 00:06:03,696
It's a developer tool


126
00:06:04,086 --> 00:06:08,386
and we want developer-specific
functionalities of Safari


127
00:06:08,416 --> 00:06:10,256
to only be available
when they're needed.


128
00:06:10,566 --> 00:06:12,826
So, let me show you
how to turn it on.


129
00:06:13,036 --> 00:06:16,816
I'm going to switch to
Safari and I'm going to bring


130
00:06:16,816 --> 00:06:23,156
up the preferences, and let
me zoom in just a little bit


131
00:06:23,156 --> 00:06:24,356
so it's up more obvious.


132
00:06:24,356 --> 00:06:27,136
We're going to switch to
the Advanced tab and right


133
00:06:27,136 --> 00:06:28,436
at the bottom, right here,


134
00:06:28,916 --> 00:06:31,306
there's a special menu item
called Show Develop Menu


135
00:06:31,306 --> 00:06:31,916
and Menu Bar.


136
00:06:32,866 --> 00:06:35,946
And as I zoom out and turn
it on and off, you'll notice


137
00:06:35,946 --> 00:06:38,356
in the Menu bar that a
new menu item is going


138
00:06:38,356 --> 00:06:39,556
to show up called Develop.


139
00:06:40,376 --> 00:06:43,916
Okay, so we want to keep
it on, and at the moment,


140
00:06:43,916 --> 00:06:45,306
that's all we need
to do in Safari.


141
00:06:46,566 --> 00:06:49,296
Next, I'm going to switch
to the iOS Simulator.


142
00:06:49,746 --> 00:06:53,886
Again, I'll be using Simulator
on stage but this will work just


143
00:06:53,886 --> 00:06:57,346
as well with an actual
iOS device


144
00:06:57,346 --> 00:06:59,906
or several iOS devices
connected to your workstation.


145
00:07:01,216 --> 00:07:04,796
Okay, so in this case, what I
need to do is go into Settings,


146
00:07:05,956 --> 00:07:10,506
then Safari, scroll down to
the bottom to the Advanced Menu


147
00:07:11,636 --> 00:07:13,816
and turn on the Web
Inspector item right here.


148
00:07:14,716 --> 00:07:17,296
What that means now
is that this device,


149
00:07:17,296 --> 00:07:19,776
or rather the Simulator
can be a target


150
00:07:19,776 --> 00:07:22,886
for Web Inspector running
in Safari on the Mac.


151
00:07:23,716 --> 00:07:25,516
Okay, let's go back
to the home screen.


152
00:07:26,686 --> 00:07:29,706
And now, what I should be
able to do is open Safari,


153
00:07:31,376 --> 00:07:33,686
navigate to one of my favorite
websites on the internet,


154
00:07:35,486 --> 00:07:40,276
switch to Safari on the Mac and
remotely inspect this web page.


155
00:07:40,546 --> 00:07:42,286
So, how do I go about
doing this?


156
00:07:42,686 --> 00:07:45,936
So, I'm going to go back to
my Develop Menu right here


157
00:07:46,686 --> 00:07:49,346
and when I bring it up,
you'll notice the third item


158
00:07:49,646 --> 00:07:50,996
which is named iPhone Simulator.


159
00:07:51,586 --> 00:07:54,326
And for any iOS device
that's connected to your Mac


160
00:07:54,446 --> 00:07:56,426
and has the Web Inspector
preference turned on,


161
00:07:57,006 --> 00:07:59,756
these devices will appear in
this menu and you'll be able


162
00:07:59,756 --> 00:08:03,326
to drill into this menu
to find specific WebViews


163
00:08:03,326 --> 00:08:04,966
that you can inspect
on this device.


164
00:08:05,206 --> 00:08:07,776
So, in our case, we only
have iPhone Simulator


165
00:08:08,316 --> 00:08:11,276
and it has a single
application running, Safari,


166
00:08:11,806 --> 00:08:15,386
and I can just hover over
the name of the web page


167
00:08:15,386 --> 00:08:18,246
and it will show me, as
you can see in the back,


168
00:08:19,036 --> 00:08:21,016
it will highlight the
WebView in question.


169
00:08:21,076 --> 00:08:22,606
So, it might not
seem like a big deal


170
00:08:22,606 --> 00:08:23,666
when you're targeting Safari


171
00:08:23,666 --> 00:08:27,686
because the web page is
always going to occupy the--


172
00:08:27,746 --> 00:08:28,926
almost the entire screen.


173
00:08:29,326 --> 00:08:31,356
But imagine you're
working on an iOS app


174
00:08:31,356 --> 00:08:33,966
when you have several
UIWebViews laid out on the page,


175
00:08:33,966 --> 00:08:35,496
it might be hard to distinguish


176
00:08:35,496 --> 00:08:37,936
which of this WebViews is
the one you want to inspect,


177
00:08:38,206 --> 00:08:40,696
so this will make it really
easier to pinpoint what you want


178
00:08:40,696 --> 00:08:41,826
to inspect specifically.


179
00:08:42,336 --> 00:08:44,246
Okay, so let me zoom out.


180
00:08:44,246 --> 00:08:48,376
I've picked this page and
this is Web Inspector.


181
00:08:50,176 --> 00:08:55,336
Okay, so let's zoom in a little
bit on our Web Inspector and try


182
00:08:55,336 --> 00:08:57,256
to work out exactly
what we can do here.


183
00:08:57,816 --> 00:08:59,866
The first thing you'll
notice is that by default,


184
00:08:59,866 --> 00:09:02,436
Web Inspector will
select the HTML


185
00:09:02,436 --> 00:09:03,636
of the page you're inspecting


186
00:09:03,796 --> 00:09:05,556
and show it's DOM tree
right in the center.


187
00:09:05,926 --> 00:09:10,566
So, how do-- how can we go about
finding more about this page?


188
00:09:10,766 --> 00:09:13,096
Well, there are three main
sections of Web Inspector.


189
00:09:13,396 --> 00:09:18,606
The first one is Resources and
we've already got it selected,


190
00:09:18,606 --> 00:09:21,166
and then we have
Timelines, we'll get back


191
00:09:21,166 --> 00:09:23,536
to that one later,
and debugger, again,


192
00:09:23,606 --> 00:09:24,606
we'll get back to that later.


193
00:09:25,216 --> 00:09:26,446
Let's focus on Resources.


194
00:09:27,046 --> 00:09:30,866
And the three icons
actually control the display


195
00:09:31,186 --> 00:09:32,726
of the sidebar to the left,


196
00:09:32,726 --> 00:09:34,506
which we call a Navigation
Sidebar.


197
00:09:35,346 --> 00:09:37,486
This button also
acts as a toggle,


198
00:09:37,486 --> 00:09:39,576
so when you don't need
the sidebar anymore,


199
00:09:39,576 --> 00:09:42,586
you can just click on it,
removes it, click back on,


200
00:09:42,586 --> 00:09:44,696
and will turn it back on so


201
00:09:44,696 --> 00:09:47,926
that you can always control
what's exactly is on display


202
00:09:48,236 --> 00:09:49,506
and customize your workspace.


203
00:09:50,396 --> 00:09:52,726
Okay, so depending
on what I choose


204
00:09:52,726 --> 00:09:53,996
in this Navigation Sidebar,


205
00:09:55,386 --> 00:09:58,836
the content of the main view
here is going to change.


206
00:09:58,836 --> 00:10:01,396
So for example, if I pick an
image, the content here changes.


207
00:10:02,046 --> 00:10:07,336
If I pick a piece of JavaScript,
the content changes and so on.


208
00:10:08,176 --> 00:10:10,536
This is because there's a
master-detail relationship


209
00:10:10,536 --> 00:10:12,106
between those two things.


210
00:10:12,156 --> 00:10:16,226
The sidebar is the master and
the content is the detail,


211
00:10:16,556 --> 00:10:19,256
which is saying, "We want more
detail about this resource,"


212
00:10:19,296 --> 00:10:20,646
and it appears right
away in the center.


213
00:10:21,526 --> 00:10:24,156
So, one thing that's
really interesting


214
00:10:24,156 --> 00:10:25,646
about the content here is


215
00:10:25,646 --> 00:10:27,716
that it's divided
in three main areas.


216
00:10:28,176 --> 00:10:30,626
So obviously in the center,
you got your source code


217
00:10:30,686 --> 00:10:32,476
or your DOM tree or your image.


218
00:10:32,916 --> 00:10:36,526
But at the top, we always have
what we call the Navigation Bar,


219
00:10:37,156 --> 00:10:39,176
and what this lets
us do is browse


220
00:10:39,176 --> 00:10:40,906
through the various resources
that we've gone through.


221
00:10:40,906 --> 00:10:43,286
So, if I click Back,
I'll be back on my--


222
00:10:43,286 --> 00:10:44,756
the image I was previously on,


223
00:10:45,006 --> 00:10:46,906
and back again, I'll
be on the HTML.


224
00:10:47,526 --> 00:10:50,166
And going back forward, I
can go back to my JavaScript.


225
00:10:50,456 --> 00:10:52,906
So wherever you are in the
user interface and you want


226
00:10:52,906 --> 00:10:54,366
to quickly go back
to where you were,


227
00:10:54,556 --> 00:10:56,036
you can just use
the Navigation Bar,


228
00:10:56,196 --> 00:10:57,766
which of course has a short--


229
00:10:57,766 --> 00:10:59,606
keyboard shortcuts
available for it as well.


230
00:11:00,806 --> 00:11:03,616
In the case of a DOM
tree, you also what we


231
00:11:03,616 --> 00:11:07,306
like to call the Breadcrumb
Bar, and what it shows you is--


232
00:11:07,806 --> 00:11:09,636
let me pick a deeper element.


233
00:11:10,306 --> 00:11:15,236
What it shows you is the
hierarchy all the way


234
00:11:15,236 --> 00:11:17,826
up to the HTML element for the
currently selected element.


235
00:11:17,826 --> 00:11:21,576
So, I can go easily to the
header or parent div of the body


236
00:11:21,836 --> 00:11:24,456
and this would be
the HTML element.


237
00:11:24,456 --> 00:11:29,246
Okay, now let's focus at what
we can see at the bottom.


238
00:11:31,776 --> 00:11:35,456
Here, we have what we call the
Quick Console and it's a piece


239
00:11:35,456 --> 00:11:38,296
of user interface where you can
just type code wherever you are,


240
00:11:38,456 --> 00:11:38,926
whenever.


241
00:11:38,926 --> 00:11:40,896
And it's got two appearances.


242
00:11:41,226 --> 00:11:43,486
The default appearance
is just a single prompt.


243
00:11:44,376 --> 00:11:47,066
But if I type things in it,


244
00:11:48,096 --> 00:11:53,036
I immediately get an additional
console log showing right up so


245
00:11:53,036 --> 00:11:54,696
that I can see what
I've just evaluated


246
00:11:54,696 --> 00:11:58,786
so I can type something
else, and you can see that.


247
00:11:58,786 --> 00:12:02,056
And you can toggle this
Quick Console on and off


248
00:12:02,226 --> 00:12:03,626
by just using the Escape key.


249
00:12:03,786 --> 00:12:07,166
So, it's really easy to get more
information about your console


250
00:12:07,166 --> 00:12:09,736
or just collapse it so that
you just focus on the prompt.


251
00:12:10,566 --> 00:12:12,616
Okay, so that was
the Content Browser.


252
00:12:12,976 --> 00:12:16,286
Now, what about those three--
those four icons to the right?


253
00:12:17,056 --> 00:12:18,606
Well, the first thing
I'd like to show you is


254
00:12:18,606 --> 00:12:21,676
that how these things would
change depending on what kind


255
00:12:21,676 --> 00:12:23,666
of resource I'm inspecting.


256
00:12:23,956 --> 00:12:27,346
So, if I go back to inspecting
an image, you'll notice


257
00:12:27,346 --> 00:12:29,346
that I have a single
button here called Resource.


258
00:12:29,496 --> 00:12:32,896
But if I go back to my HTML
page, I have more items.


259
00:12:33,716 --> 00:12:36,846
The reason we have more items
is these control the display


260
00:12:36,846 --> 00:12:38,626
of what we call the
Detail Sidebar.


261
00:12:38,706 --> 00:12:40,276
It's a sidebar that
displays to the right.


262
00:12:40,616 --> 00:12:42,366
In this case, I'm
going to select Styles,


263
00:12:42,716 --> 00:12:44,386
and this will show
the Style Sidebar.


264
00:12:45,026 --> 00:12:47,376
Again, there's a
master-detail relationship


265
00:12:47,376 --> 00:12:48,796
which is going deeper down.


266
00:12:49,336 --> 00:12:51,156
The master is the
Resources Sidebar,


267
00:12:51,476 --> 00:12:54,726
we'll pick a resource which,
in this case, is an HTML file.


268
00:12:54,726 --> 00:12:56,046
This is the detail
of the resource


269
00:12:56,346 --> 00:12:59,486
and we can have even more
details about this HTML5,


270
00:13:00,156 --> 00:13:03,476
HTML file by using one of
the Detail Sidebar icons


271
00:13:03,476 --> 00:13:06,306
to the right, so I can drill
into styles information,


272
00:13:06,566 --> 00:13:08,906
note information,
resource information,


273
00:13:09,126 --> 00:13:12,006
and this is really only
contextual to whatever is


274
00:13:12,006 --> 00:13:14,546
in the center which is itself
selected from the right.


275
00:13:14,656 --> 00:13:17,426
So, there's this right to
left drilling of details.


276
00:13:17,656 --> 00:13:21,896
Okay, again, these act as
toggles and it's really easy


277
00:13:21,896 --> 00:13:23,116
to customize your workspace.


278
00:13:23,826 --> 00:13:27,106
The last thing I'd like to
show you is this in the middle


279
00:13:27,106 --> 00:13:28,726
which we like to call
the Activity Viewer.


280
00:13:29,106 --> 00:13:31,376
Let me reload the page so
that the Activity Viewer fills


281
00:13:31,376 --> 00:13:32,766
up with more interesting
information.


282
00:13:33,036 --> 00:13:35,466
And I can reload the page
just by running Command-R,


283
00:13:35,466 --> 00:13:38,476
I don't even have to switch
to my iOS Simulator or in fact


284
00:13:38,476 --> 00:13:41,516
to iOS device, you can just do
it remotely from Web Inspector.


285
00:13:41,896 --> 00:13:43,566
And in the center, we
have the load time.


286
00:13:43,566 --> 00:13:46,476
Here, the page has some
difficulty running, actually,


287
00:13:46,476 --> 00:13:49,156
sorry, it has-- I'm
really sorry about that.


288
00:13:49,156 --> 00:13:51,706
Okay, this shows us the
load time, the time it took


289
00:13:51,706 --> 00:13:53,646
until the load event
fired on the page.


290
00:13:53,646 --> 00:13:55,056
And as you could
see, it kept running


291
00:13:55,056 --> 00:13:57,796
until the page was fully loaded,
and that's a great metric


292
00:13:57,796 --> 00:13:59,606
to keep an eye on as
you work on your page.


293
00:13:59,806 --> 00:14:02,636
And these are always available,
so you always have a quick idea


294
00:14:02,636 --> 00:14:05,156
of how many resources you're
dealing with, the complete sizes


295
00:14:05,156 --> 00:14:07,756
of the page, and the amount of
time it took until it loaded.


296
00:14:08,476 --> 00:14:10,826
And those three items to
the right are only relevant


297
00:14:10,826 --> 00:14:12,276
when there are messages
in the console.


298
00:14:12,276 --> 00:14:14,596
The first one will be for
console logs, the second one


299
00:14:14,596 --> 00:14:16,426
for errors, and the
third one for warnings.


300
00:14:16,716 --> 00:14:17,796
We'll get back to those later.


301
00:14:19,316 --> 00:14:21,906
Here we are, we took a full
tour of the user interface


302
00:14:22,876 --> 00:14:25,556
and I think this makes you
a little bit more familiar


303
00:14:25,556 --> 00:14:26,646
with the Web Inspector.


304
00:14:27,246 --> 00:14:29,956
So, let's recap what
we just saw.


305
00:14:30,366 --> 00:14:33,376
This is the user interface
of Web Inspector and it split


306
00:14:33,376 --> 00:14:35,456
into a series of subsections.


307
00:14:36,356 --> 00:14:38,046
So, we have a little
coloring going on here


308
00:14:38,046 --> 00:14:39,586
so you can see what
I'm talking about.


309
00:14:39,906 --> 00:14:41,666
And so let's recap
what each of those are.


310
00:14:42,116 --> 00:14:43,816
First, at the top we
have the Tool Bar.


311
00:14:44,216 --> 00:14:45,446
We have the buttons to the left


312
00:14:45,446 --> 00:14:47,526
that control the
Navigation Sidebars


313
00:14:47,766 --> 00:14:49,366
and to the right,
the Detail Sidebar.


314
00:14:49,846 --> 00:14:52,746
And to the center, we have
the Activity Viewer and always


315
00:14:52,746 --> 00:14:55,856
on dashboard, it lets you
know how your page is doing,


316
00:14:55,856 --> 00:14:59,176
how many resources it has,
how long it took to load.


317
00:14:59,796 --> 00:15:01,666
And when we toggle the
buttons to the left


318
00:15:01,666 --> 00:15:03,326
to control the Navigation
Sidebar,


319
00:15:03,776 --> 00:15:06,466
we can see the sidebar
displayed to the left,


320
00:15:06,466 --> 00:15:07,806
in this case, the
Resource Sidebar.


321
00:15:08,116 --> 00:15:11,406
This controls what information
is displayed in the center


322
00:15:11,406 --> 00:15:14,356
of the Content Browser, which
is split in three sections,


323
00:15:14,696 --> 00:15:18,556
the Navigation Bar, the content
itself, and the Quick Console


324
00:15:18,556 --> 00:15:20,016
at the bottom which
you can expand


325
00:15:20,016 --> 00:15:21,576
and collapse by pressing Escape.


326
00:15:21,976 --> 00:15:25,506
And finally to the right, we
have the Detail Sidebar toggled


327
00:15:25,506 --> 00:15:27,006
by the buttons to the
right of the Tool Bar,


328
00:15:27,006 --> 00:15:28,836
and this is our user interface.


329
00:15:29,226 --> 00:15:32,816
So, let's start digging
into actual tasks


330
00:15:32,816 --> 00:15:34,176
and see Web Inspector in action.


331
00:15:34,806 --> 00:15:38,066
And I'd like to start by going
through inspection and tweaking.


332
00:15:38,436 --> 00:15:42,346
And let me go back to demo
again so that we can look


333
00:15:42,346 --> 00:15:43,886
at what we can do
with Web Inspector


334
00:15:44,096 --> 00:15:47,986
to modernize a web page to make
it feel more at home on iOS 7.


335
00:15:52,006 --> 00:15:56,986
Okay, so I'm going to open
Safari, get rid of the page


336
00:15:56,986 --> 00:15:58,156
that we were previously on


337
00:15:58,916 --> 00:16:01,816
and open a page I created
just for this demo.


338
00:16:02,376 --> 00:16:03,916
Well, that page may
look familiar to you.


339
00:16:04,066 --> 00:16:06,446
This looks like a page
of iTunes trailers.


340
00:16:07,376 --> 00:16:10,156
And I took that page and
simplified it just a little bit


341
00:16:10,156 --> 00:16:11,386
for a purpose of this demo.


342
00:16:12,156 --> 00:16:14,356
And what I'd like to
do is, in this demo,


343
00:16:14,656 --> 00:16:18,016
is to make it a little
bit better for iPhone.


344
00:16:18,306 --> 00:16:21,096
I'd like it to fit the viewport
of iPhone so that you don't have


345
00:16:21,096 --> 00:16:22,786
to zoom to like, to
look at the content.


346
00:16:23,306 --> 00:16:25,836
And I'd also like to make
it feel a little bit more


347
00:16:25,836 --> 00:16:28,416
like it were a web page trying


348
00:16:28,416 --> 00:16:30,586
to mimic the aesthetics
of iOS 7.


349
00:16:31,656 --> 00:16:34,996
Okay, the first thing I'm
going to do obviously is switch


350
00:16:35,326 --> 00:16:41,366
to Safari, open Web
Inspector for this page and--


351
00:16:41,536 --> 00:16:42,686
okay, let's get started.


352
00:16:43,026 --> 00:16:45,686
The mission here is to always
remain in Web Inspector,


353
00:16:45,786 --> 00:16:48,416
never switch context,
and make all the changes


354
00:16:48,716 --> 00:16:51,506
in this one session of
usage of Web Inspector.


355
00:16:51,806 --> 00:16:55,606
So, the first thing I'd like
to do is remove the background


356
00:16:55,606 --> 00:16:56,186
of the page.


357
00:16:56,296 --> 00:16:58,776
I just don't think this
picture here looks right.


358
00:16:58,936 --> 00:17:01,826
It's landscape and I want a
portrait kind of experience.


359
00:17:02,086 --> 00:17:04,246
So, what can I do
to make this better?


360
00:17:04,955 --> 00:17:09,465
Well, I got the body element
selected here and I'm going


361
00:17:09,465 --> 00:17:12,675
to open up the Style
Sidebar so I can control


362
00:17:12,945 --> 00:17:15,606
that CSS properties
applied to this element.


363
00:17:16,306 --> 00:17:17,715
And so this might
be familiar to you


364
00:17:17,715 --> 00:17:19,096
if you used Web Inspector
before,


365
00:17:19,096 --> 00:17:21,236
but the Style Sidebar
is just so much better


366
00:17:21,236 --> 00:17:22,766
in Web Inspector in Safari 7.


367
00:17:23,185 --> 00:17:26,566
Now, we can just simply click
here and edit as if we were


368
00:17:26,566 --> 00:17:27,596
in our own Text Editor.


369
00:17:27,925 --> 00:17:30,036
In this case, I'm selecting
all the background related


370
00:17:30,036 --> 00:17:32,156
properties and by
hitting Delete,


371
00:17:32,156 --> 00:17:33,276
I'm just going to
remove them all.


372
00:17:33,276 --> 00:17:35,676
So, let me zoom out so you can
see what happens when I do that,


373
00:17:36,156 --> 00:17:38,616
delete, the background
is gone instantly.


374
00:17:38,616 --> 00:17:41,266
I didn't have to reload, I
didn't have to save anything,


375
00:17:41,326 --> 00:17:43,686
I didn't have to go back to my
Text Editor and reload the page,


376
00:17:43,906 --> 00:17:45,206
this is all happening live.


377
00:17:47,216 --> 00:17:51,146
Okay, next, I think there's
an image on this page


378
00:17:51,146 --> 00:17:53,636
that would work great
as a background image.


379
00:17:54,026 --> 00:17:56,676
It's this little poster here and
it's got the right aspect ratio.


380
00:17:57,046 --> 00:17:59,376
And so what I'd like to do
is make it the background,


381
00:17:59,666 --> 00:18:02,596
and because eventually we'll
want to add a blur filter


382
00:18:02,596 --> 00:18:05,526
to that image so that it
looks like an iOS 7 kind


383
00:18:05,526 --> 00:18:09,306
of background, I will make
it-- I will keep it as an image


384
00:18:09,546 --> 00:18:11,896
and try to move it to the
top of our DOM structure.


385
00:18:12,656 --> 00:18:16,186
Okay, so let me do that, and the
easiest way I can find out where


386
00:18:16,186 --> 00:18:19,326
that element is in my DOM tree
is I can use the Inspect button


387
00:18:19,406 --> 00:18:22,966
in the Tool Bar and what
this lets me do is tap


388
00:18:22,966 --> 00:18:24,566
on any element on the page.


389
00:18:24,746 --> 00:18:26,996
And, again, remember this
could be in your iOS device.


390
00:18:26,996 --> 00:18:28,736
You could be interacting
with it in real time.


391
00:18:29,006 --> 00:18:30,476
And by just tapping on it,


392
00:18:30,566 --> 00:18:33,126
it will reveal the note
right in Web Inspector.


393
00:18:33,306 --> 00:18:37,326
So, here it is, we have an image
and the hierarchy above it.


394
00:18:37,556 --> 00:18:38,016
Excellent.


395
00:18:38,336 --> 00:18:41,166
So, let's take that image
and move it to the top.


396
00:18:41,846 --> 00:18:44,726
So I suppose I could use a Quick
Console and write some DOM code


397
00:18:44,946 --> 00:18:46,746
to remove it and
put it at the top.


398
00:18:46,746 --> 00:18:49,626
But this is really not the most
intuitive way we could do it.


399
00:18:49,986 --> 00:18:52,656
The most intuitive way on OS
X would be to just drag it


400
00:18:52,656 --> 00:18:55,036
and drop it somewhere
else in the DOM tree.


401
00:18:56,656 --> 00:18:57,956
So, let me do that again.


402
00:18:57,956 --> 00:19:01,106
Just to show you, I'm going
to use Command-Z to undo


403
00:19:01,356 --> 00:19:02,766
because we support
undo and redo,


404
00:19:04,066 --> 00:19:06,156
and redo it so that you
see the changes I've made.


405
00:19:06,736 --> 00:19:09,616
Excellent, the image is
now at the top of the page.


406
00:19:09,746 --> 00:19:11,086
It's kind of small.


407
00:19:11,916 --> 00:19:13,796
Oh, yeah, well, it's
got an explicit size,


408
00:19:13,796 --> 00:19:14,976
and I probably want
to change that.


409
00:19:15,036 --> 00:19:16,796
I just double-click
on the attribute


410
00:19:16,796 --> 00:19:18,696
and I can just start
editing it right away.


411
00:19:18,986 --> 00:19:23,566
So, let me type 100 percent,
again changes are instant.


412
00:19:24,236 --> 00:19:27,476
Well, the Hide is set as well
and we're going to just get rid


413
00:19:27,476 --> 00:19:30,376
of it such that it will match
the aspect ratio of the image.


414
00:19:31,786 --> 00:19:34,316
Okay, well, there is
kind of a problem here


415
00:19:34,316 --> 00:19:37,296
because the image is
really low resolution.


416
00:19:37,296 --> 00:19:38,946
You can really see
it's all pixilated.


417
00:19:39,606 --> 00:19:43,016
So, if I go back to where the
image was hosted, it was inside


418
00:19:43,016 --> 00:19:45,766
of an anchor element
pointing to another image.


419
00:19:46,136 --> 00:19:47,686
Oh, let's see what
that image is.


420
00:19:47,686 --> 00:19:49,096
I'm just going to
click on the URL


421
00:19:49,536 --> 00:19:51,876
and because it's not a
resource of the web page itself,


422
00:19:51,876 --> 00:19:54,496
it's linked from the web
page, this will just download


423
00:19:54,496 --> 00:19:56,486
to my desktop and open
in preview right away.


424
00:19:56,966 --> 00:19:59,226
And I can see this image
as much higher resolution


425
00:19:59,666 --> 00:20:00,976
and I think I just
like to use that.


426
00:20:01,796 --> 00:20:04,786
So again, this is just
so easy in Web Inspector.


427
00:20:05,046 --> 00:20:06,626
I can just double-click
on the attribute


428
00:20:06,666 --> 00:20:08,886
and selects automatically
the text.


429
00:20:08,886 --> 00:20:11,886
I'm going to use Command-C
to copy it, double-click


430
00:20:11,886 --> 00:20:14,056
on the Image Source and paste.


431
00:20:14,356 --> 00:20:16,626
And if you pay attention
to the left, the resolution


432
00:20:16,626 --> 00:20:18,806
of the image is going to be
so much better right away.


433
00:20:19,386 --> 00:20:21,576
There you go.


434
00:20:22,106 --> 00:20:22,596
Excellent!


435
00:20:23,176 --> 00:20:25,156
So, this is starting to
look a little bit better.


436
00:20:25,366 --> 00:20:25,756
You know what?


437
00:20:25,756 --> 00:20:28,476
I don't think I need
this Info panel anymore.


438
00:20:28,746 --> 00:20:30,756
It's just too much information.


439
00:20:30,756 --> 00:20:32,406
I'd like to really focus
just on the trailers.


440
00:20:32,476 --> 00:20:35,716
So to find out where this
menu-- this info element is,


441
00:20:35,906 --> 00:20:38,106
instead of inspecting--
using the Inspect button,


442
00:20:38,356 --> 00:20:41,156
I'm going to just rollover to
various elements in the tree


443
00:20:41,386 --> 00:20:42,826
and instantly, it will point


444
00:20:43,216 --> 00:20:45,006
to where these are
painted on the page.


445
00:20:45,316 --> 00:20:47,756
And until I find the right
element which is this one,


446
00:20:48,656 --> 00:20:51,956
I'll just poke around,
select it, and delete it.


447
00:20:52,246 --> 00:20:54,156
Again, I can undo
this by just doing--


448
00:20:54,156 --> 00:20:56,056
pressing Command-Z and redo it.


449
00:20:56,396 --> 00:20:57,686
So even destructive changes


450
00:20:57,686 --> 00:21:00,276
like that is something you
can go back and correct


451
00:21:00,276 --> 00:21:02,286
if it was not what you wanted.


452
00:21:03,096 --> 00:21:05,996
Okay, things are coming together
because another thing I'd


453
00:21:05,996 --> 00:21:09,116
like to do is to have the
page really match the viewport


454
00:21:09,116 --> 00:21:09,626
of iPhone.


455
00:21:09,996 --> 00:21:12,526
I should make sure that it has
the right viewport setting.


456
00:21:13,016 --> 00:21:15,566
So let me click on the
head here, and I'm going


457
00:21:15,566 --> 00:21:18,236
to use another great feature
of Web Inspector and just


458
00:21:18,236 --> 00:21:21,906
like you can free form
CSSEdit, you can edit HTML


459
00:21:21,906 --> 00:21:23,066
into free form way as well.


460
00:21:23,186 --> 00:21:26,236
So I'm going to Control click
to bring up the Contextual menu


461
00:21:26,826 --> 00:21:28,646
and press Edit as HTML.


462
00:21:29,116 --> 00:21:32,436
And what this will bring up
is the small HTML editor right


463
00:21:32,436 --> 00:21:36,956
within my page again and I can
just start typing name viewport


464
00:21:37,366 --> 00:21:40,916
content equals width
equals device width,


465
00:21:41,396 --> 00:21:44,996
and just to press
Tab to make it work


466
00:21:45,266 --> 00:21:47,176
and there it goes,
it applied directly.


467
00:21:47,426 --> 00:21:51,306
Awesome! So you notice there are
two things are just wrong now.


468
00:21:51,626 --> 00:21:53,576
First of all, the menu
is completely gone.


469
00:21:53,676 --> 00:21:54,376
I don't know where it went.


470
00:21:54,376 --> 00:21:55,606
We'll get back to
that in a second.


471
00:21:55,606 --> 00:21:58,286
It's also there's annoying
margins around the image.


472
00:21:58,456 --> 00:22:00,336
That's just something I
need to touch on the body


473
00:22:00,696 --> 00:22:03,426
and I can edit the style
of the body super simply,


474
00:22:03,626 --> 00:22:06,226
I can just type here and
it's just ready to go.


475
00:22:06,226 --> 00:22:11,276
So let me just type margin and
the CSS Editor auto-completes,


476
00:22:11,276 --> 00:22:13,096
it knows all the
properties are--


477
00:22:13,616 --> 00:22:17,186
that are available inside
of WebKit and in fact,


478
00:22:17,186 --> 00:22:18,716
it all knows all the
properties that are available


479
00:22:18,716 --> 00:22:20,226
to this specific
version of WebKit


480
00:22:20,276 --> 00:22:22,536
because Web Inspector
talks to WebKit directly,


481
00:22:22,796 --> 00:22:24,786
it's like your window
inside a WebKit.


482
00:22:25,336 --> 00:22:29,416
So let me use Autocompletion
here and type 0--


483
00:22:29,416 --> 00:22:32,466
let me just zoom out so you
can see, as I press 0, again,


484
00:22:32,636 --> 00:22:33,936
instantly, changes are made.


485
00:22:34,716 --> 00:22:38,216
I'm-- okay, so let's figure
out what happened to the menu.


486
00:22:38,566 --> 00:22:40,826
So, if I select--
hover the menu here,


487
00:22:40,826 --> 00:22:42,816
you'll notice there's nothing
highlighting on the page.


488
00:22:42,816 --> 00:22:44,316
The menu is definitely gone.


489
00:22:45,226 --> 00:22:48,186
So, I can just simply
inspect the CSS to find


490
00:22:48,186 --> 00:22:50,146
out when we had-- what
may have happened.


491
00:22:50,446 --> 00:22:52,716
And I'll notice here that
I have a left property set


492
00:22:52,716 --> 00:22:56,026
up on the menu to be
something slightly convoluted


493
00:22:56,026 --> 00:22:58,066
but let me explain to
you, what it does is


494
00:22:58,066 --> 00:22:59,856
that it positions the
menu to the center


495
00:22:59,856 --> 00:23:03,056
and then it will move it
480 pixels to the left.


496
00:23:03,526 --> 00:23:06,476
That was great with the previous
version of the site that we had.


497
00:23:06,686 --> 00:23:08,986
It's no longer accurate for
what we're trying to do now.


498
00:23:09,566 --> 00:23:12,416
We've set up the viewport to be
the device width of the iPhone,


499
00:23:12,416 --> 00:23:16,236
which means it's now 320 pixels,
so these values probably amount


500
00:23:16,236 --> 00:23:17,576
to something that's
going to be negative


501
00:23:17,676 --> 00:23:19,286
and our menu is just off page.


502
00:23:19,596 --> 00:23:20,956
So to validate this theory,


503
00:23:21,136 --> 00:23:22,696
I won't even have
to write any code.


504
00:23:22,696 --> 00:23:26,136
What I'm just going to do is
click on the checkbox next


505
00:23:26,136 --> 00:23:28,816
to the rule and that's going
to comment it out temporarily.


506
00:23:29,066 --> 00:23:31,766
So let me just click on
it and here, directly,


507
00:23:31,766 --> 00:23:33,396
you can see that without
that left property,


508
00:23:33,606 --> 00:23:35,066
everything looks
like what I expect.


509
00:23:35,466 --> 00:23:37,886
So, I'm just going to keep
that and I also I want


510
00:23:37,886 --> 00:23:41,176
to change the top value to be 0.


511
00:23:41,996 --> 00:23:45,456
And let me change the
width to be 100 percent,


512
00:23:46,336 --> 00:23:48,856
and now my menu is starting
to look like what I want.


513
00:23:49,866 --> 00:23:53,356
Okay, it'd be great if it was
just a slightly more revealing


514
00:23:53,356 --> 00:23:54,666
of the background
and I think it's hard


515
00:23:54,666 --> 00:23:56,836
to tell what the background
looks like at this stage.


516
00:23:57,296 --> 00:24:00,546
So here again, I'm going to use
a DOM tree, use the arrow keys


517
00:24:00,546 --> 00:24:02,896
to navigate until I find
the things I want to edit.


518
00:24:03,236 --> 00:24:05,546
Here, I'd like to change
the title to just say


519
00:24:06,266 --> 00:24:07,606
"Trailers," not view trailers.


520
00:24:07,716 --> 00:24:10,286
Again, just double-click,
edit, return, you're done.


521
00:24:10,976 --> 00:24:12,236
And let me [inaudible] as well.


522
00:24:12,766 --> 00:24:14,436
Here, again, super simple.


523
00:24:14,986 --> 00:24:17,896
Start typing text-align,
press Escape


524
00:24:17,896 --> 00:24:19,986
and it automatically knows
all the values I can use


525
00:24:19,986 --> 00:24:20,586
for this property.


526
00:24:20,586 --> 00:24:22,126
So let's go with center.


527
00:24:23,446 --> 00:24:24,656
Okay, much better.


528
00:24:24,656 --> 00:24:27,396
Let me just make it a
little bit less opaque.


529
00:24:27,396 --> 00:24:28,846
And so to do that, I'm going


530
00:24:28,846 --> 00:24:30,766
to use another great
feature of Web Inspector.


531
00:24:31,316 --> 00:24:33,546
And since I'm editing
a numeric value here,


532
00:24:33,546 --> 00:24:36,246
I can use the Option
key and the Arrow keys


533
00:24:36,486 --> 00:24:38,366
and I can just start
decrementing


534
00:24:38,446 --> 00:24:39,886
and incrementing this value.


535
00:24:39,886 --> 00:24:42,006
So I'm going to zoom out so
you can see it in real time,


536
00:24:42,306 --> 00:24:45,246
option down, option up.


537
00:24:46,366 --> 00:24:49,446
Okay, I got-- and again,
instantly, instant feedback


538
00:24:49,636 --> 00:24:50,846
about the content on the page.


539
00:24:51,346 --> 00:24:53,746
And let me change in
the similar fashion,


540
00:24:54,036 --> 00:24:56,606
the gradient applied
to the menu content.


541
00:24:57,916 --> 00:24:59,326
Okay, how does it look?


542
00:24:59,326 --> 00:25:00,726
It's a lot more revealing.


543
00:25:00,866 --> 00:25:01,566
We're getting there.


544
00:25:01,636 --> 00:25:04,016
And the last thing I want
to do, like I told you,


545
00:25:04,016 --> 00:25:07,246
is I want to get rid-- I want
to make the background blurred


546
00:25:07,246 --> 00:25:09,806
so that it looks like
an iOS 7 backdrop.


547
00:25:10,446 --> 00:25:13,186
So, I want to hide the
menu here so I can focus


548
00:25:13,186 --> 00:25:14,966
in the background,
and it's really easy


549
00:25:14,966 --> 00:25:15,996
to do in Web Inspector.


550
00:25:16,236 --> 00:25:18,066
There's a key shortcut
you can use at anytime


551
00:25:18,066 --> 00:25:20,936
when you select an element
in the tree and just press H


552
00:25:20,936 --> 00:25:22,836
and it's going to
disappear temporarily,


553
00:25:22,976 --> 00:25:25,386
we'll just apply some style
to make it not visible.


554
00:25:25,936 --> 00:25:31,486
Okay, so let's select the
image and I'll add a new rule


555
00:25:31,486 --> 00:25:34,546
to that image and automatically,
it creates the selector


556
00:25:34,546 --> 00:25:35,676
that matches that element.


557
00:25:36,146 --> 00:25:42,996
And let me type webkit-filter:
blur.


558
00:25:43,666 --> 00:25:46,076
And so, let's play around
with that blur a little bit.


559
00:25:46,296 --> 00:25:47,886
Let's start with five pixels.


560
00:25:47,886 --> 00:25:50,636
And here, again, I'll adjust
it with the Option key


561
00:25:50,636 --> 00:25:53,616
and the arrows until I get
the right amount of blur.


562
00:25:53,736 --> 00:25:55,216
I think 10 pixels
just looks awesome.


563
00:25:55,786 --> 00:25:56,976
Okay, I think we're done.


564
00:25:57,496 --> 00:26:00,246
Let's go back to the Menu,
press H to turn it back on.


565
00:26:00,986 --> 00:26:03,336
It's almost right but
there's something wrong.


566
00:26:03,676 --> 00:26:05,476
The images are blurred
here as well.


567
00:26:05,706 --> 00:26:08,566
And if you've paid attention,
you'll notice that the rule


568
00:26:08,566 --> 00:26:11,516
that we added for the image
was a little bit too generic.


569
00:26:11,806 --> 00:26:13,006
So let's change it.


570
00:26:13,316 --> 00:26:14,696
Here, instead of having image,


571
00:26:15,136 --> 00:26:16,536
we want to have a
more specific rule.


572
00:26:16,536 --> 00:26:18,686
So let me just cut
this property,


573
00:26:19,256 --> 00:26:22,606
add an ID to this element


574
00:26:22,606 --> 00:26:25,286
so that we target just the
background specifically,


575
00:26:25,936 --> 00:26:28,026
add a new rule again,
and this time,


576
00:26:28,076 --> 00:26:30,466
it will create an even
more accurate selector


577
00:26:30,466 --> 00:26:34,206
for this element because it
knows that it's specific image,


578
00:26:34,206 --> 00:26:35,616
it's an image with
ID background.


579
00:26:35,856 --> 00:26:38,796
So let me paste the new rule
and you'll notice as soon


580
00:26:38,796 --> 00:26:41,006
as I paste the new rule,
the background will blur


581
00:26:41,006 --> 00:26:42,416
and the content will
remain sharp.


582
00:26:43,666 --> 00:26:45,066
Perfect! This is it.


583
00:26:45,066 --> 00:26:45,886
This is what I wanted


584
00:26:46,146 --> 00:26:48,236
and I could do it all
within Web Inspector.


585
00:26:48,236 --> 00:26:50,346
I never had to switch
back to my Text Editor,


586
00:26:50,636 --> 00:26:52,906
never had to reload, this all--


587
00:26:52,906 --> 00:26:53,956
I could just experiment


588
00:26:53,956 --> 00:26:55,796
to my heart's content
within Web Inspector.


589
00:26:55,956 --> 00:26:56,896
Mission accomplished.


590
00:27:00,876 --> 00:27:05,176
Okay, let's recap
what we just did,


591
00:27:05,346 --> 00:27:07,396
inspection tweaking
experimentation.


592
00:27:07,896 --> 00:27:10,516
Well, the first thing is as
soon as we open Web Inspector,


593
00:27:10,516 --> 00:27:14,166
you were presented with the
DOM view of the web page.


594
00:27:14,516 --> 00:27:17,336
And if you think back to
viewer source which has been


595
00:27:17,336 --> 00:27:20,176
around forever ever since
browser existed, this is kind


596
00:27:20,176 --> 00:27:22,626
of the same approach
except everything you can do


597
00:27:22,626 --> 00:27:24,206
with this source is live.


598
00:27:24,296 --> 00:27:27,346
You can edit it right away
and all the changes will show


599
00:27:27,346 --> 00:27:29,226
up instantly on your web page.


600
00:27:29,276 --> 00:27:30,086
It's just so cool.


601
00:27:31,106 --> 00:27:33,666
And what's really great about
it is that you never had


602
00:27:33,706 --> 00:27:34,566
to leave Web Inspector.


603
00:27:34,566 --> 00:27:37,646
You can tweak and you never
have to reload or rebuild.


604
00:27:37,716 --> 00:27:40,826
Again, think about
building an app using Xcode


605
00:27:41,006 --> 00:27:43,706
that has web content, you
would have to usually rebuild.


606
00:27:43,706 --> 00:27:44,606
Here, you don't have to.


607
00:27:44,606 --> 00:27:46,926
You just use Web Inspector,
connect to your iOS device,


608
00:27:47,066 --> 00:27:47,816
and you're good to go.


609
00:27:48,896 --> 00:27:51,816
And it was really easy to find
the content that we wanted


610
00:27:51,816 --> 00:27:54,606
to inspect by using two
different techniques.


611
00:27:54,686 --> 00:27:56,866
The first one is we used the
Inspect button from the toolbar


612
00:27:56,866 --> 00:27:59,146
and just tapped on the item
on the page that we wanted


613
00:27:59,146 --> 00:28:01,906
to inspect and it revealed
immediately in Web Inspector.


614
00:28:02,616 --> 00:28:05,526
And another way you can do it is
to do it the other way around.


615
00:28:05,826 --> 00:28:07,816
You want to select
things in the DOM tree


616
00:28:07,816 --> 00:28:09,976
and see what they
match on the web page.


617
00:28:10,126 --> 00:28:12,276
And so you can just hover
DOM nodes in the DOM tree


618
00:28:12,396 --> 00:28:14,846
and they'll highlight right away
on your page and your device.


619
00:28:15,036 --> 00:28:15,726
That's really great.


620
00:28:16,616 --> 00:28:20,996
And finally, anywhere you see
code, whether it's CSS or HTML,


621
00:28:21,246 --> 00:28:23,536
we're just able to
click and start typing.


622
00:28:23,786 --> 00:28:27,226
And in the case of CSS, it
knew all about the support of--


623
00:28:27,226 --> 00:28:29,266
the support of CSS
properties on our page


624
00:28:29,506 --> 00:28:31,456
and it let us have
autocompletion,


625
00:28:31,546 --> 00:28:32,446
syntax highlighting.


626
00:28:32,446 --> 00:28:35,126
It's just such a great
editing experience right


627
00:28:35,126 --> 00:28:35,986
within Web Inspector.


628
00:28:36,806 --> 00:28:40,996
And so, I really think
this idea of experimenting


629
00:28:40,996 --> 00:28:44,116
with Web Inspector is something
that's just so much fun


630
00:28:44,116 --> 00:28:46,926
and it's a great way to learn
about the capabilities of CSS


631
00:28:46,926 --> 00:28:49,096
in the browser that
you're inspecting.


632
00:28:49,556 --> 00:28:52,046
And just this morning at 9
a.m., you may have seen it.


633
00:28:52,046 --> 00:28:54,246
If you've missed it, you
can catch it later on video.


634
00:28:54,246 --> 00:28:56,186
It was a great session
and we went through a lot


635
00:28:56,186 --> 00:28:59,356
of new CSS features made
available in Safari 7


636
00:28:59,606 --> 00:29:01,396
and Safari on iOS and iOS 7.


637
00:29:01,686 --> 00:29:03,666
The session was named "What's
new in Safari and WebKit


638
00:29:03,666 --> 00:29:05,976
for web developers," and I
urge you to check it out.


639
00:29:05,976 --> 00:29:07,556
It got some great CSS content


640
00:29:07,636 --> 00:29:09,146
and some great things
you could experiment


641
00:29:09,146 --> 00:29:10,616
with within Web Inspector.


642
00:29:11,216 --> 00:29:14,006
And if you stay in this
room right after this talk,


643
00:29:14,236 --> 00:29:16,396
we're going to go in
much greater details


644
00:29:16,666 --> 00:29:19,506
about inspection tweaking
within Web Inspector.


645
00:29:19,506 --> 00:29:21,156
We've only really
scratched the surface here.


646
00:29:21,156 --> 00:29:24,276
There are so much more to see
so stay tuned and we'll get--


647
00:29:24,276 --> 00:29:25,296
we'll show you a lot more.


648
00:29:26,176 --> 00:29:28,126
So, that was inspection
tweaking.


649
00:29:28,626 --> 00:29:30,566
Now, let's move to network
performance analysis.


650
00:29:30,966 --> 00:29:34,306
And here again, I'd like to
tell you just a little bit


651
00:29:34,306 --> 00:29:34,996
of a story here.


652
00:29:35,966 --> 00:29:38,956
I think we're all here aware


653
00:29:38,956 --> 00:29:41,786
that mobile devices are a
really important target.


654
00:29:41,986 --> 00:29:45,066
It's how a lot of people--
it's, you know, I have my device


655
00:29:45,066 --> 00:29:46,556
in my pocket, I hear
about something,


656
00:29:46,556 --> 00:29:47,696
I want to check it
out right away.


657
00:29:47,696 --> 00:29:49,656
I don't want to wait
until I'm at my desktop.


658
00:29:49,856 --> 00:29:51,346
I just want to go and
look at it right away.


659
00:29:51,866 --> 00:29:55,056
And so, a great experience
in mobile is an experience


660
00:29:55,056 --> 00:29:56,336
where things load quick.


661
00:29:56,686 --> 00:29:58,916
And a way to get things to
load quick on your web page


662
00:29:59,036 --> 00:30:02,556
or your web content in your
iOS app is to have as little


663
00:30:02,556 --> 00:30:03,976
and as few resources
as possible.


664
00:30:04,136 --> 00:30:06,386
That's a great way
to get started.


665
00:30:06,386 --> 00:30:09,896
So, obviously, you have to
have an HTML page, some CSS


666
00:30:09,896 --> 00:30:12,066
and some JavaScript if you
want it to look really good,


667
00:30:12,396 --> 00:30:14,326
and you also want it to
be a little interactive.


668
00:30:14,856 --> 00:30:17,586
And you also want to
distinguish yourself


669
00:30:17,586 --> 00:30:19,276
from other web pages
and, et cetera


670
00:30:19,276 --> 00:30:21,806
and have a little themeing
so you have some images,


671
00:30:21,806 --> 00:30:23,796
maybe one, maybe more than that.


672
00:30:23,956 --> 00:30:26,346
And if you manage to keep
it down to this small number


673
00:30:26,346 --> 00:30:28,616
of resources, you're
probably on the right path.


674
00:30:29,306 --> 00:30:31,646
But I don't think this is
something that we can deal


675
00:30:31,646 --> 00:30:33,046
with in the real world so much.


676
00:30:33,916 --> 00:30:37,246
The expectations of devices
like iOS device is just so high


677
00:30:37,246 --> 00:30:39,586
in terms of quality and
experience and the capabilities


678
00:30:39,586 --> 00:30:44,266
of those devices are
just so astounding


679
00:30:44,266 --> 00:30:47,826
and improved every year
that we want to do more.


680
00:30:48,406 --> 00:30:50,896
So then, you'll probably start
using some JavaScript library


681
00:30:50,896 --> 00:30:53,966
from the network and maybe some
other images that you're loading


682
00:30:53,966 --> 00:30:55,836
from a third-party
service and then you're--


683
00:30:56,946 --> 00:30:59,656
surely enough, you're starting
to have a lot more resources.


684
00:31:00,476 --> 00:31:01,316
And on top of that,


685
00:31:01,316 --> 00:31:03,716
those resources may not
be under your control.


686
00:31:03,996 --> 00:31:06,386
Again, you may be using some
JavaScript library loaded


687
00:31:06,386 --> 00:31:08,496
from a CDN or images
from Flickr.


688
00:31:08,886 --> 00:31:10,586
And these are not
things that you control,


689
00:31:10,586 --> 00:31:12,706
you don't know exactly what
size is going to be in advance


690
00:31:12,766 --> 00:31:15,156
or the quality of the service
is going to serve them.


691
00:31:15,826 --> 00:31:18,226
And this is just kind
of a complex situation.


692
00:31:18,226 --> 00:31:20,506
And it would be really
cool if you could just find


693
00:31:20,506 --> 00:31:21,886
out how things get loaded


694
00:31:22,086 --> 00:31:24,786
and understand what could
be potentially a load issue


695
00:31:24,786 --> 00:31:27,866
with your page that would impact
the initial user experience


696
00:31:27,866 --> 00:31:28,406
for a user.


697
00:31:29,226 --> 00:31:31,166
Well, this is when Web
Inspector comes in.


698
00:31:31,396 --> 00:31:33,366
And using the Timeline's
panel, we're going to look


699
00:31:33,366 --> 00:31:35,916
at how we can keep track of
resources using Web Inspector.


700
00:31:36,466 --> 00:31:38,786
So for this demo,
I'm going to go back


701
00:31:38,906 --> 00:31:41,626
to the developer.apple.com,
WWDC page.


702
00:31:42,546 --> 00:31:45,676
So load it up in the
simulator, switch to Safari,


703
00:31:46,446 --> 00:31:47,516
bring up Web Inspector,


704
00:31:49,066 --> 00:31:50,916
and let's switch the
Timeline's panel.


705
00:31:50,916 --> 00:31:53,086
This is what we're
interested in this section.


706
00:31:53,156 --> 00:31:56,336
And the first thing you'll
notice as it loads is


707
00:31:56,336 --> 00:31:57,486
that it's completely empty.


708
00:31:58,136 --> 00:32:01,516
Well, the reason it is empty is
that for the Timeline's panel


709
00:32:01,516 --> 00:32:04,746
to load with useful
content, WebKit needs


710
00:32:04,746 --> 00:32:06,446
to run some special
instrumentation


711
00:32:06,596 --> 00:32:09,086
on the page as it
loads and runs.


712
00:32:09,686 --> 00:32:12,766
And we don't want you to be
running this code at all times.


713
00:32:12,766 --> 00:32:15,306
We only want to run this code
in WebKit when it makes sense.


714
00:32:15,586 --> 00:32:17,036
It might have some
performance issues.


715
00:32:17,036 --> 00:32:18,886
It's only really useful
for instrumentation.


716
00:32:19,176 --> 00:32:21,156
So, what we're going to
do here is we're going


717
00:32:21,156 --> 00:32:23,366
to reload the page
with Web Inspector open


718
00:32:23,466 --> 00:32:26,286
and the Timeline would populate
as soon as we start loading.


719
00:32:26,416 --> 00:32:28,536
The other thing I'd
like to point out is


720
00:32:28,536 --> 00:32:31,166
that not only can I do
Command-R to reload the page,


721
00:32:31,226 --> 00:32:34,536
I can even do Command-shift-R
and what this will do is


722
00:32:34,536 --> 00:32:36,976
that it will reload the page
while ignoring the cache.


723
00:32:37,246 --> 00:32:38,426
This is very important
if we want


724
00:32:38,426 --> 00:32:40,116
to diagnose network
related issues,


725
00:32:40,356 --> 00:32:42,996
we want to test the full load
of the page and not just things


726
00:32:43,256 --> 00:32:44,316
that haven't been cached yet.


727
00:32:44,746 --> 00:32:47,716
So, Command-shift-R,
page starts reloading


728
00:32:48,156 --> 00:32:49,626
and the Timeline is populating.


729
00:32:50,026 --> 00:32:51,286
Okay, recording is done,


730
00:32:51,986 --> 00:32:53,226
and this is what
we're presented with.


731
00:32:53,276 --> 00:32:55,796
So, we're going to look
at this in more details.


732
00:32:56,506 --> 00:32:59,966
The first thing I want to show
you is that these timelines here


733
00:32:59,966 --> 00:33:03,346
at the top are split in
three different categories.


734
00:33:03,826 --> 00:33:07,776
There's first, network request
in blue, layout and rendering


735
00:33:07,866 --> 00:33:10,416
in purple, and JavaScript
events in orange.


736
00:33:10,716 --> 00:33:12,976
For the purpose of this talk,


737
00:33:12,976 --> 00:33:14,976
we're going to focus
on network request.


738
00:33:15,286 --> 00:33:17,116
In the second session
right after this one,


739
00:33:17,296 --> 00:33:19,676
we'll go in much greater
detail in the layout


740
00:33:19,676 --> 00:33:20,676
and rendering section.


741
00:33:20,676 --> 00:33:22,406
So if you want to find
out more, stay tuned.


742
00:33:23,246 --> 00:33:25,606
So let's get rid of
this sidebar for now.


743
00:33:25,606 --> 00:33:27,146
We want to focus on the content.


744
00:33:27,876 --> 00:33:31,686
Hide this, and you'll
notice first


745
00:33:32,046 --> 00:33:36,376
that we can see there is
some color coding in the list


746
00:33:36,376 --> 00:33:37,816
of resources loaded right here.


747
00:33:38,186 --> 00:33:41,796
Blue means an HTML page,
green means the CSS page,


748
00:33:42,176 --> 00:33:45,166
orange means the
JavaScript piece of script,


749
00:33:45,676 --> 00:33:47,006
and purple means images.


750
00:33:47,136 --> 00:33:49,136
So, at a glance, you
can tell what's loading


751
00:33:49,136 --> 00:33:50,656
without necessarily
having to look


752
00:33:50,656 --> 00:33:51,636
at the name of the resource.


753
00:33:51,766 --> 00:33:52,346
It's really handy.


754
00:33:53,846 --> 00:33:56,886
Okay, so another thing that
I'd like to point out is


755
00:33:56,886 --> 00:34:00,996
that I'm actually simulating
a 3G network on this computer,


756
00:34:01,306 --> 00:34:03,926
so that it doesn't looks
as fast it would be


757
00:34:04,146 --> 00:34:05,546
on a hardware network.


758
00:34:06,276 --> 00:34:10,426
And when you're using
3G networks or worse


759
00:34:10,426 --> 00:34:14,646
if you're using an EDGE network,
latency can be a big problem.


760
00:34:15,096 --> 00:34:16,846
And for those who are
not aware with this term,


761
00:34:16,906 --> 00:34:19,766
latency is the amount
of time that elapses


762
00:34:19,766 --> 00:34:22,326
between the moment
WebKit asks for resource


763
00:34:22,606 --> 00:34:24,966
and the moment the server
starts coming back to us


764
00:34:25,216 --> 00:34:26,976
with the resource and
when it starts loading.


765
00:34:27,466 --> 00:34:29,766
And latency might be
a lot more important


766
00:34:29,766 --> 00:34:30,936
than the actual load time.


767
00:34:31,146 --> 00:34:34,426
The 3G network is usually pretty
fast downloading content once


768
00:34:34,426 --> 00:34:36,676
it's established the
connection with the server.


769
00:34:37,266 --> 00:34:39,446
So, to illustrate that
a little bit better,


770
00:34:39,706 --> 00:34:43,436
let me select the first item on
the page which is the HTML page,


771
00:34:43,666 --> 00:34:45,616
let me select it, let me get rid


772
00:34:45,616 --> 00:34:47,056
of the Resource sidebar
for a moment.


773
00:34:47,896 --> 00:34:51,016
And you'll notice
here that the item


774
00:34:51,016 --> 00:34:52,846
on the timeline split
in two sections.


775
00:34:53,146 --> 00:34:55,206
First is a semitransparent
section


776
00:34:55,556 --> 00:34:57,025
and a fully opaque section.


777
00:34:57,556 --> 00:35:00,696
The transparent section
is latency, and it's just


778
00:35:00,696 --> 00:35:02,706
so much more than the
actual download time


779
00:35:02,706 --> 00:35:09,956
of 376 milliseconds out of
a total of 412 milliseconds.


780
00:35:10,276 --> 00:35:12,036
That's just a lot
of time spent with--


781
00:35:12,136 --> 00:35:15,816
just waiting on assets to
actually start downloading.


782
00:35:16,476 --> 00:35:19,306
So this is a good indication
of how important it is to try


783
00:35:19,306 --> 00:35:21,736
to reduce the amount of
resources you have on your page.


784
00:35:21,976 --> 00:35:25,226
So, if you're using CSS in
multiple files or JavaScript


785
00:35:25,226 --> 00:35:28,806
in multiple files, maybe you
should consider concatenating


786
00:35:28,806 --> 00:35:31,746
them into a single asset so that
you have fewer assets to deal


787
00:35:31,746 --> 00:35:34,306
with and this will improve
the load time significantly.


788
00:35:35,486 --> 00:35:38,726
Okay, so let's keep looking at
the timeline and find out more.


789
00:35:39,616 --> 00:35:40,656
You'll notice that there seems


790
00:35:40,656 --> 00:35:42,326
to be a sequence of
things happening.


791
00:35:42,836 --> 00:35:44,686
We have this first
resource loading upfront,


792
00:35:45,166 --> 00:35:47,226
and then other resources
loading after that.


793
00:35:47,226 --> 00:35:49,246
Why do they load
only after the HTML?


794
00:35:49,536 --> 00:35:50,616
Well, that's pretty obvious.


795
00:35:50,856 --> 00:35:53,156
The HTML will link
to CSS resources,


796
00:35:53,326 --> 00:35:54,866
JavaScript files, and images.


797
00:35:55,166 --> 00:35:57,846
And until we've loaded
and parsed the HTML page,


798
00:35:58,086 --> 00:35:59,936
we don't what other
content we need to load.


799
00:36:00,656 --> 00:36:03,666
So there's a sequence here
and a dependency established


800
00:36:03,666 --> 00:36:06,546
on the HTML to load these
first two style sheets,


801
00:36:07,286 --> 00:36:10,066
these few JavaScript
files, the CSS file,


802
00:36:10,066 --> 00:36:11,106
and a couple more images.


803
00:36:11,756 --> 00:36:14,316
And this is the core content
of the page, it's the content


804
00:36:14,316 --> 00:36:16,146
that the page needs
to load upfront


805
00:36:16,346 --> 00:36:19,156
to make sure it instantly has a
great experience to get going.


806
00:36:19,936 --> 00:36:21,036
And so, that's a great approach.


807
00:36:21,096 --> 00:36:23,606
You want to have your initial
content load right upfront


808
00:36:23,816 --> 00:36:26,146
and any secondary
content load afterwards.


809
00:36:26,146 --> 00:36:28,526
And in fact, this is
what this website does.


810
00:36:28,846 --> 00:36:31,626
You will notice there is another
sequence of images load--


811
00:36:31,626 --> 00:36:33,396
of images loading later on.


812
00:36:33,596 --> 00:36:38,066
And these are queued by a style
sheet as only loaded afterwards,


813
00:36:38,426 --> 00:36:40,906
so that we first get the
main part of the web page.


814
00:36:40,906 --> 00:36:45,256
So these will be
the big WWDC image.


815
00:36:46,396 --> 00:36:49,006
And more or less interesting
images will be loaded


816
00:36:49,006 --> 00:36:49,506
right after.


817
00:36:49,506 --> 00:36:50,496
So we can jump and see


818
00:36:50,496 --> 00:36:54,146
for example here we have a
little Apple logo but it's not


819
00:36:54,146 --> 00:36:57,456
as important as in the great
WWDC logo in the middle.


820
00:36:58,376 --> 00:37:00,676
Okay, so that was a brief
overview of the timeline


821
00:37:00,676 --> 00:37:01,916
for networking resources.


822
00:37:02,456 --> 00:37:12,096
And what we saw here is how we
can visually see on the page


823
00:37:12,096 --> 00:37:14,516
with a great graphical
representation how different


824
00:37:14,516 --> 00:37:16,266
resources load on a timeline.


825
00:37:16,566 --> 00:37:19,596
So we don't have to guess, we
don't have to look at a table


826
00:37:19,596 --> 00:37:22,256
where it just lists start time,
end time, or anything like that,


827
00:37:22,486 --> 00:37:24,216
we can just visualize
those things,


828
00:37:24,296 --> 00:37:26,206
and that's really
makes us understand


829
00:37:26,206 --> 00:37:28,866
at a glance how things get
organized on a page and load.


830
00:37:29,586 --> 00:37:31,646
And the second thing is
that we make it really easy


831
00:37:31,646 --> 00:37:34,036
to distinguish latency
and the download time.


832
00:37:34,126 --> 00:37:36,786
Again, latency is not your
friend on the mobile network.


833
00:37:37,006 --> 00:37:40,056
It's important that you try to
avoid having too many resources


834
00:37:40,346 --> 00:37:42,306
and you can figure that
out really easily using


835
00:37:42,306 --> 00:37:42,936
Web Inspector.


836
00:37:43,866 --> 00:37:47,556
And thirdly, we could
really identify dependencies


837
00:37:47,586 --> 00:37:49,786
and the sequence of how
things load on the page.


838
00:37:50,026 --> 00:37:52,196
And this is really great
because, like I said,


839
00:37:52,196 --> 00:37:54,136
you really want to make sure
your initial content loads


840
00:37:54,136 --> 00:37:57,476
upfront and any second secondary
content only loads afterwards


841
00:37:57,716 --> 00:38:00,596
so that your initial content
loads as fast as possible.


842
00:38:01,056 --> 00:38:03,886
And to validate that technique,
you can use Web Inspector


843
00:38:03,886 --> 00:38:06,386
and its timeline to
make sure things load


844
00:38:06,386 --> 00:38:07,576
in the sequence you expect.


845
00:38:09,276 --> 00:38:11,116
So again, stay tuned.


846
00:38:11,246 --> 00:38:12,776
On the next session,
we'll have lot more


847
00:38:12,776 --> 00:38:15,146
about the Timelines
panel, we'll be looking


848
00:38:15,146 --> 00:38:16,026
at layout and rendering.


849
00:38:16,026 --> 00:38:17,016
So, if you want to
find out more,


850
00:38:17,016 --> 00:38:18,386
stay in this room
for the next session.


851
00:38:19,206 --> 00:38:20,926
And on the topic of performance,


852
00:38:20,986 --> 00:38:24,606
even though it's not directly
related to network performance


853
00:38:24,606 --> 00:38:27,016
and more about layout
and rendering,


854
00:38:27,236 --> 00:38:29,776
there's a great talk tomorrow
morning, we'll be discussing how


855
00:38:29,776 --> 00:38:32,526
to optimize power and
performance for your web page,


856
00:38:32,716 --> 00:38:34,566
9 a.m. in Russian
Hill, be there.


857
00:38:35,226 --> 00:38:35,716
I will be.


858
00:38:37,026 --> 00:38:39,256
Okay, let's jump to the
last section, debugging.


859
00:38:39,906 --> 00:38:42,486
And here, again, we're going
to go straight into a demo


860
00:38:42,486 --> 00:38:44,076
and see how we can
use Web Inspector


861
00:38:44,316 --> 00:38:46,766
to debug issues with
our JavaScript.


862
00:38:48,636 --> 00:38:52,286
So, for this specific demo,
I've prepared an update


863
00:38:52,566 --> 00:38:54,816
on the initial demo
that we we're looking


864
00:38:54,816 --> 00:38:56,426
at for Monsters University.


865
00:38:56,746 --> 00:38:58,266
So let me jump straight
to that page.


866
00:38:58,726 --> 00:39:01,456
And what I did here is that
is wanted to go further


867
00:39:01,456 --> 00:39:05,296
in the iOS 7 experience
and provide a new header


868
00:39:05,296 --> 00:39:08,656
with white background and
I wanted the user to have


869
00:39:08,656 --> 00:39:11,636
to tap this back--
to tap this header


870
00:39:11,696 --> 00:39:13,586
such that it would reveal
the list of trailers


871
00:39:13,586 --> 00:39:14,786
with a neat little animation.


872
00:39:15,796 --> 00:39:19,266
Okay, so, again, bring
up Web Inspector,


873
00:39:19,776 --> 00:39:24,816
jump to Resources sidebar,
reveal our HTML page,


874
00:39:25,786 --> 00:39:28,516
and what we did here is
that we added a little piece


875
00:39:28,516 --> 00:39:33,166
of JavaScript whose role is
to toggle a specific CSS class


876
00:39:33,536 --> 00:39:36,146
on the documents body, the class
is called Showing Trailers.


877
00:39:36,526 --> 00:39:38,746
And let me just see
what that would look


878
00:39:38,746 --> 00:39:39,666
like when it's applied.


879
00:39:39,666 --> 00:39:41,546
And I can do that very easily.


880
00:39:41,546 --> 00:39:43,296
I'll jump to the DOM tree
from the source code.


881
00:39:43,296 --> 00:39:47,756
I'm going to select the body,
edit as HTML, and I'm going


882
00:39:47,756 --> 00:39:51,506
to add the CSS class on it so
you can see what it will look


883
00:39:51,506 --> 00:39:53,366
like when the CSS
class is applied.


884
00:39:53,366 --> 00:39:55,746
I'm going to hit Tab and
you'll notice immediately


885
00:39:55,746 --> 00:39:58,326
on the site how it
changes the rendering.


886
00:39:58,366 --> 00:40:00,246
And so, we have an
animation going


887
00:40:00,246 --> 00:40:00,976
as soon as we add this class.


888
00:40:01,446 --> 00:40:05,836
Let me undo it, redo
it, and you'll notice


889
00:40:05,836 --> 00:40:08,296
as we have this animation,
the background will blur


890
00:40:08,526 --> 00:40:09,926
and the content will slide down.


891
00:40:10,236 --> 00:40:11,326
So, this is kind of cool.


892
00:40:12,346 --> 00:40:14,076
Let's see if this
actually works.


893
00:40:14,466 --> 00:40:16,086
So, I'm going to reload the page


894
00:40:16,816 --> 00:40:18,466
and the first thing
you'll notice is


895
00:40:18,466 --> 00:40:21,456
that in the Activity Viewer, we
now see that we have an error.


896
00:40:22,256 --> 00:40:24,976
Okay, let's bring
up the Quick Console


897
00:40:26,216 --> 00:40:27,896
and we could have brought
that up by just clicking


898
00:40:27,896 --> 00:40:30,296
on the Activity Viewer but here,
I've used the Escape command


899
00:40:30,296 --> 00:40:32,666
so I don't have to get
rid of the source code


900
00:40:32,666 --> 00:40:33,446
that I was looking at.


901
00:40:34,386 --> 00:40:36,886
And you'll notice right there
they will tell me exactly what


902
00:40:36,886 --> 00:40:38,296
went wrong, syntax error,


903
00:40:38,296 --> 00:40:40,506
unexpected token,
closing parenthesis.


904
00:40:41,206 --> 00:40:42,696
This in itself is
not that useful.


905
00:40:42,696 --> 00:40:43,656
I'd have to hunt it down.


906
00:40:44,046 --> 00:40:45,326
But of course, Web
Inspector makes


907
00:40:45,326 --> 00:40:47,496
that easily-- easy as well.


908
00:40:47,666 --> 00:40:50,806
It just tells me what file the
error happened and on what line.


909
00:40:50,996 --> 00:40:53,716
And I can just click on that
and I'm going to zoom out


910
00:40:53,716 --> 00:40:55,676
and I will jump straight
to the line


911
00:40:55,676 --> 00:40:56,976
in question and highlight it.


912
00:40:57,496 --> 00:41:00,516
So, it's red, letting me
know there's an error.


913
00:41:00,976 --> 00:41:03,646
And what's really cool about
any kind of source we show


914
00:41:03,646 --> 00:41:06,176
in Web Inspector is that we
always have syntax highlighting.


915
00:41:06,176 --> 00:41:09,026
So here, if I bring my cursor
to this closing parenthesis


916
00:41:09,026 --> 00:41:10,456
which just seems
to be the problem,


917
00:41:10,986 --> 00:41:12,816
clicking on it will
highlight it in red.


918
00:41:13,366 --> 00:41:15,936
And you'll notice
there's another piece


919
00:41:15,996 --> 00:41:19,576
of code highlighted in red here
and it's the opening brace.


920
00:41:20,746 --> 00:41:24,216
So it looks like this closing
parenthesis is expecting


921
00:41:24,216 --> 00:41:26,476
to match something
else, and sure enough,


922
00:41:26,476 --> 00:41:27,676
in my function declaration,


923
00:41:27,676 --> 00:41:29,936
I forgot to close
using a closing brace.


924
00:41:29,936 --> 00:41:32,946
So, let me type that, and right
away, it will show in blue,


925
00:41:33,176 --> 00:41:34,696
meaning everything is cool.


926
00:41:35,096 --> 00:41:37,416
All right, I probably
fixed my first error.


927
00:41:37,716 --> 00:41:41,586
So, let me just reload
the page and it seems


928
00:41:41,586 --> 00:41:42,966
like you have a second error.


929
00:41:43,676 --> 00:41:47,016
So, let me jump again to the
Activity Viewer by just--


930
00:41:47,016 --> 00:41:48,836
by the console-- sorry,
by clicking on it.


931
00:41:49,896 --> 00:41:52,856
I'm going to bring up the Quick
Console and here, it says--


932
00:41:52,856 --> 00:41:54,996
oh, I forgot to do
something, right.


933
00:41:55,476 --> 00:41:57,536
There's something really great
that I forgot to mention is


934
00:41:57,536 --> 00:42:01,976
that when we add our closing
brace, we actually need to save


935
00:42:01,976 --> 00:42:04,696
that file for-- in order to
be able to reload the page


936
00:42:04,696 --> 00:42:07,136
as script and it needs
to be reevaluated.


937
00:42:07,716 --> 00:42:09,726
So, what I can do here
is, for the first time,


938
00:42:09,976 --> 00:42:13,076
within Web Inspector, I
can just tap Command-S


939
00:42:13,076 --> 00:42:16,486
and because I'm editing a
local file, I'm prompted


940
00:42:16,486 --> 00:42:20,776
to override the existing
file, save it, replace it,


941
00:42:21,536 --> 00:42:23,186
and this file will now be used


942
00:42:23,426 --> 00:42:25,616
as a version that's
loaded by the web page.


943
00:42:25,616 --> 00:42:27,716
So, this time let
me clear the console


944
00:42:27,716 --> 00:42:29,456
by pressing Command-K
and reload.


945
00:42:30,336 --> 00:42:32,056
This time, I will
not get that error,


946
00:42:32,356 --> 00:42:33,886
instead I get a different error.


947
00:42:34,406 --> 00:42:37,706
This time-- this is
the problematic line.


948
00:42:37,916 --> 00:42:40,126
Let me bring up the Quick
Console again using Esc


949
00:42:40,956 --> 00:42:43,226
and it says, "No,
it's not an object."


950
00:42:43,316 --> 00:42:45,776
Okay, let's jump right
again to the error


951
00:42:45,776 --> 00:42:48,266
in question, which
is further up.


952
00:42:48,626 --> 00:42:52,956
Let me scroll up a
little bit, scroll here.


953
00:42:53,606 --> 00:42:57,056
And, okay, so header
is null apparently.


954
00:42:57,286 --> 00:42:58,896
Let me just set a breakpoint


955
00:42:58,896 --> 00:43:00,216
so we can figure
out what's going on.


956
00:43:00,306 --> 00:43:02,436
So, I'm going to bring
up the Debugger sidebar,


957
00:43:02,686 --> 00:43:03,796
set our breakpoint here,


958
00:43:03,796 --> 00:43:06,636
and make sure breakpoints
are enabled by clicking


959
00:43:06,676 --> 00:43:09,336
on these icons right here
which will turn gray to blue,


960
00:43:09,486 --> 00:43:11,616
which means my breakpoint
is set.


961
00:43:12,116 --> 00:43:15,586
So, next time your page is going
to load, if there's an error


962
00:43:15,586 --> 00:43:18,476
on this line, I will pause
automatically in the debugger,


963
00:43:18,476 --> 00:43:19,596
so let me reload again.


964
00:43:20,386 --> 00:43:22,886
And this time, I'm
pause executing


965
00:43:23,096 --> 00:43:25,026
at this specific line, okay.


966
00:43:25,416 --> 00:43:28,636
So, indeed, now I have a
different detail sidebar


967
00:43:28,856 --> 00:43:30,916
which automatically came
up called Scope Chain


968
00:43:31,146 --> 00:43:33,116
and this will let me take a look


969
00:43:33,116 --> 00:43:36,626
at all the variables
available in the current scope.


970
00:43:37,166 --> 00:43:39,536
In here, I can notice that
the header is indeed null


971
00:43:39,536 --> 00:43:41,396
so there's no way I can
pull a function on it.


972
00:43:42,336 --> 00:43:44,816
Okay, so what can I
do to work that out?


973
00:43:44,816 --> 00:43:47,146
So, I'm going to bring up
the Quick Console again,


974
00:43:47,836 --> 00:43:51,186
and what's really awesome
is that I'm just going


975
00:43:51,186 --> 00:43:54,026
to be evaluating script right
where my script is paused


976
00:43:54,026 --> 00:43:55,196
and understand what's happening.


977
00:43:55,196 --> 00:43:59,536
So, for example, I can type
header and indeed it's null.


978
00:44:00,366 --> 00:44:03,016
Okay, well, let's
try the document.


979
00:44:03,236 --> 00:44:04,926
Surely, we'll have a
document object, right?


980
00:44:05,066 --> 00:44:06,716
This is kind of-- if
you don't have that,


981
00:44:06,716 --> 00:44:07,816
there's nothing you can redo.


982
00:44:08,756 --> 00:44:09,956
We do have a document object.


983
00:44:10,186 --> 00:44:12,326
Well, does it have any children?


984
00:44:12,326 --> 00:44:16,386
So, let's look at
document.body, that too is null.


985
00:44:17,186 --> 00:44:20,566
Let's go back to the code and
find out what may be going on.


986
00:44:21,196 --> 00:44:25,906
I think I understand, the
problem is the script is in line


987
00:44:25,906 --> 00:44:29,776
"the head element" and it
executes as soon as it's parsed.


988
00:44:30,226 --> 00:44:31,836
But when it's parsed,
the rest of the page


989
00:44:31,836 --> 00:44:33,906
that has not been parsed yet,
so even though I'm trying


990
00:44:33,906 --> 00:44:36,926
to get a pointer to
my header in the DOM,


991
00:44:37,166 --> 00:44:39,216
the DOM is not ready yet,
it hasn't been parsed.


992
00:44:39,846 --> 00:44:41,236
That should be fairly
easy to fix.


993
00:44:41,466 --> 00:44:43,896
Let me resume script by clicking
on the Play/Pause button


994
00:44:43,896 --> 00:44:46,896
at the top and change
the source code.


995
00:44:47,216 --> 00:44:50,246
And what I'd like to do is make
sure I only evaluate this line


996
00:44:50,396 --> 00:44:53,406
of code when the DOM is ready.


997
00:44:53,406 --> 00:44:56,666
And there's really helpful
DOM event that gets triggered


998
00:44:56,666 --> 00:44:59,676
when that happens which is
called DOM content loaded


999
00:45:00,866 --> 00:45:03,496
and let me just call that
function when that happens.


1000
00:45:03,936 --> 00:45:08,366
Again, I'm going to save,
turn off breakpoints.


1001
00:45:08,616 --> 00:45:09,536
I don't want to pause anymore


1002
00:45:09,536 --> 00:45:11,936
because I think I fixed the
problem, reload the page,


1003
00:45:12,356 --> 00:45:13,826
I clear the console
again with Command-K


1004
00:45:13,826 --> 00:45:16,036
to make sure there are no
errors as it gets loaded.


1005
00:45:17,086 --> 00:45:18,766
And this time, no
errors triggered.


1006
00:45:19,096 --> 00:45:20,486
Okay, looks like
I'm in business.


1007
00:45:20,486 --> 00:45:22,326
I'm just going to
click on the trailers


1008
00:45:22,486 --> 00:45:24,856
and the menu is just going
to magically appear for sure.


1009
00:45:26,656 --> 00:45:28,816
Well, I click and click
and nothing is happening.


1010
00:45:29,146 --> 00:45:31,006
Well, it's not quite right,
something is happening.


1011
00:45:31,416 --> 00:45:34,026
I get errors in my
JavaScript console yet again.


1012
00:45:34,726 --> 00:45:36,596
So, you know what I'm
going to do this time is--


1013
00:45:36,916 --> 00:45:39,016
I don't even want to know
where the error happened,


1014
00:45:39,276 --> 00:45:41,886
I'm going to turn
on the debugger


1015
00:45:41,886 --> 00:45:44,136
to stop all uncut exceptions.


1016
00:45:44,336 --> 00:45:46,376
That means that any time
there's an exception happening


1017
00:45:46,376 --> 00:45:48,786
in JavaScript that hasn't
been caught programmatically


1018
00:45:48,786 --> 00:45:52,636
in the code, the debugger
will automatically kick in.


1019
00:45:53,236 --> 00:45:56,006
So let me turn that on,
and without even having


1020
00:45:56,006 --> 00:45:59,056
to reload the page because I
can run this code again live,


1021
00:45:59,056 --> 00:46:00,706
I'm just going to
click on trailers,


1022
00:46:01,666 --> 00:46:04,676
and as soon as I click it,
again, I will break in the code.


1023
00:46:06,016 --> 00:46:07,516
So what's going on here?


1024
00:46:08,356 --> 00:46:11,306
Well, so I can use the
Scope Chain to take a look


1025
00:46:11,306 --> 00:46:14,426
at the various values
of my local variables


1026
00:46:14,426 --> 00:46:16,676
or the Quick Console to
just start evaluating code


1027
00:46:16,916 --> 00:46:20,186
but something new that we added
in Web Inspector in Safari 7,


1028
00:46:20,396 --> 00:46:22,756
which makes even easier,
is I can just mouse


1029
00:46:22,756 --> 00:46:26,656
over different tokens in the
code and I'll instantly see


1030
00:46:26,656 --> 00:46:27,666
where they evaluate to.


1031
00:46:27,996 --> 00:46:31,466
So the document is available,
it has a body this time


1032
00:46:31,466 --> 00:46:33,166
so what I did in the
previous stage worked.


1033
00:46:33,826 --> 00:46:35,796
I'm evaluating code
when the DOM is ready.


1034
00:46:36,936 --> 00:46:41,526
And-- oh, this doesn't work
anymore, classes is undefined.


1035
00:46:42,026 --> 00:46:44,956
Well, I guess there's no class'
member on documented body.


1036
00:46:45,486 --> 00:46:48,026
And so since I'm broken
into the debugger,


1037
00:46:48,216 --> 00:46:51,116
I'm going to start experimenting
and writing some code


1038
00:46:51,116 --> 00:46:52,166
to figure out what went wrong.


1039
00:46:52,216 --> 00:46:56,556
So let me clear the console
and type document.body.


1040
00:46:56,556 --> 00:46:59,056
I'm going to make
use of autocompletion


1041
00:46:59,056 --> 00:47:01,616
within the console to
figure out what it may--


1042
00:47:01,616 --> 00:47:03,826
what the property that I was
looking for might have been.


1043
00:47:03,826 --> 00:47:05,686
So, I'm sure it's
something related to class


1044
00:47:05,686 --> 00:47:06,886
but I can't remember the name.


1045
00:47:06,886 --> 00:47:12,236
So let me just start typing,
oops, "Class" and there you go.


1046
00:47:12,236 --> 00:47:14,476
There are two options,
class list and class name.


1047
00:47:14,526 --> 00:47:15,766
Class list is what I wanted.


1048
00:47:16,306 --> 00:47:18,816
Let me validate to
make sure it evaluates


1049
00:47:18,816 --> 00:47:21,926
to something that's not
undefined and it looks


1050
00:47:21,926 --> 00:47:23,026
like it is what I want.


1051
00:47:23,116 --> 00:47:24,036
Okay, excellent.


1052
00:47:24,556 --> 00:47:24,926
You know what?


1053
00:47:24,926 --> 00:47:30,546
I'm going to go back to my code,
change classes to class list,


1054
00:47:32,476 --> 00:47:36,686
resume script execution,
save the file, Command-S,


1055
00:47:37,216 --> 00:47:39,526
and I'm going to clear the
console again with Command-K,


1056
00:47:39,616 --> 00:47:41,126
I don't want to see
any [inaudible] errors,


1057
00:47:41,446 --> 00:47:44,446
reload the page, and finger
crossed, I'm going to click


1058
00:47:44,446 --> 00:47:46,986
on trailers and this
time, it just works.


1059
00:47:47,426 --> 00:47:49,536
Cool. Mission accomplished
again,


1060
00:47:49,536 --> 00:47:51,906
I got where I wanted
all with Web Inspector.


1061
00:47:52,516 --> 00:47:57,606
Okay, let's recap
what we just did.


1062
00:47:58,476 --> 00:48:00,476
Well, I'll start with
something that we didn't do.


1063
00:48:00,626 --> 00:48:03,006
You'll notice we
didn't use any technique


1064
00:48:03,006 --> 00:48:04,566
that I will call
somewhat ghetto.


1065
00:48:04,826 --> 00:48:07,386
We didn't use Alert to
find on what was going on,


1066
00:48:07,386 --> 00:48:09,336
we didn't even use
console log which is kind


1067
00:48:09,336 --> 00:48:10,846
of the modern version of Alert.


1068
00:48:11,736 --> 00:48:15,186
And what the debugger lets us
do is go beyond console log


1069
00:48:15,186 --> 00:48:17,226
and actually debug
the code in real time.


1070
00:48:18,126 --> 00:48:21,166
So we could use breakpoints
to pause JavaScript execution


1071
00:48:21,526 --> 00:48:24,056
and breakpoints are either
something you will target


1072
00:48:24,056 --> 00:48:26,386
directly yourself and say, "I
want to break on this line"


1073
00:48:26,936 --> 00:48:30,306
or it is something you can just
have generically happen whenever


1074
00:48:30,306 --> 00:48:32,396
an error is triggered,
so useful.


1075
00:48:33,416 --> 00:48:35,486
And using this Scope
Chain's detail sidebar,


1076
00:48:36,006 --> 00:48:38,866
you could always find out about
the context of your current code


1077
00:48:38,966 --> 00:48:43,106
or you can even just roll over
your content and use Popovers


1078
00:48:43,106 --> 00:48:46,426
to show what you understand
exactly what values


1079
00:48:46,426 --> 00:48:48,566
of the various members
of your code evaluate to.


1080
00:48:48,886 --> 00:48:50,176
This is so very useful.


1081
00:48:50,726 --> 00:48:53,886
And finally, my preferred
technique is to start coding.


1082
00:48:54,186 --> 00:48:56,666
I can bring up the Quick
Console, type whatever I want


1083
00:48:56,666 --> 00:48:58,426
in there, see what
it would evaluate


1084
00:48:58,426 --> 00:49:00,406
to in this current
context and figure


1085
00:49:00,406 --> 00:49:03,406
out what right code would
be for the JavaScript


1086
00:49:03,406 --> 00:49:05,916
that I was trying to fix.


1087
00:49:06,066 --> 00:49:08,956
And so, again, we'll go
in much greater details


1088
00:49:08,956 --> 00:49:10,446
about debugging in
the next session.


1089
00:49:10,446 --> 00:49:11,666
We've only scratched
the surface.


1090
00:49:11,666 --> 00:49:13,716
There is so much more you
can do with the debugger


1091
00:49:13,966 --> 00:49:15,906
in Web Inspector and Safari.


1092
00:49:16,706 --> 00:49:19,696
So stay tuned, stay in this room
and we'll find that a lot more.


1093
00:49:20,656 --> 00:49:22,386
And this wraps up our session.


1094
00:49:22,616 --> 00:49:24,886
We've looked an overview
of the user interface,


1095
00:49:25,126 --> 00:49:27,526
the master-detail
relationship going left to right


1096
00:49:27,526 --> 00:49:29,776
between the Navigation
sidebar, content browser


1097
00:49:29,916 --> 00:49:32,336
and Detail sidebar, and
the great Activity Viewer


1098
00:49:32,336 --> 00:49:35,566
within the Tool Bar so that you
can always see what errors maybe


1099
00:49:35,566 --> 00:49:37,116
triggered, your page load time


1100
00:49:37,116 --> 00:49:38,356
and the resources
you're dealing with.


1101
00:49:38,606 --> 00:49:41,026
And then we went
through three core tasks


1102
00:49:41,026 --> 00:49:42,956
that I think highlighted
different panels


1103
00:49:42,956 --> 00:49:43,786
within Web Inspector.


1104
00:49:44,246 --> 00:49:46,716
We started by inspection
tweaking where CSS


1105
00:49:46,716 --> 00:49:49,136
and HTML editing were
really front and center.


1106
00:49:49,626 --> 00:49:51,646
Then we looked at network
performance analysis


1107
00:49:51,646 --> 00:49:53,086
where the Timelines
panel made us--


1108
00:49:53,086 --> 00:49:56,446
made it really easy to just to
identify how things get loaded


1109
00:49:56,646 --> 00:49:59,046
in sequence and visualized
it with a great timeline.


1110
00:49:59,356 --> 00:50:02,486
And finally, we just debug the
JavaScript code in real time


1111
00:50:02,486 --> 00:50:05,346
within Web Inspector by just
using the great debugging tools


1112
00:50:05,346 --> 00:50:05,976
made available.


1113
00:50:06,406 --> 00:50:09,396
And so, if you like
what you just saw,


1114
00:50:09,566 --> 00:50:11,296
there are different
ways you can remain


1115
00:50:11,296 --> 00:50:13,226
and get involved
with Web Inspector.


1116
00:50:13,736 --> 00:50:16,256
And the first thing I'd like
to point out is that every day


1117
00:50:16,256 --> 00:50:18,376
as we make enhancements
to WebKit,


1118
00:50:18,696 --> 00:50:20,216
we build what we call
the "Nightly Build".


1119
00:50:20,466 --> 00:50:22,966
And this is like a
special version of Safari


1120
00:50:23,296 --> 00:50:24,686
that you can download
to your net--


1121
00:50:24,806 --> 00:50:28,286
to your desktop and have the
latest version of WebKit Code


1122
00:50:28,286 --> 00:50:29,686
from Open Source compiled in


1123
00:50:29,886 --> 00:50:31,326
and you can just
play around with it.


1124
00:50:31,586 --> 00:50:33,266
And you can go to
nightly.webkit.org


1125
00:50:33,366 --> 00:50:34,476
and you'll get it right away.


1126
00:50:35,266 --> 00:50:38,516
And if you find issues when
you're using Nightlys or even


1127
00:50:38,516 --> 00:50:40,976
if you find issues in the
currently shipping version


1128
00:50:40,976 --> 00:50:45,116
of Safari, you can just go the
bugs@webkit.org/newinspectorbug


1129
00:50:45,616 --> 00:50:47,906
and type any problem
you may have found.


1130
00:50:48,106 --> 00:50:50,326
You can also use that
that raise future request.


1131
00:50:50,626 --> 00:50:52,546
And we pay very close
attention to what goes


1132
00:50:52,546 --> 00:50:54,306
on in this bug tracker
and we try


1133
00:50:54,306 --> 00:50:56,296
to fix bugs as fast as we can.


1134
00:50:56,646 --> 00:50:58,906
And if you need to discuss
things a little bit more


1135
00:50:58,906 --> 00:51:01,146
interactively, you can
find us on IRC as well.


1136
00:51:01,146 --> 00:51:02,846
We hang out at irc.freenode.net,


1137
00:51:03,056 --> 00:51:05,246
the channel is
#WebKit-inspector.


1138
00:51:05,726 --> 00:51:08,486
And we actually spread all
around the world a little bit


1139
00:51:08,486 --> 00:51:10,336
so depending on what
time zone you are,


1140
00:51:10,746 --> 00:51:13,786
you should still find someone to
help you and answer questions.


1141
00:51:14,536 --> 00:51:16,026
There's something
even better that I'd


1142
00:51:16,026 --> 00:51:17,426
like to announce today is


1143
00:51:17,426 --> 00:51:20,426
that we're making Safari's
Web Inspector Open Source


1144
00:51:20,426 --> 00:51:22,596
contributed back to the
WebKit Open Source project.


1145
00:51:22,836 --> 00:51:25,286
And so, what it means is
that you can go ever further


1146
00:51:25,286 --> 00:51:28,376
than raising bugs and discussing
future request in IRC.


1147
00:51:28,376 --> 00:51:30,796
You can just completely
get involved with the code


1148
00:51:31,076 --> 00:51:32,686
and start fixing
things yourself.


1149
00:51:33,076 --> 00:51:35,586
In fact, one of the great
features that we show today


1150
00:51:35,826 --> 00:51:37,896
about how we can
save files locally


1151
00:51:38,096 --> 00:51:40,866
within the Web Inspector is
something that was contributed


1152
00:51:41,176 --> 00:51:42,626
by an external contributor.


1153
00:51:42,766 --> 00:51:44,376
So the sky is the limit.


1154
00:51:44,656 --> 00:51:47,426
You can just contribute as much
as you want to Web Inspector.


1155
00:51:47,956 --> 00:51:52,186
And so, for more information,
you can contact John Geleynse,


1156
00:51:52,296 --> 00:51:53,616
the Technology Evangelist.


1157
00:51:54,126 --> 00:51:56,606
We are greatly updated
documentation


1158
00:51:56,606 --> 00:51:58,066
for the Safari Web
Inspector guide


1159
00:51:58,066 --> 00:51:59,846
on developer.apple.com/mac.


1160
00:52:00,296 --> 00:52:01,836
WebKit.org is a lot
of information


1161
00:52:01,836 --> 00:52:02,796
about WebKit in general.


1162
00:52:03,006 --> 00:52:05,826
And the div forums let you
connect with one another


1163
00:52:06,056 --> 00:52:08,436
and we track those and
ask any questions you want


1164
00:52:08,436 --> 00:52:09,296
and we'll try to answer.


1165
00:52:09,856 --> 00:52:13,246
And so, I've already mentioned
some related sessions.


1166
00:52:13,246 --> 00:52:14,086
Here they are recapped.


1167
00:52:14,636 --> 00:52:17,986
Right here and--
right this morning--


1168
00:52:17,986 --> 00:52:19,776
sorry, there was a
session about CSS


1169
00:52:19,776 --> 00:52:21,906
and new features in the WebKit.


1170
00:52:22,326 --> 00:52:23,296
Right here and right now,


1171
00:52:23,296 --> 00:52:25,706
we'll have another more advanced
session about Web Inspector,


1172
00:52:26,206 --> 00:52:28,016
and tomorrow at 9
a.m., a great session


1173
00:52:28,016 --> 00:52:29,836
about power performance
for web content.


1174
00:52:30,856 --> 00:52:32,326
Okay, that's it.


1175
00:52:33,516 --> 00:52:42,730
[ Silence ]

