1
00:00:07,516 --> 00:00:17,500
[ Music ]


2
00:00:23,516 --> 00:00:30,816
[ Applause ]


3
00:00:31,316 --> 00:00:31,866
>> Good morning.


4
00:00:32,406 --> 00:00:34,546
Welcome to Advanced
Notifications.


5
00:00:35,436 --> 00:00:39,596
I'm Michele, and today we will
be talking about a few things


6
00:00:39,596 --> 00:00:41,736
about new notifications
in iOS X.


7
00:00:42,916 --> 00:00:45,896
We'll start with the new
notifications user interface.


8
00:00:45,896 --> 00:00:47,476
We'll go over a little
bit of an overview,


9
00:00:47,786 --> 00:00:50,806
and we'll see what
changed in iOS X.


10
00:00:51,226 --> 00:00:53,536
Then we'll see how to
use media attachments


11
00:00:53,736 --> 00:00:56,986
in the new notifications,
and, last, we'll see how


12
00:00:56,986 --> 00:01:01,826
to customize the user interface
for user notifications in iOS X.


13
00:01:03,206 --> 00:01:05,746
Let's start with the overview
of the user interface.


14
00:01:07,936 --> 00:01:11,576
User notifications in iOS X
have a beautiful new design.


15
00:01:11,866 --> 00:01:13,726
You see here the new lock screen


16
00:01:14,096 --> 00:01:16,416
with beautiful animations
and raise to wake.


17
00:01:18,206 --> 00:01:19,396
Here is a banner.


18
00:01:19,806 --> 00:01:22,096
You see they are
much more legible.


19
00:01:22,096 --> 00:01:23,296
They have more content.


20
00:01:23,486 --> 00:01:27,896
They show title, subtitle, and
this is notification center,


21
00:01:28,076 --> 00:01:31,216
and notifications look the same
in all three [inaudible] places.


22
00:01:35,256 --> 00:01:40,986
In iOS 8, we introduced
Actions Notifications


23
00:01:41,266 --> 00:01:43,896
where you can add actions
to your notifications


24
00:01:43,896 --> 00:01:46,676
to make them more interactive
and allow the user to deal


25
00:01:46,676 --> 00:01:47,746
with that much more quickly.


26
00:01:48,726 --> 00:01:52,356
In iOS 9, we introduced
Quick Reply


27
00:01:52,796 --> 00:01:55,386
to enhance actionable
notifications


28
00:01:55,386 --> 00:01:58,396
so you can even allow the
user to respond with text


29
00:01:58,396 --> 00:02:00,376
that they type to
your notifications.


30
00:02:01,156 --> 00:02:04,776
In iOS X, notifications
are much more powerful


31
00:02:04,776 --> 00:02:07,926
because notifications now are
more important to our device


32
00:02:07,926 --> 00:02:09,466
as we interact with
them all the time.


33
00:02:09,466 --> 00:02:12,896
They are a very important way
we interact with the device,


34
00:02:12,946 --> 00:02:15,026
and a very important
way the user interacts


35
00:02:15,026 --> 00:02:16,086
with your applications.


36
00:02:16,646 --> 00:02:21,576
So in iOS X, you can
press on notification,


37
00:02:21,636 --> 00:02:23,236
and notification will expand


38
00:02:23,236 --> 00:02:27,056
and show a much more detail
specialized user interface


39
00:02:27,056 --> 00:02:30,306
for your application, and it's
dedicated to your content.


40
00:02:30,576 --> 00:02:34,116
It shows more detail, and
it's more useful to the user.


41
00:02:35,156 --> 00:02:38,166
The user can also
tap on the actions,


42
00:02:38,266 --> 00:02:41,906
and the user interface can
update and show what changed


43
00:02:41,946 --> 00:02:44,606
and the effect of the
action that they just used.


44
00:02:49,776 --> 00:02:51,536
Calendar, which just
a simple example.


45
00:02:51,916 --> 00:02:54,616
We also have Find My
Friends, for example,


46
00:02:54,616 --> 00:02:57,276
that when a friend shares
their location with you,


47
00:02:57,726 --> 00:03:00,916
you see their location
immediately in notification


48
00:03:00,916 --> 00:03:03,146
so you can see how late they're
going to be for your meeting.


49
00:03:04,976 --> 00:03:08,166
We also have notifications
for Photo Sharing.


50
00:03:08,276 --> 00:03:12,026
If you shared a photo on iCloud,
you can see the photo directly


51
00:03:12,086 --> 00:03:14,106
in the notification
without opening the app,


52
00:03:14,106 --> 00:03:17,656
and you can like it or comment
on it without opening the app


53
00:03:17,706 --> 00:03:19,576
to look at the, at the picture.


54
00:03:19,886 --> 00:03:21,326
At last, messages.


55
00:03:21,326 --> 00:03:22,386
This is not all of it.


56
00:03:23,366 --> 00:03:26,376
Messages support Quick
Reply starting in iOS 8,


57
00:03:26,886 --> 00:03:29,606
but you could only
see one message,


58
00:03:29,606 --> 00:03:31,366
and you can only
type one response.


59
00:03:32,246 --> 00:03:34,386
Now you see the entire
conversation


60
00:03:34,386 --> 00:03:36,756
when you open the notification,
and you can respond to it,


61
00:03:37,056 --> 00:03:39,646
you can wait for your friends
to respond, and you type,


62
00:03:39,646 --> 00:03:40,746
can type more responses.


63
00:03:41,296 --> 00:03:43,996
This is the power of new
notifications in iOS X.


64
00:03:46,146 --> 00:03:52,136
But is this was all there was to
it, I wouldn't need to stay here


65
00:03:52,136 --> 00:03:54,556
for half an hour and show
you all the new notifications


66
00:03:54,556 --> 00:03:55,336
in iOS X.


67
00:03:55,886 --> 00:03:59,836
So the most important feature I
want talk to you about today is


68
00:03:59,836 --> 00:04:02,556
that everything I just
showed you is implemented


69
00:04:02,556 --> 00:04:06,326
with the new API's that we
are expand, exposing in iOS X


70
00:04:06,876 --> 00:04:09,576
so you can do exactly the
same things that we've done


71
00:04:09,836 --> 00:04:13,006
and add all the same features
to your own applications


72
00:04:13,006 --> 00:04:14,126
and your notifications.


73
00:04:15,586 --> 00:04:19,236
The first thing you can
do is media attachments.


74
00:04:22,276 --> 00:04:25,556
You know, one of the most
frequent notifications I receive


75
00:04:25,556 --> 00:04:29,506
by my friends are pictures
that they're sharing or videos.


76
00:04:30,116 --> 00:04:33,736
So it's really important
that we have the content


77
00:04:33,736 --> 00:04:35,536
that was shared [inaudible]
notifications


78
00:04:35,536 --> 00:04:37,576
so I can see it more
quickly without having


79
00:04:37,576 --> 00:04:38,946
to open the app and download it.


80
00:04:41,496 --> 00:04:44,126
But the problem is
that, as you know,


81
00:04:44,126 --> 00:04:48,156
push notifications are
delivered with push payload,


82
00:04:49,106 --> 00:04:52,686
and even if we increase the
size last year to 4 kilobytes,


83
00:04:53,036 --> 00:04:56,586
that's not nearly enough
to send an entire picture,


84
00:04:56,586 --> 00:04:59,406
even if it's a small one that
we include in the notification.


85
00:05:00,496 --> 00:05:01,766
So how do we do that?


86
00:05:03,016 --> 00:05:05,006
We use the new service
extensions


87
00:05:05,006 --> 00:05:07,826
that we introduced earlier today
in the previous presentation.


88
00:05:10,086 --> 00:05:13,436
So to do, to download
the attachment


89
00:05:13,846 --> 00:05:17,246
in the service extension, you
have to set your notification


90
00:05:17,246 --> 00:05:21,366
to be mutable, as you
see here in the payload.


91
00:05:21,366 --> 00:05:26,116
I send a mutable content flag,
and then you add a reference


92
00:05:26,146 --> 00:05:28,686
to the attachment that you
want to send with notification.


93
00:05:29,366 --> 00:05:31,326
In this case, I use
a simple URL,


94
00:05:31,956 --> 00:05:33,576
but you could also
use a identifier


95
00:05:33,576 --> 00:05:36,306
that your app knows how to
download from your own servers.


96
00:05:38,216 --> 00:05:40,846
After you've done this, and
the notification is delivered


97
00:05:40,846 --> 00:05:44,326
to the device, the system will
run your service extension.


98
00:05:45,056 --> 00:05:46,126
In the service extension,


99
00:05:46,126 --> 00:05:48,456
you can download the
attachment anyway you want.


100
00:05:49,166 --> 00:05:51,326
Perhaps you can use
an URL session


101
00:05:51,496 --> 00:05:53,956
so that the system helps
you manage resources.


102
00:05:55,566 --> 00:05:57,516
And then the notification
is delivered


103
00:05:57,516 --> 00:05:59,566
to the user with the attachment.


104
00:06:00,856 --> 00:06:04,216
Let's see it, a little bit
of code on how to do this.


105
00:06:06,626 --> 00:06:10,076
This is a very basic example
of my service extension.


106
00:06:11,616 --> 00:06:14,886
At the top, I implemented
the didReceive request


107
00:06:15,466 --> 00:06:18,206
withContentHandler,
and this is called


108
00:06:18,206 --> 00:06:20,066
when the notification
is received,


109
00:06:20,066 --> 00:06:22,206
and I have to download
my attachment.


110
00:06:24,066 --> 00:06:28,286
I download my attachment, again,
for maybe using the URL session


111
00:06:28,286 --> 00:06:30,676
or other techniques
that you prefer,


112
00:06:30,676 --> 00:06:33,526
and when I have the
file downloaded locally,


113
00:06:34,146 --> 00:06:36,506
I can create a notification
attachment object.


114
00:06:38,446 --> 00:06:42,026
When I created the object, I
added notification content,


115
00:06:42,886 --> 00:06:45,726
and I pass it onto the system
to be delivered to the user.


116
00:06:46,236 --> 00:06:50,986
After I've done this,
this is my notification


117
00:06:51,946 --> 00:06:55,506
with a beautiful picture
visible immediately to the user


118
00:06:55,506 --> 00:06:57,056
without waiting for
it to download


119
00:06:57,186 --> 00:06:58,676
or without having
to open the app.


120
00:07:00,306 --> 00:07:04,246
And you see the notification
suite attachments support


121
00:07:04,246 --> 00:07:05,526
actionable notifications to.


122
00:07:05,526 --> 00:07:11,706
So you can like or comment this,
this picture directly from here.


123
00:07:12,686 --> 00:07:15,266
So media attachments,
a quick recap.


124
00:07:15,806 --> 00:07:18,516
They support local, every
[inaudible] notifications.


125
00:07:19,296 --> 00:07:20,946
We only talked about local here.


126
00:07:20,946 --> 00:07:24,386
We only talked about remote
because local ones are easier.


127
00:07:24,386 --> 00:07:27,096
You just create the
notification attachment object


128
00:07:27,386 --> 00:07:29,736
when you're scheduling the
notification, and you're done.


129
00:07:32,306 --> 00:07:35,956
Attachments support
images, audio, and video,


130
00:07:36,656 --> 00:07:39,866
and the system will
provide, customize UI


131
00:07:39,866 --> 00:07:41,726
for this three types of content.


132
00:07:42,816 --> 00:07:46,946
You download the attachment
in the service extension,


133
00:07:47,316 --> 00:07:48,636
but you have to remember


134
00:07:48,886 --> 00:07:52,226
that the service extensions
has limited amount of time


135
00:07:52,336 --> 00:07:57,476
that it can run, and file
sizes are also limited


136
00:07:57,576 --> 00:08:00,726
because these are meant to be
sent with the notification.


137
00:08:00,726 --> 00:08:03,526
They're not meant to deliver
the entire content to the user.


138
00:08:04,026 --> 00:08:06,446
So you may want to send
a scaled-down version


139
00:08:06,596 --> 00:08:09,766
of the image, and then
download the full resolution one


140
00:08:09,766 --> 00:08:11,476
when the user opens the app.


141
00:08:11,636 --> 00:08:14,216
Or you may want to
send a short video clip


142
00:08:14,416 --> 00:08:17,306
if you're sending a video, and
then download the full video


143
00:08:17,306 --> 00:08:19,966
when they open the app.


144
00:08:21,116 --> 00:08:24,716
When you downloaded it, you
add it to the notification,


145
00:08:25,576 --> 00:08:28,756
and at this point,
the system takes over


146
00:08:29,026 --> 00:08:31,006
and manages the file for you.


147
00:08:31,476 --> 00:08:33,916
You don't need to worry
about the file anymore.


148
00:08:33,916 --> 00:08:37,086
The system moves it
to a separate location


149
00:08:37,706 --> 00:08:38,816
and handles all the data.


150
00:08:39,796 --> 00:08:43,525
Oh, yeah, I almost forgot.


151
00:08:43,996 --> 00:08:45,486
Of course, we support GIFs.


152
00:08:46,516 --> 00:08:55,016
[ Applause ]


153
00:08:55,516 --> 00:08:57,246
So attachments are pretty cool,


154
00:08:57,246 --> 00:09:00,676
and they provide a very rich
interface for notifications,


155
00:09:01,396 --> 00:09:04,816
but at the beginning I said that
you could implement everything


156
00:09:04,816 --> 00:09:09,256
that I showed you with the new
notifications, and calendar,


157
00:09:09,256 --> 00:09:12,136
messages, and they
were definitely not


158
00:09:12,136 --> 00:09:13,186
using attachments.


159
00:09:13,756 --> 00:09:15,766
They were using custom
user interface,


160
00:09:16,816 --> 00:09:18,706
and this is what we're
talking about now.


161
00:09:20,226 --> 00:09:21,786
To create a custom
user interface,


162
00:09:24,656 --> 00:09:27,426
you use the second
extension point that we added


163
00:09:27,426 --> 00:09:28,866
to our standard notifications,


164
00:09:29,106 --> 00:09:31,086
and it's a
NotificationContentExtension.


165
00:09:32,656 --> 00:09:35,376
The NotificationContentExtension
allows you


166
00:09:35,416 --> 00:09:38,046
to add your own views,
custom views.


167
00:09:38,226 --> 00:09:41,626
You can draw anything
you want, but the main,


168
00:09:41,716 --> 00:09:43,306
most important limitation is


169
00:09:43,306 --> 00:09:45,066
that there is no
interaction with your views.


170
00:09:45,416 --> 00:09:46,496
They don't receive touches.


171
00:09:46,496 --> 00:09:48,346
The user cannot tap on them.


172
00:09:48,956 --> 00:09:51,046
But notifications
are still interactive


173
00:09:51,096 --> 00:09:53,316
because you can use
notification actions,


174
00:09:53,666 --> 00:09:55,746
and the extension can
handle those actions,


175
00:09:55,746 --> 00:09:58,886
and we'll see later
how to do it.


176
00:10:01,486 --> 00:10:04,906
So I said that we can
implement the same things


177
00:10:04,906 --> 00:10:05,956
that the system is doing.


178
00:10:06,376 --> 00:10:08,786
Let's start by seeing
what calendar is doing,


179
00:10:08,786 --> 00:10:10,386
and then we'll see how
to do the same thing.


180
00:10:11,936 --> 00:10:13,276
This is a calendar notification.


181
00:10:13,276 --> 00:10:16,096
You see at the very
top there's a header


182
00:10:16,096 --> 00:10:18,936
with the notification icon that
you can tap to open the app,


183
00:10:19,746 --> 00:10:22,236
the application name,
and the dismiss button.


184
00:10:22,436 --> 00:10:24,556
This is standard UI
that the system provides


185
00:10:24,686 --> 00:10:25,586
to all notifications.


186
00:10:27,376 --> 00:10:29,746
Underneath the header,
there's the custom content,


187
00:10:30,426 --> 00:10:32,406
and this is where your
notification extension


188
00:10:32,406 --> 00:10:32,586
will live.


189
00:10:32,586 --> 00:10:35,006
This is where you
draw your content.


190
00:10:35,236 --> 00:10:37,906
You show all the extra details
that you want to the user.


191
00:10:39,706 --> 00:10:44,696
And underneath these,
there's a default content


192
00:10:44,696 --> 00:10:45,736
that the system shows.


193
00:10:47,126 --> 00:10:49,856
This shows the content that
was delivered with the payload.


194
00:10:49,856 --> 00:10:54,336
This was what was visible until
iOS 9 in the notification.


195
00:10:56,506 --> 00:11:03,816
And at the very bottom, there
are actions that a user can tap


196
00:11:03,816 --> 00:11:05,836
and interact in notification.


197
00:11:06,176 --> 00:11:10,686
When the user taps on them,
the user interface can update


198
00:11:10,996 --> 00:11:13,736
and show what happened.


199
00:11:13,996 --> 00:11:16,386
So let's see how to make
one of these ourselves.


200
00:11:17,956 --> 00:11:21,696
We'll start with a party invite.


201
00:11:22,446 --> 00:11:24,516
Parties are fun, and we're
going Thursday, right.


202
00:11:25,756 --> 00:11:28,846
This is the basic notification
that will be displayed


203
00:11:28,846 --> 00:11:31,096
by the user when you just
send a push notification,


204
00:11:31,586 --> 00:11:34,066
and it's pretty similar
to what you expect.


205
00:11:34,676 --> 00:11:36,236
Let's see how to expand this


206
00:11:36,666 --> 00:11:39,076
and show custom user
interface like we wanted.


207
00:11:40,426 --> 00:11:43,316
The first thing you want to
do is to create a new target


208
00:11:43,516 --> 00:11:47,176
in your application, and you
do that by using the template


209
00:11:47,176 --> 00:11:48,176
that Xcode provides,


210
00:11:48,586 --> 00:11:50,536
the NotificationContentExtension
template.


211
00:11:51,896 --> 00:11:55,536
This template will create
three files in a new target.


212
00:11:56,406 --> 00:11:59,856
A view controller, main
interface storyboard,


213
00:12:00,486 --> 00:12:02,266
and the info.plist
where you can set


214
00:12:02,266 --> 00:12:04,476
up customizables
for the extension.


215
00:12:08,456 --> 00:12:09,496
This is the view controller


216
00:12:10,036 --> 00:12:11,706
for the
NotificationContentExtension.


217
00:12:12,336 --> 00:12:16,406
As you see, it's just a UI
view controller subclass.


218
00:12:16,896 --> 00:12:19,446
It's a regular view controller
that you use as you're used to.


219
00:12:21,156 --> 00:12:23,846
It also implements the
NotificationContentExtension


220
00:12:23,846 --> 00:12:26,866
protocol, and this is what
tells the system that you want


221
00:12:26,866 --> 00:12:29,436
to use these view controller
for the notifications.


222
00:12:30,266 --> 00:12:34,816
This protocol has only
one required method.


223
00:12:35,236 --> 00:12:37,516
The required method is
didRreceive notification,


224
00:12:37,516 --> 00:12:42,586
as you see here, and this
method is called together


225
00:12:42,586 --> 00:12:45,756
with the view controller
life cycle method calls


226
00:12:45,756 --> 00:12:48,306
when the notification is
delivered to your notification.


227
00:12:48,876 --> 00:12:50,006
To your extension.


228
00:12:51,756 --> 00:12:54,476
So when the user
expands the notification,


229
00:12:55,466 --> 00:12:57,566
you will receive all the
view controller calls


230
00:12:57,656 --> 00:12:58,876
and these one in addition.


231
00:12:58,876 --> 00:13:00,966
So you can receive the
notification object


232
00:13:01,146 --> 00:13:03,736
and update your UI and
show different things.


233
00:13:06,306 --> 00:13:10,986
The, the next thing you want
to do is tell the system how


234
00:13:10,986 --> 00:13:12,626
to find your content extension.


235
00:13:13,886 --> 00:13:17,836
Content extensions, you use the
same notification categories


236
00:13:17,836 --> 00:13:20,226
that you use to register
notifications actions.


237
00:13:21,176 --> 00:13:22,936
In this case, I use
the event invite


238
00:13:23,376 --> 00:13:25,296
for my party invite invitation,


239
00:13:26,176 --> 00:13:29,236
but extensions can
also be associated


240
00:13:29,236 --> 00:13:31,966
with multiple categories in
case you want to use the same UI


241
00:13:31,966 --> 00:13:33,316
for different types


242
00:13:33,316 --> 00:13:35,016
of notifications
that may be similar.


243
00:13:35,626 --> 00:13:38,446
In this case, I'm using the
event-invite or event-update.


244
00:13:38,766 --> 00:13:40,726
They could be very similar UI's.


245
00:13:40,726 --> 00:13:42,756
So I can just use the
same, different categories


246
00:13:42,756 --> 00:13:44,376
because they may have
different actions.


247
00:13:46,576 --> 00:13:47,756
So I set up everything.


248
00:13:49,096 --> 00:13:50,106
I have my view controller.


249
00:13:50,596 --> 00:13:54,066
Now I want to add some custom
views to it to draw my own UI.


250
00:13:54,176 --> 00:13:55,846
It's a very controller.


251
00:13:55,956 --> 00:13:58,796
I added some labels
in my storyboard


252
00:13:58,796 --> 00:14:01,316
that I'm not showing
here, and I'm,


253
00:14:02,476 --> 00:14:06,386
when I receive the notification,
I'm extracting the content


254
00:14:07,406 --> 00:14:11,786
to have the information I need,
and I'm setting the content


255
00:14:12,256 --> 00:14:13,756
on the labels that
I just created.


256
00:14:15,156 --> 00:14:18,756
You see that I also have some
custom information additional


257
00:14:18,756 --> 00:14:22,426
to the standard one that comes
with the payload because I want


258
00:14:22,426 --> 00:14:26,226
to show something more than the
standard payload for displays.


259
00:14:26,616 --> 00:14:28,276
In this case, I'm
showing the location


260
00:14:28,276 --> 00:14:31,656
because it's pretty important
to know where the party is.


261
00:14:33,296 --> 00:14:35,696
And this is my notification now.


262
00:14:37,186 --> 00:14:39,736
You see that I have
some custom content.


263
00:14:40,176 --> 00:14:43,636
I draw my own UI with my custom
labels, different styles,


264
00:14:45,166 --> 00:14:47,636
but these notifications
has two problems.


265
00:14:49,506 --> 00:14:52,646
The first problem is that
this content is too big.


266
00:14:53,276 --> 00:14:55,376
I don't need all
that extra space.


267
00:14:55,376 --> 00:14:56,386
It's all empty.


268
00:14:56,676 --> 00:14:58,926
I have much smaller
content to display.


269
00:14:59,356 --> 00:15:03,886
The second problem is that the
default content is duplicated.


270
00:15:04,356 --> 00:15:06,966
I don't need it because I'm
already displaying the same


271
00:15:06,966 --> 00:15:09,556
information up top
with my custom style.


272
00:15:10,186 --> 00:15:12,986
But we can fix both
of these problems.


273
00:15:13,886 --> 00:15:15,846
Well, let's fix the
first, the second one first


274
00:15:15,846 --> 00:15:19,466
because it's easier, and this
is an additional attribute


275
00:15:19,676 --> 00:15:23,356
in your info.plist, and you can
just set default content hidden


276
00:15:23,586 --> 00:15:25,976
to yes to hide the
default content.


277
00:15:26,106 --> 00:15:27,786
The system will not
add that anymore.


278
00:15:29,446 --> 00:15:33,296
The second problem was the
size of my notification,


279
00:15:34,086 --> 00:15:36,106
but since it's just
the view controller,


280
00:15:36,386 --> 00:15:39,856
I can resize it the way I'm used
to resizing view controllers.


281
00:15:40,386 --> 00:15:43,216
In this case, I'm setting
the preferred content size,


282
00:15:43,536 --> 00:15:47,406
but you can set the
constraints without the layout.


283
00:15:47,406 --> 00:15:51,756
You can use the storyboard,
and they will both work.


284
00:15:52,846 --> 00:15:54,616
And after fixing
these two issues,


285
00:15:55,866 --> 00:15:56,906
this is my notification now.


286
00:15:58,346 --> 00:15:59,086
It looks much better.


287
00:16:00,186 --> 00:16:01,696
It's the right size
that I wanted.


288
00:16:02,136 --> 00:16:03,666
There's no duplicate content,


289
00:16:04,616 --> 00:16:07,116
but did you see there
was another problem now.


290
00:16:07,936 --> 00:16:09,496
When the notification
was presented,


291
00:16:09,496 --> 00:16:11,356
it was not the right size.


292
00:16:11,626 --> 00:16:16,116
So the system had to animate
a resize the notification


293
00:16:16,116 --> 00:16:17,166
to show it the right size.


294
00:16:17,596 --> 00:16:18,786
Let me show it to you again.


295
00:16:21,336 --> 00:16:24,126
See? We could make it better.


296
00:16:25,286 --> 00:16:28,796
The reason this happens
is that the system needs


297
00:16:28,796 --> 00:16:32,196
to know the size of your final
notification when it starts


298
00:16:32,196 --> 00:16:35,416
to display it so you can
do the right animation.


299
00:16:36,236 --> 00:16:39,096
But your extension
is not yet running


300
00:16:39,296 --> 00:16:41,526
when the system starts
presenting the notification.


301
00:16:42,006 --> 00:16:44,886
So you need to tell the
system in advance before any


302
00:16:44,886 --> 00:16:49,406
of your code runs what size
you want to be at the end.


303
00:16:49,406 --> 00:16:51,616
But the problem is that
these notifications run


304
00:16:51,846 --> 00:16:52,906
in different devices


305
00:16:52,906 --> 00:16:54,806
with different sizes
in different context.


306
00:16:55,776 --> 00:16:59,676
So the way we do that is
that we set a content ratio,


307
00:16:59,786 --> 00:17:00,906
content size ratio.


308
00:17:02,116 --> 00:17:05,866
So these, this defines the
ratio of the height and width


309
00:17:06,685 --> 00:17:08,046
that you want to use
for your content.


310
00:17:09,836 --> 00:17:12,415
Now this may, of course,
not always be possible


311
00:17:12,546 --> 00:17:14,945
because you may have
content of different sizes.


312
00:17:15,205 --> 00:17:16,746
You don't know what
content you're receiving.


313
00:17:16,746 --> 00:17:18,026
You still want to
display all of it.


314
00:17:18,386 --> 00:17:21,665
So sometimes this may not
be possible, but if you can,


315
00:17:21,826 --> 00:17:24,516
figure out a size that works
for your notifications.


316
00:17:24,906 --> 00:17:27,316
This is the way to do it.


317
00:17:27,596 --> 00:17:32,216
And the result after I've done
this is this new notification


318
00:17:32,216 --> 00:17:33,986
that now present it directly


319
00:17:34,126 --> 00:17:36,076
at the right size
from the beginning.


320
00:17:36,526 --> 00:17:38,016
So let's review what
we have done so far.


321
00:17:39,426 --> 00:17:41,216
We wanted to do a
custom notification UI.


322
00:17:42,186 --> 00:17:44,586
We may, we started
with these custom UI.


323
00:17:45,086 --> 00:17:49,776
That's pretty basic, but has all
my custom content has additional


324
00:17:49,776 --> 00:17:51,286
information that was
not in the payload,


325
00:17:51,286 --> 00:17:53,126
but it was the wrong size.


326
00:17:53,626 --> 00:17:55,736
So we fixed the presentation
size


327
00:17:55,996 --> 00:17:57,726
by using the initial
content size ratio.


328
00:17:58,806 --> 00:18:01,006
And then we fixed the
duplicated content


329
00:18:01,536 --> 00:18:04,006
by setting the default
content type hidden flag,


330
00:18:05,176 --> 00:18:07,946
and we went from the
beginning to this.


331
00:18:09,676 --> 00:18:11,486
This looks better
than when we started.


332
00:18:12,046 --> 00:18:14,616
Still not great, but I
do have an appointment


333
00:18:14,616 --> 00:18:18,956
that is unlocked
today to fix it.


334
00:18:21,176 --> 00:18:25,066
But I also know another trick to
make notifications look nicer.


335
00:18:26,026 --> 00:18:27,026
We can add pictures.


336
00:18:27,306 --> 00:18:30,346
Pictures are always nice,
especially on party invitations.


337
00:18:31,466 --> 00:18:34,866
So we can use the
same media attachments


338
00:18:35,156 --> 00:18:39,456
that we used earlier also in
NotificationContentExtensions.


339
00:18:41,036 --> 00:18:43,276
Since they're added to
the notification content,


340
00:18:43,636 --> 00:18:46,306
you can access them inside
your content extension.


341
00:18:46,846 --> 00:18:48,856
So when you receive the
notification [inaudible]


342
00:18:49,316 --> 00:18:54,336
notification method, you
can extract the attachments


343
00:18:54,756 --> 00:18:55,406
from your content.


344
00:18:56,046 --> 00:19:00,726
As I mentioned earlier,
the attachment is managed


345
00:19:00,726 --> 00:19:03,046
by the system, and it's
moved to a separate location.


346
00:19:03,586 --> 00:19:05,616
This means that it's
outside of your sandbox.


347
00:19:05,946 --> 00:19:08,816
So you need to tell the system
that you want to start using it


348
00:19:09,116 --> 00:19:10,916
and tell the system
when you're done.


349
00:19:12,306 --> 00:19:15,326
When you have access, you
just use it as a file.


350
00:19:15,666 --> 00:19:18,176
In this case, I'm adding
it to my image view.


351
00:19:19,826 --> 00:19:22,476
And here's my notification now.


352
00:19:24,826 --> 00:19:25,976
You can tell this
guy's ready to party.


353
00:19:26,516 --> 00:19:33,196
[ Applause ]


354
00:19:33,696 --> 00:19:36,456
This is much nicer than
the one we started with,


355
00:19:36,946 --> 00:19:38,466
and it's our own custom UI.


356
00:19:38,466 --> 00:19:41,056
We want, we wanted to show
additional information


357
00:19:41,056 --> 00:19:42,816
to the user, and we added that.


358
00:19:43,146 --> 00:19:44,396
We wanted to add a picture.


359
00:19:44,626 --> 00:19:45,516
We have that, too.


360
00:19:47,356 --> 00:19:48,996
Well, we missed the next step.


361
00:19:49,196 --> 00:19:50,726
We want to make this
interactive.


362
00:19:51,066 --> 00:19:53,136
We want to implement
the actions.


363
00:19:55,386 --> 00:19:58,376
Let's do that now.


364
00:20:00,596 --> 00:20:03,616
Default actions by
default work the same way


365
00:20:03,616 --> 00:20:05,966
as you're used to since iOS 8.


366
00:20:07,156 --> 00:20:08,196
They are delivered to the app.


367
00:20:08,426 --> 00:20:09,726
When the user taps
on the button,


368
00:20:10,296 --> 00:20:12,056
the app receives the
[inaudible] request,


369
00:20:13,306 --> 00:20:15,416
and the notification gets
dismissed immediately.


370
00:20:16,456 --> 00:20:18,926
This is pretty convenient
because it's a behavior


371
00:20:18,926 --> 00:20:22,316
that you often use, and it's
pretty simple to implement,


372
00:20:23,026 --> 00:20:26,126
but sometimes you want to
show the user the effect


373
00:20:26,326 --> 00:20:28,546
of the action for,
like, in the example


374
00:20:28,546 --> 00:20:29,736
of the calendar invitation.


375
00:20:30,096 --> 00:20:31,646
That when the user
tapped accept,


376
00:20:32,606 --> 00:20:36,076
the content highlighted the
event that I just accepted.


377
00:20:36,506 --> 00:20:40,376
And you can do that in your
NotificationContentExtensions.


378
00:20:41,216 --> 00:20:43,746
You do that by intercepting
the action


379
00:20:44,076 --> 00:20:45,476
in the notification extension.


380
00:20:46,426 --> 00:20:50,436
When you do that, the action
is delivered to the extension


381
00:20:51,136 --> 00:20:54,406
and it can decide to delay the
dismissal of the notification.


382
00:20:54,526 --> 00:20:57,976
So it has time to handle
the action, update the UI,


383
00:20:58,656 --> 00:20:59,736
and dismiss when it's done.


384
00:21:00,446 --> 00:21:03,646
This is very simple,
and you do it


385
00:21:03,876 --> 00:21:07,046
with the second method inside
the NotificationContentExtension


386
00:21:07,046 --> 00:21:07,516
protocol.


387
00:21:08,696 --> 00:21:10,266
This method is optional.


388
00:21:10,516 --> 00:21:12,236
You don't need to implement
it if you don't need


389
00:21:12,236 --> 00:21:15,146
to intercept the actions,
but if you do implement it,


390
00:21:15,386 --> 00:21:17,506
it means that you have
to handle all the actions


391
00:21:17,536 --> 00:21:18,906
that are in that notification.


392
00:21:19,236 --> 00:21:22,766
You cannot handle one and
not look at the other ones.


393
00:21:24,096 --> 00:21:27,806
So when you receive
the notification,


394
00:21:29,266 --> 00:21:31,436
you can send a response
of your server


395
00:21:31,616 --> 00:21:33,546
to update the information
on the server.


396
00:21:33,666 --> 00:21:35,396
When you receive the
response from the server,


397
00:21:35,826 --> 00:21:38,656
you update the UI saying
that the user is going


398
00:21:38,656 --> 00:21:39,866
to the party, of course.


399
00:21:40,676 --> 00:21:43,286
And when it's done, you can
dismiss the notification.


400
00:21:44,286 --> 00:21:49,056
So that the interface was
updated before dismissing it.


401
00:21:50,326 --> 00:21:53,546
In case you want to
still forward the action


402
00:21:53,546 --> 00:21:55,936
to your application,
you can do that, too.


403
00:21:56,646 --> 00:21:58,636
If you want to do
additional handling,


404
00:21:58,816 --> 00:22:01,366
or you want to keep the code
in, all in the same place,


405
00:22:01,746 --> 00:22:05,526
you just call completionHandler
with a different parameter.


406
00:22:07,626 --> 00:22:11,336
And what happens when we do this
is that we receive notification,


407
00:22:11,756 --> 00:22:13,576
we tap on that, and
we can update the UI,


408
00:22:14,766 --> 00:22:16,066
and we dismiss later.


409
00:22:18,656 --> 00:22:24,836
So you saw in my example code
that we implemented the accept


410
00:22:25,266 --> 00:22:28,576
and decline action, and we
have a third one at the bottom.


411
00:22:29,366 --> 00:22:31,326
Because sometimes
when you're responding


412
00:22:31,326 --> 00:22:33,046
to a party invitation,
you want to see,


413
00:22:33,046 --> 00:22:35,316
we want to tell your friends
how excited you are to go


414
00:22:35,316 --> 00:22:37,636
to the party or how upset
you are that you can't go.


415
00:22:38,416 --> 00:22:39,686
So you tap on the
comment action.


416
00:22:41,736 --> 00:22:44,186
The comment action is
a texting production,


417
00:22:45,146 --> 00:22:48,016
like the ones we introduced
in iOS 9, and you use it


418
00:22:48,016 --> 00:22:52,226
in the same way, except with
the new, awesome new framework.


419
00:22:54,226 --> 00:22:55,976
This is a texting production.


420
00:22:56,596 --> 00:22:58,686
A tiny bit of newer PI on this.


421
00:22:58,856 --> 00:23:01,166
You can set the place
holder in the text field,


422
00:23:02,756 --> 00:23:07,216
and when you created the action,
you can add it to your category


423
00:23:07,566 --> 00:23:09,616
so that it's displayed
with notifications.


424
00:23:13,446 --> 00:23:15,926
So when the user taps
on the comment button,


425
00:23:16,606 --> 00:23:17,586
the text will display.


426
00:23:21,056 --> 00:23:25,016
Now since this is an
action like the others ones,


427
00:23:25,186 --> 00:23:26,776
you can handle it
in the same way.


428
00:23:27,026 --> 00:23:29,646
So you can intercept it
inside your extension


429
00:23:29,646 --> 00:23:30,756
and handle it there.


430
00:23:32,086 --> 00:23:32,896
Here's how you do that.


431
00:23:33,516 --> 00:23:34,826
You receive the notification.


432
00:23:37,286 --> 00:23:40,736
You check if it's a
text input action.


433
00:23:42,106 --> 00:23:46,926
You extract the text of the user
typed and send it to the server.


434
00:23:48,066 --> 00:23:50,796
And when you're done, you
dismiss the notification.


435
00:23:53,076 --> 00:23:56,266
And this is what happens.


436
00:23:56,586 --> 00:24:00,876
You tap, type, and there's
a problem again here


437
00:24:00,876 --> 00:24:01,946
with this notification.


438
00:24:02,656 --> 00:24:06,606
I want to respond to the invite,
but there's only a send button,


439
00:24:07,106 --> 00:24:09,726
and I can't say if I want
to accept or decline.


440
00:24:11,866 --> 00:24:15,696
So what we would like to do
is to have the text field


441
00:24:15,696 --> 00:24:18,466
but also two buttons
so I can accept


442
00:24:18,466 --> 00:24:19,576
or decline the invitation.


443
00:24:20,526 --> 00:24:21,826
Something like this.


444
00:24:23,176 --> 00:24:23,676
Would that work?


445
00:24:25,746 --> 00:24:28,716
Well, there's no new API to do
this, and there's no new API


446
00:24:28,946 --> 00:24:30,276
because it already exists.


447
00:24:30,776 --> 00:24:36,156
You can use the existing UIKit
custom input accessory view API


448
00:24:36,936 --> 00:24:39,976
to add your own custom into the
text field to the notification.


449
00:24:40,516 --> 00:24:48,586
[ Applause ]


450
00:24:49,086 --> 00:24:52,386
To do that, the first thing
you want to do is to say


451
00:24:52,386 --> 00:24:54,456
that your controller can
become first responder.


452
00:24:55,376 --> 00:24:59,686
This tells both the UIKit
system that it's part


453
00:24:59,686 --> 00:25:03,036
of the responder chain and
the notification system tells


454
00:25:03,036 --> 00:25:05,026
that you don't want the
standard text field.


455
00:25:07,706 --> 00:25:11,986
Then you create your own
custom inputAccessoryView,


456
00:25:12,186 --> 00:25:13,506
in this case, like mine,


457
00:25:13,586 --> 00:25:15,216
there was a text
field and two buttons.


458
00:25:16,976 --> 00:25:22,386
And then when I receive
the response, the action,


459
00:25:22,596 --> 00:25:24,036
the comment action
from the user,


460
00:25:24,656 --> 00:25:28,286
I can make it first responder
so that the text field


461
00:25:28,286 --> 00:25:29,486
and the keyboard appears.


462
00:25:29,486 --> 00:25:31,336
I need to do both calls here


463
00:25:31,336 --> 00:25:34,356
because the first one makes a
view controller first responder.


464
00:25:34,356 --> 00:25:35,676
So the text field appears,


465
00:25:36,026 --> 00:25:38,286
and the second one makes the
text field first responder


466
00:25:38,286 --> 00:25:39,526
so that the keyboard appears.


467
00:25:42,446 --> 00:25:45,366
You notice that in this case, I
don't really, I'm not interested


468
00:25:45,366 --> 00:25:47,996
in the fact that it's a
textable action or not.


469
00:25:47,996 --> 00:25:50,736
You can use regular
actions because I'm going


470
00:25:51,546 --> 00:25:54,656
to get the text from the user
from my own inputAccessoryView.


471
00:25:54,846 --> 00:25:56,276
So I have access to that UI.


472
00:25:56,276 --> 00:26:02,556
And the result of this is
that when you tap on comment,


473
00:26:03,286 --> 00:26:05,156
now you can type your response


474
00:26:05,876 --> 00:26:07,976
and actually respond
to the invitation.


475
00:26:12,686 --> 00:26:15,986
So this was all for
NotificationContentExtensions.


476
00:26:16,336 --> 00:26:20,756
There are some other small bits
of the PI that you can come


477
00:26:20,756 --> 00:26:22,916
and talk to us at the labs
a little later in the week.


478
00:26:26,386 --> 00:26:31,026
And what we learned today is how
to use attachments in custom UI,


479
00:26:31,576 --> 00:26:34,036
in Notification Content
Extensions in iOS X.


480
00:26:35,256 --> 00:26:40,046
We learned how to download and
add attachments to notifications


481
00:26:40,306 --> 00:26:41,756
by using a service extension.


482
00:26:43,156 --> 00:26:45,716
We learned how to do
custom UI, fully custom UI


483
00:26:45,716 --> 00:26:49,176
with your specialized content
with the content extensions


484
00:26:49,486 --> 00:26:53,566
that can use media attachments
and can handle user interaction.


485
00:26:55,156 --> 00:26:59,056
For more information
about all of this,


486
00:26:59,116 --> 00:27:01,216
there's a special
page for this session.


487
00:27:04,186 --> 00:27:07,956
We had a session earlier today
that if you missed you can catch


488
00:27:07,956 --> 00:27:10,546
up to learn about the new
user notifications framework


489
00:27:10,546 --> 00:27:12,996
and more details about
the service extension.


490
00:27:14,776 --> 00:27:15,096
Thank you.

