1
00:00:07,516 --> 00:00:21,106
[ Music ]


2
00:00:21,606 --> 00:00:22,216
>> Hi everyone!


3
00:00:22,216 --> 00:00:23,846
Good morning!


4
00:00:24,516 --> 00:00:28,036
[ Applause ]


5
00:00:28,536 --> 00:00:29,766
Thanks, everyone, for being here


6
00:00:29,806 --> 00:00:30,136
today.


7
00:00:30,376 --> 00:00:31,516
My name's Jesse Pease.


8
00:00:31,516 --> 00:00:32,476
And I'm an engineer on the


9
00:00:32,476 --> 00:00:33,666
Health Engineering Team.


10
00:00:34,036 --> 00:00:35,266
And today, I'm going to show you


11
00:00:35,266 --> 00:00:37,606
how to make your very first app.


12
00:00:38,516 --> 00:00:40,286
So today we're going to step out


13
00:00:40,286 --> 00:00:41,256
of our comfort zones.


14
00:00:41,516 --> 00:00:42,736
We're going to explore, and


15
00:00:43,006 --> 00:00:44,006
we're going to start building


16
00:00:44,006 --> 00:00:44,866
our dream app.


17
00:00:45,506 --> 00:00:46,206
You know that one that you've


18
00:00:46,206 --> 00:00:47,316
had in the back of your mind


19
00:00:47,316 --> 00:00:48,216
while you're waiting in line for


20
00:00:48,216 --> 00:00:49,016
your coffee in the morning?


21
00:00:49,566 --> 00:00:50,716
Or that one that you drew out on


22
00:00:50,716 --> 00:00:52,306
your napkin on the flight out


23
00:00:52,306 --> 00:00:53,096
here to WWDC?


24
00:00:53,896 --> 00:00:54,746
Or that one that you tell your


25
00:00:54,746 --> 00:00:55,676
friends about and make them


26
00:00:55,676 --> 00:00:57,256
promise not to tell anyone else?


27
00:00:58,136 --> 00:00:59,446
That one. That's the idea we're


28
00:00:59,446 --> 00:01:03,286
going to start working on today.


29
00:01:03,466 --> 00:01:05,016
As Joseph Chilton Pearce said,


30
00:01:05,385 --> 00:01:07,106
"To live a creative life we must


31
00:01:07,106 --> 00:01:08,346
lose the fear of being wrong."


32
00:01:09,166 --> 00:01:10,286
And when we start building new


33
00:01:10,286 --> 00:01:11,986
ideas, we're bound to run into


34
00:01:11,986 --> 00:01:12,836
bumps in the road.


35
00:01:13,286 --> 00:01:14,836
But our goal today is to show


36
00:01:14,836 --> 00:01:16,126
you all the building blocks you


37
00:01:16,126 --> 00:01:17,796
need to make your dream app a


38
00:01:17,796 --> 00:01:18,286
reality.


39
00:01:18,286 --> 00:01:21,386
We're going to start off today


40
00:01:21,386 --> 00:01:22,976
by organizing our ideas.


41
00:01:23,686 --> 00:01:24,696
Then we're going to learn how to


42
00:01:24,696 --> 00:01:25,546
navigate Xcode.


43
00:01:25,546 --> 00:01:27,776
And then build a simple game


44
00:01:27,976 --> 00:01:28,526
using Swift.


45
00:01:29,266 --> 00:01:30,546
Now familiarity with a


46
00:01:30,546 --> 00:01:31,826
programming language will help


47
00:01:31,826 --> 00:01:32,366
you today.


48
00:01:32,986 --> 00:01:34,206
But if you're new to Swift or


49
00:01:34,206 --> 00:01:35,516
looking for a helpful resource,


50
00:01:35,806 --> 00:01:37,296
I recommend downloading the App


51
00:01:37,456 --> 00:01:39,146
Development with Swift book from


52
00:01:39,146 --> 00:01:40,036
the Apple bookstore.


53
00:01:40,456 --> 00:01:41,486
Or checking out the Swift


54
00:01:41,486 --> 00:01:44,506
Playgrounds app for iPad.


55
00:01:44,716 --> 00:01:46,026
Later [inaudible] is going to


56
00:01:46,026 --> 00:01:47,696
show you how to add multiple


57
00:01:47,696 --> 00:01:49,286
views within your app and then


58
00:01:49,286 --> 00:01:50,856
persist in display data for your


59
00:01:50,856 --> 00:01:52,496
users over time.


60
00:01:53,716 --> 00:01:55,046
So Tono [phonetic] and I were


61
00:01:55,046 --> 00:01:56,556
recently at a unicorn petting


62
00:01:56,556 --> 00:01:56,806
zoo.


63
00:01:57,316 --> 00:01:58,346
Yes, we actually have these in


64
00:01:58,346 --> 00:01:58,806
California.


65
00:01:58,806 --> 00:02:01,096
And we were after having this


66
00:02:01,096 --> 00:02:02,516
experience countless times of


67
00:02:02,516 --> 00:02:03,336
waiting in line.


68
00:02:03,716 --> 00:02:04,956
We decided that we needed to


69
00:02:04,956 --> 00:02:06,016
make something to keep ourselves


70
00:02:06,016 --> 00:02:07,116
occupied while we wait.


71
00:02:07,706 --> 00:02:08,966
So we decided to make a game.


72
00:02:09,446 --> 00:02:11,106
Something quick and fun to keep


73
00:02:11,106 --> 00:02:12,326
us occupied for a short amount


74
00:02:12,326 --> 00:02:12,806
of time.


75
00:02:13,526 --> 00:02:14,726
And I said, "Well, of course if


76
00:02:14,726 --> 00:02:15,876
we make a game, it has to have


77
00:02:15,876 --> 00:02:16,526
unicorns."


78
00:02:17,576 --> 00:02:18,566
But then we needed something


79
00:02:18,566 --> 00:02:20,006
that people would want to avoid.


80
00:02:20,666 --> 00:02:21,726
Maybe poop.


81
00:02:22,176 --> 00:02:25,296
And so we decided to make a


82
00:02:25,296 --> 00:02:26,636
whack-a-mole-type game with


83
00:02:26,636 --> 00:02:27,836
unicorn and poop.


84
00:02:28,216 --> 00:02:29,966
And then incorporate scores and


85
00:02:29,966 --> 00:02:31,586
eventually a leaderboard to keep


86
00:02:31,586 --> 00:02:32,896
track of our scores over time.


87
00:02:33,146 --> 00:02:33,976
Because we have a little bit of


88
00:02:33,976 --> 00:02:34,916
a competitive nature.


89
00:02:34,916 --> 00:02:37,816
So let's take a look at what


90
00:02:37,816 --> 00:02:39,086
this game play looks like.


91
00:02:39,866 --> 00:02:42,006
Upon pressing start game, a


92
00:02:42,006 --> 00:02:43,496
random emoji's going to appear


93
00:02:43,696 --> 00:02:44,676
somewhere randomly on the


94
00:02:44,676 --> 00:02:45,006
screen.


95
00:02:45,506 --> 00:02:46,896
Either a unicorn or a poop.


96
00:02:46,896 --> 00:02:49,556
At that point, the user has one


97
00:02:49,556 --> 00:02:51,086
second to click that button.


98
00:02:52,586 --> 00:02:54,286
Now, if they hit the unicorn,


99
00:02:54,656 --> 00:02:55,876
then they get one point.


100
00:02:56,276 --> 00:02:57,446
Then if they accidentally tap


101
00:02:57,486 --> 00:02:59,416
the poop, then the game is over.


102
00:03:00,286 --> 00:03:01,686
But in addition to this, if they


103
00:03:01,686 --> 00:03:03,076
miss the unicorn, the


104
00:03:03,076 --> 00:03:05,276
not-so-lonely unicorn, and so


105
00:03:05,446 --> 00:03:06,556
they automatically lose the


106
00:03:06,556 --> 00:03:06,856
game.


107
00:03:07,366 --> 00:03:08,706
So the goal is hit all the


108
00:03:08,706 --> 00:03:09,316
unicorns.


109
00:03:09,596 --> 00:03:11,116
Don't hit the poops.


110
00:03:11,636 --> 00:03:12,356
Let's take a look at this.


111
00:03:16,076 --> 00:03:17,356
Get it! Nice!


112
00:03:18,716 --> 00:03:19,516
Get that unicorn.


113
00:03:20,086 --> 00:03:23,346
Oh! There we go, one more.


114
00:03:23,446 --> 00:03:24,426
Oh! Oh, shoot.


115
00:03:24,766 --> 00:03:25,686
Moving too quickly and


116
00:03:25,686 --> 00:03:27,736
accidentally hit a poop.


117
00:03:28,246 --> 00:03:29,276
Let's jump right in.


118
00:03:29,866 --> 00:03:32,016
So for those of you who aren't


119
00:03:32,016 --> 00:03:34,256
familiar, Xcode is a tool we use


120
00:03:34,256 --> 00:03:35,916
on macOS to help build iOS,


121
00:03:36,376 --> 00:03:38,666
macOS, watchOS, and tvOS apps.


122
00:03:38,666 --> 00:03:41,276
You can download it from the App


123
00:03:41,276 --> 00:03:42,086
Store if you don't have it


124
00:03:42,086 --> 00:03:42,576
already.


125
00:03:43,566 --> 00:03:45,206
So when we open up Xcode, we


126
00:03:45,206 --> 00:03:46,736
first want to select create a


127
00:03:46,736 --> 00:03:47,826
new Xcode project.


128
00:03:49,046 --> 00:03:51,126
After this, we see all the


129
00:03:51,126 --> 00:03:52,556
different type of app templates


130
00:03:52,556 --> 00:03:53,316
that we can create.


131
00:03:54,146 --> 00:03:55,076
In our case, we're going to


132
00:03:55,076 --> 00:03:56,126
select single view app.


133
00:03:56,716 --> 00:03:57,736
But notice here that you could


134
00:03:57,736 --> 00:03:59,706
also select a page based app, a


135
00:03:59,776 --> 00:04:01,196
sticker pack app, or even a


136
00:04:01,196 --> 00:04:01,656
game.


137
00:04:02,066 --> 00:04:03,596
But our game is very simple, so


138
00:04:03,596 --> 00:04:04,816
we will just stick with single


139
00:04:04,816 --> 00:04:05,976
view app.


140
00:04:05,976 --> 00:04:08,886
And then hit next.


141
00:04:08,886 --> 00:04:10,146
From here we type in our app


142
00:04:10,316 --> 00:04:11,216
name, which in our case is


143
00:04:11,216 --> 00:04:12,416
Disappearing Unicorns.


144
00:04:12,666 --> 00:04:14,066
And our ex-- , our team name is


145
00:04:14,066 --> 00:04:14,926
Example Team.


146
00:04:15,456 --> 00:04:16,296
And hit next.


147
00:04:17,366 --> 00:04:18,875
After we choose a place to save


148
00:04:18,875 --> 00:04:20,245
our app, we're dropped into the


149
00:04:20,245 --> 00:04:21,255
project settings.


150
00:04:21,625 --> 00:04:22,766
Now we won't be making any


151
00:04:22,766 --> 00:04:24,376
changes here today, so we'll go


152
00:04:24,376 --> 00:04:25,336
ahead and look at the other


153
00:04:25,336 --> 00:04:26,736
important files in our Project


154
00:04:26,736 --> 00:04:28,436
Navigator on the left-hand side.


155
00:04:29,226 --> 00:04:30,186
The first one is the


156
00:04:30,186 --> 00:04:30,896
AppDelegate.


157
00:04:31,506 --> 00:04:34,156
An AppDelegate is created for


158
00:04:34,156 --> 00:04:35,856
each app, and it helps us manage


159
00:04:35,856 --> 00:04:37,196
the lifecycle of our app over


160
00:04:37,196 --> 00:04:37,416
time.


161
00:04:38,586 --> 00:04:39,626
There's certain methods that can


162
00:04:39,626 --> 00:04:40,936
be called when we're going into


163
00:04:40,936 --> 00:04:42,236
the background or coming into


164
00:04:42,236 --> 00:04:42,866
the foreground.


165
00:04:43,346 --> 00:04:44,586
But we won't be making any


166
00:04:44,586 --> 00:04:45,756
changes with our AppDelegate


167
00:04:45,756 --> 00:04:46,416
today either.


168
00:04:46,926 --> 00:04:49,966
Next I'm going to select the


169
00:04:49,966 --> 00:04:51,356
main storyboard file.


170
00:04:52,106 --> 00:04:53,746
The storyboard is where we


171
00:04:53,746 --> 00:04:55,336
create the UI or the user


172
00:04:55,336 --> 00:04:56,116
interface for our app.


173
00:04:56,596 --> 00:04:58,006
And where we can add all of the


174
00:04:58,006 --> 00:04:59,806
UI elements like buttons,


175
00:04:59,996 --> 00:05:01,336
labels, or images.


176
00:05:02,116 --> 00:05:03,056
But it's not just where we


177
00:05:03,056 --> 00:05:04,626
create that one single view.


178
00:05:04,856 --> 00:05:06,306
It's also where we lay out all


179
00:05:06,306 --> 00:05:07,786
of the logical flow for our app


180
00:05:07,926 --> 00:05:08,566
over time.


181
00:05:08,876 --> 00:05:09,416
The story.


182
00:05:09,886 --> 00:05:12,506
Next we'll select the view


183
00:05:12,506 --> 00:05:13,036
controller.


184
00:05:13,636 --> 00:05:16,536
The view controller helps us


185
00:05:16,536 --> 00:05:17,966
control out view, and this is


186
00:05:17,966 --> 00:05:19,246
where we'll write the logical


187
00:05:19,246 --> 00:05:22,126
code for our app.


188
00:05:22,406 --> 00:05:23,436
Well let's talk about how we


189
00:05:23,436 --> 00:05:25,156
create our views within our


190
00:05:25,156 --> 00:05:25,866
storyboard.


191
00:05:26,876 --> 00:05:28,536
Let's navigate back over to the


192
00:05:28,536 --> 00:05:29,846
main dot-storyboard file.


193
00:05:30,206 --> 00:05:32,006
And at this point, make sure not


194
00:05:32,006 --> 00:05:32,656
to select the


195
00:05:32,656 --> 00:05:34,276
launchscreen.storyboard.


196
00:05:34,876 --> 00:05:36,586
The launchscreen storyboard is


197
00:05:36,586 --> 00:05:38,206
what we use to create the view


198
00:05:38,206 --> 00:05:39,296
for when our app is being


199
00:05:39,296 --> 00:05:40,466
launched or loaded onto the


200
00:05:40,466 --> 00:05:42,646
screen the first time.


201
00:05:43,166 --> 00:05:44,166
You'll notice in the upper


202
00:05:44,166 --> 00:05:45,116
right-hand corner of our


203
00:05:45,116 --> 00:05:47,646
storyboard here that there's an


204
00:05:47,726 --> 00:05:48,976
object library button.


205
00:05:49,146 --> 00:05:50,476
This is a button with a circle


206
00:05:50,476 --> 00:05:51,816
and a little square inside.


207
00:05:52,336 --> 00:05:53,886
This is where we can take things


208
00:05:53,886 --> 00:05:56,326
like buttons or labels or images


209
00:05:56,576 --> 00:05:57,766
and drag them onto our


210
00:05:57,766 --> 00:05:58,446
storyboard.


211
00:05:58,876 --> 00:06:01,346
On the left-hand side, you'll


212
00:06:01,416 --> 00:06:03,186
see the outline view for our


213
00:06:03,956 --> 00:06:04,026
app.


214
00:06:04,606 --> 00:06:05,916
And if you click the little


215
00:06:05,916 --> 00:06:07,466
disclosure triangle, you'll see


216
00:06:07,466 --> 00:06:08,336
all the different things that


217
00:06:08,336 --> 00:06:09,836
are currently on our storyboard.


218
00:06:09,836 --> 00:06:11,346
Now you're thinking to yourself,


219
00:06:11,556 --> 00:06:12,366
"There's nothing on this


220
00:06:12,366 --> 00:06:12,896
storyboard.


221
00:06:12,986 --> 00:06:13,736
Why is this helpful?"


222
00:06:14,266 --> 00:06:15,546
Well, in the future, you may


223
00:06:15,546 --> 00:06:16,836
have lots of elements on your


224
00:06:16,836 --> 00:06:17,436
storyboard.


225
00:06:17,846 --> 00:06:19,106
And eventually you may not be


226
00:06:19,106 --> 00:06:20,176
able to find something because


227
00:06:20,176 --> 00:06:21,256
it could be under something


228
00:06:21,256 --> 00:06:21,466
else.


229
00:06:21,576 --> 00:06:22,456
Or maybe you've accidentally


230
00:06:22,456 --> 00:06:23,356
created duplicates.


231
00:06:23,566 --> 00:06:24,846
So this is a great place to go


232
00:06:24,846 --> 00:06:25,816
if you're looking for all of the


233
00:06:25,816 --> 00:06:26,776
elements that you've put on your


234
00:06:26,776 --> 00:06:27,356
storyboard.


235
00:06:28,576 --> 00:06:30,306
Alright. Let's go ahead and jump


236
00:06:30,306 --> 00:06:31,756
into our demo and start making


237
00:06:31,756 --> 00:06:31,976
our app.


238
00:06:32,046 --> 00:06:35,796
So here I'm going to go over to


239
00:06:35,796 --> 00:06:37,426
my computer where I already have


240
00:06:37,546 --> 00:06:39,136
Xcode launched.


241
00:06:39,896 --> 00:06:41,796
Okay. And I have my Disappearing


242
00:06:41,796 --> 00:06:43,896
Unicorns file.


243
00:06:44,066 --> 00:06:45,496
Here I'm navigating to the main


244
00:06:45,496 --> 00:06:46,286
storyboard.


245
00:06:46,516 --> 00:06:47,746
And let's go ahead and start off


246
00:06:47,746 --> 00:06:48,946
by adding all of those UI


247
00:06:49,056 --> 00:06:50,376
elements that we need to create


248
00:06:50,376 --> 00:06:50,776
our game.


249
00:06:51,396 --> 00:06:52,436
So I'm going to go up to the


250
00:06:52,436 --> 00:06:53,506
object library.


251
00:06:53,766 --> 00:06:55,276
And I can scroll through here


252
00:06:55,436 --> 00:06:56,486
and see all of the different


253
00:06:56,486 --> 00:06:57,636
things that I can put on there.


254
00:06:58,436 --> 00:07:01,136
We have labels, buttons, text


255
00:07:01,246 --> 00:07:03,726
fields, activity indicators,


256
00:07:04,226 --> 00:07:04,836
even images.


257
00:07:05,736 --> 00:07:07,576
But let's start off with that


258
00:07:07,576 --> 00:07:08,656
start-game button.


259
00:07:08,796 --> 00:07:10,306
So here I'll search for button.


260
00:07:11,136 --> 00:07:13,356
And click and drag the button to


261
00:07:13,356 --> 00:07:14,526
the center of my storyboard.


262
00:07:15,386 --> 00:07:17,506
Here I'll double click to change


263
00:07:17,506 --> 00:07:19,106
the text to start game,


264
00:07:19,156 --> 00:07:20,346
exclamation point.


265
00:07:20,346 --> 00:07:22,886
But this is a little bit small.


266
00:07:23,306 --> 00:07:24,816
So in order to make this larger,


267
00:07:24,906 --> 00:07:26,306
I can go to the upper right-hand


268
00:07:26,306 --> 00:07:27,716
corner of Xcode and open up the


269
00:07:27,716 --> 00:07:28,586
Inspector pane.


270
00:07:28,586 --> 00:07:30,276
And then select this little


271
00:07:30,356 --> 00:07:31,466
slider button which is the


272
00:07:31,466 --> 00:07:32,486
Attributes Inspector.


273
00:07:32,916 --> 00:07:33,886
This is where we change


274
00:07:33,886 --> 00:07:35,946
attributes of the items on our


275
00:07:35,946 --> 00:07:36,556
storyboard.


276
00:07:36,976 --> 00:07:38,326
In this case, I'm going to make


277
00:07:38,326 --> 00:07:39,286
my font much bigger.


278
00:07:39,746 --> 00:07:42,856
From size 15 to size 50.


279
00:07:43,336 --> 00:07:45,056
And hit done.


280
00:07:45,056 --> 00:07:46,726
Now to quickly create copies of


281
00:07:46,726 --> 00:07:48,716
items on our storyboard, I can


282
00:07:48,936 --> 00:07:50,526
hold down the option key and


283
00:07:50,526 --> 00:07:52,526
click and drag on my storyboard


284
00:07:52,526 --> 00:07:53,776
to quickly create another copy


285
00:07:53,776 --> 00:07:54,446
of this button.


286
00:07:55,406 --> 00:07:56,926
And so in this case, I'm going


287
00:07:56,926 --> 00:07:59,656
to change start game to the


288
00:07:59,656 --> 00:08:01,026
emoji for a unicorn.


289
00:08:01,216 --> 00:08:02,206
And to pull up the emoji


290
00:08:02,206 --> 00:08:03,216
keyboard, I can hit the


291
00:08:03,216 --> 00:08:06,886
control-command-space key and


292
00:08:06,916 --> 00:08:07,816
select unicorn.


293
00:08:08,916 --> 00:08:11,576
Great! Let's go ahead and make a


294
00:08:11,576 --> 00:08:13,966
quick copy of this as well for


295
00:08:13,966 --> 00:08:14,946
our poop.


296
00:08:16,016 --> 00:08:20,206
Control-command-space and poop.


297
00:08:21,206 --> 00:08:22,986
Awesome. And one more button for


298
00:08:22,986 --> 00:08:24,076
our leaderboard button.


299
00:08:24,456 --> 00:08:26,596
So click, option, drag.


300
00:08:27,346 --> 00:08:29,676
Double click leaderboard.


301
00:08:29,826 --> 00:08:31,906
Uh-oh. Not all caps.


302
00:08:32,775 --> 00:08:34,676
And change our font here from


303
00:08:34,676 --> 00:08:37,096
size 50 to size something much


304
00:08:37,155 --> 00:08:37,616
smaller.


305
00:08:37,706 --> 00:08:39,046
Maybe 25. Awesome.


306
00:08:39,676 --> 00:08:42,316
Now we need one more element on


307
00:08:42,316 --> 00:08:45,496
our storyboard which is a label


308
00:08:45,496 --> 00:08:46,106
for our points.


309
00:08:47,016 --> 00:08:48,666
So go back to my object library


310
00:08:48,666 --> 00:08:49,846
and search for label.


311
00:08:49,846 --> 00:08:52,116
And then click and drag this


312
00:08:52,276 --> 00:08:53,016
onto the screen.


313
00:08:53,946 --> 00:08:54,986
Here I'm going to change this


314
00:08:54,986 --> 00:08:56,696
text to be zero.


315
00:08:57,166 --> 00:08:58,246
And then change the font to


316
00:08:58,246 --> 00:09:00,166
something much larger like size


317
00:09:00,166 --> 00:09:00,836
90.


318
00:09:01,386 --> 00:09:04,036
Awesome! There we go.


319
00:09:04,376 --> 00:09:05,606
Now we have all of the UI


320
00:09:05,666 --> 00:09:06,896
elements that we need to create


321
00:09:06,896 --> 00:09:07,296
our game.


322
00:09:08,426 --> 00:09:09,516
Let's go ahead and start


323
00:09:09,546 --> 00:09:11,536
connecting our UI to our code.


324
00:09:12,386 --> 00:09:14,046
Now to have both the storyboard


325
00:09:14,046 --> 00:09:15,376
and the view controller code up


326
00:09:15,376 --> 00:09:17,246
at the same time, I can open up


327
00:09:17,276 --> 00:09:18,566
this Assistant Editor.


328
00:09:18,836 --> 00:09:19,956
It's the button with two


329
00:09:19,956 --> 00:09:21,176
overlapping circles.


330
00:09:21,846 --> 00:09:25,576
Awesome. Now there's a bunch of


331
00:09:25,626 --> 00:09:26,756
different types of connections


332
00:09:26,756 --> 00:09:28,396
that we can make between the


333
00:09:28,396 --> 00:09:29,636
objects on our storyboard and


334
00:09:29,686 --> 00:09:30,146
our code.


335
00:09:30,646 --> 00:09:31,966
Now the first type is called an


336
00:09:31,966 --> 00:09:33,906
outlet, and an outlet lets us


337
00:09:33,906 --> 00:09:35,516
refer to our user interface


338
00:09:35,706 --> 00:09:36,466
within our code.


339
00:09:37,016 --> 00:09:38,306
Let's start out by creating an


340
00:09:38,306 --> 00:09:39,516
outlet for this start game


341
00:09:39,516 --> 00:09:40,036
button.


342
00:09:41,116 --> 00:09:42,866
To create an outlet, I select


343
00:09:42,866 --> 00:09:44,016
the start-game button on the


344
00:09:44,016 --> 00:09:45,396
storyboard, hold down the


345
00:09:45,396 --> 00:09:47,786
control key, and click and drag


346
00:09:47,786 --> 00:09:49,146
over to my storyboard.


347
00:09:49,146 --> 00:09:50,136
Sorry, over to my view


348
00:09:50,136 --> 00:09:52,686
controller code, and let go.


349
00:09:53,096 --> 00:09:54,576
At this point, I change my


350
00:09:54,576 --> 00:09:56,626
connection from-- type-- oh,


351
00:09:56,846 --> 00:09:57,606
it's already outlet.


352
00:09:57,656 --> 00:09:59,536
Perfect. And I'm going to name


353
00:09:59,536 --> 00:10:02,596
this start game button and hit


354
00:10:02,636 --> 00:10:02,896
connect.


355
00:10:04,526 --> 00:10:05,776
Awesome. Now we have a


356
00:10:05,776 --> 00:10:07,586
connection between our code and


357
00:10:07,586 --> 00:10:08,356
our storyboard.


358
00:10:08,656 --> 00:10:09,806
And we can double check that


359
00:10:09,806 --> 00:10:10,696
this connection was made


360
00:10:10,696 --> 00:10:13,226
correctly, by seeing this little


361
00:10:13,226 --> 00:10:14,976
gray circle to left of


362
00:10:14,976 --> 00:10:15,836
start-game button.


363
00:10:16,176 --> 00:10:17,896
If we hover over it, it


364
00:10:17,896 --> 00:10:18,916
highlights the item on our


365
00:10:18,916 --> 00:10:20,986
storyboard that is connected to


366
00:10:20,986 --> 00:10:22,416
this code.


367
00:10:22,686 --> 00:10:25,036
Now, in the interest of time,


368
00:10:25,036 --> 00:10:26,546
I've already written the code


369
00:10:26,676 --> 00:10:27,866
for our other outlets.


370
00:10:28,346 --> 00:10:29,736
But you'll notice that to the


371
00:10:29,736 --> 00:10:31,106
left of them, they have open


372
00:10:31,106 --> 00:10:31,646
circles.


373
00:10:31,966 --> 00:10:33,126
This means that they haven't


374
00:10:33,126 --> 00:10:34,416
been connected to our storyboard


375
00:10:34,416 --> 00:10:34,556
yet.


376
00:10:35,516 --> 00:10:37,116
To make the connections, we just


377
00:10:37,116 --> 00:10:38,716
click inside the circle to the


378
00:10:38,716 --> 00:10:40,246
left of good button in this


379
00:10:40,246 --> 00:10:40,626
case.


380
00:10:40,856 --> 00:10:42,586
And drag over to our unicorn


381
00:10:42,586 --> 00:10:43,796
button which is the button we


382
00:10:43,796 --> 00:10:45,226
want to be associated with this


383
00:10:45,226 --> 00:10:45,776
line of code.


384
00:10:46,116 --> 00:10:46,626
And let go.


385
00:10:47,736 --> 00:10:49,276
We'll do the same thing for bad


386
00:10:49,276 --> 00:10:53,836
button, leaderboard button, and


387
00:10:53,836 --> 00:10:54,506
points label.


388
00:10:55,776 --> 00:10:57,016
Awesome. Now all of these


389
00:10:57,016 --> 00:10:58,116
connections have been made.


390
00:10:59,086 --> 00:11:00,316
Now another type of connection


391
00:11:00,316 --> 00:11:02,116
we can make is called an action.


392
00:11:02,996 --> 00:11:04,596
And an action is a piece of code


393
00:11:04,596 --> 00:11:06,276
that's linked to an event that


394
00:11:06,276 --> 00:11:07,176
can occur within our app.


395
00:11:07,946 --> 00:11:09,706
In this case, I want an action


396
00:11:09,846 --> 00:11:11,416
method for whenever my


397
00:11:11,586 --> 00:11:12,856
start-game button is pressed.


398
00:11:14,036 --> 00:11:15,766
So to create this connection, I


399
00:11:15,766 --> 00:11:17,046
could hold down the control key


400
00:11:17,046 --> 00:11:18,786
once again with the start-game


401
00:11:18,786 --> 00:11:21,346
button and click and drag over


402
00:11:21,346 --> 00:11:22,656
to my view controller code.


403
00:11:22,986 --> 00:11:24,886
And let go.


404
00:11:25,136 --> 00:11:26,386
This time I will change my


405
00:11:26,386 --> 00:11:28,916
connection to type action and


406
00:11:28,916 --> 00:11:31,306
name this start pressed.


407
00:11:31,546 --> 00:11:33,576
And I want my event to be a


408
00:11:33,576 --> 00:11:35,536
touchup inside event, and hit


409
00:11:35,576 --> 00:11:35,836
connect.


410
00:11:37,366 --> 00:11:38,836
Awesome. You'll notice that


411
00:11:38,836 --> 00:11:40,926
there's this closed circle once


412
00:11:40,926 --> 00:11:41,106
again.


413
00:11:41,156 --> 00:11:43,426
And when I hover over it, the


414
00:11:43,426 --> 00:11:44,196
start-game button is


415
00:11:44,196 --> 00:11:44,726
highlighted.


416
00:11:45,846 --> 00:11:47,186
Now I've already written two


417
00:11:47,186 --> 00:11:49,096
other action methods for both


418
00:11:49,096 --> 00:11:50,456
our good pressed and our bad


419
00:11:50,546 --> 00:11:51,126
button pressed.


420
00:11:52,086 --> 00:11:53,286
But I actually want to make a


421
00:11:53,286 --> 00:11:54,716
different type of connection


422
00:11:54,716 --> 00:11:55,276
this time.


423
00:11:56,046 --> 00:11:58,986
I want to create an event or an


424
00:11:58,986 --> 00:12:00,726
action event for when I press


425
00:12:00,726 --> 00:12:02,316
down on my button.


426
00:12:02,796 --> 00:12:04,116
Because I want my user to get


427
00:12:04,116 --> 00:12:05,506
the point immediately when they


428
00:12:05,506 --> 00:12:06,256
touch the button.


429
00:12:06,346 --> 00:12:07,716
Not when they've touched down


430
00:12:07,826 --> 00:12:08,446
and then back up.


431
00:12:08,446 --> 00:12:10,706
I want to select the object that


432
00:12:10,706 --> 00:12:12,346
I want to be associated with


433
00:12:12,346 --> 00:12:12,776
this action.


434
00:12:12,776 --> 00:12:14,866
In this case, my good button or


435
00:12:14,866 --> 00:12:15,556
my unicorn.


436
00:12:16,166 --> 00:12:17,466
Then go back to my Inspector


437
00:12:17,466 --> 00:12:19,186
pane and click on this little


438
00:12:19,186 --> 00:12:20,976
button with the circle with a


439
00:12:20,976 --> 00:12:22,296
little arrow inside.


440
00:12:22,606 --> 00:12:23,936
This is called our Connections


441
00:12:23,936 --> 00:12:24,536
Inspector.


442
00:12:24,806 --> 00:12:26,506
From here you'll see all the


443
00:12:26,506 --> 00:12:27,916
different types of sent events


444
00:12:28,056 --> 00:12:29,166
that I can create a connection


445
00:12:29,166 --> 00:12:29,416
for.


446
00:12:29,696 --> 00:12:31,766
In this case, I want to create a


447
00:12:31,766 --> 00:12:33,306
connection for the touch-down


448
00:12:33,886 --> 00:12:34,046
event.


449
00:12:34,616 --> 00:12:36,236
I'll click inside this open


450
00:12:36,236 --> 00:12:38,836
circle, and drag over to the


451
00:12:38,956 --> 00:12:40,166
action method that I want to be


452
00:12:40,166 --> 00:12:41,796
associated with this event.


453
00:12:41,796 --> 00:12:43,566
And let go.


454
00:12:43,676 --> 00:12:45,276
I'll do the same thing with my


455
00:12:45,276 --> 00:12:45,996
bad button.


456
00:12:46,896 --> 00:12:49,656
Touch-down, click, and drag over


457
00:12:49,656 --> 00:12:52,176
to bad pressed and let go.


458
00:12:52,316 --> 00:12:52,786
Okay, great.


459
00:12:53,216 --> 00:12:54,606
Just two more things that we


460
00:12:54,606 --> 00:12:55,996
want to do before we can build


461
00:12:55,996 --> 00:12:57,136
and run our app for the very


462
00:12:57,136 --> 00:12:57,836
first time.


463
00:12:58,806 --> 00:13:00,146
The next thing we want to do is


464
00:13:00,146 --> 00:13:01,376
we want to do a little bit of


465
00:13:01,376 --> 00:13:02,316
set-up for our app.


466
00:13:02,836 --> 00:13:04,076
And we can do this in a method


467
00:13:04,076 --> 00:13:04,966
called viewDidLoad.


468
00:13:05,636 --> 00:13:07,486
And a viewDidLoad is created for


469
00:13:07,486 --> 00:13:09,126
a view controller at the very


470
00:13:09,126 --> 00:13:10,206
beginning automatically.


471
00:13:10,696 --> 00:13:12,496
And in here, what I want to do


472
00:13:12,496 --> 00:13:13,316
is a bit of setup.


473
00:13:13,646 --> 00:13:15,776
In this case, I want to hide


474
00:13:15,816 --> 00:13:16,496
some things.


475
00:13:16,816 --> 00:13:18,116
The first thing I want to hide


476
00:13:18,116 --> 00:13:19,166
is that points label.


477
00:13:19,306 --> 00:13:21,006
I don't want that on the screen


478
00:13:21,106 --> 00:13:22,386
the very beginning of our game.


479
00:13:23,346 --> 00:13:25,766
So I'll just type points label


480
00:13:26,186 --> 00:13:27,716
dot-- hmm.


481
00:13:28,186 --> 00:13:29,086
How about hide?


482
00:13:30,126 --> 00:13:32,086
Oh look? Looks like there's a


483
00:13:32,086 --> 00:13:33,616
property called isHidden.


484
00:13:33,936 --> 00:13:35,286
And if I hit enter, it'll


485
00:13:35,316 --> 00:13:37,106
autocomplete into Xcode for me.


486
00:13:37,866 --> 00:13:40,036
To see what isHidden does, I can


487
00:13:40,036 --> 00:13:41,376
hold down the option key on my


488
00:13:41,376 --> 00:13:43,736
keyboard, hover over isHidden


489
00:13:43,736 --> 00:13:45,226
and click.


490
00:13:45,446 --> 00:13:46,916
When I do this, I can read a bit


491
00:13:46,916 --> 00:13:48,746
more about what isHidden is, and


492
00:13:48,746 --> 00:13:49,506
what I can do with it.


493
00:13:49,506 --> 00:13:51,576
In this case, I see that it's


494
00:13:51,576 --> 00:13:52,886
both a getter and a setter.


495
00:13:53,176 --> 00:13:54,116
Which means that I can set


496
00:13:54,166 --> 00:13:56,596
isHidden equal to true, and it


497
00:13:56,596 --> 00:13:57,976
should hide my points label at


498
00:13:57,976 --> 00:14:00,646
the very beginning of my game.


499
00:14:00,846 --> 00:14:03,126
Now I also need some variables


500
00:14:03,126 --> 00:14:04,416
to keep track of my gameplay


501
00:14:04,416 --> 00:14:05,046
over time.


502
00:14:05,416 --> 00:14:06,626
And I've already written these,


503
00:14:06,666 --> 00:14:08,126
so I'll quickly add them using a


504
00:14:08,126 --> 00:14:08,606
shortcut.


505
00:14:10,086 --> 00:14:12,466
One of them needs to be, it's


506
00:14:12,826 --> 00:14:13,736
already initialized, but I


507
00:14:13,736 --> 00:14:15,176
actually need to populate it


508
00:14:15,176 --> 00:14:15,706
with some data.


509
00:14:15,706 --> 00:14:17,746
And that's this game buttons


510
00:14:17,746 --> 00:14:18,146
list.


511
00:14:18,946 --> 00:14:19,926
Now you're thinking to yourself,


512
00:14:20,356 --> 00:14:21,716
"Jessie, if we only have a


513
00:14:21,716 --> 00:14:23,326
unicorn and a poop, why would we


514
00:14:23,326 --> 00:14:25,086
need to create a whole array of


515
00:14:25,086 --> 00:14:25,546
buttons?"


516
00:14:26,246 --> 00:14:27,826
Well, in our case we want to


517
00:14:27,826 --> 00:14:29,426
make our code more extensible


518
00:14:29,596 --> 00:14:30,956
which means make it easier to


519
00:14:30,956 --> 00:14:32,036
build on over time.


520
00:14:32,366 --> 00:14:34,056
Because in the future, we may


521
00:14:34,056 --> 00:14:35,186
have more than just the unicorn


522
00:14:35,186 --> 00:14:35,916
and the poop.


523
00:14:35,916 --> 00:14:37,266
We may have a thumbs-up emoji.


524
00:14:37,266 --> 00:14:39,306
We may have a frowny-face emoji.


525
00:14:39,806 --> 00:14:41,556
So in this case, we want to say


526
00:14:42,346 --> 00:14:47,436
that game buttons equals list of


527
00:14:47,436 --> 00:14:50,256
good button and bad button.


528
00:14:51,596 --> 00:14:53,856
Okay. I've also written some


529
00:14:53,856 --> 00:14:55,476
helper methods that will help us


530
00:14:55,476 --> 00:14:56,316
with our gameplay.


531
00:14:56,926 --> 00:14:58,266
I'm going to add those now.


532
00:14:59,316 --> 00:15:00,866
One of them is this method


533
00:15:00,866 --> 00:15:02,826
called set up fresh game state.


534
00:15:03,476 --> 00:15:05,946
You'll notice that it makes sure


535
00:15:05,946 --> 00:15:06,666
that the start game and


536
00:15:06,666 --> 00:15:08,556
leaderboard button are unhidden.


537
00:15:08,556 --> 00:15:09,346
They're onscreen.


538
00:15:10,006 --> 00:15:11,946
It hides my gameplay buttons,


539
00:15:12,306 --> 00:15:13,876
and it sets up some initial


540
00:15:13,946 --> 00:15:15,666
values for my points.


541
00:15:17,176 --> 00:15:19,036
So here in my viewDidLoad, I


542
00:15:19,036 --> 00:15:21,116
also want to call up set up


543
00:15:21,576 --> 00:15:23,196
fresh game state.


544
00:15:24,056 --> 00:15:25,126
You'll notice here as I'm


545
00:15:25,126 --> 00:15:27,756
typing, Xcode is autocompleting


546
00:15:27,936 --> 00:15:29,016
all of the things that I could


547
00:15:29,016 --> 00:15:31,046
possibly put as some code.


548
00:15:31,046 --> 00:15:33,236
In this case, if I hit enter


549
00:15:33,356 --> 00:15:34,646
with set up fresh game state


550
00:15:34,916 --> 00:15:36,276
already highlighted, it'll


551
00:15:36,276 --> 00:15:39,306
automatically populate it for


552
00:15:39,476 --> 00:15:39,543
me.


553
00:15:39,543 --> 00:15:41,606
Okay. One last thing we want to


554
00:15:41,606 --> 00:15:42,526
do, and then we can build and


555
00:15:42,526 --> 00:15:43,066
run our app.


556
00:15:44,156 --> 00:15:46,396
Just for sanity, in my start


557
00:15:46,396 --> 00:15:48,366
pressed method, action method,


558
00:15:48,366 --> 00:15:49,376
I'm going to put a print


559
00:15:49,446 --> 00:15:50,356
statement here.


560
00:15:51,176 --> 00:15:53,496
And say start game button was


561
00:15:53,496 --> 00:15:53,686
pressed.


562
00:15:54,356 --> 00:15:56,706
And I expect that every time I


563
00:15:56,706 --> 00:15:58,096
press that start-game button,


564
00:15:58,426 --> 00:15:59,746
this line of code will be logged


565
00:15:59,746 --> 00:16:00,466
to my console.


566
00:16:00,956 --> 00:16:03,666
I can show my debug area by


567
00:16:03,736 --> 00:16:05,466
opening up this middle button


568
00:16:05,466 --> 00:16:07,146
here with the line on the bottom


569
00:16:07,146 --> 00:16:07,586
of the square.


570
00:16:08,616 --> 00:16:09,936
I'm going to hide my Inspector


571
00:16:09,936 --> 00:16:10,266
pane.


572
00:16:10,266 --> 00:16:11,126
I don't need that anymore.


573
00:16:11,946 --> 00:16:13,816
Okay. It's finally time.


574
00:16:13,816 --> 00:16:15,426
We can build and run our app.


575
00:16:15,956 --> 00:16:17,036
Now in the upper left-hand


576
00:16:17,036 --> 00:16:18,676
corner, you'll notice that my


577
00:16:18,846 --> 00:16:20,206
app name, Disappearing Unicorns,


578
00:16:20,206 --> 00:16:21,876
with a little arrow to an iPhone


579
00:16:21,936 --> 00:16:22,176
10.


580
00:16:22,756 --> 00:16:24,636
If I click on iPhone 10, I can


581
00:16:24,636 --> 00:16:26,276
see all the different simulators


582
00:16:26,276 --> 00:16:27,456
that I can run my app on.


583
00:16:28,126 --> 00:16:30,046
Now a simulator is a simulation


584
00:16:30,176 --> 00:16:31,526
of a device on my Mac.


585
00:16:32,666 --> 00:16:33,686
And in this case, I want to


586
00:16:33,686 --> 00:16:34,676
select iPhone 10.


587
00:16:35,236 --> 00:16:37,016
Now if I had plugged my phone


588
00:16:37,016 --> 00:16:39,036
into my computer, I could also


589
00:16:39,036 --> 00:16:40,646
build and run my app on my own


590
00:16:40,646 --> 00:16:42,236
device which is pretty cool.


591
00:16:43,556 --> 00:16:45,396
So with iPhone 10 selected, I


592
00:16:45,546 --> 00:16:47,456
can click this play button here.


593
00:16:47,456 --> 00:16:48,996
This will build and run my app


594
00:16:49,256 --> 00:16:50,026
in my simulator.


595
00:16:51,056 --> 00:16:51,976
Here we go.


596
00:16:57,266 --> 00:17:00,566
Oh, nice! Okay, so when I press


597
00:17:00,566 --> 00:17:02,196
this start-game button, I should


598
00:17:02,196 --> 00:17:04,406
see that the start-game button


599
00:17:04,406 --> 00:17:05,566
was pressed is logged in my


600
00:17:05,566 --> 00:17:06,366
console down here.


601
00:17:07,126 --> 00:17:09,036
Awesome! We've just created a


602
00:17:09,036 --> 00:17:10,476
UI, and we've connected it to


603
00:17:10,476 --> 00:17:10,925
our code.


604
00:17:11,856 --> 00:17:13,465
Let's jump back over and start


605
00:17:13,465 --> 00:17:15,296
talking about the game logic for


606
00:17:15,296 --> 00:17:15,536
our app.


607
00:17:19,046 --> 00:17:20,336
Okay, so in the very beginning


608
00:17:20,336 --> 00:17:21,506
of our game, we know we have


609
00:17:21,506 --> 00:17:23,316
that start screen, and it has


610
00:17:23,396 --> 00:17:24,695
two buttons on it.


611
00:17:24,695 --> 00:17:25,986
It has that start-game button


612
00:17:26,036 --> 00:17:27,215
and that leaderboard button.


613
00:17:27,586 --> 00:17:28,756
But we're just talking about the


614
00:17:28,756 --> 00:17:29,696
gameplay right now.


615
00:17:30,016 --> 00:17:31,436
So we're going to wait for the


616
00:17:31,646 --> 00:17:34,236
start-game button pressed.


617
00:17:34,236 --> 00:17:35,536
And once that button is pressed,


618
00:17:35,806 --> 00:17:37,236
we drop into playing mode.


619
00:17:37,996 --> 00:17:39,266
And at the beginning of playing


620
00:17:39,266 --> 00:17:41,796
mode, we get a random emoji in a


621
00:17:41,796 --> 00:17:43,386
random location on the screen.


622
00:17:43,666 --> 00:17:45,216
Either a unicorn or a poop.


623
00:17:46,066 --> 00:17:48,096
At that point, we set a timer


624
00:17:48,096 --> 00:17:50,396
for one second to allow our user


625
00:17:50,396 --> 00:17:52,176
to have time to interact with


626
00:17:52,176 --> 00:17:52,746
our button.


627
00:17:54,136 --> 00:17:55,476
Now at the end of that one


628
00:17:55,476 --> 00:17:57,376
second, if the user did not


629
00:17:57,626 --> 00:17:59,196
press a unicorn, then the


630
00:17:59,196 --> 00:18:00,706
unicorn was lonely, and they


631
00:18:00,706 --> 00:18:01,016
lose.


632
00:18:02,566 --> 00:18:04,466
And if they successfully avoided


633
00:18:04,466 --> 00:18:06,126
tapping a poop, then they get


634
00:18:06,126 --> 00:18:07,966
another round of the game.


635
00:18:08,456 --> 00:18:10,446
Now we also want to say what


636
00:18:10,446 --> 00:18:11,886
happens if they actually do


637
00:18:11,886 --> 00:18:13,116
press one of the buttons during


638
00:18:13,116 --> 00:18:13,496
the game.


639
00:18:14,636 --> 00:18:16,066
Well if they press the unicorn


640
00:18:16,066 --> 00:18:18,206
button, we give them another


641
00:18:18,206 --> 00:18:19,436
round of the game and give them


642
00:18:19,436 --> 00:18:19,876
a point.


643
00:18:20,486 --> 00:18:21,806
Otherwise, if they accidentally


644
00:18:21,806 --> 00:18:24,316
select the poop, then game over.


645
00:18:25,366 --> 00:18:26,736
Okay. Let's talk about what this


646
00:18:26,736 --> 00:18:27,496
code looks like.


647
00:18:28,166 --> 00:18:29,326
We'll start off with the start


648
00:18:29,426 --> 00:18:29,786
screen.


649
00:18:29,786 --> 00:18:32,236
Now we're going to break up our


650
00:18:32,236 --> 00:18:33,656
code into logical blocks.


651
00:18:33,866 --> 00:18:34,786
And in our case, we're going to


652
00:18:34,786 --> 00:18:36,056
use methods to do this.


653
00:18:36,056 --> 00:18:37,856
So that it's not just one long


654
00:18:37,856 --> 00:18:39,376
file full of lots of code.


655
00:18:39,516 --> 00:18:41,096
And it's easier for us to look


656
00:18:41,096 --> 00:18:42,346
at very specific parts.


657
00:18:43,396 --> 00:18:44,706
The first method we're going to


658
00:18:44,706 --> 00:18:46,146
write is called start new game


659
00:18:46,286 --> 00:18:48,006
which we're going to call from


660
00:18:48,166 --> 00:18:48,676
start pressed.


661
00:18:49,266 --> 00:18:50,666
This is going to do some setup


662
00:18:50,696 --> 00:18:52,846
for the beginning of a game


663
00:18:53,666 --> 00:18:53,766
route.


664
00:18:55,656 --> 00:18:57,266
The first thing that happens in


665
00:18:57,266 --> 00:18:58,726
start new game is that we need


666
00:18:58,726 --> 00:19:00,346
to hide that start-game button


667
00:19:00,346 --> 00:19:01,336
and hide that leaderboard


668
00:19:01,336 --> 00:19:01,746
button.


669
00:19:02,656 --> 00:19:04,206
Then we need to update our


670
00:19:04,206 --> 00:19:05,726
points label and set it to zero.


671
00:19:06,366 --> 00:19:07,706
And we can even do some cool


672
00:19:07,706 --> 00:19:09,576
things here like dynamically


673
00:19:09,576 --> 00:19:11,666
change the color of our points


674
00:19:11,666 --> 00:19:13,016
label throughout our code.


675
00:19:13,226 --> 00:19:14,576
And here I'm going to set that


676
00:19:14,576 --> 00:19:15,996
text color to magenta during


677
00:19:16,046 --> 00:19:16,706
active gameplay.


678
00:19:17,756 --> 00:19:19,406
Finally at the end of setting up


679
00:19:19,406 --> 00:19:21,486
my start new game, I'm going to


680
00:19:21,486 --> 00:19:23,196
call the first round of my game.


681
00:19:24,646 --> 00:19:27,326
Okay? Let's look at that.


682
00:19:27,526 --> 00:19:29,196
In our one-game round, we first


683
00:19:29,196 --> 00:19:30,706
update our points label, make


684
00:19:30,706 --> 00:19:31,626
sure that it's up to date.


685
00:19:32,286 --> 00:19:34,116
Then we display a random button.


686
00:19:34,116 --> 00:19:35,586
Either that unicorn or that poop


687
00:19:35,646 --> 00:19:37,396
in a random location on our


688
00:19:37,396 --> 00:19:37,816
screen.


689
00:19:38,316 --> 00:19:39,716
I've written this helper method


690
00:19:39,716 --> 00:19:41,046
display random button that


691
00:19:41,046 --> 00:19:42,376
chooses a random x and y


692
00:19:42,376 --> 00:19:44,276
coordinate to place our button.


693
00:19:45,406 --> 00:19:47,156
Then we set a timer for one


694
00:19:47,156 --> 00:19:47,606
second.


695
00:19:48,726 --> 00:19:51,026
Now, if this timer goes off


696
00:19:51,116 --> 00:19:53,216
after one second, then the code


697
00:19:53,216 --> 00:19:54,596
inside the block of the timer


698
00:19:54,596 --> 00:19:55,306
will get called.


699
00:19:55,796 --> 00:19:58,226
And in that case, we want to


700
00:19:58,226 --> 00:19:59,676
check if the current button


701
00:19:59,676 --> 00:20:01,486
that's on screen is a unicorn,


702
00:20:02,006 --> 00:20:03,216
then the game is over.


703
00:20:03,586 --> 00:20:05,326
Because the user left a lonely


704
00:20:05,326 --> 00:20:07,716
unicorn again.


705
00:20:07,916 --> 00:20:09,806
Otherwise, if they successfully


706
00:20:09,806 --> 00:20:11,116
avoided the poop and that's


707
00:20:11,116 --> 00:20:12,796
still onscreen, they get another


708
00:20:12,796 --> 00:20:13,616
round of our game.


709
00:20:15,056 --> 00:20:15,826
Now let's talk about what


710
00:20:15,826 --> 00:20:17,346
happens if they did press one of


711
00:20:17,346 --> 00:20:18,026
our buttons.


712
00:20:18,626 --> 00:20:19,636
Well if they pressed the good


713
00:20:19,636 --> 00:20:20,676
button, we want to give them


714
00:20:20,676 --> 00:20:21,306
another point.


715
00:20:21,996 --> 00:20:24,726
We actually want to cancel our


716
00:20:24,726 --> 00:20:25,176
timer.


717
00:20:25,176 --> 00:20:26,296
And we're going to do this by


718
00:20:26,296 --> 00:20:27,716
invalidating it so that it


719
00:20:27,716 --> 00:20:29,746
doesn't go off, and then we'll


720
00:20:29,746 --> 00:20:32,936
call another round of our game.


721
00:20:33,056 --> 00:20:34,176
And if they press the bad


722
00:20:34,376 --> 00:20:36,176
button, well let's hide that


723
00:20:36,176 --> 00:20:37,376
button and get it out of the way


724
00:20:37,376 --> 00:20:38,586
so that they can't interact with


725
00:20:38,586 --> 00:20:39,046
it again.


726
00:20:39,636 --> 00:20:41,176
We'll cancel the timer again by


727
00:20:41,526 --> 00:20:42,756
calling invalidate on it.


728
00:20:42,756 --> 00:20:45,736
And then call game over which is


729
00:20:45,736 --> 00:20:46,686
a helpful method that I've


730
00:20:46,686 --> 00:20:49,946
written to help end the game.


731
00:20:50,446 --> 00:20:52,016
Okay, let's add this game logic


732
00:20:52,016 --> 00:20:53,226
into our game.


733
00:20:54,516 --> 00:20:57,936
Going to go back over to our


734
00:20:58,036 --> 00:20:58,886
Xcode project.


735
00:20:58,886 --> 00:21:01,896
And in this case, I don't need


736
00:21:01,896 --> 00:21:03,306
my storyboard up anymore.


737
00:21:03,436 --> 00:21:04,586
I'm just going to be making


738
00:21:04,586 --> 00:21:05,816
changes to my view controller.


739
00:21:06,266 --> 00:21:07,676
So I can select here the


740
00:21:07,676 --> 00:21:10,146
standard editor, and then select


741
00:21:10,146 --> 00:21:11,156
my view controller from my


742
00:21:11,156 --> 00:21:12,156
Project Navigator.


743
00:21:13,266 --> 00:21:15,046
Now, we've already written our


744
00:21:15,126 --> 00:21:17,266
code in our slides.


745
00:21:17,656 --> 00:21:19,086
So I'm going to just quickly add


746
00:21:19,086 --> 00:21:21,206
it into our view controller


747
00:21:21,296 --> 00:21:22,216
using some shortcuts.


748
00:21:22,506 --> 00:21:24,856
So here we have start new game


749
00:21:25,176 --> 00:21:26,716
where we hide our start game and


750
00:21:26,716 --> 00:21:27,906
our leaderboard button.


751
00:21:28,176 --> 00:21:29,506
Set up some initial stuff with


752
00:21:29,506 --> 00:21:31,546
our game points, and then call


753
00:21:31,546 --> 00:21:32,546
one round of our game.


754
00:21:33,066 --> 00:21:35,906
Then we need our one-game round.


755
00:21:36,506 --> 00:21:39,386
And here we update our points


756
00:21:39,386 --> 00:21:41,646
label, display random button,


757
00:21:41,646 --> 00:21:42,576
and call our timer.


758
00:21:43,706 --> 00:21:45,996
And finally we need to put the


759
00:21:45,996 --> 00:21:47,766
code and for the logic in our


760
00:21:47,766 --> 00:21:50,766
both our start pressed.


761
00:21:50,766 --> 00:21:52,196
And our good pressed.


762
00:21:53,426 --> 00:21:57,886
And finally our bad pressed.


763
00:21:58,036 --> 00:21:59,966
Okay. We have all the code we


764
00:21:59,966 --> 00:22:00,256
need.


765
00:22:00,606 --> 00:22:03,156
Let's see how it goes.


766
00:22:03,376 --> 00:22:04,416
Here I'm going to click this


767
00:22:04,476 --> 00:22:05,936
play button again to build and


768
00:22:05,936 --> 00:22:07,316
run our app in the simulator.


769
00:22:09,506 --> 00:22:10,816
Okay, I'm nervous.


770
00:22:11,166 --> 00:22:11,416
Let's go.


771
00:22:12,956 --> 00:22:14,496
Oh! Got one!


772
00:22:15,936 --> 00:22:16,486
Where's another?


773
00:22:16,706 --> 00:22:17,436
There's a lot of poops.


774
00:22:18,136 --> 00:22:20,086
There we go.


775
00:22:20,336 --> 00:22:21,566
Okay, I could seriously play


776
00:22:21,566 --> 00:22:23,096
this all day, but I probably


777
00:22:23,096 --> 00:22:24,086
should let [inaudible name] show


778
00:22:24,086 --> 00:22:24,896
you how to incorporate a


779
00:22:24,896 --> 00:22:25,416
leaderboard.


780
00:22:25,756 --> 00:22:27,356
Whew! So I'm going to try and


781
00:22:27,356 --> 00:22:27,976
lose on purpose here.


782
00:22:29,226 --> 00:22:30,626
Oh, there we go.


783
00:22:31,236 --> 00:22:33,396
Okay. Wow, yeah.


784
00:22:33,396 --> 00:22:33,886
That's great.


785
00:22:34,516 --> 00:22:37,896
[ Applause ]


786
00:22:38,396 --> 00:22:39,426
That was incredible!


787
00:22:39,736 --> 00:22:41,596
We just made a game in less than


788
00:22:41,596 --> 00:22:42,326
30 minutes.


789
00:22:42,846 --> 00:22:44,106
Just think about what you could


790
00:22:44,106 --> 00:22:45,066
do if you had more time.


791
00:22:46,266 --> 00:22:47,456
So we first started out by


792
00:22:47,456 --> 00:22:48,986
learning to navigate Xcode.


793
00:22:49,526 --> 00:22:52,116
Then we created a simple UI


794
00:22:52,266 --> 00:22:53,926
using our storyboard and


795
00:22:53,926 --> 00:22:56,156
connected that UI to our code.


796
00:22:56,476 --> 00:22:58,556
And finally we wrote game logic


797
00:22:58,616 --> 00:22:59,236
using Swift.


798
00:22:59,846 --> 00:23:01,106
All in less than 30 minutes.


799
00:23:01,816 --> 00:23:03,676
Now if we had more time, let's


800
00:23:03,676 --> 00:23:04,636
think about some things that we


801
00:23:04,636 --> 00:23:05,836
could do to take this further.


802
00:23:06,716 --> 00:23:08,016
Well we just used simple UI


803
00:23:08,096 --> 00:23:09,196
elements like buttons and


804
00:23:09,196 --> 00:23:09,666
labels.


805
00:23:10,076 --> 00:23:11,246
But you could use a framework


806
00:23:11,246 --> 00:23:13,796
like SpriteKit to create more


807
00:23:14,156 --> 00:23:15,826
imaginative buttons that have


808
00:23:15,826 --> 00:23:18,036
elements like gravity or physics


809
00:23:18,036 --> 00:23:19,066
associated with them.


810
00:23:20,296 --> 00:23:21,476
We could also add MusicKit


811
00:23:21,476 --> 00:23:23,046
integration and have Apple music


812
00:23:23,046 --> 00:23:24,306
songs playing in the background


813
00:23:24,306 --> 00:23:25,396
during active gameplay.


814
00:23:26,536 --> 00:23:28,166
Or we could read from sensors


815
00:23:28,466 --> 00:23:29,736
and change the speed of our game


816
00:23:29,736 --> 00:23:31,086
based on the user's movement.


817
00:23:32,046 --> 00:23:33,176
Here are three talks from


818
00:23:33,176 --> 00:23:35,066
previous WWDCs that I highly


819
00:23:35,066 --> 00:23:36,146
recommend you check out.


820
00:23:36,796 --> 00:23:38,246
Introduction to SpriteKit from


821
00:23:38,246 --> 00:23:39,106
2013.


822
00:23:39,546 --> 00:23:41,156
Introducing MusicKit from last


823
00:23:41,156 --> 00:23:41,446
year.


824
00:23:41,596 --> 00:23:43,036
And Creating Immersive Apps with


825
00:23:43,036 --> 00:23:44,236
Core Motion from last year as


826
00:23:44,236 --> 00:23:44,476
well.


827
00:23:45,436 --> 00:23:46,226
Thank you so much.


828
00:23:46,286 --> 00:23:46,966
I'm going to welcome [inaudible


829
00:23:47,006 --> 00:23:48,506
name] on the stage to show you


830
00:23:48,506 --> 00:23:50,456
how to add additional screens to


831
00:23:50,456 --> 00:23:50,706
your app.


832
00:23:51,516 --> 00:23:57,500
[ Applause ]


833
00:24:06,086 --> 00:24:07,246
>> Good morning, everyone.


834
00:24:08,106 --> 00:24:09,306
I hope you've enjoyed building


835
00:24:09,306 --> 00:24:10,466
the game with poops and


836
00:24:10,466 --> 00:24:11,126
unicorns.


837
00:24:12,706 --> 00:24:13,886
My name is [inaudible name] and


838
00:24:13,886 --> 00:24:16,856
I'm here to help you add some


839
00:24:16,986 --> 00:24:18,786
awesome features to your apps.


840
00:24:20,006 --> 00:24:22,156
Along the way we'll learn about


841
00:24:22,156 --> 00:24:24,816
APIs and frameworks that are


842
00:24:24,816 --> 00:24:26,766
commonly used across iOS.


843
00:24:28,456 --> 00:24:30,536
First, let's take a look at the


844
00:24:30,536 --> 00:24:32,476
features we want to add to our


845
00:24:32,476 --> 00:24:32,946
game.


846
00:24:34,256 --> 00:24:35,986
We would like to introduce a


847
00:24:35,986 --> 00:24:38,306
leaderboard where we can see


848
00:24:38,306 --> 00:24:40,376
names and the points for each


849
00:24:40,376 --> 00:24:42,206
person who's played our game.


850
00:24:43,576 --> 00:24:46,206
When we tap on a name, we want


851
00:24:46,206 --> 00:24:48,236
to see more information about


852
00:24:48,236 --> 00:24:49,006
that person.


853
00:24:49,536 --> 00:24:53,646
As we build our app today, we'll


854
00:24:53,716 --> 00:24:55,626
focus on three main areas.


855
00:24:56,906 --> 00:24:58,416
One is the data.


856
00:24:58,416 --> 00:25:00,416
Where should we store


857
00:25:00,416 --> 00:25:02,126
information about our users?


858
00:25:03,006 --> 00:25:04,466
How do we retrieve this data?


859
00:25:05,946 --> 00:25:08,006
Second is the user interface.


860
00:25:08,936 --> 00:25:10,266
What does the leaderboard look


861
00:25:10,266 --> 00:25:10,626
like?


862
00:25:11,166 --> 00:25:13,056
What use should it have?


863
00:25:13,666 --> 00:25:15,666
And finally, we'll talk about


864
00:25:15,666 --> 00:25:17,936
the logic that's used for


865
00:25:18,016 --> 00:25:19,786
managing [inaudible] for passing


866
00:25:19,786 --> 00:25:21,936
data, and for doing other tasks


867
00:25:22,116 --> 00:25:22,756
within our apps.


868
00:25:23,826 --> 00:25:26,826
If we break down our app into


869
00:25:26,826 --> 00:25:29,326
these three categories, then we


870
00:25:29,326 --> 00:25:31,286
would actually end up following


871
00:25:31,636 --> 00:25:33,526
a really popular architectural


872
00:25:33,526 --> 00:25:35,636
pattern known as the


873
00:25:35,636 --> 00:25:37,046
model-view-controller.


874
00:25:38,716 --> 00:25:40,596
The model-view-controller


875
00:25:41,456 --> 00:25:43,976
represents the data in the


876
00:25:43,976 --> 00:25:44,696
model.


877
00:25:45,746 --> 00:25:48,276
The UI is represented as the


878
00:25:48,276 --> 00:25:48,856
view.


879
00:25:49,566 --> 00:25:52,286
And the controller is the logic


880
00:25:52,646 --> 00:25:55,056
that communicates with both the


881
00:25:55,056 --> 00:25:56,606
model and the view.


882
00:25:57,146 --> 00:26:00,346
This pattern helps us group


883
00:26:00,346 --> 00:26:01,666
together similar tasks.


884
00:26:02,786 --> 00:26:04,706
And it makes it easy for us to


885
00:26:04,706 --> 00:26:06,976
make changes to one part of our


886
00:26:06,976 --> 00:26:08,656
app without impacting the


887
00:26:08,656 --> 00:26:09,126
others.


888
00:26:10,636 --> 00:26:14,286
In iOS, the controller can be


889
00:26:14,286 --> 00:26:16,676
represented as a subclass of the


890
00:26:16,676 --> 00:26:18,086
UI-view-controller class.


891
00:26:19,816 --> 00:26:22,656
The view can be a subclass of


892
00:26:22,656 --> 00:26:23,766
the UI view class.


893
00:26:25,076 --> 00:26:29,326
And the model can be a subclass


894
00:26:29,866 --> 00:26:30,936
of NSobject.


895
00:26:31,116 --> 00:26:33,026
When we build our app today, we


896
00:26:33,356 --> 00:26:35,236
will take a closer look at the


897
00:26:35,376 --> 00:26:36,786
different parts of the


898
00:26:36,786 --> 00:26:38,006
model-view-controller.


899
00:26:39,556 --> 00:26:41,196
Let's now jump into a demo and


900
00:26:41,656 --> 00:26:43,876
build a model to store our data.


901
00:26:46,206 --> 00:26:48,206
Here's the Disappearing Unicorns


902
00:26:48,276 --> 00:26:49,506
project that we made with


903
00:26:49,506 --> 00:26:49,976
Jessie.


904
00:26:51,396 --> 00:26:52,906
Let me right click on the


905
00:26:52,906 --> 00:26:55,426
Disappearing Unicorns folder and


906
00:26:55,426 --> 00:26:56,376
say new file.


907
00:26:57,846 --> 00:26:59,186
Select [inaudible] class which


908
00:27:00,066 --> 00:27:02,426
is what most iOS classes are.


909
00:27:03,486 --> 00:27:05,906
I'll click next, and I'll pull


910
00:27:05,906 --> 00:27:07,646
my [inaudible] class data.


911
00:27:08,426 --> 00:27:11,966
This will be a subclass of


912
00:27:11,966 --> 00:27:14,236
NSobject which is a good parent


913
00:27:14,236 --> 00:27:15,406
class for my data.


914
00:27:16,526 --> 00:27:19,086
Let's hit next and create.


915
00:27:19,796 --> 00:27:23,636
In this class, we want to store


916
00:27:23,636 --> 00:27:25,336
information about the player.


917
00:27:26,156 --> 00:27:28,236
So let me use a shortcut to add


918
00:27:28,526 --> 00:27:29,926
some code I wrote before.


919
00:27:30,556 --> 00:27:33,916
We have variables to store the


920
00:27:33,916 --> 00:27:36,836
name, points, rank, and image


921
00:27:37,126 --> 00:27:38,006
for each person.


922
00:27:38,006 --> 00:27:41,596
In addition to this, I've added


923
00:27:41,676 --> 00:27:43,626
some initializers to set up this


924
00:27:43,656 --> 00:27:43,906
data.


925
00:27:44,716 --> 00:27:46,026
But we don't need to worry about


926
00:27:46,026 --> 00:27:46,406
those.


927
00:27:47,626 --> 00:27:49,496
Let's go ahead and add one more


928
00:27:49,496 --> 00:27:51,626
class by right-clicking on the


929
00:27:51,626 --> 00:27:53,586
folder again and going to add


930
00:27:53,946 --> 00:27:54,366
files.


931
00:27:55,046 --> 00:27:58,216
This is the game data class that


932
00:27:58,216 --> 00:27:59,366
I've written already.


933
00:28:02,136 --> 00:28:04,306
Let's take a look at the methods


934
00:28:04,306 --> 00:28:05,846
that have been implemented in


935
00:28:05,846 --> 00:28:06,246
this class.


936
00:28:09,756 --> 00:28:13,056
First, we have the save points


937
00:28:13,136 --> 00:28:14,156
for name method.


938
00:28:14,916 --> 00:28:17,876
This is used to save the total


939
00:28:17,876 --> 00:28:20,366
game score for any given person.


940
00:28:21,576 --> 00:28:23,926
Next we have the player data for


941
00:28:23,926 --> 00:28:26,406
rank method which will give us


942
00:28:26,436 --> 00:28:28,616
all the information about a


943
00:28:28,616 --> 00:28:30,986
given player at a certain rank.


944
00:28:32,006 --> 00:28:34,406
And finally, we have a property


945
00:28:34,766 --> 00:28:36,536
to figure out the total number


946
00:28:36,536 --> 00:28:38,396
of people who played our game.


947
00:28:39,616 --> 00:28:40,996
We will not look at the


948
00:28:40,996 --> 00:28:42,876
implementation details for these


949
00:28:42,876 --> 00:28:43,786
methods today.


950
00:28:44,716 --> 00:28:45,996
What's important is to


951
00:28:45,996 --> 00:28:48,316
understand that we created a


952
00:28:48,316 --> 00:28:50,896
separate set of files to hold


953
00:28:50,896 --> 00:28:51,336
our data.


954
00:28:52,106 --> 00:28:55,146
When you build your own apps, I


955
00:28:55,146 --> 00:28:56,616
would encourage you to think


956
00:28:56,616 --> 00:28:59,226
about your data as a separate


957
00:28:59,226 --> 00:29:01,706
entity and keep it independent


958
00:29:01,706 --> 00:29:03,126
of the user interface.


959
00:29:03,656 --> 00:29:05,776
Just like how we've done here.


960
00:29:06,396 --> 00:29:08,816
When it comes to actually saving


961
00:29:08,816 --> 00:29:10,306
and retrieving the data on the


962
00:29:10,306 --> 00:29:13,266
back end, we have a few


963
00:29:13,266 --> 00:29:14,276
different options.


964
00:29:14,936 --> 00:29:18,146
One is to use core data.


965
00:29:18,146 --> 00:29:21,536
Core data is great for managing


966
00:29:21,906 --> 00:29:23,136
objects on the disc.


967
00:29:24,266 --> 00:29:26,056
It provides you with solutions


968
00:29:26,686 --> 00:29:29,046
to validate, query, filter, and


969
00:29:29,046 --> 00:29:30,506
organize your objects.


970
00:29:31,136 --> 00:29:34,756
If however your data is on a web


971
00:29:34,826 --> 00:29:36,936
server somewhere, then you could


972
00:29:36,936 --> 00:29:40,106
use NSURLSessions to download


973
00:29:40,106 --> 00:29:42,706
and upload the data.


974
00:29:42,786 --> 00:29:44,936
Another great option is to use


975
00:29:44,936 --> 00:29:47,226
CloudKit for storing data on the


976
00:29:47,326 --> 00:29:47,696
cloud.


977
00:29:48,496 --> 00:29:50,686
You could even use a third-party


978
00:29:50,686 --> 00:29:52,656
cloud provider to manage your


979
00:29:52,656 --> 00:29:53,336
cloud data.


980
00:29:53,336 --> 00:29:55,476
Now that we've set up our data,


981
00:29:56,286 --> 00:29:58,666
let's move onto the next section


982
00:29:59,096 --> 00:30:00,396
where we build our user


983
00:30:00,396 --> 00:30:00,956
interface.


984
00:30:03,096 --> 00:30:03,856
Here's what we want our


985
00:30:03,856 --> 00:30:05,116
leaderboard to look like.


986
00:30:06,476 --> 00:30:08,276
I'll break this down into the


987
00:30:08,276 --> 00:30:09,936
different viewers on the screen.


988
00:30:11,266 --> 00:30:13,766
On the top we have a navigation


989
00:30:13,766 --> 00:30:14,056
bar.


990
00:30:15,306 --> 00:30:18,846
Below that is a table view which


991
00:30:18,846 --> 00:30:20,896
has rows which are known as


992
00:30:21,086 --> 00:30:22,226
table view cells.


993
00:30:23,486 --> 00:30:26,376
Within each cell, we have an


994
00:30:26,456 --> 00:30:29,266
image view on the left, and some


995
00:30:29,266 --> 00:30:31,706
labels on the right to display


996
00:30:31,706 --> 00:30:31,966
text.


997
00:30:33,456 --> 00:30:36,006
Besides the leaderboard, we also


998
00:30:36,006 --> 00:30:37,786
need to set up the details page.


999
00:30:37,786 --> 00:30:39,766
This one's pretty


1000
00:30:39,766 --> 00:30:40,656
straightforward.


1001
00:30:41,236 --> 00:30:43,316
It has an image view and some


1002
00:30:43,316 --> 00:30:43,846
labels.


1003
00:30:45,366 --> 00:30:47,376
So now that we know what views


1004
00:30:47,486 --> 00:30:50,056
our UI is made up of, let's go


1005
00:30:50,056 --> 00:30:52,196
back into another demo and


1006
00:30:52,236 --> 00:30:54,016
actually set up this user


1007
00:30:54,016 --> 00:30:54,586
interface.


1008
00:31:01,886 --> 00:31:03,726
I'll select the main storyboard


1009
00:31:03,976 --> 00:31:06,966
which we built with Jesse.


1010
00:31:07,156 --> 00:31:08,006
Here we have a


1011
00:31:08,096 --> 00:31:10,626
single-view-controller which was


1012
00:31:10,626 --> 00:31:12,766
used to manage the entire screen


1013
00:31:12,766 --> 00:31:14,156
of content for the game.


1014
00:31:15,396 --> 00:31:17,706
Now we want to add more screens


1015
00:31:18,386 --> 00:31:20,506
for displaying our leaderboard


1016
00:31:20,506 --> 00:31:21,586
in the details view.


1017
00:31:22,656 --> 00:31:25,236
To do this, we can add another


1018
00:31:25,236 --> 00:31:27,066
view controller from the object


1019
00:31:27,066 --> 00:31:27,646
library.


1020
00:31:28,426 --> 00:31:29,986
I'll search for view controller.


1021
00:31:31,406 --> 00:31:32,666
Notice that there are a few


1022
00:31:32,666 --> 00:31:34,026
different options for view


1023
00:31:34,026 --> 00:31:34,716
controllers.


1024
00:31:35,746 --> 00:31:37,356
Since I want my leaderboard to


1025
00:31:37,356 --> 00:31:39,416
look more like a table, I'll


1026
00:31:39,416 --> 00:31:41,296
select the table-view-controller


1027
00:31:41,866 --> 00:31:43,516
and bring it into my storyboard.


1028
00:31:46,186 --> 00:31:47,626
The table-view-controller


1029
00:31:48,326 --> 00:31:50,756
automatically has a table view.


1030
00:31:51,826 --> 00:31:53,196
Let's select the table view and


1031
00:31:53,196 --> 00:31:56,166
look at the Attributes Inspector


1032
00:31:56,166 --> 00:31:56,816
on the right.


1033
00:31:58,096 --> 00:32:00,956
The content type here is set to


1034
00:32:00,956 --> 00:32:02,316
dynamic prototypes.


1035
00:32:03,206 --> 00:32:04,836
I'll change this to static


1036
00:32:04,956 --> 00:32:05,296
cells.


1037
00:32:06,646 --> 00:32:08,216
Static cells are great for


1038
00:32:08,216 --> 00:32:09,656
displaying static data.


1039
00:32:10,576 --> 00:32:12,316
And these can be easily set up


1040
00:32:12,466 --> 00:32:13,416
in the storyboard.


1041
00:32:14,786 --> 00:32:17,146
Now let's select a single cell


1042
00:32:17,256 --> 00:32:19,516
and change its style from the


1043
00:32:19,516 --> 00:32:21,186
Attributes Inspector to


1044
00:32:21,246 --> 00:32:21,966
subtitle.


1045
00:32:23,456 --> 00:32:25,126
This gives me a title and a


1046
00:32:25,126 --> 00:32:27,386
subtitle where I can display the


1047
00:32:27,386 --> 00:32:28,876
name and the points on my


1048
00:32:28,876 --> 00:32:29,486
leaderboard.


1049
00:32:31,046 --> 00:32:33,426
I also want to add an image to


1050
00:32:33,426 --> 00:32:34,496
the left of the row.


1051
00:32:35,476 --> 00:32:38,136
To do this, I can simply type in


1052
00:32:38,136 --> 00:32:39,986
the name of an image in the


1053
00:32:39,986 --> 00:32:42,086
Attributes Inspector's image


1054
00:32:42,086 --> 00:32:42,736
field here.


1055
00:32:43,856 --> 00:32:46,776
I have imported an image in my


1056
00:32:46,846 --> 00:32:48,686
project just as a sample.


1057
00:32:49,266 --> 00:32:51,306
Let me add that.


1058
00:32:51,866 --> 00:32:55,666
Okay. So now my cell is all set


1059
00:32:55,666 --> 00:32:57,776
up and we have a good outline


1060
00:32:57,776 --> 00:32:58,716
for our leaderboard.


1061
00:32:59,586 --> 00:33:01,246
Let's go ahead and add the


1062
00:33:01,246 --> 00:33:02,066
details UI.


1063
00:33:02,066 --> 00:33:05,276
I'll go back into the object


1064
00:33:05,276 --> 00:33:07,686
library, and this time we'll


1065
00:33:07,686 --> 00:33:10,176
take a blank view controller and


1066
00:33:10,176 --> 00:33:11,896
bring it into the storyboard.


1067
00:33:14,236 --> 00:33:16,876
Inside this view controller, we


1068
00:33:16,876 --> 00:33:18,526
will add an image view.


1069
00:33:22,076 --> 00:33:24,036
Let me set the image from the


1070
00:33:24,036 --> 00:33:25,366
Attributes Inspector.


1071
00:33:27,076 --> 00:33:27,786
Wait a minute.


1072
00:33:27,786 --> 00:33:29,676
This is a little scaled.


1073
00:33:30,336 --> 00:33:32,676
Let me change the content mode


1074
00:33:32,676 --> 00:33:36,016
from scale to aspect fit.


1075
00:33:36,016 --> 00:33:36,656
Much better.


1076
00:33:37,796 --> 00:33:39,376
Now I'll go back to the object


1077
00:33:39,376 --> 00:33:40,976
library and add some labels.


1078
00:33:44,046 --> 00:33:45,356
These are going to be used for


1079
00:33:45,356 --> 00:33:46,456
storing the name.


1080
00:33:47,076 --> 00:33:48,186
I'll make a copy.


1081
00:33:49,066 --> 00:33:51,516
Next one is for the rank, and


1082
00:33:51,606 --> 00:33:53,146
finally another label.


1083
00:33:53,846 --> 00:33:54,716
Going to make a copy.


1084
00:33:54,966 --> 00:33:56,256
Another label for the points.


1085
00:33:57,496 --> 00:34:00,186
Okay. Now that both our view


1086
00:34:00,186 --> 00:34:02,496
controllers are set up, there's


1087
00:34:02,496 --> 00:34:03,586
one other thing to do.


1088
00:34:03,586 --> 00:34:06,756
We need to tell our app to


1089
00:34:06,756 --> 00:34:08,335
actually display this


1090
00:34:08,335 --> 00:34:10,466
leaderboard or the details view


1091
00:34:11,466 --> 00:34:13,335
after we do a certain action in


1092
00:34:13,335 --> 00:34:13,545
the app.


1093
00:34:14,936 --> 00:34:17,076
Since we want the leaderboard to


1094
00:34:17,076 --> 00:34:19,376
be displayed after we tap the


1095
00:34:19,376 --> 00:34:20,696
leaderboard button.


1096
00:34:20,896 --> 00:34:23,356
I'll create a connection between


1097
00:34:23,356 --> 00:34:25,065
the leaderboard button and this


1098
00:34:25,106 --> 00:34:26,176
table-view-controller.


1099
00:34:27,286 --> 00:34:29,045
Let's hold down the control key


1100
00:34:29,045 --> 00:34:31,036
on the keyboard, and drag the


1101
00:34:31,036 --> 00:34:32,466
mouse from the leaderboard


1102
00:34:32,466 --> 00:34:33,246
button to the


1103
00:34:33,246 --> 00:34:34,376
table-view-controller.


1104
00:34:34,916 --> 00:34:38,235
When I release, I see a menu


1105
00:34:38,235 --> 00:34:40,235
with a few different options.


1106
00:34:40,755 --> 00:34:43,376
These are the different ways in


1107
00:34:43,376 --> 00:34:45,496
which we can present the second


1108
00:34:45,496 --> 00:34:47,476
view controller on top of the


1109
00:34:47,476 --> 00:34:48,116
first one.


1110
00:34:49,416 --> 00:34:51,196
For now, I'll select the show


1111
00:34:51,196 --> 00:34:53,866
option which is a commonly used


1112
00:34:53,936 --> 00:34:55,106
segue for such apps.


1113
00:34:56,716 --> 00:34:58,856
Notice that a connection got


1114
00:34:58,986 --> 00:35:00,856
created between the two view


1115
00:35:00,856 --> 00:35:01,526
controllers.


1116
00:35:02,496 --> 00:35:04,726
This is known as a segue.


1117
00:35:05,636 --> 00:35:07,946
Now, I want to display the


1118
00:35:07,946 --> 00:35:09,626
details-view-controller when I


1119
00:35:09,926 --> 00:35:11,646
tap on the cell in the


1120
00:35:11,646 --> 00:35:12,256
leaderboard.


1121
00:35:13,106 --> 00:35:14,306
So let's again hold down the


1122
00:35:14,306 --> 00:35:16,346
control key and drag our mouse


1123
00:35:16,976 --> 00:35:18,556
to the details-view-controller.


1124
00:35:18,946 --> 00:35:21,126
Select show one more time.


1125
00:35:21,836 --> 00:35:24,486
Now we are ready to run our app


1126
00:35:24,486 --> 00:35:25,706
for the very first time.


1127
00:35:28,436 --> 00:35:30,276
Let's look at the simulator.


1128
00:35:30,936 --> 00:35:35,356
If I tap the leaderboard, I see


1129
00:35:35,356 --> 00:35:37,486
a good mock-up for my


1130
00:35:37,486 --> 00:35:38,156
leaderboard.


1131
00:35:39,016 --> 00:35:41,306
I can tap on the cell and we


1132
00:35:41,306 --> 00:35:43,896
have our details view with more


1133
00:35:43,896 --> 00:35:44,706
information.


1134
00:35:45,336 --> 00:35:46,706
This is looking good.


1135
00:35:46,706 --> 00:35:50,306
But how do I go back to my


1136
00:35:50,306 --> 00:35:51,906
leaderboard or the game?


1137
00:35:52,946 --> 00:35:54,756
Let's go ahead and fix that.


1138
00:35:56,076 --> 00:35:58,926
To do this, I'll select the main


1139
00:35:58,926 --> 00:36:01,036
view controller which had the


1140
00:36:01,036 --> 00:36:01,556
game.


1141
00:36:02,516 --> 00:36:04,206
And then go to the editor menu


1142
00:36:04,246 --> 00:36:07,186
in Xcode, select, embed in,


1143
00:36:07,526 --> 00:36:08,906
navigation controller.


1144
00:36:09,466 --> 00:36:12,676
This adds a navigation


1145
00:36:12,676 --> 00:36:13,796
controller to our app.


1146
00:36:14,536 --> 00:36:16,816
The navigation controller is a


1147
00:36:16,816 --> 00:36:18,776
special type of view controller


1148
00:36:19,216 --> 00:36:21,266
that is used for managing the


1149
00:36:21,266 --> 00:36:22,956
back and forth transitions


1150
00:36:23,056 --> 00:36:24,736
between our view controllers.


1151
00:36:26,066 --> 00:36:29,046
This also adds a navigation bar


1152
00:36:29,046 --> 00:36:30,466
at the top of our view


1153
00:36:30,466 --> 00:36:31,146
controllers.


1154
00:36:31,146 --> 00:36:33,256
So from the Attributes


1155
00:36:33,256 --> 00:36:36,226
Inspector, if I set a title to--


1156
00:36:36,646 --> 00:36:38,856
for my leaderboard, it will now


1157
00:36:38,856 --> 00:36:41,556
show up in the navigation bar.


1158
00:36:42,936 --> 00:36:44,966
Now that we've added all the


1159
00:36:44,966 --> 00:36:46,586
viewers that we needed to add


1160
00:36:46,686 --> 00:36:47,396
for our UI.


1161
00:36:48,726 --> 00:36:50,616
Let me finish this up with


1162
00:36:50,616 --> 00:36:53,066
adding an app icon to this app.


1163
00:36:54,376 --> 00:36:55,656
Let's go into our project


1164
00:36:55,656 --> 00:36:56,426
navigator.


1165
00:36:57,156 --> 00:36:59,276
Select the blue folder that says


1166
00:36:59,556 --> 00:36:59,876
assets.


1167
00:37:01,146 --> 00:37:03,036
And go to the app icon image


1168
00:37:03,156 --> 00:37:03,366
set.


1169
00:37:04,836 --> 00:37:06,956
Now I have some icons that my


1170
00:37:06,956 --> 00:37:08,016
designer created.


1171
00:37:08,736 --> 00:37:11,446
I'll select these and drop them


1172
00:37:11,546 --> 00:37:12,666
into Xcode.


1173
00:37:14,656 --> 00:37:16,756
There's a specific way in which


1174
00:37:16,756 --> 00:37:18,436
you need to create these icons.


1175
00:37:18,686 --> 00:37:20,116
And we have guidelines on


1176
00:37:20,116 --> 00:37:21,766
developer.apple.com.


1177
00:37:22,346 --> 00:37:25,676
This time when we run our app,


1178
00:37:26,116 --> 00:37:28,296
I'll close this-- we will see an


1179
00:37:28,296 --> 00:37:30,976
icon on the home screen.


1180
00:37:31,646 --> 00:37:32,406
Isn't it cute?


1181
00:37:33,516 --> 00:37:36,096
[ Applause ]


1182
00:37:36,596 --> 00:37:36,856
Thank you.


1183
00:37:38,026 --> 00:37:39,166
Let's go back into the app.


1184
00:37:40,586 --> 00:37:42,126
And tap on the leaderboard.


1185
00:37:43,496 --> 00:37:45,936
This time we're able to go back


1186
00:37:45,936 --> 00:37:47,826
and forth between all our views.


1187
00:37:47,826 --> 00:37:49,386
This is great!


1188
00:37:50,356 --> 00:37:50,926
Let's now-


1189
00:37:51,016 --> 00:37:52,286
[ Applause ]


1190
00:37:52,286 --> 00:37:53,546
I'm glad you like that.


1191
00:37:54,656 --> 00:37:56,686
Let's now rotate our phone and


1192
00:37:56,746 --> 00:37:57,726
see what happens.


1193
00:37:58,346 --> 00:38:01,206
Oh no. My labels are all


1194
00:38:01,206 --> 00:38:03,746
clipped, and my image is too far


1195
00:38:03,746 --> 00:38:04,266
to the left.


1196
00:38:04,956 --> 00:38:07,256
In order to make my layout look


1197
00:38:07,256 --> 00:38:08,976
right-- let's put that back.


1198
00:38:10,076 --> 00:38:12,196
I'll use a technique known as


1199
00:38:12,316 --> 00:38:13,066
Auto Layout.


1200
00:38:14,616 --> 00:38:16,536
Auto Layout is a set of rules


1201
00:38:16,776 --> 00:38:19,706
that we define to tell our app


1202
00:38:19,706 --> 00:38:21,846
how we want our views to be


1203
00:38:21,896 --> 00:38:22,216
placed.


1204
00:38:23,866 --> 00:38:26,846
So each rule in Auto Layout is


1205
00:38:26,846 --> 00:38:28,366
known as a constraint.


1206
00:38:29,386 --> 00:38:31,336
Now we'll add some constraints


1207
00:38:31,856 --> 00:38:33,316
to this image view in our


1208
00:38:33,316 --> 00:38:34,696
details-view-controller.


1209
00:38:36,206 --> 00:38:37,606
Look at the buttons at the


1210
00:38:37,606 --> 00:38:40,156
bottom right of the storyboard.


1211
00:38:41,356 --> 00:38:43,506
We'll click on the align button,


1212
00:38:43,896 --> 00:38:45,756
the one with two horizontal bars


1213
00:38:46,566 --> 00:38:48,356
and say horizontally in


1214
00:38:48,386 --> 00:38:48,876
container.


1215
00:38:48,876 --> 00:38:51,026
Add one constraint.


1216
00:38:51,026 --> 00:38:54,346
This tells our app that we want


1217
00:38:54,346 --> 00:38:56,546
our image view to always be in


1218
00:38:56,546 --> 00:38:57,926
the horizontal center.


1219
00:38:58,656 --> 00:39:01,146
I'll also click on the button to


1220
00:39:01,146 --> 00:39:03,306
the next of this align button


1221
00:39:03,446 --> 00:39:04,996
called add new constraints.


1222
00:39:05,736 --> 00:39:08,926
The top-most text box here


1223
00:39:09,256 --> 00:39:11,926
represents the distance between


1224
00:39:12,016 --> 00:39:14,586
my image view and its closest


1225
00:39:14,586 --> 00:39:15,516
neighbor on the top.


1226
00:39:16,706 --> 00:39:19,086
So if I set this value, it will


1227
00:39:19,086 --> 00:39:21,516
make sure that my image is at


1228
00:39:21,516 --> 00:39:23,566
least, that my image is like ten


1229
00:39:23,606 --> 00:39:26,456
points away from the nearest


1230
00:39:26,456 --> 00:39:27,366
neighbor on the top.


1231
00:39:27,566 --> 00:39:28,696
Which could be the edge of the


1232
00:39:28,696 --> 00:39:29,456
screen too.


1233
00:39:30,556 --> 00:39:32,446
Let's also set the width and the


1234
00:39:32,446 --> 00:39:32,876
height.


1235
00:39:39,046 --> 00:39:41,826
Now our image view is all set to


1236
00:39:41,826 --> 00:39:43,026
use Auto Layout.


1237
00:39:43,876 --> 00:39:45,396
I'll quickly add similar


1238
00:39:45,396 --> 00:39:47,226
constraints to all the labels.


1239
00:39:48,086 --> 00:39:49,736
We can do this in one go by


1240
00:39:49,736 --> 00:39:51,386
selecting them altogether.


1241
00:39:54,996 --> 00:39:58,326
This time, if we run our app and


1242
00:39:58,326 --> 00:40:00,336
rotate it, we should be able to


1243
00:40:00,446 --> 00:40:02,976
see our view laid out properly.


1244
00:40:04,026 --> 00:40:05,936
There's an even easier way to


1245
00:40:05,936 --> 00:40:07,166
validate our layout.


1246
00:40:08,136 --> 00:40:09,516
We can go to the Device


1247
00:40:09,606 --> 00:40:11,786
Configuration pane at the bottom


1248
00:40:11,786 --> 00:40:13,126
left of the storyboard.


1249
00:40:14,466 --> 00:40:16,526
And change the orientation here


1250
00:40:16,676 --> 00:40:18,066
to landscape.


1251
00:40:18,796 --> 00:40:21,836
Now I can see my view in the


1252
00:40:21,836 --> 00:40:23,276
landscape orientation.


1253
00:40:24,016 --> 00:40:25,436
And my image is looking, my


1254
00:40:25,436 --> 00:40:27,796
image is in the center, and my


1255
00:40:27,796 --> 00:40:30,436
labels are all seen on the same


1256
00:40:30,436 --> 00:40:30,976
page.


1257
00:40:32,436 --> 00:40:34,086
You could even change the device


1258
00:40:34,126 --> 00:40:36,056
from the Device Configuration


1259
00:40:36,056 --> 00:40:38,476
pane to see how this would look


1260
00:40:38,716 --> 00:40:40,966
on an iPad or a smaller phone.


1261
00:40:41,506 --> 00:40:46,486
With that, a UI is all set up.


1262
00:40:47,116 --> 00:40:48,866
Let's quickly recap what we


1263
00:40:48,866 --> 00:40:50,336
learned in this session,


1264
00:40:50,556 --> 00:40:51,056
section.


1265
00:40:52,036 --> 00:40:55,006
We started with a


1266
00:40:55,006 --> 00:40:57,596
single-view-controller which had


1267
00:40:57,816 --> 00:40:59,426
the-- which managed the entire


1268
00:40:59,586 --> 00:41:00,636
screen for our game.


1269
00:41:01,826 --> 00:41:03,406
We learned that we can create


1270
00:41:03,566 --> 00:41:05,846
multiple view controllers to


1271
00:41:05,846 --> 00:41:07,716
display multiple screens of


1272
00:41:07,776 --> 00:41:08,426
content.


1273
00:41:09,016 --> 00:41:11,846
If we do create multiple screens


1274
00:41:11,846 --> 00:41:16,016
of content, then we need to tell


1275
00:41:16,506 --> 00:41:18,596
iOS how to go from one view


1276
00:41:18,596 --> 00:41:19,946
controller to another.


1277
00:41:20,976 --> 00:41:23,486
We do this by adding connections


1278
00:41:24,046 --> 00:41:25,506
that are known as segues.


1279
00:41:27,296 --> 00:41:28,046
We created a


1280
00:41:28,046 --> 00:41:29,506
table-view-controller which is


1281
00:41:30,006 --> 00:41:32,316
great for displaying lists of


1282
00:41:32,316 --> 00:41:32,596
data.


1283
00:41:34,186 --> 00:41:36,236
We also added it inside a


1284
00:41:36,236 --> 00:41:37,696
navigation controller.


1285
00:41:38,656 --> 00:41:40,776
The navigation controller helped


1286
00:41:40,776 --> 00:41:42,636
us go back and forth between the


1287
00:41:42,636 --> 00:41:45,826
table view and the details page.


1288
00:41:46,966 --> 00:41:49,386
This pattern of using a table


1289
00:41:49,386 --> 00:41:51,016
view along with the navigation


1290
00:41:51,016 --> 00:41:53,286
controller is commonly seen


1291
00:41:53,396 --> 00:41:54,586
across iOS apps.


1292
00:41:55,756 --> 00:41:56,966
Here are just some examples.


1293
00:41:59,676 --> 00:42:01,086
To learn more about view


1294
00:42:01,086 --> 00:42:02,866
controllers, check out the


1295
00:42:02,866 --> 00:42:04,186
documentation on


1296
00:42:04,186 --> 00:42:05,846
developer.apple.com.


1297
00:42:07,186 --> 00:42:08,856
We also learned about Auto


1298
00:42:08,856 --> 00:42:10,636
Layout which is a great


1299
00:42:10,696 --> 00:42:12,726
technique for building good user


1300
00:42:12,726 --> 00:42:15,096
interfaces for different screen


1301
00:42:15,156 --> 00:42:16,346
sizes and different


1302
00:42:16,346 --> 00:42:17,236
orientations.


1303
00:42:18,016 --> 00:42:19,586
I would recommend checking out


1304
00:42:19,586 --> 00:42:22,076
these WWDC sessions to learn


1305
00:42:22,076 --> 00:42:23,516
more about Auto Layout.


1306
00:42:25,146 --> 00:42:28,686
Finally, we can hook up our data


1307
00:42:28,876 --> 00:42:31,566
model with our UI and write in


1308
00:42:31,566 --> 00:42:34,016
the logic to bring everything


1309
00:42:34,016 --> 00:42:34,546
together.


1310
00:42:35,346 --> 00:42:36,966
Let's take a look at another


1311
00:42:36,966 --> 00:42:37,446
demo.


1312
00:42:41,216 --> 00:42:43,526
We need to save the score at the


1313
00:42:43,566 --> 00:42:44,816
end of each game.


1314
00:42:45,736 --> 00:42:48,306
To do this, I will select the


1315
00:42:48,306 --> 00:42:50,046
view controller that we wrote


1316
00:42:50,046 --> 00:42:50,696
with Jessie.


1317
00:42:51,266 --> 00:42:54,226
In the game over method, I will


1318
00:42:55,396 --> 00:42:58,916
call a method on my data model


1319
00:42:59,286 --> 00:43:00,996
that we wrote before to save the


1320
00:43:00,996 --> 00:43:01,446
points.


1321
00:43:03,256 --> 00:43:06,186
The-- this save points method


1322
00:43:06,186 --> 00:43:07,646
takes two parameters.


1323
00:43:08,536 --> 00:43:10,456
One is the total points which


1324
00:43:11,226 --> 00:43:13,106
we've already saved in the game


1325
00:43:13,106 --> 00:43:14,066
points variable.


1326
00:43:15,336 --> 00:43:18,746
The second parameter is the name


1327
00:43:18,746 --> 00:43:20,036
of the user who's playing the


1328
00:43:20,036 --> 00:43:20,376
game.


1329
00:43:20,806 --> 00:43:22,896
So to recap, I've just added


1330
00:43:22,896 --> 00:43:24,826
this little bit of code in our


1331
00:43:25,146 --> 00:43:26,876
view controller that we created


1332
00:43:26,876 --> 00:43:27,356
before.


1333
00:43:28,066 --> 00:43:30,466
The save points method on our


1334
00:43:30,546 --> 00:43:32,926
game data model takes two


1335
00:43:32,926 --> 00:43:33,706
parameters.


1336
00:43:34,336 --> 00:43:36,266
The first is the game points


1337
00:43:36,956 --> 00:43:39,026
which we had already stored in a


1338
00:43:39,026 --> 00:43:39,616
variable.


1339
00:43:40,596 --> 00:43:44,346
The second parameter is the name


1340
00:43:44,346 --> 00:43:45,776
of the user who's playing the


1341
00:43:45,776 --> 00:43:46,156
game.


1342
00:43:47,476 --> 00:43:49,916
In a real-world app, you would


1343
00:43:49,916 --> 00:43:51,866
probably want to create a


1344
00:43:51,866 --> 00:43:53,636
profile screen or a settings


1345
00:43:53,636 --> 00:43:55,946
screen where the user can enter


1346
00:43:55,946 --> 00:43:56,726
their own name.


1347
00:43:57,496 --> 00:43:59,056
But for the purposes of this


1348
00:43:59,056 --> 00:44:01,566
demo, I'll just hardcode this to


1349
00:44:01,566 --> 00:44:02,366
my own name.


1350
00:44:02,946 --> 00:44:05,856
Now that we've saved the score,


1351
00:44:05,856 --> 00:44:08,356
we need to write some code to


1352
00:44:08,356 --> 00:44:11,236
actually display the right


1353
00:44:11,576 --> 00:44:13,196
scores and the names on the


1354
00:44:13,196 --> 00:44:13,866
leaderboard.


1355
00:44:14,756 --> 00:44:16,386
So let's go ahead and create


1356
00:44:16,386 --> 00:44:18,956
another class by right-clicking


1357
00:44:19,066 --> 00:44:21,506
on the unicorn's folder and


1358
00:44:21,506 --> 00:44:22,646
going to new file.


1359
00:44:23,806 --> 00:44:25,426
A [inaudible] class again.


1360
00:44:25,946 --> 00:44:28,836
This will be a subclass of the


1361
00:44:28,836 --> 00:44:30,466
UI table-view-controller.


1362
00:44:31,606 --> 00:44:33,656
Remember when we created the


1363
00:44:33,656 --> 00:44:35,266
leaderboard on our storyboard?


1364
00:44:35,616 --> 00:44:37,336
It was a table-view-controller,


1365
00:44:37,696 --> 00:44:40,256
so I use a table-view-controller


1366
00:44:40,256 --> 00:44:42,816
class again to put in some code


1367
00:44:42,916 --> 00:44:44,096
for that leaderboard.


1368
00:44:45,166 --> 00:44:46,626
Let's call it the


1369
00:44:46,626 --> 00:44:48,476
leaderboard-view-controller.


1370
00:44:49,796 --> 00:44:51,636
Hit next. And create.


1371
00:44:56,096 --> 00:44:58,106
This already has some code that


1372
00:44:58,106 --> 00:45:00,036
has been generated for us by


1373
00:45:00,126 --> 00:45:00,726
Xcode.


1374
00:45:01,536 --> 00:45:03,156
These are methods that


1375
00:45:03,646 --> 00:45:05,956
developers find useful when


1376
00:45:05,956 --> 00:45:06,756
building their own


1377
00:45:06,756 --> 00:45:07,916
table-view-controllers.


1378
00:45:08,976 --> 00:45:11,016
We will implement two of these


1379
00:45:11,016 --> 00:45:11,536
methods.


1380
00:45:12,766 --> 00:45:15,666
First is a table view number of


1381
00:45:15,736 --> 00:45:16,866
rows in sections.


1382
00:45:17,936 --> 00:45:20,916
This method is asking us for the


1383
00:45:21,066 --> 00:45:22,906
total number of rows that we


1384
00:45:22,906 --> 00:45:24,576
want to display in our table


1385
00:45:24,576 --> 00:45:24,836
view.


1386
00:45:25,966 --> 00:45:28,416
In our case, the total number of


1387
00:45:28,466 --> 00:45:30,656
rows will be the same as the


1388
00:45:30,766 --> 00:45:32,146
total number of players that


1389
00:45:32,146 --> 00:45:33,336
have played the game.


1390
00:45:33,336 --> 00:45:36,026
And we can get this information


1391
00:45:36,026 --> 00:45:37,736
again from our data model.


1392
00:45:38,706 --> 00:45:40,586
So the number of players


1393
00:45:40,586 --> 00:45:42,836
variable will give us the total


1394
00:45:42,836 --> 00:45:43,616
number of rows.


1395
00:45:45,056 --> 00:45:46,986
The second method that we need


1396
00:45:46,986 --> 00:45:49,396
to implement is the cell


1397
00:45:49,396 --> 00:45:50,226
[inaudible] at index path


1398
00:45:50,506 --> 00:45:50,976
method.


1399
00:45:52,536 --> 00:45:55,906
This method is called every time


1400
00:45:56,116 --> 00:45:59,006
a cell needs to be displayed on


1401
00:45:59,006 --> 00:45:59,746
our leaderboard.


1402
00:46:00,776 --> 00:46:03,766
The index path argument tells us


1403
00:46:03,856 --> 00:46:06,636
the row number for the cell that


1404
00:46:06,636 --> 00:46:07,576
will be displayed.


1405
00:46:08,856 --> 00:46:10,706
And in here, we're expected to


1406
00:46:10,756 --> 00:46:13,256
configure the cell just like the


1407
00:46:13,306 --> 00:46:14,116
comment says.


1408
00:46:15,526 --> 00:46:18,146
So let me pull in some code to


1409
00:46:18,256 --> 00:46:18,956
set up this cell.


1410
00:46:18,956 --> 00:46:22,126
We are using our game data class


1411
00:46:22,386 --> 00:46:22,876
again.


1412
00:46:23,886 --> 00:46:26,256
And the index paths row will


1413
00:46:26,256 --> 00:46:28,366
tell us the rank of the player.


1414
00:46:28,976 --> 00:46:30,046
Since we want to display the


1415
00:46:30,046 --> 00:46:31,566
players in ascending order.


1416
00:46:32,726 --> 00:46:35,036
Once we have the player rank, we


1417
00:46:35,036 --> 00:46:36,816
can send it to the player data


1418
00:46:36,816 --> 00:46:38,806
method on our game data class


1419
00:46:39,316 --> 00:46:40,996
and get more information about


1420
00:46:40,996 --> 00:46:41,466
that player.


1421
00:46:42,906 --> 00:46:45,006
Using this information, we can


1422
00:46:45,136 --> 00:46:46,336
set up our cell.


1423
00:46:47,246 --> 00:46:49,626
The text label is the title.


1424
00:46:50,326 --> 00:46:51,956
The detail text label is the


1425
00:46:51,956 --> 00:46:52,826
subtitle.


1426
00:46:53,296 --> 00:46:54,996
And the image view is the image


1427
00:46:54,996 --> 00:46:56,486
that will have the photo.


1428
00:46:56,486 --> 00:46:59,216
Now instead of creating this


1429
00:46:59,256 --> 00:47:01,136
game data instance twice, I'm


1430
00:47:01,136 --> 00:47:02,406
just going to put it at the top


1431
00:47:02,406 --> 00:47:04,036
of the class so it can be


1432
00:47:04,036 --> 00:47:04,556
reused.


1433
00:47:06,136 --> 00:47:08,136
Let me also delete the number of


1434
00:47:08,236 --> 00:47:09,976
sections method that was added


1435
00:47:09,976 --> 00:47:11,936
for us by default, because we


1436
00:47:11,936 --> 00:47:12,936
don't need this today.


1437
00:47:13,506 --> 00:47:15,576
Now that we have written the


1438
00:47:15,656 --> 00:47:17,996
code for the leaderboard, let's


1439
00:47:18,076 --> 00:47:20,546
open the main storyboard and the


1440
00:47:20,546 --> 00:47:21,986
Assistant Editor on the right.


1441
00:47:23,546 --> 00:47:25,486
I'll rotate the specs so we can


1442
00:47:25,676 --> 00:47:26,646
see it properly.


1443
00:47:30,476 --> 00:47:33,116
We need to tell Xcode that the


1444
00:47:33,256 --> 00:47:35,786
code for our leaderboard here is


1445
00:47:35,786 --> 00:47:37,616
written in the class that we


1446
00:47:37,616 --> 00:47:38,426
just created.


1447
00:47:39,466 --> 00:47:41,786
To do this, I'll select the view


1448
00:47:41,786 --> 00:47:43,516
controller for the leaderboard.


1449
00:47:44,466 --> 00:47:46,616
Go to the Identity Inspector,


1450
00:47:47,306 --> 00:47:49,386
and change the class name to


1451
00:47:49,386 --> 00:47:50,806
leaderboard-view-controller.


1452
00:47:51,346 --> 00:47:54,216
After this, I'll select the


1453
00:47:54,316 --> 00:47:57,366
table view in the storyboard.


1454
00:47:58,066 --> 00:48:00,146
Go to the attributes Inspector


1455
00:48:00,816 --> 00:48:02,746
and change the content type to


1456
00:48:02,746 --> 00:48:03,926
dynamic prototypes.


1457
00:48:05,736 --> 00:48:08,136
This means that the cells are


1458
00:48:08,136 --> 00:48:10,736
now being created dynamically in


1459
00:48:10,736 --> 00:48:12,006
the code that we wrote.


1460
00:48:13,576 --> 00:48:15,836
We will also select a single


1461
00:48:15,956 --> 00:48:16,306
cell.


1462
00:48:19,356 --> 00:48:22,156
And in the identifier section in


1463
00:48:22,156 --> 00:48:24,626
the Attributes Inspector, I'll


1464
00:48:24,626 --> 00:48:27,606
copy over the reuse identifier


1465
00:48:28,106 --> 00:48:29,706
from the cell [inaudible] index


1466
00:48:29,706 --> 00:48:31,046
path method in my class.


1467
00:48:32,926 --> 00:48:35,456
By doing this, I'm saying that


1468
00:48:35,456 --> 00:48:37,876
I'm willing to reuse the cells


1469
00:48:37,926 --> 00:48:38,916
in my table view.


1470
00:48:39,686 --> 00:48:40,966
This will help improve the


1471
00:48:41,026 --> 00:48:42,716
performance of my table view.


1472
00:48:45,276 --> 00:48:47,346
Finally, we've written the code


1473
00:48:47,486 --> 00:48:49,976
for this leaderboard class.


1474
00:48:50,086 --> 00:48:51,606
We still need to write code for


1475
00:48:51,606 --> 00:48:52,956
our details-view-controller.


1476
00:48:56,356 --> 00:48:58,286
Luckily, I've already added some


1477
00:48:58,286 --> 00:49:00,446
code that we'll import into our


1478
00:49:00,446 --> 00:49:01,156
project.


1479
00:49:03,336 --> 00:49:03,936
This is the


1480
00:49:03,936 --> 00:49:06,586
details-view-controller class.


1481
00:49:07,116 --> 00:49:09,056
Let's jump to it from our jump


1482
00:49:09,166 --> 00:49:09,466
bar.


1483
00:49:11,226 --> 00:49:14,326
Here we have some IBOutlets for


1484
00:49:14,326 --> 00:49:15,746
the different views in our


1485
00:49:15,746 --> 00:49:17,126
details-view-controller.


1486
00:49:18,196 --> 00:49:20,506
Remember when we wrote the game,


1487
00:49:20,506 --> 00:49:22,526
we connected these IBOutlets to


1488
00:49:22,526 --> 00:49:24,236
the views on the storyboard.


1489
00:49:25,226 --> 00:49:26,526
But we're not able to do that


1490
00:49:26,616 --> 00:49:27,196
right now.


1491
00:49:28,026 --> 00:49:30,376
This is because we haven't told


1492
00:49:30,436 --> 00:49:32,526
Xcode that the code for this


1493
00:49:32,526 --> 00:49:34,196
view controller is right here.


1494
00:49:35,076 --> 00:49:36,636
Let's do that again by going to


1495
00:49:36,636 --> 00:49:38,466
the Identity Inspector and


1496
00:49:38,466 --> 00:49:39,936
changing the class name to


1497
00:49:39,936 --> 00:49:41,246
details-view-controller.


1498
00:49:42,456 --> 00:49:44,806
Now we can connect the IBOutlets


1499
00:49:44,896 --> 00:49:45,476
easily.


1500
00:49:52,256 --> 00:49:55,166
By doing this, we can set the


1501
00:49:55,166 --> 00:49:57,506
views from our code like I've


1502
00:49:57,506 --> 00:49:59,946
done in the view load method


1503
00:49:59,946 --> 00:50:00,226
here.


1504
00:50:01,456 --> 00:50:02,966
Let me hide the main storyboard


1505
00:50:02,966 --> 00:50:05,446
for a moment.


1506
00:50:05,586 --> 00:50:07,686
We also have a player info


1507
00:50:07,686 --> 00:50:08,366
variable here.


1508
00:50:08,366 --> 00:50:11,046
And we are using that player


1509
00:50:11,046 --> 00:50:13,426
information to set up our views.


1510
00:50:14,876 --> 00:50:16,706
You might be wondering that we


1511
00:50:16,706 --> 00:50:18,166
didn't really send this player


1512
00:50:18,166 --> 00:50:19,356
information anywhere.


1513
00:50:20,246 --> 00:50:21,756
So how do we get all this data?


1514
00:50:23,136 --> 00:50:25,106
We actually need to ask our


1515
00:50:25,106 --> 00:50:27,266
leaderboard about the person


1516
00:50:27,266 --> 00:50:28,166
whose name was tapped.


1517
00:50:29,576 --> 00:50:30,946
So we'll go back in the


1518
00:50:30,946 --> 00:50:32,906
leaderboard scoreboard and


1519
00:50:33,006 --> 00:50:35,266
figure out which person we need


1520
00:50:35,266 --> 00:50:36,936
to display more information


1521
00:50:36,936 --> 00:50:37,336
about.


1522
00:50:38,526 --> 00:50:39,226
I'll jump to the


1523
00:50:39,226 --> 00:50:40,626
leaderboard-view-controller.


1524
00:50:41,876 --> 00:50:44,336
At the bottom of this class, we


1525
00:50:44,336 --> 00:50:46,226
have a method that was written


1526
00:50:46,226 --> 00:50:48,506
for us by Xcode called the


1527
00:50:48,506 --> 00:50:49,916
prepare-for-segue method.


1528
00:50:50,946 --> 00:50:54,476
This gets called while we're


1529
00:50:54,476 --> 00:50:56,146
transitioning between one view


1530
00:50:56,146 --> 00:50:57,946
controller and another.


1531
00:50:58,466 --> 00:51:00,946
It will be called for us as soon


1532
00:51:00,946 --> 00:51:03,346
as we tap on a cell in our


1533
00:51:03,346 --> 00:51:04,506
table-view-controller.


1534
00:51:05,226 --> 00:51:08,296
So in here, I will get more


1535
00:51:08,336 --> 00:51:10,216
information about the player


1536
00:51:10,686 --> 00:51:11,786
based on the rank again.


1537
00:51:11,786 --> 00:51:14,206
And I can figure out the rank


1538
00:51:14,616 --> 00:51:16,866
because there is a property on


1539
00:51:16,866 --> 00:51:18,816
the table view called index path


1540
00:51:19,196 --> 00:51:20,256
for selected row.


1541
00:51:20,256 --> 00:51:23,456
This tells me the row number for


1542
00:51:23,456 --> 00:51:24,946
the cell that was selected.


1543
00:51:25,476 --> 00:51:29,036
We also get a segue parameter in


1544
00:51:29,036 --> 00:51:29,566
this method.


1545
00:51:29,566 --> 00:51:32,706
Remember how segues connect two


1546
00:51:32,706 --> 00:51:33,686
view controllers?


1547
00:51:33,776 --> 00:51:36,286
So the segue's destination


1548
00:51:36,286 --> 00:51:38,686
property will tell me which view


1549
00:51:38,686 --> 00:51:40,146
controller we're navigating


1550
00:51:40,146 --> 00:51:40,666
towards.


1551
00:51:41,956 --> 00:51:44,236
Once we have an instance of the


1552
00:51:44,236 --> 00:51:46,456
details-view-controller which is


1553
00:51:46,456 --> 00:51:47,686
the one we're going towards,


1554
00:51:48,286 --> 00:51:50,496
then we can set the player info


1555
00:51:50,786 --> 00:51:52,206
with the details we have.


1556
00:51:53,776 --> 00:51:55,686
Finally, we are ready to run our


1557
00:51:55,686 --> 00:51:58,426
app one last time and see how


1558
00:51:58,426 --> 00:51:59,686
everything comes together.


1559
00:52:01,496 --> 00:52:02,756
So now we'll play the game.


1560
00:52:02,756 --> 00:52:06,186
And we go to the leaderboard,


1561
00:52:06,716 --> 00:52:07,826
and we can see all the


1562
00:52:07,826 --> 00:52:09,656
information coming in from our


1563
00:52:09,656 --> 00:52:10,516
data model.


1564
00:52:11,516 --> 00:52:16,976
[ Applause ]


1565
00:52:17,476 --> 00:52:19,546
I made only one point, so I'm at


1566
00:52:19,546 --> 00:52:20,136
the end.


1567
00:52:20,536 --> 00:52:22,196
Let me see what my rank is.


1568
00:52:23,096 --> 00:52:24,706
Rank eleven, not too bad.


1569
00:52:25,016 --> 00:52:26,616
At least my app is all set up.


1570
00:52:28,586 --> 00:52:31,206
Now that we've built our app,


1571
00:52:31,476 --> 00:52:33,246
let's take a look at some next


1572
00:52:33,246 --> 00:52:33,426
steps.


1573
00:52:35,226 --> 00:52:36,366
Before you release your apps,


1574
00:52:36,956 --> 00:52:38,446
it's important to test them.


1575
00:52:39,376 --> 00:52:41,176
The exit test framework can be


1576
00:52:41,176 --> 00:52:44,516
used to write unit tests.


1577
00:52:44,666 --> 00:52:46,076
You should also check out the


1578
00:52:46,076 --> 00:52:47,756
App Store review guidelines.


1579
00:52:48,646 --> 00:52:50,116
These are meant for creating a


1580
00:52:50,116 --> 00:52:52,206
good experience for users and


1581
00:52:52,206 --> 00:52:53,286
developers alike.


1582
00:52:54,056 --> 00:52:57,006
At some point, you'd need to


1583
00:52:57,006 --> 00:52:58,616
enroll in the Apple Developer


1584
00:52:58,616 --> 00:52:59,266
Program.


1585
00:53:00,216 --> 00:53:01,896
This will help you create the


1586
00:53:01,896 --> 00:53:03,536
certificates and profiles that


1587
00:53:03,536 --> 00:53:05,756
you need to distribute your


1588
00:53:06,886 --> 00:53:06,976
apps.


1589
00:53:08,046 --> 00:53:10,176
Finally, submit your apps for


1590
00:53:10,176 --> 00:53:10,696
review.


1591
00:53:11,756 --> 00:53:13,926
Once they're approved, go tell


1592
00:53:13,926 --> 00:53:15,396
your friends and family and the


1593
00:53:15,396 --> 00:53:16,076
whole world.


1594
00:53:16,346 --> 00:53:17,186
That you've built an app.


1595
00:53:18,746 --> 00:53:20,396
To learn more about these next


1596
00:53:20,396 --> 00:53:22,546
steps, check out the resources


1597
00:53:22,596 --> 00:53:25,046
section for this session on your


1598
00:53:25,046 --> 00:53:27,316
WWDC Apps.


1599
00:53:27,836 --> 00:53:30,896
To summarize, I would encourage


1600
00:53:30,896 --> 00:53:32,756
you to explore Xcode.


1601
00:53:33,056 --> 00:53:35,476
It has many tools and templates


1602
00:53:35,596 --> 00:53:37,696
that make iOS development really


1603
00:53:37,696 --> 00:53:38,216
easy.


1604
00:53:38,746 --> 00:53:42,046
You can easily set up the user


1605
00:53:42,046 --> 00:53:44,006
interface using the storyboard.


1606
00:53:44,596 --> 00:53:46,826
Try some views and see what your


1607
00:53:46,826 --> 00:53:48,626
app might look like.


1608
00:53:50,146 --> 00:53:52,106
Think about what data you might


1609
00:53:52,106 --> 00:53:53,916
need, and how you would store


1610
00:53:54,756 --> 00:53:54,826
it.


1611
00:53:56,266 --> 00:53:58,186
It's important to create good


1612
00:53:58,186 --> 00:54:00,386
user experiences for all


1613
00:54:00,386 --> 00:54:01,086
devices.


1614
00:54:01,796 --> 00:54:03,356
This might mean optimizing


1615
00:54:03,406 --> 00:54:05,856
performance for older devices or


1616
00:54:05,856 --> 00:54:07,596
taking care of different screen


1617
00:54:07,596 --> 00:54:08,266
sizes.


1618
00:54:10,216 --> 00:54:12,236
Follow the guidelines and best


1619
00:54:12,236 --> 00:54:14,096
practices to make a good app.


1620
00:54:14,096 --> 00:54:18,216
If you've done all this, then


1621
00:54:18,216 --> 00:54:20,106
you're officially an iOS app


1622
00:54:20,106 --> 00:54:20,866
developer.


1623
00:54:21,516 --> 00:54:22,676
Congratulations!


1624
00:54:22,846 --> 00:54:24,456
And have a great WWDC.


1625
00:54:25,016 --> 00:54:26,000
[ Applause ]

