1
00:00:07,516 --> 00:00:15,516
[ Music ]


2
00:00:16,516 --> 00:00:25,936
[ Applause ]


3
00:00:26,436 --> 00:00:27,406
>> Hi, everyone.


4
00:00:27,646 --> 00:00:29,246
My name's Paul Salzman, and my


5
00:00:29,246 --> 00:00:30,636
friend Josh Ford and I are very


6
00:00:30,636 --> 00:00:31,706
excited to talk to you today


7
00:00:32,016 --> 00:00:33,066
about servicing your Siri


8
00:00:33,066 --> 00:00:34,276
shortcuts on the Siri watch


9
00:00:34,276 --> 00:00:34,626
face.


10
00:00:36,316 --> 00:00:37,556
Last year, we released the Siri


11
00:00:37,556 --> 00:00:39,276
watch face, which has glanceable


12
00:00:39,276 --> 00:00:40,486
information and tappable


13
00:00:40,486 --> 00:00:41,686
actions, sorted by their


14
00:00:41,686 --> 00:00:43,056
relevance to the user, at every


15
00:00:43,056 --> 00:00:43,516
wrist raise.


16
00:00:44,376 --> 00:00:45,786
That means our users have access


17
00:00:45,786 --> 00:00:47,326
to dynamically updated content,


18
00:00:47,676 --> 00:00:48,646
relevant to them throughout the


19
00:00:48,646 --> 00:00:50,006
day without any configuration


20
00:00:50,006 --> 00:00:50,436
required.


21
00:00:51,746 --> 00:00:53,046
And now, in watchOS 5, we are


22
00:00:53,046 --> 00:00:54,466
very excited to add your


23
00:00:54,466 --> 00:00:55,936
applications as data sources to


24
00:00:55,936 --> 00:00:56,766
the Siri watch face.


25
00:00:58,196 --> 00:00:59,666
The shortcuts you provide will


26
00:00:59,666 --> 00:01:00,566
show up on the watch face, on


27
00:01:00,566 --> 00:01:01,376
these items that we call


28
00:01:01,376 --> 00:01:01,876
platters.


29
00:01:02,276 --> 00:01:03,436
When the user taps on one of


30
00:01:03,436 --> 00:01:04,825
these platters, the underlying


31
00:01:04,825 --> 00:01:05,916
shortcut will be executed.


32
00:01:06,256 --> 00:01:07,486
That can do something like


33
00:01:07,996 --> 00:01:09,036
launching into your application


34
00:01:09,086 --> 00:01:12,246
into a specific context, or if


35
00:01:12,246 --> 00:01:13,006
your shortcut supports


36
00:01:13,006 --> 00:01:15,216
background execution, we can run


37
00:01:15,216 --> 00:01:16,566
that inline on the watch face.


38
00:01:17,586 --> 00:01:18,396
That means users can take


39
00:01:18,396 --> 00:01:19,496
advantage of your application's


40
00:01:19,496 --> 00:01:20,806
functionality without leaving


41
00:01:20,806 --> 00:01:21,446
their watch face.


42
00:01:22,006 --> 00:01:23,146
So, let's take a look at what


43
00:01:23,146 --> 00:01:24,276
we're going to talk about today.


44
00:01:24,596 --> 00:01:25,686
We're going to start off by


45
00:01:25,686 --> 00:01:27,066
going over how content appears


46
00:01:27,066 --> 00:01:27,926
on the Siri watch face.


47
00:01:29,246 --> 00:01:30,366
After that, we'll talk about the


48
00:01:30,366 --> 00:01:32,056
Relevant Shortcut API, which is


49
00:01:32,056 --> 00:01:33,266
the API you use to provide


50
00:01:33,266 --> 00:01:34,486
content to the Siri watch face.


51
00:01:35,846 --> 00:01:37,166
We'll also go over how you can


52
00:01:37,166 --> 00:01:38,636
use this API within your iOS


53
00:01:38,636 --> 00:01:39,926
application to provide content


54
00:01:39,926 --> 00:01:40,756
to the Siri watch face.


55
00:01:40,826 --> 00:01:42,416
And then, I'm going to hand


56
00:01:42,416 --> 00:01:43,896
things over to Josh, who'll talk


57
00:01:43,896 --> 00:01:45,536
about our prediction engine, as


58
00:01:45,536 --> 00:01:46,866
well as give you insight as to


59
00:01:46,866 --> 00:01:48,346
how best to use these API's for


60
00:01:48,346 --> 00:01:49,066
your application.


61
00:01:49,666 --> 00:01:52,536
So, let's talk about how content


62
00:01:52,536 --> 00:01:53,726
appears on the Siri watch face.


63
00:01:55,246 --> 00:01:56,116
Everything on the Siri watch


64
00:01:56,116 --> 00:01:57,716
face is sorted by its relevance


65
00:01:57,716 --> 00:01:58,206
to the user.


66
00:01:58,836 --> 00:01:59,746
The more relevant a piece of


67
00:01:59,746 --> 00:02:01,306
content is, the higher up on the


68
00:02:01,306 --> 00:02:02,386
watch face it's going to appear.


69
00:02:03,076 --> 00:02:04,196
And, we calculate relevance by


70
00:02:04,196 --> 00:02:05,936
incorporating a number of inputs


71
00:02:05,936 --> 00:02:07,286
across the system, like the


72
00:02:07,286 --> 00:02:08,776
current time of day, the user's


73
00:02:08,776 --> 00:02:10,446
location, their routine, and


74
00:02:10,446 --> 00:02:11,546
their engagement with a given


75
00:02:11,546 --> 00:02:12,136
data source.


76
00:02:13,546 --> 00:02:14,596
You'll provide this content to


77
00:02:14,596 --> 00:02:15,946
us with a relevantShortcut,


78
00:02:16,366 --> 00:02:18,346
which associates a shortcut with


79
00:02:18,346 --> 00:02:19,576
UI customization, and the


80
00:02:19,576 --> 00:02:20,626
ability to give us hints as to


81
00:02:20,626 --> 00:02:21,786
when to deploy your content.


82
00:02:22,996 --> 00:02:24,796
Now, we will derive implicit


83
00:02:24,796 --> 00:02:25,876
relevance for the shortcuts you


84
00:02:25,876 --> 00:02:27,426
provide based off of your user's


85
00:02:27,426 --> 00:02:28,556
past interaction with the


86
00:02:28,556 --> 00:02:29,106
shortcuts.


87
00:02:29,646 --> 00:02:31,036
But, often you have much more


88
00:02:31,036 --> 00:02:32,116
insightful suggestions,


89
00:02:32,406 --> 00:02:33,146
especially when showing


90
00:02:33,146 --> 00:02:34,606
glanceable information, or if


91
00:02:34,606 --> 00:02:35,626
you want to suggest a shortcut


92
00:02:35,656 --> 00:02:36,836
that hasn't yet been executed by


93
00:02:36,836 --> 00:02:37,206
a user.


94
00:02:37,306 --> 00:02:38,466
So, you can provide us things


95
00:02:38,466 --> 00:02:39,466
called relevance providers.


96
00:02:40,786 --> 00:02:41,866
And, just like a first-party


97
00:02:41,866 --> 00:02:43,756
data source, users can disable


98
00:02:43,786 --> 00:02:46,036
or re-enable your data source in


99
00:02:46,036 --> 00:02:47,536
the Siri face customization page


100
00:02:47,586 --> 00:02:49,126
in the iOS Watch app.


101
00:02:49,876 --> 00:02:51,726
Now, before we get too far into


102
00:02:51,726 --> 00:02:52,736
adopting the Relevant Shortcut


103
00:02:52,736 --> 00:02:54,276
API, we want to make sure we're


104
00:02:54,276 --> 00:02:55,146
not contending with these


105
00:02:55,146 --> 00:02:56,676
relevance calculations when we


106
00:02:56,676 --> 00:02:58,216
see how our relevant shortcuts


107
00:02:58,396 --> 00:02:59,546
behave and look on the watch


108
00:02:59,546 --> 00:02:59,916
face.


109
00:03:00,766 --> 00:03:01,736
So, while we're developing,


110
00:03:01,766 --> 00:03:02,796
we're going to want to go into


111
00:03:02,796 --> 00:03:04,096
the iOS Settings app, into the


112
00:03:04,096 --> 00:03:06,296
Developer's page, and find the


113
00:03:06,296 --> 00:03:07,456
Shortcuts Testing section.


114
00:03:07,996 --> 00:03:10,456
In there, we can ensure that our


115
00:03:10,456 --> 00:03:11,906
most recently provided relevant


116
00:03:11,906 --> 00:03:13,376
shortcuts show up at the top of


117
00:03:13,376 --> 00:03:15,216
the watch face, by enabling the


118
00:03:15,216 --> 00:03:16,626
Show Recent Shortcuts option.


119
00:03:19,796 --> 00:03:21,616
Additionally, as we get further


120
00:03:21,616 --> 00:03:23,146
into adopting this API in our


121
00:03:23,146 --> 00:03:25,216
iOS application, we can cause


122
00:03:25,216 --> 00:03:26,666
the periodic syncing of relevant


123
00:03:26,666 --> 00:03:28,346
shortcuts from the iOS device to


124
00:03:28,346 --> 00:03:29,816
the watch to occur immediately


125
00:03:29,816 --> 00:03:30,816
by tapping the Force Sync


126
00:03:30,816 --> 00:03:31,866
Shortcuts to Watch button.


127
00:03:32,286 --> 00:03:34,616
So, now let's talk about


128
00:03:34,616 --> 00:03:36,426
relevant shortcuts, and at the


129
00:03:36,426 --> 00:03:37,846
core of a relevant shortcut, is


130
00:03:37,846 --> 00:03:38,286
a shortcut.


131
00:03:39,356 --> 00:03:40,706
Shortcuts encompass key


132
00:03:40,706 --> 00:03:42,016
functionality, within your


133
00:03:42,016 --> 00:03:43,116
application, that you want to


134
00:03:43,116 --> 00:03:44,226
make more accessible to your


135
00:03:44,226 --> 00:03:44,606
users.


136
00:03:45,336 --> 00:03:46,126
And, they can access these


137
00:03:46,126 --> 00:03:47,336
shortcuts by saying key phrases


138
00:03:47,336 --> 00:03:49,066
into Siri, or tapping on various


139
00:03:49,066 --> 00:03:49,476
system UI.


140
00:03:49,476 --> 00:03:51,236
And, in the case of watchOS,


141
00:03:51,446 --> 00:03:52,376
that's a platter on the Siri


142
00:03:52,376 --> 00:03:53,606
watch face.


143
00:03:54,196 --> 00:03:55,626
There's a lot of in-depth


144
00:03:55,626 --> 00:03:56,636
discussion about how to make


145
00:03:56,686 --> 00:03:57,596
great shortcuts this year.


146
00:03:57,656 --> 00:03:58,896
And all will give a high-level


147
00:03:58,896 --> 00:04:00,526
overview of how they work with a


148
00:04:00,526 --> 00:04:01,526
watchOS persecutive.


149
00:04:01,646 --> 00:04:02,946
I highly recommend seeing the


150
00:04:02,946 --> 00:04:04,246
"Introduction to Siri Shortcuts"


151
00:04:04,276 --> 00:04:05,716
talk, and the "Building for


152
00:04:05,936 --> 00:04:07,356
Voice with Siri Shortcuts" that


153
00:04:07,356 --> 00:04:08,046
happened earlier in the


154
00:04:08,046 --> 00:04:08,626
conference.


155
00:04:10,236 --> 00:04:11,646
So, shortcuts can be made out of


156
00:04:11,646 --> 00:04:12,506
one of two things.


157
00:04:13,306 --> 00:04:14,686
An NSUserActivity, which


158
00:04:14,716 --> 00:04:15,836
represents a state within your


159
00:04:15,836 --> 00:04:16,706
application you want to


160
00:04:16,706 --> 00:04:19,096
accelerate users back into, or


161
00:04:19,096 --> 00:04:20,796
an intent, which can execute a


162
00:04:20,796 --> 00:04:22,166
task on your user's behalf.


163
00:04:23,126 --> 00:04:23,886
Now, intents are really


164
00:04:23,886 --> 00:04:24,876
powerful, because they can


165
00:04:24,876 --> 00:04:26,076
support background execution,


166
00:04:26,526 --> 00:04:27,676
which means that users can take


167
00:04:27,676 --> 00:04:28,866
advantage of your functionality


168
00:04:28,996 --> 00:04:29,956
without having to launch your


169
00:04:29,956 --> 00:04:30,736
app into the foreground.


170
00:04:31,376 --> 00:04:32,696
In fact, users can request


171
00:04:32,696 --> 00:04:34,256
background-capable intents that


172
00:04:34,256 --> 00:04:35,226
are available on their iPhone


173
00:04:35,376 --> 00:04:36,266
from their Apple watch or


174
00:04:36,266 --> 00:04:36,706
HomePod.


175
00:04:37,986 --> 00:04:39,086
And, our frameworks provide a


176
00:04:39,086 --> 00:04:40,316
lot of built-in intents you can


177
00:04:40,316 --> 00:04:41,386
take advantage of right now,


178
00:04:41,806 --> 00:04:43,236
like sending a message, starting


179
00:04:43,236 --> 00:04:44,606
a workout, or requesting a ride.


180
00:04:45,336 --> 00:04:46,916
But, new in watchOS 5, and iOS


181
00:04:46,916 --> 00:04:48,626
12, you can make your own custom


182
00:04:48,626 --> 00:04:49,666
intents that have the


183
00:04:49,666 --> 00:04:51,056
functionality that your app does


184
00:04:51,106 --> 00:04:51,426
best.


185
00:04:52,436 --> 00:04:53,836
There's this awesome in-depth


186
00:04:53,836 --> 00:04:55,616
intents definition file and


187
00:04:55,616 --> 00:04:56,736
editor built into Xcode.


188
00:04:56,886 --> 00:04:57,906
And, I'll give you a couple of


189
00:04:57,906 --> 00:04:58,886
pointers related to relevant


190
00:04:58,886 --> 00:04:59,386
shortcuts.


191
00:04:59,626 --> 00:05:00,496
But, I highly recommend seeing


192
00:05:00,496 --> 00:05:01,836
those other talks for full


193
00:05:02,436 --> 00:05:02,646
details.


194
00:05:03,216 --> 00:05:04,766
Now, let's go over a couple of


195
00:05:04,766 --> 00:05:06,346
examples of how shortcuts will


196
00:05:06,346 --> 00:05:07,666
execute when requested from a


197
00:05:07,666 --> 00:05:09,316
watch app.


198
00:05:09,626 --> 00:05:12,016
User generates their shortcut


199
00:05:12,016 --> 00:05:13,806
request by tapping on the Siri


200
00:05:13,806 --> 00:05:15,056
watch face, or by saying a key


201
00:05:15,056 --> 00:05:16,996
voice phrase to Siri, and the


202
00:05:16,996 --> 00:05:18,206
watch receives that request.


203
00:05:18,546 --> 00:05:19,816
It'll examine it and determine,


204
00:05:19,876 --> 00:05:20,836
is there an application that's


205
00:05:20,836 --> 00:05:21,886
installed that can handle the


206
00:05:21,886 --> 00:05:22,336
shortcut?


207
00:05:22,916 --> 00:05:24,306
And, in this example, yes, there


208
00:05:24,306 --> 00:05:25,226
is one that's installed.


209
00:05:25,626 --> 00:05:27,116
So, we're going to dispatch that


210
00:05:27,116 --> 00:05:28,056
shortcut to the appropriate


211
00:05:28,056 --> 00:05:28,656
application.


212
00:05:29,496 --> 00:05:31,086
If your shortcut is implemented


213
00:05:31,086 --> 00:05:32,346
by an intent that can handle


214
00:05:32,346 --> 00:05:34,276
background execution, the


215
00:05:34,276 --> 00:05:35,856
application's intent execution


216
00:05:36,066 --> 00:05:36,876
will run that shortcut.


217
00:05:37,486 --> 00:05:38,606
But, if instead your shortcut is


218
00:05:38,606 --> 00:05:40,086
built off of a NSUserActivity,


219
00:05:40,276 --> 00:05:41,206
or an intent that can't run in


220
00:05:41,206 --> 00:05:42,616
the background, the application


221
00:05:42,616 --> 00:05:43,836
itself will be launched to


222
00:05:43,836 --> 00:05:44,546
handle the shortcut.


223
00:05:45,586 --> 00:05:46,936
When the shortcut execution is


224
00:05:46,936 --> 00:05:48,006
complete, a result will be


225
00:05:48,006 --> 00:05:49,246
generated, and then handed back


226
00:05:49,246 --> 00:05:49,666
to the user.


227
00:05:50,856 --> 00:05:51,746
Now, let's take a look at


228
00:05:51,746 --> 00:05:52,396
another example.


229
00:05:53,036 --> 00:05:54,556
In this case our user taps on


230
00:05:54,556 --> 00:05:55,556
the Siri watch face, or says a


231
00:05:55,556 --> 00:05:57,056
key phrase to Siri to generate


232
00:05:57,056 --> 00:05:58,416
the shortcut request.


233
00:05:58,636 --> 00:06:00,216
And, the watch will examine it.


234
00:06:00,216 --> 00:06:01,646
And, in this case, it'll


235
00:06:01,646 --> 00:06:02,626
determine that there isn't an


236
00:06:02,626 --> 00:06:03,766
application that's installed


237
00:06:03,846 --> 00:06:04,916
that can handle the shortcut.


238
00:06:05,456 --> 00:06:06,556
So, we'll check with the phone


239
00:06:06,556 --> 00:06:07,816
and see if it has an app that


240
00:06:07,816 --> 00:06:08,576
can handle the shortcut.


241
00:06:08,956 --> 00:06:10,316
And, in this case, yes there is.


242
00:06:10,316 --> 00:06:11,306
So, we're going to forward that


243
00:06:11,306 --> 00:06:12,496
request over to the phone.


244
00:06:12,836 --> 00:06:14,216
And, the proper application, or


245
00:06:14,216 --> 00:06:15,486
intents extension will handle


246
00:06:15,486 --> 00:06:16,016
execution.


247
00:06:16,546 --> 00:06:18,536
When execution is complete, a


248
00:06:18,536 --> 00:06:19,676
result will be generated on the


249
00:06:19,676 --> 00:06:21,156
phone, and forward back to the


250
00:06:21,156 --> 00:06:22,336
watch, and conveyed to the user.


251
00:06:22,336 --> 00:06:25,806
So, now that we understand the


252
00:06:25,806 --> 00:06:26,946
key concepts that make up a


253
00:06:26,946 --> 00:06:28,256
shortcut, and how it'll execute


254
00:06:28,256 --> 00:06:29,446
on the watch, let's talk about


255
00:06:29,446 --> 00:06:31,166
relevant shortcuts, which take


256
00:06:31,166 --> 00:06:32,456
your shortcuts and show them on


257
00:06:32,456 --> 00:06:33,376
the watch face when they're most


258
00:06:33,376 --> 00:06:33,696
relevant.


259
00:06:35,066 --> 00:06:36,466
We can automatically populate


260
00:06:36,466 --> 00:06:37,756
the fields on the platters on


261
00:06:37,756 --> 00:06:38,936
the Siri watch face, based on


262
00:06:38,936 --> 00:06:39,846
your shortcut content.


263
00:06:40,016 --> 00:06:41,706
But, you can also customize the


264
00:06:41,706 --> 00:06:42,826
platter's display, which is


265
00:06:42,826 --> 00:06:43,846
really useful for displaying


266
00:06:43,846 --> 00:06:44,816
glanceable information.


267
00:06:45,216 --> 00:06:47,756
And, of course when your platter


268
00:06:47,756 --> 00:06:48,666
is tapped, the underlying


269
00:06:48,666 --> 00:06:49,706
shortcut will be executed.


270
00:06:50,056 --> 00:06:51,106
So, let's take a look at how


271
00:06:51,106 --> 00:06:52,186
this will run on this watch


272
00:06:52,186 --> 00:06:52,476
face.


273
00:06:53,006 --> 00:06:54,976
If your shortcut is backed by a


274
00:06:54,976 --> 00:06:56,226
user activity, when the user


275
00:06:56,226 --> 00:06:57,916
taps on it, your app will be


276
00:06:57,916 --> 00:07:00,136
launched into the appropriate


277
00:07:00,136 --> 00:07:00,726
context.


278
00:07:01,256 --> 00:07:03,756
If instead, your app is-- or,


279
00:07:03,756 --> 00:07:04,886
your shortcut is based off of


280
00:07:04,886 --> 00:07:06,316
intents, when the user taps on


281
00:07:06,316 --> 00:07:07,476
the platter, we'll see this


282
00:07:07,476 --> 00:07:08,516
intent confirmation view.


283
00:07:09,336 --> 00:07:10,556
And, if they tap to confirm it,


284
00:07:11,156 --> 00:07:11,906
if your intent runs at the


285
00:07:11,906 --> 00:07:13,106
background, we'll execute it


286
00:07:13,106 --> 00:07:13,536
inline.


287
00:07:14,576 --> 00:07:15,906
If instead your intent can't run


288
00:07:15,906 --> 00:07:16,976
in the background, we'll launch


289
00:07:16,976 --> 00:07:18,166
your application, and hand you


290
00:07:18,166 --> 00:07:19,156
the intent to continue


291
00:07:19,156 --> 00:07:19,716
execution.


292
00:07:21,216 --> 00:07:22,556
So, let's look at the API for


293
00:07:22,556 --> 00:07:23,306
Relevant Shortcuts.


294
00:07:23,916 --> 00:07:25,146
At the core of a relevant


295
00:07:25,146 --> 00:07:25,976
shortcut, of course, is a


296
00:07:25,976 --> 00:07:26,396
shortcut.


297
00:07:26,886 --> 00:07:28,286
If you want to give us hints as


298
00:07:28,286 --> 00:07:29,086
to when this content is


299
00:07:29,086 --> 00:07:30,166
relevant, you can provide us


300
00:07:30,166 --> 00:07:31,256
relevanceProviders, which we'll


301
00:07:31,256 --> 00:07:31,806
go over soon.


302
00:07:33,196 --> 00:07:34,186
And, if you want to customize


303
00:07:34,186 --> 00:07:36,216
the UI beyond what your shortcut


304
00:07:36,216 --> 00:07:37,916
will provide, you can give us a


305
00:07:37,916 --> 00:07:39,196
defaultCardTemplate on the


306
00:07:39,196 --> 00:07:40,106
watchTemplate property.


307
00:07:40,726 --> 00:07:43,246
Now, once you're done creating


308
00:07:43,246 --> 00:07:44,166
all of your wonderful relevant


309
00:07:44,166 --> 00:07:45,146
shortcuts, you need to let us


310
00:07:45,146 --> 00:07:45,676
know about them.


311
00:07:45,926 --> 00:07:46,886
So, you want to inform the


312
00:07:46,886 --> 00:07:48,186
default relevantShortcutStore.


313
00:07:48,696 --> 00:07:49,696
And, the way you do that is


314
00:07:49,696 --> 00:07:50,576
providing an array.


315
00:07:50,966 --> 00:07:52,066
And, every time you give us an


316
00:07:52,066 --> 00:07:53,286
array, it'll erase the previous


317
00:07:53,286 --> 00:07:54,596
contents we had in our shortcut


318
00:07:54,596 --> 00:07:55,946
store, which is really useful


319
00:07:55,946 --> 00:07:57,246
for invalidating stale relevant


320
00:07:57,246 --> 00:07:57,786
shortcuts.


321
00:07:58,116 --> 00:07:58,846
But, you just need to keep in


322
00:07:58,846 --> 00:08:00,406
mind to provide us all of the


323
00:08:00,406 --> 00:08:01,616
relevant shortcuts we should be


324
00:08:01,616 --> 00:08:02,136
considering.


325
00:08:03,876 --> 00:08:05,116
So, let's look at how your


326
00:08:05,116 --> 00:08:05,946
content will display on the


327
00:08:05,946 --> 00:08:06,266
platter.


328
00:08:06,806 --> 00:08:08,296
You can see on the top left,


329
00:08:08,296 --> 00:08:09,436
your application's icon will be


330
00:08:09,436 --> 00:08:10,356
displayed, followed by your


331
00:08:10,356 --> 00:08:10,836
app's name.


332
00:08:11,536 --> 00:08:12,816
Below that is a required title


333
00:08:12,816 --> 00:08:14,346
string, and below that is an


334
00:08:14,346 --> 00:08:15,746
optional subtitle string, that


335
00:08:15,746 --> 00:08:17,026
you can use for more context.


336
00:08:17,386 --> 00:08:18,556
We'll display that in italics.


337
00:08:19,236 --> 00:08:20,166
To the left of both of these


338
00:08:20,166 --> 00:08:21,746
strings is an optional custom


339
00:08:21,746 --> 00:08:22,106
image.


340
00:08:22,646 --> 00:08:23,486
This image supports


341
00:08:23,486 --> 00:08:24,836
transparency, and automatically


342
00:08:24,836 --> 00:08:25,916
applies rounded corners.


343
00:08:26,776 --> 00:08:27,696
You can see more about the


344
00:08:27,696 --> 00:08:28,886
dimensions of these assets by


345
00:08:29,086 --> 00:08:30,186
looking at the human interface


346
00:08:30,186 --> 00:08:31,196
guidelines resources for


347
00:08:31,196 --> 00:08:31,756
watchOS.


348
00:08:32,496 --> 00:08:33,716
Now, as I mentioned, we can


349
00:08:33,775 --> 00:08:35,096
automatically populate all these


350
00:08:35,096 --> 00:08:35,966
fields based off of the


351
00:08:35,966 --> 00:08:36,796
shortcuts you supply.


352
00:08:37,196 --> 00:08:39,346
In the case of a custom intent,


353
00:08:39,936 --> 00:08:41,426
every parameter combination you


354
00:08:41,426 --> 00:08:43,265
supply has an associated title


355
00:08:43,265 --> 00:08:44,246
and subtitle we can use.


356
00:08:45,546 --> 00:08:46,556
And, as you create your intents


357
00:08:46,556 --> 00:08:48,196
in code to generate a shortcut,


358
00:08:48,856 --> 00:08:50,076
you can set an image for any of


359
00:08:50,076 --> 00:08:50,766
the parameters.


360
00:08:51,406 --> 00:08:52,606
We will choose an image for the


361
00:08:52,606 --> 00:08:54,266
custom image, based off of what


362
00:08:54,266 --> 00:08:55,536
is available on the most


363
00:08:55,536 --> 00:08:56,436
specific parameter.


364
00:08:57,326 --> 00:08:58,346
And, the specificity of a


365
00:08:58,346 --> 00:08:59,356
parameter is defined by the


366
00:08:59,416 --> 00:09:00,706
order of parameters you have


367
00:09:00,706 --> 00:09:01,576
listed in your intents


368
00:09:01,576 --> 00:09:02,256
definition file.


369
00:09:02,836 --> 00:09:05,106
In the case of an


370
00:09:05,106 --> 00:09:06,906
NSUserActivity, when you're


371
00:09:06,906 --> 00:09:07,926
creating your userActivity to


372
00:09:07,926 --> 00:09:09,536
make a shortcut, you'll supply


373
00:09:09,536 --> 00:09:10,896
it-- userActivity type that


374
00:09:10,896 --> 00:09:11,776
you've listed in your app's


375
00:09:11,776 --> 00:09:12,776
info.plist.


376
00:09:13,156 --> 00:09:13,986
And, for us to be able to


377
00:09:13,986 --> 00:09:15,076
display it without a default


378
00:09:15,076 --> 00:09:16,116
card template, you'll need to


379
00:09:16,116 --> 00:09:17,176
give us a title on the title


380
00:09:17,176 --> 00:09:17,596
property.


381
00:09:18,646 --> 00:09:20,486
In iOS you can also supply a


382
00:09:20,486 --> 00:09:22,526
subtitle and a custom image by


383
00:09:22,526 --> 00:09:22,896
creating a


384
00:09:22,896 --> 00:09:25,066
CSSearchableItemAttributeSet.


385
00:09:26,256 --> 00:09:27,336
And, on that attribute set,


386
00:09:27,336 --> 00:09:28,666
we'll extract a subtitle from


387
00:09:28,666 --> 00:09:29,456
the content description


388
00:09:29,456 --> 00:09:31,146
property, and the custom image


389
00:09:31,146 --> 00:09:32,306
from the thumbnailData property.


390
00:09:33,476 --> 00:09:34,426
When you're done configuring


391
00:09:34,426 --> 00:09:35,926
this attribute set, set on your


392
00:09:35,966 --> 00:09:36,926
NSUserActivity's


393
00:09:37,066 --> 00:09:38,336
contentAttributeSet property.


394
00:09:38,916 --> 00:09:42,216
If you don't want to give us the


395
00:09:42,216 --> 00:09:43,856
content that's baked into your


396
00:09:43,856 --> 00:09:44,846
shortcut, you can supply a


397
00:09:44,846 --> 00:09:46,306
default card template, which has


398
00:09:46,306 --> 00:09:47,156
properties for each of the


399
00:09:47,156 --> 00:09:48,066
fields on this platter.


400
00:09:48,536 --> 00:09:49,376
And, depending on what we have


401
00:09:49,376 --> 00:09:51,106
available to us, we will display


402
00:09:51,136 --> 00:09:51,796
a different layout.


403
00:09:52,536 --> 00:09:53,296
You can see in the right two


404
00:09:53,296 --> 00:09:54,746
configurations, that if no image


405
00:09:54,746 --> 00:09:55,796
is provided, we'll lay out the


406
00:09:55,796 --> 00:09:57,296
text further to the left, giving


407
00:09:57,296 --> 00:09:58,696
you more space for your words.


408
00:09:59,376 --> 00:10:00,836
In the bottom two cases, if


409
00:10:00,836 --> 00:10:02,126
there's no subtitle, we'll allow


410
00:10:02,126 --> 00:10:03,206
the title string to wrap from


411
00:10:03,206 --> 00:10:04,330
the top line to the bottom line.


412
00:10:06,616 --> 00:10:08,796
If your shortcut is based on an


413
00:10:08,796 --> 00:10:10,246
intent, when a user taps on it,


414
00:10:10,246 --> 00:10:11,146
they'll see this intent


415
00:10:11,146 --> 00:10:11,906
confirmation view.


416
00:10:12,736 --> 00:10:13,546
In the top left is your


417
00:10:13,546 --> 00:10:14,736
application's icon, which is a


418
00:10:14,736 --> 00:10:15,946
bit bigger this time, followed


419
00:10:15,946 --> 00:10:16,666
by your app's name.


420
00:10:17,376 --> 00:10:18,416
Below that we'll display the


421
00:10:18,416 --> 00:10:19,936
title and subtitle directly from


422
00:10:19,936 --> 00:10:21,026
your intents definition file.


423
00:10:21,626 --> 00:10:22,816
And, at this point, the user has


424
00:10:22,886 --> 00:10:23,516
three options.


425
00:10:24,186 --> 00:10:25,286
If they want to run your intent,


426
00:10:25,556 --> 00:10:26,716
they can click Confirm in that


427
00:10:26,716 --> 00:10:27,566
middle pink button.


428
00:10:28,126 --> 00:10:28,996
If they don't want to run it,


429
00:10:29,276 --> 00:10:30,406
they can tap dismiss or the


430
00:10:30,406 --> 00:10:30,976
digital crown.


431
00:10:31,496 --> 00:10:32,596
And then, the third option is a


432
00:10:32,596 --> 00:10:33,266
bit more subtle.


433
00:10:33,936 --> 00:10:35,486
Sometimes users see an intent,


434
00:10:35,756 --> 00:10:37,076
realize they want to tweak some


435
00:10:37,076 --> 00:10:37,886
of the parameters.


436
00:10:38,176 --> 00:10:40,426
So, they can tap that top


437
00:10:40,456 --> 00:10:41,926
module, and we'll launch into


438
00:10:41,926 --> 00:10:43,276
your application, and hand you


439
00:10:43,276 --> 00:10:44,486
the intent you've customized.


440
00:10:44,726 --> 00:10:46,146
So, you can present some UI to


441
00:10:46,146 --> 00:10:47,376
allow your users to tweak some


442
00:10:47,376 --> 00:10:48,376
of the parameters before


443
00:10:48,376 --> 00:10:49,356
continuing execution.


444
00:10:50,666 --> 00:10:51,616
Now, let's talk about that


445
00:10:51,616 --> 00:10:53,166
middle pink Confirm button a


446
00:10:53,166 --> 00:10:55,186
little bit more.


447
00:10:55,386 --> 00:10:56,306
The string we show there, where


448
00:10:56,306 --> 00:10:57,806
it says Action Verb, is derived


449
00:10:57,806 --> 00:10:58,976
based off of the category of


450
00:10:58,976 --> 00:11:00,346
intent you've defined in your


451
00:11:00,346 --> 00:11:01,296
intents definition file.


452
00:11:02,596 --> 00:11:04,336
Additionally, that color is


453
00:11:04,336 --> 00:11:05,706
chosen from your application's


454
00:11:05,706 --> 00:11:07,266
global tint color in your watch


455
00:11:07,266 --> 00:11:08,056
app storyboard.


456
00:11:08,666 --> 00:11:10,886
Now, it's very important to keep


457
00:11:10,886 --> 00:11:11,946
in mind that the intents that


458
00:11:11,976 --> 00:11:13,226
you support in your watch app


459
00:11:13,276 --> 00:11:14,816
must be a subset of the intents


460
00:11:14,816 --> 00:11:15,686
you support in your iOS


461
00:11:15,686 --> 00:11:16,206
application.


462
00:11:16,686 --> 00:11:17,406
That means you're going to be


463
00:11:17,406 --> 00:11:19,066
sharing the same title strings,


464
00:11:19,066 --> 00:11:21,196
and subtitle strings on iOS and


465
00:11:21,196 --> 00:11:21,836
watchOS.


466
00:11:22,306 --> 00:11:23,356
And, watchOS is a very


467
00:11:23,356 --> 00:11:24,316
constrained canvas.


468
00:11:24,536 --> 00:11:25,446
Every word counts.


469
00:11:25,936 --> 00:11:27,426
So, we highly recommend using


470
00:11:27,426 --> 00:11:28,776
string dictionaries, with the


471
00:11:28,776 --> 00:11:30,666
NSStringVariableWidthRuleType


472
00:11:30,726 --> 00:11:30,956
key.


473
00:11:31,476 --> 00:11:32,636
That allows you to give us a


474
00:11:32,636 --> 00:11:34,356
list of varying sizes of strings


475
00:11:34,446 --> 00:11:35,296
that we can choose from,


476
00:11:35,456 --> 00:11:36,456
depending on the context we're


477
00:11:36,456 --> 00:11:37,096
displaying them in.


478
00:11:38,456 --> 00:11:39,496
When providing content to


479
00:11:39,496 --> 00:11:41,876
watchOS, we recommend supplying


480
00:11:41,876 --> 00:11:43,776
a string with a width rule of 20


481
00:11:44,166 --> 00:11:45,616
for a 38 millimeter watch.


482
00:11:45,656 --> 00:11:47,506
And, a width rule of 24 for a 42


483
00:11:47,506 --> 00:11:48,106
millimeter watch.


484
00:11:48,756 --> 00:11:51,266
To get more information on


485
00:11:51,266 --> 00:11:53,216
adopting this API, please see


486
00:11:53,216 --> 00:11:54,476
the "Localizing with Xcode 9"


487
00:11:54,476 --> 00:11:55,166
talk from last year's


488
00:11:55,166 --> 00:11:55,706
conference.


489
00:11:56,646 --> 00:11:58,726
So now, let's talk about


490
00:11:58,726 --> 00:11:59,566
relevance providers.


491
00:12:01,116 --> 00:12:02,676
Relevance providers are your way


492
00:12:02,676 --> 00:12:04,146
to give us a hint as to when we


493
00:12:04,146 --> 00:12:05,116
should show your content.


494
00:12:06,436 --> 00:12:07,366
They really let us know how we


495
00:12:07,366 --> 00:12:08,686
should incorporate inputs like


496
00:12:08,716 --> 00:12:09,966
the time of day, the user's


497
00:12:09,966 --> 00:12:11,536
location, or their routine, when


498
00:12:11,536 --> 00:12:12,506
calculating relevance.


499
00:12:13,186 --> 00:12:14,166
And, in fact, you can give more


500
00:12:14,166 --> 00:12:15,366
than one relevance provider on a


501
00:12:15,366 --> 00:12:16,266
given relevance shortcut.


502
00:12:16,306 --> 00:12:17,526
And, we're going to take the


503
00:12:17,526 --> 00:12:18,686
inner section of their output.


504
00:12:19,016 --> 00:12:20,076
So, if you give us a relevance


505
00:12:20,076 --> 00:12:21,286
provider that says a certain


506
00:12:21,286 --> 00:12:22,296
time of day's very important.


507
00:12:22,296 --> 00:12:23,336
And, another one that says a


508
00:12:23,336 --> 00:12:24,606
specific location's important,


509
00:12:25,116 --> 00:12:26,256
you'll get high relevance output


510
00:12:26,356 --> 00:12:28,136
when both it is that time of day


511
00:12:28,206 --> 00:12:29,296
and the user is at that


512
00:12:29,296 --> 00:12:29,806
location.


513
00:12:30,586 --> 00:12:31,866
If instead you want the union of


514
00:12:31,866 --> 00:12:32,816
these relevance providers,


515
00:12:32,816 --> 00:12:33,756
you're going to want to provide


516
00:12:33,906 --> 00:12:35,356
two separate relevance


517
00:12:35,356 --> 00:12:36,356
shortcuts, each one with a


518
00:12:36,356 --> 00:12:37,246
different relevance provider.


519
00:12:37,746 --> 00:12:39,716
So, let's take a look at the


520
00:12:39,716 --> 00:12:40,586
options we have available.


521
00:12:41,416 --> 00:12:42,246
The first one is


522
00:12:42,436 --> 00:12:44,726
INDateRelevanceProvider, which


523
00:12:44,726 --> 00:12:45,656
has a required startDate


524
00:12:45,656 --> 00:12:46,876
parameter, and an optional


525
00:12:46,876 --> 00:12:47,536
endDate parameter.


526
00:12:48,546 --> 00:12:49,516
When you create an instance of


527
00:12:49,516 --> 00:12:50,986
this relevance provider, the


528
00:12:50,986 --> 00:12:52,416
closer time of day gets to the


529
00:12:52,536 --> 00:12:53,676
start that you've provided, the


530
00:12:53,676 --> 00:12:54,866
higher the relevance output of


531
00:12:54,866 --> 00:12:55,346
the provider.


532
00:12:56,226 --> 00:12:57,596
After that time of day passes,


533
00:12:57,836 --> 00:12:58,856
the relevance will fall off on a


534
00:12:58,856 --> 00:13:00,126
curve, allowing more content to


535
00:13:00,126 --> 00:13:01,046
appear on the top of the watch


536
00:13:01,046 --> 00:13:01,366
face.


537
00:13:01,706 --> 00:13:02,466
And, if you give us this


538
00:13:02,466 --> 00:13:04,076
optional endDate, we'll adjust


539
00:13:04,076 --> 00:13:05,316
that curve to accommodate.


540
00:13:05,856 --> 00:13:08,806
If your content instead is more


541
00:13:08,806 --> 00:13:10,086
relevant to a given location,


542
00:13:10,086 --> 00:13:10,706
you can use the


543
00:13:10,816 --> 00:13:12,076
INLocationRelevanceProvider.


544
00:13:13,086 --> 00:13:14,916
It takes a CLRegion as its main


545
00:13:14,916 --> 00:13:16,246
parameter when you create an


546
00:13:16,246 --> 00:13:16,956
instance of this.


547
00:13:17,116 --> 00:13:18,296
As the user gets closer and


548
00:13:18,296 --> 00:13:19,686
closer to that region, the


549
00:13:19,686 --> 00:13:20,666
relevance output of this


550
00:13:20,666 --> 00:13:21,936
relevanceProvider gets higher


551
00:13:21,936 --> 00:13:22,306
and higher.


552
00:13:23,686 --> 00:13:24,956
Now, you don't always have a


553
00:13:24,956 --> 00:13:26,246
specific time of day, or


554
00:13:26,246 --> 00:13:27,506
location in mind, for where your


555
00:13:27,506 --> 00:13:29,946
content should be relevant.


556
00:13:30,296 --> 00:13:31,866
User's schedules, their favorite


557
00:13:31,866 --> 00:13:33,676
locations vary all over the


558
00:13:33,676 --> 00:13:34,636
place, and you don't want to


559
00:13:34,636 --> 00:13:35,796
have to get in the business of


560
00:13:35,796 --> 00:13:36,546
tracking all of this.


561
00:13:36,736 --> 00:13:38,126
So, you can take advantage of


562
00:13:38,126 --> 00:13:39,596
the Siri face's smarts, and use


563
00:13:39,596 --> 00:13:39,676
an


564
00:13:39,836 --> 00:13:41,226
INDailyRoutineRelevanceProvider,


565
00:13:41,496 --> 00:13:42,646
where we have situations for


566
00:13:42,646 --> 00:13:43,856
both time of days that might be


567
00:13:43,856 --> 00:13:45,116
favorite for your users, and


568
00:13:45,116 --> 00:13:45,596
location.


569
00:13:46,196 --> 00:13:47,256
For instance, if you have some


570
00:13:47,256 --> 00:13:48,516
content you want to show as a


571
00:13:48,516 --> 00:13:49,846
daily forecast when your user


572
00:13:49,846 --> 00:13:51,296
wakes up, you don't want to have


573
00:13:51,296 --> 00:13:52,176
to know if they wake up at 5


574
00:13:52,176 --> 00:13:52,896
A.M. or 10 A.M.


575
00:13:53,206 --> 00:13:53,956
You should just give us the


576
00:13:53,956 --> 00:13:54,816
morning situation.


577
00:13:55,736 --> 00:13:57,066
And, if you've got a workout you


578
00:13:57,066 --> 00:13:58,116
want to suggest that requires


579
00:13:58,116 --> 00:13:59,426
some gym equipment, you can pass


580
00:13:59,426 --> 00:14:00,426
us the gym situation.


581
00:14:01,006 --> 00:14:04,186
So, now that we have all of this


582
00:14:04,186 --> 00:14:05,736
API in our toolbox, let's build


583
00:14:05,736 --> 00:14:06,846
a couple of relevant shortcuts.


584
00:14:07,956 --> 00:14:09,336
In my examples we've got a


585
00:14:09,336 --> 00:14:10,546
hypothetical meal logging


586
00:14:10,546 --> 00:14:12,656
application that allows users to


587
00:14:12,656 --> 00:14:13,726
log their meals, and they can


588
00:14:13,726 --> 00:14:14,626
opt to do challenges.


589
00:14:15,016 --> 00:14:16,186
This week's challenge, our users


590
00:14:16,186 --> 00:14:17,676
opted into a veggie challenge.


591
00:14:18,346 --> 00:14:19,636
So, we're going to create a user


592
00:14:19,636 --> 00:14:22,336
activity for logging meals.


593
00:14:22,556 --> 00:14:23,846
It's an activity type is


594
00:14:23,846 --> 00:14:25,386
com.myapp.LogMeal.


595
00:14:25,926 --> 00:14:26,596
And, because we're going to be


596
00:14:26,596 --> 00:14:27,696
displaying this for the dinner


597
00:14:27,806 --> 00:14:28,936
meal, we're going to set the


598
00:14:28,936 --> 00:14:30,076
value for the meal key in our


599
00:14:30,076 --> 00:14:31,656
user info dictionary to Dinner.


600
00:14:32,986 --> 00:14:34,056
Once we have our userActivity


601
00:14:34,056 --> 00:14:35,266
set up, we can create a


602
00:14:35,266 --> 00:14:36,166
shortcut, and from that


603
00:14:36,166 --> 00:14:36,976
shortcut, we can create a


604
00:14:36,976 --> 00:14:37,676
relevantShortcut.


605
00:14:38,716 --> 00:14:39,536
Now, we want to really let our


606
00:14:39,536 --> 00:14:40,696
users know that this is showing


607
00:14:40,696 --> 00:14:41,736
up on the watch face, because


608
00:14:41,736 --> 00:14:42,916
they've opted into the veggie


609
00:14:42,916 --> 00:14:43,406
challenge.


610
00:14:43,896 --> 00:14:44,716
So, we're going to create a


611
00:14:44,716 --> 00:14:45,606
default card template to


612
00:14:45,606 --> 00:14:47,516
customize their UI with Log


613
00:14:47,516 --> 00:14:48,316
Dinner as our title.


614
00:14:48,796 --> 00:14:49,876
And, we're going to convey the


615
00:14:49,876 --> 00:14:51,436
veggie challenge in our subtitle


616
00:14:51,606 --> 00:14:52,396
and our custom image.


617
00:14:52,986 --> 00:14:55,466
Now, our users haven't always


618
00:14:55,466 --> 00:14:56,876
been necessarily logging their


619
00:14:56,876 --> 00:14:58,076
dinners, but they've opted into


620
00:14:58,076 --> 00:14:58,636
this challenge.


621
00:14:58,896 --> 00:15:00,136
So, we want to give the system a


622
00:15:00,136 --> 00:15:00,986
hint that this should be


623
00:15:00,986 --> 00:15:02,406
displayed in the evening by


624
00:15:02,406 --> 00:15:02,926
passing a


625
00:15:03,166 --> 00:15:04,566
dailyRoutineRelevanceProvider


626
00:15:04,566 --> 00:15:05,636
with the situation .evening.


627
00:15:06,366 --> 00:15:07,076
And now that our


628
00:15:07,076 --> 00:15:08,306
relevantShortcut is configured,


629
00:15:08,306 --> 00:15:09,246
we can pass it along to the


630
00:15:09,246 --> 00:15:10,466
default relevantShortcutStore.


631
00:15:10,536 --> 00:15:14,006
For our next example, in our


632
00:15:14,006 --> 00:15:15,466
application, users also have a


633
00:15:15,466 --> 00:15:16,346
bunch of favorites they can


634
00:15:16,346 --> 00:15:17,786
configure for snacks they eat


635
00:15:17,786 --> 00:15:19,196
often, or perhaps a breakfast


636
00:15:19,196 --> 00:15:19,886
they had every day.


637
00:15:19,936 --> 00:15:20,726
So, we've created a


638
00:15:20,726 --> 00:15:23,176
logFavoriteMealIntent.


639
00:15:24,136 --> 00:15:25,206
We want a couple of these to


640
00:15:25,206 --> 00:15:26,146
surface on the watch face to


641
00:15:26,146 --> 00:15:27,206
make it even easier for our


642
00:15:27,206 --> 00:15:28,226
users to log their favorite


643
00:15:28,226 --> 00:15:28,936
snacks and meals.


644
00:15:29,736 --> 00:15:30,896
So, we'll create an instance of


645
00:15:30,896 --> 00:15:32,806
our intent, and take one of our


646
00:15:32,806 --> 00:15:33,736
favorites, and set it on the


647
00:15:33,736 --> 00:15:34,466
favorites parameter.


648
00:15:34,566 --> 00:15:36,256
In this case, our user likes to


649
00:15:36,256 --> 00:15:36,746
eat cookies.


650
00:15:36,986 --> 00:15:39,496
We'll also set an image for that


651
00:15:39,496 --> 00:15:40,936
parameter, so that when it shows


652
00:15:40,936 --> 00:15:42,106
up on the watch face, they get a


653
00:15:42,106 --> 00:15:43,136
little bit more context about


654
00:15:43,136 --> 00:15:43,876
what they're about to log.


655
00:15:45,076 --> 00:15:46,146
From here, we can take our


656
00:15:46,146 --> 00:15:47,416
intent and create a shortcut,


657
00:15:47,416 --> 00:15:48,646
and from our shortcut, create a


658
00:15:48,646 --> 00:15:49,316
relevantShortcut.


659
00:15:50,536 --> 00:15:51,416
At this point, we're ready to


660
00:15:51,416 --> 00:15:52,636
pass along our relevantShortcut


661
00:15:52,636 --> 00:15:54,106
to the relevant shortcut store.


662
00:15:54,756 --> 00:15:55,656
We don't need a default card


663
00:15:55,656 --> 00:15:56,806
template, because the title


664
00:15:56,806 --> 00:15:58,236
strings and image, the image


665
00:15:58,236 --> 00:15:59,056
that we pass along to our


666
00:15:59,056 --> 00:16:00,086
intent, should be sufficient.


667
00:16:00,926 --> 00:16:01,816
We also don't really want to


668
00:16:01,816 --> 00:16:02,726
provide a relevanceProvider


669
00:16:02,726 --> 00:16:02,976
here.


670
00:16:03,436 --> 00:16:04,356
Because this is something


671
00:16:04,356 --> 00:16:05,426
habitual for our users.


672
00:16:05,666 --> 00:16:06,906
They log these often throughout


673
00:16:06,906 --> 00:16:07,806
the day, and we can take


674
00:16:07,806 --> 00:16:09,056
advantage of the Siri face's


675
00:16:09,056 --> 00:16:10,316
prediction engine to show it


676
00:16:10,316 --> 00:16:11,716
when it most matters to our


677
00:16:11,716 --> 00:16:12,196
users.


678
00:16:12,736 --> 00:16:14,966
And, once we're done creating


679
00:16:14,966 --> 00:16:16,126
our relevantShortcuts, we're not


680
00:16:16,126 --> 00:16:16,996
done here actually.


681
00:16:17,286 --> 00:16:18,356
We need to be able to handle


682
00:16:18,356 --> 00:16:18,846
them as well.


683
00:16:19,316 --> 00:16:21,316
And, new in watchOS 5 is a


684
00:16:21,316 --> 00:16:22,396
method on your


685
00:16:22,396 --> 00:16:23,896
WKExtensionDelegate called


686
00:16:23,896 --> 00:16:24,836
handle user shortcut.


687
00:16:26,246 --> 00:16:27,336
And, our first example, if the


688
00:16:27,336 --> 00:16:28,946
user taps on that Siri platter,


689
00:16:28,946 --> 00:16:29,766
our application will be


690
00:16:29,766 --> 00:16:31,396
launched, and we'll be handed a


691
00:16:31,396 --> 00:16:32,886
user activity to this method,


692
00:16:33,186 --> 00:16:34,436
whose activity type matches


693
00:16:34,526 --> 00:16:35,686
com.myapp.LogMeal.


694
00:16:36,556 --> 00:16:37,716
At this point, we want to make


695
00:16:37,716 --> 00:16:38,646
sure we go into the right part


696
00:16:38,646 --> 00:16:39,396
of our application.


697
00:16:39,496 --> 00:16:40,486
So, we'll jump up to the


698
00:16:40,486 --> 00:16:41,916
rootInterfaceController, and


699
00:16:41,916 --> 00:16:42,456
push on our


700
00:16:42,456 --> 00:16:43,786
logMealInterfaceController.


701
00:16:44,446 --> 00:16:45,376
We've got to be sure to pass


702
00:16:45,376 --> 00:16:46,636
along that context we put into


703
00:16:46,636 --> 00:16:48,076
our user info dictionary, so we


704
00:16:48,076 --> 00:16:48,976
know which meal we're about to


705
00:16:48,976 --> 00:16:49,476
be logging.


706
00:16:49,476 --> 00:16:52,956
For our second example, the


707
00:16:52,956 --> 00:16:54,316
common case will be that that


708
00:16:54,316 --> 00:16:55,716
background-capable intent will


709
00:16:55,716 --> 00:16:57,006
execute successfully in our


710
00:16:57,006 --> 00:16:57,796
intents extension.


711
00:16:58,346 --> 00:16:59,076
But, there are a couple


712
00:16:59,076 --> 00:17:00,506
instances where our application


713
00:17:00,506 --> 00:17:02,106
will get a callback directly.


714
00:17:02,656 --> 00:17:03,646
The first one being if there's


715
00:17:03,646 --> 00:17:04,856
an error during execution, and


716
00:17:04,856 --> 00:17:05,776
we say we need to handle this


717
00:17:05,776 --> 00:17:06,846
within our app.


718
00:17:07,116 --> 00:17:08,165
The other one, though, might


719
00:17:08,165 --> 00:17:09,096
happen if the user wants to


720
00:17:09,096 --> 00:17:09,856
tweak a couple of the


721
00:17:09,856 --> 00:17:10,415
parameters.


722
00:17:10,856 --> 00:17:11,836
For instance, they see that


723
00:17:11,836 --> 00:17:12,806
they're about to log a cookie,


724
00:17:13,076 --> 00:17:13,866
when they really know they just


725
00:17:13,866 --> 00:17:14,356
ate 5.


726
00:17:14,356 --> 00:17:16,195
So, we'll tap on the top module,


727
00:17:16,336 --> 00:17:17,086
we'll launch into your


728
00:17:17,086 --> 00:17:18,276
application, and you'll get a


729
00:17:18,276 --> 00:17:18,945
callback here.


730
00:17:19,396 --> 00:17:20,945
The userActivity you'll receive


731
00:17:21,415 --> 00:17:22,586
will have an activity type equal


732
00:17:22,586 --> 00:17:23,945
to the name of the class of


733
00:17:23,945 --> 00:17:24,846
intent you gave us.


734
00:17:25,386 --> 00:17:27,626
At this point, you can extract


735
00:17:27,626 --> 00:17:28,526
an interaction off of


736
00:17:28,526 --> 00:17:30,546
userActivity, and an intent off


737
00:17:30,546 --> 00:17:31,936
of that interaction, which will


738
00:17:31,936 --> 00:17:33,176
have all the parameters you set


739
00:17:33,176 --> 00:17:33,826
when you created your


740
00:17:33,826 --> 00:17:35,086
relevantShortcut.


741
00:17:35,836 --> 00:17:37,366
So, now we're ready to create


742
00:17:37,366 --> 00:17:38,506
relevant shortcuts whenever our


743
00:17:38,506 --> 00:17:39,596
application has runtime.


744
00:17:39,956 --> 00:17:40,966
But, it's very important to


745
00:17:40,966 --> 00:17:42,136
note, that just because your


746
00:17:42,136 --> 00:17:43,166
content is showing up on the


747
00:17:43,166 --> 00:17:44,456
Siri watch face, doesn't mean


748
00:17:44,456 --> 00:17:45,676
your application is actively


749
00:17:45,676 --> 00:17:45,966
running.


750
00:17:46,496 --> 00:17:48,006
So, to help you get more runtime


751
00:17:48,176 --> 00:17:49,256
to provide relative shortcuts,


752
00:17:49,516 --> 00:17:50,186
we've created the


753
00:17:50,186 --> 00:17:52,676
WKRelevantShortcutRefresh


754
00:17:52,676 --> 00:17:53,336
BackgroundTask.


755
00:17:54,556 --> 00:17:56,026
We'll be handing this out to


756
00:17:56,026 --> 00:17:57,516
applications that are providing


757
00:17:57,596 --> 00:17:58,916
awesome relevant shortcuts that


758
00:17:58,916 --> 00:17:59,896
our users are spending time


759
00:17:59,896 --> 00:18:02,116
looking at, tapping through, but


760
00:18:02,116 --> 00:18:02,956
not scrolling past.


761
00:18:04,286 --> 00:18:05,126
When you get one of these


762
00:18:05,126 --> 00:18:06,716
refresh background tasks, it's


763
00:18:06,716 --> 00:18:08,366
your opportunity to update the


764
00:18:08,366 --> 00:18:10,046
data that supplies your relevant


765
00:18:10,046 --> 00:18:11,596
shortcuts, and give us a fresh


766
00:18:11,596 --> 00:18:12,576
set of relevant shortcuts.


767
00:18:13,896 --> 00:18:15,976
And, on a related note, if your


768
00:18:15,976 --> 00:18:17,136
background-capable intent


769
00:18:17,136 --> 00:18:18,586
executes, it's inside of your


770
00:18:18,586 --> 00:18:19,376
intents extension.


771
00:18:19,846 --> 00:18:20,796
That means that if you update


772
00:18:20,796 --> 00:18:22,126
your data store, it's possible


773
00:18:22,126 --> 00:18:22,966
that your UI and your


774
00:18:23,046 --> 00:18:24,416
application has become stale.


775
00:18:25,526 --> 00:18:26,796
So, in watchOS 5, we've also


776
00:18:26,796 --> 00:18:28,416
created the


777
00:18:28,416 --> 00:18:30,056
WKIntentDidRunRefresh


778
00:18:30,086 --> 00:18:30,776
BackgroundTask.


779
00:18:31,126 --> 00:18:32,086
And, we'll hand that to you with


780
00:18:32,086 --> 00:18:33,606
some runtime when your intents


781
00:18:33,606 --> 00:18:35,396
extension completes a execution


782
00:18:35,396 --> 00:18:35,926
of a shortcut.


783
00:18:37,076 --> 00:18:38,326
That is your opportunity to make


784
00:18:38,326 --> 00:18:39,646
sure that your UI's up to date,


785
00:18:40,326 --> 00:18:41,526
perhaps request an updated


786
00:18:41,526 --> 00:18:43,806
snapshot, or reload, or extend


787
00:18:43,806 --> 00:18:44,866
your complication timeline.


788
00:18:45,236 --> 00:18:48,916
So, let's talk about how we can


789
00:18:48,916 --> 00:18:50,596
take advantage of these API's on


790
00:18:50,596 --> 00:18:50,926
iOS.


791
00:18:51,456 --> 00:18:52,746
And, the great news is, with the


792
00:18:52,746 --> 00:18:53,686
exception of those


793
00:18:53,686 --> 00:18:55,666
WKRefreshBackgroundTasks, we can


794
00:18:55,666 --> 00:18:57,646
use all of the same exact API's


795
00:18:57,876 --> 00:18:58,996
in our iOS application.


796
00:19:00,056 --> 00:19:01,086
The relevant shortcuts we


797
00:19:01,086 --> 00:19:02,656
provide in our iOS app will be


798
00:19:02,656 --> 00:19:03,716
periodically synced from the


799
00:19:03,716 --> 00:19:04,426
phone to the watch.


800
00:19:04,496 --> 00:19:05,896
And, merged in with local,


801
00:19:05,896 --> 00:19:06,766
relevant shortcuts for


802
00:19:06,766 --> 00:19:08,256
consideration to be displayed on


803
00:19:08,256 --> 00:19:08,866
the watch face.


804
00:19:09,916 --> 00:19:10,976
You have all of the same UI


805
00:19:10,976 --> 00:19:12,656
customization options available.


806
00:19:12,996 --> 00:19:14,286
The only difference is if your


807
00:19:14,286 --> 00:19:15,446
relevant shortcut will execute


808
00:19:15,446 --> 00:19:16,726
back on the phone, we'll show


809
00:19:16,726 --> 00:19:18,096
your iOS application's icon


810
00:19:18,096 --> 00:19:18,896
instead of your watchOS


811
00:19:18,896 --> 00:19:19,706
applications icon.


812
00:19:20,556 --> 00:19:23,146
And now that we can be showing


813
00:19:23,146 --> 00:19:24,146
relevant shortcuts that will


814
00:19:24,146 --> 00:19:25,026
execute on the phone or the


815
00:19:25,026 --> 00:19:26,276
watch, let's talk about where


816
00:19:26,276 --> 00:19:27,156
they will execute when the user


817
00:19:27,156 --> 00:19:28,316
taps on them.


818
00:19:29,596 --> 00:19:31,246
If a relevant shortcut can be


819
00:19:31,246 --> 00:19:32,406
handled by an application that's


820
00:19:32,406 --> 00:19:33,796
installed locally on your watch,


821
00:19:34,056 --> 00:19:35,046
regardless of where it came


822
00:19:35,046 --> 00:19:36,916
from, we're going to execute it


823
00:19:36,956 --> 00:19:38,166
in the watchOS application.


824
00:19:38,836 --> 00:19:40,116
That gives the user the best


825
00:19:40,116 --> 00:19:41,296
experience and the lowest


826
00:19:41,296 --> 00:19:41,726
latency.


827
00:19:43,056 --> 00:19:44,386
You can ensure that your watchOS


828
00:19:44,386 --> 00:19:45,956
application supports execution


829
00:19:45,956 --> 00:19:47,336
of a shortcut by making sure the


830
00:19:47,336 --> 00:19:48,986
user activity's activityType is


831
00:19:48,986 --> 00:19:50,516
in your info.plist,


832
00:19:50,516 --> 00:19:51,766
NSUserActivityTyped array.


833
00:19:52,616 --> 00:19:53,816
Or, if it's an intent, that your


834
00:19:53,816 --> 00:19:55,156
intent is listed in your intents


835
00:19:55,156 --> 00:19:55,656
extension.


836
00:19:56,226 --> 00:19:58,736
If instead there is no


837
00:19:58,736 --> 00:19:59,826
application installed that can


838
00:19:59,826 --> 00:20:01,956
handle your shortcut, except on


839
00:20:01,956 --> 00:20:03,316
iOS, we'll execute it back on


840
00:20:03,316 --> 00:20:04,366
the phone, even if your phone


841
00:20:04,366 --> 00:20:05,786
isn't near the user.


842
00:20:06,916 --> 00:20:08,556
Now, because we can be executing


843
00:20:08,556 --> 00:20:09,846
content back on the phone, we


844
00:20:09,846 --> 00:20:10,766
want to make sure that users


845
00:20:10,766 --> 00:20:12,116
don't tap on a platter, and then


846
00:20:12,116 --> 00:20:13,266
are immediately told to go find


847
00:20:13,266 --> 00:20:13,676
their phone.


848
00:20:13,676 --> 00:20:15,286
So, we have a couple of rules


849
00:20:15,286 --> 00:20:16,536
about the type of shortcuts that


850
00:20:16,536 --> 00:20:17,536
will execute back on the phone


851
00:20:17,536 --> 00:20:18,516
that we're willing to surface.


852
00:20:19,276 --> 00:20:21,126
Requirements are that they're


853
00:20:21,126 --> 00:20:21,756
intent-based.


854
00:20:22,386 --> 00:20:23,166
They handle background


855
00:20:23,166 --> 00:20:23,796
execution.


856
00:20:24,236 --> 00:20:25,316
And, they don't require access


857
00:20:25,316 --> 00:20:26,076
to protected data.


858
00:20:26,246 --> 00:20:27,266
And, that's the data that you


859
00:20:27,266 --> 00:20:28,826
keep encrypted when the phone is


860
00:20:28,826 --> 00:20:29,116
locked.


861
00:20:30,446 --> 00:20:31,496
The way you can ensure that your


862
00:20:31,496 --> 00:20:33,316
content meets these requirements


863
00:20:33,316 --> 00:20:34,256
is by taking a look at the


864
00:20:34,256 --> 00:20:35,276
parameter combination in your


865
00:20:35,276 --> 00:20:36,916
custom intent, and ensuring that


866
00:20:37,186 --> 00:20:38,126
background execution is


867
00:20:38,126 --> 00:20:38,576
supported.


868
00:20:39,056 --> 00:20:40,796
And, looking at your overall


869
00:20:40,876 --> 00:20:42,246
custom intent and seeing if you


870
00:20:42,246 --> 00:20:43,576
have any authentication


871
00:20:43,576 --> 00:20:44,466
restrictions you've applied.


872
00:20:45,406 --> 00:20:46,306
There are three options here,


873
00:20:46,306 --> 00:20:47,336
and we support the first two.


874
00:20:47,786 --> 00:20:48,636
The first one is that there are


875
00:20:48,636 --> 00:20:49,316
no restrictions.


876
00:20:49,936 --> 00:20:51,626
The second one says that you are


877
00:20:51,626 --> 00:20:52,786
restricted while the device is


878
00:20:52,786 --> 00:20:53,926
locked, which means that at


879
00:20:53,926 --> 00:20:54,886
least the watch has to be


880
00:20:54,886 --> 00:20:55,956
unlocked for us to execute.


881
00:20:56,306 --> 00:20:58,276
And the final one is Restricted


882
00:20:58,276 --> 00:20:59,826
While Locked, or Protected Data


883
00:20:59,826 --> 00:21:00,486
is Unavailable.


884
00:21:01,916 --> 00:21:03,086
Now that you have all this


885
00:21:03,086 --> 00:21:03,996
information you're ready to


886
00:21:03,996 --> 00:21:05,026
build some awesome shortcuts


887
00:21:05,026 --> 00:21:05,976
from both the watch and the


888
00:21:05,976 --> 00:21:06,276
phone.


889
00:21:06,616 --> 00:21:07,516
So, I'd like to hand things over


890
00:21:07,516 --> 00:21:08,766
to Josh to talk a little bit


891
00:21:08,766 --> 00:21:09,476
more about our prediction


892
00:21:09,476 --> 00:21:09,766
engine.


893
00:21:09,766 --> 00:21:09,966
Thank you.


894
00:21:10,516 --> 00:21:17,416
[ Applause ]


895
00:21:17,916 --> 00:21:18,406
>> Thank you, Paul.


896
00:21:19,686 --> 00:21:20,166
Good morning.


897
00:21:20,686 --> 00:21:22,176
My name is Josh, and I am an


898
00:21:22,176 --> 00:21:23,516
engineer on the watchOS team.


899
00:21:23,816 --> 00:21:25,236
And, we're really excited to see


900
00:21:25,236 --> 00:21:26,536
the kinds of relevant shortcuts


901
00:21:26,536 --> 00:21:28,156
that you can surface on the Siri


902
00:21:28,156 --> 00:21:28,766
watch face.


903
00:21:29,256 --> 00:21:31,186
So, Paul just walked you through


904
00:21:31,186 --> 00:21:32,616
some of the API's and different


905
00:21:32,616 --> 00:21:34,456
ways that you can provide your


906
00:21:34,456 --> 00:21:35,416
relevant shortcuts to the


907
00:21:35,416 --> 00:21:35,866
system.


908
00:21:36,576 --> 00:21:37,916
Now, I want to talk about how


909
00:21:37,916 --> 00:21:38,926
the system predicts your


910
00:21:38,926 --> 00:21:40,336
relevant shortcuts, and the


911
00:21:40,336 --> 00:21:42,166
things that you can do to ensure


912
00:21:42,166 --> 00:21:43,946
the system surfaces your content


913
00:21:44,056 --> 00:21:45,046
when it's most appropriate to


914
00:21:45,046 --> 00:21:45,426
the user.


915
00:21:48,096 --> 00:21:49,136
It's like Paul talked about


916
00:21:49,136 --> 00:21:50,946
earlier, content on the Siri


917
00:21:50,946 --> 00:21:52,116
watch face is ordered by


918
00:21:52,116 --> 00:21:53,316
relevance to the user.


919
00:21:53,936 --> 00:21:55,586
At a wrist raise, we want to be


920
00:21:55,586 --> 00:21:57,196
surfacing the content the user


921
00:21:57,196 --> 00:21:58,366
cares about most.


922
00:21:58,666 --> 00:21:59,506
Whether that be based on the


923
00:21:59,506 --> 00:22:01,726
current time, location, or other


924
00:22:01,726 --> 00:22:03,006
factors from across the system.


925
00:22:03,526 --> 00:22:06,646
And, to figure out what content


926
00:22:06,646 --> 00:22:07,676
the user cares about, we're


927
00:22:07,676 --> 00:22:09,276
looking at how they interact


928
00:22:09,566 --> 00:22:10,786
with the different platters on


929
00:22:10,786 --> 00:22:11,716
the Siri watch face.


930
00:22:12,176 --> 00:22:13,306
What things are they tapping on?


931
00:22:13,426 --> 00:22:14,196
What things are they spending a


932
00:22:14,196 --> 00:22:15,246
lot of time looking at?


933
00:22:15,476 --> 00:22:15,996
And, what things are they


934
00:22:15,996 --> 00:22:17,636
scrolling past to find other


935
00:22:17,636 --> 00:22:18,166
content?


936
00:22:18,696 --> 00:22:20,296
And, we use all this information


937
00:22:20,296 --> 00:22:22,326
to understand what are the


938
00:22:22,326 --> 00:22:23,436
different platters that the user


939
00:22:23,436 --> 00:22:24,736
wants to see right on a wrist


940
00:22:24,736 --> 00:22:25,066
raise.


941
00:22:26,016 --> 00:22:29,416
And so, because we're trying to


942
00:22:29,416 --> 00:22:30,866
surface, again, the content the


943
00:22:30,866 --> 00:22:32,726
user cares about most, you want


944
00:22:32,726 --> 00:22:33,246
to make sure that you're


945
00:22:33,246 --> 00:22:34,846
providing relevant, engaging


946
00:22:34,846 --> 00:22:36,246
content to be surfaced on the


947
00:22:36,246 --> 00:22:36,976
Siri watch face.


948
00:22:40,796 --> 00:22:42,026
So, let's talk a little bit more


949
00:22:42,026 --> 00:22:43,846
about how we actually put your


950
00:22:43,846 --> 00:22:44,896
relevant shortcuts on the Siri


951
00:22:44,896 --> 00:22:45,526
watch face.


952
00:22:45,846 --> 00:22:47,346
So, like Paul mentioned earlier,


953
00:22:47,406 --> 00:22:48,416
the first step is you need to


954
00:22:48,416 --> 00:22:49,596
provide your relevant shortcuts


955
00:22:49,596 --> 00:22:50,916
to the system, into the


956
00:22:50,916 --> 00:22:52,806
defaultRelevantShortcutsStore.


957
00:22:54,006 --> 00:22:54,986
Once you've provided your


958
00:22:54,986 --> 00:22:56,946
relevant shortcuts, we can run


959
00:22:56,946 --> 00:22:57,816
them through our machine


960
00:22:57,816 --> 00:22:58,846
learning model to figure out


961
00:22:58,926 --> 00:23:00,136
what is the best way to be


962
00:23:00,136 --> 00:23:01,556
surfacing your relevant


963
00:23:01,556 --> 00:23:02,466
shortcuts to the user.


964
00:23:03,076 --> 00:23:04,236
So, let's look at what we take


965
00:23:04,236 --> 00:23:05,336
into account inside of this


966
00:23:05,486 --> 00:23:05,866
model.


967
00:23:07,126 --> 00:23:08,546
So, the first thing that we look


968
00:23:08,546 --> 00:23:10,116
at is your relevance providers.


969
00:23:10,776 --> 00:23:12,496
This is your way to provide


970
00:23:12,496 --> 00:23:14,356
additional context to the system


971
00:23:14,626 --> 00:23:15,786
that we wouldn't otherwise have.


972
00:23:16,066 --> 00:23:17,506
This might be a concrete time,


973
00:23:17,766 --> 00:23:19,696
location, or other context.


974
00:23:21,286 --> 00:23:22,756
We also look at past behavior.


975
00:23:22,826 --> 00:23:24,416
So, how has the user interacted


976
00:23:24,416 --> 00:23:25,506
with this relevant shortcut


977
00:23:25,536 --> 00:23:25,936
before?


978
00:23:26,356 --> 00:23:27,176
Is it something they're spending


979
00:23:27,176 --> 00:23:28,496
a lot of time tapping on and


980
00:23:28,496 --> 00:23:29,626
looking at on the watch face?


981
00:23:29,936 --> 00:23:30,436
Or, something that they're


982
00:23:30,436 --> 00:23:31,956
scrolling past to find something


983
00:23:32,046 --> 00:23:32,666
more interesting?


984
00:23:34,506 --> 00:23:36,076
We also look at a number of


985
00:23:36,076 --> 00:23:37,166
different factors from across


986
00:23:37,196 --> 00:23:38,536
the system, such as, you know,


987
00:23:38,536 --> 00:23:39,916
the current time, current day of


988
00:23:39,916 --> 00:23:41,666
the week, current location,


989
00:23:41,666 --> 00:23:43,646
user's routine, among a number


990
00:23:43,646 --> 00:23:44,456
of other factors.


991
00:23:44,516 --> 00:23:46,126
And, take all this into account


992
00:23:46,366 --> 00:23:48,146
to try to better understand what


993
00:23:48,146 --> 00:23:49,746
is the context under which the


994
00:23:49,746 --> 00:23:51,096
user wants to interact with the


995
00:23:51,096 --> 00:23:52,116
particular shortcut.


996
00:23:52,626 --> 00:23:57,296
And, it's also worth noting that


997
00:23:57,296 --> 00:23:59,406
this model is secure and


998
00:23:59,406 --> 00:24:00,676
personalized to each user.


999
00:24:01,066 --> 00:24:02,526
All of our learning happens


1000
00:24:02,636 --> 00:24:05,496
on-device, and we're building a


1001
00:24:05,496 --> 00:24:07,306
model for each and every single


1002
00:24:07,306 --> 00:24:08,806
user of the Siri watch face.


1003
00:24:08,876 --> 00:24:10,126
The way that you interact with


1004
00:24:10,126 --> 00:24:11,226
the watch face may be different


1005
00:24:11,226 --> 00:24:12,116
from the way that I interact


1006
00:24:12,116 --> 00:24:12,646
with the watch.


1007
00:24:14,146 --> 00:24:15,546
And, once we have this model


1008
00:24:15,546 --> 00:24:17,436
trained we can then take your


1009
00:24:17,436 --> 00:24:19,326
relevant shortcuts, and again,


1010
00:24:19,406 --> 00:24:20,586
surface them on the Siri watch


1011
00:24:20,586 --> 00:24:21,796
face based on their relevance to


1012
00:24:21,796 --> 00:24:21,976
the user.


1013
00:24:26,416 --> 00:24:27,376
If you attended some of the


1014
00:24:27,376 --> 00:24:29,136
previous shortcut talks, you may


1015
00:24:29,136 --> 00:24:30,396
have heard about donations.


1016
00:24:31,126 --> 00:24:32,726
This is your way to indicate to


1017
00:24:32,726 --> 00:24:34,606
the system what the user's doing


1018
00:24:34,606 --> 00:24:35,266
within your app.


1019
00:24:36,846 --> 00:24:37,926
And, although they don't


1020
00:24:37,926 --> 00:24:39,186
actually surface within the UI


1021
00:24:39,186 --> 00:24:41,816
of the Siri watch face, we take


1022
00:24:41,816 --> 00:24:43,176
them into account when trying to


1023
00:24:43,176 --> 00:24:44,346
understand the user's past


1024
00:24:44,346 --> 00:24:44,886
behavior.


1025
00:24:47,416 --> 00:24:49,556
So, again, donations are your


1026
00:24:49,556 --> 00:24:51,406
way to indicate important tasks,


1027
00:24:51,746 --> 00:24:53,186
or other information about what


1028
00:24:53,186 --> 00:24:54,816
users are doing inside of your


1029
00:24:54,816 --> 00:24:56,416
applications, and providing that


1030
00:24:56,416 --> 00:24:56,936
to the system.


1031
00:24:58,546 --> 00:25:00,006
And, by giving this information


1032
00:25:00,006 --> 00:25:01,996
to the system, we can understand


1033
00:25:01,996 --> 00:25:03,276
and learn patterns in the user's


1034
00:25:03,276 --> 00:25:03,836
behavior.


1035
00:25:03,836 --> 00:25:06,646
So, if the user, for example, is


1036
00:25:06,646 --> 00:25:07,766
looking or performing the same


1037
00:25:07,766 --> 00:25:08,996
action at the same time every


1038
00:25:08,996 --> 00:25:10,966
single day, or around similar


1039
00:25:10,966 --> 00:25:12,746
locations, the system can pick


1040
00:25:12,746 --> 00:25:14,186
up on these patterns, and again,


1041
00:25:14,186 --> 00:25:15,526
surface the relevant shortcuts


1042
00:25:15,556 --> 00:25:16,956
when they're appropriate to your


1043
00:25:16,956 --> 00:25:17,456
users.


1044
00:25:19,236 --> 00:25:21,886
So, if you're using


1045
00:25:21,886 --> 00:25:23,426
NSUserActivities to represent


1046
00:25:23,566 --> 00:25:25,286
your donations, there's a few


1047
00:25:25,286 --> 00:25:26,416
things you need to do to be able


1048
00:25:26,536 --> 00:25:27,576
to provide those donations to


1049
00:25:27,576 --> 00:25:28,066
the system.


1050
00:25:28,706 --> 00:25:30,056
The first is you need to set


1051
00:25:30,106 --> 00:25:31,296
both these properties to "true"


1052
00:25:31,296 --> 00:25:32,856
in your NSUserActivity, the


1053
00:25:32,856 --> 00:25:34,096
eligibleForPrediction and


1054
00:25:34,096 --> 00:25:35,066
eligibleForSearch.


1055
00:25:37,056 --> 00:25:38,156
Next, you need to make sure that


1056
00:25:38,156 --> 00:25:39,436
your user activity is supported


1057
00:25:39,436 --> 00:25:40,936
by an application, by indicating


1058
00:25:40,936 --> 00:25:42,206
that within your info.plist.


1059
00:25:43,936 --> 00:25:44,926
And, finally you want to make


1060
00:25:44,926 --> 00:25:46,056
sure that you're donating these


1061
00:25:46,056 --> 00:25:47,196
user activities whenever this


1062
00:25:47,236 --> 00:25:48,636
piece of content is visible to


1063
00:25:48,636 --> 00:25:50,096
the user, so the system can


1064
00:25:50,096 --> 00:25:50,966
start to pick up on the


1065
00:25:50,966 --> 00:25:51,566
patterns.


1066
00:25:51,966 --> 00:25:54,696
And so, to provide that


1067
00:25:54,696 --> 00:25:56,166
donation, there's a method on


1068
00:25:56,216 --> 00:25:57,756
NSUserActivity, becomeCurrent,


1069
00:25:58,006 --> 00:25:59,126
that allows you to donate to the


1070
00:25:59,126 --> 00:25:59,546
system.


1071
00:26:01,216 --> 00:26:03,166
New in watchOS 5, though, there


1072
00:26:03,166 --> 00:26:03,906
is this method


1073
00:26:04,246 --> 00:26:05,816
updateUserActivity on


1074
00:26:05,816 --> 00:26:07,706
WKInterfaceController, where you


1075
00:26:07,706 --> 00:26:09,596
can attach your user activity to


1076
00:26:09,596 --> 00:26:11,226
an interfaceController, and


1077
00:26:11,226 --> 00:26:11,776
whenever this


1078
00:26:11,776 --> 00:26:13,036
interfaceController's visible to


1079
00:26:13,116 --> 00:26:14,336
the user, the system will


1080
00:26:14,336 --> 00:26:15,836
automatically be donating the


1081
00:26:15,836 --> 00:26:17,166
user activities on your behalf.


1082
00:26:17,916 --> 00:26:19,416
This is similar to the API's


1083
00:26:19,416 --> 00:26:21,116
that we have over on iOS, on


1084
00:26:21,116 --> 00:26:22,036
UIViewController, and


1085
00:26:22,036 --> 00:26:23,536
UIResponder, where you can, kind


1086
00:26:23,536 --> 00:26:26,116
of, attach an NSUserActivity to


1087
00:26:26,116 --> 00:26:26,796
a piece of your UI.


1088
00:26:28,066 --> 00:26:29,166
And so now, this is the


1089
00:26:29,166 --> 00:26:30,846
recommended way to be providing


1090
00:26:31,026 --> 00:26:32,286
NSUserActivity donations on


1091
00:26:32,286 --> 00:26:32,966
watchOS.


1092
00:26:34,416 --> 00:26:37,436
If your shortcuts are backed by


1093
00:26:37,436 --> 00:26:39,786
an intent, you can provide those


1094
00:26:39,886 --> 00:26:41,726
intent donations by using the


1095
00:26:41,826 --> 00:26:42,786
INInteraction API.


1096
00:26:43,186 --> 00:26:45,096
So, if you attended any of the


1097
00:26:45,096 --> 00:26:46,166
previous shortcut talks, this


1098
00:26:46,166 --> 00:26:47,286
probably looks familiar to you.


1099
00:26:47,286 --> 00:26:49,696
But, to provide this donation,


1100
00:26:49,696 --> 00:26:50,786
first you create your intent,


1101
00:26:51,196 --> 00:26:52,656
and adjust any parameters as


1102
00:26:52,656 --> 00:26:53,576
they're necessary for what the


1103
00:26:53,576 --> 00:26:54,636
user just did within your app.


1104
00:26:55,506 --> 00:26:56,596
Next, you create your


1105
00:26:56,596 --> 00:26:58,476
INInteraction with intent, and


1106
00:26:58,476 --> 00:27:00,276
call the donate method when


1107
00:27:00,276 --> 00:27:01,456
users perform this particular


1108
00:27:01,456 --> 00:27:01,916
interaction.


1109
00:27:02,496 --> 00:27:05,556
The other thing to look out for,


1110
00:27:05,886 --> 00:27:07,526
is this primary shortcut type


1111
00:27:07,526 --> 00:27:09,466
for when we're making watchOS


1112
00:27:09,466 --> 00:27:09,936
predictions.


1113
00:27:10,036 --> 00:27:11,906
And so, let's take a look at


1114
00:27:12,616 --> 00:27:12,716
this.


1115
00:27:13,396 --> 00:27:15,216
Inside of the Xcode intents


1116
00:27:15,216 --> 00:27:16,466
editor, you'll notice that


1117
00:27:16,466 --> 00:27:18,326
there's a field to select the


1118
00:27:18,326 --> 00:27:19,446
primary shortcut type.


1119
00:27:20,276 --> 00:27:21,666
So, this allows you to indicate


1120
00:27:21,666 --> 00:27:22,676
to the system, like, kind of,


1121
00:27:22,676 --> 00:27:24,296
the most critical use cases for


1122
00:27:24,296 --> 00:27:24,646
your app.


1123
00:27:25,106 --> 00:27:26,616
And so, let's talk more about


1124
00:27:26,616 --> 00:27:29,366
what that means.


1125
00:27:30,456 --> 00:27:31,786
So, by indicating the primary


1126
00:27:31,786 --> 00:27:33,086
shortcut type, you're, kind of,


1127
00:27:33,086 --> 00:27:34,696
telling the system what are the


1128
00:27:34,696 --> 00:27:36,206
use cases that you think your


1129
00:27:36,206 --> 00:27:37,426
users care about most.


1130
00:27:37,426 --> 00:27:38,906
And, this helps us expedite our


1131
00:27:38,906 --> 00:27:39,766
learning process.


1132
00:27:41,366 --> 00:27:42,616
You can indicate one of these


1133
00:27:42,686 --> 00:27:43,866
per intent that you've defined.


1134
00:27:45,616 --> 00:27:46,986
And, for the best performance,


1135
00:27:47,246 --> 00:27:48,846
the parameter combination, the


1136
00:27:48,846 --> 00:27:50,436
selection, have a subset of the


1137
00:27:50,436 --> 00:27:51,526
parameters that you're providing


1138
00:27:51,526 --> 00:27:52,536
in your relevant shortcuts.


1139
00:27:52,776 --> 00:27:53,786
And, we'll walk through a couple


1140
00:27:53,786 --> 00:27:54,796
of examples to try to better


1141
00:27:54,796 --> 00:27:58,066
understand what that means.


1142
00:27:58,476 --> 00:27:59,746
But, by giving this information


1143
00:27:59,746 --> 00:28:01,436
to the system, we can much more


1144
00:28:01,436 --> 00:28:03,296
quickly pick up on patterns in


1145
00:28:03,296 --> 00:28:04,866
the user behavior, and much more


1146
00:28:04,866 --> 00:28:06,176
quickly understand what are the


1147
00:28:06,176 --> 00:28:07,336
relevant shortcuts that the user


1148
00:28:07,336 --> 00:28:08,236
cares about most.


1149
00:28:10,476 --> 00:28:11,836
So, first up, we have this


1150
00:28:11,836 --> 00:28:12,446
Messaging app.


1151
00:28:12,736 --> 00:28:13,766
And so, this is something that


1152
00:28:13,766 --> 00:28:14,806
Paul and I have been using for a


1153
00:28:14,806 --> 00:28:16,046
while now, so every morning


1154
00:28:16,046 --> 00:28:17,086
we're sending messages back and


1155
00:28:17,086 --> 00:28:17,386
forth.


1156
00:28:17,776 --> 00:28:19,086
Sometimes it's in preparation


1157
00:28:19,086 --> 00:28:20,666
for this talk, and other times


1158
00:28:20,666 --> 00:28:22,316
it's about what cookies we want


1159
00:28:23,176 --> 00:28:24,686
to get at lunch.


1160
00:28:24,846 --> 00:28:26,396
And so, this app has gone ahead


1161
00:28:26,396 --> 00:28:28,006
and adopted Siri shortcuts.


1162
00:28:28,006 --> 00:28:29,096
And, they defined a couple


1163
00:28:29,096 --> 00:28:30,316
different parameters that their


1164
00:28:30,316 --> 00:28:30,996
app supports.


1165
00:28:31,256 --> 00:28:32,056
So, the first one is the


1166
00:28:32,056 --> 00:28:32,566
recipient.


1167
00:28:32,886 --> 00:28:34,106
So, who am I sending a message


1168
00:28:34,106 --> 00:28:34,326
to?


1169
00:28:34,376 --> 00:28:36,246
And, the second one is the


1170
00:28:36,246 --> 00:28:36,796
message.


1171
00:28:37,016 --> 00:28:38,126
So, what is the content of the


1172
00:28:38,126 --> 00:28:39,156
message I'm trying to send?


1173
00:28:40,416 --> 00:28:41,946
So, like I mentioned before,


1174
00:28:41,946 --> 00:28:43,206
right, Paul and I are using this


1175
00:28:43,206 --> 00:28:45,026
app every single morning, but


1176
00:28:45,026 --> 00:28:46,266
the actual content of the


1177
00:28:46,266 --> 00:28:47,396
messages that we're sending


1178
00:28:47,476 --> 00:28:48,406
varies from day to day.


1179
00:28:49,366 --> 00:28:50,886
So, because of this, this may


1180
00:28:50,886 --> 00:28:52,166
not make a good candidate for


1181
00:28:52,166 --> 00:28:53,326
the primary shortcut type.


1182
00:28:53,326 --> 00:28:54,836
It's going to take a lot longer


1183
00:28:54,926 --> 00:28:56,126
before the system can, kind of,


1184
00:28:56,126 --> 00:28:57,806
understand what are the


1185
00:28:57,806 --> 00:28:59,026
shortcuts I'm trying to perform.


1186
00:28:59,516 --> 00:29:02,356
Whereas, Paul and I are having


1187
00:29:02,356 --> 00:29:03,706
very consistent conversations,


1188
00:29:03,706 --> 00:29:05,056
so the system can really quickly


1189
00:29:05,056 --> 00:29:06,296
pick up on this pattern, that


1190
00:29:06,296 --> 00:29:07,206
every morning, I'm sending


1191
00:29:07,206 --> 00:29:10,486
messages to Paul.


1192
00:29:10,896 --> 00:29:12,176
Another little more interesting


1193
00:29:12,176 --> 00:29:13,626
example, is this app that I use


1194
00:29:13,626 --> 00:29:14,736
to order my morning coffee.


1195
00:29:15,846 --> 00:29:17,166
And again, this app has gone and


1196
00:29:17,166 --> 00:29:18,356
adopted Siri shortcuts.


1197
00:29:18,746 --> 00:29:20,176
So, they support a couple


1198
00:29:20,176 --> 00:29:21,116
different parameters.


1199
00:29:21,346 --> 00:29:22,656
The first one is the type of


1200
00:29:22,656 --> 00:29:23,546
coffee I want to buy.


1201
00:29:24,026 --> 00:29:25,606
The next one is the condiments,


1202
00:29:25,606 --> 00:29:26,786
so do I want cream or sugar?


1203
00:29:27,556 --> 00:29:29,146
And, finally, the location that


1204
00:29:29,146 --> 00:29:30,106
I want to pick my coffee up


1205
00:29:30,106 --> 00:29:30,376
from.


1206
00:29:31,986 --> 00:29:33,546
So, every morning I use this app


1207
00:29:33,546 --> 00:29:34,936
and go place an order for my


1208
00:29:34,936 --> 00:29:35,606
morning coffee.


1209
00:29:36,126 --> 00:29:37,076
But, depending on where I have a


1210
00:29:37,076 --> 00:29:38,426
meeting, the location that I


1211
00:29:38,426 --> 00:29:39,676
want to pick my coffee up from


1212
00:29:39,676 --> 00:29:40,656
will change from day to day.


1213
00:29:41,046 --> 00:29:42,206
Maybe I'm going to Infinite


1214
00:29:42,206 --> 00:29:43,726
Loop, or Apple Park, or up to


1215
00:29:43,726 --> 00:29:45,556
San Francisco, and I want to


1216
00:29:45,556 --> 00:29:46,616
pick up my coffee at, you know,


1217
00:29:46,616 --> 00:29:47,416
the closest store.


1218
00:29:48,236 --> 00:29:50,496
So, again, because there's a lot


1219
00:29:50,496 --> 00:29:52,056
of variability in the location,


1220
00:29:52,496 --> 00:29:53,436
this may not make a good


1221
00:29:53,436 --> 00:29:54,276
candidate for the primary


1222
00:29:54,276 --> 00:29:54,906
shortcut type.


1223
00:29:54,906 --> 00:29:56,366
It's going to take a lot longer


1224
00:29:56,366 --> 00:29:57,276
for the system to, kind of,


1225
00:29:57,276 --> 00:29:58,776
understand the patterns in my


1226
00:29:58,776 --> 00:29:59,296
behavior.


1227
00:30:00,066 --> 00:30:02,146
Whereas, the actual order that I


1228
00:30:02,146 --> 00:30:03,506
place is the same thing every


1229
00:30:03,506 --> 00:30:04,056
single time.


1230
00:30:04,156 --> 00:30:05,316
I always order a latte with the


1231
00:30:05,316 --> 00:30:06,266
same amount of cream and same


1232
00:30:06,266 --> 00:30:06,876
amount of sugar.


1233
00:30:07,266 --> 00:30:08,306
So, this does make a really


1234
00:30:08,306 --> 00:30:09,516
great candidate for the primary


1235
00:30:09,516 --> 00:30:12,616
shortcut type.


1236
00:30:13,056 --> 00:30:14,586
And, coffee-- it's on its own,


1237
00:30:14,666 --> 00:30:16,206
might be too generic, right?


1238
00:30:16,206 --> 00:30:18,166
The coffee plus the condiment


1239
00:30:18,466 --> 00:30:20,046
might make a better primary


1240
00:30:20,046 --> 00:30:20,646
shortcut type.


1241
00:30:22,046 --> 00:30:23,956
And so, that is how you can


1242
00:30:23,956 --> 00:30:25,866
provide information from within


1243
00:30:25,866 --> 00:30:27,316
your apps about what users are


1244
00:30:27,316 --> 00:30:27,666
doing.


1245
00:30:28,006 --> 00:30:29,566
So, now let's talk about how we


1246
00:30:29,566 --> 00:30:31,026
predict your relevant shortcuts.


1247
00:30:32,046 --> 00:30:33,746
And, to talk about this, we have


1248
00:30:33,746 --> 00:30:34,656
a couple different apps that


1249
00:30:34,656 --> 00:30:36,806
we're going to be looking at.


1250
00:30:36,996 --> 00:30:38,276
The first one is this recipes


1251
00:30:38,276 --> 00:30:38,586
app.


1252
00:30:38,586 --> 00:30:40,106
And so, this is an app that I


1253
00:30:40,106 --> 00:30:41,396
use every single day that


1254
00:30:41,396 --> 00:30:42,706
provides me suggestions for


1255
00:30:42,706 --> 00:30:43,606
recipes that I might want to


1256
00:30:43,606 --> 00:30:43,906
try.


1257
00:30:46,076 --> 00:30:47,226
Next, we have this fitness


1258
00:30:47,226 --> 00:30:48,726
trainer app that provides me a


1259
00:30:48,726 --> 00:30:49,936
nice reminder to go out and do


1260
00:30:49,936 --> 00:30:51,446
my evening run.


1261
00:30:52,186 --> 00:30:54,396
And finally, there's this travel


1262
00:30:54,396 --> 00:30:56,396
guide app that tries to surface


1263
00:30:56,396 --> 00:30:57,486
interesting locations of


1264
00:30:57,486 --> 00:30:58,586
interest while I'm out and about


1265
00:30:58,586 --> 00:30:59,466
so I can make sure to go check


1266
00:30:59,506 --> 00:30:59,796
them out.


1267
00:31:00,886 --> 00:31:02,416
And so, each of these three


1268
00:31:02,416 --> 00:31:04,286
different apps falls into one of


1269
00:31:04,286 --> 00:31:05,566
these, kind of, three different


1270
00:31:05,566 --> 00:31:06,456
categories that we have.


1271
00:31:07,116 --> 00:31:08,526
The first one is what we call


1272
00:31:08,526 --> 00:31:09,056
"Downtime."


1273
00:31:09,666 --> 00:31:10,556
And so, this is something that


1274
00:31:10,556 --> 00:31:11,886
doesn't have a concrete time or


1275
00:31:11,886 --> 00:31:13,996
location associated with it.


1276
00:31:14,206 --> 00:31:15,786
When I want to interact with


1277
00:31:15,786 --> 00:31:17,266
this recipes app may vary from


1278
00:31:17,266 --> 00:31:18,266
when you want to interact with


1279
00:31:18,266 --> 00:31:19,036
this particular app.


1280
00:31:19,876 --> 00:31:21,026
Whereas, this fitness trainer


1281
00:31:21,026 --> 00:31:22,756
app has a very concrete time


1282
00:31:22,756 --> 00:31:23,676
associated with it, right?


1283
00:31:24,036 --> 00:31:25,716
I've gone and configured that 8


1284
00:31:25,756 --> 00:31:27,036
P.M. is the perfect time to be


1285
00:31:27,036 --> 00:31:28,806
surfacing this reminder to me.


1286
00:31:29,756 --> 00:31:31,016
And, by giving this information


1287
00:31:31,016 --> 00:31:33,186
to the system, we can much more


1288
00:31:33,186 --> 00:31:34,936
accurately rank this particular


1289
00:31:34,936 --> 00:31:35,996
relevant shortcut against


1290
00:31:35,996 --> 00:31:36,986
everything else that we have to


1291
00:31:36,986 --> 00:31:37,436
consider.


1292
00:31:39,246 --> 00:31:40,706
Similarly, this travel guide app


1293
00:31:40,816 --> 00:31:42,616
knows where they want to be


1294
00:31:42,616 --> 00:31:44,176
surfacing their particular


1295
00:31:44,176 --> 00:31:45,066
relevant shortcuts, right?


1296
00:31:45,066 --> 00:31:46,456
They know all the locations of


1297
00:31:46,456 --> 00:31:47,566
interest, in this case,


1298
00:31:47,566 --> 00:31:48,296
Golden Gate Park.


1299
00:31:48,916 --> 00:31:50,126
And again, by passing that


1300
00:31:50,126 --> 00:31:51,746
information to the system, we


1301
00:31:51,746 --> 00:31:54,026
can much more accurately predict


1302
00:31:54,096 --> 00:31:55,336
the relevance of this particular


1303
00:31:55,336 --> 00:31:55,776
shortcut.


1304
00:31:58,576 --> 00:31:59,736
And, to provide this additional


1305
00:31:59,736 --> 00:32:01,016
context to the system, whether


1306
00:32:01,016 --> 00:32:02,286
that be a concrete time,


1307
00:32:02,286 --> 00:32:03,796
location, or other information,


1308
00:32:04,516 --> 00:32:06,316
you can provide that through the


1309
00:32:06,316 --> 00:32:07,346
relevanceProvider API.


1310
00:32:07,346 --> 00:32:08,926
And so, this allows you to


1311
00:32:08,926 --> 00:32:10,736
indicate hints to the system at


1312
00:32:10,736 --> 00:32:12,086
when your content is most


1313
00:32:12,086 --> 00:32:13,226
important to your users.


1314
00:32:15,896 --> 00:32:17,156
It also allows you to surface


1315
00:32:17,156 --> 00:32:18,586
new content that users may not


1316
00:32:18,586 --> 00:32:19,296
have seen before.


1317
00:32:20,166 --> 00:32:21,306
Since you're providing this


1318
00:32:21,306 --> 00:32:22,646
additional hints to the system,


1319
00:32:23,466 --> 00:32:24,556
we don't need to have seen as


1320
00:32:24,556 --> 00:32:26,166
much of the user's past behavior


1321
00:32:26,166 --> 00:32:27,616
and consistency before the


1322
00:32:27,616 --> 00:32:28,986
system becomes confident that


1323
00:32:28,986 --> 00:32:30,216
this is something the user cares


1324
00:32:30,216 --> 00:32:30,466
about.


1325
00:32:33,056 --> 00:32:34,826
But, it's also important to keep


1326
00:32:34,826 --> 00:32:36,816
in mind that user engagement is


1327
00:32:36,816 --> 00:32:38,496
taken into account at every step


1328
00:32:38,496 --> 00:32:39,256
of the process.


1329
00:32:39,646 --> 00:32:40,626
If you provide relevance


1330
00:32:40,626 --> 00:32:42,026
providers or not, we want to


1331
00:32:42,026 --> 00:32:43,036
make sure that the content that


1332
00:32:43,036 --> 00:32:44,416
we're surfacing is stuff that


1333
00:32:44,416 --> 00:32:44,976
the user cares about.


1334
00:32:49,156 --> 00:32:51,266
So, let's take another look at


1335
00:32:51,266 --> 00:32:52,016
this recipes app.


1336
00:32:52,416 --> 00:32:53,376
So, like what we talked about


1337
00:32:53,376 --> 00:32:54,926
earlier, there's not really a


1338
00:32:54,926 --> 00:32:56,626
concrete time or location


1339
00:32:56,626 --> 00:32:58,536
associated with it, right?


1340
00:32:58,536 --> 00:32:59,676
The time that I want to interact


1341
00:32:59,676 --> 00:33:01,346
with this app may be for cooking


1342
00:33:01,346 --> 00:33:02,446
dinner, whereas for you it might


1343
00:33:02,446 --> 00:33:03,326
be for cooking lunch.


1344
00:33:04,876 --> 00:33:06,336
And so, in this case, we may


1345
00:33:06,556 --> 00:33:08,526
actually indicate an empty set


1346
00:33:08,526 --> 00:33:09,566
of relevanceProviders.


1347
00:33:12,146 --> 00:33:13,496
And, in this case, the system


1348
00:33:13,496 --> 00:33:15,166
will determine the relevance of


1349
00:33:15,166 --> 00:33:17,016
this particular shortcut based


1350
00:33:17,016 --> 00:33:18,216
on how the user's interacted


1351
00:33:18,216 --> 00:33:19,046
with it before.


1352
00:33:19,346 --> 00:33:20,736
So, for me, I always use this


1353
00:33:20,736 --> 00:33:22,096
around 7 P.M. because that's


1354
00:33:22,096 --> 00:33:23,436
when I go cook dinner, so that's


1355
00:33:23,436 --> 00:33:24,496
when the system will start to


1356
00:33:24,756 --> 00:33:26,356
surface this particular relevant


1357
00:33:26,906 --> 00:33:27,126
shortcut.


1358
00:33:29,046 --> 00:33:30,086
If we take a look, however, at


1359
00:33:30,086 --> 00:33:31,446
this fitness trainer app, which


1360
00:33:31,746 --> 00:33:33,006
does have a concrete time


1361
00:33:33,006 --> 00:33:34,626
associated with it, you can


1362
00:33:34,626 --> 00:33:36,156
provide that by creating a


1363
00:33:36,156 --> 00:33:37,846
dateRelevanceProvider, and in


1364
00:33:37,846 --> 00:33:39,406
this case providing the 8 P.M.


1365
00:33:39,406 --> 00:33:39,926
start time.


1366
00:33:42,606 --> 00:33:43,906
And, by giving this information


1367
00:33:43,906 --> 00:33:45,846
to the system, we will surface


1368
00:33:45,846 --> 00:33:47,496
this content around a specific


1369
00:33:47,496 --> 00:33:48,146
time of day.


1370
00:33:49,596 --> 00:33:50,776
And, as you move closer and


1371
00:33:50,776 --> 00:33:52,256
closer and closer to 8 P.M.,


1372
00:33:52,346 --> 00:33:53,596
this content becomes more and


1373
00:33:53,596 --> 00:33:54,656
more relevant to the user.


1374
00:33:55,006 --> 00:33:56,506
So, let's look at what-- that.


1375
00:33:57,726 --> 00:34:00,116
So, here's a couple cards that I


1376
00:34:00,336 --> 00:34:01,516
might have on my Siri watch


1377
00:34:01,516 --> 00:34:01,786
face.


1378
00:34:01,856 --> 00:34:03,316
The first is a reminder from


1379
00:34:03,316 --> 00:34:06,096
Calendar for a prep meeting for


1380
00:34:06,656 --> 00:34:06,946
this talk.


1381
00:34:06,946 --> 00:34:08,206
Next, is an app that I use that


1382
00:34:08,206 --> 00:34:10,126
gives me interesting tidbits of


1383
00:34:10,126 --> 00:34:10,775
space news.


1384
00:34:11,786 --> 00:34:13,065
And finally, we have this


1385
00:34:13,065 --> 00:34:14,076
fitness trainer app, so let's


1386
00:34:14,076 --> 00:34:15,330
focus in on that.


1387
00:34:20,036 --> 00:34:21,656
So, I just woke up, I'm getting


1388
00:34:21,656 --> 00:34:22,616
ready for my day.


1389
00:34:22,616 --> 00:34:24,016
You know, it's, kind of, 8 A.M.


1390
00:34:24,536 --> 00:34:25,815
And so, you can see that this


1391
00:34:25,815 --> 00:34:26,946
fitness trainer app is actually


1392
00:34:26,946 --> 00:34:28,206
already starting to surface on


1393
00:34:28,206 --> 00:34:29,216
the Siri watch face.


1394
00:34:29,686 --> 00:34:30,896
We want to make sure that users


1395
00:34:30,896 --> 00:34:31,916
are, kind of, aware of all the


1396
00:34:31,916 --> 00:34:33,085
things they have going on during


1397
00:34:33,085 --> 00:34:34,746
the course of the day, but it's


1398
00:34:34,746 --> 00:34:36,396
kind of placed much lower on the


1399
00:34:36,396 --> 00:34:36,726
face.


1400
00:34:36,726 --> 00:34:37,815
It's not the most pressing thing


1401
00:34:37,815 --> 00:34:38,686
to the user right now.


1402
00:34:39,795 --> 00:34:41,096
But, as we start moving


1403
00:34:41,096 --> 00:34:42,896
throughout the day, right, that


1404
00:34:42,896 --> 00:34:44,166
calendar event that I had is no


1405
00:34:44,166 --> 00:34:45,146
longer relevant to me.


1406
00:34:45,516 --> 00:34:46,505
And so, this fitness trainer


1407
00:34:46,505 --> 00:34:47,696
suggestion will start to bubble


1408
00:34:47,696 --> 00:34:48,456
up the face, right?


1409
00:34:48,706 --> 00:34:49,876
We're getting closer and closer


1410
00:34:49,876 --> 00:34:51,246
to 8 P.M. This content is


1411
00:34:51,246 --> 00:34:53,226
becoming more important to me.


1412
00:34:54,246 --> 00:34:55,556
And, once we finally reach 8


1413
00:34:55,556 --> 00:34:56,985
P.M., right, this is the most


1414
00:34:56,985 --> 00:34:57,996
important thing to me right now.


1415
00:34:58,176 --> 00:34:59,186
Want to make sure I don't forget


1416
00:34:59,186 --> 00:35:00,026
to go for my run.


1417
00:35:00,026 --> 00:35:02,136
So, it'd be surfaced up at the


1418
00:35:02,136 --> 00:35:05,926
top of the Siri watch face.


1419
00:35:06,056 --> 00:35:07,026
Now, let's take a look at the


1420
00:35:07,026 --> 00:35:08,436
travel guide app, which again is


1421
00:35:08,436 --> 00:35:10,236
trying to surface content around


1422
00:35:10,306 --> 00:35:11,396
interesting locations of


1423
00:35:11,396 --> 00:35:12,316
interest the user.


1424
00:35:14,706 --> 00:35:15,896
And, as you may have guessed,


1425
00:35:15,896 --> 00:35:17,096
you can provide this information


1426
00:35:17,096 --> 00:35:18,086
to the system using a


1427
00:35:18,086 --> 00:35:19,466
locationRelevanceProvider.


1428
00:35:19,796 --> 00:35:21,646
In this case, near Golden Gate


1429
00:35:21,696 --> 00:35:22,006
Park.


1430
00:35:24,176 --> 00:35:26,006
And, by providing this


1431
00:35:26,006 --> 00:35:27,616
information to the system, we


1432
00:35:27,616 --> 00:35:29,226
will automatically be surfacing


1433
00:35:29,226 --> 00:35:30,746
this content when the user


1434
00:35:30,936 --> 00:35:31,896
starts getting close to Golden


1435
00:35:31,896 --> 00:35:32,366
Gate Park.


1436
00:35:33,376 --> 00:35:34,376
And, again, as the user gets


1437
00:35:34,376 --> 00:35:35,606
closer and closer and closer to


1438
00:35:35,606 --> 00:35:37,046
Golden Gate Park, this content


1439
00:35:37,046 --> 00:35:38,216
becomes more relevant to them.


1440
00:35:40,276 --> 00:35:42,216
So, if I just arrive up in San


1441
00:35:42,216 --> 00:35:43,606
Francisco, you can see that


1442
00:35:43,606 --> 00:35:44,516
we're already starting to


1443
00:35:44,516 --> 00:35:45,986
surface this suggestion to go


1444
00:35:45,986 --> 00:35:47,006
check out Golden Gate Park.


1445
00:35:47,606 --> 00:35:48,726
It's displayed lower on the


1446
00:35:48,726 --> 00:35:49,796
face, because it's not the most


1447
00:35:49,796 --> 00:35:50,966
pressing thing to me right now.


1448
00:35:50,966 --> 00:35:52,586
But, we want to make sure that


1449
00:35:52,586 --> 00:35:54,166
the user is aware about this.


1450
00:35:55,256 --> 00:35:57,466
And, as I move closer and closer


1451
00:35:57,466 --> 00:35:58,756
to Golden Gate Park, this


1452
00:35:58,756 --> 00:36:00,156
content becomes more relevant to


1453
00:36:00,156 --> 00:36:01,806
me, until I've finally arrived,


1454
00:36:01,806 --> 00:36:03,296
and I can really easily tap on


1455
00:36:03,296 --> 00:36:04,986
this to dive into more details,


1456
00:36:05,236 --> 00:36:05,986
and check out what are the


1457
00:36:05,986 --> 00:36:06,986
things I can do while I'm at


1458
00:36:06,986 --> 00:36:07,656
Golden Gate Park.


1459
00:36:10,036 --> 00:36:11,076
When you're creating your


1460
00:36:11,076 --> 00:36:12,696
locationRelevanceProviders, you


1461
00:36:12,696 --> 00:36:14,056
provide to the system a


1462
00:36:14,056 --> 00:36:14,616
CLRegion.


1463
00:36:15,226 --> 00:36:16,036
And so, this allows you to


1464
00:36:16,036 --> 00:36:17,306
indicate two important


1465
00:36:17,306 --> 00:36:17,856
properties.


1466
00:36:18,346 --> 00:36:19,826
The first is the actual


1467
00:36:19,826 --> 00:36:21,666
coordinates, the lat, long that


1468
00:36:21,666 --> 00:36:22,636
you're interested in surfacing


1469
00:36:22,636 --> 00:36:24,286
your content, along with the


1470
00:36:24,286 --> 00:36:24,806
radius.


1471
00:36:25,156 --> 00:36:26,536
So, how close does the user need


1472
00:36:26,536 --> 00:36:27,946
to be before this content is


1473
00:36:27,946 --> 00:36:30,946
relevant to them?


1474
00:36:31,476 --> 00:36:32,746
There's also a couple properties


1475
00:36:32,746 --> 00:36:34,626
in CLRegion that you can use to,


1476
00:36:34,626 --> 00:36:36,546
kind of, adjust how the system


1477
00:36:36,576 --> 00:36:37,486
interprets your region.


1478
00:36:38,546 --> 00:36:40,106
The first one is notifyOnEntry.


1479
00:36:40,686 --> 00:36:42,036
So, as the name might suggest,


1480
00:36:42,466 --> 00:36:43,806
the system waits until the user


1481
00:36:43,806 --> 00:36:45,186
has entered into this region


1482
00:36:45,186 --> 00:36:46,496
before this piece of content


1483
00:36:46,496 --> 00:36:47,656
becomes relevant to the user.


1484
00:36:49,726 --> 00:36:51,076
Similarly, there's a


1485
00:36:51,076 --> 00:36:52,766
notifyOnExit property that you


1486
00:36:52,766 --> 00:36:54,516
can set, where the system will


1487
00:36:54,516 --> 00:36:55,986
wait until the user has left


1488
00:36:56,056 --> 00:36:57,286
this particular region before


1489
00:36:57,286 --> 00:36:58,556
this content becomes relevant.


1490
00:36:59,566 --> 00:37:01,376
We actually use both these two


1491
00:37:01,436 --> 00:37:02,696
properties with the existing


1492
00:37:02,696 --> 00:37:04,266
location based reminders on the


1493
00:37:04,266 --> 00:37:06,036
Siri watch face, to get, kind


1494
00:37:06,036 --> 00:37:07,686
of, a geofencing-like behavior.


1495
00:37:10,146 --> 00:37:12,106
By default on CLRegion, both


1496
00:37:12,106 --> 00:37:13,096
these properties are set to


1497
00:37:13,096 --> 00:37:13,476
"true."


1498
00:37:14,016 --> 00:37:15,386
And, in that case, we'll


1499
00:37:15,706 --> 00:37:17,226
smoothly interpolate the


1500
00:37:17,226 --> 00:37:18,766
relevance based on how close the


1501
00:37:18,766 --> 00:37:19,806
user is to a particular


1502
00:37:19,806 --> 00:37:20,346
location.


1503
00:37:21,716 --> 00:37:24,506
And so, creating your CLRegion


1504
00:37:24,556 --> 00:37:25,306
is really easy.


1505
00:37:26,516 --> 00:37:27,866
In this example, we're creating


1506
00:37:27,866 --> 00:37:29,396
one around Apple Park, so I've


1507
00:37:29,486 --> 00:37:30,386
brought in the coordinates for


1508
00:37:30,386 --> 00:37:32,546
Apple Park, along with the


1509
00:37:32,546 --> 00:37:33,026
radius.


1510
00:37:33,026 --> 00:37:34,256
So, how close do I need to be?


1511
00:37:34,526 --> 00:37:35,826
In this case, 2 kilometers.


1512
00:37:36,276 --> 00:37:39,366
Next, I will go adjust the


1513
00:37:39,366 --> 00:37:40,926
notifyOnEntry, notifyOnExit


1514
00:37:40,956 --> 00:37:42,066
properties as they make sense


1515
00:37:42,066 --> 00:37:42,836
for my use case.


1516
00:37:43,476 --> 00:37:44,836
And, once I have my region fully


1517
00:37:44,836 --> 00:37:46,846
configured, I can really easily


1518
00:37:46,846 --> 00:37:47,266
create a


1519
00:37:47,266 --> 00:37:48,436
locationRelevanceProvider.


1520
00:37:50,696 --> 00:37:52,276
A couple of quick notes about


1521
00:37:52,276 --> 00:37:53,616
the locationRelevanceProvider.


1522
00:37:54,696 --> 00:37:56,086
In order to use it, your app


1523
00:37:56,086 --> 00:37:57,596
needs location authorization,


1524
00:37:57,736 --> 00:37:58,796
otherwise we're going to ignore


1525
00:37:58,796 --> 00:37:59,326
this particular


1526
00:37:59,326 --> 00:38:00,606
locationRelevanceProvider.


1527
00:38:01,316 --> 00:38:03,366
And, to preserve user battery


1528
00:38:03,366 --> 00:38:04,706
life, the number of location


1529
00:38:04,706 --> 00:38:05,906
updates we get during the course


1530
00:38:05,906 --> 00:38:07,206
of an hour is limited, so keep


1531
00:38:07,206 --> 00:38:09,306
that in mind.


1532
00:38:10,666 --> 00:38:12,026
So, that's some of the ways that


1533
00:38:12,026 --> 00:38:13,816
you can provide concrete times


1534
00:38:13,816 --> 00:38:15,116
and locations to the system.


1535
00:38:15,736 --> 00:38:16,796
Now, let's talk about what you


1536
00:38:16,796 --> 00:38:17,796
can do to try to provide


1537
00:38:17,856 --> 00:38:18,566
personalization.


1538
00:38:19,586 --> 00:38:20,596
So, we have this


1539
00:38:20,646 --> 00:38:22,136
dailyRoutineRelevanceProvider.


1540
00:38:22,366 --> 00:38:23,586
And so, like Paul mentioned


1541
00:38:23,586 --> 00:38:25,406
earlier, this allows you to


1542
00:38:25,406 --> 00:38:26,886
surface content at meaningful


1543
00:38:26,886 --> 00:38:28,606
times or locations to the user.


1544
00:38:30,456 --> 00:38:32,376
And, these times and locations


1545
00:38:32,376 --> 00:38:33,906
are personalized to each and


1546
00:38:33,906 --> 00:38:34,976
every single user of the Siri


1547
00:38:34,976 --> 00:38:37,666
watch face.


1548
00:38:38,356 --> 00:38:39,266
So, the first situation that


1549
00:38:39,266 --> 00:38:40,356
we'll talk about is the morning


1550
00:38:40,356 --> 00:38:40,996
situation.


1551
00:38:42,566 --> 00:38:43,536
This allows you to surface


1552
00:38:43,596 --> 00:38:44,796
content right when the user


1553
00:38:44,796 --> 00:38:45,596
wakes up in the morning.


1554
00:38:46,406 --> 00:38:47,746
We actually already used this


1555
00:38:47,746 --> 00:38:49,386
for the existing first-party


1556
00:38:49,606 --> 00:38:51,556
weather data source on the Siri


1557
00:38:51,556 --> 00:38:53,246
watch face, so we can provide


1558
00:38:53,246 --> 00:38:54,486
the user a nice summary of the


1559
00:38:54,486 --> 00:38:55,946
forecast at the beginning of the


1560
00:38:55,946 --> 00:38:57,796
day, and it quickly dismisses,


1561
00:38:57,796 --> 00:38:59,266
making room for other content


1562
00:38:59,266 --> 00:39:02,216
they might be interested in.


1563
00:39:02,516 --> 00:39:03,456
We also have an evening


1564
00:39:03,456 --> 00:39:04,136
situation.


1565
00:39:04,706 --> 00:39:05,726
And so, this allows us to


1566
00:39:05,726 --> 00:39:07,136
surface content before the user


1567
00:39:07,136 --> 00:39:07,706
goes to bed.


1568
00:39:08,586 --> 00:39:10,386
So, we use this one for the new


1569
00:39:10,726 --> 00:39:12,956
heart rate card in watchOS 5, so


1570
00:39:12,956 --> 00:39:14,046
that we can provide the user a


1571
00:39:14,046 --> 00:39:15,246
summary of their heart rate


1572
00:39:15,246 --> 00:39:18,296
activity throughout the day.


1573
00:39:18,446 --> 00:39:19,046
And, creating a


1574
00:39:19,046 --> 00:39:20,406
dailyRoutineRelevanceProvider is


1575
00:39:20,406 --> 00:39:20,956
really easy.


1576
00:39:20,956 --> 00:39:22,436
You've just got to specify which


1577
00:39:22,436 --> 00:39:23,566
situation you're interested in.


1578
00:39:23,566 --> 00:39:25,296
So, in this case, we can really


1579
00:39:25,296 --> 00:39:26,306
easily create a


1580
00:39:26,306 --> 00:39:27,676
dailyRoutineRelevanceProvider to


1581
00:39:27,676 --> 00:39:28,796
surface content right when the


1582
00:39:28,796 --> 00:39:31,286
user wakes up.


1583
00:39:32,206 --> 00:39:33,566
And, the behavior for both these


1584
00:39:33,566 --> 00:39:35,226
two situations is very similar


1585
00:39:35,226 --> 00:39:36,936
to a dateLocation-- or a


1586
00:39:36,936 --> 00:39:37,876
dateRelevanceProvider.


1587
00:39:38,706 --> 00:39:39,936
Except that the system is


1588
00:39:39,936 --> 00:39:41,706
automatically figuring out what


1589
00:39:41,706 --> 00:39:42,616
are the dates that we should be


1590
00:39:42,616 --> 00:39:43,606
surfacing this content.


1591
00:39:46,526 --> 00:39:47,816
We also have a few situations


1592
00:39:47,816 --> 00:39:49,236
available to you that allow you


1593
00:39:49,236 --> 00:39:50,536
to surface content in meaningful


1594
00:39:50,536 --> 00:39:52,186
locations to the user, whether


1595
00:39:52,186 --> 00:39:57,086
that be home, work, school, or


1596
00:39:57,086 --> 00:39:57,986
when the user arrives to the


1597
00:39:57,986 --> 00:39:58,256
gym.


1598
00:40:00,046 --> 00:40:01,056
And again, creating one of these


1599
00:40:01,056 --> 00:40:02,436
dailyRoutineRelevanceProviders


1600
00:40:02,436 --> 00:40:03,206
is really easy.


1601
00:40:03,266 --> 00:40:04,426
You just need to specify which


1602
00:40:04,426 --> 00:40:05,556
situation you're interested in.


1603
00:40:08,396 --> 00:40:09,646
And, for all of these


1604
00:40:09,646 --> 00:40:11,136
situations, the behavior of this


1605
00:40:11,136 --> 00:40:12,826
relevanceProvider is similar


1606
00:40:12,826 --> 00:40:13,356
again to a


1607
00:40:13,356 --> 00:40:14,636
locationRelevanceProvider,


1608
00:40:14,936 --> 00:40:15,866
except that the system is


1609
00:40:15,866 --> 00:40:17,176
automatically figuring out the


1610
00:40:17,176 --> 00:40:18,186
locations on your behalf.


1611
00:40:19,296 --> 00:40:20,346
And so, as the user gets closer


1612
00:40:20,346 --> 00:40:22,046
to these locations, your content


1613
00:40:22,046 --> 00:40:23,616
will become more relevant to


1614
00:40:23,746 --> 00:40:24,436
your users.


1615
00:40:26,086 --> 00:40:28,626
So, that is some of the insight


1616
00:40:28,626 --> 00:40:30,006
into how we predict your


1617
00:40:30,006 --> 00:40:31,066
relevant shortcuts on the Siri


1618
00:40:31,066 --> 00:40:31,656
watch face.


1619
00:40:31,906 --> 00:40:33,016
And, some of the things that you


1620
00:40:33,016 --> 00:40:34,606
can do to provide additional


1621
00:40:34,606 --> 00:40:36,446
context to the system so that we


1622
00:40:36,446 --> 00:40:37,836
can surface your content when


1623
00:40:37,836 --> 00:40:38,666
it's most appropriate.


1624
00:40:39,296 --> 00:40:41,556
Now, let's talk about how you


1625
00:40:41,556 --> 00:40:42,886
can build a great experience on


1626
00:40:42,886 --> 00:40:43,756
the Siri watch face.


1627
00:40:44,796 --> 00:40:46,076
So, we've been working on the


1628
00:40:46,076 --> 00:40:47,516
Siri watch face for a while now.


1629
00:40:47,616 --> 00:40:48,576
And, we've learned quite a few


1630
00:40:48,576 --> 00:40:49,286
things along the way.


1631
00:40:51,556 --> 00:40:52,956
First one of those things is


1632
00:40:52,956 --> 00:40:54,426
there's kind of, two high-level


1633
00:40:54,426 --> 00:40:56,306
categories of content that we


1634
00:40:56,306 --> 00:40:57,656
think works great on the Siri


1635
00:40:57,656 --> 00:40:58,326
watch face.


1636
00:40:59,736 --> 00:41:00,616
The first one of those is


1637
00:41:00,616 --> 00:41:01,716
glanceable information.


1638
00:41:02,346 --> 00:41:03,856
So, being able to really easily,


1639
00:41:03,856 --> 00:41:05,456
on a wrist raise, get a snippet


1640
00:41:05,456 --> 00:41:06,586
of information that I care


1641
00:41:06,586 --> 00:41:08,346
about, and being able to tap on


1642
00:41:08,346 --> 00:41:09,436
it when it's appropriate to dive


1643
00:41:09,436 --> 00:41:10,316
into more details.


1644
00:41:11,796 --> 00:41:13,596
The second is tappable actions.


1645
00:41:14,096 --> 00:41:15,396
So, being able to really easily,


1646
00:41:15,396 --> 00:41:16,966
from my watch face, tap on a


1647
00:41:16,966 --> 00:41:18,996
platter, execute a complex


1648
00:41:18,996 --> 00:41:20,306
action, and get right back to my


1649
00:41:20,306 --> 00:41:20,506
day.


1650
00:41:21,606 --> 00:41:23,166
So, let's take a look at the


1651
00:41:23,166 --> 00:41:24,206
glanceable information.


1652
00:41:24,686 --> 00:41:25,746
So, you can see we have this


1653
00:41:25,746 --> 00:41:26,586
recipes app again.


1654
00:41:27,576 --> 00:41:28,576
And, throughout the day, when


1655
00:41:28,576 --> 00:41:30,736
I'm glancing at my wrist, I can


1656
00:41:30,736 --> 00:41:31,596
get a nice snippet of


1657
00:41:31,596 --> 00:41:32,306
information, right?


1658
00:41:32,306 --> 00:41:33,906
I can see the recipe that I


1659
00:41:33,906 --> 00:41:35,026
might be cooking later today.


1660
00:41:35,386 --> 00:41:36,656
And, I can really easily decide


1661
00:41:36,836 --> 00:41:37,656
is this something I want to


1662
00:41:37,746 --> 00:41:38,626
make, or do I want to go out


1663
00:41:38,626 --> 00:41:38,876
tonight?


1664
00:41:39,926 --> 00:41:41,186
And, when I'm getting ready to


1665
00:41:41,186 --> 00:41:42,626
go home in the evening, I can


1666
00:41:42,626 --> 00:41:45,296
really easily tap on it to dive


1667
00:41:45,296 --> 00:41:46,836
into this app and see, do I need


1668
00:41:46,836 --> 00:41:47,706
to stop at the grocery store on


1669
00:41:47,706 --> 00:41:47,976
my way home?


1670
00:41:53,316 --> 00:41:54,526
So, if you're trying to provide


1671
00:41:54,526 --> 00:41:55,646
glanceable information to the


1672
00:41:55,646 --> 00:41:57,016
user, there's a few things that


1673
00:41:57,016 --> 00:41:57,956
you want to keep in mind.


1674
00:41:58,946 --> 00:42:00,046
Make sure that you're surfacing


1675
00:42:00,046 --> 00:42:02,216
the most critical information in


1676
00:42:02,216 --> 00:42:03,376
your relevant shortcuts.


1677
00:42:04,546 --> 00:42:05,826
This is the content that users


1678
00:42:05,826 --> 00:42:06,886
are going to see at a wrist


1679
00:42:06,886 --> 00:42:07,956
raise throughout the day, and


1680
00:42:07,956 --> 00:42:09,716
this is the content that they


1681
00:42:09,716 --> 00:42:10,626
really want to see right on


1682
00:42:10,626 --> 00:42:11,346
their watch face.


1683
00:42:12,636 --> 00:42:15,296
When the user taps on your


1684
00:42:15,296 --> 00:42:16,786
relevant shortcut, it should be


1685
00:42:16,786 --> 00:42:18,076
opening up into a location


1686
00:42:18,076 --> 00:42:19,166
within your app, and providing


1687
00:42:19,166 --> 00:42:20,276
them additional details.


1688
00:42:21,166 --> 00:42:22,616
Accidental taps on the Siri


1689
00:42:22,616 --> 00:42:23,946
watch face do happen, and so,


1690
00:42:23,946 --> 00:42:24,956
you want to make sure you're not


1691
00:42:24,956 --> 00:42:26,246
kicking off any long-running


1692
00:42:26,246 --> 00:42:27,716
background task that the user


1693
00:42:27,716 --> 00:42:29,266
isn't aware of.


1694
00:42:30,836 --> 00:42:32,306
And, like Paul mentioned


1695
00:42:32,306 --> 00:42:33,726
earlier, the system will


1696
00:42:33,726 --> 00:42:35,216
automatically be giving you an


1697
00:42:35,216 --> 00:42:36,416
additional background refresh


1698
00:42:36,416 --> 00:42:38,376
task to go provide new content.


1699
00:42:38,856 --> 00:42:40,186
Take advantage of this, so you


1700
00:42:40,186 --> 00:42:41,796
make sure you have relevant and


1701
00:42:41,796 --> 00:42:43,166
interesting content available on


1702
00:42:43,166 --> 00:42:44,086
the Siri watch face.


1703
00:42:44,626 --> 00:42:48,216
And, whenever you get new data,


1704
00:42:48,216 --> 00:42:49,456
whether that be through this


1705
00:42:49,456 --> 00:42:51,206
background refresh task, because


1706
00:42:51,206 --> 00:42:52,426
you've gone to the network and


1707
00:42:52,426 --> 00:42:53,996
downloaded new data, or because


1708
00:42:53,996 --> 00:42:55,156
the user has started using your


1709
00:42:55,156 --> 00:42:56,876
app, make sure that you provide


1710
00:42:56,876 --> 00:42:58,156
new relevant shortcuts the


1711
00:42:58,156 --> 00:42:59,826
system can always be surfacing


1712
00:43:00,126 --> 00:43:01,316
the most interesting content to


1713
00:43:01,316 --> 00:43:02,636
the user right on a wrist raise.


1714
00:43:04,966 --> 00:43:07,126
And finally, if the information


1715
00:43:07,126 --> 00:43:08,246
that you're trying to surface is


1716
00:43:08,246 --> 00:43:10,606
timely, indicate that to us


1717
00:43:10,776 --> 00:43:12,086
through the relevance providers,


1718
00:43:12,416 --> 00:43:13,846
so the system can surface your


1719
00:43:13,846 --> 00:43:15,126
content, again, when it's most


1720
00:43:15,126 --> 00:43:15,596
appropriate.


1721
00:43:15,896 --> 00:43:19,856
And so, that is glanceable


1722
00:43:19,856 --> 00:43:20,426
information.


1723
00:43:20,846 --> 00:43:21,716
Now, let's talk a little bit


1724
00:43:21,716 --> 00:43:23,136
about tappable actions on the


1725
00:43:23,136 --> 00:43:23,936
Siri watch face.


1726
00:43:25,896 --> 00:43:27,326
So, you can see we have this


1727
00:43:27,356 --> 00:43:28,356
fitness trainer app again.


1728
00:43:28,676 --> 00:43:30,006
And, I can really easily, right


1729
00:43:30,006 --> 00:43:31,426
on my wrist, get this reminder


1730
00:43:31,426 --> 00:43:32,266
that I need to go out for my


1731
00:43:32,266 --> 00:43:32,586
run.


1732
00:43:34,656 --> 00:43:36,156
And tapping on it, I get this


1733
00:43:36,246 --> 00:43:37,636
nice confirmation to make sure


1734
00:43:37,636 --> 00:43:39,026
that this is the actual action


1735
00:43:39,026 --> 00:43:39,886
that I want to execute.


1736
00:43:41,226 --> 00:43:42,816
And, in two taps, I can start


1737
00:43:42,816 --> 00:43:43,376
this workout.


1738
00:43:43,576 --> 00:43:44,676
I don't need to spend time


1739
00:43:44,676 --> 00:43:46,426
digging through apps to find


1740
00:43:46,426 --> 00:43:47,736
this particular fitness trainer


1741
00:43:47,736 --> 00:43:49,326
app, and start-- kick off my


1742
00:43:49,326 --> 00:43:49,776
workout.


1743
00:43:49,776 --> 00:43:51,346
I can really easily in two taps,


1744
00:43:51,346 --> 00:43:53,126
right from my watch face, kick


1745
00:43:53,126 --> 00:43:54,196
off this workout.


1746
00:43:57,256 --> 00:43:58,706
So, if you're providing tappable


1747
00:43:58,706 --> 00:43:59,936
actions, a few things to keep in


1748
00:43:59,936 --> 00:44:00,246
mind.


1749
00:44:01,856 --> 00:44:03,606
Your intents are running within


1750
00:44:03,606 --> 00:44:04,806
your Siri extension.


1751
00:44:05,376 --> 00:44:06,956
And, this allows the system to


1752
00:44:06,956 --> 00:44:09,046
automatically run your intents


1753
00:44:09,156 --> 00:44:10,476
in the background, so the user


1754
00:44:10,476 --> 00:44:11,776
never has to leave the Siri


1755
00:44:11,776 --> 00:44:13,186
watch face to go run your


1756
00:44:13,186 --> 00:44:13,626
actions.


1757
00:44:16,066 --> 00:44:17,486
We always display the standard


1758
00:44:17,486 --> 00:44:19,146
system confirmation UI, so that


1759
00:44:19,146 --> 00:44:21,086
users know the action they're


1760
00:44:21,086 --> 00:44:22,096
going to run, and we can make


1761
00:44:22,096 --> 00:44:23,226
sure this is what they want to


1762
00:44:23,226 --> 00:44:24,000
perform.


1763
00:44:27,046 --> 00:44:28,076
You also want to make sure that


1764
00:44:28,076 --> 00:44:29,176
the relevant shortcuts that


1765
00:44:29,176 --> 00:44:30,156
you're creating are fully


1766
00:44:30,156 --> 00:44:32,536
specified, so that your intents


1767
00:44:32,536 --> 00:44:33,956
extension can handle them


1768
00:44:33,956 --> 00:44:35,166
without any additional user


1769
00:44:35,166 --> 00:44:35,886
confirmation.


1770
00:44:37,186 --> 00:44:38,896
So that when the user taps on


1771
00:44:38,896 --> 00:44:39,956
one of these relevant shortcuts


1772
00:44:39,956 --> 00:44:41,146
on the Siri watch face, we don't


1773
00:44:41,146 --> 00:44:42,596
need to open up your app to


1774
00:44:42,596 --> 00:44:43,676
continue and get, you know,


1775
00:44:43,676 --> 00:44:44,766
additional information from the


1776
00:44:44,766 --> 00:44:45,066
user.


1777
00:44:45,446 --> 00:44:47,136
We can kick off your SiriKit


1778
00:44:47,136 --> 00:44:48,516
extension, run it in the


1779
00:44:48,516 --> 00:44:49,786
background, and the user can get


1780
00:44:49,786 --> 00:44:51,856
on with their day.


1781
00:44:52,946 --> 00:44:55,456
And, you want to be providing


1782
00:44:55,636 --> 00:44:57,596
commonly used tasks within your


1783
00:44:57,596 --> 00:44:58,986
app as relevant shortcuts.


1784
00:44:59,436 --> 00:45:00,636
These are the kind of tasks that


1785
00:45:00,636 --> 00:45:01,866
users are using your apps a lot


1786
00:45:01,866 --> 00:45:03,436
for, and that they want to have


1787
00:45:03,436 --> 00:45:04,746
really quick and easy access to


1788
00:45:04,746 --> 00:45:06,986
from the watch face.


1789
00:45:07,796 --> 00:45:09,456
And, you also want to make sure


1790
00:45:09,456 --> 00:45:10,456
that you're providing relevant


1791
00:45:10,456 --> 00:45:11,276
shortcuts often.


1792
00:45:11,846 --> 00:45:13,136
You may not know the last time


1793
00:45:13,136 --> 00:45:14,156
that you provided relevant


1794
00:45:14,156 --> 00:45:16,146
shortcuts to the system is, and


1795
00:45:16,146 --> 00:45:16,886
you want to make sure that your


1796
00:45:16,886 --> 00:45:18,806
users can always access your


1797
00:45:18,806 --> 00:45:19,826
actions right from the Siri


1798
00:45:19,826 --> 00:45:20,436
watch face.


1799
00:45:21,376 --> 00:45:22,626
If you're going to be providing


1800
00:45:22,626 --> 00:45:23,826
these when your app starts up,


1801
00:45:24,166 --> 00:45:25,576
do it on a background thread so


1802
00:45:25,576 --> 00:45:27,116
you're not slowing down your app


1803
00:45:27,116 --> 00:45:27,396
launch.


1804
00:45:28,026 --> 00:45:31,356
So, we've talked a lot about


1805
00:45:31,566 --> 00:45:33,186
relevant shortcuts, and the ways


1806
00:45:33,186 --> 00:45:34,416
that you can surface your


1807
00:45:34,416 --> 00:45:36,286
information and actions right on


1808
00:45:36,286 --> 00:45:37,166
the Siri watch face.


1809
00:45:37,166 --> 00:45:40,456
You want to make sure that


1810
00:45:40,456 --> 00:45:42,286
you're also providing relevant


1811
00:45:42,286 --> 00:45:43,406
and engaging content.


1812
00:45:43,726 --> 00:45:44,846
This is the kind of content that


1813
00:45:44,846 --> 00:45:45,926
users want to see right on a


1814
00:45:45,926 --> 00:45:47,146
wrist raise, and the kind of


1815
00:45:47,226 --> 00:45:49,566
content that we are surfacing on


1816
00:45:49,566 --> 00:45:50,646
the Siri watch face, and trying


1817
00:45:50,646 --> 00:45:52,066
to promote to the top.


1818
00:45:53,876 --> 00:45:55,946
The richest experience happens


1819
00:45:55,986 --> 00:45:57,256
when you have a watchOS app.


1820
00:45:57,906 --> 00:45:59,206
This is when the system can give


1821
00:45:59,206 --> 00:46:00,396
you additional background


1822
00:46:00,396 --> 00:46:01,886
refresh tasks, and there's no


1823
00:46:01,886 --> 00:46:03,516
latency between the user tapping


1824
00:46:03,516 --> 00:46:04,336
on one of the relevant


1825
00:46:04,336 --> 00:46:05,646
shortcuts, and us beginning


1826
00:46:05,646 --> 00:46:06,266
execution.


1827
00:46:08,356 --> 00:46:09,856
If you have any questions, we


1828
00:46:09,856 --> 00:46:11,006
have a lab later today.


1829
00:46:11,006 --> 00:46:12,386
We would love to talk to you


1830
00:46:12,386 --> 00:46:13,486
guys about relevant shortcuts


1831
00:46:13,486 --> 00:46:14,426
and the Siri watch face.


1832
00:46:15,116 --> 00:46:16,796
And, we're really excited to see


1833
00:46:16,796 --> 00:46:17,876
the kinds of experiences that


1834
00:46:17,916 --> 00:46:19,486
you guys can create right on the


1835
00:46:19,486 --> 00:46:20,036
watch face.


1836
00:46:20,716 --> 00:46:20,956
Thank you.


1837
00:46:21,516 --> 00:46:24,500
[ Applause ]

