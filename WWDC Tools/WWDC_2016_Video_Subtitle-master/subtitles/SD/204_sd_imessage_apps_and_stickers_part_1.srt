1
00:00:06,516 --> 00:00:18,500
[ Music ]


2
00:00:23,516 --> 00:00:30,456
[ Applause ]


3
00:00:30,956 --> 00:00:32,586
>> Hello. Good morning,
everyone.


4
00:00:33,336 --> 00:00:35,886
Welcome to Part 1 of
iMessage Apps and Stickers.


5
00:00:36,346 --> 00:00:38,566
My name is Bhaskar
and I'm an engineer


6
00:00:38,566 --> 00:00:39,946
on the Messages Team at Apple.


7
00:00:40,556 --> 00:00:43,616
Today we are introducing
iMessage apps.


8
00:00:43,926 --> 00:00:46,326
And what that means is that
you will be able to write apps


9
00:00:46,376 --> 00:00:48,976
that run within the context
of the Messages application.


10
00:00:49,376 --> 00:00:53,596
iMessage apps can provide
three main types of content.


11
00:00:55,576 --> 00:00:58,476
Number one, they can
provide interactive messages.


12
00:00:58,926 --> 00:01:00,746
Interactive messages
are a type of message


13
00:01:00,746 --> 00:01:03,446
that your application generates
and when your user taps


14
00:01:03,446 --> 00:01:05,556
on this message, it will
launch your application.


15
00:01:06,526 --> 00:01:08,906
For example, in the
screenshot shown here,


16
00:01:09,556 --> 00:01:12,376
I'm using the DoorDash app
to send a menu to my friends


17
00:01:12,376 --> 00:01:14,046
for the party that we
are having later tonight.


18
00:01:14,926 --> 00:01:17,616
On their phones they will
be able to see that message


19
00:01:18,056 --> 00:01:20,686
and if they have the application
installed, they will be able


20
00:01:20,686 --> 00:01:23,316
to tap on it and tapping
will launch DoorDash.


21
00:01:23,436 --> 00:01:25,986
At that point they will be
able to modify the menu,


22
00:01:25,986 --> 00:01:30,446
add stuff to it, and
send a reply back to me.


23
00:01:30,486 --> 00:01:31,926
iMessage apps can
also provide Stickers.


24
00:01:32,616 --> 00:01:35,906
Stickers are images
generated by your application


25
00:01:36,066 --> 00:01:38,586
and we believe it
helps create a very fun


26
00:01:38,586 --> 00:01:41,696
and interactive experience
between iMessage users.


27
00:01:42,236 --> 00:01:47,976
And lastly, iMessage apps
can provide every other type


28
00:01:47,976 --> 00:01:51,336
of content that Messages has
always supported, like photos,


29
00:01:51,736 --> 00:01:57,476
videos, text, links, et cetera.


30
00:01:57,626 --> 00:02:01,106
Also in iOS X we will
have a Messages App Store.


31
00:02:01,736 --> 00:02:03,806
What that means is that
the apps that you write


32
00:02:03,806 --> 00:02:06,526
and create will be
shown and displayed


33
00:02:06,526 --> 00:02:07,636
in this Messages App Store.


34
00:02:08,366 --> 00:02:11,266
Users will be able to get to
this App Store via Messages


35
00:02:11,506 --> 00:02:13,486
and they will be able to
download your applications.


36
00:02:14,806 --> 00:02:17,586
Applications that your users
have downloaded will be


37
00:02:17,586 --> 00:02:19,386
displayed within
Messages in the UI


38
00:02:19,386 --> 00:02:23,706
which we call the
Messages App Drawer.


39
00:02:23,906 --> 00:02:26,996
We also have this great
feature that allows your users


40
00:02:26,996 --> 00:02:29,066
to discover your
applications very easily


41
00:02:29,496 --> 00:02:31,636
and we call it inline
app attribution.


42
00:02:32,536 --> 00:02:34,616
Let's try to understand what
that means with an example.


43
00:02:35,636 --> 00:02:38,856
In the screenshot shown here
I have received a Sticker


44
00:02:38,856 --> 00:02:43,016
from my friend but I do not
have that application installed


45
00:02:43,336 --> 00:02:44,566
from which he sent the Sticker.


46
00:02:45,446 --> 00:02:48,176
In that case, as you can
see the zoomed in area,


47
00:02:48,736 --> 00:02:51,486
beneath the Sticker we will
have the name of the application


48
00:02:51,486 --> 00:02:52,746
from which the Sticker was sent.


49
00:02:53,436 --> 00:02:56,086
And tapping on the piece of text
will launch the Messages App


50
00:02:56,086 --> 00:02:58,816
Store and present me
with the application


51
00:02:58,816 --> 00:02:59,946
from which the Sticker was sent.


52
00:03:00,576 --> 00:03:02,776
And then I can download
the application and use it


53
00:03:02,776 --> 00:03:04,396
like any other iMessage app.


54
00:03:05,176 --> 00:03:10,446
In this example shown here, I
used the Sticker as an example


55
00:03:10,446 --> 00:03:12,286
to illustrate inline
app attribution.


56
00:03:12,756 --> 00:03:15,556
However, it applies to
every other type of content


57
00:03:15,556 --> 00:03:20,786
that your iMessage
app can generate.


58
00:03:20,786 --> 00:03:23,866
Also creating an iMessage
app is very similar


59
00:03:23,866 --> 00:03:25,656
to creating any other
iOS application


60
00:03:25,656 --> 00:03:26,836
that you have already created.


61
00:03:27,466 --> 00:03:29,766
You will be able to use the
same set of technologies


62
00:03:29,766 --> 00:03:31,836
and framework that you
already use currently.


63
00:03:32,656 --> 00:03:35,846
For example, some of the
things that you can use are:


64
00:03:36,696 --> 00:03:41,166
You can do in-app purchase
within your application;


65
00:03:42,376 --> 00:03:43,916
you will have access
to Apple Pay;


66
00:03:45,486 --> 00:03:48,266
and your iMessage app will
also be able to use the camera.


67
00:03:48,386 --> 00:03:50,196
And we believe these
technologies


68
00:03:50,196 --> 00:03:51,186
and features will allow you


69
00:03:51,186 --> 00:03:53,386
to create great apps
for your users.


70
00:03:53,496 --> 00:03:57,406
Now let's talk about
supportive platforms.


71
00:03:58,116 --> 00:04:00,706
iMessage apps will
only run on iOS X.


72
00:04:02,466 --> 00:04:05,756
However, the content that your
application generates will be


73
00:04:05,756 --> 00:04:09,846
sent to, and can be viewed
on watchOS and macOS devices.


74
00:04:10,396 --> 00:04:15,776
In watchOS 3.0, within
the Messages application,


75
00:04:15,986 --> 00:04:18,096
we also have a new page
called the Recents Page.


76
00:04:18,636 --> 00:04:22,246
The Recents Page, amongst other
things, will display Stickers


77
00:04:22,486 --> 00:04:24,786
that your users had recently
sent from their phone.


78
00:04:25,646 --> 00:04:27,086
And you users will
not only be able


79
00:04:27,086 --> 00:04:29,216
to see these recent Stickers,
they will also be able


80
00:04:29,216 --> 00:04:31,666
to send these Stickers
from their watch just


81
00:04:31,666 --> 00:04:33,186
like they are able to
send it from their phones.


82
00:04:33,186 --> 00:04:37,946
So that was about the
Messages App Store


83
00:04:38,176 --> 00:04:39,556
and the Messages platform.


84
00:04:39,936 --> 00:04:42,556
Now let's get into details
of creating iMessage apps.


85
00:04:43,426 --> 00:04:44,666
This is what we're
going to cover


86
00:04:44,666 --> 00:04:46,116
in the rest of the
session today.


87
00:04:46,466 --> 00:04:49,756
First we are going to talk
about the Messages framework.


88
00:04:50,226 --> 00:04:52,526
Messages framework is the
framework that you guys need


89
00:04:52,526 --> 00:04:55,936
to familiarize yourself with
to create iMessage apps.


90
00:04:56,596 --> 00:04:57,666
Then we're going to talk


91
00:04:57,666 --> 00:04:59,726
about creating a
Sticker Pack application.


92
00:05:00,206 --> 00:05:04,266
Next we are going to go into
details of Sticker file formats


93
00:05:04,616 --> 00:05:06,516
and other constraints
around Stickers.


94
00:05:07,036 --> 00:05:09,206
And lastly we're going to talk


95
00:05:09,206 --> 00:05:11,216
about creating a custom
Sticker experience using the


96
00:05:11,216 --> 00:05:12,026
Messages framework.


97
00:05:12,546 --> 00:05:16,106
What we will not cover
in today's talk is how


98
00:05:16,106 --> 00:05:18,856
to create an application that
provides interactive messages.


99
00:05:19,366 --> 00:05:22,676
We will cover such an
application in Part 2


100
00:05:22,676 --> 00:05:24,986
of our talk and I
do request you guys


101
00:05:24,986 --> 00:05:26,226
to please come back for that.


102
00:05:26,586 --> 00:05:32,356
That will be here on Thursday
at 1:40 p.m. Messages framework,


103
00:05:32,926 --> 00:05:34,306
Messages framework
is the new framework


104
00:05:34,306 --> 00:05:36,266
that we are introducing
in iOS X.


105
00:05:37,056 --> 00:05:38,986
Messages framework
acts as an interface


106
00:05:38,986 --> 00:05:41,706
between your iMessages app
and the Messages application.


107
00:05:42,756 --> 00:05:45,586
When your user taps on your app
icon to launch your application,


108
00:05:45,836 --> 00:05:48,976
it is through this framework
that we discover your app,


109
00:05:48,976 --> 00:05:51,616
launch it, and provide
your application with data


110
00:05:51,996 --> 00:05:53,956
and other context
your application needs


111
00:05:54,036 --> 00:05:54,846
to lay out its UI.


112
00:05:55,896 --> 00:05:59,496
Once your application has
presented its UI your users are


113
00:05:59,496 --> 00:06:01,206
ready to interact with it.


114
00:06:01,436 --> 00:06:04,216
And at the end of that
interaction your application


115
00:06:04,406 --> 00:06:08,636
will hopefully generate some
content that your user wants


116
00:06:08,636 --> 00:06:14,076
to share by Messages and your
app hands this content back


117
00:06:14,076 --> 00:06:15,706
to Messages by this framework.


118
00:06:15,856 --> 00:06:18,146
And at that point your
users are ready to share


119
00:06:18,146 --> 00:06:19,256
that thing via Messages


120
00:06:19,666 --> 00:06:23,096
with whomever they're
talking to at that point.


121
00:06:23,096 --> 00:06:25,926
I would like to mention
that the Messages framework


122
00:06:26,256 --> 00:06:28,296
and iMessage apps
are built on top


123
00:06:28,296 --> 00:06:30,386
of existing app extension
technology.


124
00:06:31,396 --> 00:06:34,916
And in that sense your
iMessage app is an app extension


125
00:06:35,216 --> 00:06:37,826
and in this scenario the
Messages app is acting


126
00:06:37,826 --> 00:06:41,266
as the host application
for your iMessage app.


127
00:06:42,496 --> 00:06:44,656
For those of you
who are not familiar


128
00:06:44,656 --> 00:06:47,956
or who have not made extensions
before, I do recommend


129
00:06:47,956 --> 00:06:50,936
that you please go back and
take a look at this WWDC talk


130
00:06:50,936 --> 00:06:56,406
from 2014 that introduces
extensions in iOS and OS X.


131
00:06:58,196 --> 00:07:01,826
So as I just mentioned, iMessage
apps are extensions, however,


132
00:07:01,826 --> 00:07:03,746
there's one key difference
as compared


133
00:07:03,746 --> 00:07:05,716
to other extension
points on iOS.


134
00:07:06,866 --> 00:07:09,516
Unlike other extension
points you do not have


135
00:07:09,576 --> 00:07:11,186
to provide a containing
application


136
00:07:11,436 --> 00:07:12,856
for your iMessage app.


137
00:07:12,856 --> 00:07:15,326
You can only ship your
iMessage app if you want to.


138
00:07:16,426 --> 00:07:18,926
But if you already have
a containing application


139
00:07:18,926 --> 00:07:21,026
that you created or that
you're already shipping


140
00:07:21,026 --> 00:07:24,376
to the App Store, you can
always include an iMessage app


141
00:07:24,376 --> 00:07:26,376
within your containing
application because,


142
00:07:26,376 --> 00:07:27,746
as I mentioned, these
are extensions.


143
00:07:30,816 --> 00:07:33,316
So if you provide a
containing application,


144
00:07:33,626 --> 00:07:36,596
then your application will
show up in the main Home screen


145
00:07:36,596 --> 00:07:39,356
of your users' phones and
the Messages App Drawer


146
00:07:39,396 --> 00:07:40,116
within Messages.


147
00:07:40,696 --> 00:07:42,566
It will also show up
in the main App Store


148
00:07:42,956 --> 00:07:44,326
and in the Messages App Store.


149
00:07:45,276 --> 00:07:48,496
But if you do not provide a
containing application, then,


150
00:07:48,496 --> 00:07:50,936
as you can see, your
application will not show


151
00:07:50,936 --> 00:07:53,776
up in the main Home screen
and the main App Store.


152
00:07:54,076 --> 00:07:56,566
It will only show up in
the Messages App Drawer


153
00:07:56,856 --> 00:07:59,576
and the Messages App Store.


154
00:07:59,766 --> 00:08:03,106
I would like to mention that if
you do not provide a containing


155
00:08:03,106 --> 00:08:05,916
application, you still
have to provide an icon


156
00:08:06,186 --> 00:08:07,486
for your containing application.


157
00:08:08,296 --> 00:08:10,456
This is the icon that will
be used in other parts


158
00:08:10,456 --> 00:08:13,506
of the system like the Settings
application to show information


159
00:08:13,506 --> 00:08:15,326
about your application,
for example,


160
00:08:15,326 --> 00:08:16,516
the amount of storage
it is using.


161
00:08:19,276 --> 00:08:20,976
So now let's talk
about Stickers.


162
00:08:21,686 --> 00:08:24,406
Stickers are a fun way and
a new way to communicate


163
00:08:24,406 --> 00:08:25,806
with other iMessage users.


164
00:08:27,146 --> 00:08:29,836
Your users can send
Stickers inline just


165
00:08:29,836 --> 00:08:32,256
like any other iMessage
your users already send.


166
00:08:33,515 --> 00:08:36,626
Or your users, not
your Stickers,


167
00:08:36,876 --> 00:08:40,155
or your users can drag Stickers
out of their applications


168
00:08:40,326 --> 00:08:42,275
and attach them to
other Message bubbles.


169
00:08:42,576 --> 00:08:46,026
And we believe this lends
itself to a very expressive


170
00:08:46,026 --> 00:08:48,076
and engaging messaging
experience.


171
00:08:48,616 --> 00:08:52,326
But what do Stickers
mean to you?


172
00:08:53,116 --> 00:08:55,766
Stickers are basically images
that your application provides.


173
00:08:57,256 --> 00:09:00,186
These images can be animated
or they can be static.


174
00:09:00,336 --> 00:09:04,106
And we believe Stickers
are a great way to share


175
00:09:04,106 --> 00:09:06,216
or promote any content
that you may have.


176
00:09:06,706 --> 00:09:09,116
And we generally think
Sticker applications are going


177
00:09:09,116 --> 00:09:11,786
to be very, very popular
amongst iMessage users.


178
00:09:12,346 --> 00:09:16,466
So now let's talk about
creating Sticker apps.


179
00:09:17,086 --> 00:09:18,506
There are two ways to
create a Sticker app.


180
00:09:19,066 --> 00:09:22,746
First, you can create a Sticker
Pack application using Xcode.


181
00:09:23,406 --> 00:09:25,886
If you go down this
route, you do not have


182
00:09:25,946 --> 00:09:28,206
to provide any code
for your application.


183
00:09:28,566 --> 00:09:30,376
You only have to
provide the assets


184
00:09:30,376 --> 00:09:32,366
for your Stickers
and the app icons.


185
00:09:32,866 --> 00:09:35,706
But if you want to
customize your application,


186
00:09:35,706 --> 00:09:37,206
you can do so by providing code.


187
00:09:37,256 --> 00:09:39,986
And your code in this case
will provide Stickers via the


188
00:09:39,986 --> 00:09:40,806
Messages framework.


189
00:09:41,496 --> 00:09:45,886
At this point let me
show you a demo of how


190
00:09:45,886 --> 00:09:48,966
to create a Sticker Pack
application using Xcode.


191
00:09:49,616 --> 00:09:55,956
So I have my machine here and
I'm going to launch Xcode.


192
00:09:56,096 --> 00:09:57,816
And here I'm going
to say I'm going


193
00:09:57,816 --> 00:09:59,636
to create a new Xcode project.


194
00:09:59,706 --> 00:10:03,986
And under the Title of
Application I'm going


195
00:10:03,986 --> 00:10:05,916
to select Sticker
Pack Application.


196
00:10:06,916 --> 00:10:08,226
And then I'm going to hit Next.


197
00:10:09,286 --> 00:10:12,026
And I'm going to name my project
"SFStickers" as the assets


198
00:10:12,436 --> 00:10:14,356
that I'm going to use are going


199
00:10:14,356 --> 00:10:17,826
to be assets depicting various
landmarks in San Francisco.


200
00:10:18,896 --> 00:10:19,716
So I click Next here.


201
00:10:20,936 --> 00:10:23,126
And for now just let me
create it on my desktop.


202
00:10:23,126 --> 00:10:27,966
I'm done. Let me quickly
make Xcode bigger.


203
00:10:28,556 --> 00:10:32,556
Great. So, as you can see here
in the template that you get


204
00:10:32,556 --> 00:10:35,646
in a Sticker Pack application,
there are no source code files.


205
00:10:36,396 --> 00:10:38,986
That is a very deliberate
design of this template


206
00:10:39,226 --> 00:10:40,706
and so let me reiterate this,


207
00:10:41,076 --> 00:10:42,796
if you create a Sticker
Pack Application,


208
00:10:43,026 --> 00:10:44,436
you cannot provide any code.


209
00:10:44,626 --> 00:10:47,116
You only provide the Sticker
and the app icon assets.


210
00:10:47,986 --> 00:10:49,176
So let's see how to do that.


211
00:10:50,156 --> 00:10:51,256
I go into the Stickers --


212
00:10:51,676 --> 00:10:53,446
that's the Catalog which
has two catalogs within it.


213
00:10:53,786 --> 00:10:56,746
One is the Sticker Pack and the
other is the iMessage App Icon.


214
00:10:57,826 --> 00:10:59,136
I click on Sticker Pack.


215
00:11:00,036 --> 00:11:03,136
And, as you can see it says I do
not have any Stickers and I need


216
00:11:03,136 --> 00:11:05,566
to drag and drop the
images to add new Stickers.


217
00:11:05,986 --> 00:11:07,186
So let me do that.


218
00:11:07,796 --> 00:11:11,976
So go to Finder and
I go to Desktop.


219
00:11:12,366 --> 00:11:14,506
And I have some assets
here that I want to use.


220
00:11:15,566 --> 00:11:17,756
So I'm going to click on
the first one and I'm going


221
00:11:18,066 --> 00:11:19,336
to drag and drop it here.


222
00:11:19,406 --> 00:11:20,956
So that's Golden Gate Bridge.


223
00:11:21,546 --> 00:11:23,806
I'm going to drag
the second one.


224
00:11:23,916 --> 00:11:24,726
That's Chinatown.


225
00:11:24,786 --> 00:11:28,486
And just to be quick
I'm just going


226
00:11:28,486 --> 00:11:32,166
to select everything
else and drag it here.


227
00:11:33,436 --> 00:11:34,666
Great. So I have all my assets.


228
00:11:35,696 --> 00:11:37,396
So these assets are a PNG type.


229
00:11:37,916 --> 00:11:39,956
Xcode also allows you
to create an [inaudible]


230
00:11:40,016 --> 00:11:43,236
in your Sticker using the
individual frames of the PNG.


231
00:11:44,056 --> 00:11:45,026
Let me show you how to do that.


232
00:11:45,026 --> 00:11:48,316
So I'm going to click, or
rather right-click here


233
00:11:48,316 --> 00:11:50,406
and I'm going to
go to Add Assets.


234
00:11:51,396 --> 00:11:53,476
And I'm going to say
New Sticker Sequence.


235
00:11:54,516 --> 00:11:57,616
So when you create a new Sticker
sequence Xcode expects you


236
00:11:57,616 --> 00:12:00,446
to provide the individual
frames of the Sticker


237
00:12:00,566 --> 00:12:02,006
that you're about to create.


238
00:12:02,536 --> 00:12:04,236
So I'm going to go
back to my desktop.


239
00:12:04,236 --> 00:12:07,446
I'm going to click here where
I have the individual frames.


240
00:12:07,986 --> 00:12:10,506
I'm going to drag
the first one in.


241
00:12:11,096 --> 00:12:14,236
I'm going to drag
the second one in.


242
00:12:15,116 --> 00:12:16,006
Third one.


243
00:12:17,076 --> 00:12:18,086
And finally the fourth one.


244
00:12:19,266 --> 00:12:21,586
Now let's go back to Xcode
and see what it does.


245
00:12:21,726 --> 00:12:24,426
So as you can see, I
have an enlarged version


246
00:12:24,426 --> 00:12:26,196
of the Sticker here and click


247
00:12:26,196 --> 00:12:28,856
in its center will actually
show it to me animating.


248
00:12:28,856 --> 00:12:29,406
Looks good.


249
00:12:30,526 --> 00:12:32,316
Now let me just throw
in the app icons.


250
00:12:33,686 --> 00:12:37,686
I go to the App Icon Catalog.


251
00:12:37,686 --> 00:12:44,986
I go in here and I select
these things, drag it here.


252
00:12:45,466 --> 00:12:46,306
Looks like I may
have missed one.


253
00:12:46,306 --> 00:12:47,606
Let me quickly do
that one again.


254
00:12:52,096 --> 00:12:52,706
All right.


255
00:12:52,706 --> 00:12:54,106
So I provided the app icons.


256
00:12:54,716 --> 00:12:55,866
At this point I'm ready.


257
00:12:56,046 --> 00:12:56,906
My app is done.


258
00:12:57,106 --> 00:12:59,206
So let me try and see
how it looks like.


259
00:12:59,726 --> 00:13:01,956
I'm going to go here
and test my application


260
00:13:01,956 --> 00:13:02,906
against the simulator.


261
00:13:03,676 --> 00:13:05,206
I'm going to select iPhone 6s


262
00:13:05,206 --> 00:13:06,576
as the device I want
to test against.


263
00:13:07,886 --> 00:13:09,866
And I'm going to go to Product
and I'm going to hit Run.


264
00:13:10,496 --> 00:13:14,436
I'm just going to wait
for this thing to show up.


265
00:13:15,046 --> 00:13:16,506
Great. So Messages has shown up


266
00:13:16,506 --> 00:13:17,906
and since I'm creating
an iMessage app,


267
00:13:17,906 --> 00:13:19,606
I'm testing it against Messages.


268
00:13:20,486 --> 00:13:21,326
And I'm going to run it.


269
00:13:23,056 --> 00:13:24,286
And the simulator is launching.


270
00:13:24,576 --> 00:13:29,126
Great. So here you can see I
have two simulated conversations


271
00:13:29,126 --> 00:13:30,566
in Messages in the simulator.


272
00:13:31,526 --> 00:13:34,226
By simulated conversation what
I mean is if you go into one


273
00:13:34,226 --> 00:13:36,226
of them and send a
message, it will show


274
00:13:36,226 --> 00:13:38,886
up as an incoming message
in the other conversation.


275
00:13:39,566 --> 00:13:42,616
And just to clarify, you will
not be able to send messages


276
00:13:42,696 --> 00:13:45,856
out of the simulator
to real devices.


277
00:13:46,516 --> 00:13:50,536
So going into the first one
and I type in something.


278
00:13:51,046 --> 00:13:54,506
And at this point I'm
just talking to myself so.


279
00:13:54,836 --> 00:13:56,776
As you can see, this
is my message here.


280
00:13:56,866 --> 00:14:00,676
Great. Now let me see
what my app looks like.


281
00:14:00,756 --> 00:14:03,116
So I go in the App
Drawer, and there you go.


282
00:14:03,526 --> 00:14:06,006
My application is ready
here to be launched.


283
00:14:06,766 --> 00:14:08,066
I click on it.


284
00:14:08,836 --> 00:14:09,536
There you go.


285
00:14:09,746 --> 00:14:10,986
The assets have shown
up right there.


286
00:14:11,426 --> 00:14:15,176
These are the same assets that I
just added and I can scroll down


287
00:14:15,926 --> 00:14:18,726
and look how they look like.


288
00:14:18,726 --> 00:14:20,796
And, as you can see the
animated PNG is also here.


289
00:14:21,736 --> 00:14:24,286
And I can click on one
of them, peel them,


290
00:14:25,066 --> 00:14:26,436
drag them out of
the application,


291
00:14:26,436 --> 00:14:28,306
and attach to a message
bubble right here.


292
00:14:28,956 --> 00:14:31,386
Great. And as you can
see, I can go back out,


293
00:14:31,966 --> 00:14:33,196
go into the other conversation.


294
00:14:33,196 --> 00:14:34,026
I see the Sticker here.


295
00:14:34,456 --> 00:14:37,566
So this is how you create
a Sticker Pack application.


296
00:14:38,186 --> 00:14:40,766
However, there's one more thing
that I want to show you here


297
00:14:40,766 --> 00:14:43,606
and that is how to
customize certain aspects


298
00:14:43,606 --> 00:14:44,466
of this application.


299
00:14:45,196 --> 00:14:50,326
So going back to asset Stickers,
I will show you now how


300
00:14:50,326 --> 00:14:52,116
to change the sizes of the cells


301
00:14:52,116 --> 00:14:55,736
in which your Stickers are being
displayed in this grid here.


302
00:14:56,716 --> 00:14:58,646
So to do that, let
me go back to Xcode.


303
00:14:59,826 --> 00:15:03,276
And I'm going to click
Go To The Top right here.


304
00:15:03,906 --> 00:15:06,666
And as you can see,
there's a drop-down menu


305
00:15:06,666 --> 00:15:07,696
by the name Sticker Size.


306
00:15:08,156 --> 00:15:09,276
I click on that.


307
00:15:09,276 --> 00:15:11,726
There are three options,
Small, Medium, and Large.


308
00:15:12,476 --> 00:15:14,446
And I'm going to click
Large and see how


309
00:15:14,446 --> 00:15:15,756
that changes my application.


310
00:15:17,196 --> 00:15:17,976
I run it again.


311
00:15:22,206 --> 00:15:23,836
And Messages is launched.


312
00:15:23,976 --> 00:15:25,376
Let me go back to
my application.


313
00:15:25,946 --> 00:15:28,746
And there you go.


314
00:15:29,416 --> 00:15:32,406
As you can see, the Stickers
are now presented two-in-a-row


315
00:15:32,516 --> 00:15:33,986
and they're presented
in larger cells.


316
00:15:33,986 --> 00:15:35,226
And there's more
space between them.


317
00:15:35,466 --> 00:15:39,296
I'm going to go into more
details of the implications


318
00:15:39,296 --> 00:15:42,246
of changing the Sticker cell
size later in this session.


319
00:15:43,206 --> 00:15:45,346
In that demo I showed you how


320
00:15:45,346 --> 00:15:48,206
to create a Sticker Pack
application using Xcode


321
00:15:48,206 --> 00:15:49,786
and in this technique,
like I showed you,


322
00:15:49,916 --> 00:15:51,426
you do not have to
provide any code.


323
00:15:51,726 --> 00:15:54,666
You only provide the
assets for the Stickers


324
00:15:54,706 --> 00:15:55,896
and for your app icons.


325
00:15:57,166 --> 00:16:00,356
I also showed you how to use
the tool built into Xcode


326
00:16:00,566 --> 00:16:03,876
to create an APNG Sticker
using the individual frames


327
00:16:03,876 --> 00:16:04,746
of the APNG.


328
00:16:06,266 --> 00:16:08,166
And lastly, we also
talked about how


329
00:16:08,166 --> 00:16:09,816
to change the Sticker
cell sizes.


330
00:16:09,816 --> 00:16:14,566
Now let's talk about supported
file formats for Stickers.


331
00:16:15,116 --> 00:16:16,506
We support four formats.


332
00:16:16,806 --> 00:16:19,826
These are PNG, APNG,
JPEG, and GIFs.


333
00:16:19,826 --> 00:16:23,066
And out of these four formats,


334
00:16:23,096 --> 00:16:25,586
if you want to provide
animated Stickers,


335
00:16:25,586 --> 00:16:27,476
we support APNG and GIFs.


336
00:16:28,346 --> 00:16:31,506
We are also making certain
optimization under the hood


337
00:16:31,936 --> 00:16:34,406
to make sending Stickers
faster as compared


338
00:16:34,406 --> 00:16:37,576
to other iMessage attachments
and also to reduce the


339
00:16:37,576 --> 00:16:39,386
on disk storage space
for Stickers.


340
00:16:39,886 --> 00:16:42,536
And to help us make these
optimizations we have


341
00:16:42,536 --> 00:16:45,596
to limit the file sizes for
Stickers to 500 kilobytes.


342
00:16:45,596 --> 00:16:50,666
So as I just mentioned, we
support four file formats,


343
00:16:51,196 --> 00:16:56,146
however, we do recommend that
you use PNG and APNG for most,


344
00:16:56,146 --> 00:16:57,606
if not for all of your Stickers.


345
00:16:58,396 --> 00:17:00,826
Let's try to understand why
we have that recommendation


346
00:17:00,826 --> 00:17:02,506
by taking a look at
these screenshots.


347
00:17:03,076 --> 00:17:06,786
So here I have two conversations
which look nearly identical


348
00:17:07,156 --> 00:17:08,736
but there's a subtle
difference between them.


349
00:17:09,286 --> 00:17:10,965
And so let me zoom in
to show what that is.


350
00:17:11,066 --> 00:17:17,996
As you can see, the conversation
to the left has Sticker placed


351
00:17:17,996 --> 00:17:20,506
on the photo and it
is in PNG format.


352
00:17:21,566 --> 00:17:24,806
And the conversation to the
right has the same photo


353
00:17:24,806 --> 00:17:29,346
and the same Sticker but that
Sticker is now in a GIF format.


354
00:17:30,386 --> 00:17:33,306
If you observe carefully
and in the zoomed in areas,


355
00:17:33,826 --> 00:17:35,866
the one on the left,
that is the PNG,


356
00:17:36,306 --> 00:17:40,226
does not display any
artifacts around it's edges.


357
00:17:40,436 --> 00:17:42,216
But the one on the
right, that is the GIF,


358
00:17:42,216 --> 00:17:43,766
is displaying certain artifacts


359
00:17:43,766 --> 00:17:45,146
around the edges
of the Stickers.


360
00:17:46,126 --> 00:17:48,036
Now this is happening
because PNGs


361
00:17:48,036 --> 00:17:51,776
and APNGs handle
transparency very well


362
00:17:52,136 --> 00:17:54,446
but GIFs do not handle
transparency that well.


363
00:17:55,376 --> 00:17:58,016
And if you were to compare
the transparency properties


364
00:17:58,016 --> 00:18:02,196
of JPEGs, JPEGs in fact do not
handle transparency at all.


365
00:18:02,196 --> 00:18:06,736
And hence keep in mind your
Stickers can be dragged


366
00:18:06,736 --> 00:18:09,116
out of your applications and
attached to Message bubbles


367
00:18:09,626 --> 00:18:12,936
and therefore transparency
is a very important factor


368
00:18:13,126 --> 00:18:15,296
to consider while
designing your Stickers.


369
00:18:16,266 --> 00:18:19,136
We also request you to
please try out your Stickers


370
00:18:19,316 --> 00:18:21,526
on various colored
backgrounds like black, white,


371
00:18:21,526 --> 00:18:25,326
and even multi-colored
backgrounds because, again,


372
00:18:25,326 --> 00:18:26,856
your Stickers can
be placed on photos.


373
00:18:27,406 --> 00:18:32,336
In the demo I just showed
you how to change the sizes


374
00:18:32,336 --> 00:18:35,176
of the cells in which your
Stickers are being displayed.


375
00:18:35,956 --> 00:18:38,006
There are three supported
cell sizes


376
00:18:38,006 --> 00:18:40,286
and they are small,
regular, and large.


377
00:18:41,196 --> 00:18:44,426
And for each of these sizes
we have a recommended maximum


378
00:18:44,426 --> 00:18:46,376
dimensions of the
Stickers that it supports.


379
00:18:47,096 --> 00:18:51,516
For small it is 100 by 100
points at 3x the scale.


380
00:18:52,206 --> 00:18:55,856
For regular it is 136 by
136 points at 3x the scale.


381
00:18:56,226 --> 00:18:58,906
For large the maximum
supported dimension is 206


382
00:18:59,376 --> 00:19:01,376
by 206 points at 3x the scale.


383
00:19:02,206 --> 00:19:06,376
If you provide Stickers that
are larger than the dimensions


384
00:19:06,626 --> 00:19:09,096
that are supported by the cell
size that you have selected,


385
00:19:09,486 --> 00:19:11,736
then your Stickers will be
shrunken down and displayed


386
00:19:11,736 --> 00:19:14,696
by Messages framework and in
that case they may not look


387
00:19:14,696 --> 00:19:17,786
like exactly the way you
intended them to look like.


388
00:19:18,496 --> 00:19:20,496
But if your Stickers
are within these bounds,


389
00:19:20,556 --> 00:19:22,126
then they will be
displayed as is.


390
00:19:23,316 --> 00:19:26,436
I would also like to clarify
that we always request you


391
00:19:26,656 --> 00:19:30,126
to provide us Stickers at
3x the scale regardless


392
00:19:30,126 --> 00:19:31,806
of the resolution of the device


393
00:19:31,946 --> 00:19:33,676
in which your application
is running.


394
00:19:34,586 --> 00:19:37,356
Messages will take care of
scaling down your Stickers


395
00:19:37,786 --> 00:19:39,546
if needed according
to the device


396
00:19:39,726 --> 00:19:41,856
in which your Stickers are
being currently displayed.


397
00:19:42,406 --> 00:19:46,176
So that is all I had to talk
about the Messages framework


398
00:19:46,176 --> 00:19:47,646
and creating Sticker
applications.


399
00:19:48,016 --> 00:19:50,076
At this point I would like
to hand it over to Lily


400
00:19:50,076 --> 00:19:50,606
who is going to talk


401
00:19:50,606 --> 00:19:52,336
about creating a custom
Sticker experience.


402
00:19:52,526 --> 00:19:52,816
Thank you.


403
00:19:53,516 --> 00:19:58,156
[ Applause ]


404
00:19:58,656 --> 00:19:59,466
>> Thank you, Bhaskar.


405
00:20:00,026 --> 00:20:02,576
My name is Lily and I'm an
engineer on the Messages Team.


406
00:20:02,756 --> 00:20:03,966
I'm going to talk to you


407
00:20:03,966 --> 00:20:06,256
about creating a custom
Sticker application.


408
00:20:07,326 --> 00:20:08,806
First, why would you want


409
00:20:08,806 --> 00:20:10,416
to create a custom
Sticker application?


410
00:20:11,016 --> 00:20:13,546
The first major benefit
is you will be able


411
00:20:13,546 --> 00:20:16,446
to customize how you display
Stickers in your application.


412
00:20:16,926 --> 00:20:19,756
In our previous example
we saw Stickers displayed


413
00:20:19,756 --> 00:20:20,956
in a nice grid layout.


414
00:20:21,366 --> 00:20:23,566
However, if you wanted
to position your Stickers


415
00:20:23,626 --> 00:20:26,226
in any other format or even
change the background color,


416
00:20:26,516 --> 00:20:28,706
you would need to create a
custom Sticker application.


417
00:20:29,746 --> 00:20:32,626
A custom Sticker
application will allow you


418
00:20:32,626 --> 00:20:34,066
to dynamically create stickers.


419
00:20:34,546 --> 00:20:37,176
In our previous example
we bundled assets


420
00:20:37,176 --> 00:20:39,016
into our application
and in order


421
00:20:39,016 --> 00:20:40,876
to update those assets
we would have


422
00:20:40,876 --> 00:20:42,436
to push an update
to the App Store.


423
00:20:43,146 --> 00:20:45,206
If you want to pull your
assets from your servers,


424
00:20:45,206 --> 00:20:47,276
or allow you users to
dynamically create them


425
00:20:47,276 --> 00:20:50,476
on device, they could do so and
then you wouldn't have to update


426
00:20:50,786 --> 00:20:52,456
through the App Store.


427
00:20:52,876 --> 00:20:55,816
Messages extensions will
also provide camera access,


428
00:20:56,196 --> 00:20:58,926
allowing your users to create
fun Stickers using the camera.


429
00:20:59,596 --> 00:21:03,986
And finally your application
can utilize In-app purchases,


430
00:21:04,286 --> 00:21:06,176
allowing your users
to unlock Stickers.


431
00:21:07,086 --> 00:21:09,446
We can create a custom
Sticker application using


432
00:21:09,446 --> 00:21:10,326
Messages framework.


433
00:21:10,916 --> 00:21:13,156
Messages framework
provides the building blocks


434
00:21:13,156 --> 00:21:14,786
for creating a Sticker
application.


435
00:21:14,786 --> 00:21:17,576
In our example of Sticker
Pack applications built


436
00:21:17,576 --> 00:21:20,716
through Xcode, they use the
same classes in this framework


437
00:21:20,916 --> 00:21:23,546
so you could ideally create
the same application using


438
00:21:23,546 --> 00:21:24,376
Messages framework.


439
00:21:24,676 --> 00:21:28,836
In the screenshot we have
onscreen we have an application


440
00:21:28,836 --> 00:21:29,956
that's displaying Stickers.


441
00:21:30,246 --> 00:21:32,456
Well, you'll notice that the
background color is pink.


442
00:21:32,726 --> 00:21:34,736
So I'm going to show
you how we can customize


443
00:21:34,736 --> 00:21:36,036
and create an application
like this.


444
00:21:36,316 --> 00:21:37,416
So let's go into a demo.


445
00:21:39,166 --> 00:21:43,766
So I'm going to open
up Xcode and I'm going


446
00:21:43,936 --> 00:21:45,366
to create a new project.


447
00:21:46,876 --> 00:21:49,046
Bhaskar created a
Sticker Pack application


448
00:21:49,046 --> 00:21:51,456
but this time we're going to
create a Messages application.


449
00:21:51,576 --> 00:21:54,326
So I'm going to go
ahead and choose that.


450
00:21:54,326 --> 00:21:56,676
And I'm going to call my
project "Nature Stickies"


451
00:21:57,086 --> 00:21:59,116
as we're going to
use nature assets.


452
00:21:59,736 --> 00:22:01,846
And we'll go ahead and
create this project


453
00:22:01,846 --> 00:22:03,746
and we'll put it on our desktop.


454
00:22:04,966 --> 00:22:09,186
Great. So you'll see here
that we have two folders:


455
00:22:09,376 --> 00:22:11,326
Nature Stickies and
Messages Extension.


456
00:22:11,796 --> 00:22:13,466
Nature Stickies does
not have source code


457
00:22:13,466 --> 00:22:15,626
as this is the containing
bundle application.


458
00:22:15,926 --> 00:22:18,836
You'll provide an app icon
here for your System Settings.


459
00:22:19,246 --> 00:22:22,526
However, we're interested in
the folder, Messages Extension.


460
00:22:22,746 --> 00:22:25,696
So we're going to go ahead and
click on MessagesViewController.


461
00:22:25,956 --> 00:22:28,976
And we'll see that
MessagesViewController is going


462
00:22:28,976 --> 00:22:30,016
to be our principal class.


463
00:22:30,556 --> 00:22:33,346
It is a subclass of the
MSMessagesAppViewController.


464
00:22:33,816 --> 00:22:37,546
The MSMessagesAppViewController
is going to be the controller


465
00:22:37,546 --> 00:22:40,006
that handles callbacks from
the Messages application.


466
00:22:40,646 --> 00:22:42,686
We'll be talking more
about these callbacks


467
00:22:42,686 --> 00:22:44,796
and how your application
can handle them


468
00:22:44,996 --> 00:22:46,056
in Part 2 of our talk.


469
00:22:46,436 --> 00:22:48,756
So we can go ahead and get
rid of these functions here.


470
00:22:49,756 --> 00:22:54,656
I'm going to select them
and then press Delete.


471
00:22:55,676 --> 00:22:58,376
Great. So let's take a
look at Messages framework.


472
00:22:59,346 --> 00:23:03,106
If we click here we have an
MSStickerBrowserViewController.


473
00:23:03,576 --> 00:23:05,296
The
MSStickerBrowseViewController


474
00:23:05,296 --> 00:23:06,716
will allow us to
display stickers.


475
00:23:06,716 --> 00:23:08,476
It has two properties.


476
00:23:09,046 --> 00:23:11,756
It has an MSStickerBrowserView
which is the view


477
00:23:11,756 --> 00:23:13,046
that our Stickers
will be displayed in.


478
00:23:13,046 --> 00:23:17,746
And it also has an MSStickerSize
which decide the cell sizes


479
00:23:17,746 --> 00:23:20,396
of our grid for the
MSStickerBrowserView.


480
00:23:21,096 --> 00:23:24,006
We'll also see that the
MSStickerBrowserViewController


481
00:23:24,336 --> 00:23:24,946
conforms


482
00:23:24,946 --> 00:23:27,296
to the MSStickerBrowserView
DataSource protocol.


483
00:23:27,866 --> 00:23:30,826
This protocol, when implemented,
will return the number


484
00:23:30,826 --> 00:23:33,406
of Stickers your
application will be displaying


485
00:23:33,406 --> 00:23:36,536
and the Sticker at a given index
for the MSStickerBrowserView.


486
00:23:36,536 --> 00:23:38,696
So if we want to
display our Stickers,


487
00:23:38,696 --> 00:23:41,386
we'll need to create an
MSStickerBrowserViewController.


488
00:23:41,666 --> 00:23:43,576
And to implement the data
source we'll go ahead


489
00:23:43,576 --> 00:23:44,336
and subclass this.


490
00:23:45,126 --> 00:23:47,676
So I'm going to go ahead
and create a new file.


491
00:23:47,736 --> 00:23:52,116
And I'm going to choose
Swift and click Next.


492
00:23:52,216 --> 00:23:55,306
And I'm going to call
this NatureStickerBrowser


493
00:23:56,026 --> 00:23:56,736
ViewController.


494
00:23:57,316 --> 00:24:04,036
Great. So I'm going to go
ahead and import UIKit.


495
00:24:04,806 --> 00:24:08,956
And then I'll go ahead
and import Messages.


496
00:24:10,246 --> 00:24:12,786
Great. So now let's
create our class.


497
00:24:13,406 --> 00:24:17,266
I'm going to go ahead and
create our NatureStickerBrowser


498
00:24:17,266 --> 00:24:19,256
ViewController class
as a subclass


499
00:24:19,256 --> 00:24:20,976
of the
MSStickerBrowserViewController.


500
00:24:21,676 --> 00:24:22,416
As I mentioned,


501
00:24:22,416 --> 00:24:23,996
the
MSStickerBrowserViewController


502
00:24:24,436 --> 00:24:26,786
has two data source methods
that we'll need to implement.


503
00:24:26,876 --> 00:24:28,916
So I'll go ahead
and fill those in.


504
00:24:29,906 --> 00:24:31,606
So now we'll need a way


505
00:24:31,606 --> 00:24:33,266
to create our Stickers
and store them.


506
00:24:33,326 --> 00:24:38,836
I'm going to go ahead and create
an array to hold our Stickers


507
00:24:38,986 --> 00:24:42,306
and we'll see that our
Stickers are at MSSticker.


508
00:24:42,586 --> 00:24:45,716
And MSSticker is an
object that has a file URL


509
00:24:45,716 --> 00:24:47,176
that points to an asset on disk.


510
00:24:47,516 --> 00:24:49,696
It will also have a
localized description


511
00:24:49,996 --> 00:24:51,636
which will be used
for accessibility.


512
00:24:52,586 --> 00:24:54,216
So let's go ahead
and create a Sticker.


513
00:24:54,476 --> 00:24:58,086
I'm going to go ahead and
add assets to our bundle.


514
00:24:58,676 --> 00:25:02,916
I'm going to click Add Files
and then go to my desktop


515
00:25:03,316 --> 00:25:05,946
and choose these assets here.


516
00:25:05,946 --> 00:25:08,966
And I've added them
to my application.


517
00:25:08,966 --> 00:25:12,136
In this example we're just
adding assets to our application


518
00:25:12,376 --> 00:25:14,886
but you can imagine how your
applications can either pull


519
00:25:14,886 --> 00:25:17,146
these assets from your
servers or allow your users


520
00:25:17,146 --> 00:25:18,136
to create them on device.


521
00:25:18,896 --> 00:25:20,586
So now we'll need
to create a Sticker.


522
00:25:22,576 --> 00:25:24,766
So we'll write a
function to do that.


523
00:25:25,886 --> 00:25:28,926
Great. So here we
take our bundle.


524
00:25:28,926 --> 00:25:31,746
We create a file URL
pointing to our asset on disk,


525
00:25:31,746 --> 00:25:33,806
and then we initialize
our MSSticker


526
00:25:34,206 --> 00:25:36,666
with a localized description,
and then add it to our array.


527
00:25:37,286 --> 00:25:38,936
So now let's go ahead
and write a function


528
00:25:38,936 --> 00:25:40,226
that will load all
of the Stickers.


529
00:25:43,316 --> 00:25:46,936
Cool. So now we can go back
to our MessagesViewController


530
00:25:48,066 --> 00:25:50,306
and create an instance.


531
00:25:51,376 --> 00:25:53,876
And we'll create a
NatureStickerBrowser


532
00:25:53,876 --> 00:25:57,556
ViewController, and we'll
instantiate it, and viewDidLoad.


533
00:26:00,836 --> 00:26:04,756
Great. So now we instantiated
our browserViewController


534
00:26:05,046 --> 00:26:06,176
with a Sticker size.


535
00:26:06,556 --> 00:26:09,316
This will allow your application
to display your Stickers


536
00:26:09,316 --> 00:26:11,206
in the grid layouts that
we showed you earlier.


537
00:26:11,846 --> 00:26:14,176
So this application will
create a Sticker application


538
00:26:14,176 --> 00:26:16,166
like we did through
Xcode without code.


539
00:26:16,486 --> 00:26:18,016
So let's go ahead
and customize this.


540
00:26:18,086 --> 00:26:20,226
I'm going to write a
function that will allow me


541
00:26:20,226 --> 00:26:22,976
to change the background color
of our MSStickerBrowserView.


542
00:26:24,556 --> 00:26:26,026
So we'll write that
function here.


543
00:26:26,026 --> 00:26:28,296
And we're just changing
the background color


544
00:26:28,296 --> 00:26:29,516
of the MSStickerBrowserView.


545
00:26:29,516 --> 00:26:31,026
And I'm going to go back


546
00:26:31,026 --> 00:26:36,966
to the MessagesViewController
and call that.


547
00:26:36,966 --> 00:26:39,596
So now we can change
the background.


548
00:26:40,036 --> 00:26:42,466
And let's go ahead and
run our application.


549
00:26:43,016 --> 00:26:45,956
So I'm going to choose
the iPhone 6s


550
00:26:46,666 --> 00:26:52,416
and I'm going to hit Run.


551
00:26:52,606 --> 00:26:54,086
Oops. Oh, I forgot something.


552
00:26:54,086 --> 00:26:55,746
We forgot to actually
implement our data source.


553
00:26:55,896 --> 00:26:57,466
So let's go ahead and do that.


554
00:26:58,176 --> 00:27:02,956
So I'm going to return the
Stickers count and I'm going


555
00:27:02,956 --> 00:27:07,036
to return a Sticker
out of given index.


556
00:27:07,886 --> 00:27:08,996
And now we're ready to run.


557
00:27:11,056 --> 00:27:13,666
So I'll choose Messages as the
application I want to run in.


558
00:27:20,416 --> 00:27:23,066
Great. And now we can
open up the App Drawer


559
00:27:23,136 --> 00:27:28,196
and then you'll see that
we don't have an icon


560
00:27:28,196 --> 00:27:29,296
because we forgot to add that.


561
00:27:29,596 --> 00:27:32,226
And we'll see that we have our
app named Messages Extension.


562
00:27:32,666 --> 00:27:35,006
In order to change what our
display name is we would have


563
00:27:35,006 --> 00:27:38,026
to go into our project, click on
the Messages Extension Target,


564
00:27:38,026 --> 00:27:39,576
and then we could
change it here.


565
00:27:40,186 --> 00:27:45,426
But for now let's just see what
our application looks like.


566
00:27:48,976 --> 00:27:52,306
So you'll see we now have an
application that has Stickers


567
00:27:52,406 --> 00:27:53,286
with a pink background.


568
00:27:54,096 --> 00:27:55,356
So this is one small example


569
00:27:55,356 --> 00:27:57,546
of how you can customize
your Sticker applications.


570
00:27:57,946 --> 00:27:59,106
So let's go back to the slides.


571
00:27:59,916 --> 00:28:01,496
So to recap what
we just went over,


572
00:28:01,996 --> 00:28:05,046
we introduced the
MSStickerBrowserView Controller.


573
00:28:05,366 --> 00:28:07,316
This ViewController
will display Stickers


574
00:28:07,316 --> 00:28:10,366
in your application using
the MSStickerBrowserView.


575
00:28:11,036 --> 00:28:12,846
This controller also conforms


576
00:28:12,986 --> 00:28:15,276
to the MSStickerBrowserView
DataSource protocol.


577
00:28:16,046 --> 00:28:17,756
This protocol will
return the number


578
00:28:17,756 --> 00:28:20,076
of Stickers your
application will be displaying


579
00:28:20,126 --> 00:28:21,086
and the given Sticker.


580
00:28:21,326 --> 00:28:24,266
We also introduced the MS
MessagesAppViewController.


581
00:28:24,766 --> 00:28:27,946
This ViewController is what your
principal class will subclass.


582
00:28:28,406 --> 00:28:31,196
This MSMessagesAppViewController
handles callbacks


583
00:28:31,236 --> 00:28:32,596
from the Messages application.


584
00:28:32,956 --> 00:28:34,946
Again, we'll talk more
about this in Part 2


585
00:28:34,946 --> 00:28:37,106
and how your application
can handle these callbacks.


586
00:28:37,386 --> 00:28:38,866
So that was a small example


587
00:28:38,866 --> 00:28:41,036
of how we could customize
a Sticker application


588
00:28:41,036 --> 00:28:42,446
by just changing the
background color.


589
00:28:42,766 --> 00:28:45,626
But what if we want to do more?


590
00:28:45,626 --> 00:28:49,696
Your application can add Sticker
support using just two classes,


591
00:28:50,136 --> 00:28:52,236
the MSStickerView
and an MSSticker.


592
00:28:52,966 --> 00:28:54,766
So if we wanted to
create an application


593
00:28:54,766 --> 00:28:56,566
that displays Stickers
in a different way


594
00:28:56,566 --> 00:28:58,366
than the
MSStickerBrowserViewController


595
00:28:58,366 --> 00:29:01,866
does, we can do so by
using these two classes.


596
00:29:02,516 --> 00:29:05,266
On the example I have behind
me we have an application.


597
00:29:05,626 --> 00:29:07,166
This application
is actually using a


598
00:29:07,166 --> 00:29:10,196
UICollectionViewController
to display Stickers.


599
00:29:10,856 --> 00:29:11,886
And each cell


600
00:29:11,886 --> 00:29:14,496
of the UICollectionView
has an MSStickerView.


601
00:29:14,656 --> 00:29:18,106
The MSStickerView is the class
that will be providing the drag


602
00:29:18,106 --> 00:29:19,856
and drop functionality
of Stickers


603
00:29:19,856 --> 00:29:21,186
into the Messages transcript.


604
00:29:22,196 --> 00:29:24,316
So we also see that
there's a Plus icon


605
00:29:24,606 --> 00:29:26,206
which doesn't have
the MSStickerView.


606
00:29:26,516 --> 00:29:28,556
Tapping it will expand
our application,


607
00:29:28,986 --> 00:29:33,856
allow us to choose a Sticker,
and add it to our collection.


608
00:29:33,856 --> 00:29:35,276
Also note that we were able


609
00:29:35,276 --> 00:29:37,636
to transition how our
Stickers were displayed.


610
00:29:37,916 --> 00:29:39,636
Your application
can go from being


611
00:29:39,636 --> 00:29:41,866
in a compact mode
to an expanded mode.


612
00:29:42,406 --> 00:29:45,216
Your users can also
toggle this so by clicking


613
00:29:45,216 --> 00:29:46,416
on the chevron in the bottom.


614
00:29:46,506 --> 00:29:49,416
So your application will have
to be able to handle being


615
00:29:49,416 --> 00:29:51,176
in a compact and
an expanded mode.


616
00:29:51,606 --> 00:29:53,706
So I'm going to show you how
you can handle these callbacks


617
00:29:53,706 --> 00:29:55,186
and create an application
like this.


618
00:29:55,386 --> 00:29:56,796
So let's go into another demo.


619
00:29:56,796 --> 00:30:01,776
So I'm going to open up an
application I already have.


620
00:30:02,746 --> 00:30:03,906
And it's called Sticker Picker.


621
00:30:07,566 --> 00:30:09,236
And let's go ahead
and make this bigger.


622
00:30:09,846 --> 00:30:12,246
Great. So we're back in
our MessagesViewController


623
00:30:12,656 --> 00:30:14,436
which is our principal
class, again,


624
00:30:14,436 --> 00:30:17,136
subclassing the
MSMessagesAppViewController.


625
00:30:17,976 --> 00:30:19,836
We had two views
that we displayed,


626
00:30:19,906 --> 00:30:22,246
our UICollectionView
holding MSStickerViews,


627
00:30:22,536 --> 00:30:24,576
and we also had a view
that would allow us


628
00:30:24,576 --> 00:30:25,956
to add Stickers to
our application.


629
00:30:26,336 --> 00:30:28,236
These two views are
going to be represented


630
00:30:28,236 --> 00:30:30,316
in a StickerPickerCollection
ViewController


631
00:30:30,676 --> 00:30:32,386
and in an
AddStickersViewController.


632
00:30:32,916 --> 00:30:33,776
Let's take a look


633
00:30:33,776 --> 00:30:36,206
at the StickerPickerCollection
ViewController.


634
00:30:37,366 --> 00:30:39,346
The StickerPickerCollection
ViewController,


635
00:30:40,006 --> 00:30:42,736
subclass is a
UICollectionViewController.


636
00:30:43,196 --> 00:30:45,466
The items that we'll have
are a CollectionViewItem.


637
00:30:45,806 --> 00:30:48,536
So it can either be
the AddSticker item


638
00:30:48,836 --> 00:30:49,796
or it could be a Sticker.


639
00:30:50,096 --> 00:30:52,036
So let's go ahead and
look at the Sticker cell.


640
00:30:53,136 --> 00:30:54,996
The Sticker cell has
an MSStickerView.


641
00:30:54,996 --> 00:30:59,106
The MSStickerView will
have a Sticker and,


642
00:30:59,806 --> 00:31:03,176
in order to handle animations
of your animated Stickers,


643
00:31:03,476 --> 00:31:06,766
we would have to call
startAnimating and stopAnimating


644
00:31:06,946 --> 00:31:08,746
when we are displaying
our MSStickerView.


645
00:31:09,896 --> 00:31:10,676
So let's go back


646
00:31:10,676 --> 00:31:12,576
to the StickerPickerCollection
ViewController.


647
00:31:14,636 --> 00:31:19,536
Great. So when we create this
ViewController we're going


648
00:31:19,536 --> 00:31:21,206
to go ahead and create
all of our items.


649
00:31:21,896 --> 00:31:23,706
We'll create an AddStickerItem


650
00:31:23,706 --> 00:31:25,526
and then we'll load our
Stickers the same way we did


651
00:31:25,526 --> 00:31:26,586
in our previous example.


652
00:31:27,166 --> 00:31:29,426
We'll return the number of
items in our collectionView


653
00:31:30,036 --> 00:31:33,046
and we'll create Sticker
cells or the Add Sticker cell


654
00:31:33,046 --> 00:31:36,316
for an item at a
given index path.


655
00:31:36,486 --> 00:31:38,856
When creating the Sticker
cell we're going to want


656
00:31:38,856 --> 00:31:41,386
to assign the Sticker
value of our stickerView.


657
00:31:41,386 --> 00:31:42,976
So let's go ahead and do that.


658
00:31:47,256 --> 00:31:50,876
So we have now put a
Sticker on our stickerView.


659
00:31:50,876 --> 00:31:54,276
And, as I mentioned, our
Stickers can be animated.


660
00:31:54,386 --> 00:31:57,696
And we'll need to be calling
start and stopAnimating


661
00:31:57,816 --> 00:31:59,086
to control these animations.


662
00:31:59,366 --> 00:32:02,096
When we're going to display
our Sticker we're going to want


663
00:32:02,096 --> 00:32:05,236
to call startAnimating and when
we stop displaying our Sticker


664
00:32:05,236 --> 00:32:07,036
we're going to want
to call stopAnimating.


665
00:32:07,546 --> 00:32:08,986
So we can write a
function to check


666
00:32:08,986 --> 00:32:10,756
if the Sticker is
animatable or not


667
00:32:11,206 --> 00:32:15,316
by loading the image file URL,
and using a CG image source,


668
00:32:15,466 --> 00:32:16,936
and counting the frames.


669
00:32:17,256 --> 00:32:18,706
If we have more than one frame,


670
00:32:18,736 --> 00:32:20,466
we know that we have
an animated Sticker.


671
00:32:21,296 --> 00:32:23,336
So we'll go ahead
and implement this.


672
00:32:24,826 --> 00:32:26,056
So we'll check to see


673
00:32:26,306 --> 00:32:28,706
if our Sticker cell
Sticker can animate.


674
00:32:28,706 --> 00:32:31,216
And if it can, then we'll
call startAnimating.


675
00:32:31,216 --> 00:32:36,966
And then when we're done
displaying our cell we'll go


676
00:32:36,966 --> 00:32:41,026
ahead and check if our Sticker
is animating, and if it is,


677
00:32:41,026 --> 00:32:42,366
we'll call stopAnimating.


678
00:32:43,586 --> 00:32:46,226
Great. So let's go back to
the MessagesViewController.


679
00:32:46,226 --> 00:32:48,576
And we'll go ahead


680
00:32:48,576 --> 00:32:50,636
and instantiate the
StickerPickerViewController


681
00:32:50,636 --> 00:32:52,776
as that's going to be
the view we want loaded


682
00:32:52,776 --> 00:32:54,276
when we first launch
our application.


683
00:32:54,706 --> 00:32:57,026
So we'll do that in viewDidLoad
and then we'll present it.


684
00:32:57,026 --> 00:33:01,486
When the user taps the
Add icon we'll want


685
00:33:01,486 --> 00:33:03,026
to create the
AddStickersViewController.


686
00:33:03,026 --> 00:33:05,276
And then we're going
to want to transition


687
00:33:05,276 --> 00:33:06,216
into an expanded mode.


688
00:33:06,606 --> 00:33:09,216
We can do so by calling
requestPresentationStyle.


689
00:33:09,336 --> 00:33:11,316
This will tell the
Messages application


690
00:33:11,546 --> 00:33:13,526
that your application
wants to be expanded.


691
00:33:14,176 --> 00:33:15,156
You'll then get a call back


692
00:33:15,156 --> 00:33:17,116
from the Messages
application once you've done


693
00:33:17,116 --> 00:33:17,856
this transition.


694
00:33:18,306 --> 00:33:18,546
So


695
00:33:18,546 --> 00:33:21,956
in didTransitiontopresentation
Style we'll get a call back


696
00:33:22,206 --> 00:33:23,786
and we'll first check to see


697
00:33:23,786 --> 00:33:25,676
if we have an
AddStickersViewController.


698
00:33:25,876 --> 00:33:28,936
And if we do and our
presentation style is expanded,


699
00:33:29,086 --> 00:33:30,576
we'll go ahead and
present that view.


700
00:33:30,836 --> 00:33:33,916
Or else we'll present the other
view we want to show in compact.


701
00:33:34,206 --> 00:33:36,086
After we choose a Sticker
we're going to want


702
00:33:36,086 --> 00:33:37,156
to go back to compact.


703
00:33:37,266 --> 00:33:39,966
So we'll then again call
requestPresentationStyle


704
00:33:39,966 --> 00:33:40,806
.compact.


705
00:33:41,536 --> 00:33:43,216
So if we run our
application we'll be able


706
00:33:43,216 --> 00:33:44,256
to see all of this in play.


707
00:33:44,456 --> 00:33:48,346
So I'm going to go ahead
and choose Messages


708
00:33:48,346 --> 00:33:49,856
as the application
I want to run.


709
00:33:50,386 --> 00:33:55,236
And we're going to launch.


710
00:33:56,406 --> 00:33:59,996
I'm going to go ahead and
click on the App Drawer.


711
00:33:59,996 --> 00:34:01,826
And we're going to
click on Sticker Picker


712
00:34:04,436 --> 00:34:09,556
and wait for it to load.


713
00:34:09,556 --> 00:34:12,746
Great. So now we can go
ahead and add a Sticker.


714
00:34:12,746 --> 00:34:16,235
And I'm going to choose
this cute panda right here.


715
00:34:16,235 --> 00:34:18,985
And we'll see it
also animating here.


716
00:34:18,985 --> 00:34:20,565
And then we can send
our Stickers.


717
00:34:21,996 --> 00:34:25,795
So to recap what we just
went over, we introduced,


718
00:34:26,045 --> 00:34:28,866
we showed you how to create
a Sticker application using a


719
00:34:28,866 --> 00:34:31,306
UICollectionView and
in each of the cells


720
00:34:31,306 --> 00:34:34,036
of the UICollectionView
we had an MSStickerView.


721
00:34:34,036 --> 00:34:37,696
The MSStickerView allowed
us to drag and drop Stickers


722
00:34:37,696 --> 00:34:40,386
into the transcript and
it also had an MSSticker.


723
00:34:41,606 --> 00:34:44,286
We also showed you how you
can transition from a compact


724
00:34:44,286 --> 00:34:45,866
to an expanded presentation
style.


725
00:34:46,366 --> 00:34:48,936
And we also showed you how
you can handle such callbacks


726
00:34:48,936 --> 00:34:50,216
from the Messages application.


727
00:34:50,606 --> 00:34:52,856
Remember that your users
can toggle between the two


728
00:34:52,856 --> 00:34:55,696
by tapping on the chevron icon
so please keep that in mind


729
00:34:55,696 --> 00:34:56,916
on designing your application.


730
00:34:58,676 --> 00:35:01,836
Bhaskar talked about the Sticker
File Formats that we used


731
00:35:01,836 --> 00:35:03,776
when creating a Sticker
Pack Application.


732
00:35:04,116 --> 00:35:06,106
These same file formats apply


733
00:35:06,106 --> 00:35:07,856
to creating a custom
Sticker application.


734
00:35:08,306 --> 00:35:09,816
So to summarize what
we went over today,


735
00:35:10,366 --> 00:35:13,926
we introduced iMessage apps as a
platform to you as a developer.


736
00:35:14,276 --> 00:35:16,216
There's a new way to
interact with Messages


737
00:35:16,216 --> 00:35:17,696
and it's really fun
and exciting.


738
00:35:18,586 --> 00:35:20,176
We also introduced
Messages framework


739
00:35:20,176 --> 00:35:22,996
and how you could create
Sticker Pack Applications using


740
00:35:22,996 --> 00:35:23,836
Messages framework.


741
00:35:25,106 --> 00:35:27,896
We showed you how to create a
Sticker Pack Application using


742
00:35:27,896 --> 00:35:29,066
Xcode with no code.


743
00:35:29,066 --> 00:35:30,806
And we also showed you how


744
00:35:30,806 --> 00:35:33,646
to programmatically create a
custom Sticker application.


745
00:35:34,286 --> 00:35:36,646
In Part 2 of our talk
we're going to show you how


746
00:35:36,646 --> 00:35:39,376
to create an application that
will allow your application


747
00:35:39,376 --> 00:35:40,726
to send interactive messages.


748
00:35:41,526 --> 00:35:43,556
For more information
please visit the website


749
00:35:43,556 --> 00:35:46,946
and we'll have a related session
back here in the Presidio


750
00:35:46,946 --> 00:35:48,686
at 1:40 p.m. on Thursday.


751
00:35:49,026 --> 00:35:49,856
Thank you so much.


752
00:35:50,306 --> 00:35:51,956
We can't wait to see
what you guys create


753
00:35:51,956 --> 00:35:52,986
and please come to our labs.


754
00:35:53,466 --> 00:35:54,576
Have a great rest
of the conference.


755
00:35:55,016 --> 00:35:57,000
[ Applause ]

