1
00:00:07,516 --> 00:00:20,516
[ Music ]


2
00:00:21,516 --> 00:00:29,186
[ Applause ]


3
00:00:29,686 --> 00:00:31,336
>> Good afternoon, I'm Jason


4
00:00:31,336 --> 00:00:32,986
Morley, a software engineer on


5
00:00:32,986 --> 00:00:34,406
the Health Team here at Apple.


6
00:00:34,696 --> 00:00:36,306
And along with my colleague


7
00:00:36,306 --> 00:00:38,176
Peyton I'd like to take some


8
00:00:38,176 --> 00:00:39,576
time to introduce you to an


9
00:00:39,576 --> 00:00:41,606
exciting new feature we have in


10
00:00:41,736 --> 00:00:44,686
iOS 12 this year, access to


11
00:00:44,686 --> 00:00:46,546
health records with HealthKit.


12
00:00:46,976 --> 00:00:52,136
Earlier this year in iOS 11.3 we


13
00:00:52,136 --> 00:00:53,746
introduced Health Records and


14
00:00:53,746 --> 00:00:54,106
Health.


15
00:00:55,376 --> 00:00:56,586
Users can connect to their


16
00:00:56,586 --> 00:00:58,426
healthcare institutions and


17
00:00:58,426 --> 00:01:00,186
securely download their health


18
00:01:00,186 --> 00:01:02,716
records for quick access and


19
00:01:02,716 --> 00:01:03,496
safekeeping.


20
00:01:04,726 --> 00:01:07,006
We aggregate data from multiple


21
00:01:07,006 --> 00:01:08,756
healthcare institutions and


22
00:01:08,756 --> 00:01:10,246
present it in a timeline


23
00:01:10,666 --> 00:01:12,676
allowing users to search and


24
00:01:12,676 --> 00:01:15,186
surfacing important details like


25
00:01:15,316 --> 00:01:17,486
lab values and reference ranges


26
00:01:18,056 --> 00:01:19,226
really helping users to better


27
00:01:19,226 --> 00:01:22,000
understand their health data.


28
00:01:25,046 --> 00:01:25,986
As of today we have support for


29
00:01:26,026 --> 00:01:28,616
more than 500 US hospitals and


30
00:01:28,616 --> 00:01:31,466
clinics covering over 50


31
00:01:31,646 --> 00:01:33,796
healthcare institutions and we


32
00:01:33,796 --> 00:01:38,926
are continuing to add more.


33
00:01:39,116 --> 00:01:40,096
Of course this wouldn't be


34
00:01:40,096 --> 00:01:41,786
possible without the fantastic


35
00:01:41,786 --> 00:01:43,896
standards work of the Health


36
00:01:43,896 --> 00:01:46,846
Level Seven organization with


37
00:01:46,846 --> 00:01:48,156
their fast healthcare


38
00:01:48,156 --> 00:01:50,046
interoperability resources or


39
00:01:50,366 --> 00:01:53,766
FHIR and the Smart health IT


40
00:01:53,766 --> 00:01:54,306
project.


41
00:01:57,016 --> 00:01:59,226
For us it all starts with


42
00:01:59,296 --> 00:02:02,156
health, we establish a secure


43
00:02:02,156 --> 00:02:03,586
connection to healthcare


44
00:02:03,586 --> 00:02:07,176
institutions and download users'


45
00:02:07,176 --> 00:02:09,496
health records in FHIR direct to


46
00:02:09,496 --> 00:02:10,675
their iOS devices.


47
00:02:12,496 --> 00:02:14,816
From here we it store securely


48
00:02:14,816 --> 00:02:18,266
in HealthKit and aggregate data


49
00:02:18,296 --> 00:02:20,076
across multiple institutions.


50
00:02:21,876 --> 00:02:24,986
Starting today in iOS 12 we are


51
00:02:24,986 --> 00:02:26,986
providing APIs to allow you to


52
00:02:26,986 --> 00:02:28,916
access this data and work with


53
00:02:28,916 --> 00:02:30,000
it in your apps.


54
00:02:36,046 --> 00:02:36,846
First, I'm going to introduce


55
00:02:36,846 --> 00:02:38,536
the new sample types that we've


56
00:02:38,536 --> 00:02:39,956
added to support this feature.


57
00:02:41,476 --> 00:02:42,916
Then we can see how you


58
00:02:42,916 --> 00:02:44,766
authorize your application and


59
00:02:44,766 --> 00:02:48,000
query for data.


60
00:02:48,056 --> 00:02:49,556
After that, I'll take a brief


61
00:02:49,556 --> 00:02:51,286
dive into FHIR and show you


62
00:02:51,286 --> 00:02:52,876
what's possible here.


63
00:02:54,276 --> 00:02:56,706
And finally, we can take some


64
00:02:56,706 --> 00:02:58,336
time to think about how you can


65
00:02:58,336 --> 00:03:00,606
help protect your users' privacy


66
00:03:00,876 --> 00:03:04,976
in this sensitive domain.


67
00:03:05,116 --> 00:03:06,116
So let's jump right in.


68
00:03:08,156 --> 00:03:10,086
If you've used HealthKit before


69
00:03:10,196 --> 00:03:11,766
you may be familiar with


70
00:03:11,766 --> 00:03:14,246
HKSampleType and its subclasses.


71
00:03:15,216 --> 00:03:16,696
These group similar types of


72
00:03:16,696 --> 00:03:20,336
data, for example QuantityType


73
00:03:20,856 --> 00:03:22,846
groups data represented by a


74
00:03:22,846 --> 00:03:25,286
single numerical value, things


75
00:03:25,286 --> 00:03:27,396
like step count and heart rate.


76
00:03:28,656 --> 00:03:30,416
While CategoryType groups data


77
00:03:30,416 --> 00:03:32,336
characterized by enumeration,


78
00:03:32,926 --> 00:03:34,736
things like sleep analysis, am I


79
00:03:34,846 --> 00:03:37,936
in bed or asleep or menstrual


80
00:03:37,936 --> 00:03:39,636
flow, heavy or light.


81
00:03:40,316 --> 00:03:43,506
And to support Health Records


82
00:03:43,506 --> 00:03:46,256
we're introducing HKClinicalType


83
00:03:46,646 --> 00:03:48,026
which groups the categories of


84
00:03:48,196 --> 00:03:50,146
health records that you see in


85
00:03:50,146 --> 00:03:52,286
Health, things like conditions


86
00:03:52,366 --> 00:03:52,976
and medications.


87
00:03:57,046 --> 00:03:58,116
Within each of these sample


88
00:03:58,196 --> 00:04:00,076
types the different data types


89
00:04:00,116 --> 00:04:01,876
are differentiated by a type


90
00:04:01,876 --> 00:04:02,576
identifier.


91
00:04:03,966 --> 00:04:05,886
HKClinicalType identifier


92
00:04:06,246 --> 00:04:08,246
identifies the clinical types


93
00:04:08,766 --> 00:04:10,316
that correspond with the


94
00:04:10,316 --> 00:04:12,806
categories of Health Records and


95
00:04:13,436 --> 00:04:13,796
Health.


96
00:04:14,456 --> 00:04:18,805
We have allergies, conditions,


97
00:04:18,956 --> 00:04:20,236
these might be short-term


98
00:04:20,236 --> 00:04:22,446
conditions such as pregnancy or


99
00:04:22,446 --> 00:04:24,346
ongoing conditions like type II


100
00:04:24,346 --> 00:04:28,606
diabetes, immunizations, lab


101
00:04:29,496 --> 00:04:32,086
results, these might be my blood


102
00:04:32,116 --> 00:04:33,476
glucose measurement for my


103
00:04:33,516 --> 00:04:34,246
annual physical.


104
00:04:35,856 --> 00:04:40,216
Medications, procedures, a


105
00:04:40,216 --> 00:04:41,966
diagnostic procedure or a


106
00:04:41,966 --> 00:04:42,586
surgery.


107
00:04:43,866 --> 00:04:46,216
And vital signs, things like


108
00:04:46,216 --> 00:04:50,336
blood pressure or weight.


109
00:04:50,796 --> 00:04:52,856
Alongside these sample types and


110
00:04:52,856 --> 00:04:54,656
sample type identifiers, we're


111
00:04:54,656 --> 00:04:56,936
also introducing a new HK sample


112
00:04:56,936 --> 00:04:59,926
subclass HKClinicalRecord.


113
00:05:01,416 --> 00:05:02,746
If you're not familiar with


114
00:05:02,746 --> 00:05:04,206
working with samples in


115
00:05:04,206 --> 00:05:06,376
HealthKit we have a number of


116
00:05:06,376 --> 00:05:08,006
talks that cover this topic and


117
00:05:08,166 --> 00:05:10,236
I'll provide details of these at


118
00:05:10,236 --> 00:05:11,026
the end.


119
00:05:12,656 --> 00:05:14,636
There are a few key properties


120
00:05:14,636 --> 00:05:16,066
you'll be working with on


121
00:05:16,066 --> 00:05:17,426
HKClinicalRecord.


122
00:05:18,016 --> 00:05:21,476
The clinical type, we looked at


123
00:05:21,476 --> 00:05:23,466
this earlier and this allows you


124
00:05:23,466 --> 00:05:25,996
to determine the type of a given


125
00:05:26,196 --> 00:05:26,726
record.


126
00:05:27,536 --> 00:05:29,936
I want to know that a health


127
00:05:29,936 --> 00:05:31,146
record is for example an


128
00:05:31,146 --> 00:05:31,936
immunization.


129
00:05:32,426 --> 00:05:36,866
We provide a display name which


130
00:05:36,866 --> 00:05:38,566
is a string that we use when


131
00:05:38,566 --> 00:05:40,496
showing that health record to


132
00:05:40,496 --> 00:05:41,446
users in Health.


133
00:05:42,226 --> 00:05:43,976
It's selected from the FHIR


134
00:05:43,976 --> 00:05:45,466
resource and it's your


135
00:05:45,466 --> 00:05:47,006
opportunity to tie back your


136
00:05:47,006 --> 00:05:48,876
app's experience to something


137
00:05:48,876 --> 00:05:50,086
users are familiar with.


138
00:05:52,696 --> 00:05:54,616
You can see in this lab result


139
00:05:55,576 --> 00:05:56,556
that there are a number of


140
00:05:56,556 --> 00:05:58,776
alternative representations and


141
00:05:58,776 --> 00:06:02,296
names, including a coding in the


142
00:06:02,296 --> 00:06:03,826
LOINC coding system.


143
00:06:04,096 --> 00:06:05,476
This is an industry standard


144
00:06:05,476 --> 00:06:06,816
reference for medical


145
00:06:06,816 --> 00:06:09,086
information and it is required


146
00:06:09,086 --> 00:06:10,806
by FHIR for observations.


147
00:06:11,376 --> 00:06:14,336
You can see here that we've


148
00:06:14,336 --> 00:06:16,366
taken that LOINC coding and


149
00:06:16,366 --> 00:06:18,396
performed a lookup to provide a


150
00:06:18,396 --> 00:06:20,126
canonical name which we will


151
00:06:20,126 --> 00:06:21,806
surface to you as the display


152
00:06:21,806 --> 00:06:21,976
name.


153
00:06:26,046 --> 00:06:27,426
And finally, we provide access


154
00:06:27,426 --> 00:06:29,646
to the full FHIR resource, but


155
00:06:29,646 --> 00:06:30,946
there's a lot you can benefit


156
00:06:30,946 --> 00:06:32,106
from looking at the


157
00:06:32,106 --> 00:06:33,756
HKClinicalRecord so I'm going to


158
00:06:33,756 --> 00:06:35,626
set this aside right now and we


159
00:06:35,626 --> 00:06:36,736
can come back to it later.


160
00:06:41,356 --> 00:06:42,696
Like all of Health data,


161
00:06:43,046 --> 00:06:45,236
provenance, or the source of


162
00:06:45,236 --> 00:06:47,396
that data, is very important.


163
00:06:48,626 --> 00:06:50,086
You want to know where this


164
00:06:50,086 --> 00:06:51,406
health record comes from.


165
00:06:51,896 --> 00:06:54,106
And as with the rest of


166
00:06:54,106 --> 00:06:56,326
HealthKit we model this using


167
00:06:56,326 --> 00:06:58,606
HKSource which is available on


168
00:06:58,606 --> 00:07:00,366
the HKSample superclass.


169
00:07:02,436 --> 00:07:04,876
We set the name to be the name


170
00:07:04,876 --> 00:07:06,446
of the healthcare institution


171
00:07:06,606 --> 00:07:08,146
that they have shared with us


172
00:07:09,466 --> 00:07:10,546
and we provide a bundle


173
00:07:10,546 --> 00:07:12,416
identifier which is a stable


174
00:07:12,416 --> 00:07:14,096
identifier for that healthcare


175
00:07:14,096 --> 00:07:16,416
institution across multiple user


176
00:07:16,416 --> 00:07:17,976
logins and devices.


177
00:07:23,046 --> 00:07:24,626
So now we've seen the new sample


178
00:07:24,626 --> 00:07:25,136
types.


179
00:07:25,806 --> 00:07:27,146
Let's see how you authorize your


180
00:07:27,146 --> 00:07:28,976
application and query for data.


181
00:07:37,246 --> 00:07:39,066
As you can see, there's a huge


182
00:07:39,106 --> 00:07:41,666
wealth of information in medical


183
00:07:41,666 --> 00:07:44,556
records and we really believe


184
00:07:44,556 --> 00:07:45,766
that that is a fantastic


185
00:07:45,766 --> 00:07:47,376
opportunity for you to provide


186
00:07:47,376 --> 00:07:49,656
your users with truly empowering


187
00:07:49,686 --> 00:07:51,666
experiences around their health


188
00:07:51,666 --> 00:07:52,026
data.


189
00:07:52,586 --> 00:07:56,686
But of course health records


190
00:07:56,776 --> 00:07:58,576
also contain incredibly


191
00:07:58,576 --> 00:08:00,136
sensitive information.


192
00:08:00,606 --> 00:08:02,806
A user's health records might


193
00:08:02,806 --> 00:08:05,116
contain details of medications


194
00:08:05,116 --> 00:08:06,446
that they are taking or


195
00:08:06,446 --> 00:08:07,706
conditions that they are living


196
00:08:07,706 --> 00:08:09,206
with on a daily basis.


197
00:08:10,576 --> 00:08:12,196
This is information they may not


198
00:08:12,196 --> 00:08:13,866
be comfortable sharing with a


199
00:08:13,866 --> 00:08:15,536
close friend or family member.


200
00:08:16,406 --> 00:08:18,936
And it can change over time as a


201
00:08:18,936 --> 00:08:20,496
user interacts with their


202
00:08:20,496 --> 00:08:22,756
healthcare institution, they


203
00:08:22,756 --> 00:08:25,246
might receive a new diagnosis of


204
00:08:25,246 --> 00:08:25,776
a condition.


205
00:08:27,196 --> 00:08:28,566
So to help our users better


206
00:08:28,566 --> 00:08:31,276
understand and manage access to


207
00:08:31,276 --> 00:08:33,166
that data we're introducing a


208
00:08:33,166 --> 00:08:35,976
new authorization flow specific


209
00:08:36,015 --> 00:08:36,936
to Health Records.


210
00:08:38,135 --> 00:08:39,566
When your app requests


211
00:08:39,566 --> 00:08:41,846
authorization we will present a


212
00:08:41,846 --> 00:08:44,436
new permission sheet specific to


213
00:08:44,436 --> 00:08:45,446
clinical types.


214
00:08:46,836 --> 00:08:49,516
First, we inform users what it


215
00:08:49,516 --> 00:08:51,346
means to share that data with


216
00:08:51,346 --> 00:08:53,666
your app and just how sensitive


217
00:08:54,346 --> 00:08:55,766
it is.


218
00:08:55,966 --> 00:08:57,446
Since we will present this new


219
00:08:57,446 --> 00:08:59,576
authorization flow, whenever you


220
00:08:59,576 --> 00:09:01,946
request authorization you should


221
00:09:01,946 --> 00:09:03,316
ensure that you time your


222
00:09:03,316 --> 00:09:05,446
authorization requests to make


223
00:09:05,446 --> 00:09:06,716
sure your user has sufficient


224
00:09:06,776 --> 00:09:09,006
context with which to understand


225
00:09:09,106 --> 00:09:09,966
this new dialogue.


226
00:09:12,516 --> 00:09:15,446
After this we allow users to


227
00:09:15,446 --> 00:09:17,146
select the types of data that


228
00:09:17,146 --> 00:09:18,466
they choose to share with your


229
00:09:18,466 --> 00:09:20,976
app from the categories that you


230
00:09:20,976 --> 00:09:21,806
have requested.


231
00:09:23,136 --> 00:09:25,776
We also present a new purpose


232
00:09:25,776 --> 00:09:28,146
string and your app's privacy


233
00:09:28,146 --> 00:09:30,326
policy in the app explanation


234
00:09:30,326 --> 00:09:30,916
section.


235
00:09:31,526 --> 00:09:33,176
This is really your opportunity


236
00:09:33,176 --> 00:09:35,796
to explain to users why you need


237
00:09:35,796 --> 00:09:37,886
access to that data, what you're


238
00:09:37,886 --> 00:09:39,756
going to do with it, and how you


239
00:09:39,756 --> 00:09:42,946
will protect that data.


240
00:09:43,566 --> 00:09:45,196
You should be sure to make sure


241
00:09:45,196 --> 00:09:46,606
that what you request is


242
00:09:46,646 --> 00:09:48,526
proportional to what you need.


243
00:09:49,266 --> 00:09:50,316
Users are really going to be


244
00:09:50,316 --> 00:09:53,146
surprised and concerned if they


245
00:09:53,146 --> 00:09:55,216
see types here that don't


246
00:09:55,216 --> 00:09:56,596
pertain to the primary function


247
00:09:56,596 --> 00:09:56,956
of your app.


248
00:09:57,566 --> 00:10:00,386
And finally because data can


249
00:10:00,386 --> 00:10:02,366
change over time as a user


250
00:10:02,366 --> 00:10:03,856
interacts with their healthcare


251
00:10:03,856 --> 00:10:06,966
institution, we're introducing a


252
00:10:06,966 --> 00:10:09,526
new way to control how new data


253
00:10:09,526 --> 00:10:11,296
is shared with your app.


254
00:10:11,796 --> 00:10:13,886
We default to asking before


255
00:10:13,886 --> 00:10:16,216
sharing new data each and every


256
00:10:16,216 --> 00:10:16,646
time.


257
00:10:18,056 --> 00:10:19,546
This means we may need to


258
00:10:19,546 --> 00:10:21,796
present the new permission sheet


259
00:10:22,266 --> 00:10:24,346
whenever new data is available.


260
00:10:25,076 --> 00:10:27,266
So when you need to query for


261
00:10:27,266 --> 00:10:29,016
data you should always request


262
00:10:29,016 --> 00:10:30,846
authorization prior to doing so.


263
00:10:35,286 --> 00:10:37,456
Okay, so how do I get started


264
00:10:37,456 --> 00:10:39,046
and request authorization?


265
00:10:40,536 --> 00:10:42,106
This flow is going to look very


266
00:10:42,106 --> 00:10:43,406
familiar to those of you who've


267
00:10:43,406 --> 00:10:44,836
worked with HealthKit before.


268
00:10:45,756 --> 00:10:48,416
First, I need to configure the


269
00:10:49,516 --> 00:10:49,906
project.


270
00:10:50,316 --> 00:10:52,156
After that request


271
00:10:52,156 --> 00:10:53,036
authorization.


272
00:10:54,356 --> 00:10:55,976
And finally query for data.


273
00:10:56,586 --> 00:11:00,766
To configure your project you


274
00:11:00,766 --> 00:11:02,626
need to add a new health records


275
00:11:02,626 --> 00:11:04,896
capability in Xcode after


276
00:11:05,696 --> 00:11:06,976
enabling HealthKit.


277
00:11:11,186 --> 00:11:13,746
Then you add the new Health


278
00:11:13,746 --> 00:11:15,326
Records Usage Description


279
00:11:15,396 --> 00:11:16,586
purpose string to your


280
00:11:16,586 --> 00:11:17,546
Info.plist.


281
00:11:20,216 --> 00:11:22,426
Again, this is your opportunity


282
00:11:22,426 --> 00:11:24,426
to explain to users why you need


283
00:11:24,426 --> 00:11:26,036
access to this data and what you


284
00:11:26,036 --> 00:11:27,226
will do with it.


285
00:11:30,276 --> 00:11:31,836
Having done this, you can


286
00:11:31,836 --> 00:11:33,096
request authorization.


287
00:11:34,416 --> 00:11:36,986
Here I define the types I wish


288
00:11:36,986 --> 00:11:39,036
to access, conditions,


289
00:11:40,226 --> 00:11:42,976
immunizations, and medications.


290
00:11:47,086 --> 00:11:48,606
And then you can call request


291
00:11:48,606 --> 00:11:50,206
authorization on the Health


292
00:11:50,206 --> 00:11:50,676
Store.


293
00:11:52,026 --> 00:11:53,806
Being sure to handle any errors


294
00:11:54,456 --> 00:11:57,066
and after that you're good to


295
00:11:57,066 --> 00:11:57,496
query.


296
00:11:58,366 --> 00:12:00,496
You should be aware that in


297
00:12:00,496 --> 00:12:02,526
order to maintain user privacy


298
00:12:02,976 --> 00:12:05,066
we don't reveal to you which


299
00:12:05,176 --> 00:12:07,046
categories a user has granted


300
00:12:07,046 --> 00:12:08,976
access or denied access to.


301
00:12:14,046 --> 00:12:14,676
And now to querying.


302
00:12:14,896 --> 00:12:17,306
Because HKClinicalRecord is an


303
00:12:17,306 --> 00:12:19,306
HKSample you can take advantage


304
00:12:19,306 --> 00:12:21,296
of all of the existing sample


305
00:12:21,296 --> 00:12:22,506
query infrastructure in


306
00:12:22,506 --> 00:12:23,036
HealthKit.


307
00:12:24,006 --> 00:12:25,406
Things like SampleQuery,


308
00:12:25,826 --> 00:12:27,266
AnchoredObjectQuery and


309
00:12:27,266 --> 00:12:29,936
ObserverQuery will all work and


310
00:12:29,936 --> 00:12:31,366
if your user has granted


311
00:12:31,366 --> 00:12:33,476
continuous access background


312
00:12:33,476 --> 00:12:37,706
delivery will also work.


313
00:12:38,396 --> 00:12:40,296
Again, you define the type that


314
00:12:40,296 --> 00:12:41,496
you wish to query for.


315
00:12:42,256 --> 00:12:45,006
We're creating a sample query


316
00:12:45,006 --> 00:12:48,226
here and you can execute that on


317
00:12:48,226 --> 00:12:48,836
the Health Store.


318
00:12:53,076 --> 00:12:54,006
So that's the basic


319
00:12:54,006 --> 00:12:55,146
authorization flow.


320
00:12:55,606 --> 00:12:57,446
But we've actually introduced


321
00:12:57,446 --> 00:12:59,216
some additional mechanisms


322
00:12:59,216 --> 00:13:00,856
specific to Health Records.


323
00:13:01,516 --> 00:13:05,996
We have a new API Get Request


324
00:13:06,036 --> 00:13:08,016
Status for Authorization, which


325
00:13:08,016 --> 00:13:09,696
allows you to determine if we


326
00:13:09,696 --> 00:13:11,486
would present a permission sheet


327
00:13:11,616 --> 00:13:12,306
to the user.


328
00:13:14,356 --> 00:13:17,246
This gives you an opportunity to


329
00:13:18,186 --> 00:13:19,926
determine whether your user will


330
00:13:19,926 --> 00:13:21,566
need to see the authorization


331
00:13:21,566 --> 00:13:23,676
sheet and optionally present a


332
00:13:23,676 --> 00:13:26,116
UI to provide them with more


333
00:13:26,116 --> 00:13:27,866
context prior to authorization.


334
00:13:31,136 --> 00:13:33,636
To do this you call Get Request


335
00:13:33,676 --> 00:13:35,356
Status for Authorization on the


336
00:13:35,356 --> 00:13:38,436
Health Store, handle any errors,


337
00:13:39,036 --> 00:13:42,576
and if the request status is


338
00:13:42,576 --> 00:13:44,396
should request you can


339
00:13:44,396 --> 00:13:47,016
optionally present that UI prior


340
00:13:47,106 --> 00:13:47,976
to requesting authorization.


341
00:13:52,416 --> 00:13:54,456
Now there may also be some types


342
00:13:54,456 --> 00:13:56,006
of data that your app requires


343
00:13:56,006 --> 00:13:58,526
access to, to provide a safe


344
00:13:58,576 --> 00:14:01,366
experience or perhaps if you


345
00:14:01,366 --> 00:14:04,266
have a research app you need


346
00:14:04,266 --> 00:14:06,926
access to a comprehensive set of


347
00:14:06,926 --> 00:14:09,056
types to avoid skewed results.


348
00:14:10,816 --> 00:14:13,636
We have a new required types key


349
00:14:13,636 --> 00:14:15,426
in the Info.plist, which allows


350
00:14:15,426 --> 00:14:17,276
you to specify these types.


351
00:14:18,136 --> 00:14:20,216
And if they're present we will


352
00:14:20,216 --> 00:14:22,186
return a new required types


353
00:14:22,366 --> 00:14:24,666
error if the user has not


354
00:14:24,666 --> 00:14:26,656
granted access to these types.


355
00:14:27,086 --> 00:14:28,656
And this allows you to determine


356
00:14:28,656 --> 00:14:31,136
how to behave, optionally


357
00:14:31,136 --> 00:14:32,376
explaining to the user that you


358
00:14:32,376 --> 00:14:33,966
cannot continue if you don't


359
00:14:33,966 --> 00:14:34,636
have this data.


360
00:14:39,066 --> 00:14:40,406
You can implement this by adding


361
00:14:40,406 --> 00:14:42,086
the new required read


362
00:14:42,086 --> 00:14:43,496
authorization key to your


363
00:14:43,496 --> 00:14:44,536
Info.plist.


364
00:14:45,866 --> 00:14:47,426
Here I'm specifying that I


365
00:14:47,426 --> 00:14:49,606
require allergies, conditions


366
00:14:49,606 --> 00:14:50,726
and immunizations.


367
00:14:51,316 --> 00:14:54,436
And then you handle the new


368
00:14:54,436 --> 00:14:56,606
error in the authorization


369
00:14:56,606 --> 00:14:56,926
request.


370
00:15:01,056 --> 00:15:02,056
You should be sure to use this


371
00:15:02,116 --> 00:15:05,006
judiciously and try not to limit


372
00:15:05,006 --> 00:15:06,896
your app's functionality based


373
00:15:06,896 --> 00:15:08,826
on the data that you have access


374
00:15:08,826 --> 00:15:09,086
to.


375
00:15:09,866 --> 00:15:11,466
You really want to make sure as


376
00:15:11,466 --> 00:15:13,196
many users as possible can


377
00:15:13,196 --> 00:15:14,406
benefit from your app


378
00:15:14,786 --> 00:15:16,326
irrespective of how much data


379
00:15:16,326 --> 00:15:16,976
they choose to share.


380
00:15:22,046 --> 00:15:23,546
So that's the full authorization


381
00:15:23,546 --> 00:15:25,536
flow and there's just a couple


382
00:15:25,536 --> 00:15:27,116
of points I'd like to focus on.


383
00:15:28,406 --> 00:15:30,966
Firstly, you should be sure to


384
00:15:30,966 --> 00:15:32,746
request authorization each and


385
00:15:32,746 --> 00:15:34,316
every time that you need access


386
00:15:34,316 --> 00:15:37,296
to data, especially now because


387
00:15:37,296 --> 00:15:39,456
users may want to see that sheet


388
00:15:39,526 --> 00:15:41,386
every time when new data comes


389
00:15:41,386 --> 00:15:44,106
in we may need to present a


390
00:15:44,106 --> 00:15:45,756
sheet when you need to query.


391
00:15:48,106 --> 00:15:49,346
You should also be sure to


392
00:15:49,346 --> 00:15:51,356
request only access to the data


393
00:15:51,356 --> 00:15:52,166
that you need.


394
00:15:52,726 --> 00:15:56,266
And finally, you should consider


395
00:15:56,266 --> 00:15:58,356
taking advantage of the new APIs


396
00:15:58,736 --> 00:15:59,906
to provide users with better


397
00:15:59,906 --> 00:16:02,066
context and allow you to time


398
00:16:02,066 --> 00:16:03,456
those authorization requests.


399
00:16:08,056 --> 00:16:08,976
And with that I'd like to hand


400
00:16:08,976 --> 00:16:10,756
over to my colleague Peyton to


401
00:16:11,026 --> 00:16:12,396
see what he can do with this in


402
00:16:12,396 --> 00:16:12,896
his app.


403
00:16:13,696 --> 00:16:14,026
Thank you.


404
00:16:16,266 --> 00:16:16,866
>> Thanks, Jason.


405
00:16:17,696 --> 00:16:18,846
So I'm working on an app for


406
00:16:18,846 --> 00:16:20,166
mountain climbers training for


407
00:16:20,166 --> 00:16:20,906
their next summit.


408
00:16:21,656 --> 00:16:24,036
I've got a HealthKit powered


409
00:16:24,036 --> 00:16:26,436
view of all my users walking,


410
00:16:26,436 --> 00:16:27,686
hiking and stairclimbing


411
00:16:27,686 --> 00:16:28,226
workouts.


412
00:16:28,916 --> 00:16:31,116
Now after extensive market


413
00:16:31,116 --> 00:16:33,266
research, I've determined that


414
00:16:33,266 --> 00:16:35,156
mountain climbers travel to


415
00:16:35,156 --> 00:16:37,786
mountains and travelers should


416
00:16:38,356 --> 00:16:40,106
know their vaccination status.


417
00:16:40,486 --> 00:16:42,096
So by the transitive property of


418
00:16:42,096 --> 00:16:43,746
future development mountain


419
00:16:43,746 --> 00:16:45,236
climbers should know their


420
00:16:45,236 --> 00:16:46,466
vaccination status.


421
00:16:46,886 --> 00:16:48,106
So I'm going to help out my


422
00:16:48,106 --> 00:16:48,646
users.


423
00:16:49,156 --> 00:16:50,646
I've started implementing a new


424
00:16:50,646 --> 00:16:52,646
tab, an immunization dashboard.


425
00:16:53,306 --> 00:16:54,936
So let me tap on what I have


426
00:16:54,936 --> 00:16:55,146
now.


427
00:16:55,696 --> 00:16:58,526
Here's my immunization dashboard


428
00:16:58,526 --> 00:17:00,346
and to start out with I'm going


429
00:17:00,346 --> 00:17:02,216
to display my users a list of


430
00:17:02,216 --> 00:17:04,286
their current vaccinations and


431
00:17:04,286 --> 00:17:05,915
I'm going to use the


432
00:17:05,915 --> 00:17:07,376
HKClinicalRecords display name


433
00:17:07,376 --> 00:17:07,836
property.


434
00:17:08,646 --> 00:17:09,986
I've already added the Health


435
00:17:09,986 --> 00:17:11,866
Records capability to my project


436
00:17:12,156 --> 00:17:14,516
and I've created a purpose


437
00:17:14,516 --> 00:17:16,195
string to tell my users how I


438
00:17:16,195 --> 00:17:17,596
plan to use their immunizations.


439
00:17:18,516 --> 00:17:20,356
Now it's time to implement my


440
00:17:20,356 --> 00:17:20,836
dashboard.


441
00:17:21,816 --> 00:17:22,695
So here I am at the


442
00:17:22,695 --> 00:17:24,195
ImmunizationsViewController


443
00:17:24,296 --> 00:17:25,256
powering that tab.


444
00:17:25,976 --> 00:17:27,856
In HealthKit it's good practice


445
00:17:28,006 --> 00:17:29,806
to request authorization every


446
00:17:29,806 --> 00:17:31,486
time your user enters the part


447
00:17:31,486 --> 00:17:33,086
of your application using


448
00:17:33,086 --> 00:17:33,496
HealthKit.


449
00:17:34,086 --> 00:17:36,526
So for this app viewWillAppear


450
00:17:36,676 --> 00:17:37,456
is a great place.


451
00:17:38,836 --> 00:17:43,156
Here I need to first specify


452
00:17:43,956 --> 00:17:44,776
that I'm interested in


453
00:17:44,776 --> 00:17:46,256
immunization record samples.


454
00:17:46,886 --> 00:17:50,816
And next, call my Health Store's


455
00:17:50,816 --> 00:17:52,306
requestAuthorization method.


456
00:17:53,356 --> 00:17:54,786
In the callback I'm going to


457
00:17:54,786 --> 00:17:56,906
check for success and handle


458
00:17:56,906 --> 00:17:57,846
errors appropriately.


459
00:17:59,196 --> 00:18:01,476
Finally, once I'm unauthorized


460
00:18:02,086 --> 00:18:03,376
I'm going to call this query for


461
00:18:03,376 --> 00:18:04,726
immunizations method which I'll


462
00:18:04,726 --> 00:18:06,576
implement now.


463
00:18:06,806 --> 00:18:08,466
Here in query for immunizations


464
00:18:08,716 --> 00:18:09,946
I'm going to create a sample


465
00:18:09,946 --> 00:18:12,046
query, I'm going to iterate over


466
00:18:12,046 --> 00:18:13,656
all the return samples, and I'm


467
00:18:13,656 --> 00:18:15,346
going to pass each sample's


468
00:18:15,346 --> 00:18:16,916
display name to my data source.


469
00:18:17,526 --> 00:18:17,976
So let's do that.


470
00:18:22,116 --> 00:18:23,666
Here I've got my sample query


471
00:18:24,016 --> 00:18:25,716
and I'm using the humanization


472
00:18:25,716 --> 00:18:27,246
record sample type.


473
00:18:28,166 --> 00:18:30,686
No predicate because I want all


474
00:18:30,686 --> 00:18:32,656
of the users' immunizations and


475
00:18:32,656 --> 00:18:35,316
similarly no limit because I


476
00:18:35,316 --> 00:18:36,636
want to get all of my users'


477
00:18:36,936 --> 00:18:37,526
immunizations.


478
00:18:37,986 --> 00:18:40,266
No sort descriptors, it doesn't


479
00:18:40,266 --> 00:18:41,856
matter to me in what order these


480
00:18:41,856 --> 00:18:42,616
samples are returned.


481
00:18:43,496 --> 00:18:45,916
And with that I'm going to check


482
00:18:46,256 --> 00:18:48,556
for results and if not handle


483
00:18:48,556 --> 00:18:49,426
errors appropriately.


484
00:18:50,806 --> 00:18:52,936
Next, I'm going to iterate over


485
00:18:52,936 --> 00:18:55,216
the samples and I'll pass them


486
00:18:55,446 --> 00:18:57,396
to my data source by display


487
00:18:57,966 --> 00:18:58,056
name.


488
00:19:00,496 --> 00:19:02,116
With the names in my data source


489
00:19:02,936 --> 00:19:03,816
it's time to head out to the


490
00:19:03,816 --> 00:19:06,536
main queue and call this reload


491
00:19:06,536 --> 00:19:08,456
UI method that I wrote earlier.


492
00:19:09,816 --> 00:19:12,766
Finally, I'm going to execute my


493
00:19:12,766 --> 00:19:14,306
sample query on my Health Store


494
00:19:15,076 --> 00:19:15,976
and that's all it takes, so


495
00:19:16,446 --> 00:19:16,976
let's build and run.


496
00:19:21,066 --> 00:19:22,336
So here I have my training log,


497
00:19:22,786 --> 00:19:23,636
I'm going to tap on my


498
00:19:23,636 --> 00:19:24,916
immunization dashboard tab.


499
00:19:25,366 --> 00:19:26,686
I see the new Health Records


500
00:19:26,686 --> 00:19:28,776
authorization sheet explaining


501
00:19:28,776 --> 00:19:31,276
to my users how my app could


502
00:19:31,446 --> 00:19:33,546
potentially use my users' health


503
00:19:33,546 --> 00:19:33,896
records.


504
00:19:34,916 --> 00:19:37,306
I'm going to tap continue and


505
00:19:37,306 --> 00:19:39,596
here my user has a chance to


506
00:19:39,786 --> 00:19:41,686
allow or deny categories as they


507
00:19:41,686 --> 00:19:42,156
see fit.


508
00:19:42,966 --> 00:19:44,536
There is my purpose string that


509
00:19:44,536 --> 00:19:45,976
I defined in my Info.plist


510
00:19:45,976 --> 00:19:47,796
earlier alongside a link to my


511
00:19:47,796 --> 00:19:48,956
app's privacy policy.


512
00:19:49,896 --> 00:19:51,836
Now users have to explicitly


513
00:19:52,026 --> 00:19:53,556
switch for every single


514
00:19:53,556 --> 00:19:55,776
category, there's no turn on all


515
00:19:55,776 --> 00:19:56,166
button.


516
00:19:57,256 --> 00:19:59,306
So for the purposes of the demo


517
00:19:59,486 --> 00:20:00,386
I'm going to enable


518
00:20:00,386 --> 00:20:02,036
immunizations and to have share


519
00:20:02,036 --> 00:20:02,766
current records.


520
00:20:03,246 --> 00:20:05,056
For future records I'll leave


521
00:20:05,306 --> 00:20:06,746
with the default Ask Before


522
00:20:06,746 --> 00:20:08,506
Sharing and I'll tap done.


523
00:20:09,016 --> 00:20:12,076
And just like that I have a list


524
00:20:12,076 --> 00:20:13,806
of all my users' immunizations.


525
00:20:13,806 --> 00:20:14,916
So that's just--


526
00:20:15,516 --> 00:20:20,586
[ Applause ]


527
00:20:21,086 --> 00:20:22,146
So that's just using display


528
00:20:22,146 --> 00:20:23,126
name, but there's a lot more


529
00:20:23,126 --> 00:20:24,626
information contained in the


530
00:20:24,626 --> 00:20:27,536
clinical records FHIR resources.


531
00:20:27,926 --> 00:20:29,166
So to tell you more about FHIR


532
00:20:29,166 --> 00:20:30,066
I'd like to hand it back to


533
00:20:30,066 --> 00:20:30,416
Jason.


534
00:20:31,576 --> 00:20:32,196
>> Thank you, Peyton.


535
00:20:32,846 --> 00:20:35,756
So Peyton just showed us how we


536
00:20:35,756 --> 00:20:38,026
can request authorization in our


537
00:20:38,026 --> 00:20:41,286
app, query for data, and take


538
00:20:41,286 --> 00:20:43,266
advantage of the new display


539
00:20:43,266 --> 00:20:45,556
name on HKClinicalRecord to


540
00:20:45,556 --> 00:20:47,086
present that information to


541
00:20:47,086 --> 00:20:48,976
users in a way they're familiar.


542
00:20:53,356 --> 00:20:56,116
So now let's take a look at FHIR


543
00:20:56,116 --> 00:20:57,536
and see what you can do with


544
00:20:57,536 --> 00:21:02,626
this rich data format.


545
00:21:02,626 --> 00:21:04,586
Users interact with multiple


546
00:21:04,586 --> 00:21:06,026
healthcare institutions over the


547
00:21:06,026 --> 00:21:08,446
course of their lives and these


548
00:21:08,446 --> 00:21:10,526
are often running different


549
00:21:10,526 --> 00:21:12,446
electronic health record systems


550
00:21:13,326 --> 00:21:15,856
that don't always represent data


551
00:21:15,856 --> 00:21:16,936
in the same way.


552
00:21:17,586 --> 00:21:19,426
This makes interoperability


553
00:21:19,426 --> 00:21:20,536
incredibly difficult.


554
00:21:21,066 --> 00:21:25,016
So to address this the


555
00:21:25,016 --> 00:21:26,516
healthcare community came


556
00:21:26,516 --> 00:21:27,996
together in an effort called the


557
00:21:27,996 --> 00:21:30,626
Argonaut Project, this uses


558
00:21:30,626 --> 00:21:33,076
FHIR, a flexible JSON


559
00:21:33,076 --> 00:21:36,556
representation of health records


560
00:21:36,616 --> 00:21:38,416
and [inaudible] 2 as defined by


561
00:21:38,416 --> 00:21:40,936
the Smart Authorization Guide to


562
00:21:40,936 --> 00:21:43,646
allow connections, consistent


563
00:21:43,646 --> 00:21:45,196
connections to healthcare


564
00:21:45,196 --> 00:21:47,256
institutions and to allow data


565
00:21:47,256 --> 00:21:49,016
to be downloaded in a common


566
00:21:49,016 --> 00:21:51,676
format and related across those


567
00:21:51,676 --> 00:21:53,046
multiple institutions.


568
00:21:54,916 --> 00:21:58,826
FHIR itself models a huge


569
00:21:58,886 --> 00:22:01,556
universe of health data from


570
00:22:01,656 --> 00:22:04,846
allergy intolerance to vision


571
00:22:04,846 --> 00:22:08,456
prescription and it organizes


572
00:22:08,456 --> 00:22:10,196
this data into different data


573
00:22:10,196 --> 00:22:12,316
types called resources.


574
00:22:13,046 --> 00:22:14,966
Each resource has a resource


575
00:22:14,966 --> 00:22:16,396
type and there is one for each


576
00:22:16,396 --> 00:22:20,996
and every kind of health data.


577
00:22:21,776 --> 00:22:23,846
Today we are selecting the eight


578
00:22:24,046 --> 00:22:26,256
most common resource types and


579
00:22:26,256 --> 00:22:27,486
these are defined within the


580
00:22:27,486 --> 00:22:29,636
Argonaut Project and we are


581
00:22:29,636 --> 00:22:31,336
grouping these into the seven


582
00:22:31,336 --> 00:22:33,066
different clinical types that we


583
00:22:33,066 --> 00:22:33,926
saw earlier.


584
00:22:35,096 --> 00:22:36,046
You'll note that we split


585
00:22:36,046 --> 00:22:39,756
observations into lab results


586
00:22:39,756 --> 00:22:41,456
and vital signs based on the


587
00:22:41,456 --> 00:22:45,006
categorization and we group


588
00:22:45,006 --> 00:22:47,006
multiple medication resource


589
00:22:47,006 --> 00:22:48,856
types into the medications


590
00:22:51,706 --> 00:22:51,956
category.


591
00:22:52,066 --> 00:22:54,846
So FHIR represents data as a


592
00:22:54,846 --> 00:22:56,666
JSON dictionary and there are


593
00:22:56,666 --> 00:22:58,376
some key properties that are


594
00:22:58,376 --> 00:23:00,666
present on all FHIR resources.


595
00:23:01,816 --> 00:23:03,496
Things like the resource type,


596
00:23:04,196 --> 00:23:05,096
here we're looking at an


597
00:23:05,096 --> 00:23:08,356
observation and this tells us


598
00:23:08,356 --> 00:23:09,806
that in the context of health


599
00:23:09,996 --> 00:23:12,006
this is a lab result or a vital


600
00:23:12,006 --> 00:23:12,426
sign.


601
00:23:14,896 --> 00:23:17,686
We also have an ID present on


602
00:23:17,766 --> 00:23:19,286
all resource types.


603
00:23:20,246 --> 00:23:22,836
This is a unique identifier for


604
00:23:22,836 --> 00:23:24,346
that resource, but you should


605
00:23:24,346 --> 00:23:26,096
note that it is only unique


606
00:23:26,096 --> 00:23:27,626
within the domain of that


607
00:23:27,626 --> 00:23:29,326
resource type for that


608
00:23:29,326 --> 00:23:30,526
healthcare institution.


609
00:23:35,436 --> 00:23:36,806
One of the most fundamental


610
00:23:36,806 --> 00:23:38,616
building blocks of FHIR is a


611
00:23:38,616 --> 00:23:39,266
coding.


612
00:23:40,736 --> 00:23:43,016
This allows for a reference to a


613
00:23:43,016 --> 00:23:45,216
unique identifier or a code


614
00:23:46,016 --> 00:23:48,176
scoped within an external coding


615
00:23:48,176 --> 00:23:48,806
system.


616
00:23:49,496 --> 00:23:50,816
There are a number of coding


617
00:23:50,816 --> 00:23:52,776
systems specified within FHIR


618
00:23:52,776 --> 00:23:55,466
and you can use these to find


619
00:23:55,466 --> 00:23:57,106
out more about the items that


620
00:23:57,106 --> 00:23:58,346
are referenced in medical


621
00:23:58,346 --> 00:24:01,976
records or to relate specific


622
00:24:01,976 --> 00:24:03,426
things across multiple


623
00:24:03,426 --> 00:24:04,826
healthcare institutions.


624
00:24:05,346 --> 00:24:09,496
Here we're actually looking at a


625
00:24:09,546 --> 00:24:12,196
category coding which tells us


626
00:24:12,196 --> 00:24:13,506
that this is a lab result.


627
00:24:15,816 --> 00:24:18,056
There's also a code in the case


628
00:24:18,056 --> 00:24:19,706
of an observation for what is


629
00:24:19,746 --> 00:24:20,466
being measured.


630
00:24:22,296 --> 00:24:25,376
This is blood glucose as defined


631
00:24:25,636 --> 00:24:27,806
in the LOINC coding system and


632
00:24:27,806 --> 00:24:29,266
it could take that code and look


633
00:24:29,266 --> 00:24:31,316
it up in the LOINC database for


634
00:24:31,316 --> 00:24:32,956
alternative names and further


635
00:24:32,956 --> 00:24:33,526
information.


636
00:24:34,076 --> 00:24:38,216
And of course this is an


637
00:24:38,216 --> 00:24:39,966
observation so I have the value


638
00:24:39,966 --> 00:24:41,076
that is observed.


639
00:24:41,386 --> 00:24:42,786
This is 60 milligrams per


640
00:24:42,786 --> 00:24:44,676
deciliter and you'll note that


641
00:24:44,676 --> 00:24:46,376
even the units here are coded,


642
00:24:46,376 --> 00:24:48,286
so I have a really comprehensive


643
00:24:48,286 --> 00:24:49,816
understanding about what's going


644
00:24:49,816 --> 00:24:49,976
on.


645
00:24:54,076 --> 00:24:56,376
FHIR resources have many


646
00:24:56,376 --> 00:24:59,586
additional data elements and I


647
00:24:59,586 --> 00:25:01,036
encourage you to go and look at


648
00:25:01,036 --> 00:25:02,006
the Argonaut Project


649
00:25:02,006 --> 00:25:04,026
documentation to find out more


650
00:25:04,026 --> 00:25:06,146
and I'll have details of these


651
00:25:06,636 --> 00:25:08,966
at the end.


652
00:25:08,966 --> 00:25:10,716
In HealthKit we model a FHIR


653
00:25:10,716 --> 00:25:12,896
resources as HKFHIRResource.


654
00:25:13,926 --> 00:25:15,606
We provide some key properties


655
00:25:15,826 --> 00:25:18,126
like the data, access to the


656
00:25:18,126 --> 00:25:19,536
full raw data.


657
00:25:21,376 --> 00:25:23,596
We surface common elements like


658
00:25:23,596 --> 00:25:26,206
the resource type and


659
00:25:26,206 --> 00:25:26,806
identifier.


660
00:25:27,426 --> 00:25:32,306
You can access the data using


661
00:25:32,306 --> 00:25:34,186
Swift codable or JSON


662
00:25:34,186 --> 00:25:35,186
serialization.


663
00:25:35,916 --> 00:25:37,156
Here you can see that I've


664
00:25:37,156 --> 00:25:39,076
defined my own codable struct,


665
00:25:39,336 --> 00:25:42,046
my codable observation and I'm


666
00:25:42,046 --> 00:25:43,656
using that to pull out the value


667
00:25:43,656 --> 00:25:44,966
quantity that we saw earlier.


668
00:25:45,516 --> 00:25:49,166
You can have confidence that the


669
00:25:49,166 --> 00:25:50,906
data is structured correctly


670
00:25:50,906 --> 00:25:53,606
here as we only share valid FHIR


671
00:25:53,606 --> 00:25:57,726
resources through the API.


672
00:25:58,196 --> 00:25:59,136
We also introduce some


673
00:25:59,136 --> 00:26:00,556
predicates to make it easier for


674
00:26:00,556 --> 00:26:01,356
you to work with


675
00:26:01,356 --> 00:26:02,566
HKClinicalRecord.


676
00:26:03,316 --> 00:26:05,046
We have a predicate to allow you


677
00:26:05,046 --> 00:26:08,316
to query by resource type, here


678
00:26:08,396 --> 00:26:10,686
I'm looking for prescription or


679
00:26:10,686 --> 00:26:12,866
in FHIR a medication order.


680
00:26:15,216 --> 00:26:16,766
We also have a predicate to


681
00:26:16,766 --> 00:26:18,716
allow you to uniquely identify


682
00:26:19,206 --> 00:26:20,946
records by their source,


683
00:26:21,166 --> 00:26:23,076
resource type and identifier.


684
00:26:23,716 --> 00:26:25,416
This can be incredibly useful as


685
00:26:25,416 --> 00:26:27,066
FHIR resources can reference


686
00:26:27,156 --> 00:26:28,636
other FHIR resources.


687
00:26:29,046 --> 00:26:30,926
For example, a medication might


688
00:26:30,926 --> 00:26:32,436
reference the condition that it


689
00:26:32,486 --> 00:26:32,956
treats.


690
00:26:37,116 --> 00:26:38,346
Now there are some additional


691
00:26:38,346 --> 00:26:39,686
considerations you need to be


692
00:26:39,686 --> 00:26:41,096
aware of when working with FHIR.


693
00:26:42,726 --> 00:26:44,846
Firstly, FHIR resources may


694
00:26:44,846 --> 00:26:46,906
contain their own dates.


695
00:26:47,466 --> 00:26:49,136
For example, prescriptions may


696
00:26:49,136 --> 00:26:50,606
contain the order data of that


697
00:26:50,606 --> 00:26:52,766
prescription while a condition


698
00:26:53,006 --> 00:26:54,766
may contain the onset date,


699
00:26:54,906 --> 00:26:56,626
abatement date and the date that


700
00:26:56,626 --> 00:26:57,986
that prescription is first


701
00:26:57,986 --> 00:26:58,566
observed.


702
00:26:59,586 --> 00:27:01,016
You should therefore use the


703
00:27:01,016 --> 00:27:03,726
FHIR resource directly to access


704
00:27:03,756 --> 00:27:05,356
these dates for each resource


705
00:27:05,396 --> 00:27:05,676
type.


706
00:27:06,746 --> 00:27:08,436
Start date and end date that are


707
00:27:08,436 --> 00:27:09,786
available on the HKSample


708
00:27:09,786 --> 00:27:11,716
superclass are set for the date


709
00:27:11,716 --> 00:27:14,096
that we first add that resource


710
00:27:14,966 --> 00:27:16,000
to Health.


711
00:27:18,186 --> 00:27:20,046
You should use source, resource,


712
00:27:20,046 --> 00:27:21,556
type and identifier when


713
00:27:21,556 --> 00:27:23,856
uniquely identifying a health


714
00:27:23,856 --> 00:27:24,346
record.


715
00:27:24,756 --> 00:27:26,476
This will allow you to identify


716
00:27:26,476 --> 00:27:27,506
a health record across the


717
00:27:27,506 --> 00:27:29,636
course of its lifetime as it is


718
00:27:29,636 --> 00:27:31,016
updated by the healthcare


719
00:27:31,016 --> 00:27:31,736
institution.


720
00:27:32,156 --> 00:27:36,666
And finally, you should be aware


721
00:27:36,666 --> 00:27:39,536
that FHIR and JSON don't fully


722
00:27:39,536 --> 00:27:41,486
agree when it comes to numerical


723
00:27:41,486 --> 00:27:42,086
precision.


724
00:27:43,286 --> 00:27:45,426
FHIR ascribes significance to


725
00:27:45,426 --> 00:27:47,316
the number of digits following


726
00:27:47,316 --> 00:27:48,916
the decimal place and this can


727
00:27:48,916 --> 00:27:50,986
be lost when using Swift codable


728
00:27:51,166 --> 00:27:52,666
or JSON serialization.


729
00:27:53,176 --> 00:27:54,976
If it's really fundamental to


730
00:27:54,976 --> 00:27:57,396
your app that you have full


731
00:27:57,396 --> 00:28:00,116
access to this information Swift


732
00:28:00,116 --> 00:28:01,856
codable and JSON serialization


733
00:28:02,006 --> 00:28:03,576
may not be appropriate tools.


734
00:28:04,596 --> 00:28:06,646
And with that, I'd love to hand


735
00:28:06,646 --> 00:28:08,496
back to Peyton and see what


736
00:28:08,496 --> 00:28:10,376
wonderful things he can do with


737
00:28:10,376 --> 00:28:10,976
this new API.


738
00:28:11,516 --> 00:28:18,606
[ Applause ]


739
00:28:19,106 --> 00:28:19,686
>> Thanks, Jason.


740
00:28:20,636 --> 00:28:21,896
So back to the immunization


741
00:28:21,896 --> 00:28:23,186
dashboard I've been working on.


742
00:28:23,726 --> 00:28:25,526
I'm using HealthKit to fetch my


743
00:28:25,526 --> 00:28:27,316
users' vaccinations, but right


744
00:28:27,316 --> 00:28:28,826
now it's tough for a user to


745
00:28:28,826 --> 00:28:30,696
tell what vaccinations they have


746
00:28:30,766 --> 00:28:31,846
and what they might need to get.


747
00:28:31,846 --> 00:28:34,616
So I'm going to solve that by


748
00:28:34,616 --> 00:28:36,436
implementing an immunization


749
00:28:36,656 --> 00:28:37,346
checklist.


750
00:28:37,866 --> 00:28:39,466
Users can see a summary of their


751
00:28:39,466 --> 00:28:41,706
immunizations in plain language.


752
00:28:43,126 --> 00:28:44,816
To populate this list I need to


753
00:28:44,816 --> 00:28:46,016
know that this combination


754
00:28:46,016 --> 00:28:48,516
vaccine induces immunity against


755
00:28:48,516 --> 00:28:51,136
chickenpox and against MMR.


756
00:28:51,756 --> 00:28:54,016
Health institutions speak


757
00:28:54,016 --> 00:28:55,926
different languages so I can't


758
00:28:55,926 --> 00:28:58,596
rely on name alone, so that's


759
00:28:58,596 --> 00:28:59,806
where the interoperability of


760
00:28:59,806 --> 00:29:00,856
FHIR comes into play.


761
00:29:01,856 --> 00:29:03,356
FHIR gives a way to use


762
00:29:03,416 --> 00:29:05,066
predefined codes rather than


763
00:29:05,066 --> 00:29:07,146
natural language to specify what


764
00:29:07,146 --> 00:29:07,616
things are.


765
00:29:09,156 --> 00:29:11,106
So after taking a look at the


766
00:29:11,106 --> 00:29:13,326
FHIR documentation here's the


767
00:29:13,326 --> 00:29:14,806
algorithm I've come up with to


768
00:29:14,806 --> 00:29:16,736
identify a chickenpox vaccine.


769
00:29:18,636 --> 00:29:20,066
First, I'll take the


770
00:29:20,066 --> 00:29:23,406
immunization records JSON, I'm


771
00:29:23,406 --> 00:29:25,176
going to deserialize it and pull


772
00:29:25,176 --> 00:29:27,046
out the vaccination code in a


773
00:29:27,046 --> 00:29:28,646
system called CVX.


774
00:29:29,306 --> 00:29:31,006
CVX is a commonly used coding


775
00:29:31,006 --> 00:29:32,646
system for immunizations, but


776
00:29:32,646 --> 00:29:33,856
there are many other coding


777
00:29:33,856 --> 00:29:35,256
systems for different areas of


778
00:29:35,256 --> 00:29:35,616
medicine.


779
00:29:36,916 --> 00:29:38,726
Finally, I'm going compare the


780
00:29:38,806 --> 00:29:40,286
CVX code I found in my


781
00:29:40,286 --> 00:29:42,486
immunization record to a list of


782
00:29:42,486 --> 00:29:44,676
vaccines I know induce immunity


783
00:29:44,676 --> 00:29:45,546
against chickenpox.


784
00:29:45,916 --> 00:29:47,636
If there's a match I'll show a


785
00:29:47,636 --> 00:29:49,726
checkmark in my UI next to


786
00:29:49,726 --> 00:29:50,376
chickenpox.


787
00:29:50,806 --> 00:29:52,976
So let's talk about the


788
00:29:52,976 --> 00:29:53,946
immunization record JSON.


789
00:29:58,046 --> 00:29:59,956
The structure starts with a


790
00:29:59,956 --> 00:30:01,806
resource type immunization.


791
00:30:02,316 --> 00:30:05,966
There's a vaccine code object


792
00:30:07,356 --> 00:30:08,996
and contained therein is an


793
00:30:08,996 --> 00:30:09,986
array of codings.


794
00:30:10,506 --> 00:30:12,566
There may be multiple codings,


795
00:30:13,556 --> 00:30:16,556
so I need to search by system to


796
00:30:16,556 --> 00:30:17,526
find CVX.


797
00:30:18,186 --> 00:30:19,616
In this example, the first


798
00:30:19,616 --> 00:30:23,186
system is NDC so I move until I


799
00:30:23,186 --> 00:30:24,076
see CVX.


800
00:30:25,086 --> 00:30:27,026
With that in hand I look at the


801
00:30:27,026 --> 00:30:29,906
code and I look it up and I see


802
00:30:29,906 --> 00:30:30,916
that I have MMRV.


803
00:30:31,476 --> 00:30:34,886
So that's the structure of these


804
00:30:34,886 --> 00:30:36,176
immunization records JSON.


805
00:30:37,026 --> 00:30:38,906
Now it's time to implement.


806
00:30:39,856 --> 00:30:41,646
So here we are back in my


807
00:30:41,646 --> 00:30:42,956
immunizations view controller.


808
00:30:43,676 --> 00:30:44,796
I've done some work ahead of


809
00:30:44,796 --> 00:30:47,156
time to implement the UI of the


810
00:30:47,156 --> 00:30:50,766
checklist and I instantiate it


811
00:30:51,046 --> 00:30:52,596
with a showChecklist property.


812
00:30:52,596 --> 00:30:57,076
Now it's time to populate my


813
00:30:57,076 --> 00:30:57,826
checklist with data.


814
00:30:59,226 --> 00:31:00,856
Here I am in the query for


815
00:31:00,856 --> 00:31:01,736
immunizations method.


816
00:31:02,776 --> 00:31:04,226
When I iterate over my users'


817
00:31:04,226 --> 00:31:06,086
samples I'm going to add a call


818
00:31:06,086 --> 00:31:06,756
to a new method


819
00:31:07,596 --> 00:31:09,786
matchCodedVaccine and I'll pass


820
00:31:09,786 --> 00:31:10,776
it if the sample is FHIR


821
00:31:10,776 --> 00:31:12,566
resource, so let's implement


822
00:31:12,566 --> 00:31:12,866
that now.


823
00:31:17,126 --> 00:31:18,106
Here I am in matchCodedVaccine


824
00:31:18,736 --> 00:31:20,436
from resource and what I need to


825
00:31:20,436 --> 00:31:22,776
do is deserialize the FHIR


826
00:31:22,776 --> 00:31:24,896
resources data, pull out the


827
00:31:24,896 --> 00:31:26,896
vaccination codes, search for


828
00:31:26,896 --> 00:31:29,416
CVX, and compare it against


829
00:31:29,416 --> 00:31:31,946
lists of CVX codes for different


830
00:31:31,946 --> 00:31:32,336
diseases.


831
00:31:32,966 --> 00:31:35,206
I have a lot of freedom in how I


832
00:31:35,206 --> 00:31:37,136
choose to deserialize the FHIR


833
00:31:37,136 --> 00:31:39,256
resource, so today I'm going to


834
00:31:39,256 --> 00:31:40,356
use Swift codables.


835
00:31:40,906 --> 00:31:43,396
I need to define a codable for


836
00:31:43,396 --> 00:31:44,536
exactly the keys that I'm


837
00:31:44,536 --> 00:31:45,676
interested in.


838
00:31:47,796 --> 00:31:48,736
So I've done that now.


839
00:31:49,026 --> 00:31:51,276
An immunization resource has a


840
00:31:51,276 --> 00:31:54,896
vaccine code, a vaccine code has


841
00:31:54,896 --> 00:31:57,086
an array of codings and a


842
00:31:57,086 --> 00:32:00,546
vaccine coding has a system and


843
00:32:01,166 --> 00:32:02,426
a code.


844
00:32:02,636 --> 00:32:05,836
With that I instantiate a JSON


845
00:32:05,836 --> 00:32:08,436
decoder and I use it to decode


846
00:32:08,436 --> 00:32:10,376
the FHIR resources data as an


847
00:32:10,376 --> 00:32:11,746
immunization resource.


848
00:32:12,276 --> 00:32:16,046
All that's left is to iterate


849
00:32:16,046 --> 00:32:19,396
over each coding, check to see


850
00:32:19,396 --> 00:32:23,846
whether the system is CVX, and


851
00:32:24,106 --> 00:32:26,296
then pass the code to this


852
00:32:26,296 --> 00:32:27,916
method to mark it in the data


853
00:32:27,916 --> 00:32:28,266
source.


854
00:32:28,816 --> 00:32:30,776
All this method does is compares


855
00:32:30,776 --> 00:32:32,976
the code against lists of codes


856
00:32:33,046 --> 00:32:34,806
per disease and if there's a


857
00:32:34,806 --> 00:32:38,026
match marks in the UI that


858
00:32:38,026 --> 00:32:41,196
disease for the found disease.


859
00:32:41,766 --> 00:32:44,176
So with that I'm going to build


860
00:32:44,176 --> 00:32:45,916
and run and take a look at my


861
00:32:45,916 --> 00:32:46,936
immunization checklist.


862
00:32:47,956 --> 00:32:49,436
So here I am on my training log,


863
00:32:50,026 --> 00:32:50,866
I'm going to tap on the


864
00:32:50,866 --> 00:32:53,746
Immunizations tab and just like


865
00:32:53,746 --> 00:32:55,546
that with a few lines of code I


866
00:32:55,546 --> 00:32:56,816
have an immunization checklist.


867
00:32:57,516 --> 00:33:02,316
[ Applause ]


868
00:33:02,816 --> 00:33:04,286
So that's an example of solving


869
00:33:04,286 --> 00:33:05,626
a problem using FHIR.


870
00:33:06,426 --> 00:33:09,346
Now for a word on granting


871
00:33:09,396 --> 00:33:11,226
consent for your users I'm going


872
00:33:11,226 --> 00:33:12,136
to hand it back to Jason.


873
00:33:13,226 --> 00:33:13,586
Jason.


874
00:33:14,516 --> 00:33:19,546
[ Applause ]


875
00:33:20,046 --> 00:33:20,856
>> Thanks Peyton.


876
00:33:20,856 --> 00:33:25,196
So Peyton has shown us how we


877
00:33:25,196 --> 00:33:27,586
can take that rich FHIR data and


878
00:33:28,076 --> 00:33:29,756
take advantage of the coding


879
00:33:29,756 --> 00:33:31,536
that's provided to really


880
00:33:31,536 --> 00:33:33,336
provide our users with a very


881
00:33:33,336 --> 00:33:34,926
meaningful and comprehensive


882
00:33:34,926 --> 00:33:36,256
experience around their health


883
00:33:36,256 --> 00:33:36,806
records.


884
00:33:39,596 --> 00:33:41,736
And now I'd like to think a


885
00:33:41,736 --> 00:33:43,366
little bit about how you can


886
00:33:43,366 --> 00:33:45,506
help protect your users' privacy


887
00:33:45,506 --> 00:33:46,256
in this domain.


888
00:33:47,526 --> 00:33:48,846
As you've seen this is


889
00:33:48,846 --> 00:33:50,446
incredibly sensitive data.


890
00:33:51,716 --> 00:33:53,646
We've built privacy in from the


891
00:33:53,646 --> 00:33:57,166
ground up, establishing secure


892
00:33:57,166 --> 00:33:59,646
connections direct to healthcare


893
00:33:59,646 --> 00:34:00,746
institutions.


894
00:34:01,876 --> 00:34:04,156
Downloading data straight to


895
00:34:04,216 --> 00:34:05,946
users' iOS devices.


896
00:34:06,486 --> 00:34:08,255
Storing it securely in


897
00:34:08,255 --> 00:34:08,896
HealthKit.


898
00:34:09,806 --> 00:34:11,406
And providing comprehensive


899
00:34:11,406 --> 00:34:13,886
management tools around access


900
00:34:13,886 --> 00:34:16,206
to that data.


901
00:34:16,396 --> 00:34:18,876
Your users will expect you to


902
00:34:18,876 --> 00:34:20,896
treat their data with that same


903
00:34:20,896 --> 00:34:22,596
level of care and attention.


904
00:34:25,016 --> 00:34:27,626
Every choice that you make here


905
00:34:27,896 --> 00:34:29,466
can have a direct impact on


906
00:34:29,466 --> 00:34:30,266
individuals.


907
00:34:31,456 --> 00:34:33,126
This can be a truly positive


908
00:34:33,176 --> 00:34:35,065
impact and it's why we are


909
00:34:35,065 --> 00:34:36,896
choosing to provide this API


910
00:34:36,966 --> 00:34:39,326
today, but it can also be a


911
00:34:39,326 --> 00:34:40,326
negative one.


912
00:34:41,056 --> 00:34:42,896
If users feel that this data is


913
00:34:42,896 --> 00:34:45,386
out of their control or worse


914
00:34:45,386 --> 00:34:47,275
still, it is shared without


915
00:34:47,275 --> 00:34:47,966
their consent.


916
00:34:49,306 --> 00:34:50,846
You can show respect for your


917
00:34:50,846 --> 00:34:52,876
users and help establish a


918
00:34:52,876 --> 00:34:55,025
relationship of trust by


919
00:34:55,025 --> 00:34:56,376
providing them with clear


920
00:34:56,376 --> 00:34:59,736
policies around that data and


921
00:34:59,736 --> 00:35:01,176
informing them what you do with


922
00:35:01,676 --> 00:35:01,746
it.


923
00:35:02,376 --> 00:35:03,736
This starts with your


924
00:35:03,736 --> 00:35:05,736
application, your purpose


925
00:35:05,736 --> 00:35:08,016
string, and your privacy policy


926
00:35:08,176 --> 00:35:09,916
and it continues every step of


927
00:35:09,916 --> 00:35:12,206
the way as you work with that


928
00:35:12,206 --> 00:35:14,246
data and as you move it around.


929
00:35:15,666 --> 00:35:17,286
For example, you should make


930
00:35:17,286 --> 00:35:20,836
sure you give users details


931
00:35:20,836 --> 00:35:22,926
about how you manage their data.


932
00:35:23,536 --> 00:35:24,996
You should publish clear


933
00:35:24,996 --> 00:35:27,096
retention policies and you


934
00:35:27,096 --> 00:35:28,496
should provide them tools to


935
00:35:28,496 --> 00:35:30,296
allow them to delete that data


936
00:35:30,296 --> 00:35:31,456
should they choose to stop


937
00:35:31,456 --> 00:35:32,436
sharing it with you.


938
00:35:32,956 --> 00:35:36,976
And finally, you should make


939
00:35:36,976 --> 00:35:38,786
sure that you always request


940
00:35:39,426 --> 00:35:41,246
data proportional to your use


941
00:35:41,246 --> 00:35:41,776
case.


942
00:35:42,416 --> 00:35:43,906
You should never be asking for


943
00:35:43,906 --> 00:35:44,926
more data than you need.


944
00:35:49,046 --> 00:35:50,146
I encourage you all to go to the


945
00:35:50,146 --> 00:35:51,996
Privacy Talk, Better Apps


946
00:35:51,996 --> 00:35:53,386
Through Better Privacy on


947
00:35:53,386 --> 00:35:55,706
Thursday at 4 p.m. and this


948
00:35:55,706 --> 00:35:58,486
covers the whole ecosystem, so


949
00:35:58,606 --> 00:36:00,116
it's a great opportunity to find


950
00:36:00,116 --> 00:36:00,616
out more.


951
00:36:01,286 --> 00:36:02,886
So we've seen the new sample


952
00:36:02,986 --> 00:36:04,376
types that we're introducing to


953
00:36:04,376 --> 00:36:05,756
support Health Records.


954
00:36:06,496 --> 00:36:09,056
We understand how to configure


955
00:36:09,056 --> 00:36:10,816
entitlements and privacy strings


956
00:36:10,816 --> 00:36:12,566
in our app, to request


957
00:36:12,566 --> 00:36:14,216
authorization and to query for


958
00:36:14,216 --> 00:36:14,596
data.


959
00:36:16,856 --> 00:36:19,066
Hopefully I have shown you just


960
00:36:19,066 --> 00:36:20,826
enough to whet your appetite to


961
00:36:20,826 --> 00:36:24,706
go and find out more about FHIR.


962
00:36:24,806 --> 00:36:26,706
And we've seen how you can do


963
00:36:26,706 --> 00:36:28,396
more to help protect your users'


964
00:36:28,396 --> 00:36:28,896
privacy.


965
00:36:36,046 --> 00:36:37,826
We continue to be amazed by the


966
00:36:37,826 --> 00:36:39,496
fantastic apps that our


967
00:36:39,496 --> 00:36:41,746
developer community creates and


968
00:36:41,806 --> 00:36:44,096
how it really empowers users


969
00:36:44,096 --> 00:36:45,516
when accessing their health


970
00:36:45,516 --> 00:36:45,846
data.


971
00:36:47,356 --> 00:36:49,036
This is a journey that we


972
00:36:49,036 --> 00:36:51,206
started with Health and


973
00:36:51,206 --> 00:36:53,606
HealthKit and it's one that we


974
00:36:53,606 --> 00:36:55,776
have continued with ResearchKit


975
00:36:56,106 --> 00:36:57,026
and CareKit.


976
00:36:57,826 --> 00:36:59,746
And now today with Health


977
00:36:59,746 --> 00:37:02,686
Records and HealthKit we are


978
00:37:02,816 --> 00:37:04,576
thrilled to be continuing on


979
00:37:04,576 --> 00:37:05,766
that journey with you.


980
00:37:06,996 --> 00:37:08,586
We can't wait to see what


981
00:37:08,586 --> 00:37:12,676
amazing things you do.


982
00:37:13,826 --> 00:37:15,556
You can find the documentation


983
00:37:15,556 --> 00:37:16,816
that I was talking about earlier


984
00:37:16,816 --> 00:37:20,146
at the URL behind me and we have


985
00:37:20,146 --> 00:37:21,416
some labs.


986
00:37:21,416 --> 00:37:22,926
We have a health and fitness lab


987
00:37:22,926 --> 00:37:24,636
immediately after this talk


988
00:37:24,636 --> 00:37:25,776
where we're very happy to get


989
00:37:25,776 --> 00:37:27,456
you started with this new API.


990
00:37:27,456 --> 00:37:30,916
Our colleagues Anherika and


991
00:37:30,916 --> 00:37:32,816
Kareem have a talk tomorrow


992
00:37:32,816 --> 00:37:34,796
morning introducing new ways to


993
00:37:34,796 --> 00:37:36,176
work with workouts.


994
00:37:36,746 --> 00:37:38,636
And we have a health fitness and


995
00:37:38,636 --> 00:37:40,146
research get together tomorrow


996
00:37:40,146 --> 00:37:41,906
night where it's an opportunity


997
00:37:41,906 --> 00:37:43,356
for you all to get to know each


998
00:37:43,356 --> 00:37:45,126
other and talk with us as well,


999
00:37:45,666 --> 00:37:49,656
so please do come along to that.


1000
00:37:49,796 --> 00:37:51,206
And with that, thank you very


1001
00:37:51,206 --> 00:37:52,736
much and have a fantastic


1002
00:37:52,736 --> 00:37:52,976
conference.


1003
00:37:53,516 --> 00:37:56,500
[ Applause ]

