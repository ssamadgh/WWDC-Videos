1
00:00:27,516 --> 00:00:31,826
[Applause]


2
00:00:32,326 --> 00:00:34,806
>> Hi. My name is Qasid Sadiq,


3
00:00:34,806 --> 00:00:36,796
and I am on the Apple
Accessibility team.


4
00:00:37,096 --> 00:00:39,436
Welcome to Accessibility
on the Watch.


5
00:00:41,036 --> 00:00:41,936
Before we get into that,


6
00:00:41,936 --> 00:00:45,816
let's talk a little bit
about accessibility.


7
00:00:47,366 --> 00:00:51,166
As you know, there are many
different kinds of users,


8
00:00:51,166 --> 00:00:55,426
and as you can imagine, these
users have many different ways


9
00:00:55,426 --> 00:00:56,546
of interacting with the world.


10
00:00:56,546 --> 00:00:59,496
But for the sake of our
conversation, we are going


11
00:00:59,496 --> 00:01:03,906
to focus on a certain subset of
these users, users, for example,


12
00:01:03,906 --> 00:01:06,106
who are visually impaired
or hard of hearing.


13
00:01:09,226 --> 00:01:12,216
As developers, these
users present us


14
00:01:12,216 --> 00:01:13,596
with a very special opportunity.


15
00:01:14,326 --> 00:01:15,666
It's something that's
unique to us.


16
00:01:16,476 --> 00:01:19,436
It's the opportunity to not
only accommodate these groups


17
00:01:19,436 --> 00:01:24,006
of individuals, but to also
really enable and empower them


18
00:01:24,786 --> 00:01:28,696
to do things they otherwise
might not have been able to do.


19
00:01:28,926 --> 00:01:31,336
Now, all of you are here
because you guys are creating


20
00:01:31,336 --> 00:01:35,326
applications which will allow
people to do amazing things.


21
00:01:36,356 --> 00:01:38,266
So let's let everyone
do those amazing things,


22
00:01:38,786 --> 00:01:40,016
regardless of who they are


23
00:01:40,566 --> 00:01:44,306
or how they interact
with the world.


24
00:01:44,306 --> 00:01:48,376
Now, Apple is committed to
this idea, and this is evident


25
00:01:48,376 --> 00:01:52,106
through our accessibility
features on iOS and OS X,


26
00:01:52,496 --> 00:01:57,096
things like VoiceOver, Switch
Control, Assistive Touch, Zoom,


27
00:01:57,756 --> 00:02:00,206
Guided Access, and
so on and so forth.


28
00:02:01,096 --> 00:02:02,346
The Apple Watch is no different.


29
00:02:03,396 --> 00:02:05,686
We try our hardest to make
this device accessible


30
00:02:05,686 --> 00:02:07,336
to as many users as possible.


31
00:02:08,015 --> 00:02:09,116
So let's get into that.


32
00:02:09,116 --> 00:02:12,506
Now, first we are going to talk
about what is accessibility


33
00:02:12,506 --> 00:02:15,626
on the Apple Watch, who
it's for, how it works,


34
00:02:16,966 --> 00:02:18,866
then I want to tell you guys
about how you, as developers,


35
00:02:18,866 --> 00:02:20,386
can make your WatchKit
apps accessible,


36
00:02:20,386 --> 00:02:23,876
and you guys will get to
see those APIs in action.


37
00:02:25,476 --> 00:02:27,406
Finally, we will round
it out with a few tips


38
00:02:27,406 --> 00:02:28,416
and tricks you should consider


39
00:02:28,416 --> 00:02:30,576
when you are designing your
accessibility experience.


40
00:02:31,076 --> 00:02:34,776
Let's talk about the
accessibility features,


41
00:02:34,776 --> 00:02:37,386
starting with VoiceOver.


42
00:02:39,606 --> 00:02:42,796
Now, VoiceOver is an alternate
interface for blind users.


43
00:02:43,476 --> 00:02:44,746
The idea behind it is simple.


44
00:02:45,706 --> 00:02:47,516
VoiceOver simply
reads out whatever is


45
00:02:47,516 --> 00:02:48,536
under the user's finger.


46
00:02:49,286 --> 00:02:52,256
So for example, if my
finger is on the Clock icon,


47
00:02:52,866 --> 00:02:55,336
VoiceOver will read out "clock."


48
00:02:56,176 --> 00:02:58,646
Additionally, we provide a
set of gestures so it's easy


49
00:02:58,646 --> 00:03:00,216
for a VoiceOver user to safely


50
00:03:00,216 --> 00:03:01,996
and effectively navigate
an interface.


51
00:03:01,996 --> 00:03:03,726
I am going to demo
this later on.


52
00:03:03,726 --> 00:03:08,146
Now, for low-vision
users, we have Zoom.


53
00:03:08,556 --> 00:03:10,456
Just like you can
imagine, Zoom allows you


54
00:03:10,456 --> 00:03:11,676
to zoom into an interface.


55
00:03:12,666 --> 00:03:15,456
On top of that, we provide a set
of two finger gestures inspired


56
00:03:15,456 --> 00:03:17,796
by the iOS zoom gestures
and utilize the Crown


57
00:03:18,316 --> 00:03:20,526
to really make it
seamless and easy


58
00:03:20,526 --> 00:03:21,846
to navigate a zoomed interface.


59
00:03:21,846 --> 00:03:23,546
I am going to demo
that, too, later.


60
00:03:27,066 --> 00:03:30,686
In the same vain as Zoom, there
is the X-Large watch face.


61
00:03:31,096 --> 00:03:34,846
This provides large, simple,
uncluttered readout of the time,


62
00:03:35,456 --> 00:03:37,296
so it's easy for a user
to pick up their wrist


63
00:03:37,296 --> 00:03:41,086
and determine what time it is.


64
00:03:41,266 --> 00:03:45,186
Now, the Apple Watch
has a compact screen,


65
00:03:45,276 --> 00:03:48,276
and although the fonts go a long
way in terms of readability,


66
00:03:48,716 --> 00:03:50,716
some users may need to
increase the text size.


67
00:03:51,056 --> 00:03:54,266
For these users, we have the
text size slider and settings.


68
00:03:54,666 --> 00:04:00,196
Now, for users with certain
light and color sensitivities,


69
00:04:00,196 --> 00:04:02,156
there's a Grayscale
switch, which filters the UI


70
00:04:02,156 --> 00:04:04,756
across the whole Watch to
be completely grayscale.


71
00:04:05,386 --> 00:04:08,246
This creates a much easier to
read and undistracting interface


72
00:04:08,246 --> 00:04:09,436
for these particular users.


73
00:04:11,896 --> 00:04:14,916
Now, certain users have
trouble reading interfaces


74
00:04:14,916 --> 00:04:15,776
with blurs on them.


75
00:04:15,916 --> 00:04:17,966
Either the contrast
isn't high enough


76
00:04:18,476 --> 00:04:20,505
or there's distracting
blur or artifacts.


77
00:04:20,736 --> 00:04:23,816
For these users, we have the
Reduce Transparency switch.


78
00:04:25,076 --> 00:04:28,166
This removes transparency from
screens like Notification Center


79
00:04:28,166 --> 00:04:31,976
and Siri so a user can much more
easily read what's happening


80
00:04:31,976 --> 00:04:32,716
on these screens.


81
00:04:36,476 --> 00:04:37,846
Then there's Reduce Motion.


82
00:04:38,616 --> 00:04:40,666
This reduces movement on
the screen all around,


83
00:04:40,666 --> 00:04:42,486
and where movement is
absolutely necessary,


84
00:04:42,486 --> 00:04:45,496
makes it directly correlated
with the user's action.


85
00:04:46,276 --> 00:04:49,646
An example of this is on the
transition from the clock face


86
00:04:49,786 --> 00:04:52,466
to the Home screen, where
instead of zooming in to icons,


87
00:04:52,466 --> 00:04:53,736
we simply have it appear.


88
00:04:56,306 --> 00:04:58,866
This creates a much more
orienting experience


89
00:04:58,866 --> 00:04:59,806
for certain users.


90
00:05:06,696 --> 00:05:10,326
Finally, users with hearing
issues can adjust the left/right


91
00:05:10,326 --> 00:05:13,796
balance and set mono-audio on
their Bluetooth-paired headsets


92
00:05:14,346 --> 00:05:15,226
with their Apple Watch.


93
00:05:16,676 --> 00:05:17,866
So let's see these in action.


94
00:05:40,026 --> 00:05:43,856
Okay. So let's start
with VoiceOver.


95
00:05:44,586 --> 00:05:46,246
You can turn on VoiceOver
one of three ways.


96
00:05:46,416 --> 00:05:49,706
You can use the Apple Watch app
on the iPhone, the Settings app


97
00:05:49,706 --> 00:05:52,326
on the Apple Watch, or
if you have it assigned


98
00:05:52,326 --> 00:05:54,456
in the Apple Watch app,
an Accessibility shortcut.


99
00:05:54,936 --> 00:05:56,706
This allows you to simply
triple-click the Crown


100
00:05:56,706 --> 00:05:57,746
to turn VoiceOver on..


101
00:05:58,566 --> 00:05:59,766
>> VOICEOVER: VoiceOver on.


102
00:06:00,016 --> 00:06:00,416
Weather.


103
00:06:01,656 --> 00:06:04,056
>> QASID SADIQ: To
demonstrate how VoiceOver works,


104
00:06:04,056 --> 00:06:05,536
let's try to do something
with VoiceOver.


105
00:06:05,536 --> 00:06:07,566
Let's try to find out what
time it is in New York.


106
00:06:08,226 --> 00:06:10,966
Before anything else, we have
to get a sense of where we are


107
00:06:10,966 --> 00:06:13,406
on screen, and a good
way of doing that is


108
00:06:13,406 --> 00:06:16,376
by placing your finger on
screen and having VoiceOver read


109
00:06:16,376 --> 00:06:17,586
out whatever is under
your finger.


110
00:06:17,586 --> 00:06:19,476
I am going to go
ahead and do that.


111
00:06:22,486 --> 00:06:23,356
>> VOICEOVER: Calendar.


112
00:06:24,106 --> 00:06:25,876
Music. Maps.


113
00:06:26,566 --> 00:06:27,146
Alarm.


114
00:06:29,206 --> 00:06:31,016
>> QASID SADIQ: So now
I actually have a sense


115
00:06:31,016 --> 00:06:32,146
of where I am on screen.


116
00:06:32,316 --> 00:06:33,986
And I want to move through
these elements and get


117
00:06:33,986 --> 00:06:37,046
to the World Clock app icon so
I can open that application.


118
00:06:37,106 --> 00:06:40,746
Now, the way a VoiceOver user
moves through these elements is


119
00:06:40,746 --> 00:06:43,886
by swiping right to move to the
next element or by swiping left


120
00:06:43,886 --> 00:06:44,996
to move to the previous element.


121
00:06:44,996 --> 00:06:46,966
So I am going to go
ahead and swipe right


122
00:06:47,066 --> 00:06:48,996
until VoiceOver speaks
World Clock,


123
00:06:49,326 --> 00:06:53,286
indicating that it is focused
on the World Clock app icon.


124
00:06:53,406 --> 00:06:55,706
>> VOICEOVER: World clock.


125
00:06:55,846 --> 00:06:56,866
World clock.


126
00:06:56,866 --> 00:06:58,466
Stop -- world Clock.


127
00:06:59,806 --> 00:07:01,806
>> QASID SADIQ: Now
VoiceOver spoke "World Clock."


128
00:07:01,806 --> 00:07:03,706
That means I am focused
on World Clock.


129
00:07:04,386 --> 00:07:07,316
Now to actually open the app I
need to activate the element,


130
00:07:07,316 --> 00:07:08,366
and to activate the element,


131
00:07:08,366 --> 00:07:10,326
I can double-tap
anywhere on screen.


132
00:07:12,756 --> 00:07:17,336
So let's wait for this to load.


133
00:07:18,326 --> 00:07:19,726
>> VOICEOVER: World Clock.


134
00:07:21,656 --> 00:07:23,766
World Clock.


135
00:07:23,766 --> 00:07:25,356
Back. Cupertino.


136
00:07:25,476 --> 00:07:27,856
1:37 p.m. Today.


137
00:07:28,576 --> 00:07:31,086
>> QASID SADIQ: Now, I want
to find out what time it is


138
00:07:31,086 --> 00:07:33,436
in New York, and since
this is my Watch,


139
00:07:33,766 --> 00:07:35,676
I know that New York is at
the bottom of this list,


140
00:07:35,796 --> 00:07:37,276
so I can simply scroll
to the bottom.


141
00:07:37,956 --> 00:07:40,536
The way a VoiceOver user scrolls
is by placing two fingers


142
00:07:40,536 --> 00:07:43,456
on screen and scrolling
in the direction --


143
00:07:43,456 --> 00:07:44,806
or flicking in the
direction of the scroll.


144
00:07:44,806 --> 00:07:49,006
So I want to go ahead and do
that until I get to the bottom.


145
00:07:49,166 --> 00:07:50,186
>> VOICEOVER: Rows 4 to 7.


146
00:07:50,426 --> 00:07:52,346
Row 6 -- row 7.


147
00:07:54,306 --> 00:07:57,626
New York. 4:38 p.m. Today.


148
00:07:57,966 --> 00:07:58,886
Plus 3 hours.


149
00:08:00,136 --> 00:08:01,746
>> QASID SADIQ: Now I know
what time it is in New York.


150
00:08:02,216 --> 00:08:03,206
So that's VoiceOver.


151
00:08:03,206 --> 00:08:05,716
Now let's go ahead
and look at Zoom.


152
00:08:05,926 --> 00:08:08,156
To first things first, I
have to turn VoiceOver off,


153
00:08:08,156 --> 00:08:10,326
and I can use my Accessibility
shortcut to turn it off


154
00:08:10,326 --> 00:08:11,446
by triple-tapping the Crown.


155
00:08:12,566 --> 00:08:14,156
>> VOICEOVER: VoiceOver off.


156
00:08:14,566 --> 00:08:16,066
>> QASID SADIQ: And all the
Accessibility settings are


157
00:08:16,066 --> 00:08:16,636
in Settings.


158
00:08:17,096 --> 00:08:17,916
Accessibility.


159
00:08:19,256 --> 00:08:24,676
Zoom. Now, I want
to read this text,


160
00:08:24,676 --> 00:08:25,756
and it's actually a bit small,


161
00:08:25,756 --> 00:08:27,406
so it seems like a good
place I can zoom in.


162
00:08:28,196 --> 00:08:29,786
So to zoom in with Zoom,


163
00:08:29,786 --> 00:08:31,886
you simply two-finger
double-tap on screen.


164
00:08:36,556 --> 00:08:38,346
Now that I am zoomed
in, I actually want


165
00:08:38,346 --> 00:08:39,666
to adjust the zoom level a bit.


166
00:08:40,196 --> 00:08:41,166
To adjust the zoom level,


167
00:08:41,525 --> 00:08:43,956
I simply two-finger
double-tap and scroll.


168
00:08:49,816 --> 00:08:51,936
So that's perfect.


169
00:08:52,206 --> 00:08:55,276
Now I have to move
the zoom focus


170
00:08:55,276 --> 00:08:56,836
around so I can actually
read this text.


171
00:08:57,366 --> 00:08:59,596
Now, I can use a two-finger
pan gesture, which is similar


172
00:08:59,596 --> 00:09:02,466
to the iOS pan gesture in
Zoom to move this around,


173
00:09:03,416 --> 00:09:05,136
but there is an issue with this.


174
00:09:05,616 --> 00:09:07,776
It's a bit slow, and also
my fingers are in the way


175
00:09:07,776 --> 00:09:09,636
of what I am trying to read.


176
00:09:09,636 --> 00:09:11,966
Just for this problem, we have
actually utilized the Crown


177
00:09:11,966 --> 00:09:13,846
to allow you to move
the zoom focus around.


178
00:09:13,846 --> 00:09:16,286
If I rotate the Crown forward,


179
00:09:16,586 --> 00:09:20,296
it takes me from left
to right, like so.


180
00:09:20,296 --> 00:09:25,276
Once I hit the end of the line,
it takes me to the next line.


181
00:09:26,876 --> 00:09:28,586
Similarly, if I rotate
it backwards,


182
00:09:28,586 --> 00:09:30,486
it does the exact
reverse of that.


183
00:09:34,946 --> 00:09:35,666
There you go.


184
00:09:36,496 --> 00:09:37,056
That's Zoom.


185
00:09:49,926 --> 00:09:53,096
Now, as you can see, the
Apple Watch is quite an


186
00:09:53,096 --> 00:09:53,946
accessible device.


187
00:09:54,986 --> 00:09:56,616
But for it to be
completely accessible,


188
00:09:56,616 --> 00:09:58,926
it needs to have
accessible applications.


189
00:09:58,926 --> 00:10:00,596
This is where you come in.


190
00:10:01,646 --> 00:10:03,736
This is where you really
get to be the champions


191
00:10:03,736 --> 00:10:06,816
of accessibility and the
champions of our VoiceOver users


192
00:10:07,176 --> 00:10:08,746
by making your applications
accessible.


193
00:10:08,786 --> 00:10:11,386
And the way you make your
applications accessible is


194
00:10:11,386 --> 00:10:13,016
through our WatchKit
Accessibility API.


195
00:10:15,186 --> 00:10:17,646
For the most part, this
is actually a relatively


196
00:10:17,646 --> 00:10:18,356
simple task.


197
00:10:18,816 --> 00:10:20,846
It involves setting a
couple of properties


198
00:10:20,846 --> 00:10:22,106
on a few interface items.


199
00:10:23,376 --> 00:10:27,716
Now, each interface item is a
subclass of WK Interface Object,


200
00:10:28,196 --> 00:10:30,726
and this is exactly where you
annotate your accessibility


201
00:10:30,726 --> 00:10:33,796
information to make these
interface items accessible.


202
00:10:34,806 --> 00:10:36,996
You only need these two
core functions to make most


203
00:10:36,996 --> 00:10:39,256
of your application accessible,
so let's go ahead and talk


204
00:10:39,256 --> 00:10:41,266
about these, starting
with Existence.


205
00:10:42,476 --> 00:10:45,406
Before anything else,
VoiceOver needs to know what is


206
00:10:45,686 --> 00:10:46,856
and what is not an element.


207
00:10:48,786 --> 00:10:51,096
Accessibility elements are those
things that you saw me swiping


208
00:10:51,096 --> 00:10:52,326
through and touching in my demo.


209
00:10:53,286 --> 00:10:55,726
Now, by default, our frameworks
give a lot of this to you,


210
00:10:56,116 --> 00:10:57,856
things like buttons, labels,


211
00:10:57,856 --> 00:10:59,586
and switches are all
accessibility elements.


212
00:11:00,076 --> 00:11:01,816
But sometimes you might need
to get away from the default.


213
00:11:02,566 --> 00:11:04,736
For example, if you
want to expose an image


214
00:11:04,736 --> 00:11:06,466
which is not an accessibility
element,


215
00:11:06,676 --> 00:11:09,786
that presents valuable
information to the user.


216
00:11:10,866 --> 00:11:13,766
Or if you want to group together
a few accessibility elements


217
00:11:13,766 --> 00:11:15,516
to make it easy for
your VoiceOver user


218
00:11:15,516 --> 00:11:16,456
to navigate the screen.


219
00:11:17,176 --> 00:11:18,916
Like we did here in
the Conversation group,


220
00:11:19,506 --> 00:11:21,156
where we grouped together
those three labels


221
00:11:21,276 --> 00:11:24,576
so that a VoiceOver user does
not have to swipe three times


222
00:11:24,576 --> 00:11:25,866
to get past one Conversation.


223
00:11:26,366 --> 00:11:29,016
You can set this
by passing a bool


224
00:11:29,016 --> 00:11:32,006
into the function set
Is Accessibility Element


225
00:11:32,806 --> 00:11:33,686
on an interface item.


226
00:11:37,296 --> 00:11:41,176
The way a VoiceOver user
sees what's on screen is


227
00:11:41,176 --> 00:11:43,236
by hearing a short
description of that element.


228
00:11:45,166 --> 00:11:48,216
This short description is
called an accessibility label.


229
00:11:50,296 --> 00:11:52,176
Now, just like Is
Accessibility Element,


230
00:11:52,216 --> 00:11:53,696
a lot of this is
determined for you.


231
00:11:55,576 --> 00:11:59,706
Accessibility infers a label
by doing things like looking


232
00:11:59,806 --> 00:12:03,566
at the text contained inside an
interface item, but sometimes


233
00:12:03,776 --> 00:12:07,236
that inferred label may be
misleading or nonexistent.


234
00:12:07,236 --> 00:12:09,446
An example of that
is a Home screen,


235
00:12:09,656 --> 00:12:11,416
where each of these app
icons are not associated


236
00:12:11,416 --> 00:12:12,126
with any text.


237
00:12:12,826 --> 00:12:14,156
In these particular situations,


238
00:12:14,756 --> 00:12:17,006
you have to set the
Aaccessibility label yourself.


239
00:12:17,006 --> 00:12:20,256
And the way you do that
is by passing a string


240
00:12:20,256 --> 00:12:20,996
into the function,


241
00:12:21,106 --> 00:12:23,356
et Accessibility Label,
on an interface item.


242
00:12:25,526 --> 00:12:28,926
So now these apps will get you
90 percent of the way in terms


243
00:12:28,926 --> 00:12:30,556
of making your application
accessible --


244
00:12:30,556 --> 00:12:31,546
or these functions, sorry.


245
00:12:32,956 --> 00:12:35,806
But to really complete your
accessibility experience,


246
00:12:35,806 --> 00:12:39,336
you should try to use
these three functions too.


247
00:12:39,616 --> 00:12:40,476
Let's talk about these.


248
00:12:41,936 --> 00:12:44,576
Now, you might remember
VoiceOver saying certain things


249
00:12:44,576 --> 00:12:47,476
like "button" or
"adjustable" or "not enabled."


250
00:12:48,256 --> 00:12:50,626
What's actually happening
here is


251
00:12:51,436 --> 00:12:54,046
that each accessibility
element is associated


252
00:12:54,046 --> 00:12:54,966
with a set of traits.


253
00:12:56,226 --> 00:12:57,886
These traits let
VoiceOver know how


254
00:12:57,886 --> 00:12:59,446
to present an element
to the user.


255
00:12:59,986 --> 00:13:04,496
An example of where we
use this was actually


256
00:13:04,496 --> 00:13:08,776
on the Conversation group,
where we added the button trait


257
00:13:08,776 --> 00:13:10,966
so that a VoiceOver
knows they can double-tap


258
00:13:10,966 --> 00:13:12,246
and activate this element.


259
00:13:12,736 --> 00:13:14,526
The way you set traits
is by passing a bit mask


260
00:13:14,526 --> 00:13:16,326
into the function Set
Accessibility Traits


261
00:13:16,386 --> 00:13:17,206
on an interface item.


262
00:13:20,616 --> 00:13:24,736
Now, sometimes the label and the
traits are not enough to express


263
00:13:24,736 --> 00:13:27,176
to the user exactly
what an element does.


264
00:13:27,176 --> 00:13:29,816
For these particular
situations, it might be useful


265
00:13:29,816 --> 00:13:33,046
to use an accessibility hint,
which is a string spoken


266
00:13:33,046 --> 00:13:34,466
out after the label is spoken


267
00:13:34,956 --> 00:13:36,786
that lets the user
know what they could do


268
00:13:36,786 --> 00:13:37,956
when they are focused
on an element.


269
00:13:38,866 --> 00:13:41,076
You can set an accessibility
hint by passing a string


270
00:13:41,076 --> 00:13:43,036
into the function Set
Accessibility Hint


271
00:13:43,236 --> 00:13:44,036
on an interface item.


272
00:13:44,036 --> 00:13:49,266
Now, certain elements are
associated with a value,


273
00:13:49,266 --> 00:13:51,336
which change quite often
throughout the lifecycle


274
00:13:51,336 --> 00:13:51,966
of that element.


275
00:13:52,456 --> 00:13:56,536
An example of this is the
Minute Picker and the Timer app,


276
00:13:56,536 --> 00:13:58,226
where that value is the number


277
00:13:58,226 --> 00:13:59,936
of minutes that's
currently selected.


278
00:14:00,416 --> 00:14:02,686
For this particular situation,


279
00:14:02,686 --> 00:14:04,676
we have something called
an Accessibility Value.


280
00:14:05,676 --> 00:14:07,856
This is something that's spoken
out after the label is read out


281
00:14:07,856 --> 00:14:09,366
or anytime the value changes.


282
00:14:09,926 --> 00:14:11,616
You can set this
by passing a string


283
00:14:11,616 --> 00:14:13,676
into the function Set
Accessibility Value


284
00:14:13,856 --> 00:14:14,706
on an interface item.


285
00:14:16,706 --> 00:14:18,816
So these are the core
accessibility functions.


286
00:14:19,286 --> 00:14:21,066
Let's talk about something
a little bit more complex,


287
00:14:21,546 --> 00:14:22,266
image regions.


288
00:14:22,666 --> 00:14:26,716
Now, it's a common pattern
on the Watch to take a bunch


289
00:14:26,716 --> 00:14:29,196
of information, put
that into an image,


290
00:14:29,196 --> 00:14:30,786
and present that to a user.


291
00:14:30,886 --> 00:14:34,886
An example of this is a
weather dial in the Weather app.


292
00:14:39,376 --> 00:14:41,836
We can try to annotate an
accessibility label to this,


293
00:14:41,836 --> 00:14:42,566
but it would be pretty hard


294
00:14:42,566 --> 00:14:44,696
to actually express what's
happening in this image


295
00:14:44,696 --> 00:14:45,946
with a few concise words.


296
00:14:46,536 --> 00:14:49,586
As you can see, there are 11
conditions, each associated


297
00:14:49,586 --> 00:14:51,636
with a time, and there's
a current temperature.


298
00:14:51,716 --> 00:14:54,236
What we really need
here is the ability


299
00:14:54,236 --> 00:14:56,346
to take the relevant regions,


300
00:14:57,256 --> 00:14:58,726
carve them up into
separate regions,


301
00:14:59,036 --> 00:15:00,596
and associate information
with them.


302
00:15:01,586 --> 00:15:05,386
So for example, one
Condition icon is associated


303
00:15:05,386 --> 00:15:06,996
with 1 a.m., partly cloudy.


304
00:15:07,556 --> 00:15:12,256
You can do this through the
WK accessibility image region


305
00:15:12,256 --> 00:15:15,166
object, where the
region is a CGRect frame,


306
00:15:16,246 --> 00:15:18,566
and the information
is a string label.


307
00:15:19,616 --> 00:15:21,026
You can take an array
of these objects,


308
00:15:21,116 --> 00:15:23,736
pass them into the function
Set Accessibility Image Regions


309
00:15:23,786 --> 00:15:27,386
on an interface item to present
them to a user as a series


310
00:15:27,386 --> 00:15:28,556
of accessibility elements


311
00:15:28,596 --> 00:15:30,246
that they can swipe
through and touch.


312
00:15:33,386 --> 00:15:38,896
Finally, as you are designing
your accessibility application


313
00:15:38,896 --> 00:15:41,516
user experience, you might
come across a situation


314
00:15:41,516 --> 00:15:43,356
where you might need
to adjust the UI a bit


315
00:15:43,356 --> 00:15:44,546
for your VoiceOver users.


316
00:15:45,266 --> 00:15:46,776
And to do that, your
application needs


317
00:15:46,776 --> 00:15:49,036
to know whether VoiceOver
is running or not.


318
00:15:50,456 --> 00:15:52,426
So for this, we add a new API,


319
00:15:54,056 --> 00:15:56,236
WK Accessibility is
VoiceOver running.


320
00:16:00,016 --> 00:16:01,026
Let's see this in action.


321
00:16:01,556 --> 00:16:05,296
So I created an application
which allows you


322
00:16:05,296 --> 00:16:07,226
to order a sandwich
right off of your wrist,


323
00:16:07,356 --> 00:16:08,776
and it's actually
pretty straightforward.


324
00:16:09,516 --> 00:16:11,466
First thing you do is you
actually make your sandwich


325
00:16:11,866 --> 00:16:14,036
by selecting the layers that
you want on your sandwich.


326
00:16:14,436 --> 00:16:18,496
So I want to take some bread,
add some roast beef on top


327
00:16:18,496 --> 00:16:21,586
of that, maybe I'll
have some lettuce,


328
00:16:21,586 --> 00:16:24,596
and end it with some more bread.


329
00:16:24,596 --> 00:16:30,296
And I can go back, see a visual
representation of my sandwich,


330
00:16:30,796 --> 00:16:34,546
and then I can go
ahead and order.


331
00:16:35,726 --> 00:16:38,306
So we want to see if this
application is actually


332
00:16:38,306 --> 00:16:41,426
accessible to all of our users,
especially our VoiceOver users.


333
00:16:41,856 --> 00:16:44,606
And a good way of
actually doing that is


334
00:16:44,606 --> 00:16:46,336
by actually just
turning VoiceOver on


335
00:16:46,806 --> 00:16:47,906
and trying the application out.


336
00:16:48,476 --> 00:16:50,716
So let's turn VoiceOver on with
our Accessibility shortcut.


337
00:16:51,746 --> 00:16:53,006
>> VOICEOVER: VoiceOver on.


338
00:16:53,256 --> 00:16:54,196
Make sandwich.


339
00:16:54,656 --> 00:16:55,086
Button.


340
00:16:55,706 --> 00:16:56,006
>> QASID SADIQ: Okay.


341
00:16:56,836 --> 00:16:58,306
So we have one issue right away.


342
00:16:58,816 --> 00:17:02,086
We can see that this image
representation of our sandwich,


343
00:17:02,266 --> 00:17:04,236
which presents us valuable
information in terms


344
00:17:04,236 --> 00:17:06,406
of what our sandwich
actually is composed of,


345
00:17:06,746 --> 00:17:09,266
is completely inaccessible, so
we should make this available


346
00:17:09,266 --> 00:17:10,316
to our VoiceOver users.


347
00:17:11,455 --> 00:17:12,306
>> VOICEOVER: Make sandwich.


348
00:17:12,455 --> 00:17:13,856
Order. Button.


349
00:17:14,006 --> 00:17:15,266
I button.


350
00:17:16,606 --> 00:17:18,496
>> QASID SADIQ: Now,
although it's obvious to us


351
00:17:18,496 --> 00:17:21,116
because we can see this is
an information button based


352
00:17:21,116 --> 00:17:24,326
on the visual cues, a VoiceOver
user will only hear the letter


353
00:17:24,326 --> 00:17:28,066
i, and it could be confusing
as to what this actually does.


354
00:17:28,066 --> 00:17:30,216
We should add an
accessibility label to this


355
00:17:30,216 --> 00:17:32,546
that speaks information.


356
00:17:33,226 --> 00:17:34,546
Also, this button
looks a bit small.


357
00:17:34,546 --> 00:17:36,646
If you can imagine, it
might be a bit difficult


358
00:17:36,646 --> 00:17:37,996
for a VoiceOver user
to feel around


359
00:17:37,996 --> 00:17:39,766
and find this information
button.


360
00:17:41,096 --> 00:17:43,696
So for this, we should
actually make it larger


361
00:17:43,696 --> 00:17:44,746
when VoiceOver is running.


362
00:17:45,226 --> 00:17:47,066
Let's go ahead and see.


363
00:17:47,066 --> 00:17:48,006
>> VOICEOVER: Make sandwich.


364
00:17:49,046 --> 00:17:49,716
Make sandwich.


365
00:17:49,946 --> 00:17:51,736
Tap what you want
in your sandwich.


366
00:17:52,206 --> 00:17:56,976
One layer of, roast beef, 210 c.


367
00:17:57,326 --> 00:17:58,166
Two layers of.


368
00:17:58,656 --> 00:17:59,086
Button.


369
00:18:00,086 --> 00:18:05,076
>> QASID SADIQ: The first issue
is VoiceOver is speaking 210 c,


370
00:18:05,516 --> 00:18:07,596
and VoiceOver speaking
isn't necessarily limited


371
00:18:07,596 --> 00:18:10,676
to the screen space
that our interface is.


372
00:18:11,216 --> 00:18:13,686
We should make it
speak 210 calories.


373
00:18:14,376 --> 00:18:16,266
Also, notice we have
to swipe it three times


374
00:18:16,266 --> 00:18:17,366
to get past one layer.


375
00:18:17,366 --> 00:18:19,806
If you can imagine I am
really hungry and want


376
00:18:19,806 --> 00:18:23,276
to make my sandwich right
now, I don't want to have


377
00:18:23,276 --> 00:18:25,016
to swipe three times
to get past one layer.


378
00:18:25,096 --> 00:18:27,136
I have a large sandwich.


379
00:18:27,686 --> 00:18:31,186
We are going to have to fix that
by grouping together each layer.


380
00:18:32,176 --> 00:18:41,216
Let's go ahead and fix that.


381
00:18:41,746 --> 00:18:44,996
So you can actually fix a lot of
your accessibility issues just


382
00:18:44,996 --> 00:18:45,826
through the Storyboard.


383
00:18:45,826 --> 00:18:49,486
So let's go ahead and tackle
the Make Sandwich screen first


384
00:18:49,486 --> 00:18:52,166
and fix the grouping
of the elements


385
00:18:52,166 --> 00:18:54,326
in the Make Sandwich screen
so a VoiceOver user only has


386
00:18:54,326 --> 00:18:55,526
to swipe once per layer.


387
00:18:56,426 --> 00:18:58,166
First things first, we
have to find the group


388
00:18:58,166 --> 00:19:02,376
that contains these
three labels.


389
00:19:03,246 --> 00:19:04,426
And that's here.


390
00:19:04,976 --> 00:19:10,186
We can go over to the sidebar
and set "Accessibility Enabled."


391
00:19:11,096 --> 00:19:13,076
This turns it into an
accessibility element


392
00:19:13,076 --> 00:19:15,006
that a user -- additionally, we
should add a button trait to it


393
00:19:15,006 --> 00:19:16,346
so a user knows they
can double-tap


394
00:19:16,406 --> 00:19:17,536
and activate this element.


395
00:19:18,696 --> 00:19:21,786
The other issue we had on this
screen was the calories label


396
00:19:21,786 --> 00:19:25,256
was being spoken "210 c"
instead of "210 calories."


397
00:19:26,046 --> 00:19:28,896
So let's go to wherever
the number


398
00:19:28,896 --> 00:19:30,926
of calories are being
said, which is right here


399
00:19:31,136 --> 00:19:32,076
on the Calories label.


400
00:19:32,396 --> 00:19:37,086
Setting text to be the
number of calories and c.


401
00:19:37,506 --> 00:19:39,826
Let's add a line to Set
Accessibility Label here too.


402
00:19:48,046 --> 00:19:50,196
What we are doing here is
taking the calories label,


403
00:19:50,516 --> 00:19:52,506
calling the function set
Accessibility Label on it,


404
00:19:53,406 --> 00:19:56,336
and passing in a string,
which uses the number


405
00:19:56,336 --> 00:19:58,486
of calories followed
by the string Calories.


406
00:19:58,986 --> 00:20:02,646
So a user will hear "210
calories" instead of "210 c."


407
00:20:03,656 --> 00:20:06,196
So we fixed the Make Sandwich
screen in terms of accessibility


408
00:20:06,196 --> 00:20:07,336
and we want to test our changes.


409
00:20:07,796 --> 00:20:10,036
We can build onto the Watch,
but that's going to take time


410
00:20:10,096 --> 00:20:12,446
to build on the Watch for
every iterative change.


411
00:20:13,006 --> 00:20:14,476
Instead, let's use
the Simulator.


412
00:20:14,926 --> 00:20:16,696
I am going to run
this on the Simulator.


413
00:20:26,216 --> 00:20:29,896
Now, to test accessibility
changes on the Simulator,


414
00:20:29,896 --> 00:20:33,496
you have to use Accessibility
Inspector, and the way you turn


415
00:20:33,496 --> 00:20:35,656
on the Accessibility Inspector
is by going to Settings,


416
00:20:36,056 --> 00:20:40,686
General, Accessibility,
Accessibility Inspector.


417
00:20:40,686 --> 00:20:42,116
This is a Simulator-only tool.


418
00:20:43,506 --> 00:20:45,906
This allows you to inspect the
accessibility of your elements


419
00:20:46,066 --> 00:20:51,186
by clicking on them, displaying
exactly what is contained inside


420
00:20:51,186 --> 00:20:55,686
the element in this red box,
and also seeing descriptions


421
00:20:55,686 --> 00:20:57,996
of that element, such
as label, hint, value,


422
00:20:57,996 --> 00:20:59,236
and traits associated with it.


423
00:20:59,286 --> 00:21:01,286
So this is awfully
useful when you are trying


424
00:21:01,286 --> 00:21:02,766
to make an element accessible.


425
00:21:04,006 --> 00:21:09,946
So let's go ahead and
see if our changes took.


426
00:21:10,136 --> 00:21:11,896
Now with the Accessibility
Inspector,


427
00:21:12,076 --> 00:21:13,336
clicking only selects
an element.


428
00:21:13,446 --> 00:21:15,076
To activate an element,
you have to double-click.


429
00:21:15,076 --> 00:21:20,086
Now, let's click this.


430
00:21:20,826 --> 00:21:21,976
So let's notice a
few things here.


431
00:21:22,866 --> 00:21:26,956
First of all, notice how the
whole layer is one element.


432
00:21:27,736 --> 00:21:30,866
So now a VoiceOver user only has
to swipe once for each layer,


433
00:21:31,126 --> 00:21:33,056
so they can make their
sandwich quicker and easier.


434
00:21:33,616 --> 00:21:37,666
Also, notice how the Calories
label now speaks "210 calories,


435
00:21:37,666 --> 00:21:38,836
" so it's much more clear


436
00:21:38,836 --> 00:21:40,766
to the user what this
is actually saying.


437
00:21:41,346 --> 00:21:44,176
And finally, it has a button
trait, so our user now knows


438
00:21:44,176 --> 00:21:46,086
that they can double-tap
and activate this element.


439
00:21:47,146 --> 00:21:48,076
So we fixed a screen.


440
00:21:48,546 --> 00:21:51,616
Let's go ahead and fix
the starting screen


441
00:21:51,616 --> 00:21:53,786
where we actually -- the
interface controller.


442
00:21:54,936 --> 00:21:56,756
Now, the first issue
we had here was


443
00:21:56,926 --> 00:21:59,256
that sandwich image
representation was not


444
00:21:59,256 --> 00:22:00,136
accessible at all.


445
00:22:00,676 --> 00:22:03,106
And that sandwich image
representation actually provided


446
00:22:03,106 --> 00:22:04,486
a lot of information
to the user.


447
00:22:05,286 --> 00:22:07,876
So it's a bit hard
to actually try


448
00:22:07,876 --> 00:22:10,096
to just add an accessibility
label to that image


449
00:22:10,316 --> 00:22:12,956
because we want to express
what layers are on there


450
00:22:12,956 --> 00:22:14,096
and the order of those layers.


451
00:22:15,146 --> 00:22:18,286
So this seems like a job for
accessibility image regions.


452
00:22:19,166 --> 00:22:22,766
So let's first find out where
the sandwich image is set.


453
00:22:22,976 --> 00:22:26,416
That's set over here, and
the image is generated here.


454
00:22:26,606 --> 00:22:27,956
Let's generate the
image regions.


455
00:22:27,956 --> 00:22:34,556
So I am going to add a function
to generate the image regions.


456
00:22:35,046 --> 00:22:37,866
What this function is doing
is enumerating each layer,


457
00:22:38,696 --> 00:22:42,376
creating an accessibility
image region, setting the label


458
00:22:42,376 --> 00:22:44,276
of that image region to
be the name of the layer


459
00:22:44,636 --> 00:22:46,796
or the sandwich layer,
and setting the frame


460
00:22:46,796 --> 00:22:49,716
to be the frame used to
generate the original image.


461
00:22:50,616 --> 00:22:52,886
Finally, we are adding it to
an array and returning that.


462
00:22:53,906 --> 00:22:55,996
Let's go ahead and add this to
the header so we can call it


463
00:22:55,996 --> 00:22:57,116
from the interface controller.


464
00:23:02,046 --> 00:23:03,806
And then let's go
ahead and call it


465
00:23:03,806 --> 00:23:04,816
from the interface controller.


466
00:23:11,146 --> 00:23:12,786
So we are taking
the sandwich image,


467
00:23:13,426 --> 00:23:15,466
we are calling Set Accessibility
Image Regions on it,


468
00:23:15,956 --> 00:23:17,366
or the generated image regions.


469
00:23:17,886 --> 00:23:21,666
Now, the second issue
we had here was


470
00:23:21,726 --> 00:23:24,646
that the information button
only being spoken as "i."


471
00:23:25,136 --> 00:23:27,436
Since the label doesn't change
at all throughout the lifecycle


472
00:23:27,436 --> 00:23:28,306
of the information button,


473
00:23:28,636 --> 00:23:30,146
we can simply set it
in the Storyboard.


474
00:23:30,706 --> 00:23:33,236
Let's select that
information button.


475
00:23:33,766 --> 00:23:37,976
Let's go ahead and set the
label to be "information."


476
00:23:38,506 --> 00:23:40,176
Like so. Okay.


477
00:23:44,556 --> 00:23:46,956
So now we fixed that label.


478
00:23:46,956 --> 00:23:49,236
But the other issue we had
with the information button was


479
00:23:49,236 --> 00:23:51,346
that it wasn't large
enough for a VoiceOver user


480
00:23:51,346 --> 00:23:52,876
to easily feel on screen.


481
00:23:53,286 --> 00:23:55,896
So we need to resize it based
on whether VoiceOver is running.


482
00:23:55,896 --> 00:23:57,906
So I am going to add
a function to do that.


483
00:23:58,406 --> 00:24:04,086
What this is doing is it checks
whether VoiceOver is running


484
00:24:04,256 --> 00:24:06,586
with a WK Accessibility
Is VoiceOver Running call,


485
00:24:07,416 --> 00:24:09,656
and if it is, it sets the
height and width to be 40.


486
00:24:09,946 --> 00:24:11,186
Otherwise it sets it to be 20.


487
00:24:11,886 --> 00:24:17,436
Now, we have to call this on
Will Activate, so this ...


488
00:24:32,856 --> 00:24:35,686
And also, just in case someone
turns VoiceOver on while


489
00:24:35,686 --> 00:24:37,676
on this screen, we should
go ahead and register


490
00:24:37,676 --> 00:24:42,726
for the notification and
have it call this function.


491
00:24:43,456 --> 00:24:46,936
Notification is WK accessibility
VoiceOver status changed.


492
00:24:48,176 --> 00:24:52,806
Now, let's see our fixed
application in action.


493
00:24:54,546 --> 00:24:54,716
>> VOICEOVER: Eats.


494
00:24:54,876 --> 00:24:56,696
Eats fixed.


495
00:24:57,526 --> 00:25:04,156
Eats fixed.


496
00:25:04,966 --> 00:25:05,916
Make sandwich.


497
00:25:06,416 --> 00:25:06,916
Button.


498
00:25:07,246 --> 00:25:07,796
>> QASID SADIQ: Right away,


499
00:25:07,796 --> 00:25:10,556
we can see that that information
button is already larger.


500
00:25:10,556 --> 00:25:11,916
>> VOICEOVER: Information
button.


501
00:25:11,916 --> 00:25:14,046
>> QASID SADIQ: And the label
is being spoken correctly.


502
00:25:14,666 --> 00:25:18,926
So let's go ahead and
make our sandwich.


503
00:25:18,926 --> 00:25:20,976
>> VOICEOVER: Make sandwich.


504
00:25:20,976 --> 00:25:23,386
Button. Tap what you
want in your sandwich.


505
00:25:24,146 --> 00:25:26,606
Roast beef, 210 calories.


506
00:25:27,166 --> 00:25:30,536
Button. One layer of roast beef.


507
00:25:30,726 --> 00:25:32,806
Bread, 130 calories.


508
00:25:33,026 --> 00:25:34,386
One layer of bread.


509
00:25:34,716 --> 00:25:38,186
One layer of roast
beef, 210 calories.


510
00:25:38,706 --> 00:25:39,136
Button.


511
00:25:39,776 --> 00:25:40,116
>> QASID SADIQ: Okay.


512
00:25:40,556 --> 00:25:43,296
So right away you can see the
calories label is being spoken


513
00:25:43,296 --> 00:25:45,436
correctly, and that's a
lot more clear to the user.


514
00:25:46,036 --> 00:25:48,206
Also, each layer is
a separate element,


515
00:25:48,276 --> 00:25:49,976
making navigation
significantly better.


516
00:25:51,336 --> 00:25:53,236
Now let's go ahead and look
at our image representation


517
00:25:53,236 --> 00:25:55,206
of our sandwich and see
how accessible that is.


518
00:25:55,206 --> 00:25:57,326
>> VOICEOVER: Make sandwich.


519
00:25:57,326 --> 00:25:57,946
Roast beef.


520
00:25:58,586 --> 00:26:00,606
Image. Bread.


521
00:26:01,116 --> 00:26:01,546
Image.


522
00:26:02,296 --> 00:26:02,666
>> QASID SADIQ: Now,


523
00:26:02,766 --> 00:26:05,636
our VoiceOver user can literally
swipe through their sandwich.


524
00:26:06,206 --> 00:26:11,746
So there you go.


525
00:26:13,316 --> 00:26:13,926
>> VOICEOVER: Home.


526
00:26:14,516 --> 00:26:21,766
[Applause]


527
00:26:22,266 --> 00:26:26,056
>> QASID SADIQ: Now, as you
guys know, you, as developers,


528
00:26:26,056 --> 00:26:28,926
now have the ability to
make your own custom clock


529
00:26:28,926 --> 00:26:29,916
face Complications.


530
00:26:30,616 --> 00:26:34,756
And just like your applications,
these need to be accessible too.


531
00:26:34,966 --> 00:26:38,206
Now, our frameworks can
determine an accessibility label


532
00:26:38,206 --> 00:26:40,986
for most complications, but
there are a couple situations


533
00:26:40,986 --> 00:26:43,756
where that accessibility
label may be misrepresentative


534
00:26:43,756 --> 00:26:45,516
or nonexistent.


535
00:26:46,376 --> 00:26:49,176
You see, each clock face
Complication is composed


536
00:26:49,176 --> 00:26:53,086
of a set of image and text
providers, and although most


537
00:26:53,086 --> 00:26:56,516
of these providers have very
obvious accessibility labels


538
00:26:56,516 --> 00:27:00,976
associated with them,
a couple don't.


539
00:27:00,976 --> 00:27:02,836
Image provider and
Simple Text provider.


540
00:27:03,506 --> 00:27:05,686
So for these two
particular providers,


541
00:27:05,686 --> 00:27:09,086
we've added a property,
Accessibility Label.


542
00:27:10,396 --> 00:27:13,146
This works just like the
accessibility label does


543
00:27:13,146 --> 00:27:14,756
on a normal WatchKit
application,


544
00:27:15,406 --> 00:27:16,466
and it's actually pretty easy.


545
00:27:17,186 --> 00:27:25,856
So I made a complication to
make it really easy for you


546
00:27:25,856 --> 00:27:27,656
to order a sandwich, just in
case you are really hungry


547
00:27:27,656 --> 00:27:29,516
that you don't have time
to open the application.


548
00:27:29,516 --> 00:27:31,276
You simply want to
lift your wrist


549
00:27:31,476 --> 00:27:32,816
and get a sandwich right now.


550
00:27:32,966 --> 00:27:35,296
So this is the Complication
right here.


551
00:27:35,706 --> 00:27:36,516
And since it's an image,


552
00:27:36,516 --> 00:27:39,306
it has no accessibility
label associated with it.


553
00:27:39,666 --> 00:27:42,586
So let's go ahead and actually
set an accessibility label


554
00:27:42,706 --> 00:27:43,306
on it.


555
00:27:47,116 --> 00:27:53,306
So we go to wherever the
Complication is created,


556
00:27:54,516 --> 00:27:55,646
or the provider is created.


557
00:27:56,146 --> 00:27:58,436
And we set an accessibility
label.


558
00:28:05,416 --> 00:28:06,196
And there you go.


559
00:28:07,406 --> 00:28:07,986
It's that easy.


560
00:28:08,966 --> 00:28:11,886
So let's see how a
VoiceOver user will hear this.


561
00:28:23,876 --> 00:28:25,696
>> VOICEOVER: Get sandwich now.


562
00:28:25,946 --> 00:28:27,246
>> QASID SADIQ: So
if you couldn't hear,


563
00:28:27,566 --> 00:28:29,396
the label spoke "get
a sandwich now,"


564
00:28:29,806 --> 00:28:31,526
so now our VoiceOver
users have the ability


565
00:28:31,906 --> 00:28:35,786
to order a sandwich
on a double-tap.


566
00:28:35,986 --> 00:28:38,756
So as you can see, it's
actually really quite easy


567
00:28:38,756 --> 00:28:41,006
to make your applications
and Complications accessible.


568
00:28:41,006 --> 00:28:43,676
Let's talk about a few things
you should keep in mind


569
00:28:43,676 --> 00:28:45,806
when you are designing your
accessibility experience.


570
00:28:45,856 --> 00:28:49,236
First of all, try to make
your images accessible.


571
00:28:49,856 --> 00:28:51,896
Especially if they provide
valuable information


572
00:28:51,896 --> 00:28:52,496
to the user.


573
00:28:52,496 --> 00:28:54,546
You should set an
accessibility label on them.


574
00:28:55,036 --> 00:28:57,656
Or, if they are providing a
very complex set of information,


575
00:28:57,906 --> 00:28:59,826
use the accessibility
image regions API.


576
00:29:03,336 --> 00:29:04,726
When you design your
application,


577
00:29:04,726 --> 00:29:06,236
think about how a
VoiceOver user is going


578
00:29:06,236 --> 00:29:07,476
to navigate your screen.


579
00:29:07,536 --> 00:29:09,696
You don't want to make it
so a VoiceOver user has


580
00:29:09,696 --> 00:29:12,386
to swipe several times to
get past one logical item.


581
00:29:12,826 --> 00:29:15,646
So group your accessibility
elements together by using Set


582
00:29:15,646 --> 00:29:16,766
As Accessibility Element.


583
00:29:17,396 --> 00:29:21,396
Now, this is probably true for
non-VoiceOver users as well,


584
00:29:21,396 --> 00:29:23,336
but you should avoid
tiny interface items.


585
00:29:23,926 --> 00:29:27,066
It's difficult for a
VoiceOver user to feel


586
00:29:27,096 --> 00:29:29,556
and find a tiny interface
item on screen.


587
00:29:31,316 --> 00:29:33,286
Finally, most importantly,


588
00:29:33,866 --> 00:29:35,676
try accessibility
on your application.


589
00:29:36,176 --> 00:29:38,506
See what your application looks
like with increased text size.


590
00:29:38,956 --> 00:29:41,996
Or, see how your application
works with VoiceOver on.


591
00:29:42,496 --> 00:29:43,926
You might be surprised
at what you find.


592
00:29:44,536 --> 00:29:50,936
In conclusion, the Apple Watch
is quite an accessible device.


593
00:29:51,466 --> 00:29:54,396
But for it to be
completely accessible,


594
00:29:54,396 --> 00:29:56,256
it needs to have
accessible apps.


595
00:29:57,036 --> 00:29:59,426
This is where you guys really
get to be the champions


596
00:29:59,426 --> 00:30:00,706
of our VoiceOver users.


597
00:30:02,376 --> 00:30:05,136
And as you guys just saw, this
is actually a pretty easy task.


598
00:30:07,206 --> 00:30:11,156
So let's empower all of our
users to do those amazing things


599
00:30:11,156 --> 00:30:15,176
that our applications let us
do, regardless of who they are


600
00:30:15,176 --> 00:30:17,236
or how they are interact
with the world.


601
00:30:19,236 --> 00:30:20,256
Thank you for your time.


602
00:30:21,296 --> 00:30:22,706
You can actually
get more information


603
00:30:22,706 --> 00:30:24,476
on the WatchKit Programming
Guide.


604
00:30:24,946 --> 00:30:27,256
You can ask questions
on the Developer forums,


605
00:30:27,256 --> 00:30:29,126
or contact your Evangelist,
Paul Marcos.


606
00:30:29,596 --> 00:30:30,496
Thank you for your time.


607
00:30:30,496 --> 00:30:30,966
I appreciate it.


608
00:30:31,516 --> 00:30:36,500
[Applause]

