1
00:00:07,516 --> 00:00:20,516
[ Music ]


2
00:00:21,516 --> 00:00:28,046
[ Applause ]


3
00:00:28,546 --> 00:00:29,536
>> Hello, everybody.


4
00:00:30,046 --> 00:00:32,016
Thank you for coming out


5
00:00:32,016 --> 00:00:34,046
and spending your
Friday afternoon with us.


6
00:00:34,286 --> 00:00:36,676
Hopefully you had a
great week at WWDC.


7
00:00:36,676 --> 00:00:43,596
And I'm excited for our talk
now because I think we're going


8
00:00:43,596 --> 00:00:47,206
to discuss something
that all of you want.


9
00:00:48,326 --> 00:00:50,686
Fundamentally, everybody is here


10
00:00:50,686 --> 00:00:54,006
because you love
building great apps,


11
00:00:54,346 --> 00:00:58,496
and you probably want those
great apps to have more users.


12
00:00:59,206 --> 00:01:04,556
Now, the good news is, we want
to figure out opportunities


13
00:01:04,635 --> 00:01:07,686
to offer your app at the
right time to our customers,


14
00:01:07,956 --> 00:01:10,206
so that you get more engagement.


15
00:01:10,586 --> 00:01:14,646
And we're going to spend the
entirety of this talk discussing


16
00:01:14,956 --> 00:01:19,176
about different ways
that you can do that.


17
00:01:19,326 --> 00:01:22,126
We promote apps in
various forms,


18
00:01:22,236 --> 00:01:25,416
throughout the operating system
today in many different places.


19
00:01:26,476 --> 00:01:29,786
Siri app suggestions are
available to our customers


20
00:01:29,786 --> 00:01:31,476
when they swipe left from home,


21
00:01:31,476 --> 00:01:33,646
as well as when they
invoke search.


22
00:01:35,196 --> 00:01:38,056
Even after entering a
query, you may get results


23
00:01:38,116 --> 00:01:41,996
from inside other
third party apps.


24
00:01:43,436 --> 00:01:47,576
Handoff is another way we
advertise third party apps,


25
00:01:47,576 --> 00:01:48,786
your apps, as well.


26
00:01:49,086 --> 00:01:52,996
As you start an activity from
one device and more to the next,


27
00:01:53,366 --> 00:01:57,136
we try to anticipate what
you're about to do and offer


28
00:01:57,136 --> 00:02:01,706
that app's icon in the bottom
left hand corner of the screen.


29
00:02:01,886 --> 00:02:04,926
In certain situations, where
we think what you really want


30
00:02:04,926 --> 00:02:09,406
to do is play a form of media,
we'll promote your app's content


31
00:02:09,406 --> 00:02:10,886
to the lock screen
of the device.


32
00:02:11,306 --> 00:02:15,776
So say after you plug in a
headphone or Bluetooth pair


33
00:02:15,966 --> 00:02:19,786
to your car or your
speakers, if there's an app


34
00:02:19,786 --> 00:02:21,986
that you usually use
in that circumstance,


35
00:02:22,026 --> 00:02:24,906
the system will learn that, and
then offer not only that app,


36
00:02:24,906 --> 00:02:26,286
but that app's content.


37
00:02:26,286 --> 00:02:27,596
And we're going to talk today


38
00:02:27,836 --> 00:02:33,476
about how you can build a great
experience for that environment.


39
00:02:33,476 --> 00:02:35,616
As you're using the
operating system,


40
00:02:35,616 --> 00:02:39,416
say reading a news article,
you can create reminders


41
00:02:39,416 --> 00:02:42,966
that are contextual to the
content you're staring at.


42
00:02:42,966 --> 00:02:44,836
So for example, if
you're reading an article


43
00:02:44,836 --> 00:02:48,246
and you decide that you want to
take another look at it at home


44
00:02:48,246 --> 00:02:50,616
or you want to read it at home
because you're in the middle


45
00:02:50,616 --> 00:02:54,476
of watching a WWDC presentation,
you can invoke Siri.


46
00:02:55,046 --> 00:02:59,706
And Siri will understand
what you mean when you say,


47
00:02:59,706 --> 00:03:00,976
"Remind me about this."


48
00:03:01,036 --> 00:03:04,956
It will have the context of
what's currently on screen.


49
00:03:05,666 --> 00:03:08,786
And this will work in any app
that adopts some of the APIs


50
00:03:08,786 --> 00:03:10,556
that we're going to
discuss later today.


51
00:03:10,556 --> 00:03:14,206
This is particularly exciting
to you because this means


52
00:03:14,206 --> 00:03:16,956
that when customers
open the Reminders app,


53
00:03:17,496 --> 00:03:20,946
they'll be de-blinked right
back into your content.


54
00:03:21,436 --> 00:03:24,826
New in iOS 10 is the promotion


55
00:03:24,826 --> 00:03:27,856
of locations throughout
the system


56
00:03:28,026 --> 00:03:31,666
when we think the customer has
a particular intent to want


57
00:03:31,666 --> 00:03:34,016
to go somewhere, to
want to use a location


58
00:03:34,276 --> 00:03:35,956
that they've been
recently looking at.


59
00:03:36,206 --> 00:03:37,466
We'll be talking later today


60
00:03:37,466 --> 00:03:42,296
about how you can get your app's
data flowing through the system.


61
00:03:44,696 --> 00:03:47,816
Multitasking as well
is another interface


62
00:03:48,056 --> 00:03:51,506
where we will promote locations
we think the customer is


63
00:03:51,506 --> 00:03:52,166
interested in.


64
00:03:52,166 --> 00:03:56,916
You can get your app, your
icon, suggested right there


65
00:03:56,916 --> 00:03:59,986
at the prime real estate
in the Multitasking UI.


66
00:04:00,696 --> 00:04:06,206
New in iOS 10 as
well is our promotion


67
00:04:06,206 --> 00:04:09,496
of your app's contact
information


68
00:04:09,846 --> 00:04:13,426
within the native contact app.


69
00:04:14,376 --> 00:04:18,706
So you notice here, there's
a handle that's been found


70
00:04:18,706 --> 00:04:19,276
in WhatsApp.


71
00:04:19,276 --> 00:04:21,305
And we'll talk later today


72
00:04:21,305 --> 00:04:24,856
about how you can get your
app's content in that interface.


73
00:04:27,216 --> 00:04:33,566
So, to learn when to promote
you, the operating system needs


74
00:04:33,616 --> 00:04:37,476
to learn about your
data and your app.


75
00:04:37,736 --> 00:04:43,446
Now, the good news is that a few
simple APIs will give you much


76
00:04:43,446 --> 00:04:45,936
of the value that I
just described and more.


77
00:04:47,096 --> 00:04:50,256
In addition to having your
app promoted at various times,


78
00:04:50,366 --> 00:04:53,596
you'll also get deeper Siri
integration like I described


79
00:04:54,426 --> 00:04:56,266
with the contextual reminders.


80
00:04:56,266 --> 00:04:59,896
So what we're going to do
today, is we're going to talk


81
00:04:59,896 --> 00:05:02,586
about these APIs and
we're going to walk you


82
00:05:02,656 --> 00:05:07,006
through proper adoption of
them so that all of you end


83
00:05:07,006 --> 00:05:10,686
up getting more engagement
from users due


84
00:05:10,686 --> 00:05:12,666
to promotion throughout the OS.


85
00:05:12,986 --> 00:05:16,976
First, we're going to talk about
NSUserActivity and schema.org.


86
00:05:17,586 --> 00:05:21,266
NSUserActivity is the kind
of the API that is the eyes


87
00:05:21,266 --> 00:05:22,396
of the operating system.


88
00:05:22,396 --> 00:05:26,376
It helps us understand what the
customer is currently staring


89
00:05:26,376 --> 00:05:27,836
at on screen.


90
00:05:28,036 --> 00:05:33,566
And schema.org is somewhat
of an equivalent for the web.


91
00:05:33,566 --> 00:05:36,126
Next, we're going to talk
about some new enhancements


92
00:05:36,126 --> 00:05:39,146
and new APIs around apps
that handle locations.


93
00:05:39,186 --> 00:05:42,756
So if you're an app like
Yelp that's a directory


94
00:05:43,096 --> 00:05:45,476
that offers many different
locations, or conversely,


95
00:05:45,476 --> 00:05:48,246
if you're an app like Uber
that consumes locations,


96
00:05:48,286 --> 00:05:50,426
this will be very
relevant to you.


97
00:05:51,036 --> 00:05:54,016
Then we'll talk about
building a great experience


98
00:05:54,016 --> 00:05:55,646
around media apps suggestions.


99
00:05:56,006 --> 00:06:00,146
I showed you earlier an example
of the type of content promotion


100
00:06:00,146 --> 00:06:02,666
that will happen, say
after a customer plugs


101
00:06:02,666 --> 00:06:04,266
in their headphones,
and we'll talk


102
00:06:04,266 --> 00:06:06,566
about how you can get
your content front


103
00:06:06,566 --> 00:06:07,906
and center in that interface.


104
00:06:08,656 --> 00:06:10,446
And then, we'll try to overview


105
00:06:10,476 --> 00:06:12,366
about all the different things
we hopefully learn today.


106
00:06:12,946 --> 00:06:17,846
To kick things off with
NSUserActivity and schema.org,


107
00:06:17,846 --> 00:06:20,106
I'd love to invite
Sofiane onto the stage.


108
00:06:20,286 --> 00:06:20,606
Sofiane?


109
00:06:21,516 --> 00:06:26,696
[ Applause ]


110
00:06:27,196 --> 00:06:27,636
>> Thanks, Daniel.


111
00:06:28,076 --> 00:06:29,636
Good afternoon everyone.


112
00:06:29,866 --> 00:06:30,816
My name is Sofiane.


113
00:06:31,166 --> 00:06:33,346
And I'm really excited to
be here today to talk to you


114
00:06:33,346 --> 00:06:35,666
about some of the features
that we've been up to lately.


115
00:06:37,046 --> 00:06:39,596
Now, we just heard Daniel
talk about great ways


116
00:06:39,596 --> 00:06:42,346
to promote the content in your
apps, throughout the system.


117
00:06:43,116 --> 00:06:44,806
Now let's talk about
some of the APIs


118
00:06:44,876 --> 00:06:47,086
that you can adopt
to make this happen.


119
00:06:47,416 --> 00:06:49,796
Throughout this presentation,
we'll talk about features.


120
00:06:50,716 --> 00:06:53,456
Some that you may be already
familiar with, like Handoff


121
00:06:53,456 --> 00:06:56,506
or Spotlight Search, and some
new features we're introducing


122
00:06:56,506 --> 00:06:59,226
in iOS 10, like location
suggestions for instance.


123
00:07:00,246 --> 00:07:02,216
Now all of the features
that you're looking at here,


124
00:07:02,456 --> 00:07:03,346
have something in common.


125
00:07:03,976 --> 00:07:07,016
And it's a single API
called NSUserActivity.


126
00:07:07,876 --> 00:07:10,146
First, some background.


127
00:07:10,146 --> 00:07:13,576
NSUserActivity was introduced
in iOS 8, support Handoff,


128
00:07:13,996 --> 00:07:15,696
which is the amazing
feature that allows you


129
00:07:15,696 --> 00:07:18,586
to start an activity on a
device and pick it up right


130
00:07:18,586 --> 00:07:19,786
where you left off on another.


131
00:07:20,276 --> 00:07:23,866
Last year in iOS
9, we added support


132
00:07:23,866 --> 00:07:26,476
to promote content directly


133
00:07:26,476 --> 00:07:29,886
from NSUserActivity inside
Spotlight Search results.


134
00:07:30,556 --> 00:07:34,476
Now, this year in iOS 10, we
further enhance NSUserActivities


135
00:07:34,756 --> 00:07:37,906
so it can capture locations
viewed inside your app


136
00:07:38,266 --> 00:07:40,556
and promote them in many
places throughout the system.


137
00:07:41,006 --> 00:07:42,786
Even inside other apps.


138
00:07:43,496 --> 00:07:46,606
NSUserActivity now also
provides context to Siri,


139
00:07:47,116 --> 00:07:50,706
so Siri can now help you get
directions, or make a call


140
00:07:50,706 --> 00:07:53,566
to the place you're
looking at inside an app.


141
00:07:53,846 --> 00:07:54,896
Also new in iOS 10,


142
00:07:55,576 --> 00:07:58,316
NSUserActivity enables
your communication app


143
00:07:58,706 --> 00:08:00,806
to be promoted straight
from a contact card,


144
00:08:00,806 --> 00:08:02,536
as an alternate communication
method.


145
00:08:03,086 --> 00:08:05,556
Now, I know what you
guys are thinking.


146
00:08:06,036 --> 00:08:07,396
"That's cool," hopefully.


147
00:08:08,006 --> 00:08:10,146
"But how does this work?"


148
00:08:10,836 --> 00:08:12,846
Well, let me tell you,
it's really straightforward


149
00:08:12,916 --> 00:08:14,766
and we have a lot of great
content to talk about.


150
00:08:14,766 --> 00:08:15,956
So let's dive right in.


151
00:08:16,896 --> 00:08:20,016
We're going to talk about
NSUserActivity and schema.org.


152
00:08:20,736 --> 00:08:22,386
These APIs allow you


153
00:08:22,386 --> 00:08:24,306
to seamlessly integrate
with the system.


154
00:08:24,766 --> 00:08:28,396
NSUserActivity for native apps,
and schema.org for the web.


155
00:08:29,266 --> 00:08:30,806
We'll focus on the
NSUserActivity first.


156
00:08:32,066 --> 00:08:34,946
NSUserActivity is a
lightweight interface


157
00:08:35,076 --> 00:08:39,285
to capture application state
as users move through your app,


158
00:08:39,376 --> 00:08:41,006
in a way that can
be restored later.


159
00:08:41,806 --> 00:08:44,476
So for instance, here we're
looking at the Yelp app


160
00:08:44,476 --> 00:08:47,736
which is a local search app,
and as the user browses the app,


161
00:08:48,326 --> 00:08:51,126
we created an NSUserActivity
capturing the information


162
00:08:51,126 --> 00:08:53,046
that we need to recreate
the state later.


163
00:08:54,036 --> 00:08:56,396
So for instance, when I trigger
a search for a restaurant,


164
00:08:56,826 --> 00:08:59,066
we follow the same pattern
of creating activities.


165
00:08:59,796 --> 00:09:03,126
And again, when I actually
view result from that list.


166
00:09:04,186 --> 00:09:07,156
Now, in this particular case,
we're looking at a location.


167
00:09:08,006 --> 00:09:11,486
In iOS 10, NSUserActivity
is now more aware


168
00:09:11,486 --> 00:09:14,166
about certain concepts
such as locations


169
00:09:14,166 --> 00:09:15,806
or communication interactions.


170
00:09:16,516 --> 00:09:18,326
We'll talk about this in a
minute, but before I wanted


171
00:09:18,326 --> 00:09:20,176
to take a closer
look at this screen.


172
00:09:21,746 --> 00:09:24,886
So here we create an activity
and describe it with information


173
00:09:24,886 --> 00:09:27,756
to recreate the state later,
as well as submitted data.


174
00:09:27,756 --> 00:09:30,876
For instance, the
location's name or address.


175
00:09:31,656 --> 00:09:32,706
Then we inform the system


176
00:09:32,706 --> 00:09:35,026
that this represents
the current user state,


177
00:09:35,536 --> 00:09:38,646
and we decide whether it will
be advertised for Handoff,


178
00:09:39,816 --> 00:09:41,846
available temporarily
throughout the system


179
00:09:41,846 --> 00:09:42,956
for location suggestions.


180
00:09:43,956 --> 00:09:45,986
Or added to the on
device index --


181
00:09:46,666 --> 00:09:50,466
or added to the Spotlight on
device index, so that it appears


182
00:09:50,466 --> 00:09:51,526
in Spotlight Search results.


183
00:09:51,966 --> 00:09:55,096
Now there are a few related
sessions on this topic,


184
00:09:55,096 --> 00:09:57,876
specifically on adoption
of NSUserActivities


185
00:09:57,876 --> 00:09:59,226
for Handoff and App Search.


186
00:09:59,706 --> 00:10:01,306
Really recommend that you
guys go check them out.


187
00:10:01,306 --> 00:10:03,966
They provide a lot
of great content.


188
00:10:04,126 --> 00:10:05,546
Alright, now let's dig
into the code, shall we?


189
00:10:05,986 --> 00:10:08,706
So, I'm going to show you how
you create these activities.


190
00:10:09,806 --> 00:10:12,446
So here we're extenuating an
instance of NSUserActivity.


191
00:10:12,926 --> 00:10:15,006
And providing it with
an activity type.


192
00:10:15,006 --> 00:10:16,536
That's the string
that you provide.


193
00:10:16,676 --> 00:10:19,576
It's the same string that you
specify in your info plist.


194
00:10:20,776 --> 00:10:23,186
Now we recommend to use a
reverse the NS style notation


195
00:10:23,186 --> 00:10:24,486
here to keep the strings unique.


196
00:10:24,486 --> 00:10:28,596
Next, our activity needs
a title, and we're going


197
00:10:28,596 --> 00:10:31,416
to use a title that describes
the content we're looking


198
00:10:31,416 --> 00:10:31,796
at here.


199
00:10:32,096 --> 00:10:33,256
So here we're looking
at a restaurant.


200
00:10:33,646 --> 00:10:36,736
And something to keep in mind
is that this is the public face


201
00:10:36,736 --> 00:10:37,746
of your user activities.


202
00:10:38,056 --> 00:10:40,066
This is how, for instance,
they're represented


203
00:10:40,066 --> 00:10:41,206
in Spotlight Search results.


204
00:10:41,586 --> 00:10:42,966
So you want to make
sure you use a title


205
00:10:42,966 --> 00:10:44,686
that is descriptive
and meaningful.


206
00:10:46,096 --> 00:10:49,246
Next, we're enabling Handoff,
App Search, and public indexing,


207
00:10:49,686 --> 00:10:51,356
since the content we're
viewing here is public.


208
00:10:52,016 --> 00:10:55,286
And then we're setting
a dictionary


209
00:10:55,286 --> 00:10:58,016
on the userInfo property,
capturing the information


210
00:10:58,016 --> 00:10:59,886
that we need to recreate
the state


211
00:11:00,086 --> 00:11:01,366
when the activity is restored.


212
00:11:01,946 --> 00:11:04,326
Now in that case,
we use the unique ID


213
00:11:04,326 --> 00:11:07,466
of that location we were
working with, and typically,


214
00:11:07,726 --> 00:11:09,746
when the activity is being
restored, for instance,


215
00:11:09,746 --> 00:11:13,276
when it's handed off to another
device, you can fetch back


216
00:11:13,276 --> 00:11:16,016
that ID from the server
and restore the location


217
00:11:16,236 --> 00:11:17,776
as the user would expect.


218
00:11:18,896 --> 00:11:20,686
Now to fully describe
your activity


219
00:11:20,846 --> 00:11:22,546
and for richer search results,


220
00:11:22,846 --> 00:11:24,756
you can use this
class we introduced


221
00:11:24,756 --> 00:11:27,826
in iOS 9 called CSSearchableItem
AttributeSet.


222
00:11:29,056 --> 00:11:33,186
It provides a common language
between your app and the system


223
00:11:33,216 --> 00:11:35,916
to describe your content better.


224
00:11:36,096 --> 00:11:39,066
Now, if you have a website
that mirrors the content


225
00:11:39,386 --> 00:11:40,936
that you're looking
at inside your app,


226
00:11:41,486 --> 00:11:45,946
can provide the web URL so
that if your activity is being


227
00:11:45,946 --> 00:11:47,986
for instance, handed
off to a device


228
00:11:47,986 --> 00:11:49,256
where your app is not installed,


229
00:11:49,546 --> 00:11:51,516
it will be appropriately
launched


230
00:11:52,026 --> 00:11:53,716
in Safari instead,
following that link.


231
00:11:54,756 --> 00:11:57,786
And finally, we call
becomeCurrent on the activity,


232
00:11:58,136 --> 00:11:59,166
indicating to the system


233
00:11:59,166 --> 00:12:01,216
that this represents
the current user state.


234
00:12:01,396 --> 00:12:03,286
This is what the user is
seeing on their screen.


235
00:12:04,986 --> 00:12:07,516
Now, what happens when your
app is actually being launched?


236
00:12:07,516 --> 00:12:09,546
When your activity is being
restored, for instance?


237
00:12:09,846 --> 00:12:12,316
Or handed off to another device?


238
00:12:13,506 --> 00:12:15,756
Your application is
launched, which is good,


239
00:12:16,276 --> 00:12:18,676
and a UIApplication
delegate method is called,


240
00:12:19,016 --> 00:12:21,626
called continueUserActivity
restorationHandler.


241
00:12:22,426 --> 00:12:24,766
The first thing we need to do
here is check the activity type


242
00:12:25,316 --> 00:12:27,456
and make sure that it
matches one that we expect.


243
00:12:27,966 --> 00:12:29,076
That case matches the one


244
00:12:29,076 --> 00:12:30,406
that we were just
working with earlier.


245
00:12:31,066 --> 00:12:32,786
And then we can use the
User Input Dictionary


246
00:12:32,786 --> 00:12:33,956
to start restoring the state.


247
00:12:34,556 --> 00:12:38,026
Earlier, we had put the
unique ID of that location.


248
00:12:38,026 --> 00:12:40,746
So typically here, we would
be able to fetch it back


249
00:12:40,746 --> 00:12:43,166
from the server and
then restore it back


250
00:12:43,166 --> 00:12:46,286
and display the right controller
as the user would expect it.


251
00:12:46,916 --> 00:12:49,916
So with minimal code here,
we were able to benefit


252
00:12:49,916 --> 00:12:52,846
from three great features;
Handoff, Spotlight Search,


253
00:12:52,846 --> 00:12:54,476
and contextual Siri reminders.


254
00:12:55,676 --> 00:12:58,056
Now, we'll talk about some of
the other features listed below.


255
00:12:59,206 --> 00:13:00,286
Before, let me ask you this.


256
00:13:00,976 --> 00:13:03,406
Have you ever been in a
situation where you're hungry


257
00:13:03,596 --> 00:13:05,766
and you're trying to find
a good restaurant to eat?


258
00:13:06,516 --> 00:13:08,916
So you start in Yelp and
you find the perfect place.


259
00:13:09,586 --> 00:13:10,596
Then you want to
text your friends


260
00:13:10,596 --> 00:13:11,466
so that they can meet you there.


261
00:13:12,156 --> 00:13:14,306
So you switch to
messages, start writing,


262
00:13:14,556 --> 00:13:15,826
"Hey guys, I found this place."


263
00:13:15,826 --> 00:13:17,726
But then you realize you don't
actually have the address


264
00:13:17,726 --> 00:13:19,666
of that place, so you
switch back to Yelp,


265
00:13:20,166 --> 00:13:22,226
you copy the address, then
you switch back to messages.


266
00:13:22,226 --> 00:13:25,376
You paste it in there, and
then you're done finally.


267
00:13:26,186 --> 00:13:27,956
Except you're not,
because at some point,


268
00:13:28,086 --> 00:13:29,336
you're also going to
need to get there.


269
00:13:29,546 --> 00:13:31,026
So you're going to
switch through maps,


270
00:13:31,376 --> 00:13:32,916
and there's probably more
back and forth in there.


271
00:13:33,336 --> 00:13:34,856
And you get the idea.


272
00:13:34,856 --> 00:13:36,006
It's not a great experience.


273
00:13:38,976 --> 00:13:40,216
So in iOS 10, we're trying


274
00:13:40,216 --> 00:13:42,216
to make this experience
much easier.


275
00:13:43,106 --> 00:13:44,606
You still start at a same point.


276
00:13:44,786 --> 00:13:45,806
You're looking at a location,


277
00:13:45,806 --> 00:13:48,516
say a restaurant,
inside your app.


278
00:13:48,516 --> 00:13:51,916
And by adopting NSUserActivity,
your app can promote


279
00:13:52,016 --> 00:13:54,786
that same location in many
different places throughout


280
00:13:54,786 --> 00:13:55,206
the system.


281
00:13:56,086 --> 00:13:57,426
When you switch away
from the app,


282
00:13:57,996 --> 00:14:00,686
the multitasking UI
makes it very easy


283
00:14:00,686 --> 00:14:03,416
and offers this nice proactive
suggesting at the bottom,


284
00:14:03,866 --> 00:14:06,866
offering to get directions
using your favorite routing app


285
00:14:07,306 --> 00:14:08,566
to the place you
were just looking at.


286
00:14:09,136 --> 00:14:11,896
If you go to Messages,
no more back and forth.


287
00:14:12,316 --> 00:14:14,826
You can start writing
something like, "Let's meet at--


288
00:14:15,396 --> 00:14:17,886
" and the QuickType UI
will automatically promote


289
00:14:17,886 --> 00:14:21,306
that location directly into
QuickType from the content


290
00:14:21,306 --> 00:14:22,006
that you're providing.


291
00:14:22,736 --> 00:14:24,896
Same thing with Maps.


292
00:14:24,896 --> 00:14:27,796
Maps promotes these locations
directly in the Maps app.


293
00:14:28,126 --> 00:14:29,166
Not only in the Maps app,


294
00:14:29,166 --> 00:14:31,426
but also in the new
Today View maps widget,


295
00:14:31,766 --> 00:14:34,366
as well as in CarPlay which is
my favorite feature actually.


296
00:14:34,666 --> 00:14:35,156
Imagine that.


297
00:14:35,556 --> 00:14:38,206
Look at your app, get in
your car, tap on your screen,


298
00:14:38,586 --> 00:14:39,386
that's it, you're done.


299
00:14:39,386 --> 00:14:40,236
You can be on your way.


300
00:14:42,196 --> 00:14:45,196
These locations can even be
promoted inside other apps.


301
00:14:45,436 --> 00:14:49,896
So what we're looking at here
is a location provided by Yelp


302
00:14:49,896 --> 00:14:53,246
through NSUserActivity
displayed inside the Uber app,


303
00:14:53,466 --> 00:14:58,326
as the user engages with
a destination text field.


304
00:14:58,526 --> 00:15:00,456
Again, it also provides
context to Siri,


305
00:15:00,666 --> 00:15:03,326
so you can now be looking
at your app and ask Siri


306
00:15:03,326 --> 00:15:05,776
to get you directions
or make a call


307
00:15:05,776 --> 00:15:07,596
to the place you're looking at.


308
00:15:08,236 --> 00:15:12,626
So all of these features with
the adoption of NSUserActivity.


309
00:15:13,726 --> 00:15:15,936
And all of these features
have something in common,


310
00:15:16,726 --> 00:15:18,156
is that they all indicate


311
00:15:18,446 --> 00:15:21,086
where the suggestion is
originally coming from,


312
00:15:21,496 --> 00:15:22,556
in that case from Yelp.


313
00:15:23,236 --> 00:15:25,046
Now imagine if this
were your app.


314
00:15:25,556 --> 00:15:26,206
Wouldn't that be great?


315
00:15:27,156 --> 00:15:28,566
Well, this is possible now.


316
00:15:29,406 --> 00:15:33,766
NSUserActivity now allows you
to do so by capturing locations


317
00:15:33,766 --> 00:15:35,026
that are viewed inside
your apps.


318
00:15:35,076 --> 00:15:39,036
We're introducing new
simple APIs in both MapKit


319
00:15:39,126 --> 00:15:41,886
and CoreSpotlight, allowing
you to do that, and integrate


320
00:15:41,886 --> 00:15:43,996
with all of these places
that I just talked about.


321
00:15:44,486 --> 00:15:48,426
In terms of code, we're going
to create an NSUserActivity


322
00:15:48,486 --> 00:15:50,486
and we're going to
reuse the same activity


323
00:15:50,486 --> 00:15:53,256
that we had defined earlier,
and just add on top of it.


324
00:15:53,256 --> 00:15:55,196
We don't have to create
separate activities.


325
00:15:55,946 --> 00:15:58,996
So, for apps using
MapKit, it's as easy


326
00:15:58,996 --> 00:16:02,746
as setting your MKMapItem to
this new MapItem property,


327
00:16:03,016 --> 00:16:06,076
defined as NSUserActivity.


328
00:16:06,996 --> 00:16:09,396
And that's pretty much it.


329
00:16:09,396 --> 00:16:11,066
This also has the
great side effect


330
00:16:11,186 --> 00:16:14,146
of populating the
content attribute sets


331
00:16:14,146 --> 00:16:16,286
for you automatically
so you don't --


332
00:16:16,286 --> 00:16:19,936
so if you want to adopt App
Search, all you have to do is


333
00:16:19,936 --> 00:16:22,036
to specify that you
want opt into App Search


334
00:16:22,296 --> 00:16:25,426
and these locations
will also be indexed.


335
00:16:25,586 --> 00:16:28,746
Now there's another way which is
by adopting App Search actually,


336
00:16:29,296 --> 00:16:31,266
and for those of you who are
already familiar with that,


337
00:16:31,546 --> 00:16:33,666
you can use CSSearchableItem
AttributeSet


338
00:16:34,076 --> 00:16:35,166
and describe the location.


339
00:16:36,016 --> 00:16:37,326
Now, let's break this
down a little bit.


340
00:16:37,626 --> 00:16:39,556
First thing we're doing
here is setting the name


341
00:16:39,556 --> 00:16:42,296
of the location, which
matches what we're looking at.


342
00:16:42,786 --> 00:16:43,846
And that's required for all


343
00:16:43,846 --> 00:16:45,426
of the UIs we just
talked about earlier.


344
00:16:45,976 --> 00:16:49,386
Next, we're specifying the text
representation of the address,


345
00:16:49,896 --> 00:16:52,236
and that's required for
all of the text based UIs,


346
00:16:52,236 --> 00:16:53,576
such as the keyboard,
for instance.


347
00:16:53,996 --> 00:16:57,506
Next, we're specifying the
latitude and longitudes.


348
00:16:57,806 --> 00:16:59,426
That's optional,
but that insures


349
00:16:59,426 --> 00:17:01,726
that your users are
accurately routed


350
00:17:01,726 --> 00:17:04,106
to the place you
intend to route them to.


351
00:17:04,596 --> 00:17:06,866
Latitude and longitude is the
most precise representation


352
00:17:06,866 --> 00:17:08,826
that you can use if you
have this information.


353
00:17:09,276 --> 00:17:12,746
Next, we're setting the phone
number, and that allows us


354
00:17:12,746 --> 00:17:15,476
to get access to Siri
so that we can say,


355
00:17:15,476 --> 00:17:16,616
"Call this place," for instance.


356
00:17:17,675 --> 00:17:19,576
And finally, we're indicating


357
00:17:19,576 --> 00:17:22,726
that this content supports
both navigation and phone call.


358
00:17:23,156 --> 00:17:27,096
This way, the results will be
presented in the spotlight UI.


359
00:17:27,096 --> 00:17:29,196
In Spotlight Search results UI,


360
00:17:29,606 --> 00:17:33,026
with the right quick action
icons to make a phone call


361
00:17:33,266 --> 00:17:35,656
or get directions, for instance.


362
00:17:36,036 --> 00:17:37,696
That's how you get
location suggestions.


363
00:17:37,696 --> 00:17:38,196
It's that easy.


364
00:17:38,586 --> 00:17:41,036
Now, your app is going
to be promoted in all


365
00:17:41,036 --> 00:17:41,876
of these different places.


366
00:17:42,676 --> 00:17:43,856
We think this is going


367
00:17:43,856 --> 00:17:47,226
to provide a much richer
experience, both inside


368
00:17:47,226 --> 00:17:48,376
but also outside your app.


369
00:17:49,186 --> 00:17:52,106
Now, your brand can be further
promoted throughout the system.


370
00:17:52,616 --> 00:17:54,536
Not within the confinement
of your apps only.


371
00:17:55,066 --> 00:17:57,856
Let's move on to
contact interactions.


372
00:17:58,426 --> 00:18:03,606
IOS 10 DP integrates
communication apps directly


373
00:18:03,826 --> 00:18:04,686
from a contact card.


374
00:18:05,296 --> 00:18:07,936
So what we're looking at
here is a contact card


375
00:18:07,936 --> 00:18:10,346
where the WhatsApp handle was
learned and displayed there.


376
00:18:10,956 --> 00:18:14,516
When I go ahead and tap on the
Quick Action button at the top


377
00:18:14,516 --> 00:18:17,316
to send a message, I'm
asked to select what method


378
00:18:17,316 --> 00:18:18,416
of contact I'd like to use.


379
00:18:19,196 --> 00:18:23,616
And if I do so, this choice can
even be remembered and persisted


380
00:18:23,686 --> 00:18:25,336
as a default mean
of communication.


381
00:18:25,876 --> 00:18:29,656
So your app can be promoted
there as a default channel


382
00:18:29,656 --> 00:18:31,606
for messaging for
that specific contact.


383
00:18:32,776 --> 00:18:35,646
That's also supported by
NSUserActivity together


384
00:18:35,646 --> 00:18:36,996
with a new intense framework,


385
00:18:37,336 --> 00:18:38,746
which is the same
framework you use


386
00:18:39,006 --> 00:18:40,596
to get deep Siri integration.


387
00:18:41,366 --> 00:18:43,456
There were two great talks about
this topic earlier this week.


388
00:18:43,976 --> 00:18:47,856
I really recommend that
you guys go check them out.


389
00:18:47,856 --> 00:18:49,956
So here we're looking
at this WhatsApp app,


390
00:18:50,296 --> 00:18:52,076
sending a text message,
and we're going


391
00:18:52,076 --> 00:18:53,576
to work on how this works.


392
00:18:53,576 --> 00:18:57,136
So the first thing we do is
create an INInteraction object


393
00:18:57,136 --> 00:19:00,226
which is a new object we're
defining in the intense API.


394
00:19:01,636 --> 00:19:03,816
This contains information
about the intent.


395
00:19:04,556 --> 00:19:08,366
For instance, which
represents the user action.


396
00:19:08,366 --> 00:19:11,346
So for instance, sending a text
message or making a video call,


397
00:19:12,166 --> 00:19:14,746
as well as some other
information about the recipient,


398
00:19:14,746 --> 00:19:17,486
the sender, and some
metadata in creating things


399
00:19:17,486 --> 00:19:19,866
like whether the communication
was successful, for instance.


400
00:19:21,166 --> 00:19:24,826
Next, you call the Donate
Method on your interaction.


401
00:19:25,216 --> 00:19:27,676
This way the system will
learn about this interaction


402
00:19:27,676 --> 00:19:30,736
and promote your app directly
inside a contact card.


403
00:19:32,036 --> 00:19:35,006
Now, when users interact
with your app


404
00:19:35,126 --> 00:19:37,306
through the contact card,
we follow the same pattern.


405
00:19:37,496 --> 00:19:40,146
Create an INInteraction
representing what the user is


406
00:19:40,146 --> 00:19:40,636
trying to do.


407
00:19:41,116 --> 00:19:43,496
And wrap it up inside
an NSUserActivity


408
00:19:43,836 --> 00:19:45,126
which your app is
then launched with.


409
00:19:45,886 --> 00:19:48,006
Now let's see how this
translates into code.


410
00:19:49,006 --> 00:19:49,786
The first thing here,


411
00:19:49,786 --> 00:19:51,816
we're creating the
sender and recipients.


412
00:19:52,316 --> 00:19:55,126
And something to note is
that if your app has access


413
00:19:55,126 --> 00:19:56,456
to the user's address book,


414
00:19:57,056 --> 00:20:01,336
you can specify what contact
identifier you're working


415
00:20:01,336 --> 00:20:01,766
with here.


416
00:20:02,116 --> 00:20:04,666
And this way the system will
be able to better figure


417
00:20:04,666 --> 00:20:06,816
out the right contact
to be augmented.


418
00:20:08,596 --> 00:20:09,566
Next, we're creating intent.


419
00:20:10,226 --> 00:20:12,116
And here we're using
the INSendMessageIntent


420
00:20:12,116 --> 00:20:13,436
since we're sending
a text message.


421
00:20:14,346 --> 00:20:16,076
Now there are three
communication intents available


422
00:20:16,076 --> 00:20:18,106
to you for sending
text messages,


423
00:20:18,416 --> 00:20:20,016
making audio, and video calls.


424
00:20:21,216 --> 00:20:23,656
Now it's important
to note that you want


425
00:20:23,656 --> 00:20:26,596
to also make sure you specify
what intents your app is capable


426
00:20:26,596 --> 00:20:27,886
of handling in your info plist


427
00:20:28,246 --> 00:20:31,296
to that pretty much the same
thing as with activity types,


428
00:20:31,296 --> 00:20:32,306
what we talked about earlier.


429
00:20:32,756 --> 00:20:35,876
Next, we'll provide the
service name we're using.


430
00:20:35,946 --> 00:20:37,086
And here we're using WhatsApp.


431
00:20:37,086 --> 00:20:39,976
And this is particularly
useful if your app deals


432
00:20:39,976 --> 00:20:41,106
with multiple protocols.


433
00:20:41,276 --> 00:20:46,006
So for instance, if you
have multi-client chat app,


434
00:20:46,136 --> 00:20:48,846
which deals with both
Jabber and ICQ for instance,


435
00:20:49,196 --> 00:20:51,476
you'll want to make sure you
use the right service name here.


436
00:20:51,966 --> 00:20:56,836
Next, we create an INInteraction
object which captures all


437
00:20:56,836 --> 00:20:58,586
of the information
we created before.


438
00:20:59,046 --> 00:21:00,766
And some metadata
including things


439
00:21:00,766 --> 00:21:02,786
like directionality
of the communication.


440
00:21:03,496 --> 00:21:05,106
Now since here we're
sending a text message,


441
00:21:05,436 --> 00:21:06,966
we're using the outgoing
direction,


442
00:21:07,526 --> 00:21:09,866
and that's the only
supported direction


443
00:21:10,056 --> 00:21:11,346
for donations of interactions.


444
00:21:12,356 --> 00:21:14,906
And finally, we donate this
interaction to the system.


445
00:21:15,536 --> 00:21:16,716
This way it will be --


446
00:21:16,816 --> 00:21:18,936
the system will be able


447
00:21:18,936 --> 00:21:24,626
to augment the contacts you're
were communicating with.


448
00:21:24,886 --> 00:21:28,516
Now again, like I said, when
users interact with your app


449
00:21:28,516 --> 00:21:30,886
from a contact card, we
follow the same pattern


450
00:21:31,226 --> 00:21:33,596
and use the same UI
application delegate method


451
00:21:34,066 --> 00:21:34,646
to launch your app.


452
00:21:35,246 --> 00:21:37,226
The first thing we're doing
here is check the intent


453
00:21:37,486 --> 00:21:40,776
and interaction from
the NSUserActivity,


454
00:21:40,836 --> 00:21:42,916
and then we can start
communication


455
00:21:43,256 --> 00:21:44,506
with the intended recipients.


456
00:21:44,876 --> 00:21:47,876
And that's how you get
contact interactions.


457
00:21:48,446 --> 00:21:51,166
Now, your app can be promoted
straight from a contact card,


458
00:21:51,566 --> 00:21:53,256
which is the most natural
way of communicating.


459
00:21:54,576 --> 00:21:55,066
So we did it.


460
00:21:55,066 --> 00:21:56,416
We checked everything
in that list.


461
00:21:56,416 --> 00:21:57,546
But we're not done.


462
00:21:57,756 --> 00:21:59,156
We have some more to talk about.


463
00:21:59,816 --> 00:22:01,826
So let's talk about some
best practices to keep


464
00:22:01,826 --> 00:22:04,156
in mind while working
with NSUserActivity.


465
00:22:04,876 --> 00:22:06,986
The first thing is to be lazy.


466
00:22:07,586 --> 00:22:08,286
Okay, now we're talking.


467
00:22:09,176 --> 00:22:12,446
So, imagine you're working in a
Mail client, and you're trying


468
00:22:12,446 --> 00:22:15,456
to adopt Handoff so
that your users are able


469
00:22:15,456 --> 00:22:19,666
to start writing an email on
their Mac and pick it up right


470
00:22:19,756 --> 00:22:21,726
where they left off on
their iPhone, when they're


471
00:22:21,726 --> 00:22:22,536
on the go for instance.


472
00:22:23,386 --> 00:22:25,156
So here what we're doing
is we have a method


473
00:22:25,456 --> 00:22:28,456
that is called every
single time a key is pressed


474
00:22:28,456 --> 00:22:28,996
on the keyboard.


475
00:22:29,626 --> 00:22:31,706
And every single
time, we recompute


476
00:22:31,766 --> 00:22:33,396
and update the userinfo
dictionary.


477
00:22:34,436 --> 00:22:36,246
Now that can be costly
and inefficient.


478
00:22:36,846 --> 00:22:40,036
So instead what you should do is
to use the needsSave property,


479
00:22:40,406 --> 00:22:43,346
indicating to the system
that this activity is dirty.


480
00:22:43,766 --> 00:22:47,216
And then this way, the system
will be able to call you


481
00:22:47,216 --> 00:22:50,026
at an opportune time to update
your userinfo dictionary.


482
00:22:50,736 --> 00:22:54,026
For instance, right before the
activity is being handed off


483
00:22:54,186 --> 00:22:54,896
to another device.


484
00:22:56,096 --> 00:22:57,396
Now here, this is
what we're doing,


485
00:22:57,436 --> 00:23:01,476
and we're implementing the
updateUserActivityState delegate


486
00:23:01,476 --> 00:23:03,176
method, and this
is our opportunity


487
00:23:03,176 --> 00:23:04,986
to update the userinfo
dictionary.


488
00:23:05,836 --> 00:23:07,386
This way we can do it only once


489
00:23:07,386 --> 00:23:10,756
and we're way more
efficient like that.


490
00:23:10,986 --> 00:23:12,856
Next, make sure you
keep a strong reference


491
00:23:12,946 --> 00:23:13,846
to the current activity.


492
00:23:14,696 --> 00:23:17,686
So what we're doing here is
extenuating NSUserActivity,


493
00:23:18,166 --> 00:23:21,566
doing a bunch of things to it,
calling becomeCurrent to it.


494
00:23:21,736 --> 00:23:22,166
So that's good.


495
00:23:22,596 --> 00:23:24,916
Except after that, we're not
keeping a strong reference


496
00:23:24,916 --> 00:23:25,896
and exiting the function.


497
00:23:26,406 --> 00:23:27,796
And therefore, the
activity is released


498
00:23:27,956 --> 00:23:30,546
because it goes out of scope.


499
00:23:30,726 --> 00:23:32,086
An activity release
cannot be current


500
00:23:32,086 --> 00:23:32,896
because it doesn't exist.


501
00:23:33,536 --> 00:23:36,196
So instead what you should
do is keep a strong reference


502
00:23:36,506 --> 00:23:37,496
to the current activity.


503
00:23:38,116 --> 00:23:40,816
If you're dealing with
UIViewControllers or anything


504
00:23:40,816 --> 00:23:42,806
that conforms to a UI responder,


505
00:23:43,226 --> 00:23:45,496
can also use the User
Activity Define --


506
00:23:45,666 --> 00:23:48,346
User Activity Property,
defined on UI responder.


507
00:23:48,816 --> 00:23:50,396
And this has the great effect


508
00:23:50,396 --> 00:23:53,786
of having UIKit manage the
activity currentness for you.


509
00:23:54,096 --> 00:23:57,106
So you don't have to call
becomeCurrent of invalidate it.


510
00:23:57,676 --> 00:23:59,686
UIKit does it for you
as your view controller


511
00:23:59,686 --> 00:24:02,036
for instance are linked
to the view hierarchy.


512
00:24:03,456 --> 00:24:05,246
Next, transfer a small payload.


513
00:24:05,246 --> 00:24:08,626
So make sure that you keep
only just enough information


514
00:24:08,626 --> 00:24:10,026
in your userinfo dictionary,


515
00:24:10,266 --> 00:24:12,176
to recreate the states,
but not much more.


516
00:24:12,716 --> 00:24:16,916
And remember that these user
info and activities are sent


517
00:24:17,326 --> 00:24:20,096
over the air, by Bluetooth, so
that's why they need to be kept


518
00:24:20,096 --> 00:24:21,156
as lightweight as possible.


519
00:24:21,726 --> 00:24:25,526
So for instance, imagine you're
working on an app that deals


520
00:24:25,526 --> 00:24:27,976
with large photos
downloaded from the internet.


521
00:24:28,746 --> 00:24:31,526
So what we're doing here is
downloading these photos,


522
00:24:31,836 --> 00:24:33,576
serializing them as
data, and putting them


523
00:24:33,576 --> 00:24:34,606
in the userinfo dictionary,


524
00:24:35,136 --> 00:24:37,496
which could be very
easily several megabytes,


525
00:24:37,606 --> 00:24:38,346
which is not efficient.


526
00:24:39,226 --> 00:24:43,926
Instead what you can do is try
to keep a unique item to fire


527
00:24:43,926 --> 00:24:48,206
to that content you're working
with, for instance, the web URL,


528
00:24:48,566 --> 00:24:50,516
this way when you're
restoring the activity,


529
00:24:50,516 --> 00:24:52,816
you can maybe fetch
it back from a server


530
00:24:53,046 --> 00:24:54,446
or obtain it through
other means.


531
00:24:55,726 --> 00:24:57,466
Now if you really have to
deal with large payloads,


532
00:24:57,466 --> 00:24:59,036
you can use continuation
streams,


533
00:24:59,376 --> 00:25:01,596
and these are specifically
designed for that.


534
00:25:01,876 --> 00:25:03,236
There's a ton of
information on this


535
00:25:03,586 --> 00:25:05,036
in the developer documentation.


536
00:25:05,986 --> 00:25:08,096
Okay, one more.


537
00:25:08,326 --> 00:25:11,576
Make sure you keep your activity
types unique and descriptive.


538
00:25:12,016 --> 00:25:13,206
And that's to avoid collisions.


539
00:25:13,566 --> 00:25:14,416
But it's also important


540
00:25:14,416 --> 00:25:16,926
that they represent the
current user activity,


541
00:25:17,096 --> 00:25:18,536
or the current user actions.


542
00:25:19,646 --> 00:25:21,596
So instead of having a
single activity type here,


543
00:25:22,126 --> 00:25:23,726
that I reuse everywhere
inside my app,


544
00:25:24,556 --> 00:25:27,456
it's good to have multiple
activity types describing the


545
00:25:27,456 --> 00:25:28,396
different parts of my app.


546
00:25:28,616 --> 00:25:30,956
So for instance, one when
I'm viewing a location,


547
00:25:31,296 --> 00:25:33,066
one when I'm searching
for locations,


548
00:25:34,146 --> 00:25:35,736
and what you'll notice
here as well is


549
00:25:35,736 --> 00:25:40,776
that I'm using a reverse DNS
style notation which makes sure


550
00:25:40,776 --> 00:25:44,326
that there's no collision
with other activity types


551
00:25:44,546 --> 00:25:46,546
that might have been
defined inside other apps.


552
00:25:47,106 --> 00:25:49,126
Alright, time for a demo now.


553
00:25:49,286 --> 00:25:52,066
So we're going to use
our Proactive Toolbox app


554
00:25:52,306 --> 00:25:54,406
which is a sample we're
making available to you


555
00:25:54,406 --> 00:25:55,326
on the Developer Library.


556
00:25:56,086 --> 00:25:59,146
And we'll see how we
can adopt NSUserActivity


557
00:25:59,146 --> 00:26:00,216
to promote locations.


558
00:26:00,876 --> 00:26:04,266
We'll also briefly touch on
Handoff as well as App Search.


559
00:26:05,246 --> 00:26:05,866
Let's get writing.


560
00:26:16,306 --> 00:26:21,246
Alright, so I'm going to launch
the Proactive Toolbox app here


561
00:26:22,476 --> 00:26:25,976
and I have my device
running iOS 10 on the left,


562
00:26:25,976 --> 00:26:27,456
and Xcode here right behind.


563
00:26:28,316 --> 00:26:30,406
So I'm going to give you a
quick tour of the app first


564
00:26:30,406 --> 00:26:31,516
to get an idea of what it does.


565
00:26:32,416 --> 00:26:35,056
So here we have a
list of pizza places.


566
00:26:35,056 --> 00:26:37,156
This is an app that
searches for pizza locally,


567
00:26:37,756 --> 00:26:41,226
and uses core location to get
my current location as well


568
00:26:41,226 --> 00:26:45,116
as MapKit to fetch places
that match the pizza criteria.


569
00:26:45,506 --> 00:26:47,726
So I'm going to look
at the first one here,


570
00:26:48,246 --> 00:26:50,886
and I get a richer page
with more details about it,


571
00:26:50,886 --> 00:26:54,096
like the name, phone
number, address, website,


572
00:26:54,206 --> 00:26:55,866
as well as a map of this place.


573
00:26:56,456 --> 00:26:59,226
Now we're going to work
on how we can go ahead


574
00:26:59,226 --> 00:27:01,286
and implement location
suggestions


575
00:27:01,686 --> 00:27:04,066
so that this same
location is promoted


576
00:27:04,066 --> 00:27:04,986
in many different places.


577
00:27:05,036 --> 00:27:07,236
But before this, let's do that.


578
00:27:07,456 --> 00:27:08,436
I'm going to time myself.


579
00:27:08,436 --> 00:27:08,846
How about that?


580
00:27:09,636 --> 00:27:10,756
See how long it takes to do so.


581
00:27:11,756 --> 00:27:13,186
Now, I'll start the
timer and let's go.


582
00:27:13,796 --> 00:27:16,796
Alright, so I'm going
to go in Xcode now.


583
00:27:17,166 --> 00:27:20,156
And this is my location view
controller which is the control


584
00:27:20,156 --> 00:27:23,286
that I use to display the
right, richer search --


585
00:27:23,286 --> 00:27:25,526
the richer results
for the pizza place.


586
00:27:25,956 --> 00:27:26,746
And this is the method


587
00:27:26,746 --> 00:27:29,786
that I call every time a map
item is updated inside my app.


588
00:27:30,156 --> 00:27:34,096
So I'm going to go ahead and
drag and drop this right there.


589
00:27:35,086 --> 00:27:37,116
And this is where I'm
creating in NSUserActivity.


590
00:27:37,866 --> 00:27:41,226
So as you can see, I am creating
an activity, providing it


591
00:27:41,226 --> 00:27:44,736
with an activity type that is
meaningfully representing what


592
00:27:44,736 --> 00:27:45,126
I'm doing.


593
00:27:45,666 --> 00:27:48,326
In this case, I'm also using
a reverse DNS style notation


594
00:27:48,696 --> 00:27:50,846
which makes sure that my
activity types are unique.


595
00:27:51,476 --> 00:27:53,786
And I already defined
this activity type


596
00:27:53,786 --> 00:27:54,896
in my info plist earlier.


597
00:27:55,716 --> 00:27:57,986
Next, we're setting the
title and the keywords.


598
00:27:58,396 --> 00:28:00,216
And again, here I'm
using a meaningful title


599
00:28:00,446 --> 00:28:01,326
because that's what's going


600
00:28:01,326 --> 00:28:03,576
to be the public face
of my user activity.


601
00:28:05,066 --> 00:28:08,246
Next, I'm setting Handoff, App
Search, and Public Indexing,


602
00:28:08,776 --> 00:28:11,176
because the content we're
looking at is public here.


603
00:28:11,796 --> 00:28:13,716
And the more important
part here is this,


604
00:28:14,226 --> 00:28:16,696
which is where I'm setting my
mapItem inside my activity.


605
00:28:17,646 --> 00:28:20,636
Now again, this has
the side effect


606
00:28:20,636 --> 00:28:23,036
of populating the
contentAttributeSets for us.


607
00:28:23,396 --> 00:28:24,746
So that's what I'm
doing right there.


608
00:28:24,946 --> 00:28:28,386
I'm just completing
that by indicating


609
00:28:28,386 --> 00:28:31,756
that this content supports
navigation and phone call.


610
00:28:32,036 --> 00:28:34,356
This way it will have
the right nice icons


611
00:28:34,486 --> 00:28:35,646
in the Spotlight Search results.


612
00:28:36,646 --> 00:28:38,556
Okay now, remember
about being lazy?


613
00:28:39,136 --> 00:28:40,116
That's what I'm doing here.


614
00:28:40,476 --> 00:28:43,446
So, setting needsSave to
True and the delegate method.


615
00:28:43,976 --> 00:28:48,276
This way, the userActivity
delegate will be called


616
00:28:48,616 --> 00:28:50,826
when I need to update
my userinfo dictionary.


617
00:28:52,066 --> 00:28:56,356
And finally, I'm using the
userActivity property defined


618
00:28:56,356 --> 00:28:58,286
by UR Responder in
my UIViewController,


619
00:28:58,696 --> 00:28:59,966
and setting the activity to it


620
00:29:00,146 --> 00:29:01,556
so that I keep a
strong reference


621
00:29:01,786 --> 00:29:04,276
and that UIKit manages
it automatically for me.


622
00:29:05,536 --> 00:29:08,736
Next, I'm going to
implement this UI --


623
00:29:09,026 --> 00:29:10,866
this User Activity
Delegate Method,


624
00:29:11,286 --> 00:29:12,476
updateUser ActivityState.


625
00:29:13,086 --> 00:29:16,296
And this is where I'm going to
update my userinfo dictionary


626
00:29:16,786 --> 00:29:19,136
with the content that I
define in this method below,


627
00:29:19,356 --> 00:29:22,366
which returns the
dictionary of the information,


628
00:29:22,366 --> 00:29:23,396
the relevant information,


629
00:29:23,396 --> 00:29:25,226
that I need to recreate
this state later.


630
00:29:26,056 --> 00:29:27,816
Okay, let's go ahead,
build and run.


631
00:29:34,046 --> 00:29:37,406
Okay, so safe to say
the same place here.


632
00:29:37,406 --> 00:29:39,556
Okay, I didn't break
anything for a change.


633
00:29:39,916 --> 00:29:42,856
So I'm going to go ahead
and double-tap Home,


634
00:29:43,536 --> 00:29:47,936
and now as you can see,
we're seeing this nice banner


635
00:29:47,936 --> 00:29:50,226
at the bottom to get
directions to the place


636
00:29:50,226 --> 00:29:51,286
that I was just looking at.


637
00:29:51,286 --> 00:29:51,946
It's very easy.


638
00:29:52,216 --> 00:29:52,766
Super handy.


639
00:29:54,066 --> 00:29:56,106
Same thing when I go to Maps.


640
00:29:56,106 --> 00:29:59,986
I see that same location
directly here,


641
00:29:59,986 --> 00:30:01,676
even showing my application
icon.


642
00:30:02,416 --> 00:30:04,636
[Applause] thank you.


643
00:30:05,516 --> 00:30:08,746
[ Applause ]


644
00:30:09,246 --> 00:30:10,716
Alright, let's zoom back out.


645
00:30:11,286 --> 00:30:16,136
Same thing when I go to
Messages, and say something


646
00:30:16,136 --> 00:30:17,026
like "Let's meet at-- ."


647
00:30:17,326 --> 00:30:21,966
You see that I have the same
location right there being


648
00:30:21,966 --> 00:30:26,246
suggested directly inside the
QuickType UI provided by my app,


649
00:30:26,246 --> 00:30:29,426
so I can just tap on it and
both the name of the place


650
00:30:29,426 --> 00:30:30,766
and the address get inserted.


651
00:30:31,516 --> 00:30:35,626
[ Applause ]


652
00:30:36,126 --> 00:30:37,996
But, it even works
with incoming messages.


653
00:30:37,996 --> 00:30:40,516
So here I'm getting a text
message asking me what their


654
00:30:40,516 --> 00:30:43,256
phone number is, and it's
pulling the information right


655
00:30:43,256 --> 00:30:45,726
from my NSUserActivity so
that I can just tap on it


656
00:30:45,836 --> 00:30:47,056
and insert the phone
number as well.


657
00:30:47,866 --> 00:30:48,416
That's really cool.


658
00:30:49,516 --> 00:30:51,546
[ Applause ]


659
00:30:52,046 --> 00:30:53,256
Now let's go check on timing.


660
00:30:53,966 --> 00:30:54,706
Three minutes, forty.


661
00:30:55,136 --> 00:30:56,586
So that's not bad.


662
00:30:56,586 --> 00:30:58,456
All of these location
suggestions features,


663
00:30:58,896 --> 00:31:00,916
provided by my app
with a single API.


664
00:31:01,746 --> 00:31:02,686
Well, I cheated a little bit.


665
00:31:02,686 --> 00:31:05,446
I had some sample codes
but you get the idea.


666
00:31:05,646 --> 00:31:08,216
It's not a tremendous
investment.


667
00:31:08,376 --> 00:31:12,066
So messages, QuickType,
Siri, Maps, multitasking,


668
00:31:12,066 --> 00:31:13,706
all of that, a single API.


669
00:31:15,206 --> 00:31:18,346
Alright, so we had worked
on App Search as well,


670
00:31:18,346 --> 00:31:19,376
indexing this content.


671
00:31:19,936 --> 00:31:21,446
So I'm going to go
back to the app first


672
00:31:21,446 --> 00:31:23,056
and restore it in
its initial state.


673
00:31:23,656 --> 00:31:25,296
Then I'm going to go ahead
and search for pizza.


674
00:31:26,056 --> 00:31:30,286
Pizza. And sure enough, I
see that place right there.


675
00:31:30,286 --> 00:31:34,026
But when I go ahead and tap
on it, my app is launched,


676
00:31:34,176 --> 00:31:35,436
but my app doesn't
do the right thing.


677
00:31:35,436 --> 00:31:37,506
It doesn't restore
the context back


678
00:31:37,506 --> 00:31:39,096
to the user as they
would expect.


679
00:31:39,286 --> 00:31:41,996
It doesn't show the rich
UI of the pizza place.


680
00:31:41,996 --> 00:31:43,766
I'm going to go back
to my code here,


681
00:31:43,766 --> 00:31:46,016
and this is because I
did not implement the


682
00:31:46,016 --> 00:31:47,716
UIApplicationDelegate methods.


683
00:31:47,716 --> 00:31:51,536
So I'm going to go to my
app delegates, drag and drop


684
00:31:51,536 --> 00:31:55,796
that part, and what
I'm doing here is,


685
00:31:55,796 --> 00:31:58,916
I'm implementing the continue
userActivity restorationHandler


686
00:31:59,166 --> 00:32:02,066
UIApplicationDelegate, checking
the activity type first.


687
00:32:02,236 --> 00:32:04,456
This is the one that we
were just working with.


688
00:32:04,866 --> 00:32:07,006
And then calling this method
that I defined right below,


689
00:32:07,346 --> 00:32:09,866
which looks at the userInfo
and restores the state


690
00:32:09,866 --> 00:32:11,336
as the user would expect.


691
00:32:12,106 --> 00:32:13,286
I'm going to build
and run again,


692
00:32:13,846 --> 00:32:18,256
and see that one more time.


693
00:32:18,386 --> 00:32:23,006
So, I'll go back to
Spotlight, tap on this result,


694
00:32:23,516 --> 00:32:25,706
and now we're doing the right
thing and restoring the content


695
00:32:26,176 --> 00:32:27,186
as the user would expect.


696
00:32:28,126 --> 00:32:31,916
So that's a quick tour of how
you can adopt NSUserActivity


697
00:32:32,196 --> 00:32:34,486
for location suggestions,
App Search, and Handoff.


698
00:32:35,086 --> 00:32:36,756
Alright, let's switch back.


699
00:32:37,516 --> 00:32:42,546
[ Applause ]


700
00:32:43,046 --> 00:32:44,646
So again, this sample
is available to you


701
00:32:44,646 --> 00:32:45,886
on the Developer Library.


702
00:32:46,296 --> 00:32:48,446
It actually does a couple
more things over there.


703
00:32:48,706 --> 00:32:51,996
And it helps you test your
integration with NSUserActivity.


704
00:32:52,376 --> 00:32:55,136
So it's a great tool to keep by
your side while you're working,


705
00:32:55,426 --> 00:32:56,966
on the Location Suggestions
feature.


706
00:32:57,456 --> 00:33:02,716
Okay, so we just saw how easy
it was to adopt NSUserActivity,


707
00:33:03,116 --> 00:33:06,486
and promote your content in many
different parts of the system.


708
00:33:06,486 --> 00:33:09,636
And we'll take a look at how
schema.org can provide some


709
00:33:09,636 --> 00:33:12,476
of these benefits, specifically
for location suggestions.


710
00:33:13,006 --> 00:33:16,056
Now when we design these
feature these location


711
00:33:16,056 --> 00:33:16,966
suggestion features.


712
00:33:17,486 --> 00:33:19,296
We wanted them to
work just as well


713
00:33:19,716 --> 00:33:21,446
with websites you
view in Safari.


714
00:33:22,726 --> 00:33:26,936
And so for this, for instance,
when you're looking at yelp.com


715
00:33:27,356 --> 00:33:29,686
which mirrors the same content
we were looking at earlier


716
00:33:30,026 --> 00:33:32,916
in the Yelp app, when you
switch away from Safari,


717
00:33:33,316 --> 00:33:35,376
you get the same,
nice, handy suggestions


718
00:33:35,376 --> 00:33:38,306
to get directions to this place.


719
00:33:38,306 --> 00:33:41,856
And that's because
yelp.com adopts schema.org


720
00:33:42,086 --> 00:33:43,666
which is the technology
we use for this.


721
00:33:45,046 --> 00:33:45,856
A little bit of background,


722
00:33:47,086 --> 00:33:50,236
schema.org is open web markup
standard that allows you


723
00:33:50,236 --> 00:33:52,126
to semantically annotate
your content


724
00:33:52,566 --> 00:33:54,086
with rich, structured, metadata.


725
00:33:54,716 --> 00:33:56,596
So there are many
schemas providing a bunch


726
00:33:56,596 --> 00:33:58,676
of representations
for various concepts.


727
00:33:59,146 --> 00:34:01,046
And schema.org is also intended


728
00:34:01,046 --> 00:34:03,876
to provide a rich search
experience to your users,


729
00:34:04,136 --> 00:34:07,786
both inside iOS, but also
with all major search engines.


730
00:34:08,426 --> 00:34:11,606
So these schemas
are all organized


731
00:34:11,606 --> 00:34:12,556
in a tree-like structure.


732
00:34:13,065 --> 00:34:15,136
So for instance,
more specific Schemas


733
00:34:15,136 --> 00:34:16,616
like restaurants inherits


734
00:34:16,616 --> 00:34:19,246
from more generic ones
like local business.


735
00:34:20,196 --> 00:34:21,876
Let's take a look at
restaurant as an example.


736
00:34:22,976 --> 00:34:25,806
So, it inherits from multiple
schemas and therefore,


737
00:34:25,806 --> 00:34:27,436
inherits from all
of their properties,


738
00:34:27,436 --> 00:34:28,335
defining each of these.


739
00:34:28,846 --> 00:34:31,626
And for instance, the name
property which is defined


740
00:34:31,626 --> 00:34:35,346
in the Thing schema would
capture things like the name


741
00:34:35,346 --> 00:34:36,525
of the restaurant in that case.


742
00:34:37,156 --> 00:34:38,886
Same with the address
which is defined


743
00:34:38,886 --> 00:34:40,696
in the Local Business schema.


744
00:34:40,966 --> 00:34:43,136
And things that are more
specific to restaurants,


745
00:34:43,386 --> 00:34:46,386
such as whether it accepts
reservations are defined


746
00:34:46,386 --> 00:34:48,065
directly inside the
Restaurant schema.


747
00:34:48,886 --> 00:34:51,516
So here's an example of
schema.org in action.


748
00:34:52,056 --> 00:34:54,275
On the left, we're seeing the
same websites we were looking


749
00:34:54,275 --> 00:34:54,755
at earlier.


750
00:34:55,255 --> 00:34:58,346
And on the right, content
that's semantically describes it


751
00:34:58,796 --> 00:35:01,556
in a way that can be
understood by Safari.


752
00:35:02,486 --> 00:35:03,826
Creating things like
the phone number,


753
00:35:04,146 --> 00:35:05,836
the name of the restaurant,
address,


754
00:35:05,836 --> 00:35:07,706
rating, website, and more.


755
00:35:07,706 --> 00:35:08,516
It can even do more.


756
00:35:09,646 --> 00:35:11,076
Let's look at a simple example.


757
00:35:11,626 --> 00:35:14,056
Here is a very simple
HTML document,


758
00:35:14,376 --> 00:35:15,966
describing content
about a restaurant.


759
00:35:17,036 --> 00:35:19,076
Now, let's look at how
this page could look like,


760
00:35:19,516 --> 00:35:23,166
with the addition of
JSON-LD schema.org markups.


761
00:35:23,676 --> 00:35:26,646
As you can see, we
haven't changed anything


762
00:35:26,646 --> 00:35:27,656
to the actual content


763
00:35:27,886 --> 00:35:29,366
or the actual structure
of the document.


764
00:35:29,786 --> 00:35:32,236
We've just provided
metadata alongside,


765
00:35:33,026 --> 00:35:36,056
describing the content in a
more machine friendly format.


766
00:35:36,896 --> 00:35:40,366
It includes simple
properties like the telephone,


767
00:35:40,916 --> 00:35:44,976
but also more complex structured
properties, like the address,


768
00:35:45,116 --> 00:35:47,676
which is itself another
schema of type PostalAddress.


769
00:35:48,476 --> 00:35:52,696
If you prefer, you can
also annotate your content


770
00:35:52,816 --> 00:35:54,556
in line with microdata.


771
00:35:54,556 --> 00:35:56,166
So that's what we're doing here.


772
00:35:56,506 --> 00:35:58,046
We're changing the
actual structure


773
00:35:58,046 --> 00:36:00,906
of our initial document
and augmenting it


774
00:36:01,366 --> 00:36:03,176
with inline microdata markups.


775
00:36:03,896 --> 00:36:07,656
So Safari in iOS 10, it strikes
these location related schemas,


776
00:36:08,056 --> 00:36:09,266
and promotes them much


777
00:36:09,266 --> 00:36:11,676
like a native app would
promote NSUserActivity.


778
00:36:12,596 --> 00:36:15,016
That also gives you some of
these benefits that we talked


779
00:36:15,016 --> 00:36:16,746
about earlier for
location suggestions.


780
00:36:17,306 --> 00:36:20,536
So these are some of the
schemas that safari extracts.


781
00:36:21,216 --> 00:36:23,696
Anything with a PostalAddress,
GeoCoordinate,


782
00:36:24,036 --> 00:36:26,926
or a telephone property, and the
Restaurant schema for instance


783
00:36:26,926 --> 00:36:29,516
that we were working with
earlier, is a perfect example.


784
00:36:30,076 --> 00:36:33,486
You have all of these
properties and you can combine


785
00:36:34,056 --> 00:36:40,066
or specify the ones that you
have available at the time.


786
00:36:40,066 --> 00:36:42,856
Alright, so we talked about
NSUserActivity and schema.org.


787
00:36:43,756 --> 00:36:46,876
Use NSUserActivity,
to promote locations


788
00:36:47,326 --> 00:36:50,216
that users view inside
your app in many places,


789
00:36:50,216 --> 00:36:51,836
throughout the system,
effortlessly.


790
00:36:53,536 --> 00:36:54,906
Also for communication apps.


791
00:36:55,656 --> 00:36:59,896
And also of course for all
cases of Handoff and App Search.


792
00:37:00,406 --> 00:37:04,896
Use schema.org for your website,
to get some of these benefits


793
00:37:05,266 --> 00:37:07,526
for location suggestion,
much like you would get


794
00:37:07,526 --> 00:37:08,426
through NSUserActivity.


795
00:37:09,776 --> 00:37:10,466
Alright, now let's move


796
00:37:10,466 --> 00:37:12,946
on to how your apps can
actually consume these location


797
00:37:12,946 --> 00:37:14,796
suggestions like we
just saw earlier.


798
00:37:15,666 --> 00:37:16,946
So here we're going to talk


799
00:37:16,946 --> 00:37:18,326
about two different
ways to do that.


800
00:37:18,866 --> 00:37:21,716
One through the keyboard, and
one specific to routing apps.


801
00:37:22,226 --> 00:37:24,326
Let's start with Number 1.


802
00:37:25,896 --> 00:37:29,566
So, if your app deals with
addresses and text format,


803
00:37:30,366 --> 00:37:33,766
you can benefit from location
suggestions inside your app


804
00:37:34,126 --> 00:37:34,916
through the QuickType UI.


805
00:37:34,916 --> 00:37:38,796
Now here we're looking
at the Uber app,


806
00:37:39,406 --> 00:37:42,166
which is ride sharing app for
those of you who don't know.


807
00:37:42,566 --> 00:37:46,086
And as the user enters a text
field, which is annotated


808
00:37:46,086 --> 00:37:50,056
as a location text field, we're
promoting content in that place


809
00:37:50,056 --> 00:37:52,076
from Yelp, directly inside Uber.


810
00:37:53,206 --> 00:37:56,296
Now this includes locations
that have been recently promoted


811
00:37:56,496 --> 00:38:00,186
in NSUserActivities by
other apps, or schema.org.


812
00:38:00,706 --> 00:38:03,046
Upcoming locations
based on your calendar.


813
00:38:04,516 --> 00:38:07,096
Locations that you may have
copied in your pasteboard.


814
00:38:07,096 --> 00:38:09,486
So if you receive text message
with an address for instance.


815
00:38:10,136 --> 00:38:13,836
And even, recent places
that you may have interacted


816
00:38:13,836 --> 00:38:15,056
with using Siri.


817
00:38:15,576 --> 00:38:18,026
So for instance, if
you ask to get --


818
00:38:18,196 --> 00:38:20,296
if you ask Siri to show
you restaurants nearby,


819
00:38:20,296 --> 00:38:23,226
and then interact with a
result, you can expect to see it


820
00:38:23,226 --> 00:38:25,736
in there as part of
location suggestions.


821
00:38:27,766 --> 00:38:30,366
So, we're introducing
a new API in UIKit.


822
00:38:30,366 --> 00:38:34,036
So your app can inform the
system what content type your


823
00:38:34,316 --> 00:38:35,356
text fields are expecting.


824
00:38:35,996 --> 00:38:39,666
And in this case, we were
working with locations.


825
00:38:40,226 --> 00:38:42,306
Now based on this hint,
the keyboard will be able


826
00:38:42,306 --> 00:38:45,296
to make the right
proactive suggestions,


827
00:38:45,566 --> 00:38:50,576
if there's any available
at this time in context.


828
00:38:50,656 --> 00:38:53,396
But if there's no proactive
suggestions available,


829
00:38:53,656 --> 00:38:55,776
it still provides a
much richer experience


830
00:38:55,776 --> 00:38:57,296
in terms of auto correction.


831
00:38:57,646 --> 00:38:59,426
Because autocorrect
can now be able to --


832
00:38:59,686 --> 00:39:02,636
is now able to know what
content your app is expecting.


833
00:39:04,576 --> 00:39:07,166
So, we added a new property


834
00:39:07,266 --> 00:39:09,756
in UITextInputTraits
called text content type,


835
00:39:10,446 --> 00:39:12,156
which allows you
to specify this.


836
00:39:12,156 --> 00:39:15,456
So here, we're working with
a UITextField which conforms


837
00:39:15,456 --> 00:39:18,506
to UITextInputTraits, and
therefore, gets this property.


838
00:39:19,156 --> 00:39:22,806
And we're indicating that
this text field expects a full


839
00:39:22,806 --> 00:39:24,116
street address.


840
00:39:24,356 --> 00:39:27,236
There's a bunch of text content
types that you can work with,


841
00:39:27,806 --> 00:39:30,726
ranging from describing
people to locations


842
00:39:30,916 --> 00:39:31,736
and a bunch of others.


843
00:39:32,476 --> 00:39:33,966
There's a full list
that's available to you


844
00:39:33,966 --> 00:39:34,976
in the Developer Library.


845
00:39:35,866 --> 00:39:39,506
But let's take a closer
look at two in particular.


846
00:39:39,506 --> 00:39:43,346
So these two are both
related to locations,


847
00:39:44,036 --> 00:39:45,746
but they have different
levels of granularity.


848
00:39:47,016 --> 00:39:48,996
So you want to use the one


849
00:39:48,996 --> 00:39:52,046
that represents your
use case the best


850
00:39:52,706 --> 00:39:54,416
with the right level
of granularity.


851
00:39:54,826 --> 00:39:59,236
So for instance, a navigation
app would typically expect a


852
00:39:59,236 --> 00:40:02,286
full street address so that it
can accurately route the user


853
00:40:02,286 --> 00:40:05,956
to their destination, whereas a
weather app may only typically


854
00:40:05,956 --> 00:40:08,886
care about the state and city


855
00:40:09,426 --> 00:40:12,146
because that might just be
enough for a weather use case.


856
00:40:12,676 --> 00:40:15,276
And as you can see here, based
on the different content type


857
00:40:15,276 --> 00:40:18,486
that we specified, we're getting
different content promoted


858
00:40:18,486 --> 00:40:19,486
inside the QuickType bar.


859
00:40:19,706 --> 00:40:22,206
In one case, the full street
address, and in the other case,


860
00:40:22,206 --> 00:40:23,486
just San Francisco, California.


861
00:40:24,076 --> 00:40:26,226
And that's how easy
it is for you


862
00:40:26,226 --> 00:40:27,936
to get suggestions
inside the keyboard.


863
00:40:28,986 --> 00:40:31,596
Now let's look at how your
routing apps can benefit


864
00:40:31,596 --> 00:40:35,196
from these nice direction
banners at the bottom.


865
00:40:36,066 --> 00:40:38,826
Like Daniel said
earlier, routing apps,


866
00:40:39,086 --> 00:40:41,686
third party routing apps
can also be elevated here,


867
00:40:42,186 --> 00:40:44,906
accelerating users
directly into your apps


868
00:40:45,166 --> 00:40:47,966
when we think there is an intent
for the user to get directions.


869
00:40:49,446 --> 00:40:52,756
So we're leveraging an existing
API called MKDirectionsRequest


870
00:40:53,236 --> 00:40:54,706
which was introduced in iOS 6,


871
00:40:55,386 --> 00:40:57,396
and lets your routing
app register as such


872
00:40:57,456 --> 00:41:00,716
and then handle all
directions request.


873
00:41:00,716 --> 00:41:04,876
iOS will learn over time what a
user's preferred routing app is


874
00:41:04,946 --> 00:41:07,866
based on various factors, such
as engagement for instance.


875
00:41:08,366 --> 00:41:09,286
And then suggest it


876
00:41:09,596 --> 00:41:11,556
in the Multitasking
UI when appropriate.


877
00:41:12,466 --> 00:41:18,626
So, to do so, you want to make
sure you configure your app


878
00:41:18,626 --> 00:41:19,966
to receive directions requests.


879
00:41:19,996 --> 00:41:21,696
And that's easily
done inside Xcode


880
00:41:22,226 --> 00:41:23,506
through the capabilities panel.


881
00:41:24,186 --> 00:41:27,736
In iOS 10, we're
introducing a new routing mode


882
00:41:27,736 --> 00:41:29,666
which is specifically
for ride sharing apps.


883
00:41:30,686 --> 00:41:32,566
Next, you want to
declare the map regions


884
00:41:32,566 --> 00:41:34,166
where your app is
actually relevant.


885
00:41:34,446 --> 00:41:37,116
So if your app is a local
metro app for instance,


886
00:41:37,286 --> 00:41:40,946
you can specify that your app
is only relevant in this area.


887
00:41:40,946 --> 00:41:43,436
And finally, you
want to make sure


888
00:41:43,436 --> 00:41:46,396
that you take the appropriate
action when your app is launched


889
00:41:46,396 --> 00:41:47,736
within MKDirectionsRequest.


890
00:41:48,066 --> 00:41:50,746
And that is that your app should
automatically start directions,


891
00:41:51,026 --> 00:41:53,506
or populate the UI in a
way that makes it easy


892
00:41:53,756 --> 00:41:55,676
for the user to get directions.


893
00:41:56,486 --> 00:41:58,686
In terms of code,
this is an example


894
00:41:58,686 --> 00:42:01,106
of how you can adopt
MKDirectionsRequest.


895
00:42:01,996 --> 00:42:04,396
MKDirectionsRequest
uses a URL theme.


896
00:42:04,836 --> 00:42:08,096
So when your app is launched,
it's launched with a URL.


897
00:42:08,446 --> 00:42:09,886
First thing we're
doing is checking


898
00:42:09,886 --> 00:42:11,866
that the URL we're
getting is actually a


899
00:42:11,866 --> 00:42:13,266
valid MKDirectionsRequest.


900
00:42:13,916 --> 00:42:17,156
An MKDirectionsRequest offers
there is directions request


901
00:42:17,156 --> 00:42:18,416
to your URL for that.


902
00:42:19,646 --> 00:42:22,906
Next, we're extenuating an
instance of MKDirectionsRequest


903
00:42:23,096 --> 00:42:26,156
from the contents of that URL
which will contain information


904
00:42:26,156 --> 00:42:28,566
about the origin
and the destination


905
00:42:28,776 --> 00:42:30,416
that the user is
trying to go to.


906
00:42:31,716 --> 00:42:34,446
And next and new in iOS 10,
something really important,


907
00:42:34,446 --> 00:42:35,976
especially for those of you


908
00:42:35,976 --> 00:42:38,106
who already adopt
MKDirectionsRequest,


909
00:42:38,746 --> 00:42:41,176
is that you can now be
launched with map items


910
00:42:41,176 --> 00:42:43,086
that don't have geo-coordinates.


911
00:42:43,766 --> 00:42:45,536
And in this case,
you'd want to geocode


912
00:42:45,536 --> 00:42:49,196
that address dictionary you
were getting, using CLGeocoders,


913
00:42:49,506 --> 00:42:53,756
geocode AddressDictionary, which
will give you back a place mark


914
00:42:53,806 --> 00:42:55,686
with the right latitude
and longitude,


915
00:42:56,046 --> 00:42:57,686
which will help you
then start directions


916
00:42:57,686 --> 00:42:58,726
to the intended location.


917
00:42:59,286 --> 00:43:00,336
And that's pretty much it.


918
00:43:01,186 --> 00:43:03,106
That's how your routing app
can be promoted right there


919
00:43:03,436 --> 00:43:05,726
in this prime real estate
of the Multitasking UI.


920
00:43:07,236 --> 00:43:10,206
Now with that, I'd like to
hand it back to Daniel to talk


921
00:43:10,206 --> 00:43:11,516
about media app suggestions.


922
00:43:11,906 --> 00:43:12,206
Thank you.


923
00:43:13,646 --> 00:43:14,676
>> That was awesome.


924
00:43:14,796 --> 00:43:20,986
Alright. Now, let's talk
about media app suggestions.


925
00:43:21,686 --> 00:43:25,576
So, if you're an app that
handles any form of media


926
00:43:25,576 --> 00:43:32,026
like a podcast app or a
Spotify-like app, or even an app


927
00:43:32,276 --> 00:43:36,876
that plays video, you'll
want to stay tuned for this.


928
00:43:37,066 --> 00:43:41,316
iOS today, promotes the app
that we think you're likely


929
00:43:41,316 --> 00:43:42,986
to use based on your behavior.


930
00:43:43,186 --> 00:43:45,756
And we promote that app in
a bunch of different UIs


931
00:43:45,816 --> 00:43:46,906
that I showed you earlier.


932
00:43:48,376 --> 00:43:51,586
We in particular, offer those
suggestions in Spotlight


933
00:43:51,956 --> 00:43:53,516
and in the Today View.


934
00:43:54,956 --> 00:44:00,976
If the act of the suggestion
follows a particular trigger,


935
00:44:01,026 --> 00:44:04,706
like for example when you plug
in headphones or Bluetooth pair,


936
00:44:05,016 --> 00:44:10,586
or even arriving at a certain
location, and it's a media app,


937
00:44:10,796 --> 00:44:12,246
we may further elevate that.


938
00:44:13,106 --> 00:44:14,616
So, let's see what
this looks like.


939
00:44:14,766 --> 00:44:17,116
This is what the promotion
in Spotlight looks like.


940
00:44:17,536 --> 00:44:21,526
If say, I always or
frequently listen to podcasts


941
00:44:21,566 --> 00:44:22,826
after plugging in headphones.


942
00:44:23,536 --> 00:44:25,606
Notice, in the upper
left hand side,


943
00:44:25,606 --> 00:44:28,536
the podcast app a suggestion.


944
00:44:28,536 --> 00:44:32,156
In certain situations
though, the promotion


945
00:44:32,156 --> 00:44:34,806
of that will be elevated
to the Lock Screen itself.


946
00:44:35,076 --> 00:44:39,096
And so what you're seeing is,
the UI we'll traditionally use


947
00:44:39,096 --> 00:44:43,246
for Handoff, is now being
used to promote an app


948
00:44:43,246 --> 00:44:46,056
that we think I'm likely to
use because it followed one


949
00:44:46,056 --> 00:44:47,136
of those triggers I mentioned.


950
00:44:47,916 --> 00:44:52,456
Now, this is a pretty good
experience, but it's not as good


951
00:44:52,456 --> 00:44:55,616
as it could be because at the
end of the day, what you have


952
00:44:55,616 --> 00:44:59,086
to do now is you have to
unlock your device and swipe


953
00:44:59,086 --> 00:45:02,026
in the right direction in
order to get to the content


954
00:45:02,026 --> 00:45:04,456
that we're predicting, we
think you want to consume.


955
00:45:05,736 --> 00:45:07,176
With a pretty simple API,


956
00:45:07,926 --> 00:45:11,496
you can build a far better
experience for your users.


957
00:45:12,076 --> 00:45:14,466
This is what it looks
like before.


958
00:45:14,466 --> 00:45:15,396
This is what I just showed you.


959
00:45:15,996 --> 00:45:20,466
And this is what it
looks like after.


960
00:45:20,846 --> 00:45:21,446
We're getting it?


961
00:45:21,576 --> 00:45:22,846
This is what it looks
like before.


962
00:45:24,116 --> 00:45:25,346
This is what it looks
like after.


963
00:45:25,766 --> 00:45:26,906
Far, far better.


964
00:45:27,736 --> 00:45:32,456
Not only can the customer engage
on the content without having


965
00:45:32,456 --> 00:45:36,316
to unlock their device, but you
also get your album art front


966
00:45:36,316 --> 00:45:37,776
and center, in front
of the user.


967
00:45:38,346 --> 00:45:41,536
Now, this might be quite
obvious in hindsight,


968
00:45:41,536 --> 00:45:44,736
but this particular interface
offers also far better


969
00:45:44,736 --> 00:45:48,116
conversion if you look
at the actual numbers.


970
00:45:48,316 --> 00:45:49,816
And so, if you're interested


971
00:45:49,816 --> 00:45:52,346
in getting your users
actually playing your content,


972
00:45:52,346 --> 00:45:55,506
which presumably you are,
this is an API for you.


973
00:45:55,566 --> 00:45:56,816
So how do we do this?


974
00:45:56,996 --> 00:45:58,356
I'm going to walk
you through it.


975
00:45:58,356 --> 00:45:59,876
The adoption is pretty simple.


976
00:46:00,306 --> 00:46:05,896
It all boils down to a class
called MPPlayableContentManager.


977
00:46:06,386 --> 00:46:13,226
So let's imagine you've got
a dictionary with a bunch


978
00:46:13,226 --> 00:46:14,166
of different properties.


979
00:46:14,416 --> 00:46:18,936
You know, a title, an artist,
an album, and what you want


980
00:46:18,936 --> 00:46:21,766
to do is you want to get this
elevated to the Lock Screen


981
00:46:21,766 --> 00:46:24,916
of the device when the system
thinks the customer's likely


982
00:46:24,916 --> 00:46:25,946
to engage with it.


983
00:46:26,816 --> 00:46:28,166
Well, you're going
to want to start off


984
00:46:28,166 --> 00:46:31,926
by doing is importing Media
Player and declaring yourself


985
00:46:32,126 --> 00:46:35,876
as conformant as to a
delegate in that class.


986
00:46:36,036 --> 00:46:37,176
And then you're going to want


987
00:46:37,176 --> 00:46:41,606
to implement a method called
playableContentManager.


988
00:46:42,056 --> 00:46:43,956
It's pretty simple.


989
00:46:44,276 --> 00:46:47,376
First, you want to
grab the media item


990
00:46:47,626 --> 00:46:50,046
through whatever means you have.


991
00:46:50,046 --> 00:46:51,766
Now, you'll obviously
want to be prepared,


992
00:46:51,766 --> 00:46:53,816
especially if you're
fetching remote assets


993
00:46:54,326 --> 00:46:55,366
for it not working.


994
00:46:55,366 --> 00:46:56,646
In which case, you're
going to call


995
00:46:56,646 --> 00:46:59,756
that call back handler
you see below as such


996
00:46:59,756 --> 00:47:04,126
and the system will understand,
not to necessarily promote you.


997
00:47:05,406 --> 00:47:08,966
Next, you're going to want to
populate the NowPlayingInfo


998
00:47:08,966 --> 00:47:11,536
on the Lock Screen
of the device.


999
00:47:11,906 --> 00:47:14,416
This is a method that I
implemented, so I'm going


1000
00:47:14,476 --> 00:47:15,836
to show you what's behind it.


1001
00:47:16,606 --> 00:47:19,466
The first thing that you
want to do is grab a hold


1002
00:47:19,786 --> 00:47:22,216
onto the infoCenter object,


1003
00:47:23,296 --> 00:47:26,936
and then if you do
have a particular image


1004
00:47:26,936 --> 00:47:30,356
that this media item
has, you can promote


1005
00:47:30,356 --> 00:47:32,536
that to the Lock
Screen of the device.


1006
00:47:32,536 --> 00:47:35,166
If you have a default image that
you use, this is an opportunity


1007
00:47:35,166 --> 00:47:37,306
for you to get your
brand elevated as well.


1008
00:47:37,306 --> 00:47:41,346
Then you're going to
translate your representation


1009
00:47:41,876 --> 00:47:43,876
to the nowPlayingInfo
representation,


1010
00:47:43,876 --> 00:47:47,946
and most importantly, you're
going to set the nowPlayingInfo


1011
00:47:47,946 --> 00:47:51,866
on the infoCenter,
before the callback


1012
00:47:51,866 --> 00:47:53,526
that I showed you
earlier, completes.


1013
00:47:53,526 --> 00:47:57,846
So you want to do this
before your method closes.


1014
00:47:58,526 --> 00:48:04,656
If for whatever reason you don't
feel like or your app has a bug


1015
00:48:04,656 --> 00:48:05,896
in preparing playback.


1016
00:48:05,896 --> 00:48:07,636
Again, if the phone's
on Airplane Mode.


1017
00:48:07,866 --> 00:48:10,566
This is another opportunity
for you to error out early.


1018
00:48:10,686 --> 00:48:12,766
Now note, you don't
actually want


1019
00:48:12,766 --> 00:48:14,376
to start playback at this point.


1020
00:48:15,046 --> 00:48:16,766
You plugged in your
headphones, you want to wait


1021
00:48:16,766 --> 00:48:19,296
for the customer to
hit the Play button.


1022
00:48:19,596 --> 00:48:21,226
But you want to get
prepared for it,


1023
00:48:21,226 --> 00:48:22,626
load into Stream, and so forth.


1024
00:48:23,086 --> 00:48:25,506
And that's it.


1025
00:48:26,036 --> 00:48:31,156
So again, today, iOS promotes
apps based on your behavior.


1026
00:48:31,606 --> 00:48:35,336
If they follow a particular
trigger and they're a media app,


1027
00:48:35,796 --> 00:48:37,426
we elevate them to
the Lock Screen.


1028
00:48:38,266 --> 00:48:41,286
Through pretty simple adoption
that I just showed you,


1029
00:48:41,286 --> 00:48:45,026
you can get a much better
experience and an opportunity


1030
00:48:45,026 --> 00:48:46,986
to promote your brand


1031
00:48:47,116 --> 00:48:51,376
and whatever gorgeous
album art you have.


1032
00:48:51,436 --> 00:48:55,966
Alright, so let's summarize
what we walked through today.


1033
00:48:56,516 --> 00:49:00,716
We spoke about a few simple APIs


1034
00:49:00,756 --> 00:49:02,816
that helped you deeply
integrate your app


1035
00:49:02,946 --> 00:49:04,436
into the operating system.


1036
00:49:04,876 --> 00:49:08,156
We spoke about NSUserActivity,
the kind of eyes


1037
00:49:08,156 --> 00:49:09,396
of the operating system.


1038
00:49:09,746 --> 00:49:13,696
It helps us understand
semantically what the customer


1039
00:49:13,696 --> 00:49:15,526
is currently staring at.


1040
00:49:16,216 --> 00:49:20,406
Then we spoke about schema.org,
which is in many ways,


1041
00:49:20,566 --> 00:49:22,806
similar to NSUserActivities
for the web.


1042
00:49:23,336 --> 00:49:29,996
We spoke about a new use
case in an existing APIs well


1043
00:49:29,996 --> 00:49:35,636
as a brand new UIKit API, to
help us as the system understand


1044
00:49:35,636 --> 00:49:37,956
when to elevate locations.


1045
00:49:39,876 --> 00:49:43,676
Then we spoke about MPContent,
MPPlayableContent Manager.


1046
00:49:43,676 --> 00:49:48,466
Which is particularly
relevant if you're a media app.


1047
00:49:48,726 --> 00:49:51,976
And hopefully it's been
clear to all of you today


1048
00:49:51,976 --> 00:49:55,606
that these APIs are easy
to adopt and easy to test.


1049
00:49:57,536 --> 00:50:00,946
There's some more
information available online,


1050
00:50:01,986 --> 00:50:04,586
as well as some great
related sessions


1051
00:50:05,026 --> 00:50:07,706
that you should check out,
if you haven't already.


1052
00:50:08,896 --> 00:50:11,256
There's a lot of related
work with SiriKit.


1053
00:50:11,256 --> 00:50:15,296
A lot of related work around our
search APIs that you saw today,


1054
00:50:15,336 --> 00:50:19,696
as well as some previous
sessions from the past two years


1055
00:50:19,746 --> 00:50:23,486
around Handoff and
aforementioned search APIs.


1056
00:50:24,206 --> 00:50:29,376
Lastly, I wanted to close by
saying that this is an area


1057
00:50:29,376 --> 00:50:32,976
that we are going to continue
to invest in as a company.


1058
00:50:34,136 --> 00:50:39,716
And what we need from you,
developers, is to inform us


1059
00:50:40,106 --> 00:50:42,186
about the capabilities
of your app


1060
00:50:43,066 --> 00:50:45,436
in the most detailed
way possible.


1061
00:50:46,486 --> 00:50:49,346
Because fundamentally the
more we know about your app,


1062
00:50:49,666 --> 00:50:52,476
the more we'll understand
when it's best to promote it.


1063
00:50:53,436 --> 00:50:56,896
And so, you saw today, a
lot of different situation


1064
00:50:56,896 --> 00:51:00,536
where there was varying levels
of kind of semantic detail


1065
00:51:00,786 --> 00:51:03,956
that you could annotate an
activity or a text field in.


1066
00:51:04,576 --> 00:51:08,346
I'd encourage you as much
as possible to try to be


1067
00:51:08,346 --> 00:51:10,786
as explicit as you
can when you do so,


1068
00:51:10,786 --> 00:51:13,416
not only to support the features
that we're discussing today,


1069
00:51:13,686 --> 00:51:15,386
but also to put your application


1070
00:51:15,386 --> 00:51:16,946
in a good place,
towards the future.


1071
00:51:22,046 --> 00:51:23,136
Thank you all for coming today.


1072
00:51:23,136 --> 00:51:26,716
I hope you had a great
WWDC and a great Friday.


1073
00:51:27,426 --> 00:51:27,636
Bye, bye.


1074
00:51:28,516 --> 00:51:32,500
[ Applause ]

