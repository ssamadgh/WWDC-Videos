1
00:00:07,516 --> 00:00:16,500
[ Music ]


2
00:00:21,516 --> 00:00:28,500
[ Applause ]


3
00:00:29,226 --> 00:00:30,026
>> Good morning.


4
00:00:30,026 --> 00:00:31,916
Welcome to Session 204,


5
00:00:31,976 --> 00:00:33,636
Automatic Strong Passwords and


6
00:00:33,636 --> 00:00:35,066
Security Code Autofill.


7
00:00:35,506 --> 00:00:36,616
My name is Chelsea.


8
00:00:37,466 --> 00:00:38,766
You may have seen Automatic


9
00:00:38,766 --> 00:00:40,176
Strong Passwords and Security


10
00:00:40,176 --> 00:00:41,496
Code Autofill in the State of


11
00:00:41,496 --> 00:00:42,526
the Union, yesterday.


12
00:00:42,806 --> 00:00:44,216
I'm really excited to tell you


13
00:00:44,216 --> 00:00:45,326
more about these features,


14
00:00:45,366 --> 00:00:45,756
today.


15
00:00:47,096 --> 00:00:48,816
These new features and other


16
00:00:48,816 --> 00:00:50,406
features in iOS 12 will help


17
00:00:50,406 --> 00:00:52,246
users log into and create


18
00:00:52,246 --> 00:00:54,866
accounts with ease in your app.


19
00:00:55,486 --> 00:00:58,026
If you have a login screen or an


20
00:00:58,026 --> 00:00:59,336
account creation screen in your


21
00:00:59,336 --> 00:01:00,916
app, this session is for you.


22
00:01:02,216 --> 00:01:04,366
A major pain point for users is


23
00:01:04,366 --> 00:01:05,446
dealing with passwords.


24
00:01:06,746 --> 00:01:08,196
They can be a pain point, even


25
00:01:08,196 --> 00:01:09,446
for people that use the best


26
00:01:09,446 --> 00:01:11,056
practice, which is to use a


27
00:01:11,056 --> 00:01:13,236
password manager to create and


28
00:01:13,266 --> 00:01:14,536
fill passwords for them.


29
00:01:15,486 --> 00:01:16,956
For everyone else it can be


30
00:01:16,956 --> 00:01:18,616
tempting to do something easy


31
00:01:18,616 --> 00:01:20,936
but insecure, like reuse a


32
00:01:20,936 --> 00:01:22,266
password they're already using


33
00:01:22,266 --> 00:01:24,326
on another service or use an


34
00:01:24,326 --> 00:01:26,466
easy to guess password that they


35
00:01:26,466 --> 00:01:27,276
can memorize.


36
00:01:28,636 --> 00:01:30,546
We know that the most private


37
00:01:30,706 --> 00:01:32,916
secure thing for your users is


38
00:01:32,946 --> 00:01:35,126
to use strong unique passwords


39
00:01:35,336 --> 00:01:36,916
for each service that they use.


40
00:01:37,926 --> 00:01:39,686
We've all heard of breaches in


41
00:01:39,686 --> 00:01:41,946
services that result in users'


42
00:01:41,946 --> 00:01:44,866
passwords being exposed.


43
00:01:44,866 --> 00:01:46,516
Users then need to go and change


44
00:01:46,516 --> 00:01:48,286
their password on every service


45
00:01:48,446 --> 00:01:49,436
where they were using it.


46
00:01:50,846 --> 00:01:52,146
The features that we'll discuss


47
00:01:52,146 --> 00:01:54,456
today will help users choose


48
00:01:54,686 --> 00:01:56,296
strong unique passwords for your


49
00:01:56,566 --> 00:01:56,666
apps.


50
00:01:57,406 --> 00:01:59,096
This way, you both help users


51
00:01:59,446 --> 00:02:00,876
that are trying to consciously


52
00:02:00,876 --> 00:02:03,206
use best password practices, as


53
00:02:03,236 --> 00:02:04,416
well as your users that would


54
00:02:04,416 --> 00:02:05,536
rather not think about


55
00:02:05,536 --> 00:02:06,186
passwords.


56
00:02:06,786 --> 00:02:09,566
Many of your users use the


57
00:02:09,566 --> 00:02:10,675
iCloud Keychain.


58
00:02:11,246 --> 00:02:12,336
The features that we're going to


59
00:02:12,336 --> 00:02:13,746
talk about today are built on


60
00:02:13,746 --> 00:02:14,736
top of the Keychain.


61
00:02:15,536 --> 00:02:17,256
It has best in class security


62
00:02:17,526 --> 00:02:19,176
and it protects users' passwords


63
00:02:19,176 --> 00:02:21,016
behind biometric authentication.


64
00:02:21,446 --> 00:02:24,486
Apple does not have access to


65
00:02:24,486 --> 00:02:25,526
the credentials stored in


66
00:02:25,526 --> 00:02:27,446
Keychain, so users' privacy is


67
00:02:27,446 --> 00:02:28,296
preserved, as well.


68
00:02:29,156 --> 00:02:30,586
The iCloud Password Keychain


69
00:02:30,846 --> 00:02:33,106
Manager can help users log into


70
00:02:33,106 --> 00:02:34,386
and create accounts in your app.


71
00:02:35,546 --> 00:02:36,926
We've added some new features on


72
00:02:37,056 --> 00:02:38,886
iOS 12 to help make account


73
00:02:38,886 --> 00:02:40,546
creation and login even easier.


74
00:02:40,966 --> 00:02:42,346
I'm really excited to show you


75
00:02:42,346 --> 00:02:43,716
these features with a demo.


76
00:02:48,156 --> 00:02:49,616
So, I'm going to go to the Shiny


77
00:02:49,616 --> 00:02:49,686
app.


78
00:02:50,486 --> 00:02:52,886
This is my favorite demo app for


79
00:02:53,236 --> 00:02:55,536
creating an account and logging


80
00:02:55,536 --> 00:02:56,146
back into it.


81
00:02:56,146 --> 00:02:57,806
So, I'm going to go ahead and


82
00:02:57,866 --> 00:02:59,486
create-- and tap create account.


83
00:03:00,436 --> 00:03:02,346
I'll focus the email field and


84
00:03:02,346 --> 00:03:03,596
you'll see that I've been given


85
00:03:03,596 --> 00:03:04,856
a suggested username.


86
00:03:05,316 --> 00:03:07,286
This is a new feature on iOS 12.


87
00:03:08,246 --> 00:03:09,716
These suggested usernames are


88
00:03:09,716 --> 00:03:11,086
based on credentials that the


89
00:03:11,086 --> 00:03:12,386
user already has stored in the


90
00:03:12,386 --> 00:03:13,036
Keychain.


91
00:03:13,886 --> 00:03:14,816
Since I always use


92
00:03:14,816 --> 00:03:16,556
Chelsea@example.com, I'm going


93
00:03:16,556 --> 00:03:18,106
to select that as my username.


94
00:03:18,956 --> 00:03:20,206
Without another tap, the


95
00:03:20,206 --> 00:03:22,116
password field is focused for me


96
00:03:22,376 --> 00:03:23,886
and a strong unique password has


97
00:03:23,886 --> 00:03:24,586
been provided.


98
00:03:25,136 --> 00:03:27,666
I'm also told that I can go and


99
00:03:27,666 --> 00:03:28,646
look up this password in


100
00:03:28,646 --> 00:03:29,866
Settings at any time.


101
00:03:29,866 --> 00:03:31,066
So, if I need to go and type it


102
00:03:31,066 --> 00:03:32,696
onto another device where iCloud


103
00:03:32,696 --> 00:03:34,176
Keychain is available, it's


104
00:03:34,176 --> 00:03:35,026
available to me.


105
00:03:35,496 --> 00:03:36,446
So, I'm going to go ahead and


106
00:03:36,446 --> 00:03:37,596
use this strong password and


107
00:03:37,596 --> 00:03:38,046
sign up.


108
00:03:38,956 --> 00:03:40,536
So, with just a couple of taps


109
00:03:40,586 --> 00:03:42,106
I'm logged back into the Shiny,


110
00:03:42,106 --> 00:03:43,416
or I'm signed up for the Shine


111
00:03:43,416 --> 00:03:43,666
app.


112
00:03:44,796 --> 00:03:46,236
Now, let's fast forward through


113
00:03:46,236 --> 00:03:47,616
all of the other account setup.


114
00:03:47,616 --> 00:03:48,886
I've turned on second factor


115
00:03:48,886 --> 00:03:49,776
authentication.


116
00:03:50,296 --> 00:03:51,486
And let's look at what logging


117
00:03:51,486 --> 00:03:52,846
back into Shiny looks like.


118
00:03:52,846 --> 00:03:54,616
So, I'm going to go ahead and


119
00:03:54,616 --> 00:03:55,796
tap the email field.


120
00:03:56,696 --> 00:03:57,956
As you can see, the credential I


121
00:03:57,956 --> 00:03:59,636
just created is suggested right


122
00:03:59,636 --> 00:04:00,526
on the QuickType bar.


123
00:04:01,026 --> 00:04:01,966
Going to select that.


124
00:04:01,966 --> 00:04:04,586
And then, after Face ID, my


125
00:04:04,586 --> 00:04:05,976
password and username are filled


126
00:04:05,976 --> 00:04:06,826
and I can log in.


127
00:04:07,936 --> 00:04:10,246
Now, I've set up second factor


128
00:04:10,246 --> 00:04:11,096
authentication.


129
00:04:11,666 --> 00:04:12,806
Normally, I'd need to try to


130
00:04:12,806 --> 00:04:14,326
memorize this code or go back to


131
00:04:14,326 --> 00:04:14,906
Messages.


132
00:04:15,166 --> 00:04:16,625
But as you can see, the code


133
00:04:16,625 --> 00:04:18,106
that I just received for second


134
00:04:18,106 --> 00:04:19,536
factor authentication is right


135
00:04:19,536 --> 00:04:20,416
on the QuickType bar.


136
00:04:20,796 --> 00:04:22,536
So, with one tap I can fill the


137
00:04:22,536 --> 00:04:22,956
code.


138
00:04:23,156 --> 00:04:25,536
Yeah. It's really awesome.


139
00:04:26,508 --> 00:04:28,508
[ Applause ]


140
00:04:29,116 --> 00:04:30,336
So, I can fill that code,


141
00:04:30,586 --> 00:04:33,136
submit, and again, with a


142
00:04:33,136 --> 00:04:34,696
minimal number of taps I'm


143
00:04:34,696 --> 00:04:36,916
logged back into Shiny.


144
00:04:37,206 --> 00:04:39,706
Back to the slides.


145
00:04:39,946 --> 00:04:41,836
So, as you saw, creating an


146
00:04:41,836 --> 00:04:43,186
account with Automatic Strong


147
00:04:43,186 --> 00:04:45,366
Passwords is quick and easy.


148
00:04:45,786 --> 00:04:46,656
I didn't think about the


149
00:04:46,656 --> 00:04:48,436
password, since one was provided


150
00:04:48,436 --> 00:04:50,036
for me and inserted into the


151
00:04:50,036 --> 00:04:50,846
password field.


152
00:04:52,136 --> 00:04:53,286
I also didn't think about the


153
00:04:53,286 --> 00:04:54,806
password when logging back into


154
00:04:54,806 --> 00:04:55,316
Shiny.


155
00:04:55,826 --> 00:04:57,376
Passwords have truly become an


156
00:04:57,376 --> 00:04:59,186
implementation detail to logging


157
00:04:59,186 --> 00:05:00,826
into my app with Automatic


158
00:05:00,826 --> 00:05:02,246
Strong Passwords and Password


159
00:05:02,246 --> 00:05:02,746
Autofill.


160
00:05:03,256 --> 00:05:05,976
Here's today's agenda.


161
00:05:06,476 --> 00:05:07,676
First, we're going to do a quick


162
00:05:07,676 --> 00:05:09,266
recap of Password Autofill,


163
00:05:09,656 --> 00:05:11,046
since many of the features that


164
00:05:11,046 --> 00:05:12,416
we'll talk about today are built


165
00:05:12,416 --> 00:05:13,696
upon that feature.


166
00:05:14,756 --> 00:05:15,986
Next, we'll talk about how to


167
00:05:15,986 --> 00:05:17,366
ensure that Automatic Strong


168
00:05:17,366 --> 00:05:19,516
Passwords works in your app.


169
00:05:19,816 --> 00:05:21,136
Then, we'll talk about Security


170
00:05:21,136 --> 00:05:21,936
Code Autofill.


171
00:05:23,046 --> 00:05:24,506
Next, we'll talk about federated


172
00:05:24,506 --> 00:05:25,496
authentication with a


173
00:05:25,496 --> 00:05:26,656
third-party service.


174
00:05:27,696 --> 00:05:28,946
And finally, we'll discuss some


175
00:05:28,946 --> 00:05:30,616
new password management features


176
00:05:30,616 --> 00:05:31,276
that the iCloud Password


177
00:05:31,276 --> 00:05:33,046
Keychain Manager provides.


178
00:05:33,756 --> 00:05:37,146
In iOS 11, we introduced


179
00:05:37,146 --> 00:05:38,366
Password Autofill for apps.


180
00:05:39,586 --> 00:05:40,806
Some of the new features that


181
00:05:40,806 --> 00:05:42,306
we're going to discuss today are


182
00:05:42,306 --> 00:05:43,826
built upon the same adoption you


183
00:05:43,826 --> 00:05:45,156
may have done for that feature.


184
00:05:45,596 --> 00:05:50,616
Password Autofill helps users


185
00:05:50,616 --> 00:05:52,286
log into your app by surfacing


186
00:05:52,286 --> 00:05:53,166
credentials right on the


187
00:05:53,166 --> 00:05:53,896
QuickType bar.


188
00:05:54,486 --> 00:05:55,856
Here's a quick recap of how to


189
00:05:55,856 --> 00:05:56,966
ensure that it works in your


190
00:05:57,796 --> 00:05:57,866
app.


191
00:05:59,496 --> 00:06:02,166
Passwords in the iCloud Keychain


192
00:06:02,166 --> 00:06:03,896
Password Manager are stored


193
00:06:03,896 --> 00:06:05,256
based on domains on the Web.


194
00:06:05,456 --> 00:06:06,526
Like Apple.com.


195
00:06:07,356 --> 00:06:08,696
Thus, it's important to have an


196
00:06:08,696 --> 00:06:11,106
association between your app and


197
00:06:11,466 --> 00:06:12,466
the domain on the Web.


198
00:06:13,456 --> 00:06:14,536
This way, we're able to


199
00:06:14,536 --> 00:06:16,516
confidently surface credentials


200
00:06:16,516 --> 00:06:17,516
on the QuickType bar.


201
00:06:18,346 --> 00:06:19,196
You already have this


202
00:06:19,196 --> 00:06:20,686
association if you've adopted


203
00:06:20,736 --> 00:06:22,396
Universal Links or Handoff.


204
00:06:23,116 --> 00:06:25,346
The process of adding this


205
00:06:25,346 --> 00:06:26,916
association is pretty simple.


206
00:06:27,236 --> 00:06:28,686
You'll have a small change to


207
00:06:28,686 --> 00:06:30,986
your apps Entitlements file and


208
00:06:30,986 --> 00:06:32,346
you'll serve a file from your


209
00:06:32,346 --> 00:06:33,186
domain on the Web.


210
00:06:34,246 --> 00:06:35,786
If you'd like to see an in-depth


211
00:06:35,786 --> 00:06:37,746
look at how to set this up, see


212
00:06:37,746 --> 00:06:39,286
Introducing Password Autofill


213
00:06:39,286 --> 00:06:41,716
for Apps from WWDC 2017.


214
00:06:42,276 --> 00:06:45,426
It's important to always tag


215
00:06:45,426 --> 00:06:46,876
your fields with text content


216
00:06:46,876 --> 00:06:48,296
type, so that Autofill can be


217
00:06:48,296 --> 00:06:49,566
offered at the right place.


218
00:06:50,426 --> 00:06:51,886
Tag your username fields with


219
00:06:51,886 --> 00:06:53,226
the username content type.


220
00:06:54,366 --> 00:06:55,916
Tag fields where users are going


221
00:06:55,916 --> 00:06:58,276
to be filling, or passwords for


222
00:06:58,276 --> 00:06:59,796
existing accounts with a


223
00:06:59,796 --> 00:07:00,986
password content type.


224
00:07:02,096 --> 00:07:03,526
If you've chosen not to use


225
00:07:03,526 --> 00:07:04,956
Secure Text Entry for your


226
00:07:04,956 --> 00:07:06,446
password fields, it's


227
00:07:06,446 --> 00:07:08,116
particularly important that you


228
00:07:08,116 --> 00:07:09,086
tag your fields with the


229
00:07:09,086 --> 00:07:10,186
password content type.


230
00:07:10,566 --> 00:07:11,626
This way, we know we're in a


231
00:07:11,656 --> 00:07:12,586
password context.


232
00:07:13,586 --> 00:07:15,306
Now, that we've discussed how to


233
00:07:15,306 --> 00:07:16,746
get Password Autofill working in


234
00:07:16,746 --> 00:07:18,376
your app, let's talk about some


235
00:07:18,376 --> 00:07:19,436
improvements that it has.


236
00:07:20,976 --> 00:07:23,626
Since, iOS 11.3, WKWebView


237
00:07:23,626 --> 00:07:25,126
supports Password Autofill.


238
00:07:25,906 --> 00:07:27,236
This helps your users if your


239
00:07:27,236 --> 00:07:28,626
login screen is implemented


240
00:07:28,626 --> 00:07:29,996
using Web technologies.


241
00:07:30,676 --> 00:07:34,316
New to iOS 12, password managers


242
00:07:34,316 --> 00:07:36,046
from the app store can provide


243
00:07:36,046 --> 00:07:37,406
information to Autofill.


244
00:07:38,176 --> 00:07:39,896
This means that any work you do


245
00:07:39,896 --> 00:07:41,586
to support the iCloud Keychain


246
00:07:41,586 --> 00:07:42,856
Password Manager filling


247
00:07:42,856 --> 00:07:44,556
credentials in your app, also,


248
00:07:44,556 --> 00:07:45,816
helps users of these other


249
00:07:45,816 --> 00:07:47,276
password managers, as well.


250
00:07:48,516 --> 00:07:49,656
If you're a developer of a


251
00:07:49,656 --> 00:07:51,306
password manager, see


252
00:07:51,306 --> 00:07:52,916
Implementing Autofill Credential


253
00:07:52,916 --> 00:07:54,146
Provider Extensions.


254
00:07:56,346 --> 00:07:58,976
On iOS 12, we now offer to save


255
00:07:58,976 --> 00:08:00,836
credentials when a user logs


256
00:08:00,836 --> 00:08:01,946
into your app with a new


257
00:08:01,946 --> 00:08:02,396
account.


258
00:08:03,556 --> 00:08:05,166
This way, users can then use


259
00:08:05,166 --> 00:08:06,726
these credentials in your app


260
00:08:06,726 --> 00:08:08,426
and website on all of their


261
00:08:08,426 --> 00:08:09,066
devices.


262
00:08:10,206 --> 00:08:11,576
Let's talk about how to ensure


263
00:08:11,576 --> 00:08:13,186
users are prompted to save and


264
00:08:13,186 --> 00:08:15,226
update passwords in your app.


265
00:08:16,136 --> 00:08:17,646
Here's how saving works.


266
00:08:18,386 --> 00:08:19,996
First, Autofill infers that


267
00:08:19,996 --> 00:08:21,346
we're in a login scenario.


268
00:08:22,646 --> 00:08:24,086
Then, Autofill checks the


269
00:08:24,086 --> 00:08:26,106
eligibility of your app based on


270
00:08:26,106 --> 00:08:27,286
if there's an association


271
00:08:27,286 --> 00:08:28,626
between your app and the domain


272
00:08:28,626 --> 00:08:29,086
on the Web.


273
00:08:29,856 --> 00:08:32,046
Without this association saving


274
00:08:32,046 --> 00:08:33,416
passwords will not be offered.


275
00:08:33,866 --> 00:08:37,015
Next, it finds the username and


276
00:08:37,015 --> 00:08:38,566
password fields so that it knows


277
00:08:38,566 --> 00:08:39,856
which data to save in the new


278
00:08:39,856 --> 00:08:40,476
credential.


279
00:08:41,866 --> 00:08:43,246
Then, it detects that a sign in


280
00:08:43,326 --> 00:08:44,166
action has occurred.


281
00:08:45,266 --> 00:08:47,276
And finally, Autofill decided


282
00:08:47,426 --> 00:08:49,246
whether to prompt to save or


283
00:08:49,246 --> 00:08:51,346
update the password based on if


284
00:08:51,536 --> 00:08:52,846
this is as brand new credential


285
00:08:52,846 --> 00:08:54,146
that's not yet in the Keychain.


286
00:08:54,496 --> 00:08:56,126
Or if the user is updating an


287
00:08:56,126 --> 00:08:57,136
existing credential.


288
00:08:57,706 --> 00:09:00,776
Now, this may work with no


289
00:09:00,776 --> 00:09:02,496
changes to your app on iOS12.


290
00:09:02,576 --> 00:09:04,106
But let's talk about some steps


291
00:09:04,106 --> 00:09:05,296
you can take to ensure that it


292
00:09:05,296 --> 00:09:05,736
works.


293
00:09:06,576 --> 00:09:08,186
First, make sure to tag your


294
00:09:08,186 --> 00:09:09,546
fields with the username and


295
00:09:09,546 --> 00:09:11,296
password content types, like,


296
00:09:11,296 --> 00:09:12,316
with filling passwords.


297
00:09:13,066 --> 00:09:15,176
Make sure to remove your


298
00:09:15,176 --> 00:09:16,716
username and password fields


299
00:09:16,716 --> 00:09:17,936
from the view hierarchy when a


300
00:09:17,936 --> 00:09:18,866
sign in occurs.


301
00:09:19,286 --> 00:09:20,886
This way, Autofill can detect


302
00:09:20,886 --> 00:09:22,146
that a sign in is occurring.


303
00:09:23,146 --> 00:09:24,496
You could do this by dismissing


304
00:09:24,496 --> 00:09:25,806
the view controller that your


305
00:09:25,806 --> 00:09:28,636
sign in fields are in.


306
00:09:28,846 --> 00:09:30,166
Make sure to only clear the


307
00:09:30,166 --> 00:09:31,886
username and password fields


308
00:09:31,886 --> 00:09:33,196
after they've been removed from


309
00:09:33,196 --> 00:09:34,046
the view hierarchy.


310
00:09:34,436 --> 00:09:35,876
This way, we can read out the


311
00:09:35,876 --> 00:09:37,166
data and save it into


312
00:09:37,166 --> 00:09:37,716
credential.


313
00:09:37,716 --> 00:09:41,256
Make sure the Autofill saves the


314
00:09:41,256 --> 00:09:42,236
credential to the correct


315
00:09:42,236 --> 00:09:42,776
domain.


316
00:09:43,176 --> 00:09:44,556
You can do this by saving a


317
00:09:44,556 --> 00:09:45,946
password in your app, and then


318
00:09:45,946 --> 00:09:47,516
going to Settings to check where


319
00:09:47,516 --> 00:09:48,636
the credential is saved.


320
00:09:49,426 --> 00:09:50,786
If you notice that Autofill is


321
00:09:50,786 --> 00:09:52,126
not saving to the correct


322
00:09:52,126 --> 00:09:53,926
domain, you can override where


323
00:09:53,926 --> 00:09:55,336
it's saving using the Web


324
00:09:55,336 --> 00:09:56,936
credentials associated domain


325
00:09:56,936 --> 00:09:57,386
service.


326
00:09:58,746 --> 00:10:00,596
Finally, you may have previously


327
00:10:00,596 --> 00:10:01,236
been using


328
00:10:01,356 --> 00:10:03,046
SecAddSharedWebCredential to


329
00:10:03,046 --> 00:10:04,486
manually save credentials when a


330
00:10:04,486 --> 00:10:05,716
user logs into your app.


331
00:10:06,366 --> 00:10:07,786
However, now that Autofill


332
00:10:07,786 --> 00:10:09,776
automatically prompts users to


333
00:10:09,776 --> 00:10:11,916
save passwords you may no longer


334
00:10:11,916 --> 00:10:12,386
need this.


335
00:10:13,616 --> 00:10:15,426
You will still want to use this


336
00:10:15,426 --> 00:10:17,176
if your app has a web view for


337
00:10:17,176 --> 00:10:19,436
its login screen because saving


338
00:10:19,436 --> 00:10:20,426
is not supported there.


339
00:10:21,006 --> 00:10:24,396
So, here are some of the key


340
00:10:24,466 --> 00:10:25,736
steps that we've discussed so


341
00:10:25,736 --> 00:10:26,916
far to make sure that filling


342
00:10:26,916 --> 00:10:28,356
and saving passwords in your app


343
00:10:28,416 --> 00:10:28,766
works.


344
00:10:29,436 --> 00:10:30,936
Make sure to associate your app


345
00:10:30,936 --> 00:10:32,026
with the domain on the Web.


346
00:10:33,036 --> 00:10:33,886
Tag your fields with the


347
00:10:33,886 --> 00:10:35,656
username and password content


348
00:10:35,656 --> 00:10:35,916
type.


349
00:10:37,256 --> 00:10:39,916
And for saving passwords, ensure


350
00:10:39,916 --> 00:10:41,636
that login is detected by making


351
00:10:41,636 --> 00:10:42,826
sure that the saving prompt


352
00:10:43,156 --> 00:10:44,576
appears when you sign into your


353
00:10:45,336 --> 00:10:45,406
app.


354
00:10:46,756 --> 00:10:48,086
By ensuring that Password


355
00:10:48,086 --> 00:10:49,696
Autofill works in your app, you


356
00:10:49,696 --> 00:10:51,236
help your users log in with


357
00:10:51,236 --> 00:10:51,636
ease.


358
00:10:52,326 --> 00:10:55,576
For new users, one of the first


359
00:10:55,576 --> 00:10:56,656
encounters they'll have with


360
00:10:56,656 --> 00:10:58,386
your app is creating an account.


361
00:10:59,466 --> 00:11:01,746
In my demo you saw how Automatic


362
00:11:01,746 --> 00:11:02,946
Strong Passwords made this


363
00:11:02,946 --> 00:11:04,536
process super easy.


364
00:11:05,496 --> 00:11:06,846
I'd like to invite Reza to the


365
00:11:06,846 --> 00:11:08,766
stage to discuss how to ensure


366
00:11:08,766 --> 00:11:10,446
Automatic Strong Passwords works


367
00:11:10,446 --> 00:11:11,116
in your app.


368
00:11:11,566 --> 00:11:11,976
Thank you.


369
00:11:12,516 --> 00:11:17,500
[ Applause ]


370
00:11:18,486 --> 00:11:19,156
>> Thank you, Chelsea.


371
00:11:20,676 --> 00:11:21,376
Hi, everyone.


372
00:11:21,376 --> 00:11:22,666
This is Reza and I'm really


373
00:11:22,666 --> 00:11:24,286
excited to tell you all about


374
00:11:24,286 --> 00:11:25,676
Automatic Strong Passwords.


375
00:11:26,126 --> 00:11:28,846
Account creation is a point of


376
00:11:28,896 --> 00:11:30,506
frustration for many users.


377
00:11:30,896 --> 00:11:32,206
They might even leave your app


378
00:11:32,476 --> 00:11:34,326
and never come back, or as many


379
00:11:34,326 --> 00:11:36,376
of them do, decide to use a weak


380
00:11:36,446 --> 00:11:38,176
password or keep reusing the


381
00:11:38,246 --> 00:11:38,606
same one.


382
00:11:39,316 --> 00:11:41,476
This significantly reduces their


383
00:11:41,476 --> 00:11:42,076
security.


384
00:11:43,056 --> 00:11:44,156
Although, it might be an


385
00:11:44,156 --> 00:11:46,656
alternative to account creation,


386
00:11:46,856 --> 00:11:48,446
some of you might have concerns


387
00:11:48,446 --> 00:11:51,176
about allowing social media to


388
00:11:51,176 --> 00:11:55,256
be used to sign into your apps.


389
00:11:55,506 --> 00:11:57,496
Automatic Strong Passwords makes


390
00:11:57,496 --> 00:11:59,186
account creation just as easy.


391
00:11:59,546 --> 00:12:01,416
It brings convenience and


392
00:12:01,486 --> 00:12:03,396
security to the signup process.


393
00:12:04,016 --> 00:12:05,646
Users no longer need to think


394
00:12:05,646 --> 00:12:07,446
about or worry about passwords.


395
00:12:08,556 --> 00:12:10,616
Autofill even suggests usernames


396
00:12:10,716 --> 00:12:12,046
to ease the signup process.


397
00:12:12,926 --> 00:12:14,466
With Automatic Strong Passwords,


398
00:12:14,686 --> 00:12:16,346
account creation is only a few


399
00:12:16,346 --> 00:12:16,956
taps away.


400
00:12:17,316 --> 00:12:18,836
So, users are more likely to


401
00:12:18,836 --> 00:12:20,436
sign up and user your services.


402
00:12:21,066 --> 00:12:23,446
Now, I'd like to talk about how


403
00:12:23,446 --> 00:12:25,026
Automatic Strong Passwords


404
00:12:25,026 --> 00:12:25,326
works.


405
00:12:25,856 --> 00:12:28,506
Similar to what Chelsea


406
00:12:28,506 --> 00:12:30,346
explained in a login scenario,


407
00:12:31,126 --> 00:12:32,476
when your app presents a view


408
00:12:32,476 --> 00:12:34,286
controller Autofill infers its


409
00:12:34,376 --> 00:12:34,586
type.


410
00:12:34,866 --> 00:12:36,506
In this case, it's a signup view


411
00:12:36,506 --> 00:12:36,966
controller.


412
00:12:38,436 --> 00:12:40,106
It will then check the


413
00:12:40,106 --> 00:12:42,486
eligibility of your-- it will


414
00:12:42,486 --> 00:12:43,926
then check the eligibility of


415
00:12:43,956 --> 00:12:46,326
your app based on the associated


416
00:12:46,326 --> 00:12:48,296
domains to figure out if it can


417
00:12:48,356 --> 00:12:49,056
save passwords.


418
00:12:49,196 --> 00:12:51,346
If that's the case, Autofill


419
00:12:51,346 --> 00:12:53,776
will then detect relevant signup


420
00:12:53,816 --> 00:12:56,486
form elements; the username and


421
00:12:57,436 --> 00:12:58,436
the password.


422
00:12:58,566 --> 00:13:00,206
Once the username field become


423
00:13:00,306 --> 00:13:02,616
first responder Autofill


424
00:13:02,616 --> 00:13:03,706
suggests usernames.


425
00:13:04,416 --> 00:13:05,436
This is a new feature we're


426
00:13:05,436 --> 00:13:06,466
adding in iOS 12.


427
00:13:07,456 --> 00:13:08,886
The user proceeds with the


428
00:13:08,936 --> 00:13:10,046
suggested username.


429
00:13:10,996 --> 00:13:12,306
And eventually, the password


430
00:13:12,356 --> 00:13:13,976
field becomes first responder.


431
00:13:14,626 --> 00:13:16,346
Autofill automatically inserts a


432
00:13:16,346 --> 00:13:17,476
strong password into the


433
00:13:17,476 --> 00:13:18,206
password field.


434
00:13:18,846 --> 00:13:20,636
At this point, the user only


435
00:13:20,636 --> 00:13:21,646
needs to proceed with the


436
00:13:21,686 --> 00:13:23,096
suggested password and sign up.


437
00:13:24,196 --> 00:13:25,666
Autofill takes care of saving


438
00:13:25,666 --> 00:13:26,176
the password.


439
00:13:27,536 --> 00:13:29,246
In many cases, this happens


440
00:13:29,246 --> 00:13:30,896
automatically without any


441
00:13:30,896 --> 00:13:32,236
adoption requirements in your


442
00:13:32,236 --> 00:13:32,556
apps.


443
00:13:33,086 --> 00:13:35,546
However, in order to ensure your


444
00:13:35,546 --> 00:13:36,816
app's compatibility with


445
00:13:36,816 --> 00:13:39,016
Automatic Strong Passwords there


446
00:13:39,016 --> 00:13:40,586
are a certain number of steps


447
00:13:40,716 --> 00:13:42,956
you should take.


448
00:13:43,176 --> 00:13:44,536
Many of these steps are


449
00:13:44,536 --> 00:13:46,156
identical to those Chelsea


450
00:13:46,156 --> 00:13:47,436
explained to make your apps


451
00:13:47,516 --> 00:13:49,256
compatible with saving.


452
00:13:52,046 --> 00:13:53,596
Make sure to tag your username


453
00:13:53,596 --> 00:13:55,626
field with UI textContentType


454
00:13:55,626 --> 00:13:56,186
username.


455
00:13:57,406 --> 00:13:59,806
New in iOS 12, make sure to tag


456
00:13:59,806 --> 00:14:01,606
your new password and confirm


457
00:14:01,606 --> 00:14:03,376
new password fields with UI


458
00:14:03,376 --> 00:14:04,926
textContentType newPassword.


459
00:14:05,536 --> 00:14:08,616
If you're using a UI table view


460
00:14:08,616 --> 00:14:10,236
to represent your signup form


461
00:14:11,046 --> 00:14:12,546
make sure to use unique


462
00:14:12,546 --> 00:14:14,616
instances of UITextField for the


463
00:14:14,616 --> 00:14:16,346
username and the password field.


464
00:14:17,006 --> 00:14:18,606
This is important, because once


465
00:14:18,606 --> 00:14:20,626
Autofill detects username and


466
00:14:20,626 --> 00:14:22,456
password fields, it expects to


467
00:14:22,456 --> 00:14:24,226
be able to reliably read their


468
00:14:24,226 --> 00:14:25,946
values later on.


469
00:14:26,916 --> 00:14:28,516
Some of you might have changed


470
00:14:28,516 --> 00:14:29,756
password forms in your apps.


471
00:14:30,636 --> 00:14:32,316
Automatic Strong Passwords is


472
00:14:32,346 --> 00:14:33,996
compatible with change password


473
00:14:33,996 --> 00:14:35,676
forms if Autofill is able to


474
00:14:35,676 --> 00:14:37,396
detect username and password


475
00:14:37,396 --> 00:14:40,976
fields on the same screen.


476
00:14:41,076 --> 00:14:42,256
Note that the username field can


477
00:14:42,256 --> 00:14:42,916
be Read Only.


478
00:14:44,266 --> 00:14:45,846
Best practices that we discussed


479
00:14:45,846 --> 00:14:47,816
for signup forms, also, apply to


480
00:14:47,816 --> 00:14:48,796
change password forms.


481
00:14:49,176 --> 00:14:52,976
Now, let's take a moment and


482
00:14:52,976 --> 00:14:54,546
talk about the format of these


483
00:14:54,546 --> 00:14:55,546
generated passwords.


484
00:14:59,176 --> 00:15:00,716
The generated passwords are 20


485
00:15:00,716 --> 00:15:01,556
characters long.


486
00:15:02,496 --> 00:15:05,516
They contain uppercase, digits,


487
00:15:06,846 --> 00:15:09,036
hyphen, and lowercase


488
00:15:09,036 --> 00:15:09,566
characters.


489
00:15:10,756 --> 00:15:12,356
This gives you a strong password


490
00:15:12,356 --> 00:15:13,926
with more than 71 bits of


491
00:15:13,926 --> 00:15:14,406
entropy.


492
00:15:15,636 --> 00:15:17,386
We designed this to be a strong,


493
00:15:17,386 --> 00:15:18,716
yet compatible with most


494
00:15:18,716 --> 00:15:19,276
services.


495
00:15:19,426 --> 00:15:22,526
It is, of course, possible for


496
00:15:22,526 --> 00:15:24,246
your apps to define their own


497
00:15:24,246 --> 00:15:25,276
custom password rules.


498
00:15:26,546 --> 00:15:28,746
As I mentioned before, in most


499
00:15:28,746 --> 00:15:30,096
cases, you don't need to do this


500
00:15:30,266 --> 00:15:31,526
because the default format of


501
00:15:31,526 --> 00:15:32,966
Automatic Strong Passwords


502
00:15:33,016 --> 00:15:33,896
should be compatible.


503
00:15:34,616 --> 00:15:36,846
However, if your app's backend


504
00:15:36,846 --> 00:15:38,556
requires a separate set of rules


505
00:15:38,556 --> 00:15:40,216
that are not compatible with the


506
00:15:40,216 --> 00:15:41,586
default format of Automatic


507
00:15:41,586 --> 00:15:43,136
Strong Passwords, you could


508
00:15:43,136 --> 00:15:44,196
define your own rules.


509
00:15:45,396 --> 00:15:47,526
To do so, use the new password


510
00:15:47,526 --> 00:15:49,496
rules language in iOS 12.


511
00:15:50,676 --> 00:15:51,936
Following the format of the


512
00:15:51,936 --> 00:15:53,846
password rules language, create


513
00:15:53,846 --> 00:15:54,936
a rulesDescriptor.


514
00:15:55,446 --> 00:15:57,856
Using the rulesDescriptor create


515
00:15:57,856 --> 00:15:59,046
an instance of


516
00:15:59,226 --> 00:16:01,506
UITextInputPasswordRules and


517
00:16:01,506 --> 00:16:02,816
assign it to the password rules


518
00:16:02,866 --> 00:16:04,236
property of UITextField.


519
00:16:04,726 --> 00:16:06,976
Once you do this, Automatic


520
00:16:06,976 --> 00:16:08,516
Strong Passwords will generate


521
00:16:08,566 --> 00:16:10,056
passwords based on these rules.


522
00:16:10,736 --> 00:16:13,516
We have also created a new


523
00:16:13,516 --> 00:16:14,816
web-based Password Rules


524
00:16:14,816 --> 00:16:15,606
Validation Tool.


525
00:16:16,716 --> 00:16:18,466
Use this tool to ensure the


526
00:16:18,466 --> 00:16:19,856
rules that you specify are


527
00:16:19,856 --> 00:16:22,196
correct and produce the type of


528
00:16:22,196 --> 00:16:23,466
passwords that you expect.


529
00:16:23,966 --> 00:16:25,056
I'll talk more about this,


530
00:16:25,056 --> 00:16:25,436
shortly.


531
00:16:25,436 --> 00:16:30,356
Now, that we talked about the


532
00:16:30,466 --> 00:16:32,306
steps it would take to make your


533
00:16:32,306 --> 00:16:33,886
apps compatible with Automatic


534
00:16:33,886 --> 00:16:35,596
Strong Passwords, I'd like to


535
00:16:35,596 --> 00:16:36,306
show you a demo.


536
00:16:36,956 --> 00:16:39,806
I'm the developer of the Shiny


537
00:16:39,806 --> 00:16:41,126
app and I want to make sure that


538
00:16:41,126 --> 00:16:42,526
Shiny is compatible with


539
00:16:42,526 --> 00:16:43,936
Automatic Strong Passwords in


540
00:16:43,936 --> 00:16:44,706
iOS 12.


541
00:16:45,326 --> 00:16:47,386
So, the first thing to do is to


542
00:16:47,386 --> 00:16:49,616
run Shiny using the iOS 12 SDK


543
00:16:49,616 --> 00:16:50,856
and try it out.


544
00:16:51,696 --> 00:16:57,666
So, in Xcode I'll click on Run.


545
00:16:57,846 --> 00:16:58,916
And here is Shiny.


546
00:16:59,586 --> 00:17:01,056
I'll tap on Create Account.


547
00:17:02,316 --> 00:17:02,916
Tap on Email.


548
00:17:02,916 --> 00:17:05,665
And I don't see any suggested


549
00:17:05,665 --> 00:17:06,126
username.


550
00:17:07,026 --> 00:17:08,606
When I tap on the Password field


551
00:17:08,606 --> 00:17:10,236
I don't see any Automatic Strong


552
00:17:10,236 --> 00:17:11,406
Passwords suggestion, either.


553
00:17:11,726 --> 00:17:13,465
So, let's go back to Xcode and


554
00:17:13,465 --> 00:17:14,526
investigate this, further.


555
00:17:14,636 --> 00:17:20,306
The first thing to make sure of


556
00:17:20,306 --> 00:17:22,476
is associated domains for your


557
00:17:22,476 --> 00:17:22,816
apps.


558
00:17:23,536 --> 00:17:25,136
In this case, I've already


559
00:17:25,136 --> 00:17:26,576
ensure that Shiny has an


560
00:17:26,576 --> 00:17:27,536
associated domain.


561
00:17:27,816 --> 00:17:30,046
In fact, earlier today I was


562
00:17:30,046 --> 00:17:31,866
able to get Autofill suggestions


563
00:17:31,866 --> 00:17:33,116
when I wanted to logging into


564
00:17:33,116 --> 00:17:33,476
Shiny.


565
00:17:34,496 --> 00:17:37,666
Next, you should take a look.


566
00:17:37,666 --> 00:17:39,036
You should take a closer look at


567
00:17:39,036 --> 00:17:40,286
your signup view controller.


568
00:17:40,856 --> 00:17:44,326
I'll click on the Email field.


569
00:17:46,166 --> 00:17:49,266
And here, under Text Input


570
00:17:49,266 --> 00:17:51,286
Traits, Content Type, I see that


571
00:17:51,286 --> 00:17:52,706
I'm correctly setting the


572
00:17:52,706 --> 00:17:53,966
content type to username.


573
00:17:55,266 --> 00:17:57,586
And because I want the format of


574
00:17:57,586 --> 00:17:58,906
this username to be of type


575
00:17:58,906 --> 00:18:00,876
email address, I'm also


576
00:18:00,876 --> 00:18:02,316
correctly setting the Keyboard


577
00:18:02,316 --> 00:18:03,466
Type to Email Address.


578
00:18:03,796 --> 00:18:04,476
So, this is good.


579
00:18:05,006 --> 00:18:06,166
Let's take a closer look at the


580
00:18:06,166 --> 00:18:06,826
Password field.


581
00:18:06,826 --> 00:18:11,236
I see that the Content Type is


582
00:18:11,276 --> 00:18:12,406
set to Unspecified.


583
00:18:12,496 --> 00:18:13,956
This should, actually, be set to


584
00:18:14,076 --> 00:18:15,526
New Password.


585
00:18:16,396 --> 00:18:19,206
So, I'll select New Password,


586
00:18:19,756 --> 00:18:19,846
here.


587
00:18:22,586 --> 00:18:24,986
And because this is a password


588
00:18:25,046 --> 00:18:26,366
field, I'm going to mark it as


589
00:18:26,446 --> 00:18:27,436
Secure Text Entry.


590
00:18:30,516 --> 00:18:31,246
All right.


591
00:18:31,246 --> 00:18:33,176
Let's run Shiny again and try it


592
00:18:33,876 --> 00:18:34,000
out.


593
00:18:34,046 --> 00:18:34,226
:15


594
00:18:38,686 --> 00:18:40,976
Okay. Tap on Create Account.


595
00:18:41,696 --> 00:18:42,476
Tap on Email.


596
00:18:42,816 --> 00:18:44,536
Here, I see I'm getting


597
00:18:44,596 --> 00:18:45,836
suggested username, now.


598
00:18:46,296 --> 00:18:47,046
I'm going to go ahead and


599
00:18:47,046 --> 00:18:48,096
proceed with the suggested


600
00:18:48,096 --> 00:18:48,616
username.


601
00:18:49,116 --> 00:18:50,776
I also, see Automatic Strong


602
00:18:50,776 --> 00:18:51,276
Passwords.


603
00:18:51,906 --> 00:18:53,506
So, in most cases, this should


604
00:18:53,506 --> 00:18:54,596
be enough and you should be


605
00:18:54,596 --> 00:18:54,876
done.


606
00:18:55,356 --> 00:18:57,006
Let's proceed with the signup


607
00:18:57,006 --> 00:18:57,466
process.


608
00:19:00,146 --> 00:19:01,616
For the purpose of this demo,


609
00:19:02,096 --> 00:19:04,506
I'm requiring Shiny passwords to


610
00:19:04,506 --> 00:19:05,596
contain a dollar sign.


611
00:19:06,386 --> 00:19:07,676
This means that we need to


612
00:19:07,676 --> 00:19:09,696
specify our own custom password


613
00:19:09,696 --> 00:19:11,066
rules for Automatic Strong


614
00:19:11,066 --> 00:19:11,586
Passwords.


615
00:19:12,116 --> 00:19:13,426
And actually, the best way to do


616
00:19:13,426 --> 00:19:15,426
so is using the new Password


617
00:19:15,426 --> 00:19:16,526
Rules Validation Tool.


618
00:19:17,006 --> 00:19:19,106
Using the tool, I will be able


619
00:19:19,106 --> 00:19:21,156
to specify correct password


620
00:19:21,156 --> 00:19:22,866
rules, and also, ensure the rule


621
00:19:23,256 --> 00:19:24,736
will produce the type of


622
00:19:24,736 --> 00:19:25,796
password that I expect.


623
00:19:26,346 --> 00:19:28,246
So, let's jump right in.


624
00:19:28,816 --> 00:19:30,436
This is the new Password Rules


625
00:19:30,436 --> 00:19:31,776
Validation Tool that you can


626
00:19:31,776 --> 00:19:33,076
have access from


627
00:19:33,076 --> 00:19:35,876
developer.apple.com.


628
00:19:36,076 --> 00:19:37,406
For the purpose of this demo,


629
00:19:37,976 --> 00:19:39,216
I'm allowing uppercase,


630
00:19:39,856 --> 00:19:43,116
lowercase, digit, and requiring


631
00:19:43,116 --> 00:19:44,576
at least a dollar sign to be


632
00:19:44,576 --> 00:19:46,116
present in my password.


633
00:19:46,676 --> 00:19:50,066
At the bottom of the page I see


634
00:19:50,066 --> 00:19:51,846
some examples of the password


635
00:19:51,846 --> 00:19:52,446
generated.


636
00:19:53,236 --> 00:19:54,506
I also, have the option to


637
00:19:54,506 --> 00:19:55,776
download a number of these


638
00:19:55,826 --> 00:19:58,126
passwords in case I need to run


639
00:19:58,126 --> 00:19:59,936
some tests in my app's backend.


640
00:20:01,336 --> 00:20:02,646
Once I'm happy with the


641
00:20:02,646 --> 00:20:05,796
formatting of the passwords I


642
00:20:05,796 --> 00:20:06,596
have two options.


643
00:20:07,446 --> 00:20:09,116
If I'm making a native app for


644
00:20:09,116 --> 00:20:11,846
UIKit, I can go ahead and copy


645
00:20:11,846 --> 00:20:13,606
the rules formatter for UIKit.


646
00:20:13,856 --> 00:20:16,636
Or if I'm making a webpage I can


647
00:20:16,636 --> 00:20:19,526
copy the HTML formatted rules.


648
00:20:20,986 --> 00:20:23,416
For this demo, since we are


649
00:20:23,416 --> 00:20:24,986
making a native app for UIKit,


650
00:20:25,176 --> 00:20:26,286
I'm going to go ahead and copy


651
00:20:26,286 --> 00:20:27,866
the UIKit version.


652
00:20:30,226 --> 00:20:32,336
And once I've copied it, all I


653
00:20:32,336 --> 00:20:35,246
need to do is go back in Xcode,


654
00:20:36,566 --> 00:20:39,756
select the password, and paste


655
00:20:39,756 --> 00:20:42,616
in the rule-- in the Password


656
00:20:42,756 --> 00:20:43,566
Rule text field.


657
00:20:45,356 --> 00:20:47,926
Now, let's run Shiny, again.


658
00:20:52,806 --> 00:20:55,526
Okay. I'll tap on Create


659
00:20:55,646 --> 00:20:55,866
Account.


660
00:20:55,866 --> 00:20:59,616
Tap on. I'm going to go ahead


661
00:20:59,616 --> 00:21:00,836
and proceed with the suggested


662
00:21:00,836 --> 00:21:01,196
username.


663
00:21:01,196 --> 00:21:03,796
And at this point, the password


664
00:21:03,796 --> 00:21:05,056
should be compatible with the


665
00:21:05,056 --> 00:21:06,656
rules that I just specified.


666
00:21:06,876 --> 00:21:10,546
Let's proceed with the signup.


667
00:21:10,686 --> 00:21:12,000
And just like that, I'm in.


668
00:21:13,508 --> 00:21:15,508
[ Applause ]


669
00:21:16,726 --> 00:21:16,996
Thank you.


670
00:21:19,446 --> 00:21:21,206
We just saw how easy it is to


671
00:21:21,206 --> 00:21:22,826
make your apps compatible with


672
00:21:22,826 --> 00:21:24,266
Automatic Strong Passwords.


673
00:21:26,146 --> 00:21:26,846
>> Than you, Reza.


674
00:21:27,796 --> 00:21:29,186
As Reza showed you, these are


675
00:21:29,186 --> 00:21:30,386
some steps you can take to


676
00:21:30,386 --> 00:21:31,706
ensure that Automatic Strong


677
00:21:31,706 --> 00:21:32,986
Passwords works in your app.


678
00:21:33,996 --> 00:21:35,696
Make sure to associate your app


679
00:21:35,696 --> 00:21:37,266
with the domain on the Web, just


680
00:21:37,266 --> 00:21:38,296
like filling and saving


681
00:21:38,296 --> 00:21:38,876
passwords.


682
00:21:40,246 --> 00:21:41,456
Make sure to tag your fields


683
00:21:41,456 --> 00:21:42,816
with the username and new


684
00:21:42,816 --> 00:21:44,406
password content types.


685
00:21:44,876 --> 00:21:48,276
Ensure that signup is detected


686
00:21:48,406 --> 00:21:50,116
by checking that when you sign


687
00:21:50,116 --> 00:21:51,716
up for your app the password is


688
00:21:51,716 --> 00:21:52,076
saved.


689
00:21:53,296 --> 00:21:55,086
Most of you will be done after


690
00:21:55,086 --> 00:21:56,496
doing these three things.


691
00:21:57,056 --> 00:21:58,836
However, if your service is not


692
00:21:58,836 --> 00:22:00,636
compatible with Apple's password


693
00:22:00,636 --> 00:22:02,806
generation format you may want


694
00:22:02,846 --> 00:22:04,366
to use some password rules on


695
00:22:04,366 --> 00:22:05,536
your password text field.


696
00:22:05,576 --> 00:22:07,046
To ensure that Automatic Strong


697
00:22:07,046 --> 00:22:09,046
Passwords generates a compatible


698
00:22:09,046 --> 00:22:09,596
password.


699
00:22:12,276 --> 00:22:13,966
By ensuring that Automatic


700
00:22:13,966 --> 00:22:15,336
Strong Passwords works well in


701
00:22:15,336 --> 00:22:16,586
your app, you're setting your


702
00:22:16,586 --> 00:22:18,076
users up for success by


703
00:22:18,076 --> 00:22:19,946
encouraging them to use a strong


704
00:22:19,946 --> 00:22:21,986
unique password in your app.


705
00:22:22,996 --> 00:22:24,906
Some of your apps and services


706
00:22:24,906 --> 00:22:28,466
may use SMS, or security code


707
00:22:28,526 --> 00:22:30,326
sent via SMS to your users.


708
00:22:31,496 --> 00:22:32,866
I'd like to invite Harris to the


709
00:22:32,866 --> 00:22:34,366
stage to discuss how you can


710
00:22:34,366 --> 00:22:35,896
service these codes right in


711
00:22:35,896 --> 00:22:36,846
your app.


712
00:22:37,516 --> 00:22:42,206
[ Applause ]


713
00:22:42,706 --> 00:22:43,046
>> Awesome.


714
00:22:43,226 --> 00:22:44,346
Thank you, very much, Chelsea.


715
00:22:45,166 --> 00:22:45,806
Hello, everyone.


716
00:22:46,666 --> 00:22:48,876
My name is Harris and I am super


717
00:22:48,876 --> 00:22:50,016
stoked to talk to you about


718
00:22:50,016 --> 00:22:51,096
Security Code Autofill.


719
00:22:52,226 --> 00:22:53,606
But first, this section needs a


720
00:22:53,606 --> 00:22:54,426
little bit of audience


721
00:22:54,426 --> 00:22:55,186
participation.


722
00:22:55,556 --> 00:22:57,846
So, show of hands, how many of


723
00:22:57,846 --> 00:22:59,016
you have ever gotten a text


724
00:22:59,016 --> 00:23:00,176
message that looks something


725
00:23:00,176 --> 00:23:00,716
like this?


726
00:23:01,236 --> 00:23:02,706
All right.


727
00:23:02,966 --> 00:23:04,506
I think it's fair to say that


728
00:23:04,506 --> 00:23:05,746
most of us have to deal with


729
00:23:05,746 --> 00:23:07,066
these codes on a fairly regular


730
00:23:07,066 --> 00:23:07,956
basis, these days.


731
00:23:08,886 --> 00:23:09,216
All right.


732
00:23:09,216 --> 00:23:10,776
Question of the second, after


733
00:23:10,776 --> 00:23:11,666
getting one of these text


734
00:23:11,666 --> 00:23:13,516
messages how many of you go


735
00:23:13,516 --> 00:23:14,726
through a process like this?


736
00:23:15,466 --> 00:23:16,206
Where you think you have the


737
00:23:16,206 --> 00:23:18,296
code memorized, you type it in,


738
00:23:18,936 --> 00:23:20,256
you switch the last two digits


739
00:23:20,256 --> 00:23:21,896
around, and then you have to do


740
00:23:21,896 --> 00:23:22,596
it all over, again.


741
00:23:23,046 --> 00:23:24,516
Let me see those hands.


742
00:23:26,536 --> 00:23:27,146
All right.


743
00:23:27,786 --> 00:23:28,676
Final question.


744
00:23:29,896 --> 00:23:30,786
After going through this


745
00:23:30,786 --> 00:23:33,076
process, how many of you feel


746
00:23:33,076 --> 00:23:34,826
something like this?


747
00:23:36,856 --> 00:23:38,086
All right.


748
00:23:38,086 --> 00:23:40,106
So, let me tell you it doesn't


749
00:23:40,106 --> 00:23:40,976
have to be this way.


750
00:23:41,516 --> 00:23:43,586
Because starting in iOS 12 and


751
00:23:43,586 --> 00:23:45,776
macOS Mojave, we're introducing


752
00:23:45,956 --> 00:23:47,206
Security Code Autofill.


753
00:23:47,876 --> 00:23:49,836
A brand new feature which takes


754
00:23:50,066 --> 00:23:52,076
all the pain and frustration out


755
00:23:52,076 --> 00:23:53,886
of message based second factor


756
00:23:53,886 --> 00:23:54,336
flows.


757
00:23:54,896 --> 00:23:57,876
Now, it is important to note


758
00:23:58,286 --> 00:24:00,036
that Security Code Autofill does


759
00:24:00,036 --> 00:24:01,716
not alter the calculus around


760
00:24:01,716 --> 00:24:03,096
the security of second factor


761
00:24:03,096 --> 00:24:03,646
methods.


762
00:24:04,556 --> 00:24:06,556
What it merely does is remove


763
00:24:06,556 --> 00:24:08,196
the indignity out of having to


764
00:24:08,316 --> 00:24:10,196
type the code in yourselves in


765
00:24:10,196 --> 00:24:11,196
the age of computers.


766
00:24:12,236 --> 00:24:14,756
Nothing more, nothing less.


767
00:24:15,516 --> 00:24:18,926
[ Applause ]


768
00:24:19,426 --> 00:24:22,216
So, starting in the new iOS and


769
00:24:22,216 --> 00:24:24,646
macOS, instead of exercising


770
00:24:24,646 --> 00:24:26,556
your memorizing skills you get


771
00:24:26,556 --> 00:24:27,656
to do something like this.


772
00:24:28,726 --> 00:24:30,396
Just one tap, right on the


773
00:24:30,396 --> 00:24:32,516
QuickType bar, and you're signed


774
00:24:32,516 --> 00:24:32,746
in.


775
00:24:34,016 --> 00:24:35,606
And hopefully, at the end of


776
00:24:35,606 --> 00:24:37,636
this process, you feel a little


777
00:24:37,636 --> 00:24:39,656
bit more like this.


778
00:24:40,436 --> 00:24:40,766
All right.


779
00:24:40,996 --> 00:24:41,916
So, let's talk about some


780
00:24:41,916 --> 00:24:42,806
technical details.


781
00:24:44,156 --> 00:24:45,526
As with other Autofill features,


782
00:24:45,896 --> 00:24:47,506
Security Code Autofill will work


783
00:24:47,506 --> 00:24:48,886
in your apps right out of the


784
00:24:48,886 --> 00:24:50,206
box, most of the time.


785
00:24:51,456 --> 00:24:53,286
Still, you can do just a tiny


786
00:24:53,286 --> 00:24:54,526
bit of work to ensure that


787
00:24:54,526 --> 00:24:55,876
Security Code Autofill works


788
00:24:56,006 --> 00:24:56,886
every single time.


789
00:24:57,436 --> 00:25:00,306
We've told you this before but


790
00:25:00,346 --> 00:25:01,266
tag your fields.


791
00:25:02,026 --> 00:25:03,736
In iOS 12 we're introducing a


792
00:25:03,736 --> 00:25:05,956
new UITextContentType with the


793
00:25:05,956 --> 00:25:07,576
value oneTimeCode.


794
00:25:08,756 --> 00:25:10,016
Tag your security code fields


795
00:25:10,016 --> 00:25:11,646
with this and Security Code


796
00:25:11,646 --> 00:25:15,876
Autofill will work every time.


797
00:25:15,876 --> 00:25:17,586
Additionally, it is very


798
00:25:17,586 --> 00:25:19,096
important that you allow usage


799
00:25:19,096 --> 00:25:20,476
of the system keyboard for


800
00:25:20,476 --> 00:25:21,546
inputting these codes.


801
00:25:22,426 --> 00:25:23,836
Tempting as it may be, you


802
00:25:23,836 --> 00:25:24,956
should refrain from building


803
00:25:24,956 --> 00:25:26,766
Bespoke keyboard UI's within


804
00:25:26,766 --> 00:25:28,986
your view hierarchy or setting


805
00:25:28,986 --> 00:25:30,196
custom input views in your


806
00:25:30,196 --> 00:25:30,786
controls.


807
00:25:31,186 --> 00:25:32,716
Because if you do so you are


808
00:25:32,716 --> 00:25:34,616
preventing iOS from surfacing


809
00:25:34,616 --> 00:25:36,776
the necessary UI or injecting


810
00:25:36,776 --> 00:25:38,186
the appropriate events to type


811
00:25:38,186 --> 00:25:39,296
the code in on behalf of your


812
00:25:39,296 --> 00:25:39,886
users.


813
00:25:40,416 --> 00:25:42,096
And additionally, you may be


814
00:25:42,096 --> 00:25:43,196
hampering the experience of


815
00:25:43,196 --> 00:25:44,126
folks that leverage


816
00:25:44,126 --> 00:25:45,486
accessibility technologies like


817
00:25:45,486 --> 00:25:46,066
voiceover.


818
00:25:46,626 --> 00:25:49,116
So, bottom line is let the


819
00:25:49,116 --> 00:25:50,496
system keyboard do the heavy


820
00:25:50,496 --> 00:25:52,186
lifting for you and Security


821
00:25:52,186 --> 00:25:53,766
Code Autofill will work every


822
00:25:53,766 --> 00:25:54,116
time.


823
00:25:54,726 --> 00:25:58,116
Another step that you can take


824
00:25:58,496 --> 00:25:59,736
to ensure that Security Code


825
00:25:59,736 --> 00:26:01,026
Autofill works great with your


826
00:26:01,026 --> 00:26:02,906
service is to craft your text


827
00:26:02,906 --> 00:26:03,896
message, accordingly.


828
00:26:04,906 --> 00:26:07,506
iOS and macOS use data detector


829
00:26:07,506 --> 00:26:09,026
heuristics to infer that an


830
00:26:09,026 --> 00:26:10,726
incoming message carries a


831
00:26:10,726 --> 00:26:11,506
security code.


832
00:26:12,266 --> 00:26:14,346
Specifically, our heuristics are


833
00:26:14,346 --> 00:26:16,256
looking for words like code or


834
00:26:16,256 --> 00:26:18,026
passcode in proximity to the


835
00:26:18,026 --> 00:26:19,106
actual code string.


836
00:26:19,716 --> 00:26:21,266
And you can see a few sample


837
00:26:21,266 --> 00:26:22,946
text messages in different


838
00:26:22,946 --> 00:26:24,186
languages in the slide behind


839
00:26:24,186 --> 00:26:24,316
me.


840
00:26:25,616 --> 00:26:27,976
Now, verifying that your


841
00:26:28,146 --> 00:26:29,456
specially crafted message


842
00:26:29,536 --> 00:26:30,986
properly triggers the iOS and


843
00:26:30,986 --> 00:26:32,356
macOS heuristics is super


844
00:26:32,356 --> 00:26:32,706
simple.


845
00:26:33,476 --> 00:26:34,906
You can be your own best friends


846
00:26:35,026 --> 00:26:36,266
and simply text yourselves.


847
00:26:36,916 --> 00:26:38,116
Then, when you go into the


848
00:26:38,116 --> 00:26:39,916
message transcript and you see


849
00:26:39,916 --> 00:26:41,586
the code being underlined and


850
00:26:41,586 --> 00:26:42,926
tapping the code offers you a


851
00:26:42,926 --> 00:26:44,876
Copy Code option, you know you


852
00:26:45,066 --> 00:26:47,946
have it right.


853
00:26:48,146 --> 00:26:49,816
Security Code Autofill is


854
00:26:49,816 --> 00:26:51,256
available in all supported


855
00:26:51,256 --> 00:26:53,136
locales of iOS and macOS.


856
00:26:53,586 --> 00:26:55,706
And if after following these


857
00:26:55,706 --> 00:26:57,226
best practices you find that you


858
00:26:57,226 --> 00:26:58,566
cannot get Security Code


859
00:26:58,566 --> 00:26:59,466
Autofill to trigger


860
00:26:59,466 --> 00:27:01,016
appropriately inside of your app


861
00:27:01,056 --> 00:27:02,856
or website, please let us know


862
00:27:02,856 --> 00:27:04,336
by filing a bug report.


863
00:27:04,796 --> 00:27:07,766
We'll be looking out for them.


864
00:27:07,966 --> 00:27:10,786
So, so far, we've talked about


865
00:27:10,786 --> 00:27:12,096
getting Security Code Autofill


866
00:27:12,096 --> 00:27:14,886
to work within your native iOS


867
00:27:15,626 --> 00:27:15,736
apps.


868
00:27:16,416 --> 00:27:18,266
Security Code Autofill is also


869
00:27:18,266 --> 00:27:20,556
available in iOS Safari on


870
00:27:20,556 --> 00:27:23,166
websites and, and this is pretty


871
00:27:23,166 --> 00:27:25,556
cool, if your users are signing


872
00:27:25,556 --> 00:27:27,366
into your service in Safari on


873
00:27:27,366 --> 00:27:28,946
their Mac, text message


874
00:27:28,946 --> 00:27:30,336
forwarding securely pushes


875
00:27:30,336 --> 00:27:31,666
incoming messages from their


876
00:27:31,736 --> 00:27:32,636
iPhone to their Mac.


877
00:27:32,886 --> 00:27:34,096
Now, what this means is that


878
00:27:34,096 --> 00:27:35,566
they can fill in a security code


879
00:27:35,696 --> 00:27:37,126
with a single click in Safari's


880
00:27:37,126 --> 00:27:37,946
completion UI.


881
00:27:38,186 --> 00:27:39,216
You no longer have to switch


882
00:27:39,216 --> 00:27:40,696
back to Messages to copy the


883
00:27:40,696 --> 00:27:42,346
code out or, you know, go find


884
00:27:42,346 --> 00:27:43,356
your iPhone all the way across


885
00:27:43,356 --> 00:27:43,676
your home.


886
00:27:43,676 --> 00:27:44,326
It's really cool.


887
00:27:45,516 --> 00:27:50,500
[ Applause ]


888
00:27:51,296 --> 00:27:52,906
To support Security Code


889
00:27:52,906 --> 00:27:54,776
Autofill in Safari, we are


890
00:27:54,776 --> 00:27:56,226
introducing a new input


891
00:27:56,226 --> 00:27:57,926
autocomplete attribute value


892
00:27:58,426 --> 00:27:59,216
one-time-code.


893
00:28:00,226 --> 00:28:02,516
In fact, all of the UI Text


894
00:28:02,516 --> 00:28:03,706
Content Types that you heard


895
00:28:03,706 --> 00:28:05,866
about today have web platform


896
00:28:05,866 --> 00:28:06,966
equivalents that you can


897
00:28:06,966 --> 00:28:08,926
leverage to ensure a smooth


898
00:28:09,126 --> 00:28:11,196
seamless autofill experience in


899
00:28:11,196 --> 00:28:12,956
your websites, just as well as


900
00:28:12,956 --> 00:28:13,556
in your apps.


901
00:28:14,596 --> 00:28:16,046
You've heard this before but tag


902
00:28:16,046 --> 00:28:17,566
your form fields this time and


903
00:28:17,566 --> 00:28:19,096
Autofill will work great every


904
00:28:19,096 --> 00:28:19,416
time.


905
00:28:19,986 --> 00:28:22,666
So, this was a brief


906
00:28:22,666 --> 00:28:24,366
introduction to Security Code


907
00:28:24,366 --> 00:28:26,046
Autofill, a brand new addition


908
00:28:26,046 --> 00:28:28,596
to iOS 12 and macOS Mojave that


909
00:28:28,596 --> 00:28:30,196
takes all the pain and all the


910
00:28:30,196 --> 00:28:32,006
frustration out of message based


911
00:28:32,006 --> 00:28:32,976
second factor flows.


912
00:28:36,206 --> 00:28:37,846
Now, with the Autofill features


913
00:28:37,846 --> 00:28:39,426
that we've introduced today, it


914
00:28:39,426 --> 00:28:41,456
becomes super simple for you to


915
00:28:41,456 --> 00:28:42,996
build a relationship with your


916
00:28:42,996 --> 00:28:44,776
users while safeguarding their


917
00:28:44,776 --> 00:28:46,526
security and respecting their


918
00:28:46,526 --> 00:28:46,996
privacy.


919
00:28:48,276 --> 00:28:50,636
Still, some of you may find that


920
00:28:50,636 --> 00:28:52,246
you have to support federated


921
00:28:52,246 --> 00:28:53,766
authentication flows with third


922
00:28:53,766 --> 00:28:55,546
party providers, such as popular


923
00:28:55,546 --> 00:28:56,476
social networks.


924
00:28:57,536 --> 00:28:58,576
For those of you among the


925
00:28:58,576 --> 00:29:00,506
audience, we are introducing in


926
00:29:00,566 --> 00:29:03,106
iOS 12 a new API to support such


927
00:29:03,106 --> 00:29:03,566
flows.


928
00:29:04,156 --> 00:29:04,916
We call it


929
00:29:04,916 --> 00:29:06,976
ASWebAuthenticationSession and I


930
00:29:06,976 --> 00:29:08,086
would like to show you how it


931
00:29:08,086 --> 00:29:08,476
works.


932
00:29:09,016 --> 00:29:12,136
Now, here I am back in the Shiny


933
00:29:12,136 --> 00:29:12,336
app.


934
00:29:12,916 --> 00:29:14,226
And this time I will choose to


935
00:29:14,226 --> 00:29:16,696
log in with example.com, a super


936
00:29:16,696 --> 00:29:17,906
popular social network.


937
00:29:18,406 --> 00:29:21,566
Now, as soon as I tap the button


938
00:29:21,726 --> 00:29:23,376
the app under the hood calls in


939
00:29:23,376 --> 00:29:23,976
to the new


940
00:29:23,976 --> 00:29:25,716
ASWebAuthenticationSession API.


941
00:29:26,636 --> 00:29:28,316
Now, one of the ways in which


942
00:29:28,316 --> 00:29:30,096
ASWebAuthenticationSession makes


943
00:29:30,096 --> 00:29:32,406
logins faster is by sharing its


944
00:29:32,406 --> 00:29:33,606
underlying cookie storage with


945
00:29:33,606 --> 00:29:34,136
Safari.


946
00:29:35,086 --> 00:29:36,896
Now, of course, before we do any


947
00:29:36,896 --> 00:29:39,176
of this, iOS asks for explicit


948
00:29:39,176 --> 00:29:39,886
user consent.


949
00:29:40,316 --> 00:29:43,806
Upon consenting, the user is


950
00:29:43,806 --> 00:29:44,926
presented with a secure view


951
00:29:44,926 --> 00:29:46,796
controller and guided through


952
00:29:46,796 --> 00:29:48,266
the third party's federated


953
00:29:48,266 --> 00:29:49,206
authentication flow.


954
00:29:50,456 --> 00:29:52,576
In this case, I'm already signed


955
00:29:52,576 --> 00:29:55,356
into example.com in Safari on my


956
00:29:55,356 --> 00:29:57,046
iPhone, so all I have to do is


957
00:29:57,046 --> 00:29:57,656
tap Allow.


958
00:29:57,806 --> 00:29:59,976
There we go.


959
00:30:00,066 --> 00:30:02,626
And with just two taps I've gone


960
00:30:02,626 --> 00:30:03,816
through a full federated


961
00:30:03,816 --> 00:30:04,816
authentication flow with a


962
00:30:04,936 --> 00:30:05,896
third-party service.


963
00:30:06,976 --> 00:30:08,736
So, in the past you may have


964
00:30:08,736 --> 00:30:10,376
used one of the other iOS


965
00:30:10,456 --> 00:30:11,886
platform technologies to


966
00:30:11,886 --> 00:30:12,896
implement federated


967
00:30:12,896 --> 00:30:14,066
authentication inside of your


968
00:30:14,066 --> 00:30:14,426
apps.


969
00:30:15,786 --> 00:30:17,226
Starting with iOS 12,


970
00:30:17,586 --> 00:30:19,146
ASWebAuthenticationSession is


971
00:30:19,146 --> 00:30:21,156
the go-to way to implement such


972
00:30:21,156 --> 00:30:21,606
flows.


973
00:30:22,126 --> 00:30:24,246
As we mentioned, already,


974
00:30:24,886 --> 00:30:26,566
ASWebAuthenticationSession makes


975
00:30:26,566 --> 00:30:28,606
login flows faster by sharing


976
00:30:28,606 --> 00:30:30,036
its underlying cookie storage


977
00:30:30,036 --> 00:30:31,986
with Safari upon explicit user


978
00:30:31,986 --> 00:30:32,426
consent.


979
00:30:33,236 --> 00:30:34,636
Now, what this means is that


980
00:30:34,636 --> 00:30:36,216
depending on the implementation


981
00:30:36,216 --> 00:30:37,606
of the federated authentication


982
00:30:37,606 --> 00:30:38,856
flow by the third party.


983
00:30:39,066 --> 00:30:40,626
If your user is already signed


984
00:30:40,626 --> 00:30:42,376
into that service in Safari on


985
00:30:42,376 --> 00:30:43,966
their device, they may not even


986
00:30:43,966 --> 00:30:45,156
have to see a login form, at


987
00:30:45,156 --> 00:30:45,406
all.


988
00:30:47,046 --> 00:30:48,486
If they do have to see a login


989
00:30:48,486 --> 00:30:50,576
form ASWebAuthenticationSession


990
00:30:50,576 --> 00:30:52,466
supports Password Autofill and


991
00:30:52,466 --> 00:30:54,146
Security Code Autofill to make


992
00:30:54,146 --> 00:30:55,616
the experience as painless as


993
00:30:55,616 --> 00:30:56,046
possible.


994
00:30:57,506 --> 00:30:58,736
And for you developers,


995
00:30:58,986 --> 00:31:00,486
ASWebAuthenticationSession


996
00:31:00,486 --> 00:31:01,846
offers a straightforward


997
00:31:01,846 --> 00:31:03,906
block-based API that makes


998
00:31:03,906 --> 00:31:05,216
adoption super simple.


999
00:31:06,246 --> 00:31:08,566
So, let's take a look at it.


1000
00:31:08,796 --> 00:31:10,596
Now, let's see how simple it is


1001
00:31:10,656 --> 00:31:11,756
to implement federated


1002
00:31:11,756 --> 00:31:13,116
authentication using


1003
00:31:13,116 --> 00:31:14,706
ASWebAuthenticationSession.


1004
00:31:16,146 --> 00:31:17,496
You're going to start off by


1005
00:31:17,496 --> 00:31:18,546
importing the brand new


1006
00:31:18,546 --> 00:31:19,636
AuthenticationServices


1007
00:31:19,636 --> 00:31:20,046
framework.


1008
00:31:20,556 --> 00:31:23,536
And then, you simply define the


1009
00:31:23,536 --> 00:31:25,646
oauthURL as it's described to


1010
00:31:25,646 --> 00:31:26,846
you by your third-party


1011
00:31:26,846 --> 00:31:27,896
authentication provider.


1012
00:31:29,366 --> 00:31:31,096
Now, following this you will


1013
00:31:31,096 --> 00:31:31,926
create an


1014
00:31:31,926 --> 00:31:33,306
ASWebAuthenticationSession


1015
00:31:33,306 --> 00:31:33,786
object.


1016
00:31:34,176 --> 00:31:36,126
You're passing the oauthURL and


1017
00:31:36,126 --> 00:31:37,386
a callback handler that gets


1018
00:31:37,386 --> 00:31:38,386
involved at the end of the


1019
00:31:38,386 --> 00:31:39,396
authentication session.


1020
00:31:40,126 --> 00:31:42,466
Now, it is crucial that you hold


1021
00:31:42,466 --> 00:31:43,936
onto a strong reference to the


1022
00:31:43,936 --> 00:31:45,296
authentication session object


1023
00:31:45,476 --> 00:31:46,896
while the session is in flight.


1024
00:31:47,376 --> 00:31:49,056
And by doing so, you also have


1025
00:31:49,056 --> 00:31:50,636
the ability to cancel an ongoing


1026
00:31:50,636 --> 00:31:52,836
session should you choose to do


1027
00:31:53,736 --> 00:31:53,826
so.


1028
00:31:54,006 --> 00:31:55,366
Finally, you call the


1029
00:31:55,366 --> 00:31:56,736
nonblocking start method.


1030
00:31:57,486 --> 00:31:59,956
Upon doing so, first iOS will


1031
00:31:59,956 --> 00:32:01,606
ask for user consent to share


1032
00:32:01,606 --> 00:32:02,656
the underlying Safari, the


1033
00:32:02,656 --> 00:32:04,256
underlying cookie storage that


1034
00:32:04,256 --> 00:32:05,706
Safari has with your session.


1035
00:32:06,066 --> 00:32:07,296
And then, the user is presented


1036
00:32:07,296 --> 00:32:08,526
with a secure view controller


1037
00:32:08,726 --> 00:32:09,876
and guided through the


1038
00:32:09,876 --> 00:32:10,766
authentication flow.


1039
00:32:12,116 --> 00:32:13,146
When the user completes the


1040
00:32:13,146 --> 00:32:15,156
authentication flow or if they


1041
00:32:15,156 --> 00:32:16,666
cancel out of the authentication


1042
00:32:16,666 --> 00:32:18,346
session, your completion handler


1043
00:32:18,346 --> 00:32:19,876
gets involved and you can handle


1044
00:32:19,876 --> 00:32:20,286
the result.


1045
00:32:20,796 --> 00:32:24,076
And that's how simple it is to


1046
00:32:24,076 --> 00:32:25,116
implement federated


1047
00:32:25,116 --> 00:32:27,356
authentication in iOS 12, using


1048
00:32:27,356 --> 00:32:28,896
ASWebAuthenticationSession.


1049
00:32:29,166 --> 00:32:30,426
It only takes a few lines of


1050
00:32:30,486 --> 00:32:30,756
code.


1051
00:32:32,166 --> 00:32:34,356
Starting with iOS 12 this new


1052
00:32:34,356 --> 00:32:36,796
API is the go-to way to


1053
00:32:36,796 --> 00:32:37,856
implement federated


1054
00:32:37,856 --> 00:32:39,966
authentication and it replaces


1055
00:32:39,996 --> 00:32:41,546
SFAuthenticationSession.


1056
00:32:42,386 --> 00:32:43,686
If you find that you have to


1057
00:32:43,686 --> 00:32:45,346
support federated authentication


1058
00:32:45,346 --> 00:32:47,246
inside of your apps, we strongly


1059
00:32:47,246 --> 00:32:48,776
encourage you to adopt this new


1060
00:32:48,776 --> 00:32:49,066
API.


1061
00:32:49,776 --> 00:32:52,876
And with that, I'll turn things


1062
00:32:52,876 --> 00:32:54,376
over back to Chelsea, to talk to


1063
00:32:54,376 --> 00:32:56,266
you about a number of super cool


1064
00:32:56,266 --> 00:32:57,786
new password management features


1065
00:32:57,976 --> 00:33:00,016
that we built right into iOS 12


1066
00:33:00,116 --> 00:33:01,216
and macOS Mojave.


1067
00:33:01,786 --> 00:33:02,596
Thank you, very much.


1068
00:33:03,516 --> 00:33:07,500
[ Applause ]


1069
00:33:08,656 --> 00:33:09,396
>> Thanks, Harris.


1070
00:33:10,146 --> 00:33:11,486
I'm really excited to tell you


1071
00:33:11,486 --> 00:33:12,846
about some of the new features


1072
00:33:12,846 --> 00:33:14,016
that the iCloud Keychain


1073
00:33:14,016 --> 00:33:15,566
Password Manager gives you in


1074
00:33:15,756 --> 00:33:17,566
iOS 12 and macOS Mojave.


1075
00:33:18,416 --> 00:33:19,536
You may have seen some of these


1076
00:33:19,536 --> 00:33:20,426
in the State of the Union,


1077
00:33:20,426 --> 00:33:20,836
yesterday.


1078
00:33:21,506 --> 00:33:24,316
What we've talked about, so far,


1079
00:33:24,716 --> 00:33:26,186
is how you can help users log


1080
00:33:26,186 --> 00:33:27,716
into and create accounts in your


1081
00:33:28,496 --> 00:33:28,563
app.


1082
00:33:28,836 --> 00:33:30,456
However, there are some cases


1083
00:33:30,456 --> 00:33:31,786
when users will be interacting


1084
00:33:31,786 --> 00:33:33,156
with accounts for your app when


1085
00:33:33,156 --> 00:33:34,386
they're outside of the context


1086
00:33:34,386 --> 00:33:34,636
of your app.


1087
00:33:34,636 --> 00:33:37,276
For these cases we've added some


1088
00:33:37,276 --> 00:33:38,646
features to the iCloud Keychain


1089
00:33:38,646 --> 00:33:40,086
Password Manager to make


1090
00:33:40,086 --> 00:33:41,676
managing and interacting with


1091
00:33:41,676 --> 00:33:42,786
these accounts a breeze.


1092
00:33:43,426 --> 00:33:45,776
If a user needs to look up a


1093
00:33:45,776 --> 00:33:47,266
password, they can now simply


1094
00:33:47,266 --> 00:33:48,046
ask Siri.


1095
00:33:48,916 --> 00:33:50,046
They'll be taken right to their


1096
00:33:50,046 --> 00:33:51,686
password after authentication.


1097
00:33:52,206 --> 00:33:53,286
This way, they can read off


1098
00:33:53,286 --> 00:33:54,676
their password to type into


1099
00:33:54,676 --> 00:33:56,886
another device that doesn't have


1100
00:33:57,346 --> 00:33:58,586
iCloud Keychain.


1101
00:33:58,716 --> 00:34:00,226
Some users may share account


1102
00:34:00,226 --> 00:34:01,936
information for services like


1103
00:34:01,936 --> 00:34:02,586
utilities.


1104
00:34:03,796 --> 00:34:04,766
In order to share this


1105
00:34:04,766 --> 00:34:06,316
information, users can now


1106
00:34:06,356 --> 00:34:07,606
AirDrop passwords to their


1107
00:34:07,606 --> 00:34:08,286
contacts.


1108
00:34:09,016 --> 00:34:12,876
On iOS 12 the password list UI


1109
00:34:13,036 --> 00:34:14,806
is redesigned so it's more


1110
00:34:14,806 --> 00:34:16,196
scannable and delightful to


1111
00:34:16,196 --> 00:34:17,545
interact with.


1112
00:34:18,795 --> 00:34:20,976
The password list UI in macOS


1113
00:34:20,976 --> 00:34:22,346
has been redesigned, as well.


1114
00:34:22,496 --> 00:34:25,485
And it looks great.


1115
00:34:25,666 --> 00:34:26,896
Another new feature of the


1116
00:34:26,896 --> 00:34:28,716
iCloud Keychain Password Manager


1117
00:34:29,016 --> 00:34:30,676
is it now warns users if they're


1118
00:34:30,676 --> 00:34:32,045
reusing passwords across


1119
00:34:32,045 --> 00:34:33,036
multiple websites.


1120
00:34:34,396 --> 00:34:35,706
When the user taps on one of


1121
00:34:35,706 --> 00:34:37,406
these passwords they'll be given


1122
00:34:37,406 --> 00:34:38,525
the option to change their


1123
00:34:38,525 --> 00:34:39,876
password on the website.


1124
00:34:40,646 --> 00:34:42,085
Automatic Strong Passwords on


1125
00:34:42,085 --> 00:34:43,646
the web can help them update to


1126
00:34:43,646 --> 00:34:45,666
using a strong unique password


1127
00:34:45,906 --> 00:34:46,696
for that service.


1128
00:34:47,396 --> 00:34:51,036
The Password Reuse Auditing


1129
00:34:51,036 --> 00:34:52,726
feature is built right into the


1130
00:34:52,726 --> 00:34:54,786
Safari Passwords List on macOS,


1131
00:34:54,786 --> 00:34:55,196
as well.


1132
00:34:55,676 --> 00:35:00,076
Last but not least, your tvOS


1133
00:35:00,076 --> 00:35:01,746
apps can now offer to autofill


1134
00:35:01,746 --> 00:35:03,266
from a nearby iOS device.


1135
00:35:04,516 --> 00:35:08,500
[ Applause ]


1136
00:35:09,046 --> 00:35:10,656
In order, to learn more about


1137
00:35:10,656 --> 00:35:12,046
this incredibly convenient


1138
00:35:12,046 --> 00:35:13,646
feature see the Password


1139
00:35:13,646 --> 00:35:15,216
Autofill section of the What's


1140
00:35:15,216 --> 00:35:16,896
New in tvOS 12 session.


1141
00:35:19,316 --> 00:35:21,266
In summary, Autofill is a


1142
00:35:21,316 --> 00:35:23,626
powerful platform feature that


1143
00:35:23,626 --> 00:35:24,916
helps users interact with


1144
00:35:24,916 --> 00:35:26,896
accounts in your apps.


1145
00:35:27,466 --> 00:35:29,566
As we discussed, the features


1146
00:35:29,566 --> 00:35:30,936
that we talked about today may


1147
00:35:30,936 --> 00:35:32,256
work with no changes to your


1148
00:35:33,566 --> 00:35:34,886
app, however, it's important


1149
00:35:34,956 --> 00:35:36,026
that you test your app with


1150
00:35:36,026 --> 00:35:37,026
these new features.


1151
00:35:37,686 --> 00:35:39,076
Apply the recommendations that


1152
00:35:39,076 --> 00:35:40,796
we discussed today.


1153
00:35:41,416 --> 00:35:42,826
If after applying these


1154
00:35:42,826 --> 00:35:45,056
recommendations, Autofill is not


1155
00:35:45,056 --> 00:35:47,076
working as you'd expect, please


1156
00:35:47,076 --> 00:35:48,036
file a bug report.


1157
00:35:48,106 --> 00:35:49,856
We'd love to hear from you.


1158
00:35:51,536 --> 00:35:53,186
To use the Password Rules


1159
00:35:53,186 --> 00:35:54,696
Validation Tool that Reza showed


1160
00:35:54,696 --> 00:35:56,076
you during his demo, you can


1161
00:35:56,076 --> 00:35:57,386
visit the URL listed here.


1162
00:35:58,456 --> 00:35:59,716
Here are some related sessions


1163
00:35:59,716 --> 00:36:00,816
you might be interested in.


1164
00:36:01,706 --> 00:36:02,826
If you're a developer of a


1165
00:36:02,826 --> 00:36:04,266
password manager, see


1166
00:36:04,266 --> 00:36:05,806
Implementing Autofill Credential


1167
00:36:05,806 --> 00:36:06,986
Provider Extensions.


1168
00:36:07,946 --> 00:36:09,096
If you'd like to learn more


1169
00:36:09,096 --> 00:36:10,296
about Password Autofill for


1170
00:36:10,436 --> 00:36:12,206
apps, see Introducing Password


1171
00:36:12,206 --> 00:36:13,476
Autofill for Apps from WWDC


1172
00:36:13,476 --> 00:36:15,036
2017.


1173
00:36:15,566 --> 00:36:18,436
And if you'd like to talk to us


1174
00:36:18,696 --> 00:36:20,116
or you have questions about any


1175
00:36:20,116 --> 00:36:21,196
of the content we've covered


1176
00:36:21,196 --> 00:36:23,016
today, come to the Safari,


1177
00:36:23,176 --> 00:36:24,656
WebKit, and Password Autofill


1178
00:36:24,656 --> 00:36:25,896
Lab after this session.


1179
00:36:26,276 --> 00:36:27,376
We've also got a couple more,


1180
00:36:27,376 --> 00:36:28,056
later in the week.


1181
00:36:29,446 --> 00:36:30,326
Thank you, so much, for


1182
00:36:30,326 --> 00:36:31,406
attending and have a great WWDC


1183
00:36:31,406 --> 00:36:32,866
2018.


1184
00:36:33,511 --> 00:36:35,511
[ Applause ]

