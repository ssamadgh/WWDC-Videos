1
00:00:07,516 --> 00:00:14,500
[ Music ]


2
00:00:20,516 --> 00:00:26,936
[ Applause ]


3
00:00:27,436 --> 00:00:28,196
>> Hi, everyone.


4
00:00:28,196 --> 00:00:29,726
My name is Neil Desai, and I'm a


5
00:00:29,726 --> 00:00:31,456
watchOS Frameworks engineer, and


6
00:00:31,456 --> 00:00:33,116
I'm really excited to be here to


7
00:00:33,116 --> 00:00:34,216
talk about how to create some


8
00:00:34,216 --> 00:00:36,116
great audio apps for watchOS.


9
00:00:36,616 --> 00:00:38,276
And honestly, we've been waiting


10
00:00:38,276 --> 00:00:39,336
a little over a year to give


11
00:00:39,336 --> 00:00:40,566
this talk, so I'm really happy


12
00:00:40,566 --> 00:00:42,626
to be here, so let's just jump


13
00:00:42,626 --> 00:00:43,616
right in.


14
00:00:44,576 --> 00:00:46,596
In watchOS 4, we unveiled a


15
00:00:46,596 --> 00:00:48,906
revamped music and radio app.


16
00:00:48,906 --> 00:00:51,016
And in watchOS 5, we unveiled a


17
00:00:51,016 --> 00:00:52,386
brand-new podcast app.


18
00:00:52,486 --> 00:00:53,906
And we're finding that users


19
00:00:53,986 --> 00:00:56,156
absolutely love being able to


20
00:00:56,156 --> 00:00:58,366
play audio on the go or in the


21
00:00:58,366 --> 00:00:59,286
middle of a workout.


22
00:01:02,046 --> 00:01:02,686
And we're also finding that


23
00:01:02,686 --> 00:01:04,275
users really like to be able to


24
00:01:04,275 --> 00:01:05,696
remote control some playback


25
00:01:05,696 --> 00:01:06,776
that's occurring on another


26
00:01:06,776 --> 00:01:07,316
device.


27
00:01:07,766 --> 00:01:09,326
For example, your iPhone or


28
00:01:09,326 --> 00:01:09,956
HomePod.


29
00:01:10,296 --> 00:01:11,486
And I especially really like


30
00:01:11,486 --> 00:01:12,016
this feature.


31
00:01:12,016 --> 00:01:13,636
I love just being able to play


32
00:01:13,636 --> 00:01:15,916
some music out of my iPhone and


33
00:01:15,916 --> 00:01:17,196
then being able to control the


34
00:01:17,196 --> 00:01:18,716
volume, for instance, directly


35
00:01:18,716 --> 00:01:19,456
with my watch.


36
00:01:19,916 --> 00:01:20,996
That's a great feature.


37
00:01:21,756 --> 00:01:23,426
And today, with watchOS 5, we're


38
00:01:23,426 --> 00:01:25,086
going to show you how to build a


39
00:01:25,086 --> 00:01:27,016
great experience like you saw on


40
00:01:27,016 --> 00:01:28,396
the keynote like Audible was


41
00:01:28,396 --> 00:01:30,466
able to make and just like


42
00:01:30,536 --> 00:01:31,626
Pandora was able to make.


43
00:01:32,496 --> 00:01:34,516
And so they were able to use


44
00:01:34,516 --> 00:01:36,756
some of the new tools available


45
00:01:36,756 --> 00:01:37,726
in watchOS 5.


46
00:01:37,766 --> 00:01:39,526
And today, we're going to talk


47
00:01:39,526 --> 00:01:40,836
about how we can do the same


48
00:01:40,836 --> 00:01:41,436
sort of thing.


49
00:01:42,216 --> 00:01:43,156
And to do that, we're going to


50
00:01:43,156 --> 00:01:44,686
talk about four major themes.


51
00:01:44,966 --> 00:01:46,736
We're going to talk about our


52
00:01:46,736 --> 00:01:48,276
native controls and how we can


53
00:01:48,276 --> 00:01:49,926
now embed our system controls


54
00:01:50,266 --> 00:01:51,926
directly within our application.


55
00:01:52,826 --> 00:01:53,856
We're going to talk about, how


56
00:01:53,856 --> 00:01:55,296
do we get content over to the


57
00:01:55,296 --> 00:01:55,846
watch?


58
00:01:56,196 --> 00:01:57,496
And then, once we have that


59
00:01:57,496 --> 00:01:59,186
content, how do we actually play


60
00:01:59,186 --> 00:02:00,416
something back for our user?


61
00:02:01,716 --> 00:02:02,766
And lastly, we're going to go


62
00:02:02,766 --> 00:02:04,296
over the whole audio experience


63
00:02:04,296 --> 00:02:05,656
and how to build a really rich


64
00:02:05,656 --> 00:02:07,296
experience for our users that


65
00:02:07,296 --> 00:02:08,536
integrates well throughout the


66
00:02:08,536 --> 00:02:09,356
entire system.


67
00:02:11,276 --> 00:02:12,746
So let's talk about our native


68
00:02:12,746 --> 00:02:13,326
controls.


69
00:02:15,776 --> 00:02:17,736
In watchOS 5, we're unveiling


70
00:02:17,736 --> 00:02:19,046
two new controls that you can


71
00:02:19,046 --> 00:02:20,246
embed directly within your


72
00:02:20,246 --> 00:02:20,936
application.


73
00:02:21,926 --> 00:02:23,756
And the first is a Now Playing


74
00:02:23,756 --> 00:02:25,696
view which you can embed within


75
00:02:25,696 --> 00:02:26,746
your watchOS app.


76
00:02:27,136 --> 00:02:29,306
And this is really great for


77
00:02:29,306 --> 00:02:31,356
content that may not be yours,


78
00:02:31,356 --> 00:02:31,966
for instance.


79
00:02:32,456 --> 00:02:34,876
And you can also embed a volume


80
00:02:34,876 --> 00:02:36,286
control so you can build your


81
00:02:36,286 --> 00:02:38,166
own custom UI to allow your user


82
00:02:38,166 --> 00:02:40,016
to control the volume.


83
00:02:41,146 --> 00:02:42,306
And you might be wondering for


84
00:02:42,306 --> 00:02:43,326
that first view, that Now


85
00:02:43,326 --> 00:02:45,686
Playing view, when exactly would


86
00:02:45,686 --> 00:02:47,446
I ever want to allow my user to


87
00:02:47,526 --> 00:02:49,646
control some audio, but the


88
00:02:49,646 --> 00:02:50,986
content's not exactly mine?


89
00:02:52,086 --> 00:02:53,276
Well, let me give you an


90
00:02:53,276 --> 00:02:53,676
example.


91
00:02:53,676 --> 00:02:54,756
We do this ourselves in the


92
00:02:54,756 --> 00:02:55,406
workout app.


93
00:02:55,846 --> 00:02:56,936
So I'm in the middle of a HIIT


94
00:02:56,936 --> 00:02:57,606
workout.


95
00:02:57,606 --> 00:02:58,636
I swipe to the left.


96
00:02:58,636 --> 00:03:00,426
I get my power song, "Eye of the


97
00:03:00,426 --> 00:03:02,096
Tiger," and I'm a little bit of


98
00:03:02,096 --> 00:03:03,376
a dork, so I actually do listen


99
00:03:03,376 --> 00:03:05,016
to this song sometimes when I


100
00:03:05,016 --> 00:03:05,486
work out.


101
00:03:05,486 --> 00:03:05,956
I love it.


102
00:03:06,406 --> 00:03:07,596
And this is a great experience.


103
00:03:07,596 --> 00:03:08,896
You just swipe over, and you can


104
00:03:08,896 --> 00:03:11,076
allow your user to control the


105
00:03:11,076 --> 00:03:11,546
playback.


106
00:03:12,236 --> 00:03:13,246
And so if you're building a


107
00:03:13,246 --> 00:03:15,066
workout app, and you can do


108
00:03:15,066 --> 00:03:16,736
this, build the same sort of


109
00:03:16,736 --> 00:03:18,006
experience, just embedding the


110
00:03:18,006 --> 00:03:19,856
Now Playing view directly within


111
00:03:19,856 --> 00:03:20,656
your application.


112
00:03:22,036 --> 00:03:22,826
Let's talk about the


113
00:03:22,826 --> 00:03:24,306
characteristics of that Now


114
00:03:24,356 --> 00:03:24,846
Playing view.


115
00:03:24,846 --> 00:03:26,796
And the first thing I want to


116
00:03:26,796 --> 00:03:28,346
note is that the Digital Crown


117
00:03:28,346 --> 00:03:29,426
controls the volume.


118
00:03:30,006 --> 00:03:31,396
And because of that, you're


119
00:03:31,396 --> 00:03:32,536
going to want to place this view


120
00:03:32,536 --> 00:03:34,026
in a non-scrolling controller.


121
00:03:34,526 --> 00:03:36,326
So for instance, it's, in my app


122
00:03:36,326 --> 00:03:38,686
here, I've actually just pushed


123
00:03:38,686 --> 00:03:40,126
directly to a controller that


124
00:03:40,126 --> 00:03:41,886
has the Now Playing view in it.


125
00:03:41,886 --> 00:03:43,746
Or you could reload directly to


126
00:03:43,746 --> 00:03:45,726
a page that has this controller


127
00:03:45,726 --> 00:03:47,486
or place it in a page interface


128
00:03:47,806 --> 00:03:48,966
similar to the workout app.


129
00:03:49,436 --> 00:03:52,366
And this view is going to


130
00:03:52,366 --> 00:03:54,006
automatically switch the sources


131
00:03:54,006 --> 00:03:54,646
on behalf.


132
00:03:54,736 --> 00:03:56,606
So no matter if it's the iPhone


133
00:03:56,606 --> 00:03:58,256
or the watch that's providing


134
00:03:58,256 --> 00:03:59,766
the source of audio playback,


135
00:04:00,236 --> 00:04:01,356
this view's going to take care


136
00:04:01,356 --> 00:04:01,966
of it for you.


137
00:04:01,966 --> 00:04:03,096
You don't have to worry about


138
00:04:03,696 --> 00:04:03,846
that.


139
00:04:04,916 --> 00:04:06,466
And lastly, the Now Playing


140
00:04:06,466 --> 00:04:07,696
view, it's going to grab your


141
00:04:07,696 --> 00:04:09,426
application's tint color so it


142
00:04:09,426 --> 00:04:10,956
fits within the look and feel of


143
00:04:10,956 --> 00:04:11,846
your application.


144
00:04:13,076 --> 00:04:15,616
Now, to use this, let's see how


145
00:04:15,616 --> 00:04:17,336
it looks in Interface Builder.


146
00:04:17,726 --> 00:04:19,446
Here we are in Xcode, and I've


147
00:04:19,446 --> 00:04:20,916
selected my Object Library, and


148
00:04:21,016 --> 00:04:22,696
then I can just drag and drop my


149
00:04:22,696 --> 00:04:24,206
Now Playing view into a


150
00:04:24,206 --> 00:04:24,866
controller.


151
00:04:25,176 --> 00:04:26,496
Once my user navigates to that


152
00:04:26,496 --> 00:04:28,106
view, everything will be done


153
00:04:28,106 --> 00:04:28,496
for you.


154
00:04:28,496 --> 00:04:29,646
The system will take care of it


155
00:04:29,646 --> 00:04:29,816
all.


156
00:04:30,196 --> 00:04:31,726
And it really is just that


157
00:04:31,726 --> 00:04:32,096
simple.


158
00:04:33,536 --> 00:04:35,046
So that's our Now Playing view.


159
00:04:35,746 --> 00:04:36,966
Now, let's talk about our volume


160
00:04:36,966 --> 00:04:37,386
control.


161
00:04:38,176 --> 00:04:39,606
So the volume control can be set


162
00:04:39,606 --> 00:04:41,616
up to either control the


163
00:04:41,616 --> 00:04:43,136
iPhone's volume or the local


164
00:04:43,136 --> 00:04:43,936
watch's volume.


165
00:04:44,616 --> 00:04:46,216
And just like our Now Playing


166
00:04:46,216 --> 00:04:47,606
view, we're going to grab your


167
00:04:47,606 --> 00:04:48,946
application's tint color and


168
00:04:48,946 --> 00:04:51,026
apply it appropriately to this


169
00:04:51,056 --> 00:04:51,896
particular control.


170
00:04:54,636 --> 00:04:56,656
And in the case of when the user


171
00:04:56,656 --> 00:04:58,426
is actually scrolling with the


172
00:04:58,426 --> 00:05:00,126
Digital Crown, then, in that


173
00:05:00,126 --> 00:05:01,646
case, the volume control will be


174
00:05:01,956 --> 00:05:04,026
tinted to the system green color


175
00:05:04,026 --> 00:05:05,746
to match the rest of the system.


176
00:05:06,276 --> 00:05:09,796
So for the volume control, to


177
00:05:09,796 --> 00:05:12,376
actually decide when or not to


178
00:05:12,626 --> 00:05:14,596
control the local or iPhone's


179
00:05:14,596 --> 00:05:17,036
volume, there, in the Attributes


180
00:05:17,036 --> 00:05:18,506
Inspector is a check box for


181
00:05:18,506 --> 00:05:19,746
Controls Local Volume.


182
00:05:20,486 --> 00:05:21,696
So if you leave it unchecked,


183
00:05:21,926 --> 00:05:22,866
then the volume control will


184
00:05:22,866 --> 00:05:24,316
control the iPhone's content.


185
00:05:25,086 --> 00:05:27,056
And if you check it off, then


186
00:05:27,166 --> 00:05:28,676
the volume control will control


187
00:05:28,676 --> 00:05:29,676
the watch's content.


188
00:05:30,216 --> 00:05:32,656
And so if your application might


189
00:05:32,656 --> 00:05:34,366
have multiple scenarios where it


190
00:05:34,366 --> 00:05:35,506
could either remote control some


191
00:05:35,506 --> 00:05:37,466
content or play some content


192
00:05:37,466 --> 00:05:39,236
locally, then, in that case, you


193
00:05:39,236 --> 00:05:40,446
might have different controls


194
00:05:40,446 --> 00:05:41,616
with different volume controls


195
00:05:41,616 --> 00:05:43,136
within them, and you make those


196
00:05:43,136 --> 00:05:44,436
decisions at design time.


197
00:05:45,516 --> 00:05:47,176
All right, so those are really


198
00:05:47,176 --> 00:05:49,276
our system controls, so now


199
00:05:49,276 --> 00:05:50,466
let's talk about, how do we


200
00:05:50,466 --> 00:05:51,996
actually get content over to the


201
00:05:51,996 --> 00:05:53,266
device itself?


202
00:05:55,096 --> 00:05:57,606
So I've been building a museum


203
00:05:57,606 --> 00:05:59,306
guided tour type application.


204
00:05:59,466 --> 00:06:01,166
I want to allow my user to just


205
00:06:01,456 --> 00:06:03,336
tap in, listen to a guided tour


206
00:06:03,336 --> 00:06:04,836
while they're in the museum, and


207
00:06:04,836 --> 00:06:06,116
it's a great experience on the


208
00:06:06,116 --> 00:06:08,606
watch because I can just put my


209
00:06:08,606 --> 00:06:09,496
phone away.


210
00:06:09,496 --> 00:06:10,716
I can just have the entire


211
00:06:10,716 --> 00:06:12,666
experience on my wrist and enjoy


212
00:06:12,666 --> 00:06:14,656
the beautiful art around me.


213
00:06:15,046 --> 00:06:17,936
And let's say I had a, like a


214
00:06:17,936 --> 00:06:19,706
buffer that allowed my user to


215
00:06:19,816 --> 00:06:21,646
download the content on, when


216
00:06:21,646 --> 00:06:22,816
they're on their way to the


217
00:06:22,816 --> 00:06:23,446
museum.


218
00:06:24,236 --> 00:06:25,616
In that case, I would want to


219
00:06:25,616 --> 00:06:27,926
use URLSession and grab that


220
00:06:27,926 --> 00:06:29,726
directly from my server, all my


221
00:06:29,726 --> 00:06:31,196
content, and download it to the


222
00:06:31,196 --> 00:06:31,906
watch itself.


223
00:06:33,326 --> 00:06:35,546
So let's jump into some code and


224
00:06:35,546 --> 00:06:38,026
see how we could do that.


225
00:06:38,226 --> 00:06:39,256
So here we are.


226
00:06:39,256 --> 00:06:41,626
I have an IBAction which is tied


227
00:06:41,626 --> 00:06:43,206
to my WK Interface button.


228
00:06:43,446 --> 00:06:44,246
And the first thing you'll


229
00:06:44,246 --> 00:06:46,776
notice is I set my frontmost


230
00:06:46,816 --> 00:06:48,456
timeout extended property to be


231
00:06:48,456 --> 00:06:48,776
true.


232
00:06:50,006 --> 00:06:51,096
And we're going to talk a little


233
00:06:51,096 --> 00:06:52,546
bit more about frontmost later,


234
00:06:52,686 --> 00:06:53,586
but the thing I wanted to


235
00:06:53,586 --> 00:06:55,416
mention is that the user has


236
00:06:55,416 --> 00:06:57,526
made a user interaction, so it's


237
00:06:57,616 --> 00:06:59,496
fair to say that the user, next


238
00:06:59,496 --> 00:07:00,526
time they raise their wrist,


239
00:07:00,526 --> 00:07:01,356
would want to see our


240
00:07:01,356 --> 00:07:02,076
application.


241
00:07:02,586 --> 00:07:04,476
And because we're extending the


242
00:07:04,476 --> 00:07:05,946
frontmost timeout, then we're


243
00:07:05,946 --> 00:07:07,266
getting some additional priority


244
00:07:07,266 --> 00:07:08,286
by the system for our


245
00:07:08,356 --> 00:07:09,256
URLSessions.


246
00:07:09,636 --> 00:07:10,766
And again, I'll talk a little


247
00:07:10,766 --> 00:07:11,776
bit more about that later.


248
00:07:12,186 --> 00:07:15,656
And the user can, of course, put


249
00:07:15,656 --> 00:07:16,926
their wrist down at any point,


250
00:07:17,176 --> 00:07:18,476
so I want to make sure to use a


251
00:07:18,476 --> 00:07:19,416
backgroundSession.


252
00:07:19,826 --> 00:07:21,276
So that way, when my application


253
00:07:21,276 --> 00:07:22,516
goes into the background, my


254
00:07:22,516 --> 00:07:23,886
download is still occurring.


255
00:07:24,566 --> 00:07:26,186
And then, I can just download


256
00:07:26,186 --> 00:07:27,706
that task and appropriately


257
00:07:27,906 --> 00:07:28,816
resume it.


258
00:07:29,686 --> 00:07:30,926
And when you're building an


259
00:07:30,926 --> 00:07:32,886
experience like this, you want


260
00:07:32,886 --> 00:07:34,556
to indicate download progress


261
00:07:34,626 --> 00:07:35,796
and, of course, handle any


262
00:07:35,796 --> 00:07:36,216
errors.


263
00:07:36,586 --> 00:07:40,406
So let's look at how to do that.


264
00:07:40,406 --> 00:07:41,196
So here we are.


265
00:07:41,196 --> 00:07:41,926
I have my class, my


266
00:07:41,926 --> 00:07:43,796
DownloadManager, which is my


267
00:07:44,026 --> 00:07:45,536
SessionTaskDelegate and my


268
00:07:45,566 --> 00:07:47,176
URLSessionDownload Delegate.


269
00:07:47,666 --> 00:07:49,886
And in the first function, I can


270
00:07:49,886 --> 00:07:51,296
actually grab the total bytes


271
00:07:51,296 --> 00:07:52,646
written and divide it by the


272
00:07:52,646 --> 00:07:54,076
total bytes expected to write.


273
00:07:54,356 --> 00:07:55,366
So that way, I can get the


274
00:07:55,366 --> 00:07:56,676
progress of my particular


275
00:07:56,676 --> 00:07:58,606
download whenever URLSession


276
00:07:59,006 --> 00:08:00,796
calls me and gives me that


277
00:08:00,796 --> 00:08:01,436
information.


278
00:08:01,926 --> 00:08:04,086
And when I do this, I can just


279
00:08:04,086 --> 00:08:06,646
update progress for my user in


280
00:08:06,646 --> 00:08:07,026
my UI.


281
00:08:07,726 --> 00:08:10,266
And then, when the download


282
00:08:10,266 --> 00:08:12,316
completes, I can, of course,


283
00:08:12,316 --> 00:08:13,686
manage the file, and I might


284
00:08:13,686 --> 00:08:15,426
want to post a notification


285
00:08:15,426 --> 00:08:17,156
alerting my user that there's a


286
00:08:17,156 --> 00:08:18,246
playback opportunity.


287
00:08:18,766 --> 00:08:21,976
And, of course, I'm also going


288
00:08:21,976 --> 00:08:22,936
to be called into a


289
00:08:22,936 --> 00:08:24,946
didCompleteWithError, so I just


290
00:08:24,946 --> 00:08:26,266
want to clean up appropriately


291
00:08:26,496 --> 00:08:28,066
and handle any errors at that


292
00:08:28,066 --> 00:08:28,916
point, if there are any.


293
00:08:29,946 --> 00:08:31,466
And that's wonderful,


294
00:08:31,466 --> 00:08:32,976
URLSession, for when we can


295
00:08:32,976 --> 00:08:34,265
download directly to the watch,


296
00:08:34,816 --> 00:08:36,416
but sometimes the content might


297
00:08:36,416 --> 00:08:38,056
already exist on our iPhone.


298
00:08:39,106 --> 00:08:40,576
In that case, we can just use


299
00:08:40,576 --> 00:08:42,135
watch connectivity and transfer


300
00:08:42,135 --> 00:08:43,946
the file directly over to our


301
00:08:43,946 --> 00:08:44,416
watch.


302
00:08:48,536 --> 00:08:50,336
And to do so, we'll just use the


303
00:08:50,336 --> 00:08:51,426
transfer file API.


304
00:08:51,426 --> 00:08:53,946
And new in watchOS 5, you can


305
00:08:53,946 --> 00:08:55,756
get the progress of that


306
00:08:55,756 --> 00:08:56,256
transfer.


307
00:08:57,376 --> 00:08:58,306
So let's take a look.


308
00:08:58,956 --> 00:09:00,546
Here we are in code, and I see


309
00:09:00,546 --> 00:09:02,236
my WCSession FileTransfer.


310
00:09:02,596 --> 00:09:03,996
And new, there's a progress


311
00:09:03,996 --> 00:09:05,526
property that's available in


312
00:09:05,526 --> 00:09:08,166
watchOS 5 and iOS 12.


313
00:09:12,996 --> 00:09:14,666
And then, I can just get my


314
00:09:14,666 --> 00:09:16,186
fileTransfer, query for the


315
00:09:16,186 --> 00:09:18,746
progress, and update my view on


316
00:09:18,746 --> 00:09:18,966
iOS.


317
00:09:20,566 --> 00:09:21,476
And if you want to know some


318
00:09:21,476 --> 00:09:22,766
more about watch connectivity.


319
00:09:23,156 --> 00:09:24,346
There's some great sample code


320
00:09:24,346 --> 00:09:25,596
that's available online.


321
00:09:25,936 --> 00:09:27,056
Highly recommend you check it


322
00:09:27,056 --> 00:09:28,196
out, the simple watch


323
00:09:28,196 --> 00:09:29,426
connectivity sample code.


324
00:09:29,906 --> 00:09:33,196
And you might be wondering --


325
00:09:33,776 --> 00:09:34,936
there's URLSession, there's


326
00:09:34,936 --> 00:09:36,896
watch connectivity -- which one


327
00:09:37,106 --> 00:09:38,176
do we use, exactly?


328
00:09:38,176 --> 00:09:39,486
And when does it make sense?


329
00:09:41,016 --> 00:09:43,126
Well, for URLSession, we want to


330
00:09:43,126 --> 00:09:44,176
use that when it's user


331
00:09:44,176 --> 00:09:45,866
initiated on the watch itself.


332
00:09:46,646 --> 00:09:47,566
And then, when we do that, we


333
00:09:47,566 --> 00:09:48,836
want a query the waits for


334
00:09:48,836 --> 00:09:50,676
connectivity property to know


335
00:09:50,676 --> 00:09:51,586
that we have a network


336
00:09:51,586 --> 00:09:54,136
connection at that point.


337
00:09:54,306 --> 00:09:55,476
And I just wanted to mention


338
00:09:55,476 --> 00:09:57,006
that if the iPhone is nearby,


339
00:09:57,006 --> 00:09:58,306
then requests are proxied


340
00:09:58,606 --> 00:09:59,876
through the iPhone when it's in


341
00:09:59,876 --> 00:10:00,336
range.


342
00:10:01,566 --> 00:10:02,906
And if you want to know some of


343
00:10:03,176 --> 00:10:05,216
the nuances of URLSession,


344
00:10:05,486 --> 00:10:06,516
there's a great talk from last


345
00:10:06,516 --> 00:10:07,826
year that's available online,


346
00:10:07,826 --> 00:10:09,426
Advances in Networking, Part 2.


347
00:10:09,726 --> 00:10:10,996
I definitely recommend checking


348
00:10:10,996 --> 00:10:11,296
it out.


349
00:10:11,816 --> 00:10:14,646
And then, on the flip side,


350
00:10:14,646 --> 00:10:16,706
there's watch connectivity, and


351
00:10:16,706 --> 00:10:17,856
that's really important when


352
00:10:17,856 --> 00:10:19,336
your user flow might be when


353
00:10:19,336 --> 00:10:20,696
it's initiated on the iPhone


354
00:10:20,696 --> 00:10:22,806
itself or in the case where


355
00:10:22,806 --> 00:10:23,726
you've already downloaded some


356
00:10:23,726 --> 00:10:25,186
content and there's no need to


357
00:10:25,186 --> 00:10:26,326
request it from your server


358
00:10:26,326 --> 00:10:26,596
again.


359
00:10:28,716 --> 00:10:30,446
And for both and especially for


360
00:10:30,446 --> 00:10:31,646
watch connectivity, you're going


361
00:10:31,646 --> 00:10:33,096
to want to set expectations for


362
00:10:33,096 --> 00:10:33,606
your user.


363
00:10:34,116 --> 00:10:35,476
Make sure to instruct them of


364
00:10:35,476 --> 00:10:36,526
when the download, or the


365
00:10:36,526 --> 00:10:37,926
transfer's most likely to


366
00:10:37,926 --> 00:10:38,376
complete.


367
00:10:38,376 --> 00:10:40,596
And that's going to be when the


368
00:10:40,596 --> 00:10:41,836
watch is on the magnetic


369
00:10:41,836 --> 00:10:42,306
charger.


370
00:10:42,846 --> 00:10:44,406
And for example, we do this


371
00:10:44,406 --> 00:10:45,006
ourselves.


372
00:10:45,336 --> 00:10:47,156
In the Apple Watch app in the


373
00:10:47,156 --> 00:10:49,676
Music pane, at the top, we


374
00:10:49,676 --> 00:10:51,926
actually show our user how many


375
00:10:51,926 --> 00:10:53,516
songs have actually been


376
00:10:53,516 --> 00:10:54,846
transferred over to the watch


377
00:10:54,846 --> 00:10:56,956
itself, and we even instruct our


378
00:10:56,956 --> 00:10:59,166
user, hey, music's going to sync


379
00:10:59,166 --> 00:11:00,216
when the Apple Watch is on its


380
00:11:00,216 --> 00:11:03,156
charger, so keep that in mind.


381
00:11:03,326 --> 00:11:04,796
All right, so we talked about


382
00:11:04,796 --> 00:11:07,186
getting content, and now that we


383
00:11:07,186 --> 00:11:08,216
have it, let's talk about


384
00:11:08,216 --> 00:11:09,466
actually playing something back.


385
00:11:10,466 --> 00:11:12,326
And on watchOS, we have a bunch


386
00:11:12,326 --> 00:11:13,736
of different tools we can use.


387
00:11:14,186 --> 00:11:16,226
And some of those audio tools


388
00:11:16,226 --> 00:11:17,546
are in WatchKit itself.


389
00:11:18,036 --> 00:11:20,646
So there's a presentMedia


390
00:11:20,646 --> 00:11:22,216
PlayerController with options,


391
00:11:22,216 --> 00:11:23,966
completion that you can use.


392
00:11:24,426 --> 00:11:26,446
And there's also WKAudioFile


393
00:11:26,446 --> 00:11:27,086
QueuePlayer.


394
00:11:27,306 --> 00:11:29,076
And so you can give it a list of


395
00:11:29,076 --> 00:11:30,416
items, and then the queue player


396
00:11:30,416 --> 00:11:31,506
will appropriately play back


397
00:11:31,536 --> 00:11:32,126
that content.


398
00:11:32,636 --> 00:11:35,536
So the presentMedia


399
00:11:35,536 --> 00:11:37,256
PlayerController option will


400
00:11:37,326 --> 00:11:38,716
present the system UI.


401
00:11:38,716 --> 00:11:40,006
So the controls are taken care


402
00:11:40,006 --> 00:11:40,656
of for you.


403
00:11:41,056 --> 00:11:42,006
There's not really much you have


404
00:11:42,006 --> 00:11:42,476
to do.


405
00:11:42,826 --> 00:11:44,456
And this is perfect for when


406
00:11:44,456 --> 00:11:46,306
it's short-form content and you


407
00:11:46,306 --> 00:11:47,176
don't really want to have to


408
00:11:47,176 --> 00:11:48,686
think too much about it.


409
00:11:50,096 --> 00:11:52,536
And WKAudioFIleQueuePlayer is


410
00:11:52,536 --> 00:11:53,416
great for when you have more


411
00:11:53,416 --> 00:11:54,736
long-form content that you want


412
00:11:54,736 --> 00:11:55,706
to play in the background.


413
00:11:56,126 --> 00:11:57,346
And this is more of a conveyer


414
00:11:57,346 --> 00:12:00,116
belt type approach where you


415
00:12:00,116 --> 00:12:01,726
have some items, you just want


416
00:12:01,726 --> 00:12:02,896
to hand it over to the system,


417
00:12:02,896 --> 00:12:03,916
and the system will play it on


418
00:12:03,916 --> 00:12:04,426
your behalf.


419
00:12:05,006 --> 00:12:06,936
And that's exactly what


420
00:12:06,936 --> 00:12:08,736
WKAudioFileQueuePlayer is for.


421
00:12:09,086 --> 00:12:12,006
And there's also AVFoundation at


422
00:12:12,006 --> 00:12:12,696
our disposal.


423
00:12:16,386 --> 00:12:19,136
So there's AVAudioPlayer and


424
00:12:19,136 --> 00:12:19,866
AVAudioEngine.


425
00:12:20,396 --> 00:12:22,966
And prior to watchOS 5, it was


426
00:12:22,966 --> 00:12:24,396
tied to the workout background


427
00:12:24,396 --> 00:12:26,486
mode, or when your application


428
00:12:26,486 --> 00:12:28,196
was foreground and screen on.


429
00:12:29,406 --> 00:12:31,736
For example, Nike Run Club app


430
00:12:31,796 --> 00:12:33,086
actually did this exact thing,


431
00:12:33,086 --> 00:12:34,346
where you're in the middle of a


432
00:12:34,346 --> 00:12:36,346
run, you want some mindfulness,


433
00:12:36,686 --> 00:12:39,026
you can play some guided


434
00:12:39,026 --> 00:12:40,586
meditation with Headspace.


435
00:12:41,956 --> 00:12:44,546
And prior to watchOS 5,


436
00:12:44,546 --> 00:12:46,406
background playback was, with


437
00:12:46,406 --> 00:12:47,756
AVFoundation, was really only


438
00:12:47,756 --> 00:12:48,936
possible for these types of


439
00:12:48,936 --> 00:12:49,666
workout apps.


440
00:12:50,166 --> 00:12:52,666
But new in watchOS 5, there's a


441
00:12:52,666 --> 00:12:54,296
brand-new audio playback


442
00:12:54,456 --> 00:12:55,746
background mode, which I'm


443
00:12:55,746 --> 00:12:56,716
really thrilled for.


444
00:12:57,846 --> 00:13:00,296
So let's talk about what we have


445
00:13:00,296 --> 00:13:01,306
now at our disposal.


446
00:13:02,096 --> 00:13:04,076
Kind of broadened our tool kit.


447
00:13:07,376 --> 00:13:09,806
And so we have AVFoundation, and


448
00:13:09,806 --> 00:13:11,026
it doesn't have to be tied to


449
00:13:11,026 --> 00:13:12,156
any other background mode, and


450
00:13:12,156 --> 00:13:13,996
we can now use just AVFoundation


451
00:13:13,996 --> 00:13:15,266
directly in the background.


452
00:13:16,616 --> 00:13:18,626
We also are exposing the ability


453
00:13:18,626 --> 00:13:21,586
to allow you to, allow your user


454
00:13:21,586 --> 00:13:22,776
to pick a different route.


455
00:13:22,776 --> 00:13:24,256
So maybe some different types of


456
00:13:24,256 --> 00:13:25,196
Bluetooth headphones.


457
00:13:26,176 --> 00:13:28,146
And new in watchOS 5, we're also


458
00:13:28,146 --> 00:13:29,376
exposing the MediaPlayer.


459
00:13:29,376 --> 00:13:30,636
framework, so you can provide


460
00:13:30,636 --> 00:13:32,186
some Now Playing information and


461
00:13:32,186 --> 00:13:34,686
also handle any media remote


462
00:13:35,736 --> 00:13:36,026
commands.


463
00:13:36,026 --> 00:13:37,626
And just like our own Music,


464
00:13:37,626 --> 00:13:39,366
Podcasts, and Radio app, the


465
00:13:39,366 --> 00:13:41,056
long-form content is restricted


466
00:13:41,406 --> 00:13:43,516
to Bluetooth routes, which


467
00:13:43,816 --> 00:13:45,406
really is just a fancy way of


468
00:13:45,406 --> 00:13:46,776
saying you can't play it through


469
00:13:47,236 --> 00:13:49,276
the speaker.


470
00:13:49,446 --> 00:13:50,906
So let's take it step by step


471
00:13:51,306 --> 00:13:52,836
and talk about how we actually


472
00:13:52,836 --> 00:13:54,386
get this background long-form


473
00:13:54,386 --> 00:13:55,206
content to play.


474
00:13:55,756 --> 00:13:58,366
So the first thing, you add


475
00:13:58,366 --> 00:13:59,886
audio to your info.plist


476
00:13:59,886 --> 00:14:00,726
background modes.


477
00:14:01,166 --> 00:14:04,366
And then, you just appropriately


478
00:14:04,366 --> 00:14:05,656
set up your session, and you're


479
00:14:05,656 --> 00:14:06,806
going to want to tell the system


480
00:14:06,806 --> 00:14:07,696
that you want to play this


481
00:14:07,696 --> 00:14:09,136
long-form content in the


482
00:14:09,136 --> 00:14:09,646
background.


483
00:14:09,956 --> 00:14:13,456
You want to allow your user to


484
00:14:13,696 --> 00:14:14,736
select a different route.


485
00:14:14,986 --> 00:14:16,976
And then, you're just going to


486
00:14:16,976 --> 00:14:18,416
want to call play and


487
00:14:18,666 --> 00:14:19,656
appropriately handle the


488
00:14:19,656 --> 00:14:20,916
playback when the user's in the


489
00:14:20,916 --> 00:14:23,006
middle of that playback session.


490
00:14:23,866 --> 00:14:25,606
So let's break that more, break


491
00:14:25,606 --> 00:14:28,266
that down more a little bit.


492
00:14:29,196 --> 00:14:30,956
And so in Xcode in the Project


493
00:14:30,956 --> 00:14:32,486
Settings, in the Capabilities


494
00:14:32,486 --> 00:14:34,696
tab, you just flip the switch


495
00:14:34,696 --> 00:14:35,876
for Background Mode, you check


496
00:14:35,876 --> 00:14:37,396
off Audio, and you're good to go


497
00:14:37,396 --> 00:14:38,206
to the next step.


498
00:14:38,576 --> 00:14:42,056
And so to set up your session,


499
00:14:42,236 --> 00:14:43,186
you're going to want to set your


500
00:14:43,186 --> 00:14:45,126
routeSharingPolicy to longform


501
00:14:45,346 --> 00:14:46,626
on your AVAudioSession.


502
00:14:46,726 --> 00:14:49,026
And then, you call the new


503
00:14:49,026 --> 00:14:50,886
activate withOptions completion


504
00:14:51,646 --> 00:14:53,726
method on AVAudioSession.


505
00:14:53,936 --> 00:14:55,276
And then, once it completes,


506
00:14:55,276 --> 00:14:56,216
you're going to call play.


507
00:14:57,276 --> 00:14:58,946
And in between when you first


508
00:14:58,946 --> 00:15:01,106
call the activate function and


509
00:15:01,266 --> 00:15:02,926
then when the completion comes


510
00:15:02,966 --> 00:15:04,676
back, what we call the route


511
00:15:04,676 --> 00:15:06,176
picker is going to get displayed


512
00:15:06,176 --> 00:15:06,956
on your behalf.


513
00:15:07,336 --> 00:15:09,636
And so this is what the route


514
00:15:09,636 --> 00:15:10,516
picker looks like.


515
00:15:10,516 --> 00:15:11,396
And so this is going to be


516
00:15:11,396 --> 00:15:12,616
showing up within your


517
00:15:12,616 --> 00:15:14,126
application, which is going to


518
00:15:14,126 --> 00:15:15,966
allow your user to pick


519
00:15:15,966 --> 00:15:17,266
whichever Bluetooth headphones


520
00:15:17,266 --> 00:15:18,746
route they want to have and


521
00:15:18,746 --> 00:15:19,656
control their playback.


522
00:15:21,376 --> 00:15:22,636
So let's talk a little bit more


523
00:15:22,636 --> 00:15:23,486
about that route picker.


524
00:15:23,986 --> 00:15:25,446
Again, all it is, you just call


525
00:15:25,446 --> 00:15:26,796
your asynchronous activate


526
00:15:27,166 --> 00:15:29,496
function, which is going to call


527
00:15:29,496 --> 00:15:32,036
and show your route picker, and


528
00:15:32,276 --> 00:15:33,456
then it's going to come back


529
00:15:33,796 --> 00:15:34,856
into your completion, and you


530
00:15:34,856 --> 00:15:36,196
handle that, and you just call


531
00:15:36,196 --> 00:15:36,396
play.


532
00:15:36,396 --> 00:15:38,026
And you're going to want to do


533
00:15:38,026 --> 00:15:39,146
this every time you want


534
00:15:39,146 --> 00:15:40,016
playback to occur.


535
00:15:40,236 --> 00:15:41,566
So that way, you can ensure that


536
00:15:41,566 --> 00:15:43,846
you have appropriate route to


537
00:15:43,846 --> 00:15:45,046
cause some playback to occur.


538
00:15:46,496 --> 00:15:47,956
All right, so let's jump into


539
00:15:47,956 --> 00:15:49,246
code and set up our session.


540
00:15:49,886 --> 00:15:50,836
And so we have our


541
00:15:50,836 --> 00:15:52,576
AVAudioSession, and then we're


542
00:15:52,576 --> 00:15:53,676
going to set our category to


543
00:15:53,676 --> 00:15:54,256
playback.


544
00:15:54,816 --> 00:15:55,506
And then, we're going to set our


545
00:15:55,506 --> 00:15:56,606
mode to default.


546
00:15:57,256 --> 00:15:58,706
And then, most importantly,


547
00:15:58,706 --> 00:15:59,596
we're going to set our route


548
00:15:59,596 --> 00:16:01,176
sharing policy to longform.


549
00:16:02,076 --> 00:16:03,656
And then, you want to activate


550
00:16:03,656 --> 00:16:05,406
your session, which is going to


551
00:16:05,406 --> 00:16:07,316
display the route picker, and


552
00:16:07,316 --> 00:16:08,346
then you're going to call play


553
00:16:08,346 --> 00:16:08,946
appropriately.


554
00:16:10,006 --> 00:16:11,816
And now, for that route picker,


555
00:16:11,816 --> 00:16:13,666
I wanted to call out that we


556
00:16:13,666 --> 00:16:15,276
really think of routes in two


557
00:16:15,276 --> 00:16:15,906
different ways.


558
00:16:16,766 --> 00:16:18,536
And the first way is our Apple


559
00:16:18,536 --> 00:16:19,906
wireless chip-based routes,


560
00:16:19,906 --> 00:16:21,106
which are commonly referred to


561
00:16:21,106 --> 00:16:21,866
as our W1 routes.


562
00:16:21,866 --> 00:16:24,256
So these are our AirPods or


563
00:16:24,256 --> 00:16:25,506
Beats Studio Wireless.


564
00:16:26,476 --> 00:16:27,386
And then, we just have our


565
00:16:27,386 --> 00:16:28,526
normal Bluetooth headphone


566
00:16:28,526 --> 00:16:28,946
routes.


567
00:16:29,646 --> 00:16:30,986
And it's important to make that


568
00:16:30,986 --> 00:16:32,836
distinction when we talk about


569
00:16:33,196 --> 00:16:34,496
the route picker itself.


570
00:16:37,056 --> 00:16:39,206
And so if the user has an active


571
00:16:39,206 --> 00:16:40,726
connected route, then the route


572
00:16:40,726 --> 00:16:41,846
picker's going to automatically


573
00:16:41,846 --> 00:16:42,916
select that route on your


574
00:16:42,916 --> 00:16:43,186
behalf.


575
00:16:43,756 --> 00:16:44,666
What's great is that the route


576
00:16:44,666 --> 00:16:46,146
picker might not even display to


577
00:16:46,146 --> 00:16:46,796
your user.


578
00:16:47,036 --> 00:16:47,926
You're just going to get called


579
00:16:47,926 --> 00:16:49,146
back in your completion


580
00:16:49,456 --> 00:16:50,066
immediately.


581
00:16:50,506 --> 00:16:53,296
And in the case where the user


582
00:16:53,296 --> 00:16:55,276
has an active W1 route but it's


583
00:16:55,306 --> 00:16:57,416
being used by the iPhone, then


584
00:16:57,416 --> 00:16:58,806
the system's going to grab that


585
00:16:58,806 --> 00:17:00,346
route from iPhone and bring it


586
00:17:00,346 --> 00:17:01,586
directly to your watch.


587
00:17:02,616 --> 00:17:03,806
And there's some cases where


588
00:17:03,806 --> 00:17:04,646
that won't happen.


589
00:17:04,646 --> 00:17:06,126
It's really just when your


590
00:17:06,126 --> 00:17:07,435
iPhone has more priority.


591
00:17:07,866 --> 00:17:09,205
So for example, say I'm in the


592
00:17:09,205 --> 00:17:10,886
middle of a phone call on my


593
00:17:10,886 --> 00:17:11,465
phone.


594
00:17:11,685 --> 00:17:12,636
Then, we're not going to take


595
00:17:12,636 --> 00:17:13,766
that route and put it on your


596
00:17:13,766 --> 00:17:15,286
watch because phone call's


597
00:17:15,776 --> 00:17:16,945
probably pretty important.


598
00:17:17,425 --> 00:17:20,195
And if there are no active


599
00:17:20,195 --> 00:17:21,356
routes, then the route picker


600
00:17:21,356 --> 00:17:23,685
will just appear on your behalf.


601
00:17:24,636 --> 00:17:26,425
All right, so that's our route


602
00:17:26,425 --> 00:17:27,576
picker, and now let's talk


603
00:17:27,576 --> 00:17:29,296
about, how do we actually get


604
00:17:29,296 --> 00:17:30,316
some playback to occur?


605
00:17:31,306 --> 00:17:32,686
Well, you just use the same


606
00:17:32,686 --> 00:17:34,836
AVAudioPlayer and AVAudioEngine.


607
00:17:34,996 --> 00:17:35,946
And there's a variety of


608
00:17:35,946 --> 00:17:36,946
different formats that are


609
00:17:36,946 --> 00:17:38,236
supported on watchOS.


610
00:17:38,946 --> 00:17:40,116
And what's great about this is


611
00:17:40,226 --> 00:17:42,586
if you have iOS code that uses


612
00:17:42,586 --> 00:17:44,006
these classes, then you could


613
00:17:44,006 --> 00:17:45,256
have a shared framework between


614
00:17:45,256 --> 00:17:46,936
your iOS and watchOS playback


615
00:17:47,246 --> 00:17:48,026
operations.


616
00:17:49,096 --> 00:17:51,206
And in the case of


617
00:17:51,206 --> 00:17:53,736
AVAudioEngine, you can actually


618
00:17:53,736 --> 00:17:55,506
play some DRM content in


619
00:17:55,506 --> 00:17:57,186
conjunction with AVAudioPlayer


620
00:17:57,186 --> 00:17:57,446
node.


621
00:17:57,996 --> 00:17:59,666
And so you can now play your own


622
00:17:59,666 --> 00:18:01,086
DRM content, decrypt it


623
00:18:01,086 --> 00:18:02,926
yourself, and play it back for


624
00:18:02,926 --> 00:18:03,426
your user.


625
00:18:03,936 --> 00:18:06,476
An especially important thing to


626
00:18:06,476 --> 00:18:09,676
note for watchOS is the power of


627
00:18:09,676 --> 00:18:11,866
the device itself, so only play


628
00:18:11,866 --> 00:18:14,056
audio when absolutely necessary,


629
00:18:14,056 --> 00:18:15,476
when the user actually wants the


630
00:18:15,476 --> 00:18:16,326
audio to occur.


631
00:18:17,316 --> 00:18:19,386
And for AVAudioEngine, the


632
00:18:19,386 --> 00:18:21,886
autoShutdownEnabled property is


633
00:18:21,966 --> 00:18:24,096
enabled by default, so if there


634
00:18:24,096 --> 00:18:25,946
are no active nodes on your


635
00:18:25,946 --> 00:18:27,426
AVAudioEngine, then we're going


636
00:18:27,426 --> 00:18:29,026
to automatically power down your


637
00:18:29,026 --> 00:18:31,026
AVAudioEngine when necessary.


638
00:18:31,516 --> 00:18:34,796
And so that's our playback.


639
00:18:35,366 --> 00:18:37,366
And then, we, let's talk about


640
00:18:37,366 --> 00:18:38,006
our MediaPlayer.


641
00:18:38,006 --> 00:18:38,436
framework.


642
00:18:38,826 --> 00:18:40,076
So we want to, of course,


643
00:18:40,076 --> 00:18:41,176
provide our Now Playing


644
00:18:41,176 --> 00:18:44,136
information to the system.


645
00:18:44,586 --> 00:18:47,576
And then, the Now Playing UI


646
00:18:47,576 --> 00:18:48,826
will update, and that's the


647
00:18:48,826 --> 00:18:50,766
system-wide notion of what's


648
00:18:50,796 --> 00:18:51,886
playing, and it's going to be


649
00:18:51,886 --> 00:18:53,546
updated based on the information


650
00:18:53,546 --> 00:18:54,136
you provide.


651
00:18:54,556 --> 00:18:55,506
So this is going to show up in


652
00:18:55,506 --> 00:18:57,156
the Now Playing app, and even


653
00:18:57,156 --> 00:18:59,386
inside apps such as Workout, or


654
00:18:59,386 --> 00:19:00,636
in the cases of any third-party


655
00:19:00,636 --> 00:19:02,586
apps that embed that Now Playing


656
00:19:02,586 --> 00:19:02,906
view.


657
00:19:03,376 --> 00:19:04,796
This will also show up there.


658
00:19:04,796 --> 00:19:07,366
And then, with the MediaPlayer.


659
00:19:07,366 --> 00:19:08,326
framework, we just want to


660
00:19:08,326 --> 00:19:10,386
handle the events, any type of


661
00:19:10,386 --> 00:19:11,626
media remote commands -- for


662
00:19:11,626 --> 00:19:13,396
example, a Next Track on


663
00:19:13,396 --> 00:19:14,526
AirPods, for instance.


664
00:19:15,576 --> 00:19:16,846
All right, let's jump into some


665
00:19:16,846 --> 00:19:18,146
code and see how we can provide


666
00:19:18,146 --> 00:19:19,346
that Now Playing information.


667
00:19:23,216 --> 00:19:24,776
So here we are.


668
00:19:24,776 --> 00:19:26,376
We have our MPNowPlaying


669
00:19:26,376 --> 00:19:26,986
InfoCenter.


670
00:19:26,986 --> 00:19:28,176
We just want to grab that.


671
00:19:28,576 --> 00:19:29,386
And then, we set up our


672
00:19:29,386 --> 00:19:30,406
nowPlayingInfo.


673
00:19:30,956 --> 00:19:35,046
And then, we have, we want to


674
00:19:35,046 --> 00:19:36,526
set our artwork, our MPMedia


675
00:19:36,526 --> 00:19:37,566
ItemArtwork.


676
00:19:37,866 --> 00:19:39,126
And it's not currently available


677
00:19:39,126 --> 00:19:40,366
in seed 1, but it's coming in


678
00:19:40,366 --> 00:19:40,876
seed 2.


679
00:19:41,456 --> 00:19:43,526
And in this case, the artwork


680
00:19:43,526 --> 00:19:45,306
that you provide will display on


681
00:19:45,306 --> 00:19:46,436
the Siri watch face.


682
00:19:46,956 --> 00:19:50,006
And then, we just set up, in


683
00:19:50,006 --> 00:19:51,606
this case, our title, album,


684
00:19:51,606 --> 00:19:53,646
artwork, and then we set it to


685
00:19:53,646 --> 00:19:55,436
our nowPlaying InfoCenter.


686
00:19:56,206 --> 00:19:57,726
And then, when we do something


687
00:19:57,726 --> 00:20:01,206
such as this, then our data will


688
00:20:01,206 --> 00:20:02,946
appear in the Now Playing app.


689
00:20:02,946 --> 00:20:04,276
And this is the actual Now


690
00:20:04,276 --> 00:20:04,816
Playing app.


691
00:20:05,086 --> 00:20:07,516
And I provided some, a song that


692
00:20:07,516 --> 00:20:09,476
I was currently listening to in


693
00:20:09,476 --> 00:20:10,296
my application.


694
00:20:10,686 --> 00:20:13,866
And when we do this, then, also,


695
00:20:13,866 --> 00:20:15,196
the Now Playing complication


696
00:20:15,196 --> 00:20:16,306
will also get updated.


697
00:20:16,576 --> 00:20:17,726
So in this case, the bottom


698
00:20:17,726 --> 00:20:18,866
shows the "Lights in the Sky"


699
00:20:18,866 --> 00:20:19,956
song that I was listening to.


700
00:20:20,286 --> 00:20:22,786
And then, for media remote


701
00:20:22,786 --> 00:20:24,246
commands, again, just use the


702
00:20:24,246 --> 00:20:24,836
MediaPlayer.


703
00:20:24,836 --> 00:20:25,256
framework.


704
00:20:25,256 --> 00:20:27,416
And now, in watchOS, you can


705
00:20:27,416 --> 00:20:28,846
handle those commands however


706
00:20:28,846 --> 00:20:29,466
you wish.


707
00:20:31,366 --> 00:20:32,876
So let's look at some code.


708
00:20:32,876 --> 00:20:34,456
So we just grab our


709
00:20:34,566 --> 00:20:35,986
MPRemoteCommandCenter.


710
00:20:36,836 --> 00:20:38,266
And then, instead of doing a


711
00:20:38,266 --> 00:20:40,046
Next Track, let's talk about how


712
00:20:40,046 --> 00:20:42,156
we can actually skip forward for


713
00:20:42,656 --> 00:20:43,546
our user.


714
00:20:43,666 --> 00:20:44,846
So I have this function.


715
00:20:44,966 --> 00:20:46,966
It's a enableSkipForwardCommand


716
00:20:47,396 --> 00:20:48,666
and, just by default, takes in


717
00:20:48,666 --> 00:20:49,866
15 seconds.


718
00:20:50,816 --> 00:20:52,646
And I set my preferred intervals


719
00:20:52,646 --> 00:20:53,836
on my skip forward command.


720
00:20:53,946 --> 00:20:55,966
And then, I just add a target


721
00:20:55,966 --> 00:20:57,836
and selector, and then I just


722
00:20:57,836 --> 00:20:59,636
enable the command within my


723
00:20:59,636 --> 00:21:00,596
remote command center.


724
00:21:01,896 --> 00:21:03,406
If you want to know more about


725
00:21:03,406 --> 00:21:04,616
the media player framework and


726
00:21:04,616 --> 00:21:05,696
especially these media remote


727
00:21:05,696 --> 00:21:07,296
commands, I highly recommend


728
00:21:07,296 --> 00:21:09,236
checking out the MP remote


729
00:21:09,236 --> 00:21:10,866
command sample that's available


730
00:21:10,866 --> 00:21:11,376
online.


731
00:21:11,946 --> 00:21:12,996
And in this case, when I


732
00:21:12,996 --> 00:21:14,536
actually set my preferred


733
00:21:14,536 --> 00:21:17,156
intervals, then the system's Now


734
00:21:17,156 --> 00:21:18,606
Playing app will appropriately


735
00:21:18,606 --> 00:21:19,226
get adjusted.


736
00:21:19,226 --> 00:21:21,056
That Now Playing UI, wherever it


737
00:21:21,056 --> 00:21:22,876
is, will show the minus 15


738
00:21:22,876 --> 00:21:25,196
seconds or plus 15 seconds, and


739
00:21:25,196 --> 00:21:29,396
that's all done on your behalf.


740
00:21:29,546 --> 00:21:32,086
All right, so that's the audio


741
00:21:32,086 --> 00:21:34,486
experience on watch, or that's


742
00:21:34,486 --> 00:21:35,826
our playback, so let's talk


743
00:21:35,826 --> 00:21:37,016
about our audio experience.


744
00:21:42,216 --> 00:21:44,286
So there's 4 major things I want


745
00:21:44,286 --> 00:21:45,316
to talk about first for the


746
00:21:45,316 --> 00:21:46,086
audio experience.


747
00:21:46,476 --> 00:21:47,506
There's our auto-launching


748
00:21:47,506 --> 00:21:48,536
feature where your app will


749
00:21:48,536 --> 00:21:49,686
automatically get launched.


750
00:21:50,236 --> 00:21:51,696
There's the frontmost app state


751
00:21:51,696 --> 00:21:52,966
and how we can take advantage of


752
00:21:52,966 --> 00:21:54,366
that in our application.


753
00:21:54,936 --> 00:21:56,396
There's our new interactive


754
00:21:56,396 --> 00:21:57,356
notifications.


755
00:21:57,716 --> 00:21:59,506
And how to integrate with Siri


756
00:21:59,506 --> 00:22:00,066
Shortcuts.


757
00:22:03,076 --> 00:22:05,566
And so we've been talking a lot


758
00:22:05,566 --> 00:22:06,856
about playback occurring on the


759
00:22:06,856 --> 00:22:09,316
watch itself, but I want to take


760
00:22:09,316 --> 00:22:10,836
a step back, and I just wanted


761
00:22:10,836 --> 00:22:11,986
to talk through that remote


762
00:22:11,986 --> 00:22:14,946
control case.


763
00:22:15,136 --> 00:22:16,886
So let's say I was playing some


764
00:22:16,886 --> 00:22:19,026
Apple Music on my iPhone, and


765
00:22:19,026 --> 00:22:20,426
automatically the Now Playing


766
00:22:20,426 --> 00:22:22,176
app will get displayed on my


767
00:22:22,176 --> 00:22:22,726
watch.


768
00:22:23,016 --> 00:22:24,486
And I love this feature.


769
00:22:24,486 --> 00:22:25,986
It feels like magic when I just


770
00:22:25,986 --> 00:22:27,396
look at my wrist and I can


771
00:22:27,396 --> 00:22:28,896
easily control my playback.


772
00:22:28,896 --> 00:22:31,876
I, it's the coolest thing.


773
00:22:33,306 --> 00:22:34,456
And in the case where it's our


774
00:22:34,456 --> 00:22:35,626
application that's actually


775
00:22:35,626 --> 00:22:37,226
causing the playback to occur on


776
00:22:37,226 --> 00:22:38,626
iPhone, then our app


777
00:22:38,626 --> 00:22:40,406
automatically gets launched on


778
00:22:40,406 --> 00:22:40,936
the watch.


779
00:22:45,356 --> 00:22:46,766
And we call this the auto-launch


780
00:22:46,766 --> 00:22:47,886
audio apps feature.


781
00:22:48,386 --> 00:22:49,766
And so whenever the Now Playing


782
00:22:49,766 --> 00:22:51,496
session is occurring on iPhone,


783
00:22:51,806 --> 00:22:53,426
then our Apple Watch app will be


784
00:22:53,426 --> 00:22:55,116
brought frontmost at that time.


785
00:22:56,126 --> 00:22:57,316
And we're going to stay


786
00:22:57,316 --> 00:22:59,126
frontmost for the duration of


787
00:22:59,126 --> 00:22:59,766
that session.


788
00:23:00,056 --> 00:23:01,406
So as long as the user is


789
00:23:01,406 --> 00:23:02,726
listening to content on iPhone,


790
00:23:02,986 --> 00:23:04,736
then our app will stay


791
00:23:04,736 --> 00:23:06,076
frontmost, unless the user


792
00:23:06,076 --> 00:23:07,296
decides to navigate away.


793
00:23:08,556 --> 00:23:11,196
And new in watchOS 5 is we're


794
00:23:11,196 --> 00:23:12,756
exposing a Now Playing session


795
00:23:12,756 --> 00:23:14,816
API where you're going to know


796
00:23:14,816 --> 00:23:16,236
when you're launched for this


797
00:23:16,236 --> 00:23:17,756
Now Playing session on iPhone,


798
00:23:18,156 --> 00:23:19,496
and so you can take your user


799
00:23:19,496 --> 00:23:21,106
directly to the appropriate


800
00:23:21,106 --> 00:23:21,396
view.


801
00:23:21,906 --> 00:23:24,026
And to do this, you're going to


802
00:23:24,026 --> 00:23:25,486
use the handleRemoteNow


803
00:23:25,486 --> 00:23:27,216
PlayingActivity on your


804
00:23:27,216 --> 00:23:28,326
WKExtension Delegate.


805
00:23:30,026 --> 00:23:31,636
So let's take a look at some


806
00:23:31,636 --> 00:23:33,086
code and see how we could use


807
00:23:35,796 --> 00:23:35,896
this.


808
00:23:36,086 --> 00:23:36,976
So here we are.


809
00:23:36,976 --> 00:23:38,196
I have my extension delegate,


810
00:23:39,176 --> 00:23:40,406
and then I can implement my


811
00:23:40,406 --> 00:23:42,316
handleRemoteNow PlayingActivity.


812
00:23:43,216 --> 00:23:44,286
And the first thing I want to


813
00:23:44,286 --> 00:23:46,216
check is, where is my user at


814
00:23:46,216 --> 00:23:46,846
that time?


815
00:23:47,476 --> 00:23:50,256
So I can just grab the visible


816
00:23:50,256 --> 00:23:51,926
interface controller, I can


817
00:23:51,926 --> 00:23:54,016
check where my user is, and if


818
00:23:54,016 --> 00:23:55,856
the user already is at my Now


819
00:23:55,856 --> 00:23:57,576
Playing UI, that's great.


820
00:23:57,776 --> 00:23:58,746
Let's leave them right there.


821
00:23:59,896 --> 00:24:01,116
But in the case they're not, we


822
00:24:01,116 --> 00:24:03,916
can just reload directly to our


823
00:24:03,916 --> 00:24:04,316
view.


824
00:24:04,316 --> 00:24:05,836
So that way, we have that same


825
00:24:05,836 --> 00:24:07,636
magical experience where I raise


826
00:24:07,636 --> 00:24:09,536
my wrists and I see the remote


827
00:24:09,536 --> 00:24:10,976
controls that I want to use.


828
00:24:16,116 --> 00:24:18,396
And in some cases, you might


829
00:24:18,396 --> 00:24:20,316
want to opt out of this feature


830
00:24:20,316 --> 00:24:21,416
if it doesn't make sense for


831
00:24:21,416 --> 00:24:22,056
your user.


832
00:24:22,506 --> 00:24:23,896
So just do the right thing.


833
00:24:23,896 --> 00:24:25,066
Make that decision.


834
00:24:25,376 --> 00:24:26,556
And let's say our app has


835
00:24:26,556 --> 00:24:28,616
nothing to do with our phone


836
00:24:28,616 --> 00:24:29,946
app, and that's an appropriate


837
00:24:29,946 --> 00:24:31,196
use of actually opting out of


838
00:24:31,196 --> 00:24:32,086
this capability.


839
00:24:32,836 --> 00:24:34,756
And so to do so, use the auto,


840
00:24:34,946 --> 00:24:36,716
the opt out of auto-launch


841
00:24:36,716 --> 00:24:40,396
feature on your WK extension's


842
00:24:40,396 --> 00:24:41,306
info.plist.


843
00:24:41,796 --> 00:24:44,916
And in the case you do opt out,


844
00:24:44,996 --> 00:24:46,366
then the Now Playing app will


845
00:24:46,366 --> 00:24:47,146
show instead.


846
00:24:52,046 --> 00:24:53,716
And now, let's talk about that


847
00:24:53,716 --> 00:24:55,116
frontmost app state, and let's


848
00:24:55,116 --> 00:24:56,636
give a little bit of a refresher


849
00:24:56,636 --> 00:24:56,906
of that.


850
00:24:58,096 --> 00:25:00,196
So here I have my app.


851
00:25:00,196 --> 00:25:01,276
It's foreground running.


852
00:25:01,276 --> 00:25:02,196
I'm looking at it.


853
00:25:02,526 --> 00:25:04,066
The screen is on, and this app


854
00:25:04,066 --> 00:25:05,486
is considered active and


855
00:25:05,486 --> 00:25:06,176
frontmost.


856
00:25:06,826 --> 00:25:07,766
But then, let's say I put my


857
00:25:07,766 --> 00:25:08,376
wrist down.


858
00:25:09,546 --> 00:25:11,246
In that case, the application is


859
00:25:11,246 --> 00:25:12,646
still considered frontmost


860
00:25:13,106 --> 00:25:14,396
because if I raise my wrist


861
00:25:14,396 --> 00:25:15,326
again, I'll see that


862
00:25:15,326 --> 00:25:15,996
application.


863
00:25:16,416 --> 00:25:18,356
And in that case, the


864
00:25:18,356 --> 00:25:19,916
application is just in the


865
00:25:19,916 --> 00:25:20,506
background.


866
00:25:24,116 --> 00:25:26,066
So with the frontmost app state,


867
00:25:26,266 --> 00:25:27,226
we get some enhanced


868
00:25:27,226 --> 00:25:28,586
capabilities from the system.


869
00:25:29,116 --> 00:25:32,286
Our background transfers from


870
00:25:32,406 --> 00:25:33,856
iPhones -- so say we were


871
00:25:33,856 --> 00:25:35,436
transferring our content from


872
00:25:35,576 --> 00:25:36,986
iPhone to watch itself, those


873
00:25:36,986 --> 00:25:39,036
background transfers, when they


874
00:25:39,036 --> 00:25:40,326
complete, the resumes will


875
00:25:40,476 --> 00:25:42,266
directly just wake up our app if


876
00:25:42,266 --> 00:25:43,276
we're in the frontmost app


877
00:25:43,276 --> 00:25:43,586
state.


878
00:25:44,486 --> 00:25:45,996
And the same thing in, with our


879
00:25:45,996 --> 00:25:47,286
URL session resumes.


880
00:25:47,616 --> 00:25:49,886
So if the URL session, our


881
00:25:49,886 --> 00:25:51,246
background session before was


882
00:25:51,246 --> 00:25:53,166
downloading and it completes,


883
00:25:53,166 --> 00:25:54,396
then our app will automatically


884
00:25:54,396 --> 00:25:55,926
get waked up and deliver the


885
00:25:55,926 --> 00:25:56,346
payload.


886
00:25:56,826 --> 00:26:00,566
And if we're frontmost, we're


887
00:26:00,566 --> 00:26:02,256
going to get called into, so we


888
00:26:02,256 --> 00:26:03,776
can decide whenever, if a


889
00:26:03,776 --> 00:26:06,036
notification appears, how we


890
00:26:06,036 --> 00:26:07,206
properly want to handle that


891
00:26:07,206 --> 00:26:07,916
notification.


892
00:26:08,286 --> 00:26:09,686
Maybe we want to keep our user


893
00:26:09,686 --> 00:26:11,166
in the app, or maybe we want to


894
00:26:11,166 --> 00:26:12,366
show the notification to our


895
00:26:12,366 --> 00:26:12,716
user.


896
00:26:13,136 --> 00:26:14,566
And in the frontmost app state,


897
00:26:14,566 --> 00:26:15,826
we can make that decision.


898
00:26:16,256 --> 00:26:18,786
And when you're in the frontmost


899
00:26:18,786 --> 00:26:20,086
app state, you can play some


900
00:26:20,086 --> 00:26:20,626
haptics.


901
00:26:21,236 --> 00:26:23,516
And if you want to know a little


902
00:26:23,516 --> 00:26:24,706
bit more about frontmost app


903
00:26:24,706 --> 00:26:26,646
state, there's the talk from


904
00:26:26,646 --> 00:26:28,236
last year, The Life of a watchOS


905
00:26:28,236 --> 00:26:28,476
App.


906
00:26:28,956 --> 00:26:30,396
It's a great talk.


907
00:26:30,396 --> 00:26:31,806
You might recognize the speaker.


908
00:26:31,806 --> 00:26:32,666
He's okay.


909
00:26:33,636 --> 00:26:35,956
And so you're going to stay


910
00:26:35,956 --> 00:26:38,816
frontmost for 2 minutes, but, if


911
00:26:38,816 --> 00:26:40,396
you recall, I extended my


912
00:26:40,396 --> 00:26:41,336
frontmost earlier.


913
00:26:41,716 --> 00:26:43,066
And so in that case, it's just


914
00:26:43,066 --> 00:26:44,276
going to be extended by default


915
00:26:44,566 --> 00:26:45,526
to 8 minutes.


916
00:26:45,986 --> 00:26:47,636
And so, again, this is great for


917
00:26:47,636 --> 00:26:48,856
when we were downloading that


918
00:26:48,856 --> 00:26:50,666
content from before, and so I


919
00:26:50,666 --> 00:26:52,666
can just extend my time out.


920
00:27:00,236 --> 00:27:01,446
And when we're actually playing


921
00:27:01,446 --> 00:27:03,996
back some audio, our app will be


922
00:27:03,996 --> 00:27:06,046
kept frontmost for the duration


923
00:27:06,046 --> 00:27:07,796
of that session, just like when


924
00:27:07,796 --> 00:27:08,586
we were actually remote


925
00:27:08,586 --> 00:27:10,006
controlling the audio when it


926
00:27:10,006 --> 00:27:11,266
was occurring on iPhone.


927
00:27:12,396 --> 00:27:13,566
And again, if the user ever


928
00:27:13,566 --> 00:27:15,716
navigates away, then you're no


929
00:27:15,716 --> 00:27:17,646
longer frontmost, but your


930
00:27:17,646 --> 00:27:19,066
background playback will still


931
00:27:19,066 --> 00:27:20,016
occur appropriately.


932
00:27:21,166 --> 00:27:22,346
And in that case, you can, of


933
00:27:22,346 --> 00:27:23,826
course, properly handle all of


934
00:27:23,826 --> 00:27:26,266
your background events.


935
00:27:26,266 --> 00:27:26,766
All right.


936
00:27:28,656 --> 00:27:30,786
So now, we're -- and when we are


937
00:27:30,786 --> 00:27:33,746
in that frontmost state, then we


938
00:27:33,746 --> 00:27:35,306
also can integrate properly with


939
00:27:35,306 --> 00:27:36,116
notification.


940
00:27:36,116 --> 00:27:38,406
So we could post, for example,


941
00:27:38,406 --> 00:27:39,586
when the download completes, a


942
00:27:39,586 --> 00:27:40,806
content available local


943
00:27:40,806 --> 00:27:41,546
notification.


944
00:27:42,006 --> 00:27:43,466
And we might want to have play


945
00:27:43,466 --> 00:27:44,826
as our primary action.


946
00:27:45,596 --> 00:27:46,876
And with our new interaction


947
00:27:46,876 --> 00:27:49,046
notifications on watchOS, we can


948
00:27:49,046 --> 00:27:50,396
allow our user to actually


949
00:27:50,396 --> 00:27:52,906
configure some playback right


950
00:27:52,906 --> 00:27:54,766
from within the notification and


951
00:27:54,766 --> 00:27:56,156
then be able to call play as the


952
00:27:56,156 --> 00:27:57,946
primary action, then get into


953
00:27:57,946 --> 00:27:59,616
your app and immediately cause


954
00:27:59,616 --> 00:28:00,646
some playback to occur.


955
00:28:01,576 --> 00:28:03,546
So for example, say I had a


956
00:28:03,546 --> 00:28:06,146
Salvador Dali exhibit.


957
00:28:06,146 --> 00:28:07,226
It's ready to go.


958
00:28:07,296 --> 00:28:08,556
I can then adjust the playback


959
00:28:08,556 --> 00:28:10,496
speed, immediately call play,


960
00:28:10,996 --> 00:28:12,976
that'll launch my app, and then


961
00:28:12,976 --> 00:28:14,556
I can play that great content at


962
00:28:14,556 --> 00:28:16,006
the appropriate rate for my


963
00:28:16,006 --> 00:28:16,326
user.


964
00:28:16,326 --> 00:28:19,796
If you want to know more about


965
00:28:19,796 --> 00:28:21,336
some interactive notifications,


966
00:28:21,666 --> 00:28:22,856
check out the What's New in


967
00:28:22,856 --> 00:28:24,226
watchOS talk given earlier,


968
00:28:24,876 --> 00:28:26,056
which is available online.


969
00:28:26,056 --> 00:28:27,676
It was a great talk, and you'll


970
00:28:27,676 --> 00:28:28,756
know a lot more about


971
00:28:28,756 --> 00:28:30,176
interactive notifications after


972
00:28:30,176 --> 00:28:31,206
watching it.


973
00:28:31,976 --> 00:28:33,526
All right, so do you remember


974
00:28:33,526 --> 00:28:35,486
this code from before where I


975
00:28:35,486 --> 00:28:36,456
actually posted that


976
00:28:36,456 --> 00:28:39,316
notification alerting our user


977
00:28:39,316 --> 00:28:40,376
of this type of playback


978
00:28:40,376 --> 00:28:40,966
opportunity?


979
00:28:41,396 --> 00:28:42,716
Well, let's say our app was


980
00:28:42,716 --> 00:28:45,046
frontmost at that time.


981
00:28:45,246 --> 00:28:46,336
In that case, when I got


982
00:28:46,336 --> 00:28:48,006
delivered the notification from


983
00:28:48,006 --> 00:28:50,306
frontmost in user notification,


984
00:28:50,366 --> 00:28:52,126
I'm going to get called into and


985
00:28:52,126 --> 00:28:53,866
will present notification with


986
00:28:53,866 --> 00:28:55,276
completion handler.


987
00:28:56,426 --> 00:28:57,886
And in that case, I can actually


988
00:28:57,886 --> 00:28:59,406
decide whether or not I want to


989
00:28:59,406 --> 00:29:00,846
still post that notification.


990
00:29:01,226 --> 00:29:02,436
Or maybe because my app's


991
00:29:02,436 --> 00:29:04,176
frontmost, I could just play a


992
00:29:04,176 --> 00:29:06,076
haptic and let my user know


993
00:29:06,076 --> 00:29:07,586
that, hey, raise your wrist, and


994
00:29:07,586 --> 00:29:08,516
there's some new content.


995
00:29:08,516 --> 00:29:09,556
I can update my view.


996
00:29:10,216 --> 00:29:11,436
And again, if you want to know


997
00:29:11,436 --> 00:29:12,686
some more about the frontmost


998
00:29:12,686 --> 00:29:14,396
notifications, check out the


999
00:29:14,396 --> 00:29:15,636
Life of a watchOS App.


1000
00:29:16,516 --> 00:29:18,396
Great, so that's how we used our


1001
00:29:18,396 --> 00:29:19,976
interactive notifications and


1002
00:29:19,976 --> 00:29:22,266
the frontmost app state, but we


1003
00:29:22,266 --> 00:29:24,026
also want to show up on the Siri


1004
00:29:24,026 --> 00:29:24,756
watch face.


1005
00:29:25,756 --> 00:29:27,306
And with audio apps, you can


1006
00:29:27,306 --> 00:29:28,906
provide suggestions of audio to


1007
00:29:28,906 --> 00:29:30,806
play on the Siri watch face


1008
00:29:30,856 --> 00:29:32,336
using relevant shortcuts.


1009
00:29:32,976 --> 00:29:34,546
So for example, that could be


1010
00:29:34,646 --> 00:29:36,356
the next episode of your user's


1011
00:29:36,356 --> 00:29:38,506
favorite podcast or the new


1012
00:29:38,506 --> 00:29:39,896
music that you just synced over


1013
00:29:39,896 --> 00:29:40,506
to the watch.


1014
00:29:43,986 --> 00:29:46,116
For example, Audible was able to


1015
00:29:46,116 --> 00:29:47,586
build the same experience where


1016
00:29:47,976 --> 00:29:49,726
they can just get their user


1017
00:29:49,726 --> 00:29:50,616
directly within their


1018
00:29:50,616 --> 00:29:52,156
application from the Siri watch


1019
00:29:52,156 --> 00:29:54,126
face and resume the playback of


1020
00:29:54,126 --> 00:29:54,756
an audiobook.


1021
00:29:55,236 --> 00:29:59,036
And whenever a user interaction


1022
00:29:59,036 --> 00:30:00,866
is occurring, just wanted to


1023
00:30:00,866 --> 00:30:02,336
highlight, think through your


1024
00:30:02,336 --> 00:30:03,136
donations.


1025
00:30:03,586 --> 00:30:05,256
Make sure to donate your INMedia


1026
00:30:05,256 --> 00:30:07,656
PlaybackIntent to the system so


1027
00:30:07,656 --> 00:30:08,836
that way the system knows what


1028
00:30:08,836 --> 00:30:10,356
your user is commonly doing on


1029
00:30:10,356 --> 00:30:10,816
the watch.


1030
00:30:11,286 --> 00:30:12,536
And that way, you can become


1031
00:30:12,536 --> 00:30:14,016
more relevant on the Siri watch


1032
00:30:14,016 --> 00:30:14,396
face.


1033
00:30:17,016 --> 00:30:19,016
And also, just think through


1034
00:30:19,016 --> 00:30:21,116
your shortcut phrases like


1035
00:30:21,456 --> 00:30:23,836
design appropriate phrases that


1036
00:30:23,926 --> 00:30:26,486
your user could use within Siri


1037
00:30:26,516 --> 00:30:28,986
to get your user directly within


1038
00:30:28,986 --> 00:30:30,586
your application to allow for


1039
00:30:30,586 --> 00:30:31,706
some playback to occur.


1040
00:30:32,206 --> 00:30:35,826
And all in all, on the Siri


1041
00:30:35,826 --> 00:30:37,556
watch face, design a great


1042
00:30:37,556 --> 00:30:38,296
experience.


1043
00:30:38,556 --> 00:30:39,736
You might have some glanceable


1044
00:30:39,736 --> 00:30:41,366
information like, hey, there's


1045
00:30:41,366 --> 00:30:42,666
an exhibit coming soon.


1046
00:30:43,266 --> 00:30:45,016
Or you could have some tappable


1047
00:30:45,016 --> 00:30:46,386
actions like Audible was able to


1048
00:30:46,386 --> 00:30:47,946
make where, hey, we just want to


1049
00:30:47,946 --> 00:30:49,646
play that audio tour and get our


1050
00:30:49,646 --> 00:30:53,446
user directly in the app.


1051
00:30:53,706 --> 00:30:56,166
And so for shortcuts, donate


1052
00:30:56,166 --> 00:30:57,966
your INMediaPlaybackIntent.


1053
00:30:58,876 --> 00:31:00,706
Use the relevant shortcut API to


1054
00:31:00,706 --> 00:31:02,236
appear on the Siri watch face.


1055
00:31:03,436 --> 00:31:04,746
And think through your shortcut


1056
00:31:04,746 --> 00:31:05,256
phrases.


1057
00:31:06,786 --> 00:31:07,906
And there's been some great


1058
00:31:07,906 --> 00:31:09,706
talks this week about shortcuts,


1059
00:31:09,706 --> 00:31:10,986
and I definitely wanted to


1060
00:31:10,986 --> 00:31:12,326
highlight the Shortcuts on the


1061
00:31:12,326 --> 00:31:13,396
Siri Watch Face talk.


1062
00:31:13,706 --> 00:31:14,506
I saw that myself.


1063
00:31:14,506 --> 00:31:16,126
It was a great talk, and I


1064
00:31:16,126 --> 00:31:16,706
learned a lot.


1065
00:31:19,276 --> 00:31:21,556
And so in summary, for the first


1066
00:31:21,556 --> 00:31:23,436
time, you can embed your native


1067
00:31:23,436 --> 00:31:24,976
controls directly from within


1068
00:31:24,976 --> 00:31:25,866
your application.


1069
00:31:26,346 --> 00:31:27,676
You can allow background


1070
00:31:27,676 --> 00:31:29,226
playback to occur however you


1071
00:31:29,226 --> 00:31:30,986
want and handle media remote


1072
00:31:30,986 --> 00:31:32,176
commands however you want.


1073
00:31:32,636 --> 00:31:35,686
And there are better ways that


1074
00:31:35,686 --> 00:31:37,326
transfer audio assets to your


1075
00:31:37,326 --> 00:31:39,066
watch and convey that type of


1076
00:31:39,066 --> 00:31:40,416
progress to your users.


1077
00:31:41,556 --> 00:31:42,786
So if you want some more


1078
00:31:43,126 --> 00:31:44,836
information, feel free to go


1079
00:31:44,836 --> 00:31:47,006
online or join us in the lab


1080
00:31:47,006 --> 00:31:47,816
this afternoon.


1081
00:31:49,016 --> 00:31:50,676
I'm really excited to see what


1082
00:31:50,676 --> 00:31:52,216
type of audio apps are built on


1083
00:31:52,216 --> 00:31:54,816
watchOS, and thanks, everyone.


1084
00:31:55,166 --> 00:31:57,106
Have a great WWDC.


1085
00:31:57,256 --> 00:31:57,816
Thanks.


1086
00:31:58,516 --> 00:32:03,500
[ Applause ]

