1
00:00:00,506 --> 00:00:08,516
[ Silence ]


2
00:00:09,016 --> 00:00:13,000
[ Applause ]


3
00:00:14,596 --> 00:00:15,356
>> Good afternoon everyone.


4
00:00:15,946 --> 00:00:19,216
Welcome to Continuous
Integration in Xcode 5.


5
00:00:20,036 --> 00:00:21,316
My name is Andrew Nesbitt.


6
00:00:21,436 --> 00:00:22,816
I am the engineering manager


7
00:00:22,816 --> 00:00:24,996
on the OS X Server
part of this feature.


8
00:00:28,026 --> 00:00:30,246
So as you heard in
yesterday's platform kick off,


9
00:00:30,286 --> 00:00:34,846
the theme for Xcode 5
is building better apps.


10
00:00:34,846 --> 00:00:37,266
And Xcode 5 is packed, full
of amazing new features


11
00:00:37,266 --> 00:00:38,426
to help you share this goal.


12
00:00:38,476 --> 00:00:41,636
In this afternoon, we're going
to spend our time looking at one


13
00:00:41,636 --> 00:00:43,766
of those new features in
particular and that is


14
00:00:43,766 --> 00:00:45,456
of course Continuous
Integration.


15
00:00:46,076 --> 00:00:48,216
And hopefully you will learn
how you can use Continuous


16
00:00:48,216 --> 00:00:50,356
Integration to build
better apps.


17
00:00:50,896 --> 00:00:55,446
So the lineup for this
afternoon is that we will start


18
00:00:55,446 --> 00:00:57,736
out with a little bit of a
terminology refresh of the some


19
00:00:57,736 --> 00:00:59,796
of the key Xcode terms
that we need to know.


20
00:00:59,966 --> 00:01:02,366
And after that we'll
dig right in.


21
00:01:02,516 --> 00:01:04,726
We'll start exploring the
Xcode Service and we'll talk


22
00:01:04,726 --> 00:01:06,886
for a while about
configuring OS X Server


23
00:01:06,886 --> 00:01:08,106
for Continuous Integration.


24
00:01:08,396 --> 00:01:11,376
After that we'll do a
deep dive into Xcode 5


25
00:01:11,376 --> 00:01:13,406
and the band new bots
feature that we have.


26
00:01:13,546 --> 00:01:16,856
And then we'll spend some time
looking at the web application


27
00:01:17,096 --> 00:01:18,636
and the feature that
we call Scoreboard.


28
00:01:19,526 --> 00:01:21,536
And after that we'll finish
with some best practices


29
00:01:21,536 --> 00:01:24,796
that we have learned inside
Apple for deploying the service.


30
00:01:26,666 --> 00:01:29,486
So the big question is why
use Continuous Integration?


31
00:01:30,366 --> 00:01:33,926
Over the years, through
many iOS and OS X releases,


32
00:01:34,496 --> 00:01:36,966
we have given you an enormous
toolbox of features to use.


33
00:01:36,966 --> 00:01:38,606
And you guys have definitely
arisen to the challenge


34
00:01:38,606 --> 00:01:40,106
by shipping amazing
applications.


35
00:01:41,186 --> 00:01:44,076
And of course, shipping
amazing applications we all know


36
00:01:44,076 --> 00:01:45,016
requires testing.


37
00:01:45,366 --> 00:01:49,216
And as the number of OS versions
that you target and the types


38
00:01:49,216 --> 00:01:52,076
of devices that you target
skill it becomes more


39
00:01:52,076 --> 00:01:54,326
and more difficult to test
your applications well.


40
00:01:54,326 --> 00:01:56,456
And this is where Continuous
Integration comes into play.


41
00:01:58,446 --> 00:02:00,726
Continuous Integration will
give you the opportunity


42
00:02:00,726 --> 00:02:02,796
to do testing on
multiple OS versions


43
00:02:02,796 --> 00:02:04,576
and multiple hardware models.


44
00:02:06,016 --> 00:02:07,946
Of course, once you have
a server in the mix,


45
00:02:07,996 --> 00:02:10,526
you're now in the
position to build, analyze


46
00:02:10,526 --> 00:02:12,356
and test your project often.


47
00:02:13,646 --> 00:02:15,906
And of course, having a server
will give you the opportunity


48
00:02:15,906 --> 00:02:19,686
to catch problems quickly and
this is the key automatically.


49
00:02:22,146 --> 00:02:24,576
Many of you have more than
one Mac and I'm sure a lot


50
00:02:24,576 --> 00:02:26,756
of you have a Mac sitting in
your office doing nothing.


51
00:02:27,586 --> 00:02:30,626
And this is a great opportunity
to put that Mac back to work.


52
00:02:30,826 --> 00:02:33,236
Let the server do the
heavy-lifting of building your--


53
00:02:33,406 --> 00:02:34,816
building your project
automatically.


54
00:02:34,946 --> 00:02:38,016
And having a server lets you
do things that you can't do


55
00:02:38,016 --> 00:02:40,166
in Xcode or that you
can't do in Xcode feasibly


56
00:02:40,166 --> 00:02:42,436
and the big thing here is
the ability to gather, build,


57
00:02:42,436 --> 00:02:45,226
and test history for
your project over time.


58
00:02:47,686 --> 00:02:49,356
And, of course, having a server


59
00:02:49,356 --> 00:02:52,126
in the mix gives you an awesome
new way to distribute builds


60
00:02:52,126 --> 00:02:54,206
to your team and I see some
examples about coming up.


61
00:02:55,456 --> 00:02:57,976
So to get started, let's
talk for a little second


62
00:02:57,976 --> 00:02:59,886
about some terminology that
you're going to need to know.


63
00:03:00,896 --> 00:03:02,496
There are three key terms.


64
00:03:03,416 --> 00:03:05,186
Number one is that of a scheme.


65
00:03:05,186 --> 00:03:08,576
And a scheme is a very simple
concept; it's just a recipe


66
00:03:08,616 --> 00:03:10,066
for building your project.


67
00:03:10,696 --> 00:03:13,176
A scheme defines what
targets you're going to build,


68
00:03:13,776 --> 00:03:15,706
what dependent targets
you're going to get built,


69
00:03:15,876 --> 00:03:17,446
and also what build
settings will be pass


70
00:03:17,446 --> 00:03:18,596
when those targets do get built.


71
00:03:19,826 --> 00:03:22,236
And because we're dealing with
the server, a server needs


72
00:03:22,236 --> 00:03:24,146
to have access to this
scheme information.


73
00:03:24,286 --> 00:03:25,906
And schemes are typically
personal things,


74
00:03:25,906 --> 00:03:27,676
I'm sure you all have a
bunch of schemes that you set


75
00:03:27,676 --> 00:03:28,736
up just the way you like them.


76
00:03:28,856 --> 00:03:32,326
But we're going to use a little
extended version of the scheme


77
00:03:32,326 --> 00:03:34,136
and that is of a shared scheme.


78
00:03:34,256 --> 00:03:36,146
And a shared scheme is
nothing more than a scheme


79
00:03:36,146 --> 00:03:38,466
that has been checked in to your
source controller repository


80
00:03:38,806 --> 00:03:40,486
and shared with the
rest of your team.


81
00:03:40,696 --> 00:03:43,046
So that's item number one.


82
00:03:43,296 --> 00:03:45,596
Number two is that of a bot.


83
00:03:46,396 --> 00:03:50,946
And a bot is a configuration
for analyzing, building, testing


84
00:03:50,946 --> 00:03:53,416
and archiving your
project on a schedule.


85
00:03:53,486 --> 00:03:54,966
And we'll come back to
this guy in a second.


86
00:03:56,526 --> 00:03:59,316
The third item of terminology
is that of an integration.


87
00:03:59,426 --> 00:04:01,966
And an integration is just
a single run of a bot.


88
00:04:02,236 --> 00:04:04,176
So every time your bot
runs, your bot is said


89
00:04:04,176 --> 00:04:06,866
to be performing an integration
or it is integrating.


90
00:04:08,916 --> 00:04:12,456
So let's look at a little bit
more detail of surrounding bots.


91
00:04:14,446 --> 00:04:16,666
So like I said, a bot
is a configuration


92
00:04:16,666 --> 00:04:17,685
for building your project.


93
00:04:19,326 --> 00:04:21,736
A bot defines what
we're going to build.


94
00:04:22,176 --> 00:04:23,236
So there are two things here.


95
00:04:23,596 --> 00:04:26,346
Firstly, it defines where
the source code lives


96
00:04:26,346 --> 00:04:27,256
that we are going to build.


97
00:04:27,636 --> 00:04:29,406
So what repository that
source code lives in?


98
00:04:29,406 --> 00:04:31,086
How are we going to
access that repository


99
00:04:31,086 --> 00:04:32,066
to get that source code?


100
00:04:33,246 --> 00:04:36,176
And secondly, the project
or the workspace inside


101
00:04:36,176 --> 00:04:38,726
that SCM location that
we're going to access


102
00:04:38,896 --> 00:04:39,926
where that project lives?


103
00:04:42,566 --> 00:04:45,646
Secondly, a bot defines when
we're going to build it.


104
00:04:46,026 --> 00:04:48,766
So we have some great scheduling
options in the Xcode Service.


105
00:04:49,736 --> 00:04:53,546
We have periodic options so you
can build your project hourly,


106
00:04:53,846 --> 00:04:57,536
daily at a time or weekly on a
day at a time of your chosen.


107
00:04:58,696 --> 00:04:59,946
We have on-commit options.


108
00:04:59,946 --> 00:05:02,676
So you can build when your
source repository changes


109
00:05:02,676 --> 00:05:03,806
and you can tell the server


110
00:05:03,806 --> 00:05:05,826
when your source repository
changes by a heap script.


111
00:05:06,316 --> 00:05:08,376
Or you can have the
server periodically checked


112
00:05:08,376 --> 00:05:10,926
with your SCM server when
your source code is available,


113
00:05:11,296 --> 00:05:12,276
otherwise known as pulling.


114
00:05:13,116 --> 00:05:14,386
And of course there's manual.


115
00:05:14,386 --> 00:05:16,266
So you will-- this will
be you will run the bot


116
00:05:16,266 --> 00:05:17,406
when you feel like
running the bot.


117
00:05:18,416 --> 00:05:20,816
The third slice of the
bot configuration is


118
00:05:20,816 --> 00:05:22,676
that of how we're going
to build your project.


119
00:05:24,076 --> 00:05:26,916
And this is composed of the
shared scheme information


120
00:05:26,916 --> 00:05:28,616
that you've defined
when you set up the bot,


121
00:05:28,746 --> 00:05:30,696
which scheme you'd
like us to use.


122
00:05:31,086 --> 00:05:33,606
And then some options, we have
some action options available


123
00:05:33,606 --> 00:05:34,126
for your bot.


124
00:05:34,296 --> 00:05:36,926
So you can choose whether or
not you would like your bot


125
00:05:36,926 --> 00:05:40,076
to perform static analysis,
whether or not you would


126
00:05:40,076 --> 00:05:41,886
like your bot to
perform testing.


127
00:05:41,996 --> 00:05:46,616
And if you are performing
testing, which devices


128
00:05:46,616 --> 00:05:48,096
on which you would like
to perform testing.


129
00:05:48,096 --> 00:05:51,356
And we support bot testing on
the Mac which is the server.


130
00:05:51,896 --> 00:05:54,386
We support testing on
simulators, we support testing


131
00:05:54,386 --> 00:05:57,296
on a single device, we support
testing on multiple devices


132
00:05:57,716 --> 00:05:59,726
or any other combinations
of those settings.


133
00:06:00,616 --> 00:06:01,526
Where that makes sense?


134
00:06:01,826 --> 00:06:02,716
Of course.


135
00:06:02,816 --> 00:06:06,716
And lastly, your bot can define
whether or not you would like us


136
00:06:06,716 --> 00:06:07,646
to produce an archive.


137
00:06:07,646 --> 00:06:12,026
And an archive will produce both
a package and an .xcarchive file


138
00:06:12,026 --> 00:06:13,846
for a Mac project or an IPA


139
00:06:13,846 --> 00:06:16,086
on an .xcarchive file
for an iOS project.


140
00:06:17,926 --> 00:06:20,126
We also have some great
notification settings


141
00:06:20,126 --> 00:06:21,106
for the Xcode Service.


142
00:06:21,106 --> 00:06:23,166
So when you set up a bot,
you got a couple of options.


143
00:06:24,026 --> 00:06:28,496
So we let you notify people, we
have checked in code to that bot


144
00:06:28,496 --> 00:06:30,956
so all the source controls
submissions that have been made


145
00:06:30,956 --> 00:06:34,866
since that bot last run, all
those people can get notified


146
00:06:34,866 --> 00:06:36,566
and you can choose whether
to notify those people


147
00:06:36,926 --> 00:06:38,936
when the bot is successful
or when the bot fails.


148
00:06:39,646 --> 00:06:42,946
And you can also define
lists of e-mail addresses


149
00:06:42,946 --> 00:06:44,506
for people you would
like to e-mail


150
00:06:44,506 --> 00:06:45,436
on those conditions as well.


151
00:06:45,806 --> 00:06:51,016
So the Xcode story can
really be thought of--


152
00:06:51,066 --> 00:06:53,466
the Xcode Service story can be
thought off in two parts here.


153
00:06:53,586 --> 00:06:55,616
So there is OS X Server


154
00:06:55,616 --> 00:06:57,806
and we have an amazing
preview releasable OX X Server,


155
00:06:57,806 --> 00:07:00,746
and of course there's Xcode 5.


156
00:07:00,996 --> 00:07:02,886
So let's start by digging


157
00:07:02,886 --> 00:07:05,956
in to the OS X Server
part of the story first.


158
00:07:08,006 --> 00:07:09,896
So in the Mountain
Lion timeframe,


159
00:07:10,046 --> 00:07:12,086
we made server an application.


160
00:07:12,356 --> 00:07:15,036
No longer a server, an entirely
separate operating system


161
00:07:15,036 --> 00:07:18,676
that you have to set up, Server
is just an app that you purchase


162
00:07:18,756 --> 00:07:21,116
and download and install
from the Mac App Store.


163
00:07:21,206 --> 00:07:24,026
And it's never been simpler to
turn your Mac into a server.


164
00:07:24,216 --> 00:07:29,406
And carrying on this theme of
simplicity in the next version


165
00:07:29,406 --> 00:07:31,206
of Server the pre-release
that we have available.


166
00:07:32,216 --> 00:07:33,326
We have some great new features.


167
00:07:33,326 --> 00:07:34,826
And one of those
is simple setup.


168
00:07:35,406 --> 00:07:38,196
Simple setup takes out all
the complexities setting


169
00:07:38,196 --> 00:07:38,836
up your server.


170
00:07:39,056 --> 00:07:41,426
No longer will you be asked a
bunch of complicated questions


171
00:07:41,426 --> 00:07:44,546
about networking configurations
or Apple ID configurations,


172
00:07:44,886 --> 00:07:45,826
you're asked one question


173
00:07:45,826 --> 00:07:47,636
that is an administrator
user name and password.


174
00:07:47,736 --> 00:07:50,106
And once you've entered that
credential, the Server is


175
00:07:50,106 --> 00:07:51,656
up to the races setting
itself up


176
00:07:51,656 --> 00:07:53,346
and within seconds you
have a server available


177
00:07:53,346 --> 00:07:56,976
and ready to be used.


178
00:07:56,976 --> 00:07:58,696
We also have some
brand new UI in server.


179
00:07:59,826 --> 00:08:01,586
Server looks great,
it's never look better


180
00:08:01,586 --> 00:08:03,926
and we're actually servicing
some really useful information


181
00:08:03,926 --> 00:08:05,736
that we find that people
really, really want.


182
00:08:06,366 --> 00:08:08,326
Like how your service
is behaving,


183
00:08:08,636 --> 00:08:09,916
how to access your service


184
00:08:09,916 --> 00:08:11,306
and whether your
service is on or off.


185
00:08:12,666 --> 00:08:15,456
So as an example, let's
dig in to what it takes


186
00:08:15,456 --> 00:08:17,066
to set up an OS X Server.


187
00:08:19,116 --> 00:08:21,396
So when you launch OS X
Server, you'll see this.


188
00:08:21,396 --> 00:08:23,246
And this is the Welcome
menu for the application.


189
00:08:24,046 --> 00:08:26,236
And when you click
Continue, you'll be asked


190
00:08:26,236 --> 00:08:27,486
for a user name and password.


191
00:08:29,136 --> 00:08:31,196
And once you type those
guys in, the Server goes off


192
00:08:31,196 --> 00:08:35,405
and starts doing its thing.


193
00:08:35,556 --> 00:08:36,775
And very quickly you're launched


194
00:08:36,775 --> 00:08:38,645
into the OS X Server
application.


195
00:08:39,765 --> 00:08:42,186
And in the left you'll
see all the services


196
00:08:42,186 --> 00:08:44,066
that the OS X Server
application supports.


197
00:08:44,066 --> 00:08:45,396
And on the right, you'll
see the detailed view


198
00:08:45,396 --> 00:08:46,136
for those services.


199
00:08:46,266 --> 00:08:50,956
So before we go any further,
you're probably all wondering


200
00:08:50,956 --> 00:08:52,466
about the thing that
you're here--


201
00:08:52,466 --> 00:08:55,646
you're here to hear about
which is the Xcode Service.


202
00:08:58,486 --> 00:09:00,476
The Xcode Service
when it's turned


203
00:09:00,476 --> 00:09:03,046
on in OS X Server will
start advertising itself


204
00:09:03,046 --> 00:09:05,396
across your network and it
uses Bonjour to do that.


205
00:09:05,956 --> 00:09:08,666
So any Xcode 5 user
that's sitting


206
00:09:08,666 --> 00:09:10,946
within your network will see
servers that are available--


207
00:09:10,946 --> 00:09:13,026
that have been available, made
available in your network.


208
00:09:13,136 --> 00:09:18,466
Once the service is turned on,
it's super simple to create


209
00:09:18,546 --> 00:09:22,626
and manage bots that build
both Mac and iOS projects.


210
00:09:23,126 --> 00:09:25,286
And if you're a little bit
fuzzy about Access settings,


211
00:09:26,036 --> 00:09:27,956
we do have some great ways
to configure that too.


212
00:09:29,556 --> 00:09:31,306
You can define both who
you would like to be able


213
00:09:31,306 --> 00:09:34,026
to create bots on your
server and also who you would


214
00:09:34,026 --> 00:09:35,996
like to be able to view
bots on your server.


215
00:09:35,996 --> 00:09:37,796
And you can set this up in
whatever way that you like,


216
00:09:37,886 --> 00:09:41,856
whatever way that makes
sense for your team.


217
00:09:42,066 --> 00:09:44,216
We also have some really,
really great integration


218
00:09:44,216 --> 00:09:45,446
with the Apple Developer
Program.


219
00:09:45,646 --> 00:09:47,736
And this means that you
can join your Server


220
00:09:47,866 --> 00:09:49,776
to your existing
Apple Developer team.


221
00:09:50,706 --> 00:09:53,086
And the question might be well
why I would I want to do that?


222
00:09:53,086 --> 00:09:56,056
And the answer is when your
Server joins your team,


223
00:09:56,056 --> 00:09:59,256
your Server has the opportunity
to request its own Mac


224
00:09:59,256 --> 00:10:02,506
and iOS signing identities
and also download all


225
00:10:02,506 --> 00:10:03,686
of the team provisioning
profiles


226
00:10:03,686 --> 00:10:04,756
that exist for your team.


227
00:10:04,906 --> 00:10:06,976
And this puts us in
a great position.


228
00:10:07,106 --> 00:10:09,726
And this brings me on to my
next point which is devices.


229
00:10:10,386 --> 00:10:13,226
OS X Server has great
support for devices for bots.


230
00:10:13,586 --> 00:10:15,856
So once your server is a
member of a developer team,


231
00:10:16,136 --> 00:10:17,886
you'll see devices
in OS X Server.


232
00:10:19,406 --> 00:10:21,976
You can easily add and
remove devices both to


233
00:10:21,976 --> 00:10:24,966
and from your team and of
course once you've done that,


234
00:10:25,086 --> 00:10:27,116
those devices become
available when people set


235
00:10:27,116 --> 00:10:29,686
up bots using Xcode 5
against your Server.


236
00:10:29,686 --> 00:10:35,156
Another feature that we've been
asked for a lot in OS X Server


237
00:10:35,156 --> 00:10:38,196
for the last couple of years
is source control hosting


238
00:10:38,196 --> 00:10:39,806
and we are adding
this feature too.


239
00:10:39,806 --> 00:10:43,326
So, OS X Server will support
Hosted Git repositories


240
00:10:43,536 --> 00:10:45,516
and once they're set up
with just a few clicks,


241
00:10:45,516 --> 00:10:47,596
you'll have a Hosted Git
repository that's accessible


242
00:10:47,596 --> 00:10:49,276
by SSH, HTTP or HTTPS.


243
00:10:49,276 --> 00:10:51,546
And equally you can lock


244
00:10:51,546 --> 00:10:53,846
that repository done just
the way you like it to.


245
00:10:54,516 --> 00:11:00,946
[ Applause ]


246
00:11:01,446 --> 00:11:03,806
And of course, if you're
not ready to make the move


247
00:11:03,806 --> 00:11:05,886
to hosting your source code
in an OS X Server just yet


248
00:11:06,086 --> 00:11:08,436
or you're using an external
source control system


249
00:11:08,436 --> 00:11:12,746
like your hub, then OS X Server
will equally well connect


250
00:11:12,746 --> 00:11:13,776
to those repositories too.


251
00:11:13,776 --> 00:11:16,586
So, we can connect to remote
SVN and remote Git repositories


252
00:11:17,196 --> 00:11:19,586
and we can connect to those
repositories anonymously


253
00:11:19,756 --> 00:11:21,906
with username and
password or with public,


254
00:11:21,906 --> 00:11:23,636
private SSH key pair
authentication.


255
00:11:23,886 --> 00:11:25,216
And it's really easy
to set that up too.


256
00:11:25,446 --> 00:11:29,246
So, as an example, let me take
you through what it takes to set


257
00:11:29,246 --> 00:11:31,666
up the Xcode Service
in OS X Server.


258
00:11:35,306 --> 00:11:37,416
So, when you go the Xcode
Service you see this,


259
00:11:37,416 --> 00:11:39,136
and this is the Xcode
Service panel


260
00:11:39,466 --> 00:11:40,916
and it's split into two parts.


261
00:11:41,006 --> 00:11:43,226
On the left is everything
to do with bots


262
00:11:43,486 --> 00:11:45,756
and configuring your
service and on the right,


263
00:11:45,936 --> 00:11:48,936
the second tab is everything
to do with hosted repositories


264
00:11:49,256 --> 00:11:51,816
and remote repositories that
your server can connect to.


265
00:11:52,686 --> 00:11:55,276
So, let's say we want to add our
server to our development team,


266
00:11:55,276 --> 00:11:56,246
what does it take to do that?


267
00:11:56,496 --> 00:11:57,546
And it's really easy.


268
00:11:58,266 --> 00:12:00,166
So, to do that, we click
the Add button right here


269
00:12:01,506 --> 00:12:03,496
and we'll be asked for
username and password.


270
00:12:03,576 --> 00:12:07,796
And the Server will go wide
to the Apple Developer Program


271
00:12:07,796 --> 00:12:10,266
and figure out which teams
this Apple ID is a member of.


272
00:12:10,326 --> 00:12:12,846
And because I am just a
member of one team right now,


273
00:12:12,846 --> 00:12:13,986
I'm getting this
sheet which says,


274
00:12:13,986 --> 00:12:15,146
"It looks like you're
a member of a team,


275
00:12:15,146 --> 00:12:16,846
would you like to join
your server to this team?"


276
00:12:17,076 --> 00:12:18,946
But if you're a member
of multiple teams,


277
00:12:19,426 --> 00:12:21,696
let's say you're a contractor
then you'll get a list


278
00:12:21,696 --> 00:12:22,966
of all the teams that
you're a member of


279
00:12:22,966 --> 00:12:26,036
and you can join your server
to one or all of those teams.


280
00:12:26,036 --> 00:12:30,666
You can have as many teams as
you like with the OS X Server.


281
00:12:30,746 --> 00:12:33,346
Once you've added your team,
your server will set itself up


282
00:12:33,506 --> 00:12:35,206
and you see that this
server is not a member


283
00:12:35,206 --> 00:12:36,126
of that development team.


284
00:12:37,636 --> 00:12:39,876
The next step of course
is adding some devices,


285
00:12:39,876 --> 00:12:41,166
and once you plug in devices,


286
00:12:41,196 --> 00:12:43,556
devices are able to
be used for bots.


287
00:12:44,196 --> 00:12:45,476
So, the server is
recognized here


288
00:12:45,476 --> 00:12:47,756
that this device does not
have a development that's set


289
00:12:47,756 --> 00:12:49,506
and this device is
not actually enabled


290
00:12:49,506 --> 00:12:50,636
for development for my team yet.


291
00:12:50,636 --> 00:12:52,416
So, I'm going to click on Use
for Development right here


292
00:12:53,176 --> 00:12:55,766
and the server will
quickly and easily add


293
00:12:55,766 --> 00:12:56,676
that device to my team.


294
00:12:56,806 --> 00:13:01,086
And as an example, we do
support source control hosting


295
00:13:01,086 --> 00:13:03,896
like I said and here's
what it takes to set


296
00:13:03,896 --> 00:13:05,676
up some hosting repositories.


297
00:13:05,676 --> 00:13:07,496
So we can either host
it or remote repository


298
00:13:07,496 --> 00:13:09,956
and you see some more of this
in our demo in a little second.


299
00:13:11,316 --> 00:13:14,726
So, that is the OS X
Server part of the story


300
00:13:14,776 --> 00:13:17,896
and of course there's the
Xcode 5 part and this is


301
00:13:17,896 --> 00:13:19,396
where it gets really
exciting in my opinion.


302
00:13:21,056 --> 00:13:23,386
Xcode 5 is an incredible
release.


303
00:13:23,386 --> 00:13:25,766
If you have not downloaded Xcode
5 yet, I suggest that you go


304
00:13:25,766 --> 00:13:28,086
and do so immediately,
it's really great.


305
00:13:29,466 --> 00:13:31,676
And one of the nicest
features I think


306
00:13:31,676 --> 00:13:33,906
in Xcode 5 is the
Testing Edition


307
00:13:34,186 --> 00:13:35,936
and the new Continuous
Integration service.


308
00:13:35,986 --> 00:13:38,866
So, as you go along with the
theme of Continuous Integration


309
00:13:38,866 --> 00:13:40,786
in Xcode 5, there are a
couple of things that I'd


310
00:13:40,786 --> 00:13:41,786
like to draw your attention to.


311
00:13:42,076 --> 00:13:45,386
Firstly, we have some great
new kind of preferences.


312
00:13:45,386 --> 00:13:48,956
So, it's really easy to add
an OS X Server to Xcode 5.


313
00:13:49,696 --> 00:13:51,746
You open the Preferences, type
in the username and password


314
00:13:51,746 --> 00:13:54,176
or choose guest if your
server administrator set it


315
00:13:54,176 --> 00:13:54,726
up that way.


316
00:13:55,286 --> 00:13:59,996
And you can quickly add
your server to your Xcode.


317
00:14:00,136 --> 00:14:01,686
Once you've done that, you're


318
00:14:01,686 --> 00:14:05,216
in a position whereby you
can create bots for project


319
00:14:05,216 --> 00:14:09,206
and workspaces that you
use in Xcode every day.


320
00:14:09,436 --> 00:14:11,856
Once you create a bot, the bot
show up in the log navigator


321
00:14:12,076 --> 00:14:13,736
and you see our beautiful
reports


322
00:14:13,736 --> 00:14:15,326
for Build and Test history.


323
00:14:15,436 --> 00:14:18,476
And these reports
are not just reports,


324
00:14:18,746 --> 00:14:21,356
these are fully live
interactive reports


325
00:14:21,356 --> 00:14:23,056
that have great assistant
editor support.


326
00:14:23,276 --> 00:14:25,456
So, you can select things
on the left in the report


327
00:14:25,456 --> 00:14:28,566
and you'll see the source code
that caused that error issue


328
00:14:28,566 --> 00:14:30,876
or test failure right on the
right in the assistant editor.


329
00:14:31,026 --> 00:14:35,666
And of course, this affords
you to dig in to your issues,


330
00:14:35,666 --> 00:14:36,816
or errors and you're
wondering to write


331
00:14:36,866 --> 00:14:37,526
where they're happening too.


332
00:14:37,526 --> 00:14:39,556
So you see things going wrong
in a bot and you can play


333
00:14:39,556 --> 00:14:43,276
with the source code and Xcode.


334
00:14:43,366 --> 00:14:46,646
We also have great multi-device
support in the Xcode Service


335
00:14:46,846 --> 00:14:49,116
and we have some
really great UI in Xcode


336
00:14:49,116 --> 00:14:50,376
for looking at those results.


337
00:14:50,996 --> 00:14:53,206
You can see your
test results overtime


338
00:14:53,266 --> 00:14:55,136
on across multiple
devices for your bot.


339
00:14:55,136 --> 00:14:59,616
And for each integration
that happens


340
00:14:59,616 --> 00:15:02,436
in the server you'll also see
full commit history for all


341
00:15:02,436 --> 00:15:04,736
of the commits that were
included in that build.


342
00:15:05,126 --> 00:15:07,866
And you'll see all of the log
files that you're familiar


343
00:15:07,866 --> 00:15:09,586
within Xcode today be
produced on the server


344
00:15:09,586 --> 00:15:10,466
and sent down to the client.


345
00:15:12,636 --> 00:15:14,696
You have some great
ways to view download --


346
00:15:14,696 --> 00:15:16,096
view and download archives


347
00:15:16,096 --> 00:15:17,856
of your project right
from within Xcode.


348
00:15:19,446 --> 00:15:22,656
And we also have some really
nice source control integration


349
00:15:22,936 --> 00:15:24,456
that you'll see in
our demo coming up.


350
00:15:24,656 --> 00:15:28,666
So to do that, I would
like to invite Brent Shank


351
00:15:28,896 --> 00:15:31,196
who is a software
engineer on the Xcode team.


352
00:15:31,756 --> 00:15:34,356
To come up here and show us the
Continuous Integration service.


353
00:15:35,516 --> 00:15:40,606
[ Applause ]


354
00:15:41,106 --> 00:15:41,926
>> Thanks a lot, Andrew.


355
00:15:42,256 --> 00:15:44,296
Well, I'm really excited
to be up here today,


356
00:15:44,656 --> 00:15:46,756
not just because I had
five espressos this morning


357
00:15:46,756 --> 00:15:48,076
but because I love this stuff.


358
00:15:48,436 --> 00:15:50,106
I love unit test and I loved it


359
00:15:50,106 --> 00:15:53,056
for the first time this
Continuous Integration System


360
00:15:53,216 --> 00:15:54,556
that just works.


361
00:15:54,556 --> 00:15:57,056
I don't know about you but I
spend a lot of time dealing


362
00:15:57,056 --> 00:15:58,516
with some-- the other
systems that are out there.


363
00:15:59,356 --> 00:16:01,046
And they're great but they
can be hard to set up,


364
00:16:01,166 --> 00:16:04,146
they can be hard to maintain,
what we've done is super easy


365
00:16:04,146 --> 00:16:05,696
to set up, it's super powerful.


366
00:16:06,426 --> 00:16:08,106
Let me show you what
it looks like in Xcode.


367
00:16:08,416 --> 00:16:09,956
So, the first thing
we have to do


368
00:16:09,956 --> 00:16:13,506
to get Continuous Integration
working on Xcode is we have


369
00:16:13,506 --> 00:16:16,296
to tell Xcode about an OS
X Server that's running the


370
00:16:16,296 --> 00:16:18,116
Continuous Integration
service, the Xcode Service.


371
00:16:19,116 --> 00:16:21,976
I do that by adding an
account for an OS X Server.


372
00:16:22,716 --> 00:16:25,396
And as you've heard by
now, we have three types


373
00:16:25,396 --> 00:16:26,416
of accounts in Xcode 5.


374
00:16:26,836 --> 00:16:30,826
There's one for your Apple ID
or Apple IDs, there's accounts


375
00:16:30,826 --> 00:16:32,076
for source control repositories,


376
00:16:32,116 --> 00:16:34,206
and of course there are
accounts for OS X Servers.


377
00:16:34,816 --> 00:16:38,546
And I access those through the
new Accounts preference pane.


378
00:16:39,686 --> 00:16:41,806
Okay, well here's our beautiful
new Accounts preference pane,


379
00:16:41,806 --> 00:16:43,286
you can see there, no
accounts right now.


380
00:16:43,706 --> 00:16:45,536
It's really easy to add any
of those three account types.


381
00:16:45,946 --> 00:16:47,926
I'm going to own account for
an OS X Server right now.


382
00:16:48,106 --> 00:16:49,816
I click the Add Server button.


383
00:16:50,356 --> 00:16:53,046
And as Andrew said,
any server that's set


384
00:16:53,046 --> 00:16:54,536
up on your local
network is going


385
00:16:54,536 --> 00:16:57,116
to be advertised via Bonjour
and you can add it that way.


386
00:16:57,386 --> 00:16:59,256
You can also add a
server by host name or IP,


387
00:16:59,256 --> 00:17:00,826
and that's really good
idea if you want to able


388
00:17:00,826 --> 00:17:01,946
to access it from anywhere.


389
00:17:02,566 --> 00:17:04,215
I'm going to select
this one on the list.


390
00:17:04,665 --> 00:17:09,106
Click Next and authenticate
and here we go.


391
00:17:09,106 --> 00:17:10,915
So, I've added an account for
server, it's really easy to do.


392
00:17:10,915 --> 00:17:12,906
You can add as many
servers as you want,


393
00:17:13,096 --> 00:17:14,076
OS X Servers that you want here.


394
00:17:14,455 --> 00:17:15,986
So, what does this
enable me to do?


395
00:17:16,226 --> 00:17:19,476
Well, we have some really tight
integration of source control


396
00:17:19,776 --> 00:17:21,685
with the Xcode Service
and Xcode 5.


397
00:17:22,455 --> 00:17:24,296
And part of where
we surface that is


398
00:17:24,296 --> 00:17:25,776
in the new checkout workflow.


399
00:17:26,915 --> 00:17:28,646
That's available in the
Source Control menu.


400
00:17:28,886 --> 00:17:31,276
I go there now, and
I'll click Checkout.


401
00:17:32,136 --> 00:17:33,576
So, what's in this table here?


402
00:17:33,886 --> 00:17:35,976
Well, this is going to
show me a repository


403
00:17:36,166 --> 00:17:39,446
for every source control
account that I've added


404
00:17:39,446 --> 00:17:40,276
in that preference pane.


405
00:17:40,756 --> 00:17:43,606
It's also going to show me
any Hosted Git repository


406
00:17:43,916 --> 00:17:45,586
for an OS X Server that
I have an account for.


407
00:17:45,936 --> 00:17:48,336
So as Andrew mentioned, this is
the new feature in OS X Server


408
00:17:48,336 --> 00:17:49,686
that it can Host
Git repositories.


409
00:17:50,166 --> 00:17:52,276
And you can see here, these
are all repositories that are


410
00:17:52,276 --> 00:17:53,366
on that server that I added.


411
00:17:53,766 --> 00:17:56,256
I'm going to select
BubbleGum, click Next,


412
00:17:57,316 --> 00:17:58,806
it's going to authenticate
and checkout.


413
00:17:59,286 --> 00:18:03,186
So that's a really great way to
get source code for your team.


414
00:18:04,106 --> 00:18:05,956
So, let's see what the state
of this project is like.


415
00:18:06,926 --> 00:18:11,156
I'm going to build it, and
build failed because I need


416
00:18:11,156 --> 00:18:12,076
to switch to the simulator.


417
00:18:12,076 --> 00:18:13,356
I'll do that now.


418
00:18:14,136 --> 00:18:15,906
The build succeeded,
this is great,


419
00:18:16,236 --> 00:18:17,136
let's see how the tests look.


420
00:18:18,036 --> 00:18:21,326
I'll run unit tests,
the simulator launches,


421
00:18:21,426 --> 00:18:25,926
the test are going to run,
and will they succeed?


422
00:18:25,926 --> 00:18:26,676
They didn't, they failed.


423
00:18:26,676 --> 00:18:28,126
Well, this is good, this
is what I wanted to happen.


424
00:18:28,946 --> 00:18:30,686
Well, how can we use
Continuous Integration


425
00:18:30,686 --> 00:18:32,296
to figure out what went wrong?


426
00:18:32,766 --> 00:18:34,736
So I just checked out this
project from source control,


427
00:18:34,736 --> 00:18:35,846
I didn't make any changes.


428
00:18:36,216 --> 00:18:39,066
So, this means someone else
broke this test somehow.


429
00:18:39,786 --> 00:18:43,746
So, let's use Continuous
Integration in bots


430
00:18:43,746 --> 00:18:44,966
to figure out what went wrong.


431
00:18:45,786 --> 00:18:48,206
So, we surfaced bots
from the log navigator.


432
00:18:48,846 --> 00:18:50,206
And you can see there
a couple of things here


433
00:18:50,206 --> 00:18:52,926
that you haven't seen
before in Xcode; Bubblegum


434
00:18:52,926 --> 00:18:54,936
and Bubblegum Nightly
are both bots.


435
00:18:55,556 --> 00:18:57,936
You can set up as many bots
as you want for projects,


436
00:18:57,996 --> 00:18:58,786
it's really easy to do.


437
00:18:59,166 --> 00:19:02,426
I'm going to show you
the bot for Bubblegum.


438
00:19:02,426 --> 00:19:03,146
I'll click on that here.


439
00:19:04,216 --> 00:19:05,426
So, this is the bot report.


440
00:19:06,506 --> 00:19:09,656
You can see it's really
clean, it's really beautiful


441
00:19:09,696 --> 00:19:11,746
and provides a lot
of great information.


442
00:19:12,616 --> 00:19:15,586
So, let's go from
top to bottom here.


443
00:19:15,586 --> 00:19:18,056
At the top here, any time you
want to run an integration,


444
00:19:18,056 --> 00:19:18,886
you just click Integrate Now.


445
00:19:19,126 --> 00:19:19,546
No problem.


446
00:19:19,546 --> 00:19:21,546
Usually, bots run out of
schedule, you configure them


447
00:19:21,546 --> 00:19:23,346
to run manually,
whatever you want,


448
00:19:23,346 --> 00:19:25,266
whenever you want integration,
just click that button.


449
00:19:26,046 --> 00:19:28,866
This button here, it will
let you download an archive


450
00:19:28,866 --> 00:19:30,536
or a product that
your bot created.


451
00:19:30,966 --> 00:19:32,086
And Wi-Fi let you install it


452
00:19:32,086 --> 00:19:34,436
on a device that's connected
locally, that's pretty cool.


453
00:19:34,586 --> 00:19:37,156
And finally, on this menu over
here, you can edit the bot,


454
00:19:37,406 --> 00:19:39,046
delete the bot, do
other things with it.


455
00:19:39,716 --> 00:19:42,196
And below that, in the
status counts area,


456
00:19:42,716 --> 00:19:45,366
this shows you a high
level status for your bot


457
00:19:45,366 --> 00:19:47,936
for the last integration that
is the last run of your bot.


458
00:19:48,296 --> 00:19:50,436
So if there are any errors or
warnings, you'll see that here.


459
00:19:50,966 --> 00:19:53,676
If you chose settle the bot
from-- on static analysis,


460
00:19:54,106 --> 00:19:55,316
you'll see the status
of that there.


461
00:19:55,756 --> 00:19:58,256
And if the bot is running
tests, you'll see the status


462
00:19:58,256 --> 00:19:59,116
of those unit tests there.


463
00:20:00,236 --> 00:20:03,836
Below that in the build history
chart, you see the status


464
00:20:03,836 --> 00:20:06,246
of all the integrations that are
displayed here and we show you


465
00:20:06,246 --> 00:20:07,716
as many integrations
as we can show you.


466
00:20:08,236 --> 00:20:10,146
So, what you want to
see here is you want


467
00:20:10,146 --> 00:20:13,006
to see there is a no issues
line with the green checkmark.


468
00:20:13,406 --> 00:20:15,776
That means everything went well.


469
00:20:15,866 --> 00:20:18,466
You build bots and there
were no errors, warnings


470
00:20:18,466 --> 00:20:19,596
or static analysis issues.


471
00:20:20,256 --> 00:20:22,746
But if you do have some, that's
okay, that's what this is for,


472
00:20:23,066 --> 00:20:24,736
they'll show up in
this stock bars


473
00:20:25,366 --> 00:20:28,756
and these colors are obvious to
you, warnings on yellow, blue--


474
00:20:28,756 --> 00:20:31,496
static analysis uses-- are in
blue and errors are in red.


475
00:20:32,016 --> 00:20:34,296
And I can click this bar, I can
get a little more information


476
00:20:34,296 --> 00:20:36,046
about what's going on,
and there's even a button


477
00:20:36,046 --> 00:20:36,556
that will take me


478
00:20:36,556 --> 00:20:38,976
to the integration summary
for this integration.


479
00:20:40,426 --> 00:20:41,176
Let's keep going down.


480
00:20:41,566 --> 00:20:44,156
The chart below here shows me
the status of the unit tests


481
00:20:44,456 --> 00:20:46,126
for all the integrations
that are displayed here


482
00:20:46,126 --> 00:20:48,816
and the goal here is to see
these full high green bars.


483
00:20:49,176 --> 00:20:50,736
That means you had the
unit tests, they run


484
00:20:50,736 --> 00:20:52,196
and they all run successfully.


485
00:20:53,746 --> 00:20:57,466
Below that in the integration
details area, this shows you all


486
00:20:57,466 --> 00:20:59,186
of the crucial information
from the logs


487
00:20:59,186 --> 00:21:01,016
that were created
when this bot run.


488
00:21:01,316 --> 00:21:02,446
So you made-- the only sub--


489
00:21:02,526 --> 00:21:05,936
logs for the build and you may
have logs for analysis issues


490
00:21:05,936 --> 00:21:06,886
or test failures


491
00:21:06,886 --> 00:21:08,686
if you configure your
bot to do those things.


492
00:21:09,626 --> 00:21:11,186
What's really neat
about this view is


493
00:21:11,186 --> 00:21:14,086
that it's fully integrated
with all of the navigation


494
00:21:14,086 --> 00:21:15,176
that you used to in Xcode.


495
00:21:15,596 --> 00:21:17,066
So what does that mean?


496
00:21:17,136 --> 00:21:18,946
I'll make my window a
little wider here to--


497
00:21:18,946 --> 00:21:21,786
so you can see that.


498
00:21:21,786 --> 00:21:24,786
So that means when I open the
assistant editor which I do


499
00:21:25,156 --> 00:21:27,256
from the tool bar and this is


500
00:21:27,256 --> 00:21:29,766
where I get a left side
by side editor view.


501
00:21:29,766 --> 00:21:32,396
The left editor essentially
acts as the master editor


502
00:21:32,726 --> 00:21:35,066
when the assistant editor is
in the Reference Files Mode.


503
00:21:35,386 --> 00:21:37,176
I can click one of
these failures down here


504
00:21:37,176 --> 00:21:38,706
and Xcode will take me
right to the source code


505
00:21:38,706 --> 00:21:39,596
where this problem occurred.


506
00:21:40,336 --> 00:21:43,306
So this is a really fast
and great way to get


507
00:21:43,306 --> 00:21:44,106
to the heart of the problem.


508
00:21:45,426 --> 00:21:48,376
So now we're using bot to
figure out what went wrong.


509
00:21:48,696 --> 00:21:50,996
We see unit tests
here and we can dig


510
00:21:51,296 --> 00:21:54,906
into the bot a little
further to diagnose the issue.


511
00:21:54,906 --> 00:21:59,236
I'm pretty sure Andrew
caused this problem by one


512
00:21:59,266 --> 00:22:01,666
of his classic late night
integration sessions


513
00:22:02,016 --> 00:22:03,496
where he wasn't as
careful as he usually


514
00:22:03,496 --> 00:22:04,556
as about checking things in.


515
00:22:04,746 --> 00:22:08,086
I can explore that a little bit
more if I click the bar here--


516
00:22:08,936 --> 00:22:10,496
that's never happened before.


517
00:22:11,756 --> 00:22:14,436
This will jump me right
into the Integration Report


518
00:22:14,946 --> 00:22:17,146
and you can see there
are four tabs here.


519
00:22:17,356 --> 00:22:20,256
One of the tabs is the Commits
tab and indeed when I go


520
00:22:20,256 --> 00:22:23,056
to that I see the Commit Log
for this particular integration.


521
00:22:23,446 --> 00:22:25,086
And looks like Andrew is
messing with me a little bit


522
00:22:25,086 --> 00:22:26,806
and he deliberately
broke this field.


523
00:22:27,156 --> 00:22:31,816
I'm going to go back and I'm
just going to change this


524
00:22:32,416 --> 00:22:35,776
so I know that there are
actually are five tea-flavored


525
00:22:35,776 --> 00:22:36,856
colors of Bubblegum here.


526
00:22:38,596 --> 00:22:46,406
So I'll just change this and
I'm going to save and I'm going


527
00:22:46,406 --> 00:22:48,606
to check this in so we
can run an integration


528
00:22:48,606 --> 00:22:49,496
and see what that looks like.


529
00:22:51,836 --> 00:22:56,166
Fixing tests, commit.


530
00:22:56,476 --> 00:22:57,436
Okay. So while that's running,


531
00:22:57,666 --> 00:22:59,786
let's explore the bot
report a little bit more


532
00:23:00,046 --> 00:23:01,146
and to close this is another.


533
00:23:02,236 --> 00:23:04,556
So there are two tabs, there is
a Summary Tab that's we've been


534
00:23:04,556 --> 00:23:06,396
looking at and there's
the Test Tab


535
00:23:06,676 --> 00:23:09,056
and this is a really great view
because it shows you the history


536
00:23:09,056 --> 00:23:11,476
of the unit tests for
all the integrations


537
00:23:11,566 --> 00:23:12,476
that we can display here.


538
00:23:12,626 --> 00:23:13,816
We can display a
lot of integrations.


539
00:23:14,586 --> 00:23:16,336
You saw this this morning,
this is a really great view


540
00:23:16,336 --> 00:23:19,076
because it shows you at a glance
how a particular unit test is


541
00:23:19,076 --> 00:23:21,536
doing and you can see most of
mine are doing really well.


542
00:23:21,796 --> 00:23:24,036
I can filter this table to show
me just the ones that failed


543
00:23:24,136 --> 00:23:26,706
and if there's a particular test
that's been giving you trouble


544
00:23:26,996 --> 00:23:28,926
and you know its name, you
might type that in here


545
00:23:29,346 --> 00:23:30,696
and filter the table even more.


546
00:23:31,246 --> 00:23:33,646
Of course, over time, your
server is going to build


547
00:23:33,986 --> 00:23:35,906
up history for thousands
of integrations


548
00:23:36,376 --> 00:23:39,146
and you need an ability to
go back and forth in time


549
00:23:39,146 --> 00:23:40,126
to check these things out.


550
00:23:40,376 --> 00:23:42,336
So you can see how this
interesting trend line here


551
00:23:42,336 --> 00:23:44,336
where I had most of
my unit test breaking


552
00:23:44,336 --> 00:23:47,176
and then they all got better
so I can move the loop


553
00:23:47,356 --> 00:23:49,856
in this graph and I can
slope just the integrations


554
00:23:49,856 --> 00:23:50,396
like here about.


555
00:23:50,396 --> 00:23:53,976
And these views also integrated
with the assistant editor


556
00:23:54,416 --> 00:23:58,386
so I can bring it up again
and when I select a test case,


557
00:23:58,386 --> 00:24:01,686
it will show me the source code
for that particular test case.


558
00:24:01,896 --> 00:24:03,006
I think that's really great.


559
00:24:03,336 --> 00:24:06,736
So let's jump back to the
report for the integration.


560
00:24:06,916 --> 00:24:08,376
I can also see the
latest integrations


561
00:24:08,376 --> 00:24:09,196
in the log navigator.


562
00:24:09,496 --> 00:24:11,656
I'm going to click
this one here.


563
00:24:12,206 --> 00:24:14,406
Let's just explore
this a little more.


564
00:24:15,566 --> 00:24:17,406
The Summary tab is very similar


565
00:24:17,406 --> 00:24:19,016
to the Summary tab
for the bot itself.


566
00:24:19,016 --> 00:24:20,436
It shows you the
high level status.


567
00:24:20,576 --> 00:24:22,296
It shows you the important
integration details.


568
00:24:22,886 --> 00:24:24,836
There's also the Logs tab


569
00:24:24,836 --> 00:24:26,886
and that shows you the
exact same Build logs


570
00:24:26,886 --> 00:24:27,336
that you would see


571
00:24:27,336 --> 00:24:31,126
if you performed this
particular bot run locally,


572
00:24:31,186 --> 00:24:32,516
if you perform this
build locally.


573
00:24:33,046 --> 00:24:33,846
So this is really great.


574
00:24:33,846 --> 00:24:35,436
You can have the server
storing these logs


575
00:24:35,436 --> 00:24:36,846
for thousands of integrations.


576
00:24:36,846 --> 00:24:37,976
You don't have to
store them locally.


577
00:24:38,326 --> 00:24:40,346
Whenever you needed that data
and you want to look at it,


578
00:24:40,346 --> 00:24:41,996
Xcode will download it
for you and that's one


579
00:24:41,996 --> 00:24:44,616
of the great benefits of having
a server that's performing your


580
00:24:44,616 --> 00:24:45,496
continuous integration.


581
00:24:45,706 --> 00:24:47,406
But let's look at the Test tab.


582
00:24:47,406 --> 00:24:51,286
Starting this is the most
exciting part of this feature.


583
00:24:51,806 --> 00:24:54,356
So what you can see here,
there are four devices listed.


584
00:24:54,636 --> 00:24:56,206
They're actually all
right here connected


585
00:24:57,026 --> 00:25:01,036
and what this means is the Xcode
Service is running unit tests


586
00:25:01,146 --> 00:25:02,496
on all these devices.


587
00:25:02,796 --> 00:25:03,456
Now, think about this.


588
00:25:03,576 --> 00:25:06,076
There's never been a way to
do this automatically before.


589
00:25:06,456 --> 00:25:09,026
There's never been a way
for Xcode to run unit tests


590
00:25:09,026 --> 00:25:10,606
on multiple iOS devices at once.


591
00:25:10,936 --> 00:25:11,836
And this is a huge deal.


592
00:25:12,176 --> 00:25:14,696
If you want to see how your
product performs with iOS 7,


593
00:25:14,696 --> 00:25:16,746
for example, whether up
on one of your devices,


594
00:25:17,066 --> 00:25:19,696
plug it into your OS X Server
that's running the continues


595
00:25:19,696 --> 00:25:21,486
integration service
and you'll get


596
00:25:21,486 --> 00:25:22,986
to see you get a
high level overview


597
00:25:23,036 --> 00:25:26,876
of how your software is
doing on that new OS.


598
00:25:26,876 --> 00:25:29,996
I think that's very cool for
people who have been writing


599
00:25:29,996 --> 00:25:32,206
in the test and have
a lot of time


600
00:25:32,206 --> 00:25:33,296
and energy invested in them.


601
00:25:33,746 --> 00:25:36,116
This is going to immediately
add a lot of value to them.


602
00:25:36,116 --> 00:25:38,556
And for those of you who
haven't been writing in a test,


603
00:25:38,556 --> 00:25:40,176
I think this is a
great reason to start.


604
00:25:41,136 --> 00:25:43,456
And, again, this
is all connected


605
00:25:43,456 --> 00:25:46,236
with the assistant editor so
you can click Test Case and jump


606
00:25:46,236 --> 00:25:46,766
to the source code


607
00:25:46,766 --> 00:25:47,926
and do everything you
would expect to do.


608
00:25:49,316 --> 00:25:50,686
So we've explored
the bot report,


609
00:25:50,686 --> 00:25:52,496
we've explored the bot
integration report,


610
00:25:53,076 --> 00:25:55,136
but what does it like
to create a new bot?


611
00:25:55,996 --> 00:25:59,356
And to do that-- and I
should create a new project.


612
00:25:59,706 --> 00:26:01,636
I'll show you what it looks
like from the beginning.


613
00:26:02,406 --> 00:26:04,286
So, I'll put in an
Xcode project,


614
00:26:04,286 --> 00:26:07,636
I would just create a simple
iOS Utility Application--


615
00:26:08,076 --> 00:26:10,746
I'll just call it Demo App.


616
00:26:11,026 --> 00:26:17,486
So in this Safe panel
here, you probably noticed


617
00:26:17,516 --> 00:26:19,936
for a while an Xcode
4 has offered


618
00:26:19,936 --> 00:26:22,006
to create a local GIT
repository for this project


619
00:26:22,006 --> 00:26:23,396
and that's a really
great thing to do.


620
00:26:24,196 --> 00:26:26,866
But now if you've added an
account for an OS X Server


621
00:26:26,976 --> 00:26:29,826
in the Accounts Prep Pane,
it will list any server here.


622
00:26:30,416 --> 00:26:33,236
And if I choose this server
which I'll do and click Create,


623
00:26:33,236 --> 00:26:35,966
let me draw your attention
to the Activity View up here.


624
00:26:37,416 --> 00:26:39,006
What's going to happen is
Xcode is going to create


625
00:26:39,006 --> 00:26:40,206
that local GIT repository.


626
00:26:40,716 --> 00:26:43,336
It's going to create the remote
GIT repository and it's going


627
00:26:43,336 --> 00:26:44,186
to push it up to the server.


628
00:26:44,586 --> 00:26:46,196
So now you have the
best of both worlds,


629
00:26:46,196 --> 00:26:48,266
you have a local GIT
repository, your Scratch Pad


630
00:26:48,266 --> 00:26:50,436
and when you're ready to show
those changes into your team,


631
00:26:50,686 --> 00:26:53,076
there's already a server that's
backing up your data for you,


632
00:26:53,286 --> 00:26:56,456
you push those changes up there
and your team has access to it.


633
00:26:57,646 --> 00:26:59,516
This is really great.


634
00:26:59,716 --> 00:27:02,496
Okay. So we created a new
project, let's create a bot.


635
00:27:02,796 --> 00:27:05,746
We do that in a Product Menu,
there's a Create Bot item.


636
00:27:06,636 --> 00:27:09,296
So this is a new project
so there's only one scheme.


637
00:27:09,806 --> 00:27:12,476
You probably have a few schemes
in your project and in order


638
00:27:12,476 --> 00:27:15,056
for the bot to build
your project,


639
00:27:15,056 --> 00:27:15,876
you need to share the scheme.


640
00:27:15,876 --> 00:27:18,326
We can do that automatically
for you but--


641
00:27:18,326 --> 00:27:20,466
and you should keep this check
but I'm going to uncheck it


642
00:27:20,466 --> 00:27:22,666
so I can show you-- I want you
to understand what this means.


643
00:27:22,966 --> 00:27:24,126
I'll show you how
to do this manually.


644
00:27:24,806 --> 00:27:29,006
I want this bot to run my unit
tests whenever anyone checks


645
00:27:29,006 --> 00:27:31,776
in codes so we'll call that,
I'm choosing the server here


646
00:27:32,726 --> 00:27:36,016
and I'll uncheck that
particular button there.


647
00:27:36,616 --> 00:27:37,846
Okay. While-- We'll
keep that checks


648
00:27:37,846 --> 00:27:38,816
since it will let me otherwise


649
00:27:38,816 --> 00:27:40,736
but I'll still let you
know, help you out.


650
00:27:41,076 --> 00:27:42,736
I want this bot to
run on Commit.


651
00:27:42,996 --> 00:27:45,366
Again, you have your choice here
when you want your bot to run,


652
00:27:45,366 --> 00:27:46,666
and you can edit this
at any time later.


653
00:27:47,016 --> 00:27:50,906
And as Andrew said, you get to
decide what you want your bot


654
00:27:50,906 --> 00:27:53,436
to do so of course your
bot is always going


655
00:27:53,436 --> 00:27:54,176
to build your projects.


656
00:27:54,176 --> 00:27:56,416
So you're always going to know
if there are warnings or errors,


657
00:27:56,966 --> 00:27:58,386
but these three other
things are optional.


658
00:27:58,676 --> 00:28:01,166
You may or may not want your
bot to run static analysis,


659
00:28:01,166 --> 00:28:02,926
to perform tests or
to build archives.


660
00:28:03,456 --> 00:28:07,316
In this case for this bot, I
just want it to run unit tests


661
00:28:07,316 --> 00:28:08,486
so I'll uncheck these two


662
00:28:08,866 --> 00:28:10,846
and we perform test
action intact there.


663
00:28:11,396 --> 00:28:14,426
I'll click Next, and because
I told that I want to build--


664
00:28:14,426 --> 00:28:15,846
to run unit tests,
it's going to ask me


665
00:28:15,846 --> 00:28:17,916
which iOS devices I
want it to run on.


666
00:28:18,206 --> 00:28:19,846
I have four here and
I think they should--


667
00:28:19,846 --> 00:28:21,006
the test should be
run on all of those


668
00:28:21,006 --> 00:28:22,526
but you can configure
this the way you want.


669
00:28:22,716 --> 00:28:27,226
I'll click Next and, again,
so what happens by default


670
00:28:27,226 --> 00:28:28,896
when the build fails
is anyone who committed


671
00:28:28,896 --> 00:28:30,976
since the last integration
will get an e-mail


672
00:28:30,976 --> 00:28:32,546
but you can configure
this however you want.


673
00:28:32,706 --> 00:28:35,406
So it's just a few
clicks and we've created


674
00:28:35,406 --> 00:28:37,216
in a bot for this project.


675
00:28:37,786 --> 00:28:40,896
Yes, the bot scheme
needs to be committed.


676
00:28:41,086 --> 00:28:42,996
Exactly. So what
this is all about?


677
00:28:42,996 --> 00:28:47,006
Well, let's go into the manage
scheme sheet here for a second


678
00:28:47,436 --> 00:28:48,936
and you can see this
check box is checked


679
00:28:49,086 --> 00:28:50,466
which is a good thing
in this case.


680
00:28:50,686 --> 00:28:52,846
So I need the scheme
to be shared


681
00:28:53,166 --> 00:28:54,696
so that the bot can
build my product


682
00:28:54,696 --> 00:28:58,006
and my default schemes are
not shared so that check box


683
00:28:58,046 --> 00:29:00,036
that I left checked in
the Assistant, that's good


684
00:29:00,336 --> 00:29:02,956
but if you don't do that, you
can always show your scheme


685
00:29:03,046 --> 00:29:04,246
into the Manage Scheme
sheet here.


686
00:29:05,136 --> 00:29:08,236
I'll click Okay and when I do
that Xcode change to the files


687
00:29:08,236 --> 00:29:10,036
that are involved in the
schemes so I need to commit


688
00:29:10,036 --> 00:29:13,156
and push those up to the
server and you can see here


689
00:29:13,206 --> 00:29:15,416
in the Commit sheet
there's these things related


690
00:29:15,416 --> 00:29:18,296
to the scheme you don't need
to worry about what they are


691
00:29:18,676 --> 00:29:22,066
but you do need to do this in
order for the bot field to run.


692
00:29:22,766 --> 00:29:25,736
So I've committed those
changes and I can force it


693
00:29:25,736 --> 00:29:29,666
to integrate now and you can
see the integration has started.


694
00:29:30,576 --> 00:29:33,436
So really easy to create a
new bot with the rich sourcing


695
00:29:33,436 --> 00:29:35,476
for integration that
we have with these--


696
00:29:35,736 --> 00:29:37,586
these two parts of this
system that's why it's easy


697
00:29:37,586 --> 00:29:39,826
to get source control
and get source code


698
00:29:39,926 --> 00:29:42,386
and to push source code
back up to the server.


699
00:29:43,056 --> 00:29:45,646
And I can see here,
you can't see it


700
00:29:45,716 --> 00:29:46,616
but test are already running


701
00:29:46,616 --> 00:29:48,146
on these devices
which is very cool.


702
00:29:48,756 --> 00:29:50,396
So with that, I'm going
to give it back to Andrew


703
00:29:50,396 --> 00:29:52,436
so he can show you
more about the web UI


704
00:29:52,436 --> 00:29:53,836
where we surface
all these things to.


705
00:29:54,246 --> 00:29:54,586
Thank you.


706
00:29:55,516 --> 00:30:01,536
[ Applause ]


707
00:30:02,036 --> 00:30:02,726
>> Thank you, Brent.


708
00:30:04,516 --> 00:30:06,276
Could we switch back
the slides, Brent?


709
00:30:06,416 --> 00:30:06,566
>> Yes.


710
00:30:07,066 --> 00:30:07,256
>> Please?


711
00:30:08,896 --> 00:30:10,066
You get my demo away.


712
00:30:11,586 --> 00:30:14,746
Okay. So, Brent just showed
you how awesome the Continuous


713
00:30:14,746 --> 00:30:16,516
Integration support
as an Xcode 5.


714
00:30:16,516 --> 00:30:20,736
And just to recap what you
saw, we have a newer kind


715
00:30:20,736 --> 00:30:22,596
of Preferences tab and
the Preferences pane.


716
00:30:22,776 --> 00:30:25,346
So it's really easy to
add and use server kinds


717
00:30:25,346 --> 00:30:26,386
to the Xcode preferences.


718
00:30:27,006 --> 00:30:30,236
You can connect to
servers using username


719
00:30:30,236 --> 00:30:32,286
and password or as a guest.


720
00:30:33,096 --> 00:30:34,836
And once you've done
that, the server shows up.


721
00:30:34,836 --> 00:30:36,106
And once you have a server,


722
00:30:36,106 --> 00:30:38,006
you're now in a position
whereby you can check


723
00:30:38,006 --> 00:30:40,596
out the source code that's
hosted on those servers.


724
00:30:40,596 --> 00:30:42,026
Xcode will automatically figure


725
00:30:42,026 --> 00:30:43,756
out what source repositories
exist on the server


726
00:30:43,756 --> 00:30:44,756
and offer to check those out.


727
00:30:45,866 --> 00:30:48,856
So we chose the Bubblegum,
I'm going to check it out.


728
00:30:48,856 --> 00:30:51,766
And by clicking in the
log navigator on the bot,


729
00:30:51,886 --> 00:30:53,596
we could see the
bot summary report.


730
00:30:53,736 --> 00:30:55,796
And here you see all the
beautiful test information


731
00:30:55,796 --> 00:30:56,486
for your bot.


732
00:30:56,486 --> 00:30:59,126
Along the top, you see
so many kinds for errors,


733
00:30:59,126 --> 00:31:00,856
issues and warnings
and test results.


734
00:31:01,536 --> 00:31:04,766
In the center you see summary
grafts for your build history


735
00:31:04,766 --> 00:31:06,386
and your test result history.


736
00:31:06,386 --> 00:31:08,906
And at the bottom you see
some integration details


737
00:31:08,906 --> 00:31:10,756
for the most recent integration.


738
00:31:13,186 --> 00:31:15,576
Expanding the side bar you
see each of the integrations


739
00:31:15,576 --> 00:31:16,716
that this bot has performed.


740
00:31:17,276 --> 00:31:20,546
I'm looking at the test results
view, you see a beautiful graph


741
00:31:20,546 --> 00:31:23,596
of your test results over time
for all of your integrations.


742
00:31:24,096 --> 00:31:27,356
And of course the best way is


743
00:31:27,356 --> 00:31:28,716
that we support multiple
devices.


744
00:31:28,716 --> 00:31:30,406
So when you click in a
particular integration and look


745
00:31:30,406 --> 00:31:32,846
at the test tab for bot
integration, you'll see all


746
00:31:32,846 --> 00:31:34,746
of the tests split
out by device.


747
00:31:34,746 --> 00:31:36,066
You could see which
tests are passing,


748
00:31:36,066 --> 00:31:38,296
which tests are failing
on which device.


749
00:31:39,756 --> 00:31:42,086
And of course we have the
assistant editor support


750
00:31:42,086 --> 00:31:42,476
as well.


751
00:31:42,476 --> 00:31:44,586
So when you're digging around
in the test result table,


752
00:31:45,306 --> 00:31:46,546
you can see the information


753
00:31:46,546 --> 00:31:47,886
of the assistant
editor on the right.


754
00:31:49,816 --> 00:31:52,546
Finally, Brent showed you what
it takes to set up a new project


755
00:31:53,226 --> 00:31:56,746
and host out source
code on an OS X Server.


756
00:31:56,786 --> 00:32:02,206
And with just a few clicks, it
created a rebuild and it was


757
00:32:02,206 --> 00:32:04,346
on the server ready for him and
the rest of his team to use.


758
00:32:04,556 --> 00:32:07,736
So the last thing that
I would like to talk


759
00:32:07,736 --> 00:32:09,806
about today is our
web application.


760
00:32:09,806 --> 00:32:11,386
And the web application
is really designed


761
00:32:11,386 --> 00:32:12,736
for everyone who's involved


762
00:32:12,736 --> 00:32:15,246
in the development process
that's not necessarily living


763
00:32:15,246 --> 00:32:16,506
inside Xcode all day.


764
00:32:16,506 --> 00:32:19,576
And I'm sure there are lot
of people that you work


765
00:32:19,576 --> 00:32:21,206
with that fall in
to this category.


766
00:32:21,206 --> 00:32:23,446
There are localizers,
there are testers,


767
00:32:23,516 --> 00:32:25,626
there are project
managers if you're lucky


768
00:32:25,626 --> 00:32:26,696
or unlucky to have one.


769
00:32:27,076 --> 00:32:31,036
But the web application
becomes a really useful feature


770
00:32:31,036 --> 00:32:31,696
for those people.


771
00:32:32,896 --> 00:32:34,986
The web application
will give you a view


772
00:32:34,986 --> 00:32:36,966
of your project outside
of Xcode.


773
00:32:36,966 --> 00:32:40,136
So Xcode will only show you bots
that are relevant for projects


774
00:32:40,136 --> 00:32:42,126
and workspaces that you
currently have open.


775
00:32:42,806 --> 00:32:44,906
The server will give you
a server-centric view


776
00:32:44,906 --> 00:32:45,836
of these projects.


777
00:32:45,836 --> 00:32:49,006
So you see a list of all the
bots that live on your server.


778
00:32:51,626 --> 00:32:55,266
And you can easily add and edit
bots right from the web for all


779
00:32:55,266 --> 00:32:57,516
of the repositories that your
server already knows how to talk


780
00:32:57,516 --> 00:32:59,146
to so those can be
host of repositories


781
00:32:59,146 --> 00:33:00,206
or remote repositories


782
00:33:00,206 --> 00:33:03,866
that you've already
connected up in server app.


783
00:33:04,026 --> 00:33:07,046
And once you click on a bot, you
see the same beautiful reports


784
00:33:07,046 --> 00:33:09,636
that we have on Xcode.


785
00:33:09,636 --> 00:33:12,526
One feature that's unique to the
web application is the archive C


786
00:33:12,526 --> 00:33:14,716
and admittedly this feature
that we stole from one


787
00:33:14,716 --> 00:33:15,806
of our internal systems.


788
00:33:15,896 --> 00:33:19,316
And this becomes the destination
place for your tester


789
00:33:19,316 --> 00:33:22,356
in the morning to go and get a
list of the most recent products


790
00:33:22,356 --> 00:33:23,916
or archive for your application.


791
00:33:24,156 --> 00:33:26,736
So there's obviously archive
in product downloading.


792
00:33:27,226 --> 00:33:28,776
But we have some really
nice features too.


793
00:33:29,396 --> 00:33:30,666
There's build flagging.


794
00:33:30,666 --> 00:33:33,776
So you can flag a build as being
a great build or flag a build


795
00:33:33,776 --> 00:33:35,106
as being a terrible
build depending


796
00:33:35,106 --> 00:33:36,586
on your definition
of being flagged.


797
00:33:36,586 --> 00:33:39,516
And of course we
support build printing.


798
00:33:39,516 --> 00:33:41,466
So if you know that you
have a build that's sitting


799
00:33:41,466 --> 00:33:43,406
in your list that you maybe
don't want to keep around


800
00:33:43,406 --> 00:33:45,386
or that you know was a
particularly bad build,


801
00:33:45,436 --> 00:33:47,066
you can instantly delete
it just with one click.


802
00:33:47,116 --> 00:33:52,146
And probably my favorite feature
of the web application is


803
00:33:52,146 --> 00:33:56,396
that if you point an iOS device
at the web app with one tap.


804
00:33:56,396 --> 00:33:58,706
You can install a
build application


805
00:33:58,706 --> 00:34:00,736
from the Xcode Service
right in your iOS device.


806
00:34:01,516 --> 00:34:07,936
[ Applause ]


807
00:34:08,436 --> 00:34:11,025
And then we have another great
feature that we call Scoreboard.


808
00:34:11,746 --> 00:34:14,106
And you've all seen it I'm sure
but I'll save that one for demo.


809
00:34:14,406 --> 00:34:17,246
So with that, let's look at the
demo of the new web application


810
00:34:17,315 --> 00:34:18,485
and the Xcode Service.


811
00:34:18,626 --> 00:34:22,616
So here I am in Safari
and to get


812
00:34:22,616 --> 00:34:24,726
to the web application you've
got a number of options.


813
00:34:25,126 --> 00:34:28,096
Inside Xcode when you're looking
at the bot we have a Gear menu


814
00:34:28,096 --> 00:34:29,896
and you can click on the Gear
menu there's a handy link


815
00:34:29,896 --> 00:34:31,366
in there and it takes
you right to the web app.


816
00:34:32,696 --> 00:34:35,235
If you have a host name for
your server and that may be,


817
00:34:35,295 --> 00:34:37,966
you know, a local host name
for your server, you can visit


818
00:34:37,966 --> 00:34:39,775
that hosting and it will take
you right to this web app.


819
00:34:40,206 --> 00:34:42,126
And also if you're in
server app, we have a link


820
00:34:42,126 --> 00:34:43,436
that takes you right
to the web app too.


821
00:34:43,696 --> 00:34:48,025
So this is the bot list
for the web application.


822
00:34:48,025 --> 00:34:50,476
And you'll see that we have
an alphanumeric sorted list


823
00:34:50,476 --> 00:34:51,436
of the bots down the left


824
00:34:52,005 --> 00:34:54,166
and you see some great
information for those bots.


825
00:34:54,966 --> 00:34:57,486
We see we have a number of bots
here and a number of states.


826
00:34:57,546 --> 00:35:00,176
Some bots are succeeding,
some bots are queued ready


827
00:35:00,176 --> 00:35:02,626
to be built, some bots
are failing tests,


828
00:35:02,966 --> 00:35:05,356
some bots actually have
catastrophic build failures


829
00:35:05,356 --> 00:35:05,646
right now.


830
00:35:06,576 --> 00:35:08,896
Along the top you see some
summary information for the bots


831
00:35:08,896 --> 00:35:09,896
that are running on your server.


832
00:35:09,896 --> 00:35:12,456
So the most recent bot that
Brent actually just created


833
00:35:12,456 --> 00:35:14,486
in run, we could see
it has zero errors,


834
00:35:14,486 --> 00:35:15,736
warnings, or analysis issues.


835
00:35:16,286 --> 00:35:18,566
The Bubblegum Nightly
bot just kicked off


836
00:35:18,566 --> 00:35:20,216
and on the right you can see


837
00:35:20,216 --> 00:35:22,496
that we have handy download
links for the Bubblegum bot too.


838
00:35:23,776 --> 00:35:26,806
So let's click on the
Bubblegum bot and explore


839
00:35:26,806 --> 00:35:27,936
that in a little
bit more detail.


840
00:35:30,476 --> 00:35:32,486
So here you see we
have the same reports


841
00:35:32,486 --> 00:35:33,676
that you see inside of Xcode.


842
00:35:34,626 --> 00:35:36,436
We have five great
tabs along the top,


843
00:35:36,706 --> 00:35:37,906
they give you summary
information,


844
00:35:37,906 --> 00:35:40,196
information about your Tests,
information about your Commits,


845
00:35:40,196 --> 00:35:42,646
your Logs and of course the
Archives page which is unique


846
00:35:42,646 --> 00:35:43,576
to the web application.


847
00:35:43,626 --> 00:35:46,276
I can click around and just


848
00:35:46,276 --> 00:35:48,546
like in Xcode I can see
the full test history


849
00:35:48,546 --> 00:35:50,296
for my project right
here on the web browser.


850
00:35:50,416 --> 00:35:53,736
And I can scroll back in
time just like in Xcode


851
00:35:53,786 --> 00:35:55,956
to select any range of
test brought up that I'd


852
00:35:55,956 --> 00:35:57,046
like to explore a
little bit more.


853
00:35:59,026 --> 00:36:00,646
So you can see here
that our project went


854
00:36:00,646 --> 00:36:02,386
through a particularly
rough patch of having a lot


855
00:36:02,386 --> 00:36:04,206
of failing test and then
we slowly brought that back


856
00:36:04,206 --> 00:36:05,326
in to zero again which is great.


857
00:36:05,406 --> 00:36:07,206
That's exactly what
we wanted to do.


858
00:36:08,076 --> 00:36:10,676
We have the Commits tabs and the
Logs tab which I'll skip over,


859
00:36:10,726 --> 00:36:12,236
and I'll go straight
to the Archives tab


860
00:36:12,236 --> 00:36:14,096
because that's the most
interesting part of this--


861
00:36:14,256 --> 00:36:15,176
part of the web application.


862
00:36:15,396 --> 00:36:19,746
So the Archives tab is a time
sorted list of the products


863
00:36:19,806 --> 00:36:22,346
and the archives for all the
bots that live on your server.


864
00:36:22,346 --> 00:36:24,206
And each bot has its
own Archive's page.


865
00:36:25,406 --> 00:36:28,456
You can see that on the left
we have some great flag icons.


866
00:36:28,736 --> 00:36:30,936
So I know that yesterday's
build was a great build.


867
00:36:31,226 --> 00:36:33,686
We shipped the build for
WWDC of the Bubblegum app


868
00:36:33,806 --> 00:36:36,026
and we know it was good so
I'm going to mark that one


869
00:36:36,026 --> 00:36:37,776
as a flag build,
such a great build.


870
00:36:39,436 --> 00:36:42,106
And also if have
build here that I know


871
00:36:42,106 --> 00:36:44,286
that the day before yesterday
was maybe not a great build.


872
00:36:44,286 --> 00:36:46,306
I can easily click the
trashcan here and just delete


873
00:36:46,756 --> 00:36:47,656
that build with one click.


874
00:36:50,426 --> 00:36:51,896
The other feature that we have


875
00:36:51,986 --> 00:36:54,236
in the web application
is Scoreboard.


876
00:36:54,346 --> 00:36:57,916
And Scoreboard is designed
for the big screen TV


877
00:36:58,486 --> 00:37:01,546
or spare monitor presentation
of all the bots in your server.


878
00:37:02,036 --> 00:37:04,496
So if you have an open
area in your workspace,


879
00:37:04,496 --> 00:37:06,766
like a coffee area or you have
some space in your development


880
00:37:06,766 --> 00:37:09,146
and this is a perfect candidate
for mounting a display in a wall


881
00:37:09,416 --> 00:37:10,666
and having some fun with bots.


882
00:37:10,666 --> 00:37:12,026
We do this at Apple
and this is great.


883
00:37:12,196 --> 00:37:14,946
So there are two ways
to get into Scoreboard.


884
00:37:15,176 --> 00:37:18,166
First, I can click on the
navigation icon right here


885
00:37:18,166 --> 00:37:19,586
and you can see we
have a Scoreboard link.


886
00:37:19,586 --> 00:37:21,006
But we love Scoreboard so much


887
00:37:21,006 --> 00:37:23,986
that we give Scoreboard its
own top level navigation item.


888
00:37:24,066 --> 00:37:26,976
And right here beside the Plus
icon I can click on Scoreboard.


889
00:37:26,976 --> 00:37:31,436
And you can see this takes me
into Scoreboard for this server.


890
00:37:32,416 --> 00:37:34,106
So right now we have
a number of bots


891
00:37:34,176 --> 00:37:36,316
and those bots are
sorted by name.


892
00:37:37,306 --> 00:37:39,416
On the left you see we
have a list of the bots


893
00:37:39,416 --> 00:37:42,076
and all their states and on
the right we have a huge card


894
00:37:42,076 --> 00:37:43,676
with some great information
about this bot.


895
00:37:44,286 --> 00:37:47,246
Along the top you see huge kinds
for the errors, issues, warnings


896
00:37:47,246 --> 00:37:48,626
and test succeeds or fails.


897
00:37:49,596 --> 00:37:51,466
You see a list of the
commits that contributed


898
00:37:51,466 --> 00:37:53,666
to that integration and we just
cycle through those commits.


899
00:37:54,086 --> 00:37:57,136
And at the bottom you see the
device information for the tests


900
00:37:57,276 --> 00:37:58,266
that we run for this button.


901
00:38:00,646 --> 00:38:03,326
And as we cycle to the next bot,
you'll see some information.


902
00:38:03,996 --> 00:38:07,616
And it looks like for this
bot, a number of tests were run


903
00:38:07,616 --> 00:38:09,206
and at the bottom we
have a bunch of devices


904
00:38:09,206 --> 00:38:10,256
on which those tests run.


905
00:38:10,416 --> 00:38:13,426
And it seems like Brent kicked
off the Bubblegum bot just


906
00:38:13,426 --> 00:38:14,336
before he left the stage.


907
00:38:14,786 --> 00:38:16,626
And that bot just
succeeded and we can see


908
00:38:16,626 --> 00:38:19,476
that that has one analysis
issue and 27 passing test


909
00:38:19,476 --> 00:38:21,596
across the four devices that
are connected to our server.


910
00:38:21,776 --> 00:38:22,866
This was great.


911
00:38:24,816 --> 00:38:26,586
So let's switch back to slides.


912
00:38:32,536 --> 00:38:34,156
So that's the web application.


913
00:38:34,156 --> 00:38:36,816
The web application is designed
for everyone who is not inside


914
00:38:36,816 --> 00:38:39,186
of Xcode including developers
you may be away from Xcode


915
00:38:39,186 --> 00:38:40,146
at any particular time.


916
00:38:40,696 --> 00:38:42,846
You see the full list of bots
that exist on your server


917
00:38:43,756 --> 00:38:46,196
and you can sort and filter
that list of bots really easily.


918
00:38:47,336 --> 00:38:49,896
You see the same rich reports
that you see inside of Xcode.


919
00:38:49,896 --> 00:38:53,986
And of course you can dig and
drill through test history


920
00:38:53,986 --> 00:38:54,836
for your product just


921
00:38:54,836 --> 00:38:56,376
by scrolling a graft
box three times.


922
00:38:58,476 --> 00:39:00,046
And of course we have
the Archives page.


923
00:39:00,046 --> 00:39:01,956
And the Archives page is
a great way to ship builds


924
00:39:01,956 --> 00:39:02,846
to the rest of your team.


925
00:39:02,846 --> 00:39:04,906
Or to have one place the
people and your team can go


926
00:39:04,906 --> 00:39:07,266
to every morning to download the
latest build of your project.


927
00:39:07,266 --> 00:39:09,816
And, so these builds
can be flagged


928
00:39:09,896 --> 00:39:11,256
or deleted at your choosing.


929
00:39:11,366 --> 00:39:14,516
And of course we have
the Scoreboard feature.


930
00:39:14,666 --> 00:39:15,506
And Scoreboard is great.


931
00:39:15,626 --> 00:39:17,286
I would encourage you all
to set up a spare display


932
00:39:17,286 --> 00:39:19,596
in your development room or if
you like, Brent and his bedroom.


933
00:39:19,596 --> 00:39:23,186
And, you know, have
some fun with bot


934
00:39:23,216 --> 00:39:24,036
so that makes it really fun.


935
00:39:25,936 --> 00:39:28,416
So I did have some best
practices that I'd like to pass


936
00:39:28,416 --> 00:39:31,706
on based on our internal
usage of the Xcode Service


937
00:39:31,706 --> 00:39:33,566
with our small and
large development teams.


938
00:39:35,696 --> 00:39:37,366
The first is that
if you're sitting


939
00:39:37,366 --> 00:39:40,146
in the audience here thinking
yeah you know, this is well


940
00:39:40,146 --> 00:39:42,416
and good, this works great for,
you know, the small iOS app


941
00:39:42,416 --> 00:39:44,996
or the small mac or the apps
that are showing on stage


942
00:39:44,996 --> 00:39:46,446
or any app apart from my app,


943
00:39:47,136 --> 00:39:49,366
maybe your source code
is structured in a weird


944
00:39:49,366 --> 00:39:52,426
and wacky way where you have to
check out multiple nested copies


945
00:39:52,426 --> 00:39:56,286
of source code or you have
multiple cross reference Xcode


946
00:39:56,286 --> 00:39:58,836
project files or you know,
something pretty normal,


947
00:39:59,336 --> 00:40:00,916
then you'll be glad to hear


948
00:40:00,916 --> 00:40:03,186
that the Xcode Service
actually supports bots


949
00:40:03,256 --> 00:40:04,896
that are configured
against multiple source


950
00:40:04,896 --> 00:40:05,796
control repositories.


951
00:40:06,396 --> 00:40:08,856
And the answer that I would have
for you for that questions is


952
00:40:08,906 --> 00:40:11,996
to structure your code in
workspaces and if you think


953
00:40:11,996 --> 00:40:14,536
about this, this is the best way
that the server is going to be


954
00:40:14,536 --> 00:40:16,896
in a position where it can
reassemble your source code


955
00:40:17,236 --> 00:40:19,416
in a way that we can
build it the same way


956
00:40:19,416 --> 00:40:20,786
that you build the
source code locally.


957
00:40:22,516 --> 00:40:25,516
The second is more of a security
best practice and that is


958
00:40:25,516 --> 00:40:27,356
if you are connecting
your OS X Server


959
00:40:27,356 --> 00:40:31,216
to existing remote repositories
with SVN or Git repositories,


960
00:40:31,836 --> 00:40:33,636
I would strongly encourage
you to use role accounts


961
00:40:33,636 --> 00:40:34,416
for those repositories.


962
00:40:34,416 --> 00:40:35,736
That's just generally
a good practice.


963
00:40:35,896 --> 00:40:38,896
You don't necessarily want to be
entering your personal username


964
00:40:38,896 --> 00:40:41,716
and password onto the server and
having the server check out code


965
00:40:41,716 --> 00:40:43,966
as you that's why role
accounts were invented,


966
00:40:43,966 --> 00:40:45,226
they're really good
for that purpose.


967
00:40:45,876 --> 00:40:47,276
And also I would
also encourage you


968
00:40:47,276 --> 00:40:49,876
to use SSH public/private
key pair authentication


969
00:40:49,876 --> 00:40:51,956
and the OS X Server that
makes it really easy


970
00:40:52,406 --> 00:40:54,936
to generate new public/private
key pairs and with one click,


971
00:40:54,936 --> 00:40:56,936
copy the public key right to
your clipboard so you can paste


972
00:40:56,936 --> 00:40:58,686
into websites like
GitHub in just a second.


973
00:41:00,896 --> 00:41:02,276
The third best practice


974
00:41:02,276 --> 00:41:04,406
that I have is actually
just some suggested bots.


975
00:41:04,406 --> 00:41:06,136
These are bots that
we set up that we find


976
00:41:06,186 --> 00:41:07,196
to be really, really useful.


977
00:41:09,556 --> 00:41:12,136
So the first of those
is a non-commit bot


978
00:41:12,136 --> 00:41:14,356
and this one is fairly obvious
one but if you think about it,


979
00:41:14,356 --> 00:41:16,316
you will have the
supply in sitting


980
00:41:16,316 --> 00:41:19,286
in your office that's doing
building, that's doing testing,


981
00:41:19,606 --> 00:41:21,726
that's running static
analysis for your code base


982
00:41:21,936 --> 00:41:24,496
and running your tests for every
source control change that's


983
00:41:24,496 --> 00:41:26,176
made and that's a
really awesome feature.


984
00:41:26,956 --> 00:41:29,266
And if you have a
slightly larger project,


985
00:41:29,566 --> 00:41:31,266
you can adapt this
concept and say you would


986
00:41:31,266 --> 00:41:34,236
like to have a bot that's
doing this work every hour


987
00:41:34,276 --> 00:41:36,406
or once a day, that's a
really good thing to have.


988
00:41:37,976 --> 00:41:41,076
The second is a Nightly
bot, Nightly bots are great.


989
00:41:41,296 --> 00:41:44,996
Nightly bots can build and
archive your project just


990
00:41:44,996 --> 00:41:48,166
in the same way you do locally
and it will produce a signed Mac


991
00:41:48,366 --> 00:41:51,356
or a signed iOS Application
that your testers can come


992
00:41:51,356 --> 00:41:54,026
in the morning and click
in one link on the web app


993
00:41:54,026 --> 00:41:56,186
and download a build
ready to be tested.


994
00:41:56,366 --> 00:41:57,006
So this is great.


995
00:41:57,536 --> 00:42:01,796
And the third is if you are like
my team, we recently switched


996
00:42:01,796 --> 00:42:03,666
to Git and we're a little
branch happy right now


997
00:42:03,766 --> 00:42:05,026
so we branch for everything.


998
00:42:05,506 --> 00:42:08,806
And if you branch a lot then
bots are a perfect candidate


999
00:42:08,806 --> 00:42:09,356
for branching.


1000
00:42:09,796 --> 00:42:12,646
They're so light weight and
it's a great way to continue


1001
00:42:12,646 --> 00:42:13,536
to reap the benefits


1002
00:42:13,536 --> 00:42:15,256
of Continuous Integration
while you're using a


1003
00:42:15,256 --> 00:42:16,186
branching workflow.


1004
00:42:16,696 --> 00:42:18,346
So when you cut yourself
a branch for a feature,


1005
00:42:18,486 --> 00:42:20,566
create yourself a bunch of
bots and you're ready to go.


1006
00:42:21,516 --> 00:42:27,936
[ Applause ]


1007
00:42:28,436 --> 00:42:31,406
So the next question is, how
do you get these features?


1008
00:42:31,406 --> 00:42:33,596
And I'm guessing a lot
of you have already gone


1009
00:42:33,596 --> 00:42:35,756
and figured this out but let's
go through it just in case.


1010
00:42:36,436 --> 00:42:39,486
So the best way is to go to
developer.apple.com today


1011
00:42:39,486 --> 00:42:41,036
and you're going to
need three things.


1012
00:42:42,136 --> 00:42:45,306
The first thing is you
will need the preview list


1013
00:42:45,306 --> 00:42:47,196
of OS X Mavericks.


1014
00:42:48,026 --> 00:42:50,556
After that, you'll need the
preview the list of OS X Server


1015
00:42:50,556 --> 00:42:52,946
and OS X Server requires
some of the technologies


1016
00:42:52,946 --> 00:42:55,536
that shipping is part of
OS X Mavericks so you need


1017
00:42:55,536 --> 00:42:57,176
to be running server
on a Mavericks machine.


1018
00:42:58,746 --> 00:43:01,616
And after that, you need to
get yourself a copy of Xcode 5


1019
00:43:01,616 --> 00:43:05,356
and Xcode 5 will run happily
on Mountain Lion and Mavericks


1020
00:43:05,406 --> 00:43:07,826
and Xcode 5 will also run
happily on the same machine


1021
00:43:08,046 --> 00:43:09,616
or a separate machine from
the server if you want


1022
00:43:09,616 --> 00:43:11,376
to run a bot server locally,
that's perfectly fine.


1023
00:43:13,536 --> 00:43:17,426
After that, you can join
your existing ADC teams today


1024
00:43:17,426 --> 00:43:20,376
if you're a team agent or
team admin with no changes.


1025
00:43:20,406 --> 00:43:21,976
Just enter your Apple
ID and password,


1026
00:43:21,976 --> 00:43:24,096
your server will join your team
and everything is set to go.


1027
00:43:24,096 --> 00:43:28,156
And, of course, once
you've done that,


1028
00:43:28,156 --> 00:43:30,156
your server will obtain
signing certificates,


1029
00:43:30,196 --> 00:43:31,986
special signing certificates
for the server.


1030
00:43:31,986 --> 00:43:34,406
Your server will obtain
provisioning profiles


1031
00:43:34,406 --> 00:43:36,646
for all the devices that have
been registered for your team


1032
00:43:36,646 --> 00:43:38,646
and you can just plug the
devices that you already have


1033
00:43:38,746 --> 00:43:41,036
into your server and everything
will be ready and just work.


1034
00:43:41,036 --> 00:43:44,156
So you can quickly build iOS
projects just by plugging


1035
00:43:44,156 --> 00:43:45,536
in devices and entering
your Apple ID.


1036
00:43:48,656 --> 00:43:49,946
So, in summary, I hope--


1037
00:43:50,046 --> 00:43:52,876
today you've seen that the
Xcode Service and OS X Server


1038
00:43:52,876 --> 00:43:56,546
and Xcode 5 is really designed
to help you build better apps.


1039
00:43:56,946 --> 00:44:00,036
It's super simple to set up and
once you've set up these bots,


1040
00:44:00,686 --> 00:44:04,336
you can build and you can
catch build issues, errors,


1041
00:44:04,656 --> 00:44:07,206
run static analysis regularly
and importantly run your tests


1042
00:44:07,206 --> 00:44:09,906
and run your tests on simulators
on the Mac or run your test


1043
00:44:09,906 --> 00:44:12,326
in single or multiple threaded
devices to your server.


1044
00:44:13,116 --> 00:44:15,496
And the value of a server
is really keeping history


1045
00:44:15,496 --> 00:44:16,396
around for your project.


1046
00:44:16,396 --> 00:44:18,356
This is not something that
you can feasibly do locally


1047
00:44:18,356 --> 00:44:19,966
when you're running
Xcode, so being able


1048
00:44:19,966 --> 00:44:22,256
to keep all the build logs,
all the build products


1049
00:44:22,476 --> 00:44:24,136
and all the results
for your builds back


1050
00:44:24,136 --> 00:44:25,936
through time is a really
great asset for your team.


1051
00:44:27,406 --> 00:44:29,746
You'll be easily able to
distribute builds to your team


1052
00:44:29,746 --> 00:44:32,406
and the integration
with Xcode is amazing.


1053
00:44:32,406 --> 00:44:35,136
You'll have fully deep
integration in the IDE


1054
00:44:35,136 --> 00:44:37,416
with the Xcode Service
and of course


1055
00:44:37,416 --> 00:44:39,186
for everyone who's
not living in Xcode,


1056
00:44:39,186 --> 00:44:41,376
there's the web application and
of course there's Scoreboard


1057
00:44:41,376 --> 00:44:43,526
for the big screen television
presentation of the stuff.


1058
00:44:46,026 --> 00:44:47,906
So there are a couple
of related sessions


1059
00:44:47,906 --> 00:44:50,536
that I would highly encourage
you guys to go along and attend.


1060
00:44:50,796 --> 00:44:53,376
So later in the week we have
a dedicated testing session


1061
00:44:53,376 --> 00:44:54,366
for Xcode 5.


1062
00:44:54,826 --> 00:44:55,596
We'll be looking at some


1063
00:44:55,596 --> 00:44:57,816
of the really great new
testing features including some


1064
00:44:57,816 --> 00:44:59,646
of the integration with bots


1065
00:44:59,976 --> 00:45:02,406
and also there's a dedicated
source control session later


1066
00:45:02,406 --> 00:45:03,006
in the week too.


1067
00:45:03,286 --> 00:45:06,776
So with that, I would like to
thank you for you afternoon


1068
00:45:06,936 --> 00:45:08,176
and I hope you have a good week.


1069
00:45:09,516 --> 00:45:13,516
[ Applause ]


1070
00:45:14,016 --> 00:45:23,236
[ Silence ]

